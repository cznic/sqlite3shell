// Code generated by `$ sqlite2go -shell -o main_linux_amd64.go` - DO NOT EDIT.

/*

SQLite Is Public Domain

All of the code and documentation in SQLite has been dedicated to the public
domain by the authors. All code authors, and representatives of the companies
they work for, have signed affidavits dedicating their contributions to the
public domain and originals of those signed affidavits are stored in a firesafe
at the main offices of Hwaci. Anyone is free to copy, modify, publish, use,
compile, sell, or distribute the original SQLite code, either in source code
form or as a compiled binary, for any purpose, commercial or non-commercial,
and by any means.

The previous paragraph applies to the deliverable code and documentation in
SQLite - those parts of the SQLite library that you actually bundle and ship
with a larger application. Some scripts used as part of the build process (for
example the "configure" scripts generated by autoconf) might fall under other
open-source licenses. Nothing from these build scripts ever reaches the final
deliverable SQLite library, however, and so the licenses associated with those
scripts should not be a factor in assessing your rights to copy and use the
SQLite library.

All of the deliverable code in SQLite has been written from scratch. No code
has been taken from other projects or from the open internet. Every line of
code can be traced back to its original author, and all of those authors have
public domain dedications on file. So the SQLite code base is clean and is
uncontaminated with licensed code from other projects.

*/

package main

import (
	"os"
	"unsafe"

	"github.com/cznic/crt"
)

var _ unsafe.Pointer

const null = uintptr(0)

func main() {
	psz := unsafe.Sizeof(uintptr(0))
	argv := crt.MustCalloc((len(os.Args) + 1) * int(psz))
	p := argv
	for _, v := range os.Args {
		*(*uintptr)(unsafe.Pointer(p)) = crt.CString(v)
		p += psz
	}
	a := os.Environ()
	env := crt.MustCalloc((len(a) + 1) * int(psz))
	p = env
	for _, v := range a {
		*(*uintptr)(unsafe.Pointer(p)) = crt.CString(v)
		p += psz
	}
	*(*uintptr)(unsafe.Pointer(Xenviron)) = env
	X_start(crt.NewTLS(), int32(len(os.Args)), argv)
}

// X_start is defined at crt0.c:7:6
func X_start(tls crt.TLS, _argc int32, _argv uintptr /* **int8 */) {
	crt.X__register_stdfiles(tls, Xstdin, Xstdout, Xstderr, Xenviron)
	crt.X__builtin_exit(tls, Xmain(tls, _argc, _argv))
}

// Xstdin *void, escapes: false, crt0.c:5:6
var Xstdin = X__stdfiles

// Xstdout *void, escapes: false, crt0.c:5:31
var Xstdout = X__stdfiles + 8

// Xstderr *void, escapes: false, crt0.c:5:57
var Xstderr = X__stdfiles + 16

// Xenviron **int8, escapes: true, crt0.c:4:6
var Xenviron = bss

// Xmain is defined at shell.c:8001:18
func Xmain(tls crt.TLS, _argc int32, _argv uintptr /* **int8 */) (r int32) {
	esc := crt.MustMalloc(5152)
	var (
		_zErrMsg        = esc      // **int8
		_data           = esc + 16 // *TShellState = SShellState
		_zInitFile      uintptr    // *int8
		_i              int32
		_rc             int32
		_warnInmemoryDb int32
		_readStdin      int32
		_nCmd           int32
		_azCmd          uintptr // **int8
		_z              uintptr // *int8
		_n              int32
		_sz             int32
		_1n             int32
		_2sz            int32
		_3sz            int64
		_pVfs           uintptr // *Tsqlite3_vfs = Ssqlite3_vfs
		_4z             uintptr // *int8
		_zHome          uintptr // *int8
		_zHistory       uintptr // *int8
		_nHistory       int32
	)
	defer crt.Free(esc)
	*(*uintptr)(unsafe.Pointer(_zErrMsg)) = 0
	_zInitFile = 0
	_rc = int32(0)
	_warnInmemoryDb = int32(0)
	_readStdin = int32(1)
	_nCmd = int32(0)
	_azCmd = 0
	crt.Xsetvbuf(tls, Xstderr, null, int32(2), uint64(0))
	_2stdin_is_interactive = crt.Xisatty(tls, int32(0))
	_3stdout_is_console = crt.Xisatty(tls, int32(1))
	if crt.Xstrncmp(tls, Xsqlite3_sourceid(tls), ts /* "2017-10-24 18:55:49 1a584e499906..." */, uint64(60)) == int32(0) {
		goto _1
	}

	crt.Xfprintf(tls, Xstderr, ts+85 /* "SQLite header and source version..." */, Xsqlite3_sourceid(tls), ts /* "2017-10-24 18:55:49 1a584e499906..." */)
	crt.Xexit(tls, int32(1))
_1:
	_4main_init(tls, _data)
	if _argc < int32(1) || _argv == 0 || (*(*uintptr)(unsafe.Pointer(_argv))) == 0 {
		crt.X__assert_fail(tls, ts+134 /* "argc>=1 && argv && argv[0]" */, ts+161 /* "/home/jnml/src/github.com/cznic/..." */, uint32(8044), _1__func__)
	}
	_5Argv0 = *(*uintptr)(unsafe.Pointer(_argv))
	crt.X__sysv_signal(tls, int32(2), fp1(_6interrupt_handler))
	_i = int32(1)
_2:
	if _i >= _argc {
		goto _4
	}

	_z = *(*uintptr)(unsafe.Pointer(_argv + 8*uintptr(_i)))
	if int32(*(*int8)(unsafe.Pointer(_z))) == int32('-') {
		goto _5
	}

	if (*(*uintptr)(unsafe.Pointer(_data + 5080))) != 0 {
		goto _6
	}

	*(*uintptr)(unsafe.Pointer(_data + 5080)) = _z
	goto _7

_6:
	_readStdin = int32(0)
	_nCmd++
	_azCmd = crt.Xrealloc(tls, _azCmd, uint64(8)*uint64(_nCmd))
	if _azCmd != 0 {
		goto _8
	}

	crt.Xfprintf(tls, Xstderr, ts+247 /* "out of memory\n" */)
	crt.Xexit(tls, int32(1))
_8:
	*(*uintptr)(unsafe.Pointer(_azCmd + 8*uintptr(_nCmd-int32(1)))) = _z
_7:
_5:
	if int32(*(*int8)(unsafe.Pointer(_z + 1))) != int32('-') {
		goto _9
	}

	_z++
_9:
	if crt.Xstrcmp(tls, _z, ts+262 /* "-separator" */) != int32(0) && crt.Xstrcmp(tls, _z, ts+273 /* "-nullvalue" */) != int32(0) && crt.Xstrcmp(tls, _z, ts+284 /* "-newline" */) != int32(0) && crt.Xstrcmp(tls, _z, ts+293 /* "-cmd" */) != int32(0) {
		goto _10
	}

	_7cmdline_option_value(tls, _argc, _argv, preinc2(&_i))
	goto _11

_10:
	if crt.Xstrcmp(tls, _z, ts+298 /* "-init" */) != int32(0) {
		goto _12
	}

	_zInitFile = _7cmdline_option_value(tls, _argc, _argv, preinc2(&_i))
	goto _13

_12:
	if crt.Xstrcmp(tls, _z, ts+304 /* "-batch" */) != int32(0) {
		goto _14
	}

	_2stdin_is_interactive = int32(0)
	goto _15

_14:
	if crt.Xstrcmp(tls, _z, ts+311 /* "-heap" */) != int32(0) {
		goto _16
	}

	_7cmdline_option_value(tls, _argc, _argv, preinc2(&_i))
	goto _17

_16:
	if crt.Xstrcmp(tls, _z, ts+317 /* "-pagecache" */) != int32(0) {
		goto _18
	}

	_sz = int32(_8integerValue(tls, _7cmdline_option_value(tls, _argc, _argv, preinc2(&_i))))
	if _sz <= int32(70000) {
		goto _20
	}

	_sz = int32(70000)
_20:
	if _sz >= int32(0) {
		goto _21
	}

	_sz = int32(0)
_21:
	_n = int32(_8integerValue(tls, _7cmdline_option_value(tls, _argc, _argv, preinc2(&_i))))
	Xsqlite3_config(tls, int32(7), func() uintptr {
		if (_n > int32(0)) && (_sz > int32(0)) {
			return crt.Xmalloc(tls, uint64(_n*_sz))
		}
		return null
	}(), _sz, _n)
	{
		p := &(*(*uint32)(unsafe.Pointer(_data + 76)))
		*p = uint32(uint32(*p) | uint32(0x1))
	}
	goto _19

_18:
	if crt.Xstrcmp(tls, _z, ts+328 /* "-lookaside" */) != int32(0) {
		goto _22
	}

	_2sz = int32(_8integerValue(tls, _7cmdline_option_value(tls, _argc, _argv, preinc2(&_i))))
	if _2sz >= int32(0) {
		goto _24
	}

	_2sz = int32(0)
_24:
	_1n = int32(_8integerValue(tls, _7cmdline_option_value(tls, _argc, _argv, preinc2(&_i))))
	if _1n >= int32(0) {
		goto _25
	}

	_1n = int32(0)
_25:
	Xsqlite3_config(tls, int32(13), _2sz, _1n)
	if (_2sz * _1n) != int32(0) {
		goto _26
	}

	{
		p := &(*(*uint32)(unsafe.Pointer(_data + 76)))
		*p = uint32(uint32(*p) & uint32(4294967293))
	}
_26:
	goto _23

_22:
	if crt.Xstrcmp(tls, _z, ts+339 /* "-mmap" */) != int32(0) {
		goto _27
	}

	_3sz = _8integerValue(tls, _7cmdline_option_value(tls, _argc, _argv, preinc2(&_i)))
	Xsqlite3_config(tls, int32(22), _3sz, _3sz)
	goto _28

_27:
	if crt.Xstrcmp(tls, _z, ts+345 /* "-vfs" */) != int32(0) {
		goto _29
	}

	_pVfs = Xsqlite3_vfs_find(tls, _7cmdline_option_value(tls, _argc, _argv, preinc2(&_i)))
	if _pVfs == 0 {
		goto _30
	}

	Xsqlite3_vfs_register(tls, _pVfs, int32(1))
	goto _31

_30:
	crt.Xfprintf(tls, Xstderr, ts+350 /* "no such VFS: \"%s\"\n" */, *(*uintptr)(unsafe.Pointer(_argv + 8*uintptr(_i))))
	crt.Xexit(tls, int32(1))
_31:
_29:
_28:
_23:
_19:
_17:
_15:
_13:
_11:
	_i++
	goto _2

_4:
	if (*(*uintptr)(unsafe.Pointer(_data + 5080))) != 0 {
		goto _32
	}

	*(*uintptr)(unsafe.Pointer(_data + 5080)) = ts + 369 /* ":memory:" */
	_warnInmemoryDb = bool2int(_argc == int32(1))
_32:
	*(*uintptr)(unsafe.Pointer(_data + 32)) = Xstdout
	if crt.Xaccess(tls, *(*uintptr)(unsafe.Pointer(_data + 5080)), int32(0)) != int32(0) {
		goto _33
	}

	_9open_db(tls, _data, int32(0))
_33:
	_10process_sqliterc(tls, _data, _zInitFile)
	_i = int32(1)
_34:
	if _i >= _argc {
		goto _36
	}

	_4z = *(*uintptr)(unsafe.Pointer(_argv + 8*uintptr(_i)))
	if int32(*(*int8)(unsafe.Pointer(_4z))) == int32('-') {
		goto _37
	}

	goto _35

_37:
	if int32(*(*int8)(unsafe.Pointer(_4z + 1))) != int32('-') {
		goto _38
	}

	_4z++
_38:
	if crt.Xstrcmp(tls, _4z, ts+298 /* "-init" */) != int32(0) {
		goto _39
	}

	_i++
	goto _40

_39:
	if crt.Xstrcmp(tls, _4z, ts+378 /* "-html" */) != int32(0) {
		goto _41
	}

	*(*int32)(unsafe.Pointer(_data + 52)) = int32(4)
	goto _42

_41:
	if crt.Xstrcmp(tls, _4z, ts+384 /* "-list" */) != int32(0) {
		goto _43
	}

	*(*int32)(unsafe.Pointer(_data + 52)) = int32(2)
	goto _44

_43:
	if crt.Xstrcmp(tls, _4z, ts+390 /* "-quote" */) != int32(0) {
		goto _45
	}

	*(*int32)(unsafe.Pointer(_data + 52)) = int32(6)
	goto _46

_45:
	if crt.Xstrcmp(tls, _4z, ts+397 /* "-line" */) != int32(0) {
		goto _47
	}

	*(*int32)(unsafe.Pointer(_data + 52)) = int32(0)
	goto _48

_47:
	if crt.Xstrcmp(tls, _4z, ts+403 /* "-column" */) != int32(0) {
		goto _49
	}

	*(*int32)(unsafe.Pointer(_data + 52)) = int32(1)
	goto _50

_49:
	if crt.Xstrcmp(tls, _4z, ts+411 /* "-csv" */) != int32(0) {
		goto _51
	}

	*(*int32)(unsafe.Pointer(_data + 52)) = int32(8)
	crt.Xmemcpy(tls, _data+118, ts+416 /* "," */, uint64(2))
	goto _52

_51:
	if crt.Xstrcmp(tls, _4z, ts+418 /* "-ascii" */) != int32(0) {
		goto _53
	}

	*(*int32)(unsafe.Pointer(_data + 52)) = int32(10)
	Xsqlite3_snprintf(tls, int32(20), _data+118, ts+425 /* "\x1f" */)
	Xsqlite3_snprintf(tls, int32(20), _data+138, ts+427 /* "\x1e" */)
	goto _54

_53:
	if crt.Xstrcmp(tls, _4z, ts+262 /* "-separator" */) != int32(0) {
		goto _55
	}

	Xsqlite3_snprintf(tls, int32(20), _data+118, ts+429 /* "%s" */, _7cmdline_option_value(tls, _argc, _argv, preinc2(&_i)))
	goto _56

_55:
	if crt.Xstrcmp(tls, _4z, ts+284 /* "-newline" */) != int32(0) {
		goto _57
	}

	Xsqlite3_snprintf(tls, int32(20), _data+138, ts+429 /* "%s" */, _7cmdline_option_value(tls, _argc, _argv, preinc2(&_i)))
	goto _58

_57:
	if crt.Xstrcmp(tls, _4z, ts+273 /* "-nullvalue" */) != int32(0) {
		goto _59
	}

	Xsqlite3_snprintf(tls, int32(20), _data+960, ts+429 /* "%s" */, _7cmdline_option_value(tls, _argc, _argv, preinc2(&_i)))
	goto _60

_59:
	if crt.Xstrcmp(tls, _4z, ts+432 /* "-header" */) != int32(0) {
		goto _61
	}

	*(*int32)(unsafe.Pointer(_data + 68)) = int32(1)
	goto _62

_61:
	if crt.Xstrcmp(tls, _4z, ts+440 /* "-noheader" */) != int32(0) {
		goto _63
	}

	*(*int32)(unsafe.Pointer(_data + 68)) = int32(0)
	goto _64

_63:
	if crt.Xstrcmp(tls, _4z, ts+450 /* "-echo" */) != int32(0) {
		goto _65
	}

	{
		p := &(*(*uint32)(unsafe.Pointer(_data + 76)))
		*p = uint32(uint32(*p) | uint32(0x40))
	}
	goto _66

_65:
	if crt.Xstrcmp(tls, _4z, ts+456 /* "-eqp" */) != int32(0) {
		goto _67
	}

	*(*int32)(unsafe.Pointer(_data + 12)) = int32(1)
	goto _68

_67:
	if crt.Xstrcmp(tls, _4z, ts+461 /* "-eqpfull" */) != int32(0) {
		goto _69
	}

	*(*int32)(unsafe.Pointer(_data + 12)) = int32(2)
	goto _70

_69:
	if crt.Xstrcmp(tls, _4z, ts+470 /* "-stats" */) != int32(0) {
		goto _71
	}

	*(*int32)(unsafe.Pointer(_data + 16)) = int32(1)
	goto _72

_71:
	if crt.Xstrcmp(tls, _4z, ts+477 /* "-scanstats" */) != int32(0) {
		goto _73
	}

	*(*int32)(unsafe.Pointer(_data + 20)) = int32(1)
	goto _74

_73:
	if crt.Xstrcmp(tls, _4z, ts+488 /* "-backslash" */) != int32(0) {
		goto _75
	}

	{
		p := &(*(*uint32)(unsafe.Pointer(_data + 76)))
		*p = uint32(uint32(*p) | uint32(0x4))
	}
	goto _76

_75:
	if crt.Xstrcmp(tls, _4z, ts+499 /* "-bail" */) != int32(0) {
		goto _77
	}

	_11bail_on_error = int32(1)
	goto _78

_77:
	if crt.Xstrcmp(tls, _4z, ts+505 /* "-version" */) != int32(0) {
		goto _79
	}

	crt.Xprintf(tls, ts+514 /* "%s %s\n" */, Xsqlite3_libversion(tls), Xsqlite3_sourceid(tls))
	return int32(0)

	goto _80

_79:
	if crt.Xstrcmp(tls, _4z, ts+521 /* "-interactive" */) != int32(0) {
		goto _81
	}

	_2stdin_is_interactive = int32(1)
	goto _82

_81:
	if crt.Xstrcmp(tls, _4z, ts+304 /* "-batch" */) != int32(0) {
		goto _83
	}

	_2stdin_is_interactive = int32(0)
	goto _84

_83:
	if crt.Xstrcmp(tls, _4z, ts+311 /* "-heap" */) != int32(0) {
		goto _85
	}

	_i++
	goto _86

_85:
	if crt.Xstrcmp(tls, _4z, ts+317 /* "-pagecache" */) != int32(0) {
		goto _87
	}

	_i = int32(_i + int32(2))
	goto _88

_87:
	if crt.Xstrcmp(tls, _4z, ts+328 /* "-lookaside" */) != int32(0) {
		goto _89
	}

	_i = int32(_i + int32(2))
	goto _90

_89:
	if crt.Xstrcmp(tls, _4z, ts+339 /* "-mmap" */) != int32(0) {
		goto _91
	}

	_i++
	goto _92

_91:
	if crt.Xstrcmp(tls, _4z, ts+345 /* "-vfs" */) != int32(0) {
		goto _93
	}

	_i++
	goto _94

_93:
	if crt.Xstrcmp(tls, _4z, ts+534 /* "-help" */) != int32(0) {
		goto _95
	}

	_12usage(tls, int32(1))
	goto _96

_95:
	if crt.Xstrcmp(tls, _4z, ts+293 /* "-cmd" */) != int32(0) {
		goto _97
	}

	if _i != (_argc - int32(1)) {
		goto _99
	}

	goto _36

_99:
	_4z = _7cmdline_option_value(tls, _argc, _argv, preinc2(&_i))
	if int32(*(*int8)(unsafe.Pointer(_4z))) != int32('.') {
		goto _100
	}

	_rc = _13do_meta_command(tls, _4z, _data)
	if _rc == 0 || _11bail_on_error == 0 {
		goto _102
	}

	if _rc == int32(2) {
		return int32(0)
	}

	return _rc

_102:
	goto _101

_100:
	_9open_db(tls, _data, int32(0))
	_rc = _14shell_exec(tls, *(*uintptr)(unsafe.Pointer(_data)), _4z, fp3(_15shell_callback), _data, _zErrMsg)
	if (*(*uintptr)(unsafe.Pointer(_zErrMsg))) == 0 {
		goto _103
	}

	crt.Xfprintf(tls, Xstderr, ts+540 /* "Error: %s\n" */, *(*uintptr)(unsafe.Pointer(_zErrMsg)))
	if _11bail_on_error == 0 {
		goto _105
	}

	if _rc != int32(0) {
		return _rc
	}

	return int32(1)

_105:
	goto _104

_103:
	if _rc == int32(0) {
		goto _106
	}

	crt.Xfprintf(tls, Xstderr, ts+551 /* "Error: unable to process SQL \"%s..." */, _4z)
	if _11bail_on_error == 0 {
		goto _107
	}

	return _rc

_107:
_106:
_104:
_101:
	goto _98

_97:
	crt.Xfprintf(tls, Xstderr, ts+586 /* "%s: Error: unknown option: %s\n" */, _5Argv0, _4z)
	crt.Xfprintf(tls, Xstderr, ts+617 /* "Use -help for a list of options...." */)
	return int32(1)

_98:
_96:
_94:
_92:
_90:
_88:
_86:
_84:
_82:
_80:
_78:
_76:
_74:
_72:
_70:
_68:
_66:
_64:
_62:
_60:
_58:
_56:
_54:
_52:
_50:
_48:
_46:
_44:
_42:
_40:
	*(*int32)(unsafe.Pointer(_data + 56)) = *(*int32)(unsafe.Pointer(_data + 52))

_35:
	_i++
	goto _34

_36:
	if _readStdin != 0 {
		goto _108
	}

	_i = int32(0)
_110:
	if _i >= _nCmd {
		goto _112
	}

	if int32(*(*int8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_azCmd + 8*uintptr(_i)))))) != int32('.') {
		goto _113
	}

	_rc = _13do_meta_command(tls, *(*uintptr)(unsafe.Pointer(_azCmd + 8*uintptr(_i))), _data)
	if _rc == 0 {
		goto _115
	}

	if _rc == int32(2) {
		return int32(0)
	}

	return _rc

_115:
	goto _114

_113:
	_9open_db(tls, _data, int32(0))
	_rc = _14shell_exec(tls, *(*uintptr)(unsafe.Pointer(_data)), *(*uintptr)(unsafe.Pointer(_azCmd + 8*uintptr(_i))), fp3(_15shell_callback), _data, _zErrMsg)
	if (*(*uintptr)(unsafe.Pointer(_zErrMsg))) == 0 {
		goto _116
	}

	crt.Xfprintf(tls, Xstderr, ts+540 /* "Error: %s\n" */, *(*uintptr)(unsafe.Pointer(_zErrMsg)))
	if _rc != int32(0) {
		return _rc
	}

	return int32(1)

	goto _117

_116:
	if _rc == int32(0) {
		goto _118
	}

	crt.Xfprintf(tls, Xstderr, ts+651 /* "Error: unable to process SQL: %s..." */, *(*uintptr)(unsafe.Pointer(_azCmd + 8*uintptr(_i))))
	return _rc

_118:
_117:
_114:
	_i++
	goto _110

_112:
	crt.Xfree(tls, _azCmd)
	goto _109

_108:
	if _2stdin_is_interactive == 0 {
		goto _119
	}

	_zHistory = 0
	crt.Xprintf(tls, ts+685 /* "SQLite version %s %.19s\nEnter \"...." */, Xsqlite3_libversion(tls), Xsqlite3_sourceid(tls))
	if _warnInmemoryDb == 0 {
		goto _121
	}

	crt.Xprintf(tls, ts+741 /* "Connected to a " */)
	_16printBold(tls, ts+757 /* "transient in-memory database" */)
	crt.Xprintf(tls, ts+786 /* ".\nUse \".open FILENAME\" to reopen..." */)
_121:
	_zHome = _17find_home_dir(tls, int32(0))
	if _zHome == 0 {
		goto _122
	}

	_nHistory = _18strlen30(tls, _zHome) + int32(20)
	if set4(&_zHistory, crt.Xmalloc(tls, uint64(_nHistory))) == 0 {
		goto _123
	}

	Xsqlite3_snprintf(tls, _nHistory, _zHistory, ts+846 /* "%s/.sqlite_history" */, _zHome)
_123:
_122:
	if _zHistory == 0 {
		goto _124
	}

_124:
	_rc = _19process_input(tls, _data, null)
	if _zHistory == 0 {
		goto _125
	}

	crt.Xfree(tls, _zHistory)
_125:
	goto _120

_119:
	_rc = _19process_input(tls, _data, Xstdin)
_120:
_109:
	_20set_table_name(tls, _data, null)
	if (*(*uintptr)(unsafe.Pointer(_data))) == 0 {
		goto _126
	}

	Xsqlite3_close(tls, *(*uintptr)(unsafe.Pointer(_data)))
_126:
	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_data + 5088)))
	_17find_home_dir(tls, int32(1))
	return _rc
}

// X__stdfiles [3]uintptr, escapes: true, crt0.c:3:15
var X__stdfiles = bss + 8

// _1__func__ [5]int8, escapes: true, shell.c:8001:45
var _1__func__ = ds

type SShellState struct {
	Xdb             uintptr // *Ssqlite3
	XautoExplain    int32
	XautoEQP        int32
	XstatsOn        int32
	XscanstatsOn    int32
	XoutCount       int32
	Xcnt            int32
	Xout            uintptr // *S_IO_FILE
	XtraceOut       uintptr // *S_IO_FILE
	XnErr           int32
	Xmode           int32
	XcMode          int32
	XnormalMode     int32
	XwritableSchema int32
	XshowHeader     int32
	XnCheck         int32
	XshellFlgs      uint32
	XzDestTable     uintptr // *int8
	XzTestcase      [30]int8
	XcolSeparator   [20]int8
	XrowSeparator   [20]int8
	XcolWidth       [100]int32
	XactualWidth    [100]int32
	XnullValue      [20]int8
	Xoutfile        [4096]int8
	XzDbFilename    uintptr // *int8
	XzFreeOnClose   uintptr // *int8
	XzVfs           uintptr // *int8
	XpStmt          uintptr // *Ssqlite3_stmt
	XpLog           uintptr // *S_IO_FILE
	XaiIndent       uintptr // *int32
	XnIndent        int32
	XiIndent        int32
}

type Ssqlite3_vfs struct {
	XiVersion          int32
	XszOsFile          int32
	XmxPathname        int32
	XpNext             uintptr // *Ssqlite3_vfs
	XzName             uintptr // *int8
	XpAppData          uintptr // uintptr
	XxOpen             uintptr // *func(crt.TLS, uintptr, uintptr, uintptr, int32, uintptr) int32
	XxDelete           uintptr // *func(crt.TLS, uintptr, uintptr, int32) int32
	XxAccess           uintptr // *func(crt.TLS, uintptr, uintptr, int32, uintptr) int32
	XxFullPathname     uintptr // *func(crt.TLS, uintptr, uintptr, int32, uintptr) int32
	XxDlOpen           uintptr // *func(crt.TLS, uintptr, uintptr) uintptr
	XxDlError          uintptr // *func(crt.TLS, uintptr, int32, uintptr)
	XxDlSym            uintptr // *func(crt.TLS, uintptr, uintptr, uintptr) uintptr
	XxDlClose          uintptr // *func(crt.TLS, uintptr, uintptr)
	XxRandomness       uintptr // *func(crt.TLS, uintptr, int32, uintptr) int32
	XxSleep            uintptr // *func(crt.TLS, uintptr, int32) int32
	XxCurrentTime      uintptr // *func(crt.TLS, uintptr, uintptr) int32
	XxGetLastError     uintptr // *func(crt.TLS, uintptr, int32, uintptr) int32
	XxCurrentTimeInt64 uintptr // *func(crt.TLS, uintptr, uintptr) int32
	XxSetSystemCall    uintptr // *func(crt.TLS, uintptr, uintptr, uintptr) int32
	XxGetSystemCall    uintptr // *func(crt.TLS, uintptr, uintptr) uintptr
	XxNextSystemCall   uintptr // *func(crt.TLS, uintptr, uintptr) uintptr
}

// _2stdin_is_interactive int32, escapes: false, shell.c:370:12
var _2stdin_is_interactive = int32(1)

// _3stdout_is_console int32, escapes: false, shell.c:377:12
var _3stdout_is_console = int32(1)

// Xsqlite3_sourceid is defined at sqlite3.c:205351:23
func Xsqlite3_sourceid(tls crt.TLS) (r uintptr /* *int8 */) {
	return ts /* "2017-10-24 18:55:49 1a584e499906..." */
}

// _4main_init is defined at shell.c:7944:13
func _4main_init(tls crt.TLS, _data uintptr /* *TShellState = SShellState */) {
	crt.Xmemset(tls, _data, int32(0), uint64(5136))
	*(*int32)(unsafe.Pointer(_data + 60)) = set5(&(*(*int32)(unsafe.Pointer(_data + 56))), set5(&(*(*int32)(unsafe.Pointer(_data + 52))), int32(2)))
	*(*int32)(unsafe.Pointer(_data + 8)) = int32(1)
	crt.Xmemcpy(tls, _data+118, ts+865 /* "|" */, uint64(2))
	crt.Xmemcpy(tls, _data+138, ts+867 /* "\n" */, uint64(2))
	*(*int32)(unsafe.Pointer(_data + 68)) = int32(0)
	*(*uint32)(unsafe.Pointer(_data + 76)) = uint32(0x2)
	Xsqlite3_config(tls, int32(17), int32(1))
	Xsqlite3_config(tls, int32(16), fp6(_21shellLog), _data)
	Xsqlite3_config(tls, int32(2))
	Xsqlite3_snprintf(tls, int32(20), _22mainPrompt, ts+869 /* "sqlite> " */)
	Xsqlite3_snprintf(tls, int32(20), _23continuePrompt, ts+878 /* "   ...> " */)
}

// _5Argv0 *int8, escapes: false, shell.c:395:13
var _5Argv0 uintptr

// _6interrupt_handler is defined at shell.c:2572:13
func _6interrupt_handler(tls crt.TLS, _NotUsed int32) {
	_24seenInterrupt++
	if _24seenInterrupt <= int32(2) {
		goto _1
	}

	crt.Xexit(tls, int32(1))
_1:
	if _25globalDb == 0 {
		goto _2
	}

	Xsqlite3_interrupt(tls, _25globalDb)
_2:
}

// _7cmdline_option_value is defined at shell.c:7983:13
func _7cmdline_option_value(tls crt.TLS, _argc int32, _argv uintptr /* **int8 */, _i int32) (r uintptr /* *int8 */) {
	if _i != _argc {
		goto _1
	}

	crt.Xfprintf(tls, Xstderr, ts+887 /* "%s: Error: missing argument to %..." */, *(*uintptr)(unsafe.Pointer(_argv)), *(*uintptr)(unsafe.Pointer(_argv + 8*uintptr(_argc-int32(1)))))
	crt.Xexit(tls, int32(1))
_1:
	return *(*uintptr)(unsafe.Pointer(_argv + 8*uintptr(_i)))
}

// _8integerValue is defined at shell.c:4393:22
func _8integerValue(tls crt.TLS, _zArg uintptr /* *int8 */) (r int64) {
	var (
		_v     int64
		_i     int32
		_isNeg int32
		_x     int32
	)
	_v = int64(0)
	_isNeg = int32(0)
	if int32(*(*int8)(unsafe.Pointer(_zArg))) != int32('-') {
		goto _1
	}

	_isNeg = int32(1)
	_zArg++
	goto _2

_1:
	if int32(*(*int8)(unsafe.Pointer(_zArg))) != int32('+') {
		goto _3
	}

	_zArg++
_3:
_2:
	if int32(*(*int8)(unsafe.Pointer(_zArg))) != int32('0') || int32(*(*int8)(unsafe.Pointer(_zArg + 1))) != int32('x') {
		goto _4
	}

	_zArg += uintptr(2)
_6:
	if set5(&_x, _27hexDigitValue(tls, *(*int8)(unsafe.Pointer(_zArg)))) < int32(0) {
		goto _7
	}

	_v = (_v << (uint(4) % 64)) + int64(_x)
	_zArg++
	goto _6

_7:
	goto _5

_4:
_8:
	if int32(*(*uint16)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(crt.X__ctype_b_loc(tls))) + 2*uintptr(int32(uint8(*(*int8)(unsafe.Pointer(_zArg))))))))&int32(2048) == 0 {
		goto _9
	}

	_v = ((_v * int64(10)) + int64(*(*int8)(unsafe.Pointer(_zArg)))) - int64('0')
	_zArg++
	goto _8

_9:
_5:
	_i = int32(0)
_10:
	if _i >= int32(9) {
		goto _12
	}

	if Xsqlite3_stricmp(tls, *(*uintptr)(unsafe.Pointer(_26aMult + 16*uintptr(_i))), _zArg) != int32(0) {
		goto _13
	}

	_v = int64(_v * int64(*(*int32)(unsafe.Pointer((_26aMult + 16*uintptr(_i)) + 8))))
	goto _12

_13:
	_i++
	goto _10

_12:
	if _isNeg != 0 {
		return -_v
	}

	return _v
}

// Xsqlite3_config is defined at sqlite3.c:142338:16
func Xsqlite3_config(tls crt.TLS, _op int32, ap ...interface{}) (r int32) {
	var (
		_ap     *[]interface{} // Tva_list = T__gnuc_va_list = T__...a_list = *struct{X_ [2]uintptr;}
		_rc     int32
		_szMmap int64
		_mxMmap int64
	)
	_rc = int32(0)
	if (*(*int32)(unsafe.Pointer(_28sqlite3Config + 356))) == 0 {
		goto _1
	}

	return _29sqlite3MisuseError(tls, int32(142344))

_1:
	{
		x := ap
		_ap = &x
	}
	switch _op {
	case int32(1):
		goto _3
	case int32(2):
		goto _4
	case int32(3):
		goto _5
	case int32(10):
		goto _6
	case int32(11):
		goto _7
	case int32(4):
		goto _8
	case int32(5):
		goto _9
	case int32(9):
		goto _10
	case int32(27):
		goto _11
	case int32(7):
		goto _12
	case int32(24):
		goto _13
	case int32(14):
		goto _14
	case int32(15):
		goto _15
	case int32(18):
		goto _16
	case int32(19):
		goto _17
	case int32(13):
		goto _18
	case int32(16):
		goto _19
	case int32(17):
		goto _20
	case int32(20):
		goto _21
	case int32(22):
		goto _22
	case int32(25):
		goto _23
	case int32(26):
		goto _24
	default:
		goto _25
	}
_3:
	*(*int32)(unsafe.Pointer(_28sqlite3Config + 4)) = int32(0)
	*(*int32)(unsafe.Pointer(_28sqlite3Config + 8)) = int32(0)
	goto _2

_4:
	*(*int32)(unsafe.Pointer(_28sqlite3Config + 4)) = int32(1)
	*(*int32)(unsafe.Pointer(_28sqlite3Config + 8)) = int32(0)
	goto _2

_5:
	*(*int32)(unsafe.Pointer(_28sqlite3Config + 4)) = int32(1)
	*(*int32)(unsafe.Pointer(_28sqlite3Config + 8)) = int32(1)
	goto _2

_6:
	*(*Ssqlite3_mutex_methods)(unsafe.Pointer(_28sqlite3Config + 112)) = *(*Ssqlite3_mutex_methods)(unsafe.Pointer(crt.VAuintptr(_ap)))
	goto _2

_7:
	*(*Ssqlite3_mutex_methods)(unsafe.Pointer(crt.VAuintptr(_ap))) = *(*Ssqlite3_mutex_methods)(unsafe.Pointer(_28sqlite3Config + 112))
	goto _2

_8:
	*(*Ssqlite3_mem_methods)(unsafe.Pointer(_28sqlite3Config + 48)) = *(*Ssqlite3_mem_methods)(unsafe.Pointer(crt.VAuintptr(_ap)))
	goto _2

_9:
	if (*(*uintptr)(unsafe.Pointer(_28sqlite3Config + 48))) != 0 {
		goto _26
	}

	_30sqlite3MemSetDefault(tls)
_26:
	*(*Ssqlite3_mem_methods)(unsafe.Pointer(crt.VAuintptr(_ap))) = *(*Ssqlite3_mem_methods)(unsafe.Pointer(_28sqlite3Config + 48))
	goto _2

_10:
	*(*int32)(unsafe.Pointer(_28sqlite3Config)) = crt.VAint32(_ap)
	goto _2

_11:
	*(*int32)(unsafe.Pointer(_28sqlite3Config + 20)) = crt.VAint32(_ap)
	goto _2

_12:
	*(*uintptr)(unsafe.Pointer(_28sqlite3Config + 328)) = crt.VAuintptr(_ap)
	*(*int32)(unsafe.Pointer(_28sqlite3Config + 336)) = crt.VAint32(_ap)
	*(*int32)(unsafe.Pointer(_28sqlite3Config + 340)) = crt.VAint32(_ap)
	goto _2

_13:
	*(*int32)(unsafe.Pointer(crt.VAuintptr(_ap))) = (_31sqlite3HeaderSizeBtree(tls) + _32sqlite3HeaderSizePcache(tls)) + _33sqlite3HeaderSizePcache1(tls)
	goto _2

_14:
	goto _2

_15:
	_rc = int32(1)
	goto _2

_16:
	*(*Ssqlite3_pcache_methods2)(unsafe.Pointer(_28sqlite3Config + 184)) = *(*Ssqlite3_pcache_methods2)(unsafe.Pointer(crt.VAuintptr(_ap)))
	goto _2

_17:
	if (*(*uintptr)(unsafe.Pointer((_28sqlite3Config + 184) + 16))) != 0 {
		goto _27
	}

	_34sqlite3PCacheSetDefault(tls)
_27:
	*(*Ssqlite3_pcache_methods2)(unsafe.Pointer(crt.VAuintptr(_ap))) = *(*Ssqlite3_pcache_methods2)(unsafe.Pointer(_28sqlite3Config + 184))
	goto _2

_18:
	*(*int32)(unsafe.Pointer(_28sqlite3Config + 32)) = crt.VAint32(_ap)
	*(*int32)(unsafe.Pointer(_28sqlite3Config + 36)) = crt.VAint32(_ap)
	goto _2

_19:
	*(*uintptr)(unsafe.Pointer(_28sqlite3Config + 392)) = crt.VAuintptr(_ap)
	*(*uintptr)(unsafe.Pointer(_28sqlite3Config + 400)) = crt.VAuintptr(_ap)
	goto _2

_20:
	*(*int32)(unsafe.Pointer(_28sqlite3Config + 12)) = crt.VAint32(_ap)
	goto _2

_21:
	*(*int32)(unsafe.Pointer(_28sqlite3Config + 16)) = crt.VAint32(_ap)
	goto _2

_22:
	_szMmap = crt.VAint64(_ap)
	_mxMmap = crt.VAint64(_ap)
	if _mxMmap >= int64(0) && _mxMmap <= int64(0x7fff0000) {
		goto _28
	}

	_mxMmap = int64(0x7fff0000)
_28:
	if _szMmap >= int64(0) {
		goto _29
	}

	_szMmap = int64(0)
_29:
	if _szMmap <= _mxMmap {
		goto _30
	}

	_szMmap = _mxMmap
_30:
	*(*int64)(unsafe.Pointer(_28sqlite3Config + 320)) = _mxMmap
	*(*int64)(unsafe.Pointer(_28sqlite3Config + 312)) = _szMmap
	goto _2

_23:
	*(*uint32)(unsafe.Pointer(_28sqlite3Config + 352)) = crt.VAuint32(_ap)
	goto _2

_24:
	*(*int32)(unsafe.Pointer(_28sqlite3Config + 40)) = crt.VAint32(_ap)
	goto _2

_25:
	_rc = int32(1)
	goto _2

_2:
	_ap = nil
	return _rc
}

// Xsqlite3_vfs_find is defined at sqlite3.c:21027:24
func Xsqlite3_vfs_find(tls crt.TLS, _zVfs uintptr /* *int8 */) (r uintptr /* *Tsqlite3_vfs = Ssqlite3_vfs */) {
	var (
		_pVfs  uintptr // *Tsqlite3_vfs = Ssqlite3_vfs
		_mutex uintptr // *Tsqlite3_mutex = Ssqlite3_mutex
		_rc    int32
	)
	_pVfs = 0
	_rc = Xsqlite3_initialize(tls)
	if _rc == 0 {
		goto _1
	}

	return null

_1:
	_mutex = _35sqlite3MutexAlloc(tls, int32(2))
	Xsqlite3_mutex_enter(tls, _mutex)
	_pVfs = _36vfsList
_2:
	if _pVfs == 0 {
		goto _4
	}

	if _zVfs != 0 {
		goto _5
	}

	goto _4

_5:
	if crt.Xstrcmp(tls, _zVfs, *(*uintptr)(unsafe.Pointer(_pVfs + 24))) != int32(0) {
		goto _6
	}

	goto _4

_6:
	_pVfs = *(*uintptr)(unsafe.Pointer(_pVfs + 16))
	goto _2

_4:
	Xsqlite3_mutex_leave(tls, _mutex)
	return _pVfs
}

// Xsqlite3_vfs_register is defined at sqlite3.c:21073:16
func Xsqlite3_vfs_register(tls crt.TLS, _pVfs uintptr /* *Tsqlite3_vfs = Ssqlite3_vfs */, _makeDflt int32) (r int32) {
	var (
		_mutex uintptr // *Tsqlite3_mutex = Ssqlite3_mutex
		_rc    int32
	)
	_rc = Xsqlite3_initialize(tls)
	if _rc == 0 {
		goto _1
	}

	return _rc

_1:
	_mutex = _35sqlite3MutexAlloc(tls, int32(2))
	Xsqlite3_mutex_enter(tls, _mutex)
	_37vfsUnlink(tls, _pVfs)
	if _makeDflt == 0 && _36vfsList != 0 {
		goto _2
	}

	*(*uintptr)(unsafe.Pointer(_pVfs + 16)) = _36vfsList
	_36vfsList = _pVfs
	goto _3

_2:
	*(*uintptr)(unsafe.Pointer(_pVfs + 16)) = *(*uintptr)(unsafe.Pointer(_36vfsList + 16))
	*(*uintptr)(unsafe.Pointer(_36vfsList + 16)) = _pVfs
_3:
	Xsqlite3_mutex_leave(tls, _mutex)
	return int32(0)
}

// _9open_db is defined at shell.c:4233:13
func _9open_db(tls crt.TLS, _p uintptr /* *TShellState = SShellState */, _keepAlive int32) {
	if (*(*uintptr)(unsafe.Pointer(_p))) != 0 {
		goto _1
	}

	Xsqlite3_initialize(tls)
	Xsqlite3_open(tls, *(*uintptr)(unsafe.Pointer(_p + 5080)), _p)
	_25globalDb = *(*uintptr)(unsafe.Pointer(_p))
	if (*(*uintptr)(unsafe.Pointer(_p))) != 0 && int32(0) == Xsqlite3_errcode(tls, *(*uintptr)(unsafe.Pointer(_p))) {
		goto _2
	}

	crt.Xfprintf(tls, Xstderr, ts+922 /* "Error: unable to open database \"..." */, *(*uintptr)(unsafe.Pointer(_p + 5080)), Xsqlite3_errmsg(tls, *(*uintptr)(unsafe.Pointer(_p))))
	if _keepAlive == 0 {
		goto _3
	}

	return

_3:
	crt.Xexit(tls, int32(1))
_2:
	Xsqlite3_enable_load_extension(tls, *(*uintptr)(unsafe.Pointer(_p)), int32(1))
	Xsqlite3_fileio_init(tls, *(*uintptr)(unsafe.Pointer(_p)), null, null)
	Xsqlite3_shathree_init(tls, *(*uintptr)(unsafe.Pointer(_p)), null, null)
	Xsqlite3_completion_init(tls, *(*uintptr)(unsafe.Pointer(_p)), null, null)
	Xsqlite3_create_function(tls, *(*uintptr)(unsafe.Pointer(_p)), ts+963 /* "shell_add_schema" */, int32(2), int32(1), null, fp6(_38shellAddSchemaName), null, null)
_1:
}

// _10process_sqliterc is defined at shell.c:7859:13
func _10process_sqliterc(tls crt.TLS, _p uintptr /* *TShellState = SShellState */, _sqliterc_override uintptr /* *int8 */) {
	var (
		_home_dir uintptr // *int8
		_sqliterc uintptr // *int8
		_zBuf     uintptr // *int8
		_in       uintptr // *TFILE = S_IO_FILE
	)
	_home_dir = 0
	_sqliterc = _sqliterc_override
	_zBuf = 0
	_in = 0
	if _sqliterc != null {
		goto _1
	}

	_home_dir = _17find_home_dir(tls, int32(0))
	if _home_dir != 0 {
		goto _2
	}

	crt.Xfprintf(tls, Xstderr, ts+980 /* "-- warning: cannot find home dir..." */)
	return

_2:
	Xsqlite3_initialize(tls)
	_zBuf = Xsqlite3_mprintf(tls, ts+1045 /* "%s/.sqliterc" */, _home_dir)
	_sqliterc = _zBuf
_1:
	_in = crt.Xfopen64(tls, _sqliterc, ts+1058 /* "rb" */)
	if _in == 0 {
		goto _3
	}

	if _2stdin_is_interactive == 0 {
		goto _4
	}

	crt.Xfprintf(tls, Xstderr, ts+1061 /* "-- Loading resources from %s\n" */, _sqliterc)
_4:
	_19process_input(tls, _p, _in)
	crt.Xfclose(tls, _in)
_3:
	Xsqlite3_free(tls, _zBuf)
}

// Xsqlite3_snprintf is defined at sqlite3.c:26570:17
func Xsqlite3_snprintf(tls crt.TLS, _n int32, _zBuf uintptr /* *int8 */, _zFormat uintptr /* *int8 */, ap ...interface{}) (r uintptr /* *int8 */) {
	var (
		_z  uintptr        // *int8
		_ap *[]interface{} // Tva_list = T__gnuc_va_list = T__...a_list = *struct{X_ [2]uintptr;}
	)
	{
		x := ap
		_ap = &x
	}
	_z = Xsqlite3_vsnprintf(tls, _n, _zBuf, _zFormat, _ap)
	_ap = nil
	return _z
}

// _11bail_on_error int32, escapes: false, shell.c:364:12
var _11bail_on_error int32

// Xsqlite3_libversion is defined at sqlite3.c:142026:23
func Xsqlite3_libversion(tls crt.TLS) (r uintptr /* *int8 */) {
	return Xsqlite3_version
}

// _12usage is defined at shell.c:7928:13
func _12usage(tls crt.TLS, _showDetail int32) {
	crt.Xfprintf(tls, Xstderr, ts+1091 /* "Usage: %s [OPTIONS] FILENAME [SQ..." */, _5Argv0)
	if _showDetail == 0 {
		goto _1
	}

	crt.Xfprintf(tls, Xstderr, ts+1236 /* "OPTIONS include:\n%s" */, _39zOptions)
	goto _2

_1:
	crt.Xfprintf(tls, Xstderr, ts+1256 /* "Use the -help option for additio..." */)
_2:
	crt.Xexit(tls, int32(1))
}

// _13do_meta_command is defined at shell.c:5428:12
func _13do_meta_command(tls crt.TLS, _zLine uintptr /* *int8 */, _p uintptr /* *TShellState = SShellState */) (r int32) {
	esc := crt.MustMalloc(16344)
	var (
		_h               int32
		_nArg            int32
		_n               int32
		_c               int32
		_rc              int32
		_azArg           = esc // *[50]*int8
		_delim           int32
		_zDestFile       uintptr     // *int8
		_zDb             uintptr     // *int8
		_pDest           = esc + 400 // **Tsqlite3 = Ssqlite3
		_pBackup         uintptr     // *Tsqlite3_backup = Ssqlite3_backup
		_j               int32
		_z               uintptr      // *int8
		_zRes            uintptr      // *int8
		_data            = esc + 416  // *TShellState = SShellState
		_zErrMsg         = esc + 5552 // **int8
		_zLike           uintptr      // *int8
		_i               int32
		_savedShowHeader int32
		_1z              uintptr // *int8
		_zSql            uintptr // *int8
		_val             int32
		_2data           = esc + 5568  // *TShellState = SShellState
		_3zErrMsg        = esc + 10704 // **int8
		_doStats         int32
		_pStmt           = esc + 10720 // **Tsqlite3_stmt = Ssqlite3_stmt
		_zTable          uintptr       // *int8
		_zFile           uintptr       // *int8
		_4pStmt          = esc + 10736 // **Tsqlite3_stmt = Ssqlite3_stmt
		_nCol            int32
		_nByte           int32
		_5i              int32
		_6j              int32
		_needCommit      int32
		_nSep            int32
		_7zSql           uintptr       // *int8
		_sCtx            = esc + 10752 // *TImportCtx = SImportCtx
		_xRead           uintptr       // *func(crt.TLS, uintptr) uintptr
		_xCloser         uintptr       // *func(crt.TLS, uintptr) int32
		_zCreate         uintptr       // *int8
		_cSep            int8
		_startLine       int32
		_8z              uintptr       // *int8
		_9zSql           uintptr       // *int8
		_zCollist        uintptr       // *int8
		_10pStmt         = esc + 10816 // **Tsqlite3_stmt = Ssqlite3_stmt
		_tnum            int32
		_11i             int32
		_zLabel          = esc + 10832 // *[20]int8
		_zCol            uintptr       // *int8
		_12i             int32
		_n2              int32
		_iLimit          int32
		_13zFile         uintptr       // *int8
		_zProc           uintptr       // *int8
		_14zErrMsg       = esc + 10864 // **int8
		_15zFile         uintptr       // *int8
		_zMode           uintptr       // *int8
		_16n2            int32
		_c2              int32
		_zNewFilename    uintptr // *int8
		_iName           int32
		_newFlag         int32
		_17z             uintptr // *int8
		_18zFile         uintptr // *int8
		_19i             int32
		_alt             uintptr       // *TFILE = S_IO_FILE
		_zSrcFile        uintptr       // *int8
		_20zDb           uintptr       // *int8
		_pSrc            = esc + 10880 // **Tsqlite3 = Ssqlite3
		_21pBackup       uintptr       // *Tsqlite3_backup = Ssqlite3_backup
		_nTimeout        int32
		_sSelect         = esc + 10896 // *TShellText = SShellText
		_22data          = esc + 10912 // *TShellState = SShellState
		_23zErrMsg       = esc + 16048 // **int8
		_zDiv            uintptr       // *int8
		_iSchema         int32
		_24i             int32
		_new_argv        = esc + 16064 // *[2]*int8
		_new_colv        = esc + 16080 // *[2]*int8
		_25new_argv      = esc + 16096 // *[2]*int8
		_26new_colv      = esc + 16112 // *[2]*int8
		_27pStmt         = esc + 16128 // **Tsqlite3_stmt = Ssqlite3_stmt
		_28zDb           uintptr       // *int8
		_zScNum          = esc + 16144 // *[30]int8
		_zQarg           uintptr       // *int8
		_bIsInit         int32
		_bVerbose        int32
		_bSelftestExists int32
		_29i             int32
		_k               int32
		_nTest           int32
		_nErr            int32
		_str             = esc + 16176 // *TShellText = SShellText
		_30pStmt         = esc + 16192 // **Tsqlite3_stmt = Ssqlite3_stmt
		_31z             uintptr       // *int8
		_tno             int32
		_zOp             uintptr       // *int8
		_32zSql          uintptr       // *int8
		_zAns            uintptr       // *int8
		_zQuote          uintptr       // *int8
		_33zErrMsg       = esc + 16208 // **int8
		_34zLike         uintptr       // *int8
		_35i             int32
		_bSchema         int32
		_bSeparate       int32
		_iSize           int32
		_bDebug          int32
		_36pStmt         = esc + 16224 // **Tsqlite3_stmt = Ssqlite3_stmt
		_37zSql          uintptr       // *int8
		_zSep            uintptr       // *int8
		_sSql            = esc + 16240 // *TShellText = SShellText
		_sQuery          = esc + 16256 // *TShellText = SShellText
		_38z             uintptr       // *int8
		_zTab            uintptr       // *int8
		_zCmd            uintptr       // *int8
		_39i             int32
		_x               int32
		_40i             int32
		_41pStmt         = esc + 16272 // **Tsqlite3_stmt = Ssqlite3_stmt
		_azResult        uintptr       // **int8
		_nRow            int32
		_nAlloc          int32
		_ii              int32
		_s               = esc + 16288 // *TShellText = SShellText
		_zDbName         uintptr       // *int8
		_azNew           uintptr       // **int8
		_42n2            int32
		_len             int32
		_maxlen          int32
		_43i             int32
		_44j             int32
		_nPrintCol       int32
		_nPrintRow       int32
		_zSp             uintptr // *int8
		_testctrl        int32
		_rc2             int32
		_45i             int32
		_46n2            int32
		_opt             int32
		_47opt           uint32
		_48opt           int32
		_49zDbName       uintptr       // *int8
		_pVfs            = esc + 16304 // **Tsqlite3_vfs = Ssqlite3_vfs
		_50pVfs          uintptr       // *Tsqlite3_vfs = Ssqlite3_vfs
		_pCurrent        = esc + 16320 // **Tsqlite3_vfs = Ssqlite3_vfs
		_51zDbName       uintptr       // *int8
		_zVfsName        = esc + 16336 // **int8
		_52j             int32
	)
	defer crt.Free(esc)
	_h = int32(1)
	_nArg = int32(0)
	_rc = int32(0)
_1:
	if (*(*int8)(unsafe.Pointer(_zLine + uintptr(_h)))) == 0 || _nArg >= int32(50) {
		goto _2
	}

_3:
	if int32(*(*uint16)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(crt.X__ctype_b_loc(tls))) + 2*uintptr(int32(uint8(*(*int8)(unsafe.Pointer(_zLine + uintptr(_h)))))))))&int32(8192) == 0 {
		goto _4
	}

	_h++
	goto _3

_4:
	if int32(*(*int8)(unsafe.Pointer(_zLine + uintptr(_h)))) != int32(0) {
		goto _5
	}

	goto _2

_5:
	if int32(*(*int8)(unsafe.Pointer(_zLine + uintptr(_h)))) != int32('\'') && int32(*(*int8)(unsafe.Pointer(_zLine + uintptr(_h)))) != int32('"') {
		goto _6
	}

	_delim = int32(*(*int8)(unsafe.Pointer(_zLine + uintptr(postinc7(&_h)))))
	*(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(postinc7(&_nArg)))) = _zLine + uintptr(_h)
_8:
	if (*(*int8)(unsafe.Pointer(_zLine + uintptr(_h)))) == 0 || int32(*(*int8)(unsafe.Pointer(_zLine + uintptr(_h)))) == _delim {
		goto _9
	}

	if int32(*(*int8)(unsafe.Pointer(_zLine + uintptr(_h)))) != int32('\\') || _delim != int32('"') || int32(*(*int8)(unsafe.Pointer(_zLine + uintptr(_h+int32(1))))) == int32(0) {
		goto _10
	}

	_h++
_10:
	_h++
	goto _8

_9:
	if int32(*(*int8)(unsafe.Pointer(_zLine + uintptr(_h)))) != _delim {
		goto _11
	}

	*(*int8)(unsafe.Pointer(_zLine + uintptr(postinc7(&_h)))) = int8(0)
_11:
	if _delim != int32('"') {
		goto _12
	}

	_44resolve_backslashes(tls, *(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_nArg-int32(1)))))
_12:
	goto _7

_6:
	*(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(postinc7(&_nArg)))) = _zLine + uintptr(_h)
_13:
	if (*(*int8)(unsafe.Pointer(_zLine + uintptr(_h)))) == 0 || int32(*(*uint16)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(crt.X__ctype_b_loc(tls))) + 2*uintptr(int32(uint8(*(*int8)(unsafe.Pointer(_zLine + uintptr(_h)))))))))&int32(8192) != 0 {
		goto _14
	}

	_h++
	goto _13

_14:
	if (*(*int8)(unsafe.Pointer(_zLine + uintptr(_h)))) == 0 {
		goto _15
	}

	*(*int8)(unsafe.Pointer(_zLine + uintptr(postinc7(&_h)))) = int8(0)
_15:
	_44resolve_backslashes(tls, *(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_nArg-int32(1)))))
_7:
	goto _1

_2:
	if _nArg != int32(0) {
		goto _16
	}

	return int32(0)

_16:
	_n = _18strlen30(tls, *(*uintptr)(unsafe.Pointer(_azArg)))
	_c = int32(*(*int8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_azArg)))))
	if _c != int32('a') || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+1305 /* "auth" */, uint64(_n)) != int32(0) {
		goto _17
	}

	if _nArg == int32(2) {
		goto _19
	}

	crt.Xfprintf(tls, Xstderr, ts+1310 /* "Usage: .auth ON|OFF\n" */)
	_rc = int32(1)
	goto _meta_command_exit

_19:
	_9open_db(tls, _p, int32(0))
	if _45booleanValue(tls, *(*uintptr)(unsafe.Pointer(_azArg + 8))) == 0 {
		goto _20
	}

	Xsqlite3_set_authorizer(tls, *(*uintptr)(unsafe.Pointer(_p)), fp8(_46shellAuth), _p)
	goto _21

_20:
	Xsqlite3_set_authorizer(tls, *(*uintptr)(unsafe.Pointer(_p)), null, null)
_21:
	goto _18

_17:
	if (_c != int32('b') || _n < int32(3) || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+1331 /* "backup" */, uint64(_n)) != int32(0)) && (_c != int32('s') || _n < int32(3) || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+1338 /* "save" */, uint64(_n)) != int32(0)) {
		goto _22
	}

	_zDestFile = 0
	_zDb = 0
	_j = int32(1)
_24:
	if _j >= _nArg {
		goto _26
	}

	_z = *(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_j)))
	if int32(*(*int8)(unsafe.Pointer(_z))) != int32('-') {
		goto _27
	}

_29:
	if int32(*(*int8)(unsafe.Pointer(_z))) != int32('-') {
		goto _30
	}

	_z++
	goto _29

_30:
	crt.Xfprintf(tls, Xstderr, ts+1343 /* "unknown option: %s\n" */, *(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_j))))
	return int32(1)

	goto _28

_27:
	if _zDestFile != 0 {
		goto _31
	}

	_zDestFile = *(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_j)))
	goto _32

_31:
	if _zDb != 0 {
		goto _33
	}

	_zDb = _zDestFile
	_zDestFile = *(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_j)))
	goto _34

_33:
	crt.Xfprintf(tls, Xstderr, ts+1363 /* "too many arguments to .backup\n" */)
	return int32(1)

_34:
_32:
_28:
	_j++
	goto _24

_26:
	if _zDestFile != 0 {
		goto _35
	}

	crt.Xfprintf(tls, Xstderr, ts+1394 /* "missing FILENAME argument on .ba..." */)
	return int32(1)

_35:
	if _zDb != 0 {
		goto _36
	}

	_zDb = ts + 1432 /* "main" */
_36:
	_rc = Xsqlite3_open(tls, _zDestFile, _pDest)
	if _rc == int32(0) {
		goto _37
	}

	crt.Xfprintf(tls, Xstderr, ts+1437 /* "Error: cannot open \"%s\"\n" */, _zDestFile)
	Xsqlite3_close(tls, *(*uintptr)(unsafe.Pointer(_pDest)))
	return int32(1)

_37:
	_9open_db(tls, _p, int32(0))
	_pBackup = Xsqlite3_backup_init(tls, *(*uintptr)(unsafe.Pointer(_pDest)), ts+1432 /* "main" */, *(*uintptr)(unsafe.Pointer(_p)), _zDb)
	if _pBackup != 0 {
		goto _38
	}

	crt.Xfprintf(tls, Xstderr, ts+540 /* "Error: %s\n" */, Xsqlite3_errmsg(tls, *(*uintptr)(unsafe.Pointer(_pDest))))
	Xsqlite3_close(tls, *(*uintptr)(unsafe.Pointer(_pDest)))
	return int32(1)

_38:
_39:
	if set5(&_rc, Xsqlite3_backup_step(tls, _pBackup, int32(100))) != int32(0) {
		goto _40
	}

	goto _39

_40:
	Xsqlite3_backup_finish(tls, _pBackup)
	if _rc != int32(101) {
		goto _41
	}

	_rc = int32(0)
	goto _42

_41:
	crt.Xfprintf(tls, Xstderr, ts+540 /* "Error: %s\n" */, Xsqlite3_errmsg(tls, *(*uintptr)(unsafe.Pointer(_pDest))))
	_rc = int32(1)
_42:
	Xsqlite3_close(tls, *(*uintptr)(unsafe.Pointer(_pDest)))
	goto _23

_22:
	if _c != int32('b') || _n < int32(3) || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+1462 /* "bail" */, uint64(_n)) != int32(0) {
		goto _43
	}

	if _nArg != int32(2) {
		goto _45
	}

	_11bail_on_error = _45booleanValue(tls, *(*uintptr)(unsafe.Pointer(_azArg + 8)))
	goto _46

_45:
	crt.Xfprintf(tls, Xstderr, ts+1467 /* "Usage: .bail on|off\n" */)
	_rc = int32(1)
_46:
	goto _44

_43:
	if _c != int32('b') || _n < int32(3) || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+1488 /* "binary" */, uint64(_n)) != int32(0) {
		goto _47
	}

	if _nArg != int32(2) {
		goto _49
	}

	if _45booleanValue(tls, *(*uintptr)(unsafe.Pointer(_azArg + 8))) == 0 {
		goto _51
	}

	goto _52

_51:
_52:
	goto _50

_49:
	crt.Xfprintf(tls, Xstderr, ts+1495 /* "Usage: .binary on|off\n" */)
	_rc = int32(1)
_50:
	goto _48

_47:
	if _c != int32('c') || crt.Xstrcmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+1518 /* "cd" */) != int32(0) {
		goto _53
	}

	if _nArg != int32(2) {
		goto _55
	}

	_rc = crt.Xchdir(tls, *(*uintptr)(unsafe.Pointer(_azArg + 8)))
	if _rc == 0 {
		goto _57
	}

	crt.Xfprintf(tls, Xstderr, ts+1521 /* "Cannot change to directory \"%s\"\n" */, *(*uintptr)(unsafe.Pointer(_azArg + 8)))
	_rc = int32(1)
_57:
	goto _56

_55:
	crt.Xfprintf(tls, Xstderr, ts+1554 /* "Usage: .cd DIRECTORY\n" */)
	_rc = int32(1)
_56:
	goto _54

_53:
	if _c != int32('b') || _n < int32(3) || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+1576 /* "breakpoint" */, uint64(_n)) != int32(0) {
		goto _58
	}

	_47test_breakpoint(tls)
	goto _59

_58:
	if _c != int32('c') || _n < int32(3) || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+1587 /* "changes" */, uint64(_n)) != int32(0) {
		goto _60
	}

	if _nArg != int32(2) {
		goto _62
	}

	_48setOrClearFlag(tls, _p, uint32(0x20), *(*uintptr)(unsafe.Pointer(_azArg + 8)))
	goto _63

_62:
	crt.Xfprintf(tls, Xstderr, ts+1595 /* "Usage: .changes on|off\n" */)
	_rc = int32(1)
_63:
	goto _61

_60:
	if _c != int32('c') || _n < int32(3) || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+1619 /* "check" */, uint64(_n)) != int32(0) {
		goto _64
	}

	_zRes = 0
	_49output_reset(tls, _p)
	if _nArg == int32(2) {
		goto _66
	}

	crt.Xfprintf(tls, Xstderr, ts+1625 /* "Usage: .check GLOB-PATTERN\n" */)
	_rc = int32(2)
	goto _67

_66:
	if set4(&_zRes, _50readFile(tls, ts+1653 /* "testcase-out.txt" */, null)) != 0 {
		goto _68
	}

	crt.Xfprintf(tls, Xstderr, ts+1670 /* "Error: cannot read 'testcase-out..." */)
	_rc = int32(2)
	goto _69

_68:
	if _51testcase_glob(tls, *(*uintptr)(unsafe.Pointer(_azArg + 8)), _zRes) != int32(0) {
		goto _70
	}

	crt.Xfprintf(tls, Xstderr, ts+1709 /* "testcase-%s FAILED\n Expected: [%..." */, _p+88, *(*uintptr)(unsafe.Pointer(_azArg + 8)), _zRes)
	_rc = int32(1)
	goto _71

_70:
	crt.Xfprintf(tls, Xstdout, ts+1761 /* "testcase-%s ok\n" */, _p+88)
	(*(*int32)(unsafe.Pointer(_p + 72)))++
_71:
_69:
_67:
	Xsqlite3_free(tls, _zRes)
	goto _65

_64:
	if _c != int32('c') || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+1777 /* "clone" */, uint64(_n)) != int32(0) {
		goto _72
	}

	if _nArg != int32(2) {
		goto _74
	}

	_52tryToClone(tls, _p, *(*uintptr)(unsafe.Pointer(_azArg + 8)))
	goto _75

_74:
	crt.Xfprintf(tls, Xstderr, ts+1783 /* "Usage: .clone FILENAME\n" */)
	_rc = int32(1)
_75:
	goto _73

_72:
	if _c != int32('d') || _n <= int32(1) || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+1807 /* "databases" */, uint64(_n)) != int32(0) {
		goto _76
	}

	*(*uintptr)(unsafe.Pointer(_zErrMsg)) = 0
	_9open_db(tls, _p, int32(0))
	crt.Xmemcpy(tls, _data, _p, uint64(5136))
	*(*int32)(unsafe.Pointer(_data + 68)) = int32(0)
	*(*int32)(unsafe.Pointer(_data + 56)) = set5(&(*(*int32)(unsafe.Pointer(_data + 52))), int32(2))
	Xsqlite3_snprintf(tls, int32(20), _data+118, ts+1817 /* ": " */)
	*(*int32)(unsafe.Pointer(_data + 28)) = int32(0)
	Xsqlite3_exec(tls, *(*uintptr)(unsafe.Pointer(_p)), ts+1820 /* "SELECT name, file FROM pragma_da..." */, fp9(_53callback), _data, _zErrMsg)
	if (*(*uintptr)(unsafe.Pointer(_zErrMsg))) == 0 {
		goto _78
	}

	crt.Xfprintf(tls, Xstderr, ts+540 /* "Error: %s\n" */, *(*uintptr)(unsafe.Pointer(_zErrMsg)))
	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_zErrMsg)))
	_rc = int32(1)
_78:
	goto _77

_76:
	if _c != int32('d') || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+1864 /* "dbinfo" */, uint64(_n)) != int32(0) {
		goto _79
	}

	_rc = _54shell_dbinfo_command(tls, _p, _nArg, _azArg)
	goto _80

_79:
	if _c != int32('d') || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+1871 /* "dump" */, uint64(_n)) != int32(0) {
		goto _81
	}

	_zLike = 0
	_savedShowHeader = *(*int32)(unsafe.Pointer(_p + 68))
	{
		p := &(*(*uint32)(unsafe.Pointer(_p + 76)))
		*p = uint32(uint32(*p) & uint32(4294967271))
	}
	_i = int32(1)
_83:
	if _i >= _nArg {
		goto _85
	}

	if int32(*(*int8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_i)))))) != int32('-') {
		goto _86
	}

	_1z = (*(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_i)))) + uintptr(1)
	if int32(*(*int8)(unsafe.Pointer(_1z))) != int32('-') {
		goto _88
	}

	_1z++
_88:
	if crt.Xstrcmp(tls, _1z, ts+1876 /* "preserve-rowids" */) != int32(0) {
		goto _89
	}

	{
		p := &(*(*uint32)(unsafe.Pointer(_p + 76)))
		*p = uint32(uint32(*p) | uint32(0x8))
	}
	goto _90

_89:
	if crt.Xstrcmp(tls, _1z, ts+1892 /* "newlines" */) != int32(0) {
		goto _91
	}

	{
		p := &(*(*uint32)(unsafe.Pointer(_p + 76)))
		*p = uint32(uint32(*p) | uint32(0x10))
	}
	goto _92

_91:
	crt.Xfprintf(tls, Xstderr, ts+1901 /* "Unknown option \"%s\" on \".dump\"\n" */, *(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_i))))
	_rc = int32(1)
	goto _meta_command_exit

_92:
_90:
	goto _87

_86:
	if _zLike == 0 {
		goto _93
	}

	crt.Xfprintf(tls, Xstderr, ts+1933 /* "Usage: .dump ?--preserve-rowids?..." */)
	_rc = int32(1)
	goto _meta_command_exit

	goto _94

_93:
	_zLike = *(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_i)))
_94:
_87:
	_i++
	goto _83

_85:
	_9open_db(tls, _p, int32(0))
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+1995 /* "PRAGMA foreign_keys=OFF;\n" */)
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+2021 /* "BEGIN TRANSACTION;\n" */)
	*(*int32)(unsafe.Pointer(_p + 64)) = int32(0)
	*(*int32)(unsafe.Pointer(_p + 68)) = int32(0)
	Xsqlite3_exec(tls, *(*uintptr)(unsafe.Pointer(_p)), ts+2041 /* "SAVEPOINT dump; PRAGMA writable_..." */, null, null, null)
	*(*int32)(unsafe.Pointer(_p + 48)) = int32(0)
	if _zLike != 0 {
		goto _95
	}

	_55run_schema_dump_query(tls, _p, ts+2083 /* "SELECT name, type, sql FROM sqli..." */)
	_55run_schema_dump_query(tls, _p, ts+2190 /* "SELECT name, type, sql FROM sqli..." */)
	_56run_table_dump_query(tls, _p, ts+2262 /* "SELECT sql FROM sqlite_master WH..." */, null)
	goto _96

_95:
	_zSql = Xsqlite3_mprintf(tls, ts+2350 /* "SELECT name, type, sql FROM sqli..." */, _zLike)
	_55run_schema_dump_query(tls, _p, _zSql)
	Xsqlite3_free(tls, _zSql)
	_zSql = Xsqlite3_mprintf(tls, ts+2451 /* "SELECT sql FROM sqlite_master WH..." */, _zLike)
	_56run_table_dump_query(tls, _p, _zSql, null)
	Xsqlite3_free(tls, _zSql)
_96:
	if (*(*int32)(unsafe.Pointer(_p + 64))) == 0 {
		goto _97
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+2562 /* "PRAGMA writable_schema=OFF;\n" */)
	*(*int32)(unsafe.Pointer(_p + 64)) = int32(0)
_97:
	Xsqlite3_exec(tls, *(*uintptr)(unsafe.Pointer(_p)), ts+2591 /* "PRAGMA writable_schema=OFF;" */, null, null, null)
	Xsqlite3_exec(tls, *(*uintptr)(unsafe.Pointer(_p)), ts+2619 /* "RELEASE dump;" */, null, null, null)
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), func() uintptr {
		if (*(*int32)(unsafe.Pointer(_p + 48))) != 0 {
			return ts + 2633 /* "ROLLBACK; -- due to errors\n" */
		}
		return ts + 2661 /* "COMMIT;\n" */
	}())
	*(*int32)(unsafe.Pointer(_p + 68)) = _savedShowHeader
	goto _82

_81:
	if _c != int32('e') || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+2670 /* "echo" */, uint64(_n)) != int32(0) {
		goto _98
	}

	if _nArg != int32(2) {
		goto _100
	}

	_48setOrClearFlag(tls, _p, uint32(0x40), *(*uintptr)(unsafe.Pointer(_azArg + 8)))
	goto _101

_100:
	crt.Xfprintf(tls, Xstderr, ts+2675 /* "Usage: .echo on|off\n" */)
	_rc = int32(1)
_101:
	goto _99

_98:
	if _c != int32('e') || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+2696 /* "eqp" */, uint64(_n)) != int32(0) {
		goto _102
	}

	if _nArg != int32(2) {
		goto _104
	}

	if crt.Xstrcmp(tls, *(*uintptr)(unsafe.Pointer(_azArg + 8)), ts+2700 /* "full" */) != int32(0) {
		goto _106
	}

	*(*int32)(unsafe.Pointer(_p + 12)) = int32(2)
	goto _107

_106:
	*(*int32)(unsafe.Pointer(_p + 12)) = _45booleanValue(tls, *(*uintptr)(unsafe.Pointer(_azArg + 8)))
_107:
	goto _105

_104:
	crt.Xfprintf(tls, Xstderr, ts+2705 /* "Usage: .eqp on|off|full\n" */)
	_rc = int32(1)
_105:
	goto _103

_102:
	if _c != int32('e') || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+2730 /* "exit" */, uint64(_n)) != int32(0) {
		goto _108
	}

	if _nArg <= int32(1) || set5(&_rc, int32(_8integerValue(tls, *(*uintptr)(unsafe.Pointer(_azArg + 8))))) == int32(0) {
		goto _110
	}

	crt.Xexit(tls, _rc)
_110:
	_rc = int32(2)
	goto _109

_108:
	if _c != int32('e') || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+2735 /* "explain" */, uint64(_n)) != int32(0) {
		goto _111
	}

	_val = int32(1)
	if _nArg < int32(2) {
		goto _113
	}

	if crt.Xstrcmp(tls, *(*uintptr)(unsafe.Pointer(_azArg + 8)), ts+2743 /* "auto" */) != int32(0) {
		goto _114
	}

	_val = int32(99)
	goto _115

_114:
	_val = _45booleanValue(tls, *(*uintptr)(unsafe.Pointer(_azArg + 8)))
_115:
_113:
	if _val != int32(1) || (*(*int32)(unsafe.Pointer(_p + 52))) == int32(9) {
		goto _116
	}

	*(*int32)(unsafe.Pointer(_p + 60)) = *(*int32)(unsafe.Pointer(_p + 52))
	*(*int32)(unsafe.Pointer(_p + 52)) = int32(9)
	*(*int32)(unsafe.Pointer(_p + 8)) = int32(0)
	goto _117

_116:
	if _val != int32(0) {
		goto _118
	}

	if (*(*int32)(unsafe.Pointer(_p + 52))) != int32(9) {
		goto _120
	}

	*(*int32)(unsafe.Pointer(_p + 52)) = *(*int32)(unsafe.Pointer(_p + 60))
_120:
	*(*int32)(unsafe.Pointer(_p + 8)) = int32(0)
	goto _119

_118:
	if _val != int32(99) {
		goto _121
	}

	if (*(*int32)(unsafe.Pointer(_p + 52))) != int32(9) {
		goto _122
	}

	*(*int32)(unsafe.Pointer(_p + 52)) = *(*int32)(unsafe.Pointer(_p + 60))
_122:
	*(*int32)(unsafe.Pointer(_p + 8)) = int32(1)
_121:
_119:
_117:
	goto _112

_111:
	if _c != int32('f') || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+2748 /* "fullschema" */, uint64(_n)) != int32(0) {
		goto _123
	}

	*(*uintptr)(unsafe.Pointer(_3zErrMsg)) = 0
	_doStats = int32(0)
	crt.Xmemcpy(tls, _2data, _p, uint64(5136))
	*(*int32)(unsafe.Pointer(_2data + 68)) = int32(0)
	*(*int32)(unsafe.Pointer(_2data + 56)) = set5(&(*(*int32)(unsafe.Pointer(_2data + 52))), int32(3))
	if _nArg != int32(2) || _57optionMatch(tls, *(*uintptr)(unsafe.Pointer(_azArg + 8)), ts+2759 /* "indent" */) == 0 {
		goto _125
	}

	*(*int32)(unsafe.Pointer(_2data + 56)) = set5(&(*(*int32)(unsafe.Pointer(_2data + 52))), int32(11))
	_nArg = int32(1)
_125:
	if _nArg == int32(1) {
		goto _126
	}

	crt.Xfprintf(tls, Xstderr, ts+2766 /* "Usage: .fullschema ?--indent?\n" */)
	_rc = int32(1)
	goto _meta_command_exit

_126:
	_9open_db(tls, _p, int32(0))
	_rc = Xsqlite3_exec(tls, *(*uintptr)(unsafe.Pointer(_p)), ts+2797 /* "SELECT sql FROM  (SELECT sql sql..." */, fp9(_53callback), _2data, _3zErrMsg)
	if _rc != int32(0) {
		goto _127
	}

	_rc = Xsqlite3_prepare_v2(tls, *(*uintptr)(unsafe.Pointer(_p)), ts+3059 /* "SELECT rowid FROM sqlite_master ..." */, int32(-1), _pStmt, null)
	_doStats = bool2int(Xsqlite3_step(tls, *(*uintptr)(unsafe.Pointer(_pStmt))) == int32(100))
	Xsqlite3_finalize(tls, *(*uintptr)(unsafe.Pointer(_pStmt)))
_127:
	if _doStats != int32(0) {
		goto _128
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+3126 /* "/* No STAT tables available *\\x2f\n" */)
	goto _129

_128:
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+3158 /* "ANALYZE sqlite_master;\n" */)
	Xsqlite3_exec(tls, *(*uintptr)(unsafe.Pointer(_p)), ts+3182 /* "SELECT 'ANALYZE sqlite_master'" */, fp9(_53callback), _2data, _3zErrMsg)
	*(*int32)(unsafe.Pointer(_2data + 56)) = set5(&(*(*int32)(unsafe.Pointer(_2data + 52))), int32(5))
	*(*uintptr)(unsafe.Pointer(_2data + 80)) = ts + 3213 /* "sqlite_stat1" */
	_14shell_exec(tls, *(*uintptr)(unsafe.Pointer(_p)), ts+3226 /* "SELECT * FROM sqlite_stat1" */, fp3(_15shell_callback), _2data, _3zErrMsg)
	*(*uintptr)(unsafe.Pointer(_2data + 80)) = ts + 3253 /* "sqlite_stat3" */
	_14shell_exec(tls, *(*uintptr)(unsafe.Pointer(_p)), ts+3266 /* "SELECT * FROM sqlite_stat3" */, fp3(_15shell_callback), _2data, _3zErrMsg)
	*(*uintptr)(unsafe.Pointer(_2data + 80)) = ts + 3293 /* "sqlite_stat4" */
	_14shell_exec(tls, *(*uintptr)(unsafe.Pointer(_p)), ts+3306 /* "SELECT * FROM sqlite_stat4" */, fp3(_15shell_callback), _2data, _3zErrMsg)
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+3158 /* "ANALYZE sqlite_master;\n" */)
_129:
	goto _124

_123:
	if _c != int32('h') || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+3333 /* "headers" */, uint64(_n)) != int32(0) {
		goto _130
	}

	if _nArg != int32(2) {
		goto _132
	}

	*(*int32)(unsafe.Pointer(_p + 68)) = _45booleanValue(tls, *(*uintptr)(unsafe.Pointer(_azArg + 8)))
	goto _133

_132:
	crt.Xfprintf(tls, Xstderr, ts+3341 /* "Usage: .headers on|off\n" */)
	_rc = int32(1)
_133:
	goto _131

_130:
	if _c != int32('h') || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+3365 /* "help" */, uint64(_n)) != int32(0) {
		goto _134
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+429 /* "%s" */, _58zHelp)
	goto _135

_134:
	if _c != int32('i') || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+3370 /* "import" */, uint64(_n)) != int32(0) {
		goto _136
	}

	*(*uintptr)(unsafe.Pointer(_4pStmt)) = 0
	if _nArg == int32(3) {
		goto _138
	}

	crt.Xfprintf(tls, Xstderr, ts+3377 /* "Usage: .import FILE TABLE\n" */)
	goto _meta_command_exit

_138:
	_zFile = *(*uintptr)(unsafe.Pointer(_azArg + 8))
	_zTable = *(*uintptr)(unsafe.Pointer(_azArg + 16))
	_24seenInterrupt = int32(0)
	crt.Xmemset(tls, _sCtx, int32(0), uint64(56))
	_9open_db(tls, _p, int32(0))
	_nSep = _18strlen30(tls, _p+118)
	if _nSep != int32(0) {
		goto _139
	}

	crt.Xfprintf(tls, Xstderr, ts+3404 /* "Error: non-null column separator..." */)
	return int32(1)

_139:
	if _nSep <= int32(1) {
		goto _140
	}

	crt.Xfprintf(tls, Xstderr, ts+3458 /* "Error: multi-character column se..." */)
	return int32(1)

_140:
	_nSep = _18strlen30(tls, _p+138)
	if _nSep != int32(0) {
		goto _141
	}

	crt.Xfprintf(tls, Xstderr, ts+3523 /* "Error: non-null row separator re..." */)
	return int32(1)

_141:
	if _nSep != int32(2) || (*(*int32)(unsafe.Pointer(_p + 52))) != int32(8) || crt.Xstrcmp(tls, _p+138, ts+3574 /* "\r\n" */) != int32(0) {
		goto _142
	}

	Xsqlite3_snprintf(tls, int32(20), _p+138, ts+867 /* "\n" */)
	_nSep = _18strlen30(tls, _p+138)
_142:
	if _nSep <= int32(1) {
		goto _143
	}

	crt.Xfprintf(tls, Xstderr, ts+3577 /* "Error: multi-character row separ..." */)
	return int32(1)

_143:
	*(*uintptr)(unsafe.Pointer(_sCtx)) = _zFile
	*(*int32)(unsafe.Pointer(_sCtx + 32)) = int32(1)
	if int32(*(*int8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_sCtx))))) != int32('|') {
		goto _144
	}

	*(*uintptr)(unsafe.Pointer(_sCtx + 8)) = crt.Xpopen(tls, (*(*uintptr)(unsafe.Pointer(_sCtx)))+uintptr(1), ts+3639 /* "r" */)
	*(*uintptr)(unsafe.Pointer(_sCtx)) = ts + 3641 /* "<pipe>" */
	_xCloser = fp10(crt.Xpclose)
	goto _145

_144:
	*(*uintptr)(unsafe.Pointer(_sCtx + 8)) = crt.Xfopen64(tls, *(*uintptr)(unsafe.Pointer(_sCtx)), ts+1058 /* "rb" */)
	_xCloser = fp10(crt.Xfclose)
_145:
	if (*(*int32)(unsafe.Pointer(_p + 52))) != int32(10) {
		goto _146
	}

	_xRead = fp11(_59ascii_read_one_field)
	goto _147

_146:
	_xRead = fp11(_60csv_read_one_field)
_147:
	if (*(*uintptr)(unsafe.Pointer(_sCtx + 8))) != 0 {
		goto _148
	}

	crt.Xfprintf(tls, Xstderr, ts+1437 /* "Error: cannot open \"%s\"\n" */, _zFile)
	return int32(1)

_148:
	*(*int32)(unsafe.Pointer(_sCtx + 44)) = int32(*(*int8)(unsafe.Pointer(_p + 118)))
	*(*int32)(unsafe.Pointer(_sCtx + 48)) = int32(*(*int8)(unsafe.Pointer(_p + 138)))
	_7zSql = Xsqlite3_mprintf(tls, ts+3648 /* "SELECT * FROM %s" */, _zTable)
	if _7zSql != 0 {
		goto _149
	}

	crt.Xfprintf(tls, Xstderr, ts+3665 /* "Error: out of memory\n" */)
	fn12(_xCloser)(tls, *(*uintptr)(unsafe.Pointer(_sCtx + 8)))
	return int32(1)

_149:
	_nByte = _18strlen30(tls, _7zSql)
	_rc = Xsqlite3_prepare_v2(tls, *(*uintptr)(unsafe.Pointer(_p)), _7zSql, int32(-1), _4pStmt, null)
	_61import_append_char(tls, _sCtx, int32(0))
	if _rc == 0 || Xsqlite3_strglob(tls, ts+3687 /* "no such table: *" */, Xsqlite3_errmsg(tls, *(*uintptr)(unsafe.Pointer(_p)))) != int32(0) {
		goto _150
	}

	_zCreate = Xsqlite3_mprintf(tls, ts+3704 /* "CREATE TABLE %s" */, _zTable)
	_cSep = int8('(')
_151:
	if fn13(_xRead)(tls, _sCtx) == 0 {
		goto _152
	}

	_zCreate = Xsqlite3_mprintf(tls, ts+3720 /* "%z%c\n  \"%w\" TEXT" */, _zCreate, int32(_cSep), *(*uintptr)(unsafe.Pointer(_sCtx + 16)))
	_cSep = int8(',')
	if (*(*int32)(unsafe.Pointer(_sCtx + 40))) == (*(*int32)(unsafe.Pointer(_sCtx + 44))) {
		goto _153
	}

	goto _152

_153:
	goto _151

_152:
	if int32(_cSep) != int32('(') {
		goto _154
	}

	Xsqlite3_free(tls, _zCreate)
	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_sCtx + 16)))
	fn12(_xCloser)(tls, *(*uintptr)(unsafe.Pointer(_sCtx + 8)))
	crt.Xfprintf(tls, Xstderr, ts+3737 /* "%s: empty file\n" */, *(*uintptr)(unsafe.Pointer(_sCtx)))
	return int32(1)

_154:
	_zCreate = Xsqlite3_mprintf(tls, ts+3753 /* "%z\n)" */, _zCreate)
	_rc = Xsqlite3_exec(tls, *(*uintptr)(unsafe.Pointer(_p)), _zCreate, null, null, null)
	Xsqlite3_free(tls, _zCreate)
	if _rc == 0 {
		goto _155
	}

	crt.Xfprintf(tls, Xstderr, ts+3758 /* "CREATE TABLE %s(...) failed: %s\n" */, _zTable, Xsqlite3_errmsg(tls, *(*uintptr)(unsafe.Pointer(_p))))
	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_sCtx + 16)))
	fn12(_xCloser)(tls, *(*uintptr)(unsafe.Pointer(_sCtx + 8)))
	return int32(1)

_155:
	_rc = Xsqlite3_prepare_v2(tls, *(*uintptr)(unsafe.Pointer(_p)), _7zSql, int32(-1), _4pStmt, null)
_150:
	Xsqlite3_free(tls, _7zSql)
	if _rc == 0 {
		goto _156
	}

	if (*(*uintptr)(unsafe.Pointer(_4pStmt))) == 0 {
		goto _157
	}

	Xsqlite3_finalize(tls, *(*uintptr)(unsafe.Pointer(_4pStmt)))
_157:
	crt.Xfprintf(tls, Xstderr, ts+540 /* "Error: %s\n" */, Xsqlite3_errmsg(tls, *(*uintptr)(unsafe.Pointer(_p))))
	fn12(_xCloser)(tls, *(*uintptr)(unsafe.Pointer(_sCtx + 8)))
	return int32(1)

_156:
	_nCol = Xsqlite3_column_count(tls, *(*uintptr)(unsafe.Pointer(_4pStmt)))
	Xsqlite3_finalize(tls, *(*uintptr)(unsafe.Pointer(_4pStmt)))
	*(*uintptr)(unsafe.Pointer(_4pStmt)) = null
	if _nCol != int32(0) {
		goto _158
	}

	return int32(0)

_158:
	_7zSql = Xsqlite3_malloc64(tls, uint64(((_nByte*int32(2))+int32(20))+(_nCol*int32(2))))
	if _7zSql != 0 {
		goto _159
	}

	crt.Xfprintf(tls, Xstderr, ts+3665 /* "Error: out of memory\n" */)
	fn12(_xCloser)(tls, *(*uintptr)(unsafe.Pointer(_sCtx + 8)))
	return int32(1)

_159:
	Xsqlite3_snprintf(tls, _nByte+int32(20), _7zSql, ts+3791 /* "INSERT INTO \"%w\" VALUES(?" */, _zTable)
	_6j = _18strlen30(tls, _7zSql)
	_5i = int32(1)
_160:
	if _5i >= _nCol {
		goto _162
	}

	*(*int8)(unsafe.Pointer(_7zSql + uintptr(postinc7(&_6j)))) = int8(',')
	*(*int8)(unsafe.Pointer(_7zSql + uintptr(postinc7(&_6j)))) = int8('?')
	_5i++
	goto _160

_162:
	*(*int8)(unsafe.Pointer(_7zSql + uintptr(postinc7(&_6j)))) = int8(')')
	*(*int8)(unsafe.Pointer(_7zSql + uintptr(_6j))) = int8(0)
	_rc = Xsqlite3_prepare_v2(tls, *(*uintptr)(unsafe.Pointer(_p)), _7zSql, int32(-1), _4pStmt, null)
	Xsqlite3_free(tls, _7zSql)
	if _rc == 0 {
		goto _163
	}

	crt.Xfprintf(tls, Xstderr, ts+540 /* "Error: %s\n" */, Xsqlite3_errmsg(tls, *(*uintptr)(unsafe.Pointer(_p))))
	if (*(*uintptr)(unsafe.Pointer(_4pStmt))) == 0 {
		goto _164
	}

	Xsqlite3_finalize(tls, *(*uintptr)(unsafe.Pointer(_4pStmt)))
_164:
	fn12(_xCloser)(tls, *(*uintptr)(unsafe.Pointer(_sCtx + 8)))
	return int32(1)

_163:
	_needCommit = Xsqlite3_get_autocommit(tls, *(*uintptr)(unsafe.Pointer(_p)))
	if _needCommit == 0 {
		goto _165
	}

	Xsqlite3_exec(tls, *(*uintptr)(unsafe.Pointer(_p)), ts+3817 /* "BEGIN" */, null, null, null)
_165:
_166:
	_startLine = *(*int32)(unsafe.Pointer(_sCtx + 32))
	_5i = int32(0)
_169:
	if _5i >= _nCol {
		goto _171
	}

	_8z = fn13(_xRead)(tls, _sCtx)
	if _8z != 0 || _5i != int32(0) {
		goto _172
	}

	goto _171

_172:
	if (*(*int32)(unsafe.Pointer(_p + 52))) != int32(10) || _8z != 0 && int32(*(*int8)(unsafe.Pointer(_8z))) != int32(0) || _5i != int32(0) {
		goto _173
	}

	goto _171

_173:
	Xsqlite3_bind_text(tls, *(*uintptr)(unsafe.Pointer(_4pStmt)), _5i+int32(1), _8z, int32(-1), uintptr(18446744073709551615))
	if _5i >= (_nCol-int32(1)) || (*(*int32)(unsafe.Pointer(_sCtx + 40))) == (*(*int32)(unsafe.Pointer(_sCtx + 44))) {
		goto _174
	}

	crt.Xfprintf(tls, Xstderr, ts+3823 /* "%s:%d: expected %d columns but f..." */, *(*uintptr)(unsafe.Pointer(_sCtx)), _startLine, _nCol, _5i+int32(1))
	_5i = int32(_5i + int32(2))
_175:
	if _5i > _nCol {
		goto _176
	}

	Xsqlite3_bind_null(tls, *(*uintptr)(unsafe.Pointer(_4pStmt)), _5i)
	_5i++
	goto _175

_176:
_174:
	_5i++
	goto _169

_171:
	if (*(*int32)(unsafe.Pointer(_sCtx + 40))) != (*(*int32)(unsafe.Pointer(_sCtx + 44))) {
		goto _177
	}

_178:
	fn13(_xRead)(tls, _sCtx)
	_5i++
	if (*(*int32)(unsafe.Pointer(_sCtx + 40))) == (*(*int32)(unsafe.Pointer(_sCtx + 44))) {
		goto _178
	}

	crt.Xfprintf(tls, Xstderr, ts+3893 /* "%s:%d: expected %d columns but f..." */, *(*uintptr)(unsafe.Pointer(_sCtx)), _startLine, _nCol, _5i)
_177:
	if _5i < _nCol {
		goto _181
	}

	Xsqlite3_step(tls, *(*uintptr)(unsafe.Pointer(_4pStmt)))
	_rc = Xsqlite3_reset(tls, *(*uintptr)(unsafe.Pointer(_4pStmt)))
	if _rc == int32(0) {
		goto _182
	}

	crt.Xfprintf(tls, Xstderr, ts+3951 /* "%s:%d: INSERT failed: %s\n" */, *(*uintptr)(unsafe.Pointer(_sCtx)), _startLine, Xsqlite3_errmsg(tls, *(*uintptr)(unsafe.Pointer(_p))))
_182:
_181:
	if (*(*int32)(unsafe.Pointer(_sCtx + 40))) != int32(-1) {
		goto _166
	}

	fn12(_xCloser)(tls, *(*uintptr)(unsafe.Pointer(_sCtx + 8)))
	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_sCtx + 16)))
	Xsqlite3_finalize(tls, *(*uintptr)(unsafe.Pointer(_4pStmt)))
	if _needCommit == 0 {
		goto _183
	}

	Xsqlite3_exec(tls, *(*uintptr)(unsafe.Pointer(_p)), ts+3977 /* "COMMIT" */, null, null, null)
_183:
	goto _137

_136:
	if _c != int32('i') || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+3984 /* "imposter" */, uint64(_n)) != int32(0) {
		goto _184
	}

	_zCollist = 0
	_tnum = int32(0)
	if _nArg == int32(3) {
		goto _186
	}

	crt.Xfprintf(tls, Xstderr, ts+3993 /* "Usage: .imposter INDEX IMPOSTER\n" */)
	_rc = int32(1)
	goto _meta_command_exit

_186:
	_9open_db(tls, _p, int32(0))
	_9zSql = Xsqlite3_mprintf(tls, ts+4026 /* "SELECT rootpage FROM sqlite_mast..." */, *(*uintptr)(unsafe.Pointer(_azArg + 8)))
	Xsqlite3_prepare_v2(tls, *(*uintptr)(unsafe.Pointer(_p)), _9zSql, int32(-1), _10pStmt, null)
	Xsqlite3_free(tls, _9zSql)
	if Xsqlite3_step(tls, *(*uintptr)(unsafe.Pointer(_10pStmt))) != int32(100) {
		goto _187
	}

	_tnum = Xsqlite3_column_int(tls, *(*uintptr)(unsafe.Pointer(_10pStmt)), int32(0))
_187:
	Xsqlite3_finalize(tls, *(*uintptr)(unsafe.Pointer(_10pStmt)))
	if _tnum != int32(0) {
		goto _188
	}

	crt.Xfprintf(tls, Xstderr, ts+4094 /* "no such index: \"%s\"\n" */, *(*uintptr)(unsafe.Pointer(_azArg + 8)))
	_rc = int32(1)
	goto _meta_command_exit

_188:
	_9zSql = Xsqlite3_mprintf(tls, ts+4115 /* "PRAGMA index_xinfo='%q'" */, *(*uintptr)(unsafe.Pointer(_azArg + 8)))
	_rc = Xsqlite3_prepare_v2(tls, *(*uintptr)(unsafe.Pointer(_p)), _9zSql, int32(-1), _10pStmt, null)
	Xsqlite3_free(tls, _9zSql)
	_11i = int32(0)
_189:
	if Xsqlite3_step(tls, *(*uintptr)(unsafe.Pointer(_10pStmt))) != int32(100) {
		goto _190
	}

	_zCol = Xsqlite3_column_text(tls, *(*uintptr)(unsafe.Pointer(_10pStmt)), int32(2))
	_11i++
	if _zCol != 0 {
		goto _191
	}

	if Xsqlite3_column_int(tls, *(*uintptr)(unsafe.Pointer(_10pStmt)), int32(1)) != int32(-1) {
		goto _192
	}

	_zCol = ts + 4139 /* "_ROWID_" */
	goto _193

_192:
	Xsqlite3_snprintf(tls, int32(20), _zLabel, ts+4147 /* "expr%d" */, _11i)
	_zCol = _zLabel
_193:
_191:
	if _zCollist != 0 {
		goto _194
	}

	_zCollist = Xsqlite3_mprintf(tls, ts+4154 /* "\"%w\"" */, _zCol)
	goto _195

_194:
	_zCollist = Xsqlite3_mprintf(tls, ts+4159 /* "%z,\"%w\"" */, _zCollist, _zCol)
_195:
	goto _189

_190:
	Xsqlite3_finalize(tls, *(*uintptr)(unsafe.Pointer(_10pStmt)))
	_9zSql = Xsqlite3_mprintf(tls, ts+4167 /* "CREATE TABLE \"%w\"(%s,PRIMARY KEY..." */, *(*uintptr)(unsafe.Pointer(_azArg + 16)), _zCollist, _zCollist)
	Xsqlite3_free(tls, _zCollist)
	_rc = Xsqlite3_test_control(tls, int32(25), *(*uintptr)(unsafe.Pointer(_p)), ts+1432 /* "main" */, int32(1), _tnum)
	if _rc != int32(0) {
		goto _196
	}

	_rc = Xsqlite3_exec(tls, *(*uintptr)(unsafe.Pointer(_p)), _9zSql, null, null, null)
	Xsqlite3_test_control(tls, int32(25), *(*uintptr)(unsafe.Pointer(_p)), ts+1432 /* "main" */, int32(0), int32(0))
	if _rc == 0 {
		goto _198
	}

	crt.Xfprintf(tls, Xstderr, ts+4218 /* "Error in [%s]: %s\n" */, _9zSql, Xsqlite3_errmsg(tls, *(*uintptr)(unsafe.Pointer(_p))))
	goto _199

_198:
	crt.Xfprintf(tls, Xstdout, ts+4237 /* "%s;\n" */, _9zSql)
	crt.Xfprintf(tls, Xstdout, ts+4242 /* "WARNING: writing to an imposter ..." */)
_199:
	goto _197

_196:
	crt.Xfprintf(tls, Xstderr, ts+4305 /* "SQLITE_TESTCTRL_IMPOSTER returns..." */, _rc)
	_rc = int32(1)
_197:
	Xsqlite3_free(tls, _9zSql)
	goto _185

_184:
	if _c != int32('l') || _n < int32(5) || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+4342 /* "limits" */, uint64(_n)) != int32(0) {
		goto _200
	}

	_9open_db(tls, _p, int32(0))
	if _nArg != int32(1) {
		goto _202
	}

	_12i = int32(0)
_204:
	if _12i >= int32(12) {
		goto _206
	}

	crt.Xprintf(tls, ts+4349 /* "%20s %d\n" */, *(*uintptr)(unsafe.Pointer(_41aLimit + 16*uintptr(_12i))), Xsqlite3_limit(tls, *(*uintptr)(unsafe.Pointer(_p)), *(*int32)(unsafe.Pointer((_41aLimit + 16*uintptr(_12i)) + 8)), int32(-1)))
	_12i++
	goto _204

_206:
	goto _203

_202:
	if _nArg <= int32(3) {
		goto _207
	}

	crt.Xfprintf(tls, Xstderr, ts+4358 /* "Usage: .limit NAME ?NEW-VALUE?\n" */)
	_rc = int32(1)
	goto _meta_command_exit

	goto _208

_207:
	_iLimit = int32(-1)
	_n2 = _18strlen30(tls, *(*uintptr)(unsafe.Pointer(_azArg + 8)))
	_12i = int32(0)
_209:
	if _12i >= int32(12) {
		goto _211
	}

	if Xsqlite3_strnicmp(tls, *(*uintptr)(unsafe.Pointer(_41aLimit + 16*uintptr(_12i))), *(*uintptr)(unsafe.Pointer(_azArg + 8)), _n2) != int32(0) {
		goto _212
	}

	if _iLimit >= int32(0) {
		goto _213
	}

	_iLimit = _12i
	goto _214

_213:
	crt.Xfprintf(tls, Xstderr, ts+4390 /* "ambiguous limit: \"%s\"\n" */, *(*uintptr)(unsafe.Pointer(_azArg + 8)))
	_rc = int32(1)
	goto _meta_command_exit

_214:
_212:
	_12i++
	goto _209

_211:
	if _iLimit >= int32(0) {
		goto _215
	}

	crt.Xfprintf(tls, Xstderr, ts+4413 /* "unknown limit: \"%s\"\nenter \".limi..." */, *(*uintptr)(unsafe.Pointer(_azArg + 8)))
	_rc = int32(1)
	goto _meta_command_exit

_215:
	if _nArg != int32(3) {
		goto _216
	}

	Xsqlite3_limit(tls, *(*uintptr)(unsafe.Pointer(_p)), *(*int32)(unsafe.Pointer((_41aLimit + 16*uintptr(_iLimit)) + 8)), int32(_8integerValue(tls, *(*uintptr)(unsafe.Pointer(_azArg + 16)))))
_216:
	crt.Xprintf(tls, ts+4349 /* "%20s %d\n" */, *(*uintptr)(unsafe.Pointer(_41aLimit + 16*uintptr(_iLimit))), Xsqlite3_limit(tls, *(*uintptr)(unsafe.Pointer(_p)), *(*int32)(unsafe.Pointer((_41aLimit + 16*uintptr(_iLimit)) + 8)), int32(-1)))
_208:
_203:
	goto _201

_200:
	if _c != int32('l') || _n <= int32(2) || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+4480 /* "lint" */, uint64(_n)) != int32(0) {
		goto _217
	}

	_9open_db(tls, _p, int32(0))
	_62lintDotCommand(tls, _p, _azArg, _nArg)
	goto _218

_217:
	if _c != int32('l') || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+4485 /* "load" */, uint64(_n)) != int32(0) {
		goto _219
	}

	*(*uintptr)(unsafe.Pointer(_14zErrMsg)) = 0
	if _nArg >= int32(2) {
		goto _221
	}

	crt.Xfprintf(tls, Xstderr, ts+4490 /* "Usage: .load FILE ?ENTRYPOINT?\n" */)
	_rc = int32(1)
	goto _meta_command_exit

_221:
	_13zFile = *(*uintptr)(unsafe.Pointer(_azArg + 8))
	_zProc = func() uintptr {
		if _nArg >= int32(3) {
			return *(*uintptr)(unsafe.Pointer(_azArg + 16))
		}
		return null
	}()
	_9open_db(tls, _p, int32(0))
	_rc = Xsqlite3_load_extension(tls, *(*uintptr)(unsafe.Pointer(_p)), _13zFile, _zProc, _14zErrMsg)
	if _rc == int32(0) {
		goto _222
	}

	crt.Xfprintf(tls, Xstderr, ts+540 /* "Error: %s\n" */, *(*uintptr)(unsafe.Pointer(_14zErrMsg)))
	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_14zErrMsg)))
	_rc = int32(1)
_222:
	goto _220

_219:
	if _c != int32('l') || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+4522 /* "log" */, uint64(_n)) != int32(0) {
		goto _223
	}

	if _nArg == int32(2) {
		goto _225
	}

	crt.Xfprintf(tls, Xstderr, ts+4526 /* "Usage: .log FILENAME\n" */)
	_rc = int32(1)
	goto _226

_225:
	_15zFile = *(*uintptr)(unsafe.Pointer(_azArg + 8))
	_63output_file_close(tls, *(*uintptr)(unsafe.Pointer(_p + 5112)))
	*(*uintptr)(unsafe.Pointer(_p + 5112)) = _64output_file_open(tls, _15zFile)
_226:
	goto _224

_223:
	if _c != int32('m') || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+4548 /* "mode" */, uint64(_n)) != int32(0) {
		goto _227
	}

	_zMode = func() uintptr {
		if _nArg >= int32(2) {
			return *(*uintptr)(unsafe.Pointer(_azArg + 8))
		}
		return ts + 4553 /* "" */
	}()
	_16n2 = int32(crt.Xstrlen(tls, _zMode))
	_c2 = int32(*(*int8)(unsafe.Pointer(_zMode)))
	if _c2 != int32('l') || _16n2 <= int32(2) || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg + 8)), ts+4554 /* "lines" */, uint64(_16n2)) != int32(0) {
		goto _229
	}

	*(*int32)(unsafe.Pointer(_p + 52)) = int32(0)
	Xsqlite3_snprintf(tls, int32(20), _p+138, ts+867 /* "\n" */)
	goto _230

_229:
	if _c2 != int32('c') || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg + 8)), ts+4560 /* "columns" */, uint64(_16n2)) != int32(0) {
		goto _231
	}

	*(*int32)(unsafe.Pointer(_p + 52)) = int32(1)
	Xsqlite3_snprintf(tls, int32(20), _p+138, ts+867 /* "\n" */)
	goto _232

_231:
	if _c2 != int32('l') || _16n2 <= int32(2) || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg + 8)), ts+4568 /* "list" */, uint64(_16n2)) != int32(0) {
		goto _233
	}

	*(*int32)(unsafe.Pointer(_p + 52)) = int32(2)
	Xsqlite3_snprintf(tls, int32(20), _p+118, ts+865 /* "|" */)
	Xsqlite3_snprintf(tls, int32(20), _p+138, ts+867 /* "\n" */)
	goto _234

_233:
	if _c2 != int32('h') || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg + 8)), ts+4573 /* "html" */, uint64(_16n2)) != int32(0) {
		goto _235
	}

	*(*int32)(unsafe.Pointer(_p + 52)) = int32(4)
	goto _236

_235:
	if _c2 != int32('t') || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg + 8)), ts+4578 /* "tcl" */, uint64(_16n2)) != int32(0) {
		goto _237
	}

	*(*int32)(unsafe.Pointer(_p + 52)) = int32(7)
	Xsqlite3_snprintf(tls, int32(20), _p+118, ts+4582 /* " " */)
	Xsqlite3_snprintf(tls, int32(20), _p+138, ts+867 /* "\n" */)
	goto _238

_237:
	if _c2 != int32('c') || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg + 8)), ts+4584 /* "csv" */, uint64(_16n2)) != int32(0) {
		goto _239
	}

	*(*int32)(unsafe.Pointer(_p + 52)) = int32(8)
	Xsqlite3_snprintf(tls, int32(20), _p+118, ts+416 /* "," */)
	Xsqlite3_snprintf(tls, int32(20), _p+138, ts+3574 /* "\r\n" */)
	goto _240

_239:
	if _c2 != int32('t') || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg + 8)), ts+4588 /* "tabs" */, uint64(_16n2)) != int32(0) {
		goto _241
	}

	*(*int32)(unsafe.Pointer(_p + 52)) = int32(2)
	Xsqlite3_snprintf(tls, int32(20), _p+118, ts+4593 /* "\t" */)
	goto _242

_241:
	if _c2 != int32('i') || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg + 8)), ts+4595 /* "insert" */, uint64(_16n2)) != int32(0) {
		goto _243
	}

	*(*int32)(unsafe.Pointer(_p + 52)) = int32(5)
	_20set_table_name(tls, _p, func() uintptr {
		if _nArg >= int32(3) {
			return *(*uintptr)(unsafe.Pointer(_azArg + 16))
		}
		return ts + 4602 /* "table" */
	}())
	goto _244

_243:
	if _c2 != int32('q') || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg + 8)), ts+4608 /* "quote" */, uint64(_16n2)) != int32(0) {
		goto _245
	}

	*(*int32)(unsafe.Pointer(_p + 52)) = int32(6)
	goto _246

_245:
	if _c2 != int32('a') || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg + 8)), ts+4614 /* "ascii" */, uint64(_16n2)) != int32(0) {
		goto _247
	}

	*(*int32)(unsafe.Pointer(_p + 52)) = int32(10)
	Xsqlite3_snprintf(tls, int32(20), _p+118, ts+425 /* "\x1f" */)
	Xsqlite3_snprintf(tls, int32(20), _p+138, ts+427 /* "\x1e" */)
	goto _248

_247:
	if _nArg != int32(1) {
		goto _249
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+4620 /* "current output mode: %s\n" */, *(*uintptr)(unsafe.Pointer(_65modeDescr + 8*uintptr(*(*int32)(unsafe.Pointer(_p + 52))))))
	goto _250

_249:
	crt.Xfprintf(tls, Xstderr, ts+4645 /* "Error: mode should be one of: as..." */)
	_rc = int32(1)
_250:
_248:
_246:
_244:
_242:
_240:
_238:
_236:
_234:
_232:
_230:
	*(*int32)(unsafe.Pointer(_p + 56)) = *(*int32)(unsafe.Pointer(_p + 52))
	goto _228

_227:
	if _c != int32('n') || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+4730 /* "nullvalue" */, uint64(_n)) != int32(0) {
		goto _251
	}

	if _nArg != int32(2) {
		goto _253
	}

	Xsqlite3_snprintf(tls, int32(20), _p+960, ts+4740 /* "%.*s" */, int32(19), *(*uintptr)(unsafe.Pointer(_azArg + 8)))
	goto _254

_253:
	crt.Xfprintf(tls, Xstderr, ts+4745 /* "Usage: .nullvalue STRING\n" */)
	_rc = int32(1)
_254:
	goto _252

_251:
	if _c != int32('o') || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+4771 /* "open" */, uint64(_n)) != int32(0) || _n < int32(2) {
		goto _255
	}

	_iName = int32(1)
	_newFlag = int32(0)
	Xsqlite3_close(tls, *(*uintptr)(unsafe.Pointer(_p)))
	*(*uintptr)(unsafe.Pointer(_p)) = null
	*(*uintptr)(unsafe.Pointer(_p + 5080)) = null
	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_p + 5088)))
	*(*uintptr)(unsafe.Pointer(_p + 5088)) = null
	_iName = int32(1)
_257:
	if _iName >= _nArg || int32(*(*int8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_iName)))))) != int32('-') {
		goto _259
	}

	_17z = *(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_iName)))
	if _57optionMatch(tls, _17z, ts+4776 /* "new" */) == 0 {
		goto _260
	}

	_newFlag = int32(1)
	goto _261

_260:
	if int32(*(*int8)(unsafe.Pointer(_17z))) != int32('-') {
		goto _262
	}

	crt.Xfprintf(tls, Xstderr, ts+1343 /* "unknown option: %s\n" */, _17z)
	_rc = int32(1)
	goto _meta_command_exit

_262:
_261:
	_iName++
	goto _257

_259:
	_zNewFilename = func() uintptr {
		if _nArg > _iName {
			return Xsqlite3_mprintf(tls, ts+429 /* "%s" */, *(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_iName))))
		}
		return null
	}()
	if _zNewFilename == 0 {
		goto _263
	}

	if _newFlag == 0 {
		goto _264
	}

	XshellDeleteFile(tls, _zNewFilename)
_264:
	*(*uintptr)(unsafe.Pointer(_p + 5080)) = _zNewFilename
	_9open_db(tls, _p, int32(1))
	if (*(*uintptr)(unsafe.Pointer(_p))) != 0 {
		goto _265
	}

	crt.Xfprintf(tls, Xstderr, ts+4780 /* "Error: cannot open '%s'\n" */, _zNewFilename)
	Xsqlite3_free(tls, _zNewFilename)
	goto _266

_265:
	*(*uintptr)(unsafe.Pointer(_p + 5088)) = _zNewFilename
_266:
_263:
	if (*(*uintptr)(unsafe.Pointer(_p))) != 0 {
		goto _267
	}

	*(*uintptr)(unsafe.Pointer(_p + 5080)) = null
	_9open_db(tls, _p, int32(0))
_267:
	goto _256

_255:
	if _c != int32('o') || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+4805 /* "output" */, uint64(_n)) != int32(0) && crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+4812 /* "once" */, uint64(_n)) != int32(0) {
		goto _268
	}

	_18zFile = func() uintptr {
		if _nArg >= int32(2) {
			return *(*uintptr)(unsafe.Pointer(_azArg + 8))
		}
		return ts + 4817 /* "stdout" */
	}()
	if _nArg <= int32(2) {
		goto _270
	}

	crt.Xfprintf(tls, Xstderr, ts+4824 /* "Usage: .%s FILE\n" */, *(*uintptr)(unsafe.Pointer(_azArg)))
	_rc = int32(1)
	goto _meta_command_exit

_270:
	if _n <= int32(1) || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+4812 /* "once" */, uint64(_n)) != int32(0) {
		goto _271
	}

	if _nArg >= int32(2) {
		goto _273
	}

	crt.Xfprintf(tls, Xstderr, ts+4841 /* "Usage: .once FILE\n" */)
	_rc = int32(1)
	goto _meta_command_exit

_273:
	*(*int32)(unsafe.Pointer(_p + 24)) = int32(2)
	goto _272

_271:
	*(*int32)(unsafe.Pointer(_p + 24)) = int32(0)
_272:
	_49output_reset(tls, _p)
	if int32(*(*int8)(unsafe.Pointer(_18zFile))) != int32('|') {
		goto _274
	}

	*(*uintptr)(unsafe.Pointer(_p + 32)) = crt.Xpopen(tls, _18zFile+uintptr(1), ts+4860 /* "w" */)
	if (*(*uintptr)(unsafe.Pointer(_p + 32))) != 0 {
		goto _276
	}

	crt.Xfprintf(tls, Xstderr, ts+4862 /* "Error: cannot open pipe \"%s\"\n" */, _18zFile+uintptr(1))
	*(*uintptr)(unsafe.Pointer(_p + 32)) = Xstdout
	_rc = int32(1)
	goto _277

_276:
	Xsqlite3_snprintf(tls, int32(4096), _p+980, ts+429 /* "%s" */, _18zFile)
_277:
	goto _275

_274:
	*(*uintptr)(unsafe.Pointer(_p + 32)) = _64output_file_open(tls, _18zFile)
	if (*(*uintptr)(unsafe.Pointer(_p + 32))) != 0 {
		goto _278
	}

	if crt.Xstrcmp(tls, _18zFile, ts+4892 /* "off" */) == int32(0) {
		goto _280
	}

	crt.Xfprintf(tls, Xstderr, ts+4896 /* "Error: cannot write to \"%s\"\n" */, _18zFile)
_280:
	*(*uintptr)(unsafe.Pointer(_p + 32)) = Xstdout
	_rc = int32(1)
	goto _279

_278:
	Xsqlite3_snprintf(tls, int32(4096), _p+980, ts+429 /* "%s" */, _18zFile)
_279:
_275:
	goto _269

_268:
	if _c != int32('p') || _n < int32(3) || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+4925 /* "print" */, uint64(_n)) != int32(0) {
		goto _281
	}

	_19i = int32(1)
_283:
	if _19i >= _nArg {
		goto _285
	}

	if _19i <= int32(1) {
		goto _286
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+4582 /* " " */)
_286:
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+429 /* "%s" */, *(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_19i))))
	_19i++
	goto _283

_285:
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+867 /* "\n" */)
	goto _282

_281:
	if _c != int32('p') || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+4931 /* "prompt" */, uint64(_n)) != int32(0) {
		goto _287
	}

	if _nArg < int32(2) {
		goto _289
	}

	crt.Xstrncpy(tls, _22mainPrompt, *(*uintptr)(unsafe.Pointer(_azArg + 8)), uint64(19))
_289:
	if _nArg < int32(3) {
		goto _290
	}

	crt.Xstrncpy(tls, _23continuePrompt, *(*uintptr)(unsafe.Pointer(_azArg + 16)), uint64(19))
_290:
	goto _288

_287:
	if _c != int32('q') || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+4938 /* "quit" */, uint64(_n)) != int32(0) {
		goto _291
	}

	_rc = int32(2)
	goto _292

_291:
	if _c != int32('r') || _n < int32(3) || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+4943 /* "read" */, uint64(_n)) != int32(0) {
		goto _293
	}

	if _nArg == int32(2) {
		goto _295
	}

	crt.Xfprintf(tls, Xstderr, ts+4948 /* "Usage: .read FILE\n" */)
	_rc = int32(1)
	goto _meta_command_exit

_295:
	_alt = crt.Xfopen64(tls, *(*uintptr)(unsafe.Pointer(_azArg + 8)), ts+1058 /* "rb" */)
	if _alt != 0 {
		goto _296
	}

	crt.Xfprintf(tls, Xstderr, ts+1437 /* "Error: cannot open \"%s\"\n" */, *(*uintptr)(unsafe.Pointer(_azArg + 8)))
	_rc = int32(1)
	goto _297

_296:
	_rc = _19process_input(tls, _p, _alt)
	crt.Xfclose(tls, _alt)
_297:
	goto _294

_293:
	if _c != int32('r') || _n < int32(3) || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+4967 /* "restore" */, uint64(_n)) != int32(0) {
		goto _298
	}

	_nTimeout = int32(0)
	if _nArg != int32(2) {
		goto _300
	}

	_zSrcFile = *(*uintptr)(unsafe.Pointer(_azArg + 8))
	_20zDb = ts + 1432 /* "main" */
	goto _301

_300:
	if _nArg != int32(3) {
		goto _302
	}

	_zSrcFile = *(*uintptr)(unsafe.Pointer(_azArg + 16))
	_20zDb = *(*uintptr)(unsafe.Pointer(_azArg + 8))
	goto _303

_302:
	crt.Xfprintf(tls, Xstderr, ts+4975 /* "Usage: .restore ?DB? FILE\n" */)
	_rc = int32(1)
	goto _meta_command_exit

_303:
_301:
	_rc = Xsqlite3_open(tls, _zSrcFile, _pSrc)
	if _rc == int32(0) {
		goto _304
	}

	crt.Xfprintf(tls, Xstderr, ts+1437 /* "Error: cannot open \"%s\"\n" */, _zSrcFile)
	Xsqlite3_close(tls, *(*uintptr)(unsafe.Pointer(_pSrc)))
	return int32(1)

_304:
	_9open_db(tls, _p, int32(0))
	_21pBackup = Xsqlite3_backup_init(tls, *(*uintptr)(unsafe.Pointer(_p)), _20zDb, *(*uintptr)(unsafe.Pointer(_pSrc)), ts+1432 /* "main" */)
	if _21pBackup != 0 {
		goto _305
	}

	crt.Xfprintf(tls, Xstderr, ts+540 /* "Error: %s\n" */, Xsqlite3_errmsg(tls, *(*uintptr)(unsafe.Pointer(_p))))
	Xsqlite3_close(tls, *(*uintptr)(unsafe.Pointer(_pSrc)))
	return int32(1)

_305:
_306:
	if set5(&_rc, Xsqlite3_backup_step(tls, _21pBackup, int32(100))) != int32(0) && _rc != int32(5) {
		goto _307
	}

	if _rc != int32(5) {
		goto _308
	}

	if postinc7(&_nTimeout) < int32(3) {
		goto _309
	}

	goto _307

_309:
	Xsqlite3_sleep(tls, int32(100))
_308:
	goto _306

_307:
	Xsqlite3_backup_finish(tls, _21pBackup)
	if _rc != int32(101) {
		goto _310
	}

	_rc = int32(0)
	goto _311

_310:
	if _rc != int32(5) && _rc != int32(6) {
		goto _312
	}

	crt.Xfprintf(tls, Xstderr, ts+5002 /* "Error: source database is busy\n" */)
	_rc = int32(1)
	goto _313

_312:
	crt.Xfprintf(tls, Xstderr, ts+540 /* "Error: %s\n" */, Xsqlite3_errmsg(tls, *(*uintptr)(unsafe.Pointer(_p))))
	_rc = int32(1)
_313:
_311:
	Xsqlite3_close(tls, *(*uintptr)(unsafe.Pointer(_pSrc)))
	goto _299

_298:
	if _c != int32('s') || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+5034 /* "scanstats" */, uint64(_n)) != int32(0) {
		goto _314
	}

	if _nArg != int32(2) {
		goto _316
	}

	*(*int32)(unsafe.Pointer(_p + 20)) = _45booleanValue(tls, *(*uintptr)(unsafe.Pointer(_azArg + 8)))
	crt.Xfprintf(tls, Xstderr, ts+5044 /* "Warning: .scanstats not availabl..." */)
	goto _317

_316:
	crt.Xfprintf(tls, Xstderr, ts+5094 /* "Usage: .scanstats on|off\n" */)
	_rc = int32(1)
_317:
	goto _315

_314:
	if _c != int32('s') || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+5120 /* "schema" */, uint64(_n)) != int32(0) {
		goto _318
	}

	*(*uintptr)(unsafe.Pointer(_23zErrMsg)) = 0
	_zDiv = 0
	_iSchema = int32(0)
	_9open_db(tls, _p, int32(0))
	crt.Xmemcpy(tls, _22data, _p, uint64(5136))
	*(*int32)(unsafe.Pointer(_22data + 68)) = int32(0)
	*(*int32)(unsafe.Pointer(_22data + 56)) = set5(&(*(*int32)(unsafe.Pointer(_22data + 52))), int32(3))
	_66initText(tls, _sSelect)
	if _nArg < int32(2) || _57optionMatch(tls, *(*uintptr)(unsafe.Pointer(_azArg + 8)), ts+2759 /* "indent" */) == 0 {
		goto _320
	}

	*(*int32)(unsafe.Pointer(_22data + 56)) = set5(&(*(*int32)(unsafe.Pointer(_22data + 52))), int32(11))
	_nArg--
	if _nArg != int32(2) {
		goto _321
	}

	*(*uintptr)(unsafe.Pointer(_azArg + 8)) = *(*uintptr)(unsafe.Pointer(_azArg + 16))
_321:
_320:
	if _nArg != int32(2) || int32(*(*int8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_azArg + 8))))) == int32('-') {
		goto _322
	}

	_24i = int32(0)
_324:
	if (*(*int8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_azArg + 8))) + uintptr(_24i)))) == 0 {
		goto _326
	}

	*(*int8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_azArg + 8))) + uintptr(_24i))) = int8(crt.Xtolower(tls, int32(uint8(*(*int8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_azArg + 8))) + uintptr(_24i)))))))
	_24i++
	goto _324

_326:
	if crt.Xstrcmp(tls, *(*uintptr)(unsafe.Pointer(_azArg + 8)), ts+5127 /* "sqlite_master" */) != int32(0) {
		goto _327
	}

	*(*uintptr)(unsafe.Pointer(_new_argv)) = ts + 5141 /* "CREATE TABLE sqlite_master (\n  t..." */
	*(*uintptr)(unsafe.Pointer(_new_argv + 8)) = null
	*(*uintptr)(unsafe.Pointer(_new_colv)) = ts + 5246 /* "sql" */
	*(*uintptr)(unsafe.Pointer(_new_colv + 8)) = null
	_53callback(tls, _22data, int32(1), _new_argv, _new_colv)
	_rc = int32(0)
	goto _328

_327:
	if crt.Xstrcmp(tls, *(*uintptr)(unsafe.Pointer(_azArg + 8)), ts+5250 /* "sqlite_temp_master" */) != int32(0) {
		goto _329
	}

	*(*uintptr)(unsafe.Pointer(_25new_argv)) = ts + 5269 /* "CREATE TEMP TABLE sqlite_temp_ma..." */
	*(*uintptr)(unsafe.Pointer(_25new_argv + 8)) = null
	*(*uintptr)(unsafe.Pointer(_26new_colv)) = ts + 5246 /* "sql" */
	*(*uintptr)(unsafe.Pointer(_26new_colv + 8)) = null
	_53callback(tls, _22data, int32(1), _25new_argv, _26new_colv)
	_rc = int32(0)
	goto _330

_329:
	_zDiv = ts + 5384 /* "(" */
_330:
_328:
	goto _323

_322:
	if _nArg != int32(1) {
		goto _331
	}

	_zDiv = ts + 5384 /* "(" */
	goto _332

_331:
	crt.Xfprintf(tls, Xstderr, ts+5386 /* "Usage: .schema ?--indent? ?LIKE-..." */)
	_rc = int32(1)
	goto _meta_command_exit

_332:
_323:
	if _zDiv == 0 {
		goto _333
	}

	*(*uintptr)(unsafe.Pointer(_27pStmt)) = 0
	_rc = Xsqlite3_prepare_v2(tls, *(*uintptr)(unsafe.Pointer(_p)), ts+5428 /* "SELECT name FROM pragma_database..." */, int32(-1), _27pStmt, null)
	if _rc == 0 {
		goto _334
	}

	crt.Xfprintf(tls, Xstderr, ts+540 /* "Error: %s\n" */, Xsqlite3_errmsg(tls, *(*uintptr)(unsafe.Pointer(_p))))
	Xsqlite3_finalize(tls, *(*uintptr)(unsafe.Pointer(_27pStmt)))
	_rc = int32(1)
	goto _meta_command_exit

_334:
	_67appendText(tls, _sSelect, ts+5466 /* "SELECT sql FROM" */, int8(0))
	_iSchema = int32(0)
_335:
	if Xsqlite3_step(tls, *(*uintptr)(unsafe.Pointer(_27pStmt))) != int32(100) {
		goto _336
	}

	_28zDb = Xsqlite3_column_text(tls, *(*uintptr)(unsafe.Pointer(_27pStmt)), int32(0))
	Xsqlite3_snprintf(tls, int32(30), _zScNum, ts+5482 /* "%d" */, preinc2(&_iSchema))
	_67appendText(tls, _sSelect, _zDiv, int8(0))
	_zDiv = ts + 5485 /* " UNION ALL " */
	if crt.Xstrcmp(tls, _28zDb, ts+1432 /* "main" */) == int32(0) {
		goto _337
	}

	_67appendText(tls, _sSelect, ts+5497 /* "SELECT shell_add_schema(sql," */, int8(0))
	_67appendText(tls, _sSelect, _28zDb, int8('"'))
	_67appendText(tls, _sSelect, ts+5526 /* ") AS sql, type, tbl_name, name, ..." */, int8(0))
	_67appendText(tls, _sSelect, _zScNum, int8(0))
	_67appendText(tls, _sSelect, ts+5565 /* " AS snum, " */, int8(0))
	_67appendText(tls, _sSelect, _28zDb, int8('\''))
	_67appendText(tls, _sSelect, ts+5576 /* " AS sname FROM " */, int8(0))
	_67appendText(tls, _sSelect, _28zDb, int8('"'))
	_67appendText(tls, _sSelect, ts+5592 /* ".sqlite_master" */, int8(0))
	goto _338

_337:
	_67appendText(tls, _sSelect, ts+5607 /* "SELECT sql, type, tbl_name, name..." */, int8(0))
	_67appendText(tls, _sSelect, _zScNum, int8(0))
	_67appendText(tls, _sSelect, ts+5649 /* " AS snum, 'main' AS sname FROM s..." */, int8(0))
_338:
	goto _335

_336:
	Xsqlite3_finalize(tls, *(*uintptr)(unsafe.Pointer(_27pStmt)))
	_67appendText(tls, _sSelect, ts+5694 /* ") WHERE " */, int8(0))
	if _nArg <= int32(1) {
		goto _339
	}

	_zQarg = Xsqlite3_mprintf(tls, ts+5703 /* "%Q" */, *(*uintptr)(unsafe.Pointer(_azArg + 8)))
	if crt.Xstrchr(tls, *(*uintptr)(unsafe.Pointer(_azArg + 8)), int32('.')) == 0 {
		goto _340
	}

	_67appendText(tls, _sSelect, ts+5706 /* "lower(printf('%s.%s',sname,tbl_n..." */, int8(0))
	goto _341

_340:
	_67appendText(tls, _sSelect, ts+5744 /* "lower(tbl_name)" */, int8(0))
_341:
	_67appendText(tls, _sSelect, func() uintptr {
		if crt.Xstrchr(tls, *(*uintptr)(unsafe.Pointer(_azArg + 8)), int32('*')) != 0 {
			return ts + 5760 /* " GLOB " */
		}
		return ts + 5767 /* " LIKE " */
	}(), int8(0))
	_67appendText(tls, _sSelect, _zQarg, int8(0))
	_67appendText(tls, _sSelect, ts+5774 /* " AND " */, int8(0))
	Xsqlite3_free(tls, _zQarg)
_339:
	_67appendText(tls, _sSelect, ts+5780 /* "type!='meta' AND sql IS NOT NULL..." */, int8(0))
	_rc = Xsqlite3_exec(tls, *(*uintptr)(unsafe.Pointer(_p)), *(*uintptr)(unsafe.Pointer(_sSelect)), fp9(_53callback), _22data, _23zErrMsg)
	_68freeText(tls, _sSelect)
_333:
	if (*(*uintptr)(unsafe.Pointer(_23zErrMsg))) == 0 {
		goto _342
	}

	crt.Xfprintf(tls, Xstderr, ts+540 /* "Error: %s\n" */, *(*uintptr)(unsafe.Pointer(_23zErrMsg)))
	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_23zErrMsg)))
	_rc = int32(1)
	goto _343

_342:
	if _rc == int32(0) {
		goto _344
	}

	crt.Xfprintf(tls, Xstderr, ts+5834 /* "Error: querying schema informati..." */)
	_rc = int32(1)
	goto _345

_344:
	_rc = int32(0)
_345:
_343:
	goto _319

_318:
	if _c != int32('s') || _n < int32(4) || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+5870 /* "selftest" */, uint64(_n)) != int32(0) {
		goto _346
	}

	_bIsInit = int32(0)
	_bVerbose = int32(0)
	_nTest = int32(0)
	_nErr = int32(0)
	*(*uintptr)(unsafe.Pointer(_30pStmt)) = 0
	_9open_db(tls, _p, int32(0))
	_29i = int32(1)
_348:
	if _29i >= _nArg {
		goto _350
	}

	_31z = *(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_29i)))
	if int32(*(*int8)(unsafe.Pointer(_31z))) != int32('-') || int32(*(*int8)(unsafe.Pointer(_31z + 1))) != int32('-') {
		goto _351
	}

	_31z++
_351:
	if crt.Xstrcmp(tls, _31z, ts+298 /* "-init" */) != int32(0) {
		goto _352
	}

	_bIsInit = int32(1)
	goto _353

_352:
	if crt.Xstrcmp(tls, _31z, ts+5879 /* "-v" */) != int32(0) {
		goto _354
	}

	_bVerbose++
	goto _355

_354:
	crt.Xfprintf(tls, Xstderr, ts+5882 /* "Unknown option \"%s\" on \"%s\"\n" */, *(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_29i))), *(*uintptr)(unsafe.Pointer(_azArg)))
	crt.Xfprintf(tls, Xstderr, ts+5911 /* "Should be one of: --init -v\n" */)
	_rc = int32(1)
	goto _meta_command_exit

_355:
_353:
	_29i++
	goto _348

_350:
	if Xsqlite3_table_column_metadata(tls, *(*uintptr)(unsafe.Pointer(_p)), ts+1432 /* "main" */, ts+5870 /* "selftest" */, null, null, null, null, null, null) == int32(0) {
		goto _356
	}

	_bSelftestExists = int32(0)
	goto _357

_356:
	_bSelftestExists = int32(1)
_357:
	if _bIsInit == 0 {
		goto _358
	}

	_69createSelftestTable(tls, _p)
	_bSelftestExists = int32(1)
_358:
	_66initText(tls, _str)
	_67appendText(tls, _str, ts+5940 /* "x" */, int8(0))
	_k = _bSelftestExists
_359:
	if _k < int32(0) {
		goto _361
	}

	if _k != int32(1) {
		goto _362
	}

	_rc = Xsqlite3_prepare_v2(tls, *(*uintptr)(unsafe.Pointer(_p)), ts+5942 /* "SELECT tno,op,cmd,ans FROM selft..." */, int32(-1), _30pStmt, null)
	goto _363

_362:
	_rc = Xsqlite3_prepare_v2(tls, *(*uintptr)(unsafe.Pointer(_p)), ts+5991 /* "VALUES(0,'memo','Missing SELFTES..." */, int32(-1), _30pStmt, null)
_363:
	if _rc == 0 {
		goto _364
	}

	crt.Xfprintf(tls, Xstderr, ts+6104 /* "Error querying the selftest tabl..." */)
	_rc = int32(1)
	Xsqlite3_finalize(tls, *(*uintptr)(unsafe.Pointer(_30pStmt)))
	goto _meta_command_exit

_364:
	_29i = int32(1)
_365:
	if Xsqlite3_step(tls, *(*uintptr)(unsafe.Pointer(_30pStmt))) != int32(100) {
		goto _367
	}

	_tno = Xsqlite3_column_int(tls, *(*uintptr)(unsafe.Pointer(_30pStmt)), int32(0))
	_zOp = Xsqlite3_column_text(tls, *(*uintptr)(unsafe.Pointer(_30pStmt)), int32(1))
	_32zSql = Xsqlite3_column_text(tls, *(*uintptr)(unsafe.Pointer(_30pStmt)), int32(2))
	_zAns = Xsqlite3_column_text(tls, *(*uintptr)(unsafe.Pointer(_30pStmt)), int32(3))
	_k = int32(0)
	if _bVerbose <= int32(0) {
		goto _368
	}

	_zQuote = Xsqlite3_mprintf(tls, ts+6139 /* "%q" */, _32zSql)
	crt.Xprintf(tls, ts+6142 /* "%d: %s %s\n" */, _tno, _zOp, _32zSql)
	Xsqlite3_free(tls, _zQuote)
_368:
	if crt.Xstrcmp(tls, _zOp, ts+6153 /* "memo" */) != int32(0) {
		goto _369
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+6158 /* "%s\n" */, _32zSql)
	goto _370

_369:
	if crt.Xstrcmp(tls, _zOp, ts+6162 /* "run" */) != int32(0) {
		goto _371
	}

	*(*uintptr)(unsafe.Pointer(_33zErrMsg)) = 0
	*(*int32)(unsafe.Pointer(_str + 8)) = int32(0)
	*(*int8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_str)))) = int8(0)
	_rc = Xsqlite3_exec(tls, *(*uintptr)(unsafe.Pointer(_p)), _32zSql, fp9(_70captureOutputCallback), _str, _33zErrMsg)
	_nTest++
	if _bVerbose == 0 {
		goto _373
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+6166 /* "Result: %s\n" */, *(*uintptr)(unsafe.Pointer(_str)))
_373:
	if _rc == 0 && (*(*uintptr)(unsafe.Pointer(_33zErrMsg))) == 0 {
		goto _374
	}

	_nErr++
	_rc = int32(1)
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+6178 /* "%d: error-code-%d: %s\n" */, _tno, _rc, *(*uintptr)(unsafe.Pointer(_33zErrMsg)))
	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_33zErrMsg)))
	goto _375

_374:
	if crt.Xstrcmp(tls, _zAns, *(*uintptr)(unsafe.Pointer(_str))) == int32(0) {
		goto _376
	}

	_nErr++
	_rc = int32(1)
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+6201 /* "%d: Expected: [%s]\n" */, _tno, _zAns)
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+6221 /* "%d:      Got: [%s]\n" */, _tno, *(*uintptr)(unsafe.Pointer(_str)))
_376:
_375:
	goto _372

_371:
	crt.Xfprintf(tls, Xstderr, ts+6241 /* "Unknown operation \"%s\" on selfte..." */, _zOp, _tno)
	_rc = int32(1)
	goto _367

_372:
_370:
	_29i++
	goto _365

_367:
	Xsqlite3_finalize(tls, *(*uintptr)(unsafe.Pointer(_30pStmt)))
	_k--
	goto _359

_361:
	_68freeText(tls, _str)
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+6285 /* "%d errors out of %d tests\n" */, _nErr, _nTest)
	goto _347

_346:
	if _c != int32('s') || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+6312 /* "separator" */, uint64(_n)) != int32(0) {
		goto _377
	}

	if _nArg >= int32(2) && _nArg <= int32(3) {
		goto _379
	}

	crt.Xfprintf(tls, Xstderr, ts+6322 /* "Usage: .separator COL ?ROW?\n" */)
	_rc = int32(1)
_379:
	if _nArg < int32(2) {
		goto _380
	}

	Xsqlite3_snprintf(tls, int32(20), _p+118, ts+4740 /* "%.*s" */, int32(19), *(*uintptr)(unsafe.Pointer(_azArg + 8)))
_380:
	if _nArg < int32(3) {
		goto _381
	}

	Xsqlite3_snprintf(tls, int32(20), _p+138, ts+4740 /* "%.*s" */, int32(19), *(*uintptr)(unsafe.Pointer(_azArg + 16)))
_381:
	goto _378

_377:
	if _c != int32('s') || _n < int32(4) || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+6351 /* "sha3sum" */, uint64(_n)) != int32(0) {
		goto _382
	}

	_34zLike = 0
	_bSchema = int32(0)
	_bSeparate = int32(0)
	_iSize = int32(224)
	_bDebug = int32(0)
	_9open_db(tls, _p, int32(0))
	_35i = int32(1)
_384:
	if _35i >= _nArg {
		goto _386
	}

	_38z = *(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_35i)))
	if int32(*(*int8)(unsafe.Pointer(_38z))) != int32('-') {
		goto _387
	}

	_38z++
	if int32(*(*int8)(unsafe.Pointer(_38z))) != int32('-') {
		goto _389
	}

	_38z++
_389:
	if crt.Xstrcmp(tls, _38z, ts+5120 /* "schema" */) != int32(0) {
		goto _390
	}

	_bSchema = int32(1)
	goto _391

_390:
	if crt.Xstrcmp(tls, _38z, ts+6359 /* "sha3-224" */) != int32(0) && crt.Xstrcmp(tls, _38z, ts+6368 /* "sha3-256" */) != int32(0) && crt.Xstrcmp(tls, _38z, ts+6377 /* "sha3-384" */) != int32(0) && crt.Xstrcmp(tls, _38z, ts+6386 /* "sha3-512" */) != int32(0) {
		goto _392
	}

	_iSize = crt.Xatoi(tls, _38z+5)
	goto _393

_392:
	if crt.Xstrcmp(tls, _38z, ts+6395 /* "debug" */) != int32(0) {
		goto _394
	}

	_bDebug = int32(1)
	goto _395

_394:
	crt.Xfprintf(tls, Xstderr, ts+5882 /* "Unknown option \"%s\" on \"%s\"\n" */, *(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_35i))), *(*uintptr)(unsafe.Pointer(_azArg)))
	crt.Xfprintf(tls, Xstderr, ts+6401 /* "Should be one of: --schema --sha..." */)
	_rc = int32(1)
	goto _meta_command_exit

_395:
_393:
_391:
	goto _388

_387:
	if _34zLike == 0 {
		goto _396
	}

	crt.Xfprintf(tls, Xstderr, ts+6473 /* "Usage: .sha3sum ?OPTIONS? ?LIKE-..." */)
	_rc = int32(1)
	goto _meta_command_exit

	goto _397

_396:
	_34zLike = _38z
	_bSeparate = int32(1)
	if Xsqlite3_strlike(tls, ts+6515 /* "sqlite_%" */, _34zLike, uint32(0)) != int32(0) {
		goto _398
	}

	_bSchema = int32(1)
_398:
_397:
_388:
	_35i++
	goto _384

_386:
	if _bSchema == 0 {
		goto _399
	}

	_37zSql = ts + 6524 /* "SELECT lower(name) FROM sqlite_m..." */
	goto _400

_399:
	_37zSql = ts + 6667 /* "SELECT lower(name) FROM sqlite_m..." */
_400:
	Xsqlite3_prepare_v2(tls, *(*uintptr)(unsafe.Pointer(_p)), _37zSql, int32(-1), _36pStmt, null)
	_66initText(tls, _sQuery)
	_66initText(tls, _sSql)
	_67appendText(tls, _sSql, ts+6806 /* "WITH [sha3sum$query](a,b) AS(" */, int8(0))
	_zSep = ts + 6836 /* "VALUES(" */
_401:
	if int32(100) != Xsqlite3_step(tls, *(*uintptr)(unsafe.Pointer(_36pStmt))) {
		goto _402
	}

	_zTab = Xsqlite3_column_text(tls, *(*uintptr)(unsafe.Pointer(_36pStmt)), int32(0))
	if _34zLike == 0 || Xsqlite3_strlike(tls, _34zLike, _zTab, uint32(0)) == int32(0) {
		goto _403
	}

	goto _401

_403:
	if crt.Xstrncmp(tls, _zTab, ts+6844 /* "sqlite_" */, uint64(7)) == int32(0) {
		goto _404
	}

	_67appendText(tls, _sQuery, ts+6852 /* "SELECT * FROM " */, int8(0))
	_67appendText(tls, _sQuery, _zTab, int8('"'))
	_67appendText(tls, _sQuery, ts+6867 /* " NOT INDEXED;" */, int8(0))
	goto _405

_404:
	if crt.Xstrcmp(tls, _zTab, ts+5127 /* "sqlite_master" */) != int32(0) {
		goto _406
	}

	_67appendText(tls, _sQuery, ts+6881 /* "SELECT type,name,tbl_name,sql FR..." */, int8(0))
	goto _407

_406:
	if crt.Xstrcmp(tls, _zTab, ts+6945 /* "sqlite_sequence" */) != int32(0) {
		goto _408
	}

	_67appendText(tls, _sQuery, ts+6961 /* "SELECT name,seq FROM sqlite_sequ..." */, int8(0))
	goto _409

_408:
	if crt.Xstrcmp(tls, _zTab, ts+3213 /* "sqlite_stat1" */) != int32(0) {
		goto _410
	}

	_67appendText(tls, _sQuery, ts+7013 /* "SELECT tbl,idx,stat FROM sqlite_..." */, int8(0))
	goto _411

_410:
	if crt.Xstrcmp(tls, _zTab, ts+3253 /* "sqlite_stat3" */) != int32(0) && crt.Xstrcmp(tls, _zTab, ts+3293 /* "sqlite_stat4" */) != int32(0) {
		goto _412
	}

	_67appendText(tls, _sQuery, ts+6852 /* "SELECT * FROM " */, int8(0))
	_67appendText(tls, _sQuery, _zTab, int8(0))
	_67appendText(tls, _sQuery, ts+7069 /* " ORDER BY tbl, idx, rowid;\n" */, int8(0))
_412:
_411:
_409:
_407:
_405:
	_67appendText(tls, _sSql, _zSep, int8(0))
	_67appendText(tls, _sSql, *(*uintptr)(unsafe.Pointer(_sQuery)), int8('\''))
	*(*int32)(unsafe.Pointer(_sQuery + 8)) = int32(0)
	_67appendText(tls, _sSql, ts+416 /* "," */, int8(0))
	_67appendText(tls, _sSql, _zTab, int8('\''))
	_zSep = ts + 7097 /* "),(" */
	goto _401

_402:
	Xsqlite3_finalize(tls, *(*uintptr)(unsafe.Pointer(_36pStmt)))
	if _bSeparate == 0 {
		goto _413
	}

	_37zSql = Xsqlite3_mprintf(tls, ts+7101 /* "%s)) SELECT lower(hex(sha3_query..." */, *(*uintptr)(unsafe.Pointer(_sSql)), _iSize)
	goto _414

_413:
	_37zSql = Xsqlite3_mprintf(tls, ts+7185 /* "%s)) SELECT lower(hex(sha3_query..." */, *(*uintptr)(unsafe.Pointer(_sSql)), _iSize)
_414:
	_68freeText(tls, _sQuery)
	_68freeText(tls, _sSql)
	if _bDebug == 0 {
		goto _415
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+6158 /* "%s\n" */, _37zSql)
	goto _416

_415:
	_14shell_exec(tls, *(*uintptr)(unsafe.Pointer(_p)), _37zSql, fp3(_15shell_callback), _p, null)
_416:
	Xsqlite3_free(tls, _37zSql)
	goto _383

_382:
	if _c != int32('s') || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+7274 /* "shell" */, uint64(_n)) != int32(0) && crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+7280 /* "system" */, uint64(_n)) != int32(0) {
		goto _417
	}

	if _nArg >= int32(2) {
		goto _419
	}

	crt.Xfprintf(tls, Xstderr, ts+7287 /* "Usage: .system COMMAND\n" */)
	_rc = int32(1)
	goto _meta_command_exit

_419:
	_zCmd = Xsqlite3_mprintf(tls, func() uintptr {
		if crt.Xstrchr(tls, *(*uintptr)(unsafe.Pointer(_azArg + 8)), int32(' ')) == 0 {
			return ts + 429 /* "%s" */
		}
		return ts + 7311 /* "\"%s\"" */
	}(), *(*uintptr)(unsafe.Pointer(_azArg + 8)))
	_39i = int32(2)
_420:
	if _39i >= _nArg {
		goto _422
	}

	_zCmd = Xsqlite3_mprintf(tls, func() uintptr {
		if crt.Xstrchr(tls, *(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_39i))), int32(' ')) == 0 {
			return ts + 7316 /* "%z %s" */
		}
		return ts + 7322 /* "%z \"%s\"" */
	}(), _zCmd, *(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_39i))))
	_39i++
	goto _420

_422:
	_x = crt.Xsystem(tls, _zCmd)
	Xsqlite3_free(tls, _zCmd)
	if _x == 0 {
		goto _423
	}

	crt.Xfprintf(tls, Xstderr, ts+7330 /* "System command returns %d\n" */, _x)
_423:
	goto _418

_417:
	if _c != int32('s') || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+7357 /* "show" */, uint64(_n)) != int32(0) {
		goto _424
	}

	if _nArg == int32(1) {
		goto _426
	}

	crt.Xfprintf(tls, Xstderr, ts+7362 /* "Usage: .show\n" */)
	_rc = int32(1)
	goto _meta_command_exit

_426:
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+7376 /* "%12.12s: %s\n" */, ts+2670 /* "echo" */, *(*uintptr)(unsafe.Pointer(_42azBool + 8*uintptr(bool2int(((*(*uint32)(unsafe.Pointer(_p + 76)))&uint32(0x40)) != uint32(0))))))
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+7376 /* "%12.12s: %s\n" */, ts+2696 /* "eqp" */, *(*uintptr)(unsafe.Pointer(_42azBool + 8*uintptr((*(*int32)(unsafe.Pointer(_p + 12)))&int32(3)))))
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+7376 /* "%12.12s: %s\n" */, ts+2735 /* "explain" */, func() uintptr {
		if (*(*int32)(unsafe.Pointer(_p + 52))) == int32(9) {
			return ts + 7389 /* "on" */
		}
		return func() uintptr {
			if (*(*int32)(unsafe.Pointer(_p + 8))) != 0 {
				return ts + 2743 /* "auto" */
			}
			return ts + 4892 /* "off" */
		}()
	}())
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+7376 /* "%12.12s: %s\n" */, ts+3333 /* "headers" */, *(*uintptr)(unsafe.Pointer(_42azBool + 8*uintptr(bool2int((*(*int32)(unsafe.Pointer(_p + 68))) != int32(0))))))
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+7376 /* "%12.12s: %s\n" */, ts+4548 /* "mode" */, *(*uintptr)(unsafe.Pointer(_65modeDescr + 8*uintptr(*(*int32)(unsafe.Pointer(_p + 52))))))
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+7392 /* "%12.12s: " */, ts+4730 /* "nullvalue" */)
	_71output_c_string(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), _p+960)
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+867 /* "\n" */)
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+7376 /* "%12.12s: %s\n" */, ts+4805 /* "output" */, func() uintptr {
		if _18strlen30(tls, _p+980) != 0 {
			return _p + 980
		}
		return ts + 4817 /* "stdout" */
	}())
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+7392 /* "%12.12s: " */, ts+7402 /* "colseparator" */)
	_71output_c_string(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), _p+118)
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+867 /* "\n" */)
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+7392 /* "%12.12s: " */, ts+7415 /* "rowseparator" */)
	_71output_c_string(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), _p+138)
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+867 /* "\n" */)
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+7376 /* "%12.12s: %s\n" */, ts+7428 /* "stats" */, *(*uintptr)(unsafe.Pointer(_42azBool + 8*uintptr(bool2int((*(*int32)(unsafe.Pointer(_p + 16))) != int32(0))))))
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+7392 /* "%12.12s: " */, ts+7434 /* "width" */)
	_40i = int32(0)
_427:
	if _40i >= int32(100) || (*(*int32)(unsafe.Pointer((_p + 160) + 4*uintptr(_40i)))) == int32(0) {
		goto _429
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+7440 /* "%d " */, *(*int32)(unsafe.Pointer((_p + 160) + 4*uintptr(_40i))))
	_40i++
	goto _427

_429:
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+867 /* "\n" */)
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+7376 /* "%12.12s: %s\n" */, ts+7444 /* "filename" */, func() uintptr {
		if (*(*uintptr)(unsafe.Pointer(_p + 5080))) != 0 {
			return *(*uintptr)(unsafe.Pointer(_p + 5080))
		}
		return ts + 4553 /* "" */
	}())
	goto _425

_424:
	if _c != int32('s') || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+7428 /* "stats" */, uint64(_n)) != int32(0) {
		goto _430
	}

	if _nArg != int32(2) {
		goto _432
	}

	*(*int32)(unsafe.Pointer(_p + 16)) = _45booleanValue(tls, *(*uintptr)(unsafe.Pointer(_azArg + 8)))
	goto _433

_432:
	if _nArg != int32(1) {
		goto _434
	}

	_72display_stats(tls, *(*uintptr)(unsafe.Pointer(_p)), _p, int32(0))
	goto _435

_434:
	crt.Xfprintf(tls, Xstderr, ts+7453 /* "Usage: .stats ?on|off?\n" */)
	_rc = int32(1)
_435:
_433:
	goto _431

_430:
	if (_c != int32('t') || _n <= int32(1) || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+7477 /* "tables" */, uint64(_n)) != int32(0)) && (_c != int32('i') || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+7484 /* "indices" */, uint64(_n)) != int32(0) && crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+7492 /* "indexes" */, uint64(_n)) != int32(0)) {
		goto _436
	}

	_66initText(tls, _s)
	_9open_db(tls, _p, int32(0))
	_rc = Xsqlite3_prepare_v2(tls, *(*uintptr)(unsafe.Pointer(_p)), ts+7500 /* "PRAGMA database_list" */, int32(-1), _41pStmt, null)
	if _rc == 0 {
		goto _438
	}

	return _73shellDatabaseError(tls, *(*uintptr)(unsafe.Pointer(_p)))

_438:
	if _nArg <= int32(2) || _c != int32('i') {
		goto _439
	}

	crt.Xfprintf(tls, Xstderr, ts+7521 /* "Usage: .indexes ?LIKE-PATTERN?\n" */)
	_rc = int32(1)
	goto _meta_command_exit

_439:
	_ii = int32(0)
_440:
	if Xsqlite3_step(tls, *(*uintptr)(unsafe.Pointer(_41pStmt))) != int32(100) {
		goto _442
	}

	_zDbName = Xsqlite3_column_text(tls, *(*uintptr)(unsafe.Pointer(_41pStmt)), int32(1))
	if _zDbName != 0 {
		goto _443
	}

	goto _441

_443:
	if (*(*uintptr)(unsafe.Pointer(_s))) == 0 || (*(*int8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_s))))) == 0 {
		goto _444
	}

	_67appendText(tls, _s, ts+5485 /* " UNION ALL " */, int8(0))
_444:
	if Xsqlite3_stricmp(tls, _zDbName, ts+1432 /* "main" */) != int32(0) {
		goto _445
	}

	_67appendText(tls, _s, ts+7553 /* "SELECT name FROM " */, int8(0))
	goto _446

_445:
	_67appendText(tls, _s, ts+7571 /* "SELECT " */, int8(0))
	_67appendText(tls, _s, _zDbName, int8('\''))
	_67appendText(tls, _s, ts+7579 /* "||'.'||name FROM " */, int8(0))
_446:
	_67appendText(tls, _s, _zDbName, int8('"'))
	_67appendText(tls, _s, ts+7597 /* ".sqlite_master " */, int8(0))
	if _c != int32('t') {
		goto _447
	}

	_67appendText(tls, _s, ts+7613 /* " WHERE type IN ('table','view') ..." */, int8(0))
	goto _448

_447:
	_67appendText(tls, _s, ts+7695 /* " WHERE type='index'   AND tbl_na..." */, int8(0))
_448:
_441:
	_ii++
	goto _440

_442:
	_rc = Xsqlite3_finalize(tls, *(*uintptr)(unsafe.Pointer(_41pStmt)))
	_67appendText(tls, _s, ts+7738 /* " ORDER BY 1" */, int8(0))
	_rc = Xsqlite3_prepare_v2(tls, *(*uintptr)(unsafe.Pointer(_p)), *(*uintptr)(unsafe.Pointer(_s)), int32(-1), _41pStmt, null)
	_68freeText(tls, _s)
	if _rc == 0 {
		goto _449
	}

	return _73shellDatabaseError(tls, *(*uintptr)(unsafe.Pointer(_p)))

_449:
	_nRow = set5(&_nAlloc, int32(0))
	_azResult = null
	if _nArg <= int32(1) {
		goto _450
	}

	Xsqlite3_bind_text(tls, *(*uintptr)(unsafe.Pointer(_41pStmt)), int32(1), *(*uintptr)(unsafe.Pointer(_azArg + 8)), int32(-1), uintptr(18446744073709551615))
	goto _451

_450:
	Xsqlite3_bind_text(tls, *(*uintptr)(unsafe.Pointer(_41pStmt)), int32(1), ts+7750 /* "%" */, int32(-1), null)
_451:
_452:
	if Xsqlite3_step(tls, *(*uintptr)(unsafe.Pointer(_41pStmt))) != int32(100) {
		goto _453
	}

	if _nRow < _nAlloc {
		goto _454
	}

	_42n2 = (_nAlloc * int32(2)) + int32(10)
	_azNew = Xsqlite3_realloc64(tls, _azResult, uint64(uint64(8)*uint64(_42n2)))
	if _azNew != 0 {
		goto _455
	}

	_rc = _74shellNomemError(tls)
	goto _453

_455:
	_nAlloc = _42n2
	_azResult = _azNew
_454:
	*(*uintptr)(unsafe.Pointer(_azResult + 8*uintptr(_nRow))) = Xsqlite3_mprintf(tls, ts+429 /* "%s" */, Xsqlite3_column_text(tls, *(*uintptr)(unsafe.Pointer(_41pStmt)), int32(0)))
	if 0 != (*(*uintptr)(unsafe.Pointer(_azResult + 8*uintptr(_nRow)))) {
		goto _456
	}

	_rc = _74shellNomemError(tls)
	goto _453

_456:
	_nRow++
	goto _452

_453:
	if Xsqlite3_finalize(tls, *(*uintptr)(unsafe.Pointer(_41pStmt))) == int32(0) {
		goto _457
	}

	_rc = _73shellDatabaseError(tls, *(*uintptr)(unsafe.Pointer(_p)))
_457:
	if _rc != int32(0) || _nRow <= int32(0) {
		goto _458
	}

	_maxlen = int32(0)
	_43i = int32(0)
_459:
	if _43i >= _nRow {
		goto _461
	}

	_len = _18strlen30(tls, *(*uintptr)(unsafe.Pointer(_azResult + 8*uintptr(_43i))))
	if _len <= _maxlen {
		goto _462
	}

	_maxlen = _len
_462:
	_43i++
	goto _459

_461:
	_nPrintCol = int32(80) / (_maxlen + int32(2))
	if _nPrintCol >= int32(1) {
		goto _463
	}

	_nPrintCol = int32(1)
_463:
	_nPrintRow = ((_nRow + _nPrintCol) - int32(1)) / _nPrintCol
	_43i = int32(0)
_464:
	if _43i >= _nPrintRow {
		goto _466
	}

	_44j = _43i
_467:
	if _44j >= _nRow {
		goto _469
	}

	_zSp = func() uintptr {
		if _44j < _nPrintRow {
			return ts + 4553 /* "" */
		}
		return ts + 7752 /* "  " */
	}()
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+7755 /* "%s%-*s" */, _zSp, _maxlen, func() uintptr {
		if (*(*uintptr)(unsafe.Pointer(_azResult + 8*uintptr(_44j)))) != 0 {
			return *(*uintptr)(unsafe.Pointer(_azResult + 8*uintptr(_44j)))
		}
		return ts + 4553 /* "" */
	}())
	_44j = int32(_44j + _nPrintRow)
	goto _467

_469:
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+867 /* "\n" */)
	_43i++
	goto _464

_466:
_458:
	_ii = int32(0)
_470:
	if _ii >= _nRow {
		goto _472
	}

	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_azResult + 8*uintptr(_ii))))
	_ii++
	goto _470

_472:
	Xsqlite3_free(tls, _azResult)
	goto _437

_436:
	if _c != int32('t') || crt.Xstrcmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+7762 /* "testcase" */) != int32(0) {
		goto _473
	}

	_49output_reset(tls, _p)
	*(*uintptr)(unsafe.Pointer(_p + 32)) = _64output_file_open(tls, ts+1653 /* "testcase-out.txt" */)
	if (*(*uintptr)(unsafe.Pointer(_p + 32))) != 0 {
		goto _475
	}

	crt.Xfprintf(tls, Xstderr, ts+7771 /* "Error: cannot open 'testcase-out..." */)
_475:
	if _nArg < int32(2) {
		goto _476
	}

	Xsqlite3_snprintf(tls, int32(30), _p+88, ts+429 /* "%s" */, *(*uintptr)(unsafe.Pointer(_azArg + 8)))
	goto _477

_476:
	Xsqlite3_snprintf(tls, int32(30), _p+88, ts+7810 /* "?" */)
_477:
	goto _474

_473:
	if _c != int32('t') || _n < int32(8) || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+7812 /* "testctrl" */, uint64(_n)) != int32(0) || _nArg < int32(2) {
		goto _478
	}

	_testctrl = int32(-1)
	_rc2 = int32(0)
	_9open_db(tls, _p, int32(0))
	_46n2 = _18strlen30(tls, *(*uintptr)(unsafe.Pointer(_azArg + 8)))
	_45i = int32(0)
_480:
	if _45i >= int32(15) {
		goto _482
	}

	if crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg + 8)), *(*uintptr)(unsafe.Pointer(_43aCtrl + 16*uintptr(_45i))), uint64(_46n2)) != int32(0) {
		goto _483
	}

	if _testctrl >= int32(0) {
		goto _484
	}

	_testctrl = *(*int32)(unsafe.Pointer((_43aCtrl + 16*uintptr(_45i)) + 8))
	goto _485

_484:
	crt.Xfprintf(tls, Xstderr, ts+7821 /* "ambiguous option name: \"%s\"\n" */, *(*uintptr)(unsafe.Pointer(_azArg + 8)))
	_testctrl = int32(-1)
	goto _482

_485:
_483:
	_45i++
	goto _480

_482:
	if _testctrl >= int32(0) {
		goto _486
	}

	_testctrl = int32(_8integerValue(tls, *(*uintptr)(unsafe.Pointer(_azArg + 8))))
_486:
	if _testctrl >= int32(5) && _testctrl <= int32(25) {
		goto _487
	}

	crt.Xfprintf(tls, Xstderr, ts+7850 /* "Error: invalid testctrl option: ..." */, *(*uintptr)(unsafe.Pointer(_azArg + 8)))
	goto _488

_487:
	switch _testctrl {
	case int32(15):
		goto _490
	case int32(14):
		goto _491
	case int32(5):
		goto _492
	case int32(6):
		goto _493
	case int32(7):
		goto _494
	case int32(22):
		goto _495
	case int32(11):
		goto _496
	case int32(12):
		goto _497
	case int32(13):
		goto _498
	case int32(20):
		goto _499
	case int32(25):
		goto _500
	case int32(8):
		goto _501
	case int32(9):
		goto _502
	case int32(10):
		goto _503
	default:
		goto _504
	}
_490:
_491:
	if _nArg != int32(3) {
		goto _505
	}

	_opt = int32(crt.Xstrtol(tls, *(*uintptr)(unsafe.Pointer(_azArg + 16)), null, int32(0)))
	_rc2 = Xsqlite3_test_control(tls, _testctrl, *(*uintptr)(unsafe.Pointer(_p)), _opt)
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+7886 /* "%d (0x%08x)\n" */, _rc2, _rc2)
	goto _506

_505:
	crt.Xfprintf(tls, Xstderr, ts+7899 /* "Error: testctrl %s takes a singl..." */, *(*uintptr)(unsafe.Pointer(_azArg + 8)))
_506:
	goto _489

_492:
_493:
_494:
_495:
	if _nArg != int32(2) {
		goto _507
	}

	_rc2 = Xsqlite3_test_control(tls, _testctrl)
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+7886 /* "%d (0x%08x)\n" */, _rc2, _rc2)
	goto _508

_507:
	crt.Xfprintf(tls, Xstderr, ts+7945 /* "Error: testctrl %s takes no opti..." */, *(*uintptr)(unsafe.Pointer(_azArg + 8)))
_508:
	goto _489

_496:
	if _nArg != int32(3) {
		goto _509
	}

	_47opt = uint32(_8integerValue(tls, *(*uintptr)(unsafe.Pointer(_azArg + 16))))
	_rc2 = Xsqlite3_test_control(tls, _testctrl, _47opt)
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+7886 /* "%d (0x%08x)\n" */, _rc2, _rc2)
	goto _510

_509:
	crt.Xfprintf(tls, Xstderr, ts+7982 /* "Error: testctrl %s takes a singl..." */, *(*uintptr)(unsafe.Pointer(_azArg + 8)))
_510:
	goto _489

_497:
_498:
_499:
	if _nArg != int32(3) {
		goto _511
	}

	_48opt = _45booleanValue(tls, *(*uintptr)(unsafe.Pointer(_azArg + 16)))
	_rc2 = Xsqlite3_test_control(tls, _testctrl, _48opt)
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+7886 /* "%d (0x%08x)\n" */, _rc2, _rc2)
	goto _512

_511:
	crt.Xfprintf(tls, Xstderr, ts+7899 /* "Error: testctrl %s takes a singl..." */, *(*uintptr)(unsafe.Pointer(_azArg + 8)))
_512:
	goto _489

_500:
	if _nArg != int32(5) {
		goto _513
	}

	_rc2 = Xsqlite3_test_control(tls, _testctrl, *(*uintptr)(unsafe.Pointer(_p)), *(*uintptr)(unsafe.Pointer(_azArg + 16)), _8integerValue(tls, *(*uintptr)(unsafe.Pointer(_azArg + 24))), _8integerValue(tls, *(*uintptr)(unsafe.Pointer(_azArg + 32))))
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+7886 /* "%d (0x%08x)\n" */, _rc2, _rc2)
	goto _514

_513:
	crt.Xfprintf(tls, Xstderr, ts+8037 /* "Usage: .testctrl imposter dbName..." */)
_514:
	goto _489

_501:
_502:
_503:
_504:
	crt.Xfprintf(tls, Xstderr, ts+8082 /* "Error: CLI support for testctrl ..." */, *(*uintptr)(unsafe.Pointer(_azArg + 8)))
	goto _489

_489:
_488:
	goto _479

_478:
	if _c != int32('t') || _n <= int32(4) || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+8134 /* "timeout" */, uint64(_n)) != int32(0) {
		goto _515
	}

	_9open_db(tls, _p, int32(0))
	Xsqlite3_busy_timeout(tls, *(*uintptr)(unsafe.Pointer(_p)), func() int32 {
		if _nArg >= int32(2) {
			return int32(_8integerValue(tls, *(*uintptr)(unsafe.Pointer(_azArg + 8))))
		}
		return int32(0)
	}())
	goto _516

_515:
	if _c != int32('t') || _n < int32(5) || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+8142 /* "timer" */, uint64(_n)) != int32(0) {
		goto _517
	}

	if _nArg != int32(2) {
		goto _519
	}

	_75enableTimer = _45booleanValue(tls, *(*uintptr)(unsafe.Pointer(_azArg + 8)))

	goto _521

_521:
	goto _520

_519:
	crt.Xfprintf(tls, Xstderr, ts+8148 /* "Usage: .timer on|off\n" */)
	_rc = int32(1)
_520:
	goto _518

_517:
	if _c != int32('t') || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+8170 /* "trace" */, uint64(_n)) != int32(0) {
		goto _522
	}

	_9open_db(tls, _p, int32(0))
	if _nArg == int32(2) {
		goto _524
	}

	crt.Xfprintf(tls, Xstderr, ts+8176 /* "Usage: .trace FILE|off\n" */)
	_rc = int32(1)
	goto _meta_command_exit

_524:
	_63output_file_close(tls, *(*uintptr)(unsafe.Pointer(_p + 40)))
	*(*uintptr)(unsafe.Pointer(_p + 40)) = _64output_file_open(tls, *(*uintptr)(unsafe.Pointer(_azArg + 8)))
	if (*(*uintptr)(unsafe.Pointer(_p + 40))) != 0 {
		goto _525
	}

	Xsqlite3_trace_v2(tls, *(*uintptr)(unsafe.Pointer(_p)), uint32(0), null, null)
	goto _526

_525:
	Xsqlite3_trace_v2(tls, *(*uintptr)(unsafe.Pointer(_p)), uint32(0x1), fp14(_76sql_trace_callback), *(*uintptr)(unsafe.Pointer(_p + 40)))
_526:
	goto _523

_522:
	if _c != int32('v') || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+8200 /* "version" */, uint64(_n)) != int32(0) {
		goto _527
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+8208 /* "SQLite %s %s\n" */, Xsqlite3_libversion(tls), Xsqlite3_sourceid(tls))
	goto _528

_527:
	if _c != int32('v') || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+8222 /* "vfsinfo" */, uint64(_n)) != int32(0) {
		goto _529
	}

	_49zDbName = func() uintptr {
		if _nArg == int32(2) {
			return *(*uintptr)(unsafe.Pointer(_azArg + 8))
		}
		return ts + 1432 /* "main" */
	}()
	*(*uintptr)(unsafe.Pointer(_pVfs)) = 0
	if (*(*uintptr)(unsafe.Pointer(_p))) == 0 {
		goto _531
	}

	Xsqlite3_file_control(tls, *(*uintptr)(unsafe.Pointer(_p)), _49zDbName, int32(27), _pVfs)
	if (*(*uintptr)(unsafe.Pointer(_pVfs))) == 0 {
		goto _532
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+8230 /* "vfs.zName      = \"%s\"\n" */, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pVfs))) + 24)))
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+8253 /* "vfs.iVersion   = %d\n" */, *(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pVfs)))))
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+8274 /* "vfs.szOsFile   = %d\n" */, *(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pVfs))) + 4)))
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+8295 /* "vfs.mxPathname = %d\n" */, *(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pVfs))) + 8)))
_532:
_531:
	goto _530

_529:
	if _c != int32('v') || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+8316 /* "vfslist" */, uint64(_n)) != int32(0) {
		goto _533
	}

	*(*uintptr)(unsafe.Pointer(_pCurrent)) = 0
	if (*(*uintptr)(unsafe.Pointer(_p))) == 0 {
		goto _535
	}

	Xsqlite3_file_control(tls, *(*uintptr)(unsafe.Pointer(_p)), ts+1432 /* "main" */, int32(27), _pCurrent)
_535:
	_50pVfs = Xsqlite3_vfs_find(tls, null)
_536:
	if _50pVfs == 0 {
		goto _538
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+8324 /* "vfs.zName      = \"%s\"%s\n" */, *(*uintptr)(unsafe.Pointer(_50pVfs + 24)), func() uintptr {
		if _50pVfs == (*(*uintptr)(unsafe.Pointer(_pCurrent))) {
			return ts + 8349 /* "  <--- CURRENT" */
		}
		return ts + 4553 /* "" */
	}())
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+8253 /* "vfs.iVersion   = %d\n" */, *(*int32)(unsafe.Pointer(_50pVfs)))
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+8274 /* "vfs.szOsFile   = %d\n" */, *(*int32)(unsafe.Pointer(_50pVfs + 4)))
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+8295 /* "vfs.mxPathname = %d\n" */, *(*int32)(unsafe.Pointer(_50pVfs + 8)))
	if (*(*uintptr)(unsafe.Pointer(_50pVfs + 16))) == 0 {
		goto _539
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+8364 /* "--------------------------------..." */)
_539:
	_50pVfs = *(*uintptr)(unsafe.Pointer(_50pVfs + 16))
	goto _536

_538:
	goto _534

_533:
	if _c != int32('v') || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+8401 /* "vfsname" */, uint64(_n)) != int32(0) {
		goto _540
	}

	_51zDbName = func() uintptr {
		if _nArg == int32(2) {
			return *(*uintptr)(unsafe.Pointer(_azArg + 8))
		}
		return ts + 1432 /* "main" */
	}()
	*(*uintptr)(unsafe.Pointer(_zVfsName)) = 0
	if (*(*uintptr)(unsafe.Pointer(_p))) == 0 {
		goto _542
	}

	Xsqlite3_file_control(tls, *(*uintptr)(unsafe.Pointer(_p)), _51zDbName, int32(12), _zVfsName)
	if (*(*uintptr)(unsafe.Pointer(_zVfsName))) == 0 {
		goto _543
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+6158 /* "%s\n" */, *(*uintptr)(unsafe.Pointer(_zVfsName)))
	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_zVfsName)))
_543:
_542:
	goto _541

_540:
	if _c != int32('w') || crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_azArg)), ts+7434 /* "width" */, uint64(_n)) != int32(0) {
		goto _544
	}

	if _nArg > int32(50) {
		crt.X__assert_fail(tls, ts+8409 /* "nArg<=(int)(sizeof(azArg)/sizeof..." */, ts+161 /* "/home/jnml/src/github.com/cznic/..." */, uint32(7569), _40__func__)
	}
	_52j = int32(1)
_546:
	if _52j >= _nArg || _52j >= int32(100) {
		goto _548
	}

	*(*int32)(unsafe.Pointer((_p + 160) + 4*uintptr(_52j-int32(1)))) = int32(_8integerValue(tls, *(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_52j)))))
	_52j++
	goto _546

_548:
	goto _545

_544:
	crt.Xfprintf(tls, Xstderr, ts+8453 /* "Error: unknown command or invali..." */, *(*uintptr)(unsafe.Pointer(_azArg)))
	_rc = int32(1)
_545:
_541:
_534:
_530:
_528:
_523:
_518:
_516:
_479:
_474:
_437:
_431:
_425:
_418:
_383:
_378:
_347:
_319:
_315:
_299:
_294:
_292:
_288:
_282:
_269:
_256:
_252:
_228:
_224:
_220:
_218:
_201:
_185:
_137:
_135:
_131:
_124:
_112:
_109:
_103:
_99:
_82:
_80:
_77:
_73:
_65:
_61:
_59:
_54:
_48:
_44:
_23:
_18:
	goto _meta_command_exit
_meta_command_exit:
	if (*(*int32)(unsafe.Pointer(_p + 24))) == 0 {
		goto _549
	}

	(*(*int32)(unsafe.Pointer(_p + 24)))--
	if (*(*int32)(unsafe.Pointer(_p + 24))) != int32(0) {
		goto _550
	}

	_49output_reset(tls, _p)
_550:
_549:
	return _rc
}

// _14shell_exec is defined at shell.c:3611:12
func _14shell_exec(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _zSql uintptr /* *int8 */, _xCallback uintptr /* *func(crt.TLS, uintptr, int32, uintptr, uintptr, uintptr) int32 */, _pArg uintptr /* *TShellState = SShellState */, _pzErrMsg uintptr /* **int8 */) (r int32) {
	esc := crt.MustMalloc(40)
	var (
		_pStmt     = esc // **Tsqlite3_stmt = Ssqlite3_stmt
		_rc        int32
		_rc2       int32
		_zLeftover = esc + 16 // **int8
		_pExplain  = esc + 32 // **Tsqlite3_stmt = Ssqlite3_stmt
		_zEQP      uintptr    // *int8
	)
	defer crt.Free(esc)
	*(*uintptr)(unsafe.Pointer(_pStmt)) = 0
	_rc = int32(0)
	if _pzErrMsg == 0 {
		goto _1
	}

	*(*uintptr)(unsafe.Pointer(_pzErrMsg)) = null
_1:
_2:
	if (*(*int8)(unsafe.Pointer(_zSql))) == 0 || int32(0) != _rc {
		goto _3
	}

	_rc = Xsqlite3_prepare_v2(tls, _db, _zSql, int32(-1), _pStmt, _zLeftover)
	if int32(0) == _rc {
		goto _4
	}

	if _pzErrMsg == 0 {
		goto _6
	}

	*(*uintptr)(unsafe.Pointer(_pzErrMsg)) = _78save_err_msg(tls, _db)
_6:
	goto _5

_4:
	if (*(*uintptr)(unsafe.Pointer(_pStmt))) != 0 {
		goto _7
	}

	_zSql = *(*uintptr)(unsafe.Pointer(_zLeftover))
_8:
	if int32(*(*uint16)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(crt.X__ctype_b_loc(tls))) + 2*uintptr(int32(uint8(*(*int8)(unsafe.Pointer(_zSql))))))))&int32(8192) == 0 {
		goto _9
	}

	_zSql++
	goto _8

_9:
	goto _2

_7:
	_77zStmtSql = Xsqlite3_sql(tls, *(*uintptr)(unsafe.Pointer(_pStmt)))
	if _77zStmtSql != 0 {
		goto _10
	}

	_77zStmtSql = ts + 4553 /* "" */
_10:
_11:
	if int32(*(*uint16)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(crt.X__ctype_b_loc(tls))) + 2*uintptr(int32(uint8(*(*int8)(unsafe.Pointer(_77zStmtSql))))))))&int32(8192) == 0 {
		goto _12
	}

	_77zStmtSql++
	goto _11

_12:
	if _pArg == 0 {
		goto _13
	}

	*(*uintptr)(unsafe.Pointer(_pArg + 5104)) = *(*uintptr)(unsafe.Pointer(_pStmt))
	*(*int32)(unsafe.Pointer(_pArg + 28)) = int32(0)
_13:
	if _pArg == 0 || ((*(*uint32)(unsafe.Pointer(_pArg + 76)))&uint32(0x40)) == uint32(0) {
		goto _14
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_pArg + 32)), ts+6158 /* "%s\n" */, func() uintptr {
		if _77zStmtSql != 0 {
			return _77zStmtSql
		}
		return _zSql
	}())
_14:
	if _pArg == 0 || (*(*int32)(unsafe.Pointer(_pArg + 12))) == 0 || Xsqlite3_strlike(tls, ts+8529 /* "EXPLAIN%" */, _77zStmtSql, uint32(0)) == int32(0) {
		goto _15
	}

	_79disable_debug_trace_modes(tls)
	_zEQP = Xsqlite3_mprintf(tls, ts+8538 /* "EXPLAIN QUERY PLAN %s" */, _77zStmtSql)
	_rc = Xsqlite3_prepare_v2(tls, _db, _zEQP, int32(-1), _pExplain, null)
	if _rc != int32(0) {
		goto _16
	}

_17:
	if Xsqlite3_step(tls, *(*uintptr)(unsafe.Pointer(_pExplain))) != int32(100) {
		goto _18
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_pArg + 32)), ts+8560 /* "--EQP-- %d," */, Xsqlite3_column_int(tls, *(*uintptr)(unsafe.Pointer(_pExplain)), int32(0)))
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_pArg + 32)), ts+8572 /* "%d," */, Xsqlite3_column_int(tls, *(*uintptr)(unsafe.Pointer(_pExplain)), int32(1)))
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_pArg + 32)), ts+8572 /* "%d," */, Xsqlite3_column_int(tls, *(*uintptr)(unsafe.Pointer(_pExplain)), int32(2)))
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_pArg + 32)), ts+6158 /* "%s\n" */, Xsqlite3_column_text(tls, *(*uintptr)(unsafe.Pointer(_pExplain)), int32(3)))
	goto _17

_18:
_16:
	Xsqlite3_finalize(tls, *(*uintptr)(unsafe.Pointer(_pExplain)))
	Xsqlite3_free(tls, _zEQP)
	if (*(*int32)(unsafe.Pointer(_pArg + 12))) < int32(2) {
		goto _19
	}

	_zEQP = Xsqlite3_mprintf(tls, ts+8576 /* "EXPLAIN %s" */, _77zStmtSql)
	_rc = Xsqlite3_prepare_v2(tls, _db, _zEQP, int32(-1), _pExplain, null)
	if _rc != int32(0) {
		goto _20
	}

	*(*int32)(unsafe.Pointer(_pArg + 56)) = int32(9)
	_80explain_data_prepare(tls, _pArg, *(*uintptr)(unsafe.Pointer(_pExplain)))
	_81exec_prepared_stmt(tls, _pArg, *(*uintptr)(unsafe.Pointer(_pExplain)), _xCallback)
	_82explain_data_delete(tls, _pArg)
_20:
	Xsqlite3_finalize(tls, *(*uintptr)(unsafe.Pointer(_pExplain)))
	Xsqlite3_free(tls, _zEQP)
_19:
	_83restore_debug_trace_modes(tls)
_15:
	if _pArg == 0 {
		goto _21
	}

	*(*int32)(unsafe.Pointer(_pArg + 56)) = *(*int32)(unsafe.Pointer(_pArg + 52))
	if (*(*int32)(unsafe.Pointer(_pArg + 8))) == 0 || Xsqlite3_column_count(tls, *(*uintptr)(unsafe.Pointer(_pStmt))) != int32(8) || Xsqlite3_strlike(tls, ts+8529 /* "EXPLAIN%" */, _77zStmtSql, uint32(0)) != int32(0) {
		goto _22
	}

	*(*int32)(unsafe.Pointer(_pArg + 56)) = int32(9)
_22:
	if (*(*int32)(unsafe.Pointer(_pArg + 56))) != int32(9) {
		goto _23
	}

	_80explain_data_prepare(tls, _pArg, *(*uintptr)(unsafe.Pointer(_pStmt)))
_23:
_21:
	_81exec_prepared_stmt(tls, _pArg, *(*uintptr)(unsafe.Pointer(_pStmt)), _xCallback)
	_82explain_data_delete(tls, _pArg)
	if _pArg == 0 || (*(*int32)(unsafe.Pointer(_pArg + 16))) == 0 {
		goto _24
	}

	_72display_stats(tls, _db, _pArg, int32(0))
_24:
	if _pArg == 0 || (*(*int32)(unsafe.Pointer(_pArg + 20))) == 0 {
		goto _25
	}

	_84display_scanstats(tls, _db, _pArg)
_25:
	_rc2 = Xsqlite3_finalize(tls, *(*uintptr)(unsafe.Pointer(_pStmt)))
	if _rc == int32(7) {
		goto _26
	}

	_rc = _rc2
_26:
	if _rc != int32(0) {
		goto _27
	}

	_zSql = *(*uintptr)(unsafe.Pointer(_zLeftover))
_29:
	if int32(*(*uint16)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(crt.X__ctype_b_loc(tls))) + 2*uintptr(int32(uint8(*(*int8)(unsafe.Pointer(_zSql))))))))&int32(8192) == 0 {
		goto _30
	}

	_zSql++
	goto _29

_30:
	goto _28

_27:
	if _pzErrMsg == 0 {
		goto _31
	}

	*(*uintptr)(unsafe.Pointer(_pzErrMsg)) = _78save_err_msg(tls, _db)
_31:
_28:
	if _pArg == 0 {
		goto _32
	}

	*(*uintptr)(unsafe.Pointer(_pArg + 5104)) = null
_32:
_5:
	goto _2

_3:
	return _rc
}

// _15shell_callback is defined at shell.c:2651:12
func _15shell_callback(tls crt.TLS, _pArg uintptr /* *void */, _nArg int32, _azArg uintptr /* **int8 */, _azCol uintptr /* **int8 */, _aiType uintptr /* *int32 */) (r int32) {
	esc := crt.MustMalloc(114)
	var (
		_i        int32
		_p        uintptr // *TShellState = SShellState
		_w        int32
		_len      int32
		_colWidth uintptr // *int32
		_showHdr  int32
		_rowSep   uintptr // *int8
		_1w       int32
		_n        int32
		_2w       int32
		_3w       int32
		_z        uintptr // *int8
		_j        int32
		_nParen   int32
		_cEnd     int8
		_c        int8
		_nLine    int32
		_4z       uintptr // *int8
		_5z       uintptr // *int8
		_6z       = esc   // *[50]int8
		_r        float64
		_pBlob    uintptr // *void
		_nBlob    int32
		_7z       = esc + 64 // *[50]int8
		_8r       float64
		_9pBlob   uintptr // *void
		_10nBlob  int32
	)
	defer crt.Free(esc)
	_p = _pArg
	if _azArg != 0 {
		goto _1
	}

	return int32(0)

_1:
	switch *(*int32)(unsafe.Pointer(_p + 56)) {
	case int32(0):
		goto _3
	case int32(9):
		goto _4
	case int32(1):
		goto _5
	case int32(3):
		goto _6
	case int32(11):
		goto _7
	case int32(2):
		goto _8
	case int32(4):
		goto _9
	case int32(7):
		goto _10
	case int32(8):
		goto _11
	case int32(5):
		goto _12
	case int32(6):
		goto _13
	case int32(10):
		goto _14
	}
	goto _2

_3:
	_w = int32(5)
	if _azArg != 0 {
		goto _15
	}

	goto _2

_15:
	_i = int32(0)
_16:
	if _i >= _nArg {
		goto _18
	}

	_len = _18strlen30(tls, func() uintptr {
		if (*(*uintptr)(unsafe.Pointer(_azCol + 8*uintptr(_i)))) != 0 {
			return *(*uintptr)(unsafe.Pointer(_azCol + 8*uintptr(_i)))
		}
		return ts + 4553 /* "" */
	}())
	if _len <= _w {
		goto _19
	}

	_w = _len
_19:
	_i++
	goto _16

_18:
	if postinc7(&(*(*int32)(unsafe.Pointer(_p + 28)))) <= int32(0) {
		goto _20
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+429 /* "%s" */, _p+138)
_20:
	_i = int32(0)
_21:
	if _i >= _nArg {
		goto _23
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+8587 /* "%*s = %s%s" */, _w, *(*uintptr)(unsafe.Pointer(_azCol + 8*uintptr(_i))), func() uintptr {
		if (*(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_i)))) != 0 {
			return *(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_i)))
		}
		return _p + 960
	}(), _p+138)
	_i++
	goto _21

_23:
	goto _2

_4:
_5:
	if (*(*int32)(unsafe.Pointer(_p + 56))) != int32(1) {
		goto _24
	}

	_colWidth = _p + 160
	_showHdr = *(*int32)(unsafe.Pointer(_p + 68))
	_rowSep = _p + 138
	goto _25

_24:
	_colWidth = _86aExplainWidths
	_showHdr = int32(1)
	_rowSep = ts + 867 /* "\n" */
_25:
	if postinc7(&(*(*int32)(unsafe.Pointer(_p + 28)))) != int32(0) {
		goto _26
	}

	_i = int32(0)
_27:
	if _i >= _nArg {
		goto _29
	}

	if _i >= int32(100) {
		goto _30
	}

	_1w = *(*int32)(unsafe.Pointer(_colWidth + 4*uintptr(_i)))
	goto _31

_30:
	_1w = int32(0)
_31:
	if _1w != int32(0) {
		goto _32
	}

	_1w = _87strlenChar(tls, func() uintptr {
		if (*(*uintptr)(unsafe.Pointer(_azCol + 8*uintptr(_i)))) != 0 {
			return *(*uintptr)(unsafe.Pointer(_azCol + 8*uintptr(_i)))
		}
		return ts + 4553 /* "" */
	}())
	if _1w >= int32(10) {
		goto _33
	}

	_1w = int32(10)
_33:
	_n = _87strlenChar(tls, func() uintptr {
		if (_azArg != 0) && ((*(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_i)))) != 0) {
			return *(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_i)))
		}
		return _p + 960
	}())
	if _1w >= _n {
		goto _34
	}

	_1w = _n
_34:
_32:
	if _i >= int32(100) {
		goto _35
	}

	*(*int32)(unsafe.Pointer((_p + 560) + 4*uintptr(_i))) = _1w
_35:
	if _showHdr == 0 {
		goto _36
	}

	_88utf8_width_print(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), _1w, *(*uintptr)(unsafe.Pointer(_azCol + 8*uintptr(_i))))
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+429 /* "%s" */, func() uintptr {
		if _i == (_nArg - int32(1)) {
			return _rowSep
		}
		return ts + 7752 /* "  " */
	}())
_36:
	_i++
	goto _27

_29:
	if _showHdr == 0 {
		goto _37
	}

	_i = int32(0)
_38:
	if _i >= _nArg {
		goto _40
	}

	if _i >= int32(100) {
		goto _41
	}

	_2w = *(*int32)(unsafe.Pointer((_p + 560) + 4*uintptr(_i)))
	if _2w >= int32(0) {
		goto _43
	}

	_2w = -_2w
_43:
	goto _42

_41:
	_2w = int32(10)
_42:
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+8598 /* "%-*.*s%s" */, _2w, _2w, ts+8607 /* "--------------------------------..." */, func() uintptr {
		if _i == (_nArg - int32(1)) {
			return _rowSep
		}
		return ts + 7752 /* "  " */
	}())
	_i++
	goto _38

_40:
_37:
_26:
	if _azArg != 0 {
		goto _44
	}

	goto _2

_44:
	_i = int32(0)
_45:
	if _i >= _nArg {
		goto _47
	}

	if _i >= int32(100) {
		goto _48
	}

	_3w = *(*int32)(unsafe.Pointer((_p + 560) + 4*uintptr(_i)))
	goto _49

_48:
	_3w = int32(10)
_49:
	if (*(*int32)(unsafe.Pointer(_p + 56))) != int32(9) || (*(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_i)))) == 0 || _87strlenChar(tls, *(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_i)))) <= _3w {
		goto _50
	}

	_3w = _87strlenChar(tls, *(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_i))))
_50:
	if _i != int32(1) || (*(*uintptr)(unsafe.Pointer(_p + 5120))) == 0 || (*(*uintptr)(unsafe.Pointer(_p + 5104))) == 0 {
		goto _51
	}

	if (*(*int32)(unsafe.Pointer(_p + 5132))) >= (*(*int32)(unsafe.Pointer(_p + 5128))) {
		goto _52
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+8724 /* "%*.s" */, *(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 5120))) + 4*uintptr(*(*int32)(unsafe.Pointer(_p + 5132))))), ts+4553 /* "" */)
_52:
	(*(*int32)(unsafe.Pointer(_p + 5132)))++
_51:
	_88utf8_width_print(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), _3w, func() uintptr {
		if (*(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_i)))) != 0 {
			return *(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_i)))
		}
		return _p + 960
	}())
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+429 /* "%s" */, func() uintptr {
		if _i == (_nArg - int32(1)) {
			return _rowSep
		}
		return ts + 7752 /* "  " */
	}())
	_i++
	goto _45

_47:
	goto _2

_6:
	_89printSchemaLine(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), *(*uintptr)(unsafe.Pointer(_azArg)), ts+8729 /* ";\n" */)
	goto _2

_7:
	_nParen = int32(0)
	_cEnd = int8(0)
	_nLine = int32(0)
	if _nArg != int32(1) {
		crt.X__assert_fail(tls, ts+8732 /* "nArg==1" */, ts+161 /* "/home/jnml/src/github.com/cznic/..." */, uint32(2763), _85__func__)
	}
	if (*(*uintptr)(unsafe.Pointer(_azArg))) != 0 {
		goto _53
	}

	goto _2

_53:
	if Xsqlite3_strlike(tls, ts+8740 /* "CREATE VIEW%" */, *(*uintptr)(unsafe.Pointer(_azArg)), uint32(0)) != int32(0) && Xsqlite3_strlike(tls, ts+8753 /* "CREATE TRIG%" */, *(*uintptr)(unsafe.Pointer(_azArg)), uint32(0)) != int32(0) {
		goto _54
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+4237 /* "%s;\n" */, *(*uintptr)(unsafe.Pointer(_azArg)))
	goto _2

_54:
	_z = Xsqlite3_mprintf(tls, ts+429 /* "%s" */, *(*uintptr)(unsafe.Pointer(_azArg)))
	_j = int32(0)
	_i = int32(0)
_55:
	if int32(*(*uint16)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(crt.X__ctype_b_loc(tls))) + 2*uintptr(int32(uint8(*(*int8)(unsafe.Pointer(_z + uintptr(_i)))))))))&int32(8192) == 0 {
		goto _57
	}

	_i++
	goto _55

_57:
_58:
	if int32(set15(&_c, *(*int8)(unsafe.Pointer(_z + uintptr(_i))))) == int32(0) {
		goto _60
	}

	if int32(*(*uint16)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(crt.X__ctype_b_loc(tls))) + 2*uintptr(int32(uint8(_c))))))&int32(8192) == 0 {
		goto _61
	}

	if int32(*(*int8)(unsafe.Pointer(_z + uintptr(_j-int32(1))))) != int32('\r') {
		goto _63
	}

	*(*int8)(unsafe.Pointer(_z + uintptr(_j-int32(1)))) = int8('\n')
_63:
	if int32(*(*uint16)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(crt.X__ctype_b_loc(tls))) + 2*uintptr(int32(uint8(*(*int8)(unsafe.Pointer(_z + uintptr(_j-int32(1))))))))))&int32(8192) == 0 && int32(*(*int8)(unsafe.Pointer(_z + uintptr(_j-int32(1))))) != int32('(') {
		goto _64
	}

	goto _59

_64:
	goto _62

_61:
	if int32(_c) != int32('(') && int32(_c) != int32(')') || _j <= int32(0) || int32(*(*uint16)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(crt.X__ctype_b_loc(tls))) + 2*uintptr(int32(uint8(*(*int8)(unsafe.Pointer(_z + uintptr(_j-int32(1))))))))))&int32(8192) == 0 {
		goto _65
	}

	_j--
_65:
_62:
	*(*int8)(unsafe.Pointer(_z + uintptr(postinc7(&_j)))) = _c

_59:
	_i++
	goto _58

_60:
_66:
	if _j <= int32(0) || int32(*(*uint16)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(crt.X__ctype_b_loc(tls))) + 2*uintptr(int32(uint8(*(*int8)(unsafe.Pointer(_z + uintptr(_j-int32(1))))))))))&int32(8192) == 0 {
		goto _67
	}

	_j--
	goto _66

_67:
	*(*int8)(unsafe.Pointer(_z + uintptr(_j))) = int8(0)
	if _18strlen30(tls, _z) < int32(79) {
		goto _68
	}

	_i = set5(&_j, int32(0))
_69:
	if int32(set15(&_c, *(*int8)(unsafe.Pointer(_z + uintptr(_i))))) == int32(0) {
		goto _71
	}

	if int32(_c) != int32(_cEnd) {
		goto _72
	}

	_cEnd = int8(0)
	goto _73

_72:
	if int32(_c) != int32('"') && int32(_c) != int32('\'') && int32(_c) != int32('`') {
		goto _74
	}

	_cEnd = _c
	goto _75

_74:
	if int32(_c) != int32('[') {
		goto _76
	}

	_cEnd = int8(']')
	goto _77

_76:
	if int32(_c) != int32('(') {
		goto _78
	}

	_nParen++
	goto _79

_78:
	if int32(_c) != int32(')') {
		goto _80
	}

	_nParen--
	if _nLine <= int32(0) || _nParen != int32(0) || _j <= int32(0) {
		goto _81
	}

	_90printSchemaLineN(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), _z, _j, ts+867 /* "\n" */)
	_j = int32(0)
_81:
_80:
_79:
_77:
_75:
_73:
	*(*int8)(unsafe.Pointer(_z + uintptr(postinc7(&_j)))) = _c
	if _nParen != int32(1) || int32(_c) != int32('(') && int32(_c) != int32(',') && int32(_c) != int32('\n') {
		goto _82
	}

	if int32(_c) != int32('\n') {
		goto _83
	}

	_j--
_83:
	_90printSchemaLineN(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), _z, _j, ts+8766 /* "\n  " */)
	_j = int32(0)
	_nLine++
_84:
	if int32(*(*uint16)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(crt.X__ctype_b_loc(tls))) + 2*uintptr(int32(uint8(*(*int8)(unsafe.Pointer(_z + uintptr(_i+int32(1))))))))))&int32(8192) == 0 {
		goto _85
	}

	_i++
	goto _84

_85:
_82:
	_i++
	goto _69

_71:
	*(*int8)(unsafe.Pointer(_z + uintptr(_j))) = int8(0)
_68:
	_89printSchemaLine(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), _z, ts+8729 /* ";\n" */)
	Xsqlite3_free(tls, _z)
	goto _2

_8:
	if postinc7(&(*(*int32)(unsafe.Pointer(_p + 28)))) != int32(0) || (*(*int32)(unsafe.Pointer(_p + 68))) == 0 {
		goto _86
	}

	_i = int32(0)
_87:
	if _i >= _nArg {
		goto _89
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+8770 /* "%s%s" */, *(*uintptr)(unsafe.Pointer(_azCol + 8*uintptr(_i))), func() uintptr {
		if _i == (_nArg - int32(1)) {
			return _p + 138
		}
		return _p + 118
	}())
	_i++
	goto _87

_89:
_86:
	if _azArg != 0 {
		goto _90
	}

	goto _2

_90:
	_i = int32(0)
_91:
	if _i >= _nArg {
		goto _93
	}

	_4z = *(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_i)))
	if _4z != 0 {
		goto _94
	}

	_4z = _p + 960
_94:
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+429 /* "%s" */, _4z)
	if _i >= (_nArg - int32(1)) {
		goto _95
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+429 /* "%s" */, _p+118)
	goto _96

_95:
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+429 /* "%s" */, _p+138)
_96:
	_i++
	goto _91

_93:
	goto _2

_9:
	if postinc7(&(*(*int32)(unsafe.Pointer(_p + 28)))) != int32(0) || (*(*int32)(unsafe.Pointer(_p + 68))) == 0 {
		goto _97
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+8775 /* "<TR>" */)
	_i = int32(0)
_98:
	if _i >= _nArg {
		goto _100
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+8780 /* "<TH>" */)
	_91output_html_string(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), *(*uintptr)(unsafe.Pointer(_azCol + 8*uintptr(_i))))
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+8785 /* "</TH>\n" */)
	_i++
	goto _98

_100:
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+8792 /* "</TR>\n" */)
_97:
	if _azArg != 0 {
		goto _101
	}

	goto _2

_101:
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+8775 /* "<TR>" */)
	_i = int32(0)
_102:
	if _i >= _nArg {
		goto _104
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+8799 /* "<TD>" */)
	_91output_html_string(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), func() uintptr {
		if (*(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_i)))) != 0 {
			return *(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_i)))
		}
		return _p + 960
	}())
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+8804 /* "</TD>\n" */)
	_i++
	goto _102

_104:
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+8792 /* "</TR>\n" */)
	goto _2

_10:
	if postinc7(&(*(*int32)(unsafe.Pointer(_p + 28)))) != int32(0) || (*(*int32)(unsafe.Pointer(_p + 68))) == 0 {
		goto _105
	}

	_i = int32(0)
_106:
	if _i >= _nArg {
		goto _108
	}

	_71output_c_string(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), func() uintptr {
		if (*(*uintptr)(unsafe.Pointer(_azCol + 8*uintptr(_i)))) != 0 {
			return *(*uintptr)(unsafe.Pointer(_azCol + 8*uintptr(_i)))
		}
		return ts + 4553 /* "" */
	}())
	if _i >= (_nArg - int32(1)) {
		goto _109
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+429 /* "%s" */, _p+118)
_109:
	_i++
	goto _106

_108:
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+429 /* "%s" */, _p+138)
_105:
	if _azArg != 0 {
		goto _110
	}

	goto _2

_110:
	_i = int32(0)
_111:
	if _i >= _nArg {
		goto _113
	}

	_71output_c_string(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), func() uintptr {
		if (*(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_i)))) != 0 {
			return *(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_i)))
		}
		return _p + 960
	}())
	if _i >= (_nArg - int32(1)) {
		goto _114
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+429 /* "%s" */, _p+118)
_114:
	_i++
	goto _111

_113:
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+429 /* "%s" */, _p+138)
	goto _2

_11:
	if postinc7(&(*(*int32)(unsafe.Pointer(_p + 28)))) != int32(0) || (*(*int32)(unsafe.Pointer(_p + 68))) == 0 {
		goto _115
	}

	_i = int32(0)
_116:
	if _i >= _nArg {
		goto _118
	}

	_92output_csv(tls, _p, func() uintptr {
		if (*(*uintptr)(unsafe.Pointer(_azCol + 8*uintptr(_i)))) != 0 {
			return *(*uintptr)(unsafe.Pointer(_azCol + 8*uintptr(_i)))
		}
		return ts + 4553 /* "" */
	}(), bool2int(_i < (_nArg-int32(1))))
	_i++
	goto _116

_118:
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+429 /* "%s" */, _p+138)
_115:
	if _nArg <= int32(0) {
		goto _119
	}

	_i = int32(0)
_120:
	if _i >= _nArg {
		goto _122
	}

	_92output_csv(tls, _p, *(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_i))), bool2int(_i < (_nArg-int32(1))))
	_i++
	goto _120

_122:
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+429 /* "%s" */, _p+138)
_119:
	goto _2

_12:
	if _azArg != 0 {
		goto _123
	}

	goto _2

_123:
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+8811 /* "INSERT INTO %s" */, *(*uintptr)(unsafe.Pointer(_p + 80)))
	if (*(*int32)(unsafe.Pointer(_p + 68))) == 0 {
		goto _124
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+5384 /* "(" */)
	_i = int32(0)
_125:
	if _i >= _nArg {
		goto _127
	}

	if _i <= int32(0) {
		goto _128
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+416 /* "," */)
_128:
	if _93quoteChar(tls, *(*uintptr)(unsafe.Pointer(_azCol + 8*uintptr(_i)))) == 0 {
		goto _129
	}

	_5z = Xsqlite3_mprintf(tls, ts+4154 /* "\"%w\"" */, *(*uintptr)(unsafe.Pointer(_azCol + 8*uintptr(_i))))
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+429 /* "%s" */, _5z)
	Xsqlite3_free(tls, _5z)
	goto _130

_129:
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+429 /* "%s" */, *(*uintptr)(unsafe.Pointer(_azCol + 8*uintptr(_i))))
_130:
	_i++
	goto _125

_127:
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+8826 /* ")" */)
_124:
	(*(*int32)(unsafe.Pointer(_p + 28)))++
	_i = int32(0)
_131:
	if _i >= _nArg {
		goto _133
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), func() uintptr {
		if _i > int32(0) {
			return ts + 416 /* "," */
		}
		return ts + 8828 /* " VALUES(" */
	}())
	if (*(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_i)))) != 0 && (_aiType == 0 || (*(*int32)(unsafe.Pointer(_aiType + 4*uintptr(_i)))) != int32(5)) {
		goto _134
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+8837 /* "NULL" */)
	goto _135

_134:
	if _aiType == 0 || (*(*int32)(unsafe.Pointer(_aiType + 4*uintptr(_i)))) != int32(3) {
		goto _136
	}

	if ((*(*uint32)(unsafe.Pointer(_p + 76))) & uint32(0x10)) == uint32(0) {
		goto _138
	}

	_94output_quoted_string(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), *(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_i))))
	goto _139

_138:
	_95output_quoted_escaped_string(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), *(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_i))))
_139:
	goto _137

_136:
	if _aiType == 0 || (*(*int32)(unsafe.Pointer(_aiType + 4*uintptr(_i)))) != int32(1) {
		goto _140
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+429 /* "%s" */, *(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_i))))
	goto _141

_140:
	if _aiType == 0 || (*(*int32)(unsafe.Pointer(_aiType + 4*uintptr(_i)))) != int32(2) {
		goto _142
	}

	_r = Xsqlite3_column_double(tls, *(*uintptr)(unsafe.Pointer(_p + 5104)), _i)
	Xsqlite3_snprintf(tls, int32(50), _6z, ts+8842 /* "%!.20g" */, _r)
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+429 /* "%s" */, _6z)
	goto _143

_142:
	if _aiType == 0 || (*(*int32)(unsafe.Pointer(_aiType + 4*uintptr(_i)))) != int32(4) || (*(*uintptr)(unsafe.Pointer(_p + 5104))) == 0 {
		goto _144
	}

	_pBlob = Xsqlite3_column_blob(tls, *(*uintptr)(unsafe.Pointer(_p + 5104)), _i)
	_nBlob = Xsqlite3_column_bytes(tls, *(*uintptr)(unsafe.Pointer(_p + 5104)), _i)
	_96output_hex_blob(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), _pBlob, _nBlob)
	goto _145

_144:
	if _97isNumber(tls, *(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_i))), null) == 0 {
		goto _146
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+429 /* "%s" */, *(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_i))))
	goto _147

_146:
	if ((*(*uint32)(unsafe.Pointer(_p + 76))) & uint32(0x10)) == uint32(0) {
		goto _148
	}

	_94output_quoted_string(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), *(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_i))))
	goto _149

_148:
	_95output_quoted_escaped_string(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), *(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_i))))
_149:
_147:
_145:
_143:
_141:
_137:
_135:
	_i++
	goto _131

_133:
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+8849 /* ");\n" */)
	goto _2

_13:
	if _azArg != 0 {
		goto _150
	}

	goto _2

_150:
	if (*(*int32)(unsafe.Pointer(_p + 28))) != int32(0) || (*(*int32)(unsafe.Pointer(_p + 68))) == 0 {
		goto _151
	}

	_i = int32(0)
_152:
	if _i >= _nArg {
		goto _154
	}

	if _i <= int32(0) {
		goto _155
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+416 /* "," */)
_155:
	_94output_quoted_string(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), *(*uintptr)(unsafe.Pointer(_azCol + 8*uintptr(_i))))
	_i++
	goto _152

_154:
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+867 /* "\n" */)
_151:
	(*(*int32)(unsafe.Pointer(_p + 28)))++
	_i = int32(0)
_156:
	if _i >= _nArg {
		goto _158
	}

	if _i <= int32(0) {
		goto _159
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+416 /* "," */)
_159:
	if (*(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_i)))) != 0 && (_aiType == 0 || (*(*int32)(unsafe.Pointer(_aiType + 4*uintptr(_i)))) != int32(5)) {
		goto _160
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+8837 /* "NULL" */)
	goto _161

_160:
	if _aiType == 0 || (*(*int32)(unsafe.Pointer(_aiType + 4*uintptr(_i)))) != int32(3) {
		goto _162
	}

	_94output_quoted_string(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), *(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_i))))
	goto _163

_162:
	if _aiType == 0 || (*(*int32)(unsafe.Pointer(_aiType + 4*uintptr(_i)))) != int32(1) {
		goto _164
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+429 /* "%s" */, *(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_i))))
	goto _165

_164:
	if _aiType == 0 || (*(*int32)(unsafe.Pointer(_aiType + 4*uintptr(_i)))) != int32(2) {
		goto _166
	}

	_8r = Xsqlite3_column_double(tls, *(*uintptr)(unsafe.Pointer(_p + 5104)), _i)
	Xsqlite3_snprintf(tls, int32(50), _7z, ts+8842 /* "%!.20g" */, _8r)
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+429 /* "%s" */, _7z)
	goto _167

_166:
	if _aiType == 0 || (*(*int32)(unsafe.Pointer(_aiType + 4*uintptr(_i)))) != int32(4) || (*(*uintptr)(unsafe.Pointer(_p + 5104))) == 0 {
		goto _168
	}

	_9pBlob = Xsqlite3_column_blob(tls, *(*uintptr)(unsafe.Pointer(_p + 5104)), _i)
	_10nBlob = Xsqlite3_column_bytes(tls, *(*uintptr)(unsafe.Pointer(_p + 5104)), _i)
	_96output_hex_blob(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), _9pBlob, _10nBlob)
	goto _169

_168:
	if _97isNumber(tls, *(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_i))), null) == 0 {
		goto _170
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+429 /* "%s" */, *(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_i))))
	goto _171

_170:
	_94output_quoted_string(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), *(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_i))))
_171:
_169:
_167:
_165:
_163:
_161:
	_i++
	goto _156

_158:
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+867 /* "\n" */)
	goto _2

_14:
	if postinc7(&(*(*int32)(unsafe.Pointer(_p + 28)))) != int32(0) || (*(*int32)(unsafe.Pointer(_p + 68))) == 0 {
		goto _172
	}

	_i = int32(0)
_173:
	if _i >= _nArg {
		goto _175
	}

	if _i <= int32(0) {
		goto _176
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+429 /* "%s" */, _p+118)
_176:
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+429 /* "%s" */, func() uintptr {
		if (*(*uintptr)(unsafe.Pointer(_azCol + 8*uintptr(_i)))) != 0 {
			return *(*uintptr)(unsafe.Pointer(_azCol + 8*uintptr(_i)))
		}
		return ts + 4553 /* "" */
	}())
	_i++
	goto _173

_175:
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+429 /* "%s" */, _p+138)
_172:
	if _azArg != 0 {
		goto _177
	}

	goto _2

_177:
	_i = int32(0)
_178:
	if _i >= _nArg {
		goto _180
	}

	if _i <= int32(0) {
		goto _181
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+429 /* "%s" */, _p+118)
_181:
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+429 /* "%s" */, func() uintptr {
		if (*(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_i)))) != 0 {
			return *(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_i)))
		}
		return _p + 960
	}())
	_i++
	goto _178

_180:
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+429 /* "%s" */, _p+138)
	goto _2

_2:
	return int32(0)
}

// _16printBold is defined at shell.c:7974:13
func _16printBold(tls crt.TLS, _zText uintptr /* *int8 */) {
	crt.Xprintf(tls, ts+8853 /* "\x1b[1m%s\x1b[0m" */, _zText)
}

// _17find_home_dir is defined at shell.c:7788:13
func _17find_home_dir(tls crt.TLS, _clearFlag int32) (r uintptr /* *int8 */) {
	var (
		_pwent uintptr // *Spasswd
		_uid   uint32
		_n     int32
		_z     uintptr // *int8
	)
	if _clearFlag == 0 {
		goto _1
	}

	crt.Xfree(tls, _98home_dir)
	_98home_dir = null
	return null

_1:
	if _98home_dir == 0 {
		goto _2
	}

	return _98home_dir

_2:
	_uid = uint32(crt.Xgetuid(tls))
	if set4(&_pwent, crt.Xgetpwuid(tls, _uid)) == null {
		goto _3
	}

	_98home_dir = *(*uintptr)(unsafe.Pointer(_pwent + 32))
_3:
	if _98home_dir != 0 {
		goto _4
	}

	_98home_dir = crt.Xgetenv(tls, ts+8864 /* "HOME" */)
_4:
	if _98home_dir == 0 {
		goto _5
	}

	_n = _18strlen30(tls, _98home_dir) + int32(1)
	_z = crt.Xmalloc(tls, uint64(_n))
	if _z == 0 {
		goto _6
	}

	crt.Xmemcpy(tls, _z, _98home_dir, uint64(_n))
_6:
	_98home_dir = _z
_5:
	return _98home_dir
}

// _18strlen30 is defined at shell.c:524:12
func _18strlen30(tls crt.TLS, _z uintptr /* *int8 */) (r int32) {
	var _z2 uintptr // *int8

	_z2 = _z
_1:
	if (*(*int8)(unsafe.Pointer(_z2))) == 0 {
		goto _2
	}

	_z2++
	goto _1

_2:
	return int32(0x3fffffff) & int32(int64(_z2-_z))
}

// _19process_input is defined at shell.c:7699:12
func _19process_input(tls crt.TLS, _p uintptr /* *TShellState = SShellState */, _in uintptr /* *TFILE = S_IO_FILE */) (r int32) {
	var (
		_zLine     uintptr // *int8
		_zSql      uintptr // *int8
		_nLine     int32
		_nSql      int32
		_nAlloc    int32
		_nSqlPrior int32
		_rc        int32
		_errCnt    int32
		_lineno    int32
		_startline int32
		_i         int32
	)
	_zLine = 0
	_zSql = 0
	_nSql = int32(0)
	_nAlloc = int32(0)
	_nSqlPrior = int32(0)
	_errCnt = int32(0)
	_lineno = int32(0)
	_startline = int32(0)
_1:
	if _errCnt != int32(0) && _11bail_on_error != 0 && (_in != 0 || _2stdin_is_interactive == 0) {
		goto _2
	}

	crt.Xfflush(tls, *(*uintptr)(unsafe.Pointer(_p + 32)))
	_zLine = _100one_input_line(tls, _in, _zLine, bool2int(_nSql > int32(0)))
	if _zLine != 0 {
		goto _3
	}

	if _in != 0 || _2stdin_is_interactive == 0 {
		goto _4
	}

	crt.Xprintf(tls, ts+867 /* "\n" */)
_4:
	goto _2

_3:
	if _24seenInterrupt == 0 {
		goto _5
	}

	if _in == 0 {
		goto _6
	}

	goto _2

_6:
	_24seenInterrupt = int32(0)
_5:
	_lineno++
	if _nSql != int32(0) || _101_all_whitespace(tls, _zLine) == 0 {
		goto _7
	}

	if ((*(*uint32)(unsafe.Pointer(_p + 76))) & uint32(0x40)) == uint32(0) {
		goto _8
	}

	crt.Xprintf(tls, ts+6158 /* "%s\n" */, _zLine)
_8:
	goto _1

_7:
	if _zLine == 0 || int32(*(*int8)(unsafe.Pointer(_zLine))) != int32('.') || _nSql != int32(0) {
		goto _9
	}

	if ((*(*uint32)(unsafe.Pointer(_p + 76))) & uint32(0x40)) == uint32(0) {
		goto _10
	}

	crt.Xprintf(tls, ts+6158 /* "%s\n" */, _zLine)
_10:
	_rc = _13do_meta_command(tls, _zLine, _p)
	if _rc != int32(2) {
		goto _11
	}

	goto _2

	goto _12

_11:
	if _rc == 0 {
		goto _13
	}

	_errCnt++
_13:
_12:
	goto _1

_9:
	if _102line_is_command_terminator(tls, _zLine) == 0 || _103line_is_complete(tls, _zSql, _nSql) == 0 {
		goto _14
	}

	crt.Xmemcpy(tls, _zLine, ts+8869 /* ";" */, uint64(2))
_14:
	_nLine = _18strlen30(tls, _zLine)
	if ((_nSql + _nLine) + int32(2)) < _nAlloc {
		goto _15
	}

	_nAlloc = (_nSql + _nLine) + int32(100)
	_zSql = crt.Xrealloc(tls, _zSql, uint64(_nAlloc))
	if _zSql != 0 {
		goto _16
	}

	crt.Xfprintf(tls, Xstderr, ts+3665 /* "Error: out of memory\n" */)
	crt.Xexit(tls, int32(1))
_16:
_15:
	_nSqlPrior = _nSql
	if _nSql != int32(0) {
		goto _17
	}

	_i = int32(0)
_19:
	if (*(*int8)(unsafe.Pointer(_zLine + uintptr(_i)))) == 0 || int32(*(*uint16)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(crt.X__ctype_b_loc(tls))) + 2*uintptr(int32(uint8(*(*int8)(unsafe.Pointer(_zLine + uintptr(_i)))))))))&int32(8192) == 0 {
		goto _21
	}

	_i++
	goto _19

_21:
	if _nAlloc <= int32(0) || _zSql == 0 {
		crt.X__assert_fail(tls, ts+8871 /* "nAlloc>0 && zSql!=0" */, ts+161 /* "/home/jnml/src/github.com/cznic/..." */, uint32(7754), _99__func__)
	}
	crt.Xmemcpy(tls, _zSql, _zLine+uintptr(_i), uint64((_nLine+int32(1))-_i))
	_startline = _lineno
	_nSql = _nLine - _i
	goto _18

_17:
	*(*int8)(unsafe.Pointer(_zSql + uintptr(postinc7(&_nSql)))) = int8('\n')
	crt.Xmemcpy(tls, _zSql+uintptr(_nSql), _zLine, uint64(_nLine+int32(1)))
	_nSql = int32(_nSql + _nLine)
_18:
	if _nSql == 0 || _104line_contains_semicolon(tls, _zSql+uintptr(_nSqlPrior), _nSql-_nSqlPrior) == 0 || Xsqlite3_complete(tls, _zSql) == 0 {
		goto _22
	}

	_errCnt = int32(_errCnt + _105runOneSqlLine(tls, _p, _zSql, _in, _startline))
	_nSql = int32(0)
	if (*(*int32)(unsafe.Pointer(_p + 24))) == 0 {
		goto _24
	}

	_49output_reset(tls, _p)
	*(*int32)(unsafe.Pointer(_p + 24)) = int32(0)
_24:
	goto _23

_22:
	if _nSql == 0 || _101_all_whitespace(tls, _zSql) == 0 {
		goto _25
	}

	if ((*(*uint32)(unsafe.Pointer(_p + 76))) & uint32(0x40)) == uint32(0) {
		goto _26
	}

	crt.Xprintf(tls, ts+6158 /* "%s\n" */, _zSql)
_26:
	_nSql = int32(0)
_25:
_23:
	goto _1

_2:
	if _nSql == 0 || _101_all_whitespace(tls, _zSql) != 0 {
		goto _27
	}

	_105runOneSqlLine(tls, _p, _zSql, _in, _startline)
_27:
	crt.Xfree(tls, _zSql)
	crt.Xfree(tls, _zLine)
	return bool2int(_errCnt > int32(0))
}

// _20set_table_name is defined at shell.c:3076:13
func _20set_table_name(tls crt.TLS, _p uintptr /* *TShellState = SShellState */, _zName uintptr /* *int8 */) {
	var (
		_i      int32
		_n      int32
		_cQuote int8
		_z      uintptr // *int8
	)
	if (*(*uintptr)(unsafe.Pointer(_p + 80))) == 0 {
		goto _1
	}

	crt.Xfree(tls, *(*uintptr)(unsafe.Pointer(_p + 80)))
	*(*uintptr)(unsafe.Pointer(_p + 80)) = null
_1:
	if _zName != 0 {
		goto _2
	}

	return

_2:
	_cQuote = _93quoteChar(tls, _zName)
	_n = _18strlen30(tls, _zName)
	if _cQuote == 0 {
		goto _3
	}

	_n = int32(_n + (_n + int32(2)))
_3:
	_z = set4(&(*(*uintptr)(unsafe.Pointer(_p + 80))), crt.Xmalloc(tls, uint64(_n+int32(1))))
	if _z != 0 {
		goto _4
	}

	crt.Xfprintf(tls, Xstderr, ts+3665 /* "Error: out of memory\n" */)
	crt.Xexit(tls, int32(1))
_4:
	_n = int32(0)
	if _cQuote == 0 {
		goto _5
	}

	*(*int8)(unsafe.Pointer(_z + uintptr(postinc7(&_n)))) = _cQuote
_5:
	_i = int32(0)
_6:
	if (*(*int8)(unsafe.Pointer(_zName + uintptr(_i)))) == 0 {
		goto _8
	}

	*(*int8)(unsafe.Pointer(_z + uintptr(postinc7(&_n)))) = *(*int8)(unsafe.Pointer(_zName + uintptr(_i)))
	if int32(*(*int8)(unsafe.Pointer(_zName + uintptr(_i)))) != int32(_cQuote) {
		goto _9
	}

	*(*int8)(unsafe.Pointer(_z + uintptr(postinc7(&_n)))) = _cQuote
_9:
	_i++
	goto _6

_8:
	if _cQuote == 0 {
		goto _10
	}

	*(*int8)(unsafe.Pointer(_z + uintptr(postinc7(&_n)))) = _cQuote
_10:
	*(*int8)(unsafe.Pointer(_z + uintptr(_n))) = int8(0)
}

// Xsqlite3_close is defined at sqlite3.c:143091:16
func Xsqlite3_close(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */) (r int32) {
	return _106sqlite3Close(tls, _db, int32(0))
}

// Xsqlite3_free is defined at sqlite3.c:25143:17
func Xsqlite3_free(tls crt.TLS, _p uintptr /* *void */) {
	if _p != 0 {
		goto _1
	}

	return

_1:
	if (*(*int32)(unsafe.Pointer(_28sqlite3Config))) == 0 {
		goto _2
	}

	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_107mem0)))
	_108sqlite3StatusDown(tls, int32(0), _109sqlite3MallocSize(tls, _p))
	_108sqlite3StatusDown(tls, int32(9), int32(1))
	fn16(*(*uintptr)(unsafe.Pointer((_28sqlite3Config + 48) + 8)))(tls, _p)
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_107mem0)))
	goto _3

_2:
	fn16(*(*uintptr)(unsafe.Pointer((_28sqlite3Config + 48) + 8)))(tls, _p)
_3:
}

type S_IO_FILE struct {
	X_flags          int32
	X_IO_read_ptr    uintptr // *int8
	X_IO_read_end    uintptr // *int8
	X_IO_read_base   uintptr // *int8
	X_IO_write_base  uintptr // *int8
	X_IO_write_ptr   uintptr // *int8
	X_IO_write_end   uintptr // *int8
	X_IO_buf_base    uintptr // *int8
	X_IO_buf_end     uintptr // *int8
	X_IO_save_base   uintptr // *int8
	X_IO_backup_base uintptr // *int8
	X_IO_save_end    uintptr // *int8
	X_markers        uintptr // *S_IO_marker
	X_chain          uintptr // *S_IO_FILE
	X_fileno         int32
	X_flags2         int32
	X_old_offset     int64
	X_cur_column     uint16
	X_vtable_offset  int8
	X_shortbuf       [1]int8
	X_lock           uintptr // uintptr
	X_offset         int64
	X__pad1          uintptr // uintptr
	X__pad2          uintptr // uintptr
	X__pad3          uintptr // uintptr
	X__pad4          uintptr // uintptr
	X__pad5          uint64
	X_mode           int32
	X_unused2        [20]int8
}

// _21shellLog is defined at shell.c:2301:13
func _21shellLog(tls crt.TLS, _pArg uintptr /* *void */, _iErrCode int32, _zMsg uintptr /* *int8 */) {
	var _p uintptr // *TShellState = SShellState

	_p = _pArg
	if (*(*uintptr)(unsafe.Pointer(_p + 5112))) != 0 {
		goto _1
	}

	return

_1:
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 5112)), ts+8891 /* "(%d) %s\n" */, _iErrCode, _zMsg)
	crt.Xfflush(tls, *(*uintptr)(unsafe.Pointer(_p + 5112)))
}

// _22mainPrompt [20]int8, escapes: true, shell.c:401:13
var _22mainPrompt = bss + 32

// _23continuePrompt [20]int8, escapes: true, shell.c:402:13
var _23continuePrompt = bss + 52

// _24seenInterrupt int32, escapes: false, shell.c:389:21
var _24seenInterrupt int32

// _25globalDb *Tsqlite3 = Ssqlite3, escapes: false, shell.c:384:16
var _25globalDb uintptr

// Xsqlite3_interrupt is defined at sqlite3.c:143573:17
func Xsqlite3_interrupt(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */) {
	*(*int32)(unsafe.Pointer(_db + 344)) = int32(1)
}

// _26aMult [9]struct{XzSuffix *int8;XiMult int32;}, escapes: true, shell.c:4395:53
var _26aMult = bss + 72 // array of 9 struct{zSuffix pointer to char; iMult int}

func init() {
	*(*[9]struct {
		XzSuffix uintptr // *int8
		XiMult   int32
	})(unsafe.Pointer(_26aMult)) = [9]struct {
		XzSuffix uintptr // *int8
		XiMult   int32
	}{
		0:
		// *int8

		{
			XzSuffix: ts + 8900, /* "KiB" */
			XiMult:   int32(1024),
		},
		1:
		// *int8

		{
			XzSuffix: ts + 8904, /* "MiB" */
			XiMult:   int32(1048576),
		},
		2:
		// *int8

		{
			XzSuffix: ts + 8908, /* "GiB" */
			XiMult:   int32(1073741824),
		},
		3:
		// *int8

		{
			XzSuffix: ts + 8912, /* "KB" */
			XiMult:   int32(1000),
		},
		4:
		// *int8

		{
			XzSuffix: ts + 8915, /* "MB" */
			XiMult:   int32(1000000),
		},
		5:
		// *int8

		{
			XzSuffix: ts + 8918, /* "GB" */
			XiMult:   int32(1000000000),
		},
		6:
		// *int8

		{
			XzSuffix: ts + 8921, /* "K" */
			XiMult:   int32(1000),
		},
		7:
		// *int8

		{
			XzSuffix: ts + 8923, /* "M" */
			XiMult:   int32(1000000),
		},
		8:
		// *int8

		{
			XzSuffix: ts + 8925, /* "G" */
			XiMult:   int32(1000000000),
		},
	}
}

// _27hexDigitValue is defined at shell.c:4383:12
func _27hexDigitValue(tls crt.TLS, _c int8) (r int32) {
	if int32(_c) < int32('0') || int32(_c) > int32('9') {
		goto _1
	}

	return int32(_c) - int32('0')

_1:
	if int32(_c) < int32('a') || int32(_c) > int32('f') {
		goto _2
	}

	return (int32(_c) - int32('a')) + int32(10)

_2:
	if int32(_c) < int32('A') || int32(_c) > int32('F') {
		goto _3
	}

	return (int32(_c) - int32('A')) + int32(10)

_3:
	return int32(-1)
}

// Xsqlite3_stricmp is defined at sqlite3.c:28420:16
func Xsqlite3_stricmp(tls crt.TLS, _zLeft uintptr /* *int8 */, _zRight uintptr /* *int8 */) (r int32) {
	if _zLeft != 0 {
		goto _1
	}

	if _zRight != 0 {
		return int32(-1)
	}

	return int32(0)

	goto _2

_1:
	if _zRight != 0 {
		goto _3
	}

	return int32(1)

_3:
_2:
	return _110sqlite3StrICmp(tls, _zLeft, _zRight)
}

// _28sqlite3Config SSqlite3Config, escapes: true, sqlite3.c:18396:48
var _28sqlite3Config = bss + 216 // struct Sqlite3Config

func init() {
	*(*SSqlite3Config)(unsafe.Pointer(_28sqlite3Config)) = SSqlite3Config{
		XbMemstat:            int32(1),
		XbCoreMutex:          int32(1),
		XbFullMutex:          int32(1),
		XbUseCis:             int32(1),
		XmxStrlen:            int32(0x7ffffffe),
		XszLookaside:         int32(1200),
		XnLookaside:          int32(100),
		XnStmtSpill:          int32(65536),
		XmxMmap:              int64(0x7fff0000),
		XnPage:               int32(20),
		XszPma:               uint32(250),
		XiOnceResetThreshold: int32(0x7ffffffe),
	}
}

// _29sqlite3MisuseError is defined at sqlite3.c:145334:20
func _29sqlite3MisuseError(tls crt.TLS, _lineno int32) (r int32) {
	return _111reportError(tls, int32(21), _lineno, ts+8927 /* "misuse" */)
}

type Ssqlite3_mutex_methods struct {
	XxMutexInit    uintptr // *func(crt.TLS) int32
	XxMutexEnd     uintptr // *func(crt.TLS) int32
	XxMutexAlloc   uintptr // *func(crt.TLS, int32) uintptr
	XxMutexFree    uintptr // *func(crt.TLS, uintptr)
	XxMutexEnter   uintptr // *func(crt.TLS, uintptr)
	XxMutexTry     uintptr // *func(crt.TLS, uintptr) int32
	XxMutexLeave   uintptr // *func(crt.TLS, uintptr)
	XxMutexHeld    uintptr // *func(crt.TLS, uintptr) int32
	XxMutexNotheld uintptr // *func(crt.TLS, uintptr) int32
}

type Ssqlite3_mem_methods struct {
	XxMalloc   uintptr // *func(crt.TLS, int32) uintptr
	XxFree     uintptr // *func(crt.TLS, uintptr)
	XxRealloc  uintptr // *func(crt.TLS, uintptr, int32) uintptr
	XxSize     uintptr // *func(crt.TLS, uintptr) int32
	XxRoundup  uintptr // *func(crt.TLS, int32) int32
	XxInit     uintptr // *func(crt.TLS, uintptr) int32
	XxShutdown uintptr // *func(crt.TLS, uintptr)
	XpAppData  uintptr // uintptr
}

// _30sqlite3MemSetDefault is defined at sqlite3.c:21541:21
func _30sqlite3MemSetDefault(tls crt.TLS) {
	Xsqlite3_config(tls, int32(4), _112defaultMethods)
}

// _31sqlite3HeaderSizeBtree is defined at sqlite3.c:69593:20
func _31sqlite3HeaderSizeBtree(tls crt.TLS) (r int32) {
	return int32(136)
}

// _32sqlite3HeaderSizePcache is defined at sqlite3.c:45536:20
func _32sqlite3HeaderSizePcache(tls crt.TLS) (r int32) {
	return int32(72)
}

// _33sqlite3HeaderSizePcache1 is defined at sqlite3.c:46756:20
func _33sqlite3HeaderSizePcache1(tls crt.TLS) (r int32) {
	return int32(56)
}

type Ssqlite3_pcache_methods2 struct {
	XiVersion   int32
	XpArg       uintptr // uintptr
	XxInit      uintptr // *func(crt.TLS, uintptr) int32
	XxShutdown  uintptr // *func(crt.TLS, uintptr)
	XxCreate    uintptr // *func(crt.TLS, int32, int32, int32) uintptr
	XxCachesize uintptr // *func(crt.TLS, uintptr, int32)
	XxPagecount uintptr // *func(crt.TLS, uintptr) int32
	XxFetch     uintptr // *func(crt.TLS, uintptr, uint32, int32) uintptr
	XxUnpin     uintptr // *func(crt.TLS, uintptr, uintptr, int32)
	XxRekey     uintptr // *func(crt.TLS, uintptr, uintptr, uint32, uint32)
	XxTruncate  uintptr // *func(crt.TLS, uintptr, uint32)
	XxDestroy   uintptr // *func(crt.TLS, uintptr)
	XxShrink    uintptr // *func(crt.TLS, uintptr)
}

// _34sqlite3PCacheSetDefault is defined at sqlite3.c:46734:21
func _34sqlite3PCacheSetDefault(tls crt.TLS) {
	Xsqlite3_config(tls, int32(18), _113defaultMethods)
}

type Ssqlite3_mutex struct {
	Xmutex struct {
		X int64
		_ [32]byte
	}
}

// Xsqlite3_initialize is defined at sqlite3.c:142118:16
func Xsqlite3_initialize(tls crt.TLS) (r int32) {
	var (
		_pMaster uintptr // *Tsqlite3_mutex = Ssqlite3_mutex
		_rc      int32
	)

	if (*(*int32)(unsafe.Pointer(_28sqlite3Config + 356))) == 0 {
		goto _1
	}

	return int32(0)

_1:
	_rc = _114sqlite3MutexInit(tls)
	if _rc == 0 {
		goto _2
	}

	return _rc

_2:
	_pMaster = _35sqlite3MutexAlloc(tls, int32(2))
	Xsqlite3_mutex_enter(tls, _pMaster)
	*(*int32)(unsafe.Pointer(_28sqlite3Config + 364)) = int32(1)
	if (*(*int32)(unsafe.Pointer(_28sqlite3Config + 368))) != 0 {
		goto _3
	}

	_rc = _115sqlite3MallocInit(tls)
_3:
	if _rc != int32(0) {
		goto _4
	}

	*(*int32)(unsafe.Pointer(_28sqlite3Config + 368)) = int32(1)
	if (*(*uintptr)(unsafe.Pointer(_28sqlite3Config + 384))) != 0 {
		goto _5
	}

	*(*uintptr)(unsafe.Pointer(_28sqlite3Config + 384)) = _35sqlite3MutexAlloc(tls, int32(1))
	if (*(*int32)(unsafe.Pointer(_28sqlite3Config + 4))) == 0 || (*(*uintptr)(unsafe.Pointer(_28sqlite3Config + 384))) != 0 {
		goto _6
	}

	_rc = int32(7)
_6:
_5:
_4:
	if _rc != int32(0) {
		goto _7
	}

	(*(*int32)(unsafe.Pointer(_28sqlite3Config + 376)))++
_7:
	Xsqlite3_mutex_leave(tls, _pMaster)
	if _rc == int32(0) {
		goto _8
	}

	return _rc

_8:
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_28sqlite3Config + 384)))
	if (*(*int32)(unsafe.Pointer(_28sqlite3Config + 356))) != int32(0) || (*(*int32)(unsafe.Pointer(_28sqlite3Config + 360))) != int32(0) {
		goto _9
	}

	*(*int32)(unsafe.Pointer(_28sqlite3Config + 360)) = int32(1)
	crt.Xmemset(tls, _116sqlite3BuiltinFunctions, int32(0), uint64(184))
	_117sqlite3RegisterBuiltinFunctions(tls)
	if (*(*int32)(unsafe.Pointer(_28sqlite3Config + 372))) != int32(0) {
		goto _10
	}

	_rc = _118sqlite3PcacheInitialize(tls)
_10:
	if _rc != int32(0) {
		goto _11
	}

	*(*int32)(unsafe.Pointer(_28sqlite3Config + 372)) = int32(1)
	_rc = _119sqlite3OsInit(tls)
_11:
	if _rc != int32(0) {
		goto _12
	}

	_120sqlite3PCacheBufferSetup(tls, *(*uintptr)(unsafe.Pointer(_28sqlite3Config + 328)), *(*int32)(unsafe.Pointer(_28sqlite3Config + 336)), *(*int32)(unsafe.Pointer(_28sqlite3Config + 340)))
	*(*int32)(unsafe.Pointer(_28sqlite3Config + 356)) = int32(1)
_12:
	*(*int32)(unsafe.Pointer(_28sqlite3Config + 360)) = int32(0)
_9:
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_28sqlite3Config + 384)))
	Xsqlite3_mutex_enter(tls, _pMaster)
	(*(*int32)(unsafe.Pointer(_28sqlite3Config + 376)))--
	if (*(*int32)(unsafe.Pointer(_28sqlite3Config + 376))) > int32(0) {
		goto _13
	}

	Xsqlite3_mutex_free(tls, *(*uintptr)(unsafe.Pointer(_28sqlite3Config + 384)))
	*(*uintptr)(unsafe.Pointer(_28sqlite3Config + 384)) = null
_13:
	Xsqlite3_mutex_leave(tls, _pMaster)
	return _rc
}

// _35sqlite3MutexAlloc is defined at sqlite3.c:23456:30
func _35sqlite3MutexAlloc(tls crt.TLS, _id int32) (r uintptr /* *Tsqlite3_mutex = Ssqlite3_mutex */) {
	if (*(*int32)(unsafe.Pointer(_28sqlite3Config + 4))) != 0 {
		goto _1
	}

	return null

_1:
	return fn17(*(*uintptr)(unsafe.Pointer((_28sqlite3Config + 112) + 16)))(tls, _id)
}

// Xsqlite3_mutex_enter is defined at sqlite3.c:23479:17
func Xsqlite3_mutex_enter(tls crt.TLS, _p uintptr /* *Tsqlite3_mutex = Ssqlite3_mutex */) {
	if _p == 0 {
		goto _1
	}

	fn16(*(*uintptr)(unsafe.Pointer((_28sqlite3Config + 112) + 32)))(tls, _p)
_1:
}

// _36vfsList *Tsqlite3_vfs = Ssqlite3_vfs, escapes: false, sqlite3.c:21020:20
var _36vfsList uintptr

// Xsqlite3_mutex_leave is defined at sqlite3.c:23505:17
func Xsqlite3_mutex_leave(tls crt.TLS, _p uintptr /* *Tsqlite3_mutex = Ssqlite3_mutex */) {
	if _p == 0 {
		goto _1
	}

	fn16(*(*uintptr)(unsafe.Pointer((_28sqlite3Config + 112) + 48)))(tls, _p)
_1:
}

// _37vfsUnlink is defined at sqlite3.c:21051:13
func _37vfsUnlink(tls crt.TLS, _pVfs uintptr /* *Tsqlite3_vfs = Ssqlite3_vfs */) {
	var _p uintptr // *Tsqlite3_vfs = Ssqlite3_vfs

	if _pVfs != 0 {
		goto _1
	}

	goto _2

_1:
	if _36vfsList != _pVfs {
		goto _3
	}

	_36vfsList = *(*uintptr)(unsafe.Pointer(_pVfs + 16))
	goto _4

_3:
	if _36vfsList == 0 {
		goto _5
	}

	_p = _36vfsList
_6:
	if (*(*uintptr)(unsafe.Pointer(_p + 16))) == 0 || (*(*uintptr)(unsafe.Pointer(_p + 16))) == _pVfs {
		goto _7
	}

	_p = *(*uintptr)(unsafe.Pointer(_p + 16))
	goto _6

_7:
	if (*(*uintptr)(unsafe.Pointer(_p + 16))) != _pVfs {
		goto _8
	}

	*(*uintptr)(unsafe.Pointer(_p + 16)) = *(*uintptr)(unsafe.Pointer(_pVfs + 16))
_8:
_5:
_4:
_2:
}

// Xsqlite3_open is defined at sqlite3.c:145123:16
func Xsqlite3_open(tls crt.TLS, _zFilename uintptr /* *int8 */, _ppDb uintptr /* **Tsqlite3 = Ssqlite3 */) (r int32) {
	return _121openDatabase(tls, _zFilename, _ppDb, uint32(6), null)
}

// Xsqlite3_errcode is defined at sqlite3.c:144294:16
func Xsqlite3_errcode(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */) (r int32) {
	if _db == 0 || _122sqlite3SafetyCheckSickOrOk(tls, _db) != 0 {
		goto _1
	}

	return _29sqlite3MisuseError(tls, int32(144296))

_1:
	if _db != 0 && (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _2
	}

	return int32(7)

_2:
	return (*(*int32)(unsafe.Pointer(_db + 80))) & (*(*int32)(unsafe.Pointer(_db + 84)))
}

// Xsqlite3_errmsg is defined at sqlite3.c:144224:23
func Xsqlite3_errmsg(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */) (r uintptr /* *int8 */) {
	var _z uintptr // *int8

	if _db != 0 {
		goto _1
	}

	return _123sqlite3ErrStr(tls, int32(7))

_1:
	if _122sqlite3SafetyCheckSickOrOk(tls, _db) != 0 {
		goto _2
	}

	return _123sqlite3ErrStr(tls, _29sqlite3MisuseError(tls, int32(144230)))

_2:
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _3
	}

	_z = _123sqlite3ErrStr(tls, int32(7))
	goto _4

_3:
	_z = Xsqlite3_value_text(tls, *(*uintptr)(unsafe.Pointer(_db + 336)))

	if _z != 0 {
		goto _5
	}

	_z = _123sqlite3ErrStr(tls, *(*int32)(unsafe.Pointer(_db + 80)))
_5:
_4:
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	return _z
}

// Xsqlite3_enable_load_extension is defined at sqlite3.c:113465:16
func Xsqlite3_enable_load_extension(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _onoff int32) (r int32) {
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	if _onoff == 0 {
		goto _1
	}

	{
		p := &(*(*uint32)(unsafe.Pointer(_db + 48)))
		*p = uint32(uint32(*p) | uint32(196608))
	}
	goto _2

_1:
	{
		p := &(*(*uint32)(unsafe.Pointer(_db + 48)))
		*p = uint32(uint32(*p) & uint32(4294770687))
	}
_2:
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	return int32(0)
}

// Xsqlite3_fileio_init is defined at shell.c:1616:5
func Xsqlite3_fileio_init(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pzErrMsg uintptr /* **int8 */, _pApi uintptr /* *Tsqlite3_api_routines = Ssqlite3_api_routines */) (r int32) {
	var _rc int32

	_rc = int32(0)

	_rc = Xsqlite3_create_function(tls, _db, ts+8934 /* "readfile" */, int32(1), int32(1), null, fp6(_124readfileFunc), null, null)
	if _rc != int32(0) {
		goto _1
	}

	_rc = Xsqlite3_create_function(tls, _db, ts+8943 /* "writefile" */, int32(2), int32(1), null, fp6(_125writefileFunc), null, null)
_1:
	return _rc
}

// Xsqlite3_shathree_init is defined at shell.c:1504:5
func Xsqlite3_shathree_init(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pzErrMsg uintptr /* **int8 */, _pApi uintptr /* *Tsqlite3_api_routines = Ssqlite3_api_routines */) (r int32) {
	var _rc int32

	_rc = int32(0)

	_rc = Xsqlite3_create_function(tls, _db, ts+8953 /* "sha3" */, int32(1), int32(1), null, fp6(_126sha3Func), null, null)
	if _rc != int32(0) {
		goto _1
	}

	_rc = Xsqlite3_create_function(tls, _db, ts+8953 /* "sha3" */, int32(2), int32(1), null, fp6(_126sha3Func), null, null)
_1:
	if _rc != int32(0) {
		goto _2
	}

	_rc = Xsqlite3_create_function(tls, _db, ts+8958 /* "sha3_query" */, int32(1), int32(1), null, fp6(_127sha3QueryFunc), null, null)
_2:
	if _rc != int32(0) {
		goto _3
	}

	_rc = Xsqlite3_create_function(tls, _db, ts+8958 /* "sha3_query" */, int32(2), int32(1), null, fp6(_127sha3QueryFunc), null, null)
_3:
	return _rc
}

// Xsqlite3_completion_init is defined at shell.c:2144:5
func Xsqlite3_completion_init(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pzErrMsg uintptr /* **int8 */, _pApi uintptr /* *Tsqlite3_api_routines = Ssqlite3_api_routines */) (r int32) {
	var _rc int32

	_rc = int32(0)

	_rc = Xsqlite3CompletionVtabInit(tls, _db)
	return _rc
}

// Xsqlite3_create_function is defined at sqlite3.c:143689:16
func Xsqlite3_create_function(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _zFunc uintptr /* *int8 */, _nArg int32, _enc int32, _p uintptr /* *void */, _xSFunc uintptr /* *func(crt.TLS, uintptr, int32, uintptr) */, _xStep uintptr /* *func(crt.TLS, uintptr, int32, uintptr) */, _xFinal uintptr /* *func(crt.TLS, uintptr) */) (r int32) {
	return Xsqlite3_create_function_v2(tls, _db, _zFunc, _nArg, _enc, _p, _xSFunc, _xStep, _xFinal, null)
}

// _38shellAddSchemaName is defined at shell.c:769:13
func _38shellAddSchemaName(tls crt.TLS, _pCtx uintptr /* *Tsqlite3_context = Ssqlite3_context */, _nVal int32, _apVal uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	var (
		_i       int32
		_zIn     uintptr // *int8
		_zSchema uintptr // *int8
		_n       int32
		_cQuote  int8
		_z       uintptr // *int8
	)
	_i = int32(0)
	_zIn = Xsqlite3_value_text(tls, *(*uintptr)(unsafe.Pointer(_apVal)))
	_zSchema = Xsqlite3_value_text(tls, *(*uintptr)(unsafe.Pointer(_apVal + 8)))
	if _nVal != int32(2) {
		crt.X__assert_fail(tls, ts+8969 /* "nVal==2" */, ts+161 /* "/home/jnml/src/github.com/cznic/..." */, uint32(785), _128__func__)
	}
	if _zIn == 0 || crt.Xstrncmp(tls, _zIn, ts+8977 /* "CREATE " */, uint64(7)) != int32(0) {
		goto _1
	}

	_i = int32(0)
_2:
	if _i >= int32(6) {
		goto _4
	}

	_n = _18strlen30(tls, *(*uintptr)(unsafe.Pointer(_129aPrefix + 8*uintptr(_i))))
	if crt.Xstrncmp(tls, _zIn+uintptr(7), *(*uintptr)(unsafe.Pointer(_129aPrefix + 8*uintptr(_i))), uint64(_n)) != int32(0) || int32(*(*int8)(unsafe.Pointer(_zIn + uintptr(_n+int32(7))))) != int32(' ') {
		goto _5
	}

	_cQuote = _93quoteChar(tls, _zSchema)
	if _cQuote == 0 {
		goto _6
	}

	_z = Xsqlite3_mprintf(tls, ts+8985 /* "%.*s \"%w\".%s" */, _n+int32(7), _zIn, _zSchema, (_zIn+uintptr(_n))+uintptr(8))
	goto _7

_6:
	_z = Xsqlite3_mprintf(tls, ts+8998 /* "%.*s %s.%s" */, _n+int32(7), _zIn, _zSchema, (_zIn+uintptr(_n))+uintptr(8))
_7:
	Xsqlite3_result_text(tls, _pCtx, _z, int32(-1), fp18(Xsqlite3_free))
	return

_5:
	_i++
	goto _2

_4:
_1:
	Xsqlite3_result_value(tls, _pCtx, *(*uintptr)(unsafe.Pointer(_apVal)))
}

// Xsqlite3_mprintf is defined at sqlite3.c:26530:17
func Xsqlite3_mprintf(tls crt.TLS, _zFormat uintptr /* *int8 */, ap ...interface{}) (r uintptr /* *int8 */) {
	var (
		_ap *[]interface{} // Tva_list = T__gnuc_va_list = T__...a_list = *struct{X_ [2]uintptr;}
		_z  uintptr        // *int8
	)
	if Xsqlite3_initialize(tls) == 0 {
		goto _1
	}

	return null

_1:
	{
		x := ap
		_ap = &x
	}
	_z = Xsqlite3_vmprintf(tls, _zFormat, _ap)
	_ap = nil
	return _z
}

// Xsqlite3_vsnprintf is defined at sqlite3.c:26555:17
func Xsqlite3_vsnprintf(tls crt.TLS, _n int32, _zBuf uintptr /* *int8 */, _zFormat uintptr /* *int8 */, _ap *[]interface{}) (r uintptr /* *int8 */) {
	esc := crt.MustMalloc(32)
	var _acc = esc // *TStrAccum = SStrAccum
	defer crt.Free(esc)
	if _n > int32(0) {
		goto _1
	}

	return _zBuf

_1:
	_130sqlite3StrAccumInit(tls, _acc, null, _zBuf, _n, int32(0))
	_131sqlite3VXPrintf(tls, _acc, _zFormat, _ap)
	*(*int8)(unsafe.Pointer(_zBuf + uintptr(*(*uint32)(unsafe.Pointer(_acc + 24))))) = int8(0)
	return _zBuf
}

// Xsqlite3_version [7]int8, escapes: true, sqlite3.c:1186:23
var Xsqlite3_version = ds + 5

// _39zOptions [1297]int8, escapes: true, shell.c:7893:19
var _39zOptions = ds + 12

// _40__func__ [16]int8, escapes: true, shell.c:5428:55
var _40__func__ = ds + 1309

// _41aLimit [12]struct{XzLimitName *int8;XlimitCode int32;}, escapes: true, shell.c:6155:7
var _41aLimit = bss + 640 // array of 12 struct{zLimitName pointer to char; limitCode int}

func init() {
	*(*[12]struct {
		XzLimitName uintptr // *int8
		XlimitCode  int32
	})(unsafe.Pointer(_41aLimit)) = [12]struct {
		XzLimitName uintptr // *int8
		XlimitCode  int32
	}{
		0:
		// *int8

		{
			XzLimitName: ts + 9009, /* "length" */
		},
		1:
		// *int8

		{
			XzLimitName: ts + 9016, /* "sql_length" */
			XlimitCode:  int32(1),
		},
		2:
		// *int8

		{
			XzLimitName: ts + 9027, /* "column" */
			XlimitCode:  int32(2),
		},
		3:
		// *int8

		{
			XzLimitName: ts + 9034, /* "expr_depth" */
			XlimitCode:  int32(3),
		},
		4:
		// *int8

		{
			XzLimitName: ts + 9045, /* "compound_select" */
			XlimitCode:  int32(4),
		},
		5:
		// *int8

		{
			XzLimitName: ts + 9061, /* "vdbe_op" */
			XlimitCode:  int32(5),
		},
		6:
		// *int8

		{
			XzLimitName: ts + 9069, /* "function_arg" */
			XlimitCode:  int32(6),
		},
		7:
		// *int8

		{
			XzLimitName: ts + 9082, /* "attached" */
			XlimitCode:  int32(7),
		},
		8:
		// *int8

		{
			XzLimitName: ts + 9091, /* "like_pattern_length" */
			XlimitCode:  int32(8),
		},
		9:
		// *int8

		{
			XzLimitName: ts + 9111, /* "variable_number" */
			XlimitCode:  int32(9),
		},
		10:
		// *int8

		{
			XzLimitName: ts + 9127, /* "trigger_depth" */
			XlimitCode:  int32(10),
		},
		11:
		// *int8

		{
			XzLimitName: ts + 9141, /* "worker_threads" */
			XlimitCode:  int32(11),
		},
	}
}

// _42azBool [4]*int8, escapes: true, shell.c:7103:23
var _42azBool = bss + 832 // array of 4 pointer to char

func init() {
	*(*[4]uintptr)(unsafe.Pointer(_42azBool)) = [4]uintptr{
		0: ts + 4892, /* "off" */
		1: ts + 7389, /* "on" */
		2: ts + 2700, /* "full" */
		3: ts + 9156, /* "unk" */
	}
}

// _43aCtrl [15]struct{XzCtrlName *int8;XctrlCode int32;}, escapes: true, shell.c:7276:7
var _43aCtrl = bss + 864 // array of 15 struct{zCtrlName pointer to char; ctrlCode int}

func init() {
	*(*[15]struct {
		XzCtrlName uintptr // *int8
		XctrlCode  int32
	})(unsafe.Pointer(_43aCtrl)) = [15]struct {
		XzCtrlName uintptr // *int8
		XctrlCode  int32
	}{
		0:
		// *int8

		{
			XzCtrlName: ts + 9160, /* "prng_save" */
			XctrlCode:  int32(5),
		},
		1:
		// *int8

		{
			XzCtrlName: ts + 9170, /* "prng_restore" */
			XctrlCode:  int32(6),
		},
		2:
		// *int8

		{
			XzCtrlName: ts + 9183, /* "prng_reset" */
			XctrlCode:  int32(7),
		},
		3:
		// *int8

		{
			XzCtrlName: ts + 9194, /* "bitvec_test" */
			XctrlCode:  int32(8),
		},
		4:
		// *int8

		{
			XzCtrlName: ts + 9206, /* "fault_install" */
			XctrlCode:  int32(9),
		},
		5:
		// *int8

		{
			XzCtrlName: ts + 9220, /* "benign_malloc_hooks" */
			XctrlCode:  int32(10),
		},
		6:
		// *int8

		{
			XzCtrlName: ts + 9240, /* "pending_byte" */
			XctrlCode:  int32(11),
		},
		7:
		// *int8

		{
			XzCtrlName: ts + 9253, /* "assert" */
			XctrlCode:  int32(12),
		},
		8:
		// *int8

		{
			XzCtrlName: ts + 9260, /* "always" */
			XctrlCode:  int32(13),
		},
		9:
		// *int8

		{
			XzCtrlName: ts + 9267, /* "reserve" */
			XctrlCode:  int32(14),
		},
		10:
		// *int8

		{
			XzCtrlName: ts + 9275, /* "optimizations" */
			XctrlCode:  int32(15),
		},
		11:
		// *int8

		{
			XzCtrlName: ts + 9289, /* "iskeyword" */
			XctrlCode:  int32(16),
		},
		12:
		// *int8

		{
			XzCtrlName: ts + 9299, /* "byteorder" */
			XctrlCode:  int32(22),
		},
		13:
		// *int8

		{
			XzCtrlName: ts + 9309, /* "never_corrupt" */
			XctrlCode:  int32(20),
		},
		14:
		// *int8

		{
			XzCtrlName: ts + 3984, /* "imposter" */
			XctrlCode:  int32(25),
		},
	}
}

type SImportCtx struct {
	XzFile     uintptr // *int8
	Xin        uintptr // *S_IO_FILE
	Xz         uintptr // *int8
	Xn         int32
	XnAlloc    int32
	XnLine     int32
	XbNotFirst int32
	XcTerm     int32
	XcColSep   int32
	XcRowSep   int32
}

type SShellText struct {
	Xz      uintptr // *int8
	Xn      int32
	XnAlloc int32
}

// _44resolve_backslashes is defined at shell.c:4335:13
func _44resolve_backslashes(tls crt.TLS, _z uintptr /* *int8 */) {
	var (
		_i int32
		_j int32
		_c int8
	)
_1:
	if (*(*int8)(unsafe.Pointer(_z))) == 0 || int32(*(*int8)(unsafe.Pointer(_z))) == int32('\\') {
		goto _2
	}

	_z++
	goto _1

_2:
	_i = set5(&_j, int32(0))
_3:
	if int32(set15(&_c, *(*int8)(unsafe.Pointer(_z + uintptr(_i))))) == int32(0) {
		goto _5
	}

	if int32(_c) != int32('\\') || int32(*(*int8)(unsafe.Pointer(_z + uintptr(_i+int32(1))))) == int32(0) {
		goto _6
	}

	_c = *(*int8)(unsafe.Pointer(_z + uintptr(preinc2(&_i))))
	if int32(_c) != int32('a') {
		goto _7
	}

	_c = int8('\a')
	goto _8

_7:
	if int32(_c) != int32('b') {
		goto _9
	}

	_c = int8('\b')
	goto _10

_9:
	if int32(_c) != int32('t') {
		goto _11
	}

	_c = int8('\t')
	goto _12

_11:
	if int32(_c) != int32('n') {
		goto _13
	}

	_c = int8('\n')
	goto _14

_13:
	if int32(_c) != int32('v') {
		goto _15
	}

	_c = int8('\v')
	goto _16

_15:
	if int32(_c) != int32('f') {
		goto _17
	}

	_c = int8('\f')
	goto _18

_17:
	if int32(_c) != int32('r') {
		goto _19
	}

	_c = int8('\r')
	goto _20

_19:
	if int32(_c) != int32('"') {
		goto _21
	}

	_c = int8('"')
	goto _22

_21:
	if int32(_c) != int32('\'') {
		goto _23
	}

	_c = int8('\'')
	goto _24

_23:
	if int32(_c) != int32('\\') {
		goto _25
	}

	_c = int8('\\')
	goto _26

_25:
	if int32(_c) < int32('0') || int32(_c) > int32('7') {
		goto _27
	}

	_c = int8(int32(_c) - int32('0'))
	if int32(*(*int8)(unsafe.Pointer(_z + uintptr(_i+int32(1))))) < int32('0') || int32(*(*int8)(unsafe.Pointer(_z + uintptr(_i+int32(1))))) > int32('7') {
		goto _28
	}

	_i++
	_c = int8(((int32(_c) << (uint(3) % 32)) + int32(*(*int8)(unsafe.Pointer(_z + uintptr(_i))))) - int32('0'))
	if int32(*(*int8)(unsafe.Pointer(_z + uintptr(_i+int32(1))))) < int32('0') || int32(*(*int8)(unsafe.Pointer(_z + uintptr(_i+int32(1))))) > int32('7') {
		goto _29
	}

	_i++
	_c = int8(((int32(_c) << (uint(3) % 32)) + int32(*(*int8)(unsafe.Pointer(_z + uintptr(_i))))) - int32('0'))
_29:
_28:
_27:
_26:
_24:
_22:
_20:
_18:
_16:
_14:
_12:
_10:
_8:
_6:
	*(*int8)(unsafe.Pointer(_z + uintptr(_j))) = _c
	_i++
	_j++
	goto _3

_5:
	if _j >= _i {
		goto _30
	}

	*(*int8)(unsafe.Pointer(_z + uintptr(_j))) = int8(0)
_30:
}

// _45booleanValue is defined at shell.c:4440:12
func _45booleanValue(tls crt.TLS, _zArg uintptr /* *int8 */) (r int32) {
	var _i int32

	if int32(*(*int8)(unsafe.Pointer(_zArg))) != int32('0') || int32(*(*int8)(unsafe.Pointer(_zArg + 1))) != int32('x') {
		goto _1
	}

	_i = int32(2)
_3:
	if _27hexDigitValue(tls, *(*int8)(unsafe.Pointer(_zArg + uintptr(_i)))) < int32(0) {
		goto _5
	}

	_i++
	goto _3

_5:
	goto _2

_1:
	_i = int32(0)
_6:
	if int32(*(*int8)(unsafe.Pointer(_zArg + uintptr(_i)))) < int32('0') || int32(*(*int8)(unsafe.Pointer(_zArg + uintptr(_i)))) > int32('9') {
		goto _8
	}

	_i++
	goto _6

_8:
_2:
	if _i <= int32(0) || int32(*(*int8)(unsafe.Pointer(_zArg + uintptr(_i)))) != int32(0) {
		goto _9
	}

	return int32(_8integerValue(tls, _zArg) & int64(0xffffffff))

_9:
	if Xsqlite3_stricmp(tls, _zArg, ts+7389 /* "on" */) != int32(0) && Xsqlite3_stricmp(tls, _zArg, ts+9323 /* "yes" */) != int32(0) {
		goto _10
	}

	return int32(1)

_10:
	if Xsqlite3_stricmp(tls, _zArg, ts+4892 /* "off" */) != int32(0) && Xsqlite3_stricmp(tls, _zArg, ts+9327 /* "no" */) != int32(0) {
		goto _11
	}

	return int32(0)

_11:
	crt.Xfprintf(tls, Xstderr, ts+9330 /* "ERROR: Not a boolean value: \"%s\"..." */, _zArg)
	return int32(0)
}

// Xsqlite3_set_authorizer is defined at sqlite3.c:100494:16
func Xsqlite3_set_authorizer(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _xAuth uintptr /* *func(crt.TLS, uintptr, int32, u...uintptr, uintptr, uintptr) int32 */, _pArg uintptr /* *void */) (r int32) {
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	*(*uintptr)(unsafe.Pointer(_db + 408)) = _xAuth
	*(*uintptr)(unsafe.Pointer(_db + 416)) = _pArg
	_132sqlite3ExpirePreparedStatements(tls, _db)
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	return int32(0)
}

// _46shellAuth is defined at shell.c:2585:12
func _46shellAuth(tls crt.TLS, _pClientData uintptr /* *void */, _op int32, _zA1 uintptr /* *int8 */, _zA2 uintptr /* *int8 */, _zA3 uintptr /* *int8 */, _zA4 uintptr /* *int8 */) (r int32) {
	esc := crt.MustMalloc(32)
	var (
		_p  uintptr // *TShellState = SShellState
		_i  int32
		_az = esc // *[4]*int8
	)
	defer crt.Free(esc)
	_p = _pClientData
	*(*uintptr)(unsafe.Pointer(_az)) = _zA1
	*(*uintptr)(unsafe.Pointer(_az + 8)) = _zA2
	*(*uintptr)(unsafe.Pointer(_az + 16)) = _zA3
	*(*uintptr)(unsafe.Pointer(_az + 24)) = _zA4
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+9380 /* "authorizer: %s" */, *(*uintptr)(unsafe.Pointer(_133azAction + 8*uintptr(_op))))
	_i = int32(0)
_1:
	if _i >= int32(4) {
		goto _3
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+4582 /* " " */)
	if (*(*uintptr)(unsafe.Pointer(_az + 8*uintptr(_i)))) == 0 {
		goto _4
	}

	_71output_c_string(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), *(*uintptr)(unsafe.Pointer(_az + 8*uintptr(_i))))
	goto _5

_4:
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+8837 /* "NULL" */)
_5:
	_i++
	goto _1

_3:
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+867 /* "\n" */)
	return int32(0)
}

// Xsqlite3_backup_init is defined at sqlite3.c:69756:27
func Xsqlite3_backup_init(tls crt.TLS, _pDestDb uintptr /* *Tsqlite3 = Ssqlite3 */, _zDestDb uintptr /* *int8 */, _pSrcDb uintptr /* *Tsqlite3 = Ssqlite3 */, _zSrcDb uintptr /* *int8 */) (r uintptr /* *Tsqlite3_backup = Ssqlite3_backup */) {
	var _p uintptr // *Tsqlite3_backup = Ssqlite3_backup

	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_pSrcDb + 24)))
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_pDestDb + 24)))
	if _pSrcDb != _pDestDb {
		goto _1
	}

	_134sqlite3ErrorWithMsg(tls, _pDestDb, int32(1), ts+9395 /* "source and destination must be d..." */)
	_p = null
	goto _2

_1:
	_p = _135sqlite3MallocZero(tls, uint64(72))
	if _p != 0 {
		goto _3
	}

	_136sqlite3Error(tls, _pDestDb, int32(7))
_3:
_2:
	if _p == 0 {
		goto _4
	}

	*(*uintptr)(unsafe.Pointer(_p + 40)) = _137findBtree(tls, _pDestDb, _pSrcDb, _zSrcDb)
	*(*uintptr)(unsafe.Pointer(_p + 8)) = _137findBtree(tls, _pDestDb, _pDestDb, _zDestDb)
	*(*uintptr)(unsafe.Pointer(_p)) = _pDestDb
	*(*uintptr)(unsafe.Pointer(_p + 32)) = _pSrcDb
	*(*uint32)(unsafe.Pointer(_p + 24)) = uint32(1)
	*(*int32)(unsafe.Pointer(_p + 60)) = int32(0)
	if 0 != (*(*uintptr)(unsafe.Pointer(_p + 40))) && 0 != (*(*uintptr)(unsafe.Pointer(_p + 8))) && _138checkReadTransaction(tls, _pDestDb, *(*uintptr)(unsafe.Pointer(_p + 8))) == int32(0) {
		goto _5
	}

	Xsqlite3_free(tls, _p)
	_p = null
_5:
_4:
	if _p == 0 {
		goto _6
	}

	(*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 40))) + 24)))++
_6:
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_pDestDb + 24)))
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_pSrcDb + 24)))
	return _p
}

// Xsqlite3_backup_step is defined at sqlite3.c:69963:16
func Xsqlite3_backup_step(tls crt.TLS, _p uintptr /* *Tsqlite3_backup = Ssqlite3_backup */, _nPage int32) (r int32) {
	esc := crt.MustMalloc(56)
	var (
		_rc            int32
		_destMode      int32
		_pgszSrc       int32
		_pgszDest      int32
		_pSrcPager     uintptr // *TPager = SPager
		_pDestPager    uintptr // *TPager = SPager
		_ii            int32
		_nSrcPage      int32
		_bCloseTrans   int32
		_iSrcPg        uint32
		_pSrcPg        = esc // **TDbPage = SPgHdr
		_nDestTruncate int32
		_ratio         int32
		_iSize         int64
		_pFile         uintptr // *Tsqlite3_file = Ssqlite3_file
		_iPg           uint32
		_nDstPage      = esc + 16 // *int32
		_iOff          int64
		_iEnd          int64
		_pPg           = esc + 32 // **TDbPage = SPgHdr
		_1pSrcPg       = esc + 48 // **TPgHdr = SPgHdr
		_2iSrcPg       uint32
		_zData         uintptr // *Tu8 = uint8
	)
	defer crt.Free(esc)
	_pgszSrc = int32(0)
	_pgszDest = int32(0)
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 32))) + 24)))
	_139sqlite3BtreeEnter(tls, *(*uintptr)(unsafe.Pointer(_p + 40)))
	if (*(*uintptr)(unsafe.Pointer(_p))) == 0 {
		goto _1
	}

	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p))) + 24)))
_1:
	_rc = *(*int32)(unsafe.Pointer(_p + 48))
	if _140isFatalError(tls, _rc) != 0 {
		goto _2
	}

	_pSrcPager = _141sqlite3BtreePager(tls, *(*uintptr)(unsafe.Pointer(_p + 40)))
	_pDestPager = _141sqlite3BtreePager(tls, *(*uintptr)(unsafe.Pointer(_p + 8)))
	_nSrcPage = int32(-1)
	_bCloseTrans = int32(0)
	if (*(*uintptr)(unsafe.Pointer(_p))) == 0 || int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 40))) + 8))) + 36))) != int32(2) {
		goto _3
	}

	_rc = int32(5)
	goto _4

_3:
	_rc = int32(0)
_4:
	if _rc != int32(0) || int32(0) != _142sqlite3BtreeIsInReadTrans(tls, *(*uintptr)(unsafe.Pointer(_p + 40))) {
		goto _5
	}

	_rc = _143sqlite3BtreeBeginTrans(tls, *(*uintptr)(unsafe.Pointer(_p + 40)), int32(0))
	_bCloseTrans = int32(1)
_5:
	if (*(*int32)(unsafe.Pointer(_p + 20))) != int32(0) || _rc != int32(0) || _144setDestPgsz(tls, _p) != int32(7) {
		goto _6
	}

	_rc = int32(7)
_6:
	if int32(0) != _rc || (*(*int32)(unsafe.Pointer(_p + 20))) != int32(0) || int32(0) != set5(&_rc, _143sqlite3BtreeBeginTrans(tls, *(*uintptr)(unsafe.Pointer(_p + 8)), int32(2))) {
		goto _7
	}

	*(*int32)(unsafe.Pointer(_p + 20)) = int32(1)
	_145sqlite3BtreeGetMeta(tls, *(*uintptr)(unsafe.Pointer(_p + 8)), int32(1), _p+16)
_7:
	_pgszSrc = _146sqlite3BtreeGetPageSize(tls, *(*uintptr)(unsafe.Pointer(_p + 40)))
	_pgszDest = _146sqlite3BtreeGetPageSize(tls, *(*uintptr)(unsafe.Pointer(_p + 8)))
	_destMode = _147sqlite3PagerGetJournalMode(tls, _141sqlite3BtreePager(tls, *(*uintptr)(unsafe.Pointer(_p + 8))))
	if int32(0) != _rc || _destMode != int32(5) || _pgszSrc == _pgszDest {
		goto _8
	}

	_rc = int32(8)
_8:
	_nSrcPage = int32(_148sqlite3BtreeLastPage(tls, *(*uintptr)(unsafe.Pointer(_p + 40))))

	_ii = int32(0)
_9:
	if _nPage >= int32(0) && _ii >= _nPage || (*(*uint32)(unsafe.Pointer(_p + 24))) > uint32(_nSrcPage) || _rc != 0 {
		goto _11
	}

	_iSrcPg = *(*uint32)(unsafe.Pointer(_p + 24))
	if _iSrcPg == (uint32(_149sqlite3PendingByte)/(*(*uint32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 40))) + 8)) + 48))))+uint32(1) {
		goto _12
	}

	_rc = _150sqlite3PagerGet(tls, _pSrcPager, _iSrcPg, _pSrcPg, int32(0x2))
	if _rc != int32(0) {
		goto _13
	}

	_rc = _151backupOnePage(tls, _p, _iSrcPg, _152sqlite3PagerGetData(tls, *(*uintptr)(unsafe.Pointer(_pSrcPg))), int32(0))
	_153sqlite3PagerUnref(tls, *(*uintptr)(unsafe.Pointer(_pSrcPg)))
_13:
_12:
	(*(*uint32)(unsafe.Pointer(_p + 24)))++
	_ii++
	goto _9

_11:
	if _rc != int32(0) {
		goto _14
	}

	*(*uint32)(unsafe.Pointer(_p + 56)) = uint32(_nSrcPage)
	*(*uint32)(unsafe.Pointer(_p + 52)) = uint32(_nSrcPage+int32(1)) - (*(*uint32)(unsafe.Pointer(_p + 24)))
	if (*(*uint32)(unsafe.Pointer(_p + 24))) <= uint32(_nSrcPage) {
		goto _15
	}

	_rc = int32(101)
	goto _16

_15:
	if (*(*int32)(unsafe.Pointer(_p + 60))) != 0 {
		goto _17
	}

	_154attachBackupObject(tls, _p)
_17:
_16:
_14:
	if _rc != int32(101) {
		goto _18
	}

	if _nSrcPage != int32(0) {
		goto _19
	}

	_rc = _155sqlite3BtreeNewDb(tls, *(*uintptr)(unsafe.Pointer(_p + 8)))
	_nSrcPage = int32(1)
_19:
	if _rc != int32(0) && _rc != int32(101) {
		goto _20
	}

	_rc = _156sqlite3BtreeUpdateMeta(tls, *(*uintptr)(unsafe.Pointer(_p + 8)), int32(1), (*(*uint32)(unsafe.Pointer(_p + 16)))+uint32(1))
_20:
	if _rc != int32(0) {
		goto _21
	}

	if (*(*uintptr)(unsafe.Pointer(_p))) == 0 {
		goto _22
	}

	_157sqlite3ResetAllSchemasOfConnection(tls, *(*uintptr)(unsafe.Pointer(_p)))
_22:
	if _destMode != int32(5) {
		goto _23
	}

	_rc = _158sqlite3BtreeSetVersion(tls, *(*uintptr)(unsafe.Pointer(_p + 8)), int32(2))
_23:
_21:
	if _rc != int32(0) {
		goto _24
	}

	if _pgszSrc >= _pgszDest {
		goto _25
	}

	_ratio = _pgszDest / _pgszSrc
	_nDestTruncate = ((_nSrcPage + _ratio) - int32(1)) / _ratio
	if _nDestTruncate != int32((uint32(_149sqlite3PendingByte)/(*(*uint32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 8))) + 8)) + 48))))+uint32(1)) {
		goto _27
	}

	_nDestTruncate--
_27:
	goto _26

_25:
	_nDestTruncate = _nSrcPage * (_pgszSrc / _pgszDest)
_26:
	if _pgszSrc >= _pgszDest {
		goto _28
	}

	_iSize = int64(_pgszSrc) * int64(_nSrcPage)
	_pFile = _159sqlite3PagerFile(tls, _pDestPager)

	_160sqlite3PagerPagecount(tls, _pDestPager, _nDstPage)
	_iPg = uint32(_nDestTruncate)
_30:
	if _rc != int32(0) || _iPg > uint32(*(*int32)(unsafe.Pointer(_nDstPage))) {
		goto _32
	}

	if _iPg == (uint32(_149sqlite3PendingByte)/(*(*uint32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 8))) + 8)) + 48))))+uint32(1) {
		goto _33
	}

	_rc = _150sqlite3PagerGet(tls, _pDestPager, _iPg, _pPg, int32(0))
	if _rc != int32(0) {
		goto _34
	}

	_rc = _161sqlite3PagerWrite(tls, *(*uintptr)(unsafe.Pointer(_pPg)))
	_153sqlite3PagerUnref(tls, *(*uintptr)(unsafe.Pointer(_pPg)))
_34:
_33:
	_iPg++
	goto _30

_32:
	if _rc != int32(0) {
		goto _35
	}

	_rc = _162sqlite3PagerCommitPhaseOne(tls, _pDestPager, null, int32(1))
_35:
	_iEnd = func() int64 {
		if int64(_149sqlite3PendingByte+_pgszDest) < _iSize {
			return int64(_149sqlite3PendingByte + _pgszDest)
		}
		return _iSize
	}()
	_iOff = int64(_149sqlite3PendingByte + _pgszSrc)
_36:
	if _rc != int32(0) || _iOff >= _iEnd {
		goto _38
	}

	*(*uintptr)(unsafe.Pointer(_1pSrcPg)) = 0
	_2iSrcPg = uint32((_iOff / int64(_pgszSrc)) + int64(1))
	_rc = _150sqlite3PagerGet(tls, _pSrcPager, _2iSrcPg, _1pSrcPg, int32(0))
	if _rc != int32(0) {
		goto _39
	}

	_zData = _152sqlite3PagerGetData(tls, *(*uintptr)(unsafe.Pointer(_1pSrcPg)))
	_rc = _163sqlite3OsWrite(tls, _pFile, _zData, _pgszSrc, _iOff)
_39:
	_153sqlite3PagerUnref(tls, *(*uintptr)(unsafe.Pointer(_1pSrcPg)))
	_iOff = int64(_iOff + int64(_pgszSrc))
	goto _36

_38:
	if _rc != int32(0) {
		goto _40
	}

	_rc = _164backupTruncateFile(tls, _pFile, _iSize)
_40:
	if _rc != int32(0) {
		goto _41
	}

	_rc = _165sqlite3PagerSync(tls, _pDestPager, null)
_41:
	goto _29

_28:
	_166sqlite3PagerTruncateImage(tls, _pDestPager, uint32(_nDestTruncate))
	_rc = _162sqlite3PagerCommitPhaseOne(tls, _pDestPager, null, int32(0))
_29:
	if int32(0) != _rc || int32(0) != set5(&_rc, _167sqlite3BtreeCommitPhaseTwo(tls, *(*uintptr)(unsafe.Pointer(_p + 8)), int32(0))) {
		goto _42
	}

	_rc = int32(101)
_42:
_24:
_18:
	if _bCloseTrans == 0 {
		goto _43
	}

	_168sqlite3BtreeCommitPhaseOne(tls, *(*uintptr)(unsafe.Pointer(_p + 40)), null)
	_167sqlite3BtreeCommitPhaseTwo(tls, *(*uintptr)(unsafe.Pointer(_p + 40)), int32(0))

_43:
	if _rc != int32(3082) {
		goto _44
	}

	_rc = int32(7)
_44:
	*(*int32)(unsafe.Pointer(_p + 48)) = _rc
_2:
	if (*(*uintptr)(unsafe.Pointer(_p))) == 0 {
		goto _45
	}

	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p))) + 24)))
_45:
	_169sqlite3BtreeLeave(tls, *(*uintptr)(unsafe.Pointer(_p + 40)))
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 32))) + 24)))
	return _rc
}

// Xsqlite3_backup_finish is defined at sqlite3.c:70217:16
func Xsqlite3_backup_finish(tls crt.TLS, _p uintptr /* *Tsqlite3_backup = Ssqlite3_backup */) (r int32) {
	var (
		_pp     uintptr // **Tsqlite3_backup = Ssqlite3_backup
		_pSrcDb uintptr // *Tsqlite3 = Ssqlite3
		_rc     int32
	)
	if _p != 0 {
		goto _1
	}

	return int32(0)

_1:
	_pSrcDb = *(*uintptr)(unsafe.Pointer(_p + 32))
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_pSrcDb + 24)))
	_139sqlite3BtreeEnter(tls, *(*uintptr)(unsafe.Pointer(_p + 40)))
	if (*(*uintptr)(unsafe.Pointer(_p))) == 0 {
		goto _2
	}

	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p))) + 24)))
_2:
	if (*(*uintptr)(unsafe.Pointer(_p))) == 0 {
		goto _3
	}

	(*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 40))) + 24)))--
_3:
	if (*(*int32)(unsafe.Pointer(_p + 60))) == 0 {
		goto _4
	}

	_pp = _170sqlite3PagerBackupPtr(tls, _141sqlite3BtreePager(tls, *(*uintptr)(unsafe.Pointer(_p + 40))))
_5:
	if (*(*uintptr)(unsafe.Pointer(_pp))) == _p {
		goto _6
	}

	_pp = *(*uintptr)(unsafe.Pointer(_pp)) + 64
	goto _5

_6:
	*(*uintptr)(unsafe.Pointer(_pp)) = *(*uintptr)(unsafe.Pointer(_p + 64))
_4:
	_171sqlite3BtreeRollback(tls, *(*uintptr)(unsafe.Pointer(_p + 8)), int32(0), int32(0))
	_rc = func() int32 {
		if (*(*int32)(unsafe.Pointer(_p + 48))) == int32(101) {
			return int32(0)
		}
		return *(*int32)(unsafe.Pointer(_p + 48))
	}()
	if (*(*uintptr)(unsafe.Pointer(_p))) == 0 {
		goto _7
	}

	_136sqlite3Error(tls, *(*uintptr)(unsafe.Pointer(_p)), _rc)
	_172sqlite3LeaveMutexAndCloseZombie(tls, *(*uintptr)(unsafe.Pointer(_p)))
_7:
	_169sqlite3BtreeLeave(tls, *(*uintptr)(unsafe.Pointer(_p + 40)))
	if (*(*uintptr)(unsafe.Pointer(_p))) == 0 {
		goto _8
	}

	Xsqlite3_free(tls, _p)
_8:
	_172sqlite3LeaveMutexAndCloseZombie(tls, _pSrcDb)
	return _rc
}

// _47test_breakpoint is defined at shell.c:4528:13
func _47test_breakpoint(tls crt.TLS) {
	_173nCall++
}

// _48setOrClearFlag is defined at shell.c:4462:13
func _48setOrClearFlag(tls crt.TLS, _p uintptr /* *TShellState = SShellState */, _mFlag uint32, _zArg uintptr /* *int8 */) {
	if _45booleanValue(tls, _zArg) == 0 {
		goto _1
	}

	{
		p := &(*(*uint32)(unsafe.Pointer(_p + 76)))
		*p = uint32(uint32(*p) | _mFlag)
	}
	goto _2

_1:
	{
		p := &(*(*uint32)(unsafe.Pointer(_p + 76)))
		*p = uint32(uint32(*p) & (^_mFlag))
	}
_2:
}

// _49output_reset is defined at shell.c:4906:13
func _49output_reset(tls crt.TLS, _p uintptr /* *TShellState = SShellState */) {
	if int32(*(*int8)(unsafe.Pointer(_p + 980))) != int32('|') {
		goto _1
	}

	crt.Xpclose(tls, *(*uintptr)(unsafe.Pointer(_p + 32)))
	goto _2

_1:
	_63output_file_close(tls, *(*uintptr)(unsafe.Pointer(_p + 32)))
_2:
	*(*int8)(unsafe.Pointer(_p + 980)) = int8(0)
	*(*uintptr)(unsafe.Pointer(_p + 32)) = Xstdout
}

// _50readFile is defined at shell.c:4160:13
func _50readFile(tls crt.TLS, _zName uintptr /* *int8 */, _pnByte uintptr /* *int32 */) (r uintptr /* *int8 */) {
	var (
		_in    uintptr // *TFILE = S_IO_FILE
		_nIn   int64
		_nRead uint64
		_pBuf  uintptr // *int8
	)
	_in = crt.Xfopen64(tls, _zName, ts+1058 /* "rb" */)
	if _in != 0 {
		goto _1
	}

	return null

_1:
	crt.Xfseek(tls, _in, int64(0), int32(2))
	_nIn = crt.Xftell(tls, _in)
	crt.Xrewind(tls, _in)
	_pBuf = Xsqlite3_malloc64(tls, uint64(_nIn+int64(1)))
	if _pBuf != 0 {
		goto _2
	}

	return null

_2:
	_nRead = crt.Xfread(tls, _pBuf, uint64(_nIn), uint64(1), _in)
	crt.Xfclose(tls, _in)
	if _nRead == uint64(1) {
		goto _3
	}

	Xsqlite3_free(tls, _pBuf)
	return null

_3:
	*(*int8)(unsafe.Pointer(_pBuf + uintptr(_nIn))) = int8(0)
	if _pnByte == 0 {
		goto _4
	}

	*(*int32)(unsafe.Pointer(_pnByte)) = int32(_nIn)
_4:
	return _pBuf
}

// _51testcase_glob is defined at shell.c:5070:12
func _51testcase_glob(tls crt.TLS, _zGlob uintptr /* *int8 */, _z uintptr /* *int8 */) (r int32) {
	var (
		_c       int32
		_c2      int32
		_invert  int32
		_seen    int32
		_prior_c int32
	)
_1:
	if set5(&_c, int32(*(*int8)(unsafe.Pointer(postinc19(&_zGlob))))) == int32(0) {
		goto _2
	}

	if int32(*(*uint16)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(crt.X__ctype_b_loc(tls))) + 2*uintptr(int32(uint8(_c))))))&int32(8192) == 0 {
		goto _3
	}

	if int32(*(*uint16)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(crt.X__ctype_b_loc(tls))) + 2*uintptr(int32(uint8(*(*int8)(unsafe.Pointer(_z))))))))&int32(8192) != 0 {
		goto _5
	}

	return int32(0)

_5:
_6:
	if int32(*(*uint16)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(crt.X__ctype_b_loc(tls))) + 2*uintptr(int32(uint8(*(*int8)(unsafe.Pointer(_zGlob))))))))&int32(8192) == 0 {
		goto _7
	}

	_zGlob++
	goto _6

_7:
_8:
	if int32(*(*uint16)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(crt.X__ctype_b_loc(tls))) + 2*uintptr(int32(uint8(*(*int8)(unsafe.Pointer(_z))))))))&int32(8192) == 0 {
		goto _9
	}

	_z++
	goto _8

_9:
	goto _4

_3:
	if _c != int32('*') {
		goto _10
	}

_12:
	if set5(&_c, int32(*(*int8)(unsafe.Pointer(postinc19(&_zGlob))))) != int32('*') && _c != int32('?') {
		goto _13
	}

	if _c != int32('?') || int32(*(*int8)(unsafe.Pointer(postinc19(&_z)))) != int32(0) {
		goto _14
	}

	return int32(0)

_14:
	goto _12

_13:
	if _c != int32(0) {
		goto _15
	}

	return int32(1)

	goto _16

_15:
	if _c != int32('[') {
		goto _17
	}

_18:
	if (*(*int8)(unsafe.Pointer(_z))) == 0 || _51testcase_glob(tls, _zGlob-uintptr(1), _z) != int32(0) {
		goto _19
	}

	_z++
	goto _18

_19:
	return bool2int(int32(*(*int8)(unsafe.Pointer(_z))) != int32(0))

_17:
_16:
_20:
	if set5(&_c2, int32(*(*int8)(unsafe.Pointer(postinc19(&_z))))) == int32(0) {
		goto _21
	}

_22:
	if _c2 == _c {
		goto _23
	}

	_c2 = int32(*(*int8)(unsafe.Pointer(postinc19(&_z))))
	if _c2 != int32(0) {
		goto _24
	}

	return int32(0)

_24:
	goto _22

_23:
	if _51testcase_glob(tls, _zGlob, _z) == 0 {
		goto _25
	}

	return int32(1)

_25:
	goto _20

_21:
	return int32(0)

	goto _11

_10:
	if _c != int32('?') {
		goto _26
	}

	if int32(*(*int8)(unsafe.Pointer(postinc19(&_z)))) != int32(0) {
		goto _28
	}

	return int32(0)

_28:
	goto _27

_26:
	if _c != int32('[') {
		goto _29
	}

	_prior_c = int32(0)
	_seen = int32(0)
	_invert = int32(0)
	_c = int32(*(*int8)(unsafe.Pointer(postinc19(&_z))))
	if _c != int32(0) {
		goto _31
	}

	return int32(0)

_31:
	_c2 = int32(*(*int8)(unsafe.Pointer(postinc19(&_zGlob))))
	if _c2 != int32('^') {
		goto _32
	}

	_invert = int32(1)
	_c2 = int32(*(*int8)(unsafe.Pointer(postinc19(&_zGlob))))
_32:
	if _c2 != int32(']') {
		goto _33
	}

	if _c != int32(']') {
		goto _34
	}

	_seen = int32(1)
_34:
	_c2 = int32(*(*int8)(unsafe.Pointer(postinc19(&_zGlob))))
_33:
_35:
	if _c2 == 0 || _c2 == int32(']') {
		goto _36
	}

	if _c2 != int32('-') || int32(*(*int8)(unsafe.Pointer(_zGlob))) == int32(']') || int32(*(*int8)(unsafe.Pointer(_zGlob))) == int32(0) || _prior_c <= int32(0) {
		goto _37
	}

	_c2 = int32(*(*int8)(unsafe.Pointer(postinc19(&_zGlob))))
	if _c < _prior_c || _c > _c2 {
		goto _39
	}

	_seen = int32(1)
_39:
	_prior_c = int32(0)
	goto _38

_37:
	if _c != _c2 {
		goto _40
	}

	_seen = int32(1)
_40:
	_prior_c = _c2
_38:
	_c2 = int32(*(*int8)(unsafe.Pointer(postinc19(&_zGlob))))
	goto _35

_36:
	if _c2 != int32(0) && (_seen^_invert) != int32(0) {
		goto _41
	}

	return int32(0)

_41:
	goto _30

_29:
	if _c != int32('#') {
		goto _42
	}

	if int32(*(*int8)(unsafe.Pointer(_z))) != int32('-') && int32(*(*int8)(unsafe.Pointer(_z))) != int32('+') || int32(*(*uint16)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(crt.X__ctype_b_loc(tls))) + 2*uintptr(int32(uint8(*(*int8)(unsafe.Pointer(_z + 1))))))))&int32(2048) == 0 {
		goto _44
	}

	_z++
_44:
	if int32(*(*uint16)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(crt.X__ctype_b_loc(tls))) + 2*uintptr(int32(uint8(*(*int8)(unsafe.Pointer(_z))))))))&int32(2048) != 0 {
		goto _45
	}

	return int32(0)

_45:
	_z++
_46:
	if int32(*(*uint16)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(crt.X__ctype_b_loc(tls))) + 2*uintptr(int32(uint8(*(*int8)(unsafe.Pointer(_z))))))))&int32(2048) == 0 {
		goto _47
	}

	_z++
	goto _46

_47:
	goto _43

_42:
	if _c == int32(*(*int8)(unsafe.Pointer(postinc19(&_z)))) {
		goto _48
	}

	return int32(0)

_48:
_43:
_30:
_27:
_11:
_4:
	goto _1

_2:
_49:
	if int32(*(*uint16)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(crt.X__ctype_b_loc(tls))) + 2*uintptr(int32(uint8(*(*int8)(unsafe.Pointer(_z))))))))&int32(8192) == 0 {
		goto _50
	}

	_z++
	goto _49

_50:
	return bool2int(int32(*(*int8)(unsafe.Pointer(_z))) == int32(0))
}

// _52tryToClone is defined at shell.c:4881:13
func _52tryToClone(tls crt.TLS, _p uintptr /* *TShellState = SShellState */, _zNewDb uintptr /* *int8 */) {
	esc := crt.MustMalloc(8)
	var (
		_rc    int32
		_newDb = esc // **Tsqlite3 = Ssqlite3
	)
	defer crt.Free(esc)
	*(*uintptr)(unsafe.Pointer(_newDb)) = 0
	if crt.Xaccess(tls, _zNewDb, int32(0)) != int32(0) {
		goto _1
	}

	crt.Xfprintf(tls, Xstderr, ts+9435 /* "File \"%s\" already exists.\n" */, _zNewDb)
	return

_1:
	_rc = Xsqlite3_open(tls, _zNewDb, _newDb)
	if _rc == 0 {
		goto _2
	}

	crt.Xfprintf(tls, Xstderr, ts+9462 /* "Cannot create output database: %..." */, Xsqlite3_errmsg(tls, *(*uintptr)(unsafe.Pointer(_newDb))))
	goto _3

_2:
	Xsqlite3_exec(tls, *(*uintptr)(unsafe.Pointer(_p)), ts+9497 /* "PRAGMA writable_schema=ON;" */, null, null, null)
	Xsqlite3_exec(tls, *(*uintptr)(unsafe.Pointer(_newDb)), ts+9524 /* "BEGIN EXCLUSIVE;" */, null, null, null)
	_174tryToCloneSchema(tls, _p, *(*uintptr)(unsafe.Pointer(_newDb)), ts+9541 /* "type='table'" */, fp20(_175tryToCloneData))
	_174tryToCloneSchema(tls, _p, *(*uintptr)(unsafe.Pointer(_newDb)), ts+9554 /* "type!='table'" */, null)
	Xsqlite3_exec(tls, *(*uintptr)(unsafe.Pointer(_newDb)), ts+9568 /* "COMMIT;" */, null, null, null)
	Xsqlite3_exec(tls, *(*uintptr)(unsafe.Pointer(_p)), ts+2591 /* "PRAGMA writable_schema=OFF;" */, null, null, null)
_3:
	Xsqlite3_close(tls, *(*uintptr)(unsafe.Pointer(_newDb)))
}

// Xsqlite3_exec is defined at sqlite3.c:112148:16
func Xsqlite3_exec(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _zSql uintptr /* *int8 */, _xCallback uintptr /* Tsqlite3_callback = *func(crt.TL..., int32, uintptr, uintptr) int32 */, _pArg uintptr /* *void */, _pzErrMsg uintptr /* **int8 */) (r int32) {
	esc := crt.MustMalloc(24)
	var (
		_rc             int32
		_zLeftover      = esc      // **int8
		_pStmt          = esc + 16 // **Tsqlite3_stmt = Ssqlite3_stmt
		_azCols         uintptr    // **int8
		_callbackIsInit int32
		_nCol           int32
		_azVals         uintptr // **int8
		_i              int32
	)
	defer crt.Free(esc)
	_rc = int32(0)
	*(*uintptr)(unsafe.Pointer(_pStmt)) = 0
	_azCols = 0
	if _176sqlite3SafetyCheckOk(tls, _db) != 0 {
		goto _1
	}

	return _29sqlite3MisuseError(tls, int32(112161))

_1:
	if _zSql != 0 {
		goto _2
	}

	_zSql = ts + 4553 /* "" */
_2:
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	_136sqlite3Error(tls, _db, int32(0))
_3:
	if _rc != int32(0) || (*(*int8)(unsafe.Pointer(_zSql))) == 0 {
		goto _4
	}

	_azVals = 0
	*(*uintptr)(unsafe.Pointer(_pStmt)) = null
	_rc = Xsqlite3_prepare_v2(tls, _db, _zSql, int32(-1), _pStmt, _zLeftover)

	if _rc == int32(0) {
		goto _5
	}

	goto _3

_5:
	if (*(*uintptr)(unsafe.Pointer(_pStmt))) != 0 {
		goto _6
	}

	_zSql = *(*uintptr)(unsafe.Pointer(_zLeftover))
	goto _3

_6:
	_callbackIsInit = int32(0)
	_nCol = Xsqlite3_column_count(tls, *(*uintptr)(unsafe.Pointer(_pStmt)))
_7:
	_rc = Xsqlite3_step(tls, *(*uintptr)(unsafe.Pointer(_pStmt)))
	if _xCallback == 0 || int32(100) != _rc && (int32(101) != _rc || _callbackIsInit != 0 || ((*(*uint32)(unsafe.Pointer(_db + 48)))&uint32(0x100)) == 0) {
		goto _9
	}

	if _callbackIsInit != 0 {
		goto _10
	}

	_azCols = _177sqlite3DbMallocRaw(tls, _db, uint64(uint64((int32(2)*_nCol)+int32(1))*uint64(8)))
	if _azCols != 0 {
		goto _11
	}

	goto _exec_out

_11:
	_i = int32(0)
_12:
	if _i >= _nCol {
		goto _14
	}

	*(*uintptr)(unsafe.Pointer(_azCols + 8*uintptr(_i))) = Xsqlite3_column_name(tls, *(*uintptr)(unsafe.Pointer(_pStmt)), _i)

	_i++
	goto _12

_14:
	_callbackIsInit = int32(1)
_10:
	if _rc != int32(100) {
		goto _15
	}

	_azVals = _azCols + 8*uintptr(_nCol)
	_i = int32(0)
_16:
	if _i >= _nCol {
		goto _18
	}

	*(*uintptr)(unsafe.Pointer(_azVals + 8*uintptr(_i))) = Xsqlite3_column_text(tls, *(*uintptr)(unsafe.Pointer(_pStmt)), _i)
	if (*(*uintptr)(unsafe.Pointer(_azVals + 8*uintptr(_i)))) != 0 || Xsqlite3_column_type(tls, *(*uintptr)(unsafe.Pointer(_pStmt)), _i) == int32(5) {
		goto _19
	}

	_178sqlite3OomFault(tls, _db)
	goto _exec_out

_19:
	_i++
	goto _16

_18:
	*(*uintptr)(unsafe.Pointer(_azVals + 8*uintptr(_i))) = null
_15:
	if fn21(_xCallback)(tls, _pArg, _nCol, _azVals, _azCols) == 0 {
		goto _20
	}

	_rc = int32(4)
	_179sqlite3VdbeFinalize(tls, *(*uintptr)(unsafe.Pointer(_pStmt)))
	*(*uintptr)(unsafe.Pointer(_pStmt)) = null
	_136sqlite3Error(tls, _db, int32(4))
	goto _exec_out

_20:
_9:
	if _rc == int32(100) {
		goto _21
	}

	_rc = _179sqlite3VdbeFinalize(tls, *(*uintptr)(unsafe.Pointer(_pStmt)))
	*(*uintptr)(unsafe.Pointer(_pStmt)) = null
	_zSql = *(*uintptr)(unsafe.Pointer(_zLeftover))
_22:
	if int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(uint8(*(*int8)(unsafe.Pointer(_zSql)))))))&int32(0x1) == 0 {
		goto _23
	}

	_zSql++
	goto _22

_23:
	goto _8

_21:
	goto _7

_8:
	_181sqlite3DbFree(tls, _db, _azCols)
	_azCols = null
	goto _3

_4:
	goto _exec_out
_exec_out:
	if (*(*uintptr)(unsafe.Pointer(_pStmt))) == 0 {
		goto _24
	}

	_179sqlite3VdbeFinalize(tls, *(*uintptr)(unsafe.Pointer(_pStmt)))
_24:
	_181sqlite3DbFree(tls, _db, _azCols)
	_rc = _182sqlite3ApiExit(tls, _db, _rc)
	if _rc == int32(0) || _pzErrMsg == 0 {
		goto _25
	}

	*(*uintptr)(unsafe.Pointer(_pzErrMsg)) = _183sqlite3DbStrDup(tls, null, Xsqlite3_errmsg(tls, _db))
	if (*(*uintptr)(unsafe.Pointer(_pzErrMsg))) != 0 {
		goto _27
	}

	_rc = int32(7)
	_136sqlite3Error(tls, _db, int32(7))
_27:
	goto _26

_25:
	if _pzErrMsg == 0 {
		goto _28
	}

	*(*uintptr)(unsafe.Pointer(_pzErrMsg)) = null
_28:
_26:
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	return _rc
}

// _53callback is defined at shell.c:3000:12
func _53callback(tls crt.TLS, _pArg uintptr /* *void */, _nArg int32, _azArg uintptr /* **int8 */, _azCol uintptr /* **int8 */) (r int32) {
	return _15shell_callback(tls, _pArg, _nArg, _azArg, _azCol, null)
}

// _54shell_dbinfo_command is defined at shell.c:4947:12
func _54shell_dbinfo_command(tls crt.TLS, _p uintptr /* *TShellState = SShellState */, _nArg int32, _azArg uintptr /* **int8 */) (r int32) {
	esc := crt.MustMalloc(116)
	var (
		_i          int32
		_zSchemaTab uintptr    // *int8
		_zDb        uintptr    // *int8
		_pStmt      = esc      // **Tsqlite3_stmt = Ssqlite3_stmt
		_aHdr       = esc + 16 // *[100]uint8
		_ofst       int32
		_val        uint32
		_zSql       uintptr // *int8
		_1val       int32
	)
	defer crt.Free(esc)
	_zDb = func() uintptr {
		if _nArg >= int32(2) {
			return *(*uintptr)(unsafe.Pointer(_azArg + 8))
		}
		return ts + 1432 /* "main" */
	}()
	*(*uintptr)(unsafe.Pointer(_pStmt)) = 0
	_9open_db(tls, _p, int32(0))
	if (*(*uintptr)(unsafe.Pointer(_p))) != 0 {
		goto _1
	}

	return int32(1)

_1:
	Xsqlite3_prepare_v2(tls, *(*uintptr)(unsafe.Pointer(_p)), ts+9576 /* "SELECT data FROM sqlite_dbpage(?..." */, int32(-1), _pStmt, null)
	Xsqlite3_bind_text(tls, *(*uintptr)(unsafe.Pointer(_pStmt)), int32(1), _zDb, int32(-1), null)
	if Xsqlite3_step(tls, *(*uintptr)(unsafe.Pointer(_pStmt))) != int32(100) || Xsqlite3_column_bytes(tls, *(*uintptr)(unsafe.Pointer(_pStmt)), int32(0)) <= int32(100) {
		goto _2
	}

	crt.Xmemcpy(tls, _aHdr, Xsqlite3_column_blob(tls, *(*uintptr)(unsafe.Pointer(_pStmt)), int32(0)), uint64(100))
	Xsqlite3_finalize(tls, *(*uintptr)(unsafe.Pointer(_pStmt)))
	goto _3

_2:
	crt.Xfprintf(tls, Xstderr, ts+9624 /* "unable to read database header\n" */)
	Xsqlite3_finalize(tls, *(*uintptr)(unsafe.Pointer(_pStmt)))
	return int32(1)

_3:
	_i = int32(_186get2byteInt(tls, _aHdr+uintptr(16)))
	if _i != int32(1) {
		goto _4
	}

	_i = int32(65536)
_4:
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+9656 /* "%-20s %d\n" */, ts+9666 /* "database page size:" */, _i)
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+9656 /* "%-20s %d\n" */, ts+9686 /* "write format:" */, int32(*(*uint8)(unsafe.Pointer(_aHdr + 18))))
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+9656 /* "%-20s %d\n" */, ts+9700 /* "read format:" */, int32(*(*uint8)(unsafe.Pointer(_aHdr + 19))))
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+9656 /* "%-20s %d\n" */, ts+9713 /* "reserved bytes:" */, int32(*(*uint8)(unsafe.Pointer(_aHdr + 20))))
	_i = int32(0)
_5:
	if _i >= int32(12) {
		goto _7
	}

	_ofst = *(*int32)(unsafe.Pointer((_184aField + 16*uintptr(_i)) + 8))
	_val = _187get4byteInt(tls, _aHdr+uintptr(_ofst))
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+9729 /* "%-20s %u" */, *(*uintptr)(unsafe.Pointer(_184aField + 16*uintptr(_i))), _val)
	switch _ofst {
	case int32(56):
		goto _9
	}
	goto _8

_9:
	if _val != uint32(1) {
		goto _10
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+9738 /* " (utf8)" */)
_10:
	if _val != uint32(2) {
		goto _11
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+9746 /* " (utf16le)" */)
_11:
	if _val != uint32(3) {
		goto _12
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+9757 /* " (utf16be)" */)
_12:
_8:
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+867 /* "\n" */)
	_i++
	goto _5

_7:
	if _zDb != 0 {
		goto _13
	}

	_zSchemaTab = Xsqlite3_mprintf(tls, ts+9768 /* "main.sqlite_master" */)
	goto _14

_13:
	if crt.Xstrcmp(tls, _zDb, ts+9787 /* "temp" */) != int32(0) {
		goto _15
	}

	_zSchemaTab = Xsqlite3_mprintf(tls, ts+429 /* "%s" */, ts+5250 /* "sqlite_temp_master" */)
	goto _16

_15:
	_zSchemaTab = Xsqlite3_mprintf(tls, ts+9792 /* "\"%w\".sqlite_master" */, _zDb)
_16:
_14:
	_i = int32(0)
_17:
	if _i >= int32(5) {
		goto _19
	}

	_zSql = Xsqlite3_mprintf(tls, *(*uintptr)(unsafe.Pointer((_185aQuery + 16*uintptr(_i)) + 8)), _zSchemaTab)
	_1val = _188db_int(tls, _p, _zSql)
	Xsqlite3_free(tls, _zSql)
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+9656 /* "%-20s %d\n" */, *(*uintptr)(unsafe.Pointer(_185aQuery + 16*uintptr(_i))), _1val)
	_i++
	goto _17

_19:
	Xsqlite3_free(tls, _zSchemaTab)
	return int32(0)
}

// _55run_schema_dump_query is defined at shell.c:3992:12
func _55run_schema_dump_query(tls crt.TLS, _p uintptr /* *TShellState = SShellState */, _zQuery uintptr /* *int8 */) (r int32) {
	esc := crt.MustMalloc(8)
	var (
		_rc   int32
		_zErr = esc   // **int8
		_zQ2  uintptr // *int8
		_len  int32
	)
	defer crt.Free(esc)
	*(*uintptr)(unsafe.Pointer(_zErr)) = 0
	_rc = Xsqlite3_exec(tls, *(*uintptr)(unsafe.Pointer(_p)), _zQuery, fp9(_189dump_callback), _p, _zErr)
	if _rc != int32(11) {
		goto _1
	}

	_len = _18strlen30(tls, _zQuery)
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+9811 /* "/****** CORRUPTION ERROR *******..." */)
	if (*(*uintptr)(unsafe.Pointer(_zErr))) == 0 {
		goto _2
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+9846 /* "/****** %s ******\\x2f\n" */, *(*uintptr)(unsafe.Pointer(_zErr)))
	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_zErr)))
	*(*uintptr)(unsafe.Pointer(_zErr)) = null
_2:
	_zQ2 = crt.Xmalloc(tls, uint64(_len+int32(100)))
	if _zQ2 != 0 {
		goto _3
	}

	return _rc

_3:
	Xsqlite3_snprintf(tls, _len+int32(100), _zQ2, ts+9866 /* "%s ORDER BY rowid DESC" */, _zQuery)
	_rc = Xsqlite3_exec(tls, *(*uintptr)(unsafe.Pointer(_p)), _zQ2, fp9(_189dump_callback), _p, _zErr)
	if _rc == 0 {
		goto _4
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+9889 /* "/****** ERROR: %s ******\\x2f\n" */, *(*uintptr)(unsafe.Pointer(_zErr)))
	goto _5

_4:
	_rc = int32(11)
_5:
	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_zErr)))
	crt.Xfree(tls, _zQ2)
_1:
	return _rc
}

// _56run_table_dump_query is defined at shell.c:3115:12
func _56run_table_dump_query(tls crt.TLS, _p uintptr /* *TShellState = SShellState */, _zSelect uintptr /* *int8 */, _zFirstRow uintptr /* *int8 */) (r int32) {
	esc := crt.MustMalloc(8)
	var (
		_pSelect = esc // **Tsqlite3_stmt = Ssqlite3_stmt
		_rc      int32
		_nResult int32
		_i       int32
		_z       uintptr // *int8
	)
	defer crt.Free(esc)
	_rc = Xsqlite3_prepare_v2(tls, *(*uintptr)(unsafe.Pointer(_p)), _zSelect, int32(-1), _pSelect, null)
	if _rc == int32(0) && (*(*uintptr)(unsafe.Pointer(_pSelect))) != 0 {
		goto _1
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+9916 /* "/**** ERROR: (%d) %s *****\\x2f\n" */, _rc, Xsqlite3_errmsg(tls, *(*uintptr)(unsafe.Pointer(_p))))
	if (_rc & int32(0xff)) == int32(11) {
		goto _2
	}

	(*(*int32)(unsafe.Pointer(_p + 48)))++
_2:
	return _rc

_1:
	_rc = Xsqlite3_step(tls, *(*uintptr)(unsafe.Pointer(_pSelect)))
	_nResult = Xsqlite3_column_count(tls, *(*uintptr)(unsafe.Pointer(_pSelect)))
_3:
	if _rc != int32(100) {
		goto _4
	}

	if _zFirstRow == 0 {
		goto _5
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+429 /* "%s" */, _zFirstRow)
	_zFirstRow = null
_5:
	_z = Xsqlite3_column_text(tls, *(*uintptr)(unsafe.Pointer(_pSelect)), int32(0))
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+429 /* "%s" */, _z)
	_i = int32(1)
_6:
	if _i >= _nResult {
		goto _8
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+9945 /* ",%s" */, Xsqlite3_column_text(tls, *(*uintptr)(unsafe.Pointer(_pSelect)), _i))
	_i++
	goto _6

_8:
	if _z != 0 {
		goto _9
	}

	_z = ts + 4553 /* "" */
_9:
_10:
	if (*(*int8)(unsafe.Pointer(_z))) == 0 || int32(*(*int8)(unsafe.Pointer(_z))) == int32('-') && int32(*(*int8)(unsafe.Pointer(_z + 1))) == int32('-') {
		goto _11
	}

	_z++
	goto _10

_11:
	if (*(*int8)(unsafe.Pointer(_z))) == 0 {
		goto _12
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+9949 /* "\n;\n" */)
	goto _13

_12:
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+8729 /* ";\n" */)
_13:
	_rc = Xsqlite3_step(tls, *(*uintptr)(unsafe.Pointer(_pSelect)))
	goto _3

_4:
	_rc = Xsqlite3_finalize(tls, *(*uintptr)(unsafe.Pointer(_pSelect)))
	if _rc == int32(0) {
		goto _14
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+9916 /* "/**** ERROR: (%d) %s *****\\x2f\n" */, _rc, Xsqlite3_errmsg(tls, *(*uintptr)(unsafe.Pointer(_p))))
	if (_rc & int32(0xff)) == int32(11) {
		goto _15
	}

	(*(*int32)(unsafe.Pointer(_p + 48)))++
_15:
_14:
	return _rc
}

// _57optionMatch is defined at shell.c:5149:12
func _57optionMatch(tls crt.TLS, _zStr uintptr /* *int8 */, _zOpt uintptr /* *int8 */) (r int32) {
	if int32(*(*int8)(unsafe.Pointer(_zStr))) == int32('-') {
		goto _1
	}

	return int32(0)

_1:
	_zStr++
	if int32(*(*int8)(unsafe.Pointer(_zStr))) != int32('-') {
		goto _2
	}

	_zStr++
_2:
	return bool2int(crt.Xstrcmp(tls, _zStr, _zOpt) == int32(0))
}

// Xsqlite3_prepare_v2 is defined at sqlite3.c:117540:16
func Xsqlite3_prepare_v2(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _zSql uintptr /* *int8 */, _nBytes int32, _ppStmt uintptr /* **Tsqlite3_stmt = Ssqlite3_stmt */, _pzTail uintptr /* **int8 */) (r int32) {
	var _rc int32

	_rc = _190sqlite3LockAndPrepare(tls, _db, _zSql, _nBytes, uint32(0x80), null, _ppStmt, _pzTail)

	return _rc
}

// Xsqlite3_step is defined at sqlite3.c:77586:16
func Xsqlite3_step(tls crt.TLS, _pStmt uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */) (r int32) {
	var (
		_rc      int32
		_v       uintptr // *TVdbe = SVdbe
		_cnt     int32
		_db      uintptr // *Tsqlite3 = Ssqlite3
		_savedPc int32
		_zErr    uintptr // *int8
	)
	_rc = int32(0)
	_v = _pStmt
	_cnt = int32(0)
	if _191vdbeSafetyNotNull(tls, _v) == 0 {
		goto _1
	}

	return _29sqlite3MisuseError(tls, int32(77593))

_1:
	_db = *(*uintptr)(unsafe.Pointer(_v))
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	set22b(&(*(*uint16)(unsafe.Pointer(_v + 194))), uint32(0))
_2:
	if set5(&_rc, _192sqlite3Step(tls, _v)) != int32(17) || postinc7(&_cnt) >= int32(50) {
		goto _3
	}

	_savedPc = *(*int32)(unsafe.Pointer(_v + 52))
	_rc = _193sqlite3Reprepare(tls, _v)
	if _rc == int32(0) {
		goto _4
	}

	_zErr = Xsqlite3_value_text(tls, *(*uintptr)(unsafe.Pointer(_db + 336)))
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_v + 144)))
	if (*(*uint8)(unsafe.Pointer(_db + 97))) != 0 {
		goto _5
	}

	*(*uintptr)(unsafe.Pointer(_v + 144)) = _183sqlite3DbStrDup(tls, _db, _zErr)
	*(*int32)(unsafe.Pointer(_v + 56)) = set5(&_rc, _182sqlite3ApiExit(tls, _db, _rc))
	goto _6

_5:
	*(*uintptr)(unsafe.Pointer(_v + 144)) = null
	*(*int32)(unsafe.Pointer(_v + 56)) = set5(&_rc, int32(7))
_6:
	goto _3

_4:
	Xsqlite3_reset(tls, _pStmt)
	if _savedPc < int32(0) {
		goto _7
	}

	set22b(&(*(*uint16)(unsafe.Pointer(_v + 194))), uint32(1))
_7:
	goto _2

_3:
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	return _rc
}

// Xsqlite3_finalize is defined at sqlite3.c:77004:16
func Xsqlite3_finalize(tls crt.TLS, _pStmt uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */) (r int32) {
	var (
		_rc int32
		_v  uintptr // *TVdbe = SVdbe
		_db uintptr // *Tsqlite3 = Ssqlite3
	)
	if _pStmt != 0 {
		goto _1
	}

	_rc = int32(0)
	goto _2

_1:
	_v = _pStmt
	_db = *(*uintptr)(unsafe.Pointer(_v))
	if _194vdbeSafety(tls, _v) == 0 {
		goto _3
	}

	return _29sqlite3MisuseError(tls, int32(77013))

_3:
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	if (*(*int64)(unsafe.Pointer(_v + 176))) <= int64(0) {
		goto _4
	}

	_195invokeProfileCallback(tls, _db, _v)
_4:
	_rc = _179sqlite3VdbeFinalize(tls, _v)
	_rc = _182sqlite3ApiExit(tls, _db, _rc)
	_172sqlite3LeaveMutexAndCloseZombie(tls, _db)
_2:
	return _rc
}

// _58zHelp [4463]int8, escapes: true, shell.c:4026:13
var _58zHelp = ds + 1325

// _59ascii_read_one_field is defined at shell.c:4666:13
func _59ascii_read_one_field(tls crt.TLS, _p uintptr /* *TImportCtx = SImportCtx */) (r uintptr /* *int8 */) {
	var (
		_c    int32
		_cSep int32
		_rSep int32
	)
	_cSep = *(*int32)(unsafe.Pointer(_p + 44))
	_rSep = *(*int32)(unsafe.Pointer(_p + 48))
	*(*int32)(unsafe.Pointer(_p + 24)) = int32(0)
	_c = crt.Xfgetc(tls, *(*uintptr)(unsafe.Pointer(_p + 8)))
	if _c != int32(-1) && _24seenInterrupt == 0 {
		goto _1
	}

	*(*int32)(unsafe.Pointer(_p + 40)) = int32(-1)
	return null

_1:
_2:
	if _c == int32(-1) || _c == _cSep || _c == _rSep {
		goto _3
	}

	_61import_append_char(tls, _p, _c)
	_c = crt.Xfgetc(tls, *(*uintptr)(unsafe.Pointer(_p + 8)))
	goto _2

_3:
	if _c != _rSep {
		goto _4
	}

	(*(*int32)(unsafe.Pointer(_p + 32)))++
_4:
	*(*int32)(unsafe.Pointer(_p + 40)) = _c
	if (*(*uintptr)(unsafe.Pointer(_p + 16))) == 0 {
		goto _5
	}

	*(*int8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 16))) + uintptr(*(*int32)(unsafe.Pointer(_p + 24))))) = int8(0)
_5:
	return *(*uintptr)(unsafe.Pointer(_p + 16))
}

// _60csv_read_one_field is defined at shell.c:4576:13
func _60csv_read_one_field(tls crt.TLS, _p uintptr /* *TImportCtx = SImportCtx */) (r uintptr /* *int8 */) {
	var (
		_c         int32
		_cSep      int32
		_rSep      int32
		_pc        int32
		_ppc       int32
		_startLine int32
		_cQuote    int32
	)
	_cSep = *(*int32)(unsafe.Pointer(_p + 44))
	_rSep = *(*int32)(unsafe.Pointer(_p + 48))
	*(*int32)(unsafe.Pointer(_p + 24)) = int32(0)
	_c = crt.Xfgetc(tls, *(*uintptr)(unsafe.Pointer(_p + 8)))
	if _c != int32(-1) && _24seenInterrupt == 0 {
		goto _1
	}

	*(*int32)(unsafe.Pointer(_p + 40)) = int32(-1)
	return null

_1:
	if _c != int32('"') {
		goto _2
	}

	_startLine = *(*int32)(unsafe.Pointer(_p + 32))
	_cQuote = _c
	_pc = set5(&_ppc, int32(0))
_4:
	_c = crt.Xfgetc(tls, *(*uintptr)(unsafe.Pointer(_p + 8)))
	if _c != _rSep {
		goto _6
	}

	(*(*int32)(unsafe.Pointer(_p + 32)))++
_6:
	if _c != _cQuote {
		goto _7
	}

	if _pc != _cQuote {
		goto _8
	}

	_pc = int32(0)
	goto _4

_8:
_7:
	if (_c != _cSep || _pc != _cQuote) && (_c != _rSep || _pc != _cQuote) && (_c != _rSep || _pc != int32('\r') || _ppc != _cQuote) && (_c != int32(-1) || _pc != _cQuote) {
		goto _9
	}

_10:
	(*(*int32)(unsafe.Pointer(_p + 24)))--
	if int32(*(*int8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 16))) + uintptr(*(*int32)(unsafe.Pointer(_p + 24)))))) != _cQuote {
		goto _10
	}

	*(*int32)(unsafe.Pointer(_p + 40)) = _c
	goto _5

_9:
	if _pc != _cQuote || _c == int32('\r') {
		goto _13
	}

	crt.Xfprintf(tls, Xstderr, ts+9953 /* "%s:%d: unescaped %c character\n" */, *(*uintptr)(unsafe.Pointer(_p)), *(*int32)(unsafe.Pointer(_p + 32)), _cQuote)
_13:
	if _c != int32(-1) {
		goto _14
	}

	crt.Xfprintf(tls, Xstderr, ts+9984 /* "%s:%d: unterminated %c-quoted fi..." */, *(*uintptr)(unsafe.Pointer(_p)), _startLine, _cQuote)
	*(*int32)(unsafe.Pointer(_p + 40)) = _c
	goto _5

_14:
	_61import_append_char(tls, _p, _c)
	_ppc = _pc
	_pc = _c
	goto _4

_5:
	goto _3

_2:
	if (_c&int32(0xff)) != int32(0xef) || (*(*int32)(unsafe.Pointer(_p + 36))) != int32(0) {
		goto _15
	}

	_61import_append_char(tls, _p, _c)
	_c = crt.Xfgetc(tls, *(*uintptr)(unsafe.Pointer(_p + 8)))
	if (_c & int32(0xff)) != int32(0xbb) {
		goto _16
	}

	_61import_append_char(tls, _p, _c)
	_c = crt.Xfgetc(tls, *(*uintptr)(unsafe.Pointer(_p + 8)))
	if (_c & int32(0xff)) != int32(0xbf) {
		goto _17
	}

	*(*int32)(unsafe.Pointer(_p + 36)) = int32(1)
	*(*int32)(unsafe.Pointer(_p + 24)) = int32(0)
	return _60csv_read_one_field(tls, _p)

_17:
_16:
_15:
_18:
	if _c == int32(-1) || _c == _cSep || _c == _rSep {
		goto _19
	}

	_61import_append_char(tls, _p, _c)
	_c = crt.Xfgetc(tls, *(*uintptr)(unsafe.Pointer(_p + 8)))
	goto _18

_19:
	if _c != _rSep {
		goto _20
	}

	(*(*int32)(unsafe.Pointer(_p + 32)))++
	if (*(*int32)(unsafe.Pointer(_p + 24))) <= int32(0) || int32(*(*int8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 16))) + uintptr((*(*int32)(unsafe.Pointer(_p + 24)))-int32(1))))) != int32('\r') {
		goto _21
	}

	(*(*int32)(unsafe.Pointer(_p + 24)))--
_21:
_20:
	*(*int32)(unsafe.Pointer(_p + 40)) = _c
_3:
	if (*(*uintptr)(unsafe.Pointer(_p + 16))) == 0 {
		goto _22
	}

	*(*int8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 16))) + uintptr(*(*int32)(unsafe.Pointer(_p + 24))))) = int8(0)
_22:
	*(*int32)(unsafe.Pointer(_p + 36)) = int32(1)
	return *(*uintptr)(unsafe.Pointer(_p + 16))
}

// _61import_append_char is defined at shell.c:4551:13
func _61import_append_char(tls crt.TLS, _p uintptr /* *TImportCtx = SImportCtx */, _c int32) {
	if ((*(*int32)(unsafe.Pointer(_p + 24))) + int32(1)) < (*(*int32)(unsafe.Pointer(_p + 28))) {
		goto _1
	}

	{
		p := &(*(*int32)(unsafe.Pointer(_p + 28)))
		*p = int32(int32(*p) + ((*(*int32)(unsafe.Pointer(_p + 28))) + int32(100)))
	}
	*(*uintptr)(unsafe.Pointer(_p + 16)) = Xsqlite3_realloc64(tls, *(*uintptr)(unsafe.Pointer(_p + 16)), uint64(*(*int32)(unsafe.Pointer(_p + 28))))
	if (*(*uintptr)(unsafe.Pointer(_p + 16))) != 0 {
		goto _2
	}

	crt.Xfprintf(tls, Xstderr, ts+247 /* "out of memory\n" */)
	crt.Xexit(tls, int32(1))
_2:
_1:
	*(*int8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 16))) + uintptr(postinc7(&(*(*int32)(unsafe.Pointer(_p + 24))))))) = int8(_c)
}

// Xsqlite3_strglob is defined at sqlite3.c:107319:16
func Xsqlite3_strglob(tls crt.TLS, _zGlobPattern uintptr /* *int8 */, _zString uintptr /* *int8 */) (r int32) {
	return _196patternCompare(tls, _zGlobPattern, _zString, _197globInfo, uint32('['))
}

// Xsqlite3_column_count is defined at sqlite3.c:77840:16
func Xsqlite3_column_count(tls crt.TLS, _pStmt uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */) (r int32) {
	var _pVm uintptr // *TVdbe = SVdbe

	_pVm = _pStmt
	if _pVm != 0 {
		return int32(*(*uint16)(unsafe.Pointer(_pVm + 188)))
	}

	return int32(0)
}

// Xsqlite3_malloc64 is defined at sqlite3.c:25090:17
func Xsqlite3_malloc64(tls crt.TLS, _n uint64) (r uintptr /* *void */) {
	if Xsqlite3_initialize(tls) == 0 {
		goto _1
	}

	return null

_1:
	return _198sqlite3Malloc(tls, _n)
}

// Xsqlite3_get_autocommit is defined at sqlite3.c:145304:16
func Xsqlite3_get_autocommit(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */) (r int32) {
	return int32(*(*uint8)(unsafe.Pointer(_db + 95)))
}

// Xsqlite3_bind_text is defined at sqlite3.c:78331:16
func Xsqlite3_bind_text(tls crt.TLS, _pStmt uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */, _i int32, _zData uintptr /* *int8 */, _nData int32, _xDel uintptr /* *func(crt.TLS, uintptr) */) (r int32) {
	return _199bindText(tls, _pStmt, _i, _zData, _nData, _xDel, uint8(1))
}

// Xsqlite3_bind_null is defined at sqlite3.c:78304:16
func Xsqlite3_bind_null(tls crt.TLS, _pStmt uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */, _i int32) (r int32) {
	var (
		_rc int32
		_p  uintptr // *TVdbe = SVdbe
	)
	_p = _pStmt
	_rc = _200vdbeUnbind(tls, _p, _i)
	if _rc != int32(0) {
		goto _1
	}

	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p))) + 24)))
_1:
	return _rc
}

// Xsqlite3_reset is defined at sqlite3.c:77031:16
func Xsqlite3_reset(tls crt.TLS, _pStmt uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */) (r int32) {
	var (
		_rc int32
		_v  uintptr // *TVdbe = SVdbe
		_db uintptr // *Tsqlite3 = Ssqlite3
	)
	if _pStmt != 0 {
		goto _1
	}

	_rc = int32(0)
	goto _2

_1:
	_v = _pStmt
	_db = *(*uintptr)(unsafe.Pointer(_v))
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	if (*(*int64)(unsafe.Pointer(_v + 176))) <= int64(0) {
		goto _3
	}

	_195invokeProfileCallback(tls, _db, _v)
_3:
	_rc = _201sqlite3VdbeReset(tls, _v)
	_202sqlite3VdbeRewind(tls, _v)

	_rc = _182sqlite3ApiExit(tls, _db, _rc)
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
_2:
	return _rc
}

// Xsqlite3_column_int is defined at sqlite3.c:77978:16
func Xsqlite3_column_int(tls crt.TLS, _pStmt uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */, _i int32) (r int32) {
	var _val int32

	_val = Xsqlite3_value_int(tls, _203columnMem(tls, _pStmt, _i))
	_204columnMallocFailure(tls, _pStmt)
	return _val
}

// Xsqlite3_column_text is defined at sqlite3.c:77988:32
func Xsqlite3_column_text(tls crt.TLS, _pStmt uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */, _i int32) (r uintptr /* *uint8 */) {
	var _val uintptr // *uint8

	_val = Xsqlite3_value_text(tls, _203columnMem(tls, _pStmt, _i))
	_204columnMallocFailure(tls, _pStmt)
	return _val
}

// Xsqlite3_test_control is defined at sqlite3.c:145562:16
func Xsqlite3_test_control(tls crt.TLS, _op int32, ap ...interface{}) (r int32) {
	var (
		_rc           int32
		_ap           *[]interface{} // Tva_list = T__gnuc_va_list = T__...a_list = *struct{X_ [2]uintptr;}
		_sz           int32
		_aProg        uintptr // *int32
		_xBenignBegin uintptr // Tvoid_function = *func(crt.TLS)
		_xBenignEnd   uintptr // Tvoid_function = *func(crt.TLS)
		_newVal       uint32
		_x            int32
		_1x           int32
		_db           uintptr // *Tsqlite3 = Ssqlite3
		_2x           int32
		_3db          uintptr // *Tsqlite3 = Ssqlite3
		_zWord        uintptr // *int8
		_n            int32
		_4db          uintptr // *Tsqlite3 = Ssqlite3
		_5db          uintptr // *Tsqlite3 = Ssqlite3
	)
	_rc = int32(0)
	{
		x := ap
		_ap = &x
	}
	switch _op {
	case int32(5):
		goto _2
	case int32(6):
		goto _3
	case int32(7):
		goto _4
	case int32(8):
		goto _5
	case int32(9):
		goto _6
	case int32(10):
		goto _7
	case int32(11):
		goto _8
	case int32(12):
		goto _9
	case int32(13):
		goto _10
	case int32(22):
		goto _11
	case int32(14):
		goto _12
	case int32(15):
		goto _13
	case int32(16):
		goto _14
	case int32(18):
		goto _15
	case int32(20):
		goto _16
	case int32(19):
		goto _17
	case int32(21):
		goto _18
	case int32(24):
		goto _19
	case int32(23):
		goto _20
	case int32(25):
		goto _21
	}
	goto _1

_2:
	_205sqlite3PrngSaveState(tls)
	goto _1

_3:
	_206sqlite3PrngRestoreState(tls)
	goto _1

_4:
	Xsqlite3_randomness(tls, int32(0), null)
	goto _1

_5:
	_sz = crt.VAint32(_ap)
	_aProg = crt.VAuintptr(_ap)
	_rc = _207sqlite3BitvecBuiltinTest(tls, _sz, _aProg)
	goto _1

_6:
	*(*uintptr)(unsafe.Pointer(_28sqlite3Config + 408)) = crt.VAuintptr(_ap)
	_rc = _208sqlite3FaultSim(tls, int32(0))
	goto _1

_7:
	_xBenignBegin = crt.VAuintptr(_ap)
	_xBenignEnd = crt.VAuintptr(_ap)
	_209sqlite3BenignMallocHooks(tls, _xBenignBegin, _xBenignEnd)
	goto _1

_8:
	_rc = _149sqlite3PendingByte
	_newVal = crt.VAuint32(_ap)
	if _newVal == 0 {
		goto _22
	}

	_149sqlite3PendingByte = int32(_newVal)
_22:
	goto _1

_9:
	_x = int32(0)

	_rc = _x
	goto _1

_10:
	_1x = crt.VAint32(_ap)
	_rc = func() int32 {
		if _1x != 0 {
			return _1x
		}
		return int32(0)
	}()
	goto _1

_11:
	_rc = int32(123410)
	goto _1

_12:
	_db = crt.VAuintptr(_ap)
	_2x = crt.VAint32(_ap)
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	_210sqlite3BtreeSetPageSize(tls, *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_db + 32)) + 8)), int32(0), _2x, int32(0))
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	goto _1

_13:
	_3db = crt.VAuintptr(_ap)
	*(*uint16)(unsafe.Pointer(_3db + 92)) = uint16(crt.VAint32(_ap) & int32(0xffff))
	goto _1

_14:
	_zWord = crt.VAuintptr(_ap)
	_n = _211sqlite3Strlen30(tls, _zWord)
	_rc = func() int32 {
		if _212sqlite3KeywordCode(tls, _zWord, _n) != int32(59) {
			return int32(124)
		}
		return int32(0)
	}()
	goto _1

_15:
	*(*int32)(unsafe.Pointer(_28sqlite3Config + 416)) = crt.VAint32(_ap)
	goto _1

_16:
	*(*int32)(unsafe.Pointer(_28sqlite3Config + 28)) = crt.VAint32(_ap)
	goto _1

_17:
	*(*int32)(unsafe.Pointer(_28sqlite3Config + 420)) = crt.VAint32(_ap)
	goto _1

_18:
	goto _1

_19:
	_4db = crt.VAuintptr(_ap)
	*(*int32)(unsafe.Pointer(_4db + 172)) = crt.VAint32(_ap)
	goto _1

_20:
	if (*(*int32)(unsafe.Pointer(_28sqlite3Config + 356))) != int32(0) {
		goto _23
	}

	_rc = int32(1)
_23:
	goto _1

_21:
	_5db = crt.VAuintptr(_ap)
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_5db + 24)))
	*(*uint8)(unsafe.Pointer((_5db + 176) + 4)) = uint8(_213sqlite3FindDbName(tls, _5db, crt.VAuintptr(_ap)))
	*(*uint8)(unsafe.Pointer((_5db + 176) + 5)) = set23(&(*(*uint8)(unsafe.Pointer((_5db + 176) + 7))), uint8(crt.VAint32(_ap)))
	*(*int32)(unsafe.Pointer(_5db + 176)) = crt.VAint32(_ap)
	if int32(*(*uint8)(unsafe.Pointer((_5db + 176) + 5))) != int32(0) || (*(*int32)(unsafe.Pointer(_5db + 176))) <= int32(0) {
		goto _24
	}

	_157sqlite3ResetAllSchemasOfConnection(tls, _5db)
_24:
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_5db + 24)))
	goto _1

_1:
	_ap = nil
	return _rc
}

// Xsqlite3_limit is defined at sqlite3.c:144469:16
func Xsqlite3_limit(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _limitId int32, _newLimit int32) (r int32) {
	var _oldLimit int32

	if _limitId >= int32(0) && _limitId < int32(12) {
		goto _1
	}

	return int32(-1)

_1:
	_oldLimit = *(*int32)(unsafe.Pointer((_db + 124) + 4*uintptr(_limitId)))
	if _newLimit < int32(0) {
		goto _2
	}

	if _newLimit <= (*(*int32)(unsafe.Pointer(_214aHardLimit + 4*uintptr(_limitId)))) {
		goto _3
	}

	_newLimit = *(*int32)(unsafe.Pointer(_214aHardLimit + 4*uintptr(_limitId)))
_3:
	*(*int32)(unsafe.Pointer((_db + 124) + 4*uintptr(_limitId))) = _newLimit
_2:
	return _oldLimit
}

// Xsqlite3_strnicmp is defined at sqlite3.c:28441:16
func Xsqlite3_strnicmp(tls crt.TLS, _zLeft uintptr /* *int8 */, _zRight uintptr /* *int8 */, _N int32) (r int32) {
	var (
		_a uintptr // *uint8
		_b uintptr // *uint8
	)
	if _zLeft != 0 {
		goto _1
	}

	if _zRight != 0 {
		return int32(-1)
	}

	return int32(0)

	goto _2

_1:
	if _zRight != 0 {
		goto _3
	}

	return int32(1)

_3:
_2:
	_a = _zLeft
	_b = _zRight
_4:
	if postinc24(&_N) <= int32(0) || int32(*(*uint8)(unsafe.Pointer(_a))) == int32(0) || int32(*(*uint8)(unsafe.Pointer(_215sqlite3UpperToLower + uintptr(*(*uint8)(unsafe.Pointer(_a)))))) != int32(*(*uint8)(unsafe.Pointer(_215sqlite3UpperToLower + uintptr(*(*uint8)(unsafe.Pointer(_b)))))) {
		goto _5
	}

	_a++
	_b++
	goto _4

_5:
	if _N < int32(0) {
		return int32(0)
	}

	return int32(*(*uint8)(unsafe.Pointer(_215sqlite3UpperToLower + uintptr(*(*uint8)(unsafe.Pointer(_a)))))) - int32(*(*uint8)(unsafe.Pointer(_215sqlite3UpperToLower + uintptr(*(*uint8)(unsafe.Pointer(_b))))))
}

// _62lintDotCommand is defined at shell.c:5404:12
func _62lintDotCommand(tls crt.TLS, _pState uintptr /* *TShellState = SShellState */, _azArg uintptr /* **int8 */, _nArg int32) (r int32) {
	var _n int32

	_n = func() int32 {
		if _nArg >= int32(2) {
			return int32(crt.Xstrlen(tls, *(*uintptr)(unsafe.Pointer(_azArg + 8))))
		}
		return int32(0)
	}()
	if _n >= int32(1) && Xsqlite3_strnicmp(tls, *(*uintptr)(unsafe.Pointer(_azArg + 8)), ts+10021 /* "fkey-indexes" */, _n) == 0 {
		goto _1
	}

	goto _usage

_1:
	return _216lintFkeyIndexes(tls, _pState, _azArg, _nArg)

	goto _usage
_usage:
	crt.Xfprintf(tls, Xstderr, ts+10034 /* "Usage %s sub-command ?switches....." */, *(*uintptr)(unsafe.Pointer(_azArg)))
	crt.Xfprintf(tls, Xstderr, ts+10070 /* "Where sub-commands are:\n" */)
	crt.Xfprintf(tls, Xstderr, ts+10095 /* "    fkey-indexes\n" */)
	return int32(1)
}

// Xsqlite3_load_extension is defined at sqlite3.c:113434:16
func Xsqlite3_load_extension(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _zFile uintptr /* *int8 */, _zProc uintptr /* *int8 */, _pzErrMsg uintptr /* **int8 */) (r int32) {
	var _rc int32

	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	_rc = _217sqlite3LoadExtension(tls, _db, _zFile, _zProc, _pzErrMsg)
	_rc = _182sqlite3ApiExit(tls, _db, _rc)
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	return _rc
}

// _63output_file_close is defined at shell.c:4473:13
func _63output_file_close(tls crt.TLS, _f uintptr /* *TFILE = S_IO_FILE */) {
	if _f == 0 || _f == Xstdout || _f == Xstderr {
		goto _1
	}

	crt.Xfclose(tls, _f)
_1:
}

// _64output_file_open is defined at shell.c:4482:13
func _64output_file_open(tls crt.TLS, _zFile uintptr /* *int8 */) (r uintptr /* *TFILE = S_IO_FILE */) {
	var _f uintptr // *TFILE = S_IO_FILE

	if crt.Xstrcmp(tls, _zFile, ts+4817 /* "stdout" */) != int32(0) {
		goto _1
	}

	_f = Xstdout
	goto _2

_1:
	if crt.Xstrcmp(tls, _zFile, ts+10113 /* "stderr" */) != int32(0) {
		goto _3
	}

	_f = Xstderr
	goto _4

_3:
	if crt.Xstrcmp(tls, _zFile, ts+4892 /* "off" */) != int32(0) {
		goto _5
	}

	_f = null
	goto _6

_5:
	_f = crt.Xfopen64(tls, _zFile, ts+10120 /* "wb" */)
	if _f != 0 {
		goto _7
	}

	crt.Xfprintf(tls, Xstderr, ts+1437 /* "Error: cannot open \"%s\"\n" */, _zFile)
_7:
_6:
_4:
_2:
	return _f
}

// _65modeDescr [12]*int8, escapes: true, shell.c:2265:19
var _65modeDescr = bss + 1104 // array of 12 pointer to char

func init() {
	*(*[12]uintptr)(unsafe.Pointer(_65modeDescr)) = [12]uintptr{
		0:  ts + 10123, /* "line" */
		1:  ts + 9027,  /* "column" */
		2:  ts + 4568,  /* "list" */
		3:  ts + 10128, /* "semi" */
		4:  ts + 4573,  /* "html" */
		5:  ts + 4595,  /* "insert" */
		6:  ts + 4608,  /* "quote" */
		7:  ts + 4578,  /* "tcl" */
		8:  ts + 4584,  /* "csv" */
		9:  ts + 2735,  /* "explain" */
		10: ts + 4614,  /* "ascii" */
		11: ts + 10133, /* "prettyprint" */
	}
}

// XshellDeleteFile is defined at shell.c:5159:5
func XshellDeleteFile(tls crt.TLS, _zFilename uintptr /* *int8 */) (r int32) {
	var _rc int32

	_rc = crt.Xunlink(tls, _zFilename)
	return _rc
}

// Xsqlite3_sleep is defined at sqlite3.c:145493:16
func Xsqlite3_sleep(tls crt.TLS, _ms int32) (r int32) {
	var (
		_pVfs uintptr // *Tsqlite3_vfs = Ssqlite3_vfs
		_rc   int32
	)
	_pVfs = Xsqlite3_vfs_find(tls, null)
	if _pVfs != 0 {
		goto _1
	}

	return int32(0)

_1:
	_rc = _218sqlite3OsSleep(tls, _pVfs, int32(1000)*_ms) / int32(1000)
	return _rc
}

// _66initText is defined at shell.c:645:13
func _66initText(tls crt.TLS, _p uintptr /* *TShellText = SShellText */) {
	crt.Xmemset(tls, _p, int32(0), uint64(16))
}

// _67appendText is defined at shell.c:661:13
func _67appendText(tls crt.TLS, _p uintptr /* *TShellText = SShellText */, _zAppend uintptr /* *int8 */, _quote int8) {
	var (
		_len     int32
		_i       int32
		_nAppend int32
		_zCsr    uintptr // *int8
	)
	_nAppend = _18strlen30(tls, _zAppend)
	_len = (_nAppend + (*(*int32)(unsafe.Pointer(_p + 8)))) + int32(1)
	if _quote == 0 {
		goto _1
	}

	_len = int32(_len + int32(2))
	_i = int32(0)
_2:
	if _i >= _nAppend {
		goto _4
	}

	if int32(*(*int8)(unsafe.Pointer(_zAppend + uintptr(_i)))) != int32(_quote) {
		goto _5
	}

	_len++
_5:
	_i++
	goto _2

_4:
_1:
	if ((*(*int32)(unsafe.Pointer(_p + 8))) + _len) < (*(*int32)(unsafe.Pointer(_p + 12))) {
		goto _6
	}

	*(*int32)(unsafe.Pointer(_p + 12)) = (((*(*int32)(unsafe.Pointer(_p + 12))) * int32(2)) + _len) + int32(20)
	*(*uintptr)(unsafe.Pointer(_p)) = crt.Xrealloc(tls, *(*uintptr)(unsafe.Pointer(_p)), uint64(*(*int32)(unsafe.Pointer(_p + 12))))
	if (*(*uintptr)(unsafe.Pointer(_p))) != 0 {
		goto _7
	}

	crt.Xmemset(tls, _p, int32(0), uint64(16))
	return

_7:
_6:
	if _quote == 0 {
		goto _8
	}

	_zCsr = (*(*uintptr)(unsafe.Pointer(_p))) + uintptr(*(*int32)(unsafe.Pointer(_p + 8)))
	*(*int8)(unsafe.Pointer(postinc19(&_zCsr))) = _quote
	_i = int32(0)
_10:
	if _i >= _nAppend {
		goto _12
	}

	*(*int8)(unsafe.Pointer(postinc19(&_zCsr))) = *(*int8)(unsafe.Pointer(_zAppend + uintptr(_i)))
	if int32(*(*int8)(unsafe.Pointer(_zAppend + uintptr(_i)))) != int32(_quote) {
		goto _13
	}

	*(*int8)(unsafe.Pointer(postinc19(&_zCsr))) = _quote
_13:
	_i++
	goto _10

_12:
	*(*int8)(unsafe.Pointer(postinc19(&_zCsr))) = _quote
	*(*int32)(unsafe.Pointer(_p + 8)) = int32(int64(_zCsr - (*(*uintptr)(unsafe.Pointer(_p)))))
	*(*int8)(unsafe.Pointer(_zCsr)) = int8('\x00')
	goto _9

_8:
	crt.Xmemcpy(tls, (*(*uintptr)(unsafe.Pointer(_p)))+uintptr(*(*int32)(unsafe.Pointer(_p + 8))), _zAppend, uint64(_nAppend))
	{
		p := &(*(*int32)(unsafe.Pointer(_p + 8)))
		*p = int32(int32(*p) + _nAppend)
	}
	*(*int8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p))) + uintptr(*(*int32)(unsafe.Pointer(_p + 8))))) = int8('\x00')
_9:
}

// _68freeText is defined at shell.c:648:13
func _68freeText(tls crt.TLS, _p uintptr /* *TShellText = SShellText */) {
	crt.Xfree(tls, *(*uintptr)(unsafe.Pointer(_p)))
	_66initText(tls, _p)
}

// Xsqlite3_table_column_metadata is defined at sqlite3.c:145375:16
func Xsqlite3_table_column_metadata(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _zDbName uintptr /* *int8 */, _zTableName uintptr /* *int8 */, _zColumnName uintptr /* *int8 */, _pzDataType uintptr /* **int8 */, _pzCollSeq uintptr /* **int8 */, _pNotNull uintptr /* *int32 */, _pPrimaryKey uintptr /* *int32 */, _pAutoinc uintptr /* *int32 */) (r int32) {
	esc := crt.MustMalloc(8)
	var (
		_rc         int32
		_zErrMsg    = esc   // **int8
		_pTab       uintptr // *TTable = STable
		_pCol       uintptr // *TColumn = SColumn
		_iCol       int32
		_zDataType  uintptr // *int8
		_zCollSeq   uintptr // *int8
		_notnull    int32
		_primarykey int32
		_autoinc    int32
	)
	defer crt.Free(esc)
	*(*uintptr)(unsafe.Pointer(_zErrMsg)) = 0
	_pTab = 0
	_pCol = 0
	_iCol = int32(0)
	_zDataType = 0
	_zCollSeq = 0
	_notnull = int32(0)
	_primarykey = int32(0)
	_autoinc = int32(0)
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	_219sqlite3BtreeEnterAll(tls, _db)
	_rc = _220sqlite3Init(tls, _db, _zErrMsg)
	if int32(0) == _rc {
		goto _1
	}

	goto _error_out

_1:
	_pTab = _221sqlite3FindTable(tls, _db, _zTableName, _zDbName)
	if _pTab != 0 && (*(*uintptr)(unsafe.Pointer(_pTab + 24))) == 0 {
		goto _2
	}

	_pTab = null
	goto _error_out

_2:
	if _zColumnName != 0 {
		goto _3
	}

	goto _4

_3:
	_iCol = int32(0)
_5:
	if _iCol >= int32(*(*int16)(unsafe.Pointer(_pTab + 70))) {
		goto _7
	}

	_pCol = (*(*uintptr)(unsafe.Pointer(_pTab + 8))) + 32*uintptr(_iCol)
	if int32(0) != _110sqlite3StrICmp(tls, *(*uintptr)(unsafe.Pointer(_pCol)), _zColumnName) {
		goto _8
	}

	goto _7

_8:
	_iCol++
	goto _5

_7:
	if _iCol != int32(*(*int16)(unsafe.Pointer(_pTab + 70))) {
		goto _9
	}

	if ((*(*uint32)(unsafe.Pointer(_pTab + 64)))&uint32(0x20)) != uint32(0) || _222sqlite3IsRowid(tls, _zColumnName) == 0 {
		goto _10
	}

	_iCol = int32(*(*int16)(unsafe.Pointer(_pTab + 68)))
	_pCol = func() uintptr {
		if _iCol >= int32(0) {
			return (*(*uintptr)(unsafe.Pointer(_pTab + 8))) + 32*uintptr(_iCol)
		}
		return null
	}()
	goto _11

_10:
	_pTab = null
	goto _error_out

_11:
_9:
_4:
	if _pCol == 0 {
		goto _12
	}

	_zDataType = _223sqlite3ColumnType(tls, _pCol, null)
	_zCollSeq = *(*uintptr)(unsafe.Pointer(_pCol + 16))
	_notnull = bool2int(int32(*(*uint8)(unsafe.Pointer(_pCol + 24))) != int32(0))
	_primarykey = bool2int((int32(*(*uint8)(unsafe.Pointer(_pCol + 27))) & int32(0x1)) != int32(0))
	_autoinc = bool2int((int32(*(*int16)(unsafe.Pointer(_pTab + 68))) == _iCol) && (((*(*uint32)(unsafe.Pointer(_pTab + 64))) & uint32(0x8)) != uint32(0)))
	goto _13

_12:
	_zDataType = ts + 10145 /* "INTEGER" */
	_primarykey = int32(1)
_13:
	if _zCollSeq != 0 {
		goto _14
	}

	_zCollSeq = _224sqlite3StrBINARY
_14:
	goto _error_out
_error_out:
	_225sqlite3BtreeLeaveAll(tls, _db)
	if _pzDataType == 0 {
		goto _15
	}

	*(*uintptr)(unsafe.Pointer(_pzDataType)) = _zDataType
_15:
	if _pzCollSeq == 0 {
		goto _16
	}

	*(*uintptr)(unsafe.Pointer(_pzCollSeq)) = _zCollSeq
_16:
	if _pNotNull == 0 {
		goto _17
	}

	*(*int32)(unsafe.Pointer(_pNotNull)) = _notnull
_17:
	if _pPrimaryKey == 0 {
		goto _18
	}

	*(*int32)(unsafe.Pointer(_pPrimaryKey)) = _primarykey
_18:
	if _pAutoinc == 0 {
		goto _19
	}

	*(*int32)(unsafe.Pointer(_pAutoinc)) = _autoinc
_19:
	if int32(0) != _rc || _pTab != 0 {
		goto _20
	}

	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_zErrMsg)))
	*(*uintptr)(unsafe.Pointer(_zErrMsg)) = _226sqlite3MPrintf(tls, _db, ts+10153 /* "no such table column: %s.%s" */, _zTableName, _zColumnName)
	_rc = int32(1)
_20:
	_134sqlite3ErrorWithMsg(tls, _db, _rc, func() uintptr {
		if (*(*uintptr)(unsafe.Pointer(_zErrMsg))) != 0 {
			return ts + 429 /* "%s" */
		}
		return null
	}(), *(*uintptr)(unsafe.Pointer(_zErrMsg)))
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_zErrMsg)))
	_rc = _182sqlite3ApiExit(tls, _db, _rc)
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	return _rc
}

// _69createSelftestTable is defined at shell.c:3025:13
func _69createSelftestTable(tls crt.TLS, _p uintptr /* *TShellState = SShellState */) {
	esc := crt.MustMalloc(8)
	var _zErrMsg = esc // **int8
	defer crt.Free(esc)
	*(*uintptr)(unsafe.Pointer(_zErrMsg)) = 0
	Xsqlite3_exec(tls, *(*uintptr)(unsafe.Pointer(_p)), ts+10181 /* "SAVEPOINT selftest_init;\nCREATE ..." */, null, null, _zErrMsg)
	if (*(*uintptr)(unsafe.Pointer(_zErrMsg))) == 0 {
		goto _1
	}

	crt.Xfprintf(tls, Xstderr, ts+11278 /* "SELFTEST initialization failure:..." */, *(*uintptr)(unsafe.Pointer(_zErrMsg)))
	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_zErrMsg)))
_1:
	Xsqlite3_exec(tls, *(*uintptr)(unsafe.Pointer(_p)), ts+11315 /* "RELEASE selftest_init" */, null, null, null)
}

// _70captureOutputCallback is defined at shell.c:3009:12
func _70captureOutputCallback(tls crt.TLS, _pArg uintptr /* *void */, _nArg int32, _azArg uintptr /* **int8 */, _az uintptr /* **int8 */) (r int32) {
	var (
		_p uintptr // *TShellText = SShellText
		_i int32
	)
	_p = _pArg

	if _azArg != 0 {
		goto _1
	}

	return int32(0)

_1:
	if (*(*int32)(unsafe.Pointer(_p + 8))) == 0 {
		goto _2
	}

	_67appendText(tls, _p, ts+865 /* "|" */, int8(0))
_2:
	_i = int32(0)
_3:
	if _i >= _nArg {
		goto _5
	}

	if _i == 0 {
		goto _6
	}

	_67appendText(tls, _p, ts+416 /* "," */, int8(0))
_6:
	if (*(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_i)))) == 0 {
		goto _7
	}

	_67appendText(tls, _p, *(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_i))), int8(0))
_7:
	_i++
	goto _3

_5:
	return int32(0)
}

// Xsqlite3_strlike is defined at sqlite3.c:107327:16
func Xsqlite3_strlike(tls crt.TLS, _zPattern uintptr /* *int8 */, _zStr uintptr /* *int8 */, _esc uint32) (r int32) {
	return _196patternCompare(tls, _zPattern, _zStr, _227likeInfoNorm, _esc)
}

// _71output_c_string is defined at shell.c:2445:13
func _71output_c_string(tls crt.TLS, _out uintptr /* *TFILE = S_IO_FILE */, _z uintptr /* *int8 */) {
	var _c uint32

	crt.Xfputc(tls, int32('"'), _out)
_1:
	if set25(&_c, uint32(*(*int8)(unsafe.Pointer(postinc19(&_z))))) == uint32(0) {
		goto _2
	}

	if _c != uint32('\\') {
		goto _3
	}

	crt.Xfputc(tls, int32(_c), _out)
	crt.Xfputc(tls, int32(_c), _out)
	goto _4

_3:
	if _c != uint32('"') {
		goto _5
	}

	crt.Xfputc(tls, int32('\\'), _out)
	crt.Xfputc(tls, int32('"'), _out)
	goto _6

_5:
	if _c != uint32('\t') {
		goto _7
	}

	crt.Xfputc(tls, int32('\\'), _out)
	crt.Xfputc(tls, int32('t'), _out)
	goto _8

_7:
	if _c != uint32('\n') {
		goto _9
	}

	crt.Xfputc(tls, int32('\\'), _out)
	crt.Xfputc(tls, int32('n'), _out)
	goto _10

_9:
	if _c != uint32('\r') {
		goto _11
	}

	crt.Xfputc(tls, int32('\\'), _out)
	crt.Xfputc(tls, int32('r'), _out)
	goto _12

_11:
	if int32(*(*uint16)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(crt.X__ctype_b_loc(tls))) + 2*uintptr(int32(_c&uint32(0xff))))))&int32(16384) != 0 {
		goto _13
	}

	crt.Xfprintf(tls, _out, ts+11337 /* "\\%03o" */, _c&uint32(0xff))
	goto _14

_13:
	crt.Xfputc(tls, int32(_c), _out)
_14:
_12:
_10:
_8:
_6:
_4:
	goto _1

_2:
	crt.Xfputc(tls, int32('"'), _out)
}

// _72display_stats is defined at shell.c:3241:12
func _72display_stats(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pArg uintptr /* *TShellState = SShellState */, _bReset int32) (r int32) {
	esc := crt.MustMalloc(20)
	var (
		_iCur   = esc      // *int32
		_iHiwtr = esc + 16 // *int32
	)
	defer crt.Free(esc)
	if _pArg == 0 || (*(*uintptr)(unsafe.Pointer(_pArg + 32))) == 0 {
		goto _1
	}

	_228displayStatLine(tls, _pArg, ts+11343 /* "Memory Used:" */, ts+11356 /* "%lld (max %lld) bytes" */, int32(0), _bReset)
	_228displayStatLine(tls, _pArg, ts+11378 /* "Number of Outstanding Allocation..." */, ts+11413 /* "%lld (max %lld)" */, int32(9), _bReset)
	if ((*(*uint32)(unsafe.Pointer(_pArg + 76))) & uint32(0x1)) == 0 {
		goto _2
	}

	_228displayStatLine(tls, _pArg, ts+11429 /* "Number of Pcache Pages Used:" */, ts+11458 /* "%lld (max %lld) pages" */, int32(1), _bReset)
_2:
	_228displayStatLine(tls, _pArg, ts+11480 /* "Number of Pcache Overflow Bytes:" */, ts+11356 /* "%lld (max %lld) bytes" */, int32(2), _bReset)
	_228displayStatLine(tls, _pArg, ts+11513 /* "Largest Allocation:" */, ts+11533 /* "%lld bytes" */, int32(5), _bReset)
	_228displayStatLine(tls, _pArg, ts+11544 /* "Largest Pcache Allocation:" */, ts+11533 /* "%lld bytes" */, int32(7), _bReset)
_1:
	if _pArg == 0 || (*(*uintptr)(unsafe.Pointer(_pArg + 32))) == 0 || _db == 0 {
		goto _3
	}

	if ((*(*uint32)(unsafe.Pointer(_pArg + 76))) & uint32(0x2)) == 0 {
		goto _4
	}

	*(*int32)(unsafe.Pointer(_iHiwtr)) = set5(&(*(*int32)(unsafe.Pointer(_iCur))), int32(-1))
	Xsqlite3_db_status(tls, _db, int32(0), _iCur, _iHiwtr, _bReset)
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_pArg + 32)), ts+11571 /* "Lookaside Slots Used:           ..." */, *(*int32)(unsafe.Pointer(_iCur)), *(*int32)(unsafe.Pointer(_iHiwtr)))
	Xsqlite3_db_status(tls, _db, int32(4), _iCur, _iHiwtr, _bReset)
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_pArg + 32)), ts+11621 /* "Successful lookaside attempts:  ..." */, *(*int32)(unsafe.Pointer(_iHiwtr)))
	Xsqlite3_db_status(tls, _db, int32(5), _iCur, _iHiwtr, _bReset)
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_pArg + 32)), ts+11662 /* "Lookaside failures due to size: ..." */, *(*int32)(unsafe.Pointer(_iHiwtr)))
	Xsqlite3_db_status(tls, _db, int32(6), _iCur, _iHiwtr, _bReset)
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_pArg + 32)), ts+11703 /* "Lookaside failures due to OOM:  ..." */, *(*int32)(unsafe.Pointer(_iHiwtr)))
_4:
	*(*int32)(unsafe.Pointer(_iHiwtr)) = set5(&(*(*int32)(unsafe.Pointer(_iCur))), int32(-1))
	Xsqlite3_db_status(tls, _db, int32(1), _iCur, _iHiwtr, _bReset)
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_pArg + 32)), ts+11744 /* "Pager Heap Usage:               ..." */, *(*int32)(unsafe.Pointer(_iCur)))
	*(*int32)(unsafe.Pointer(_iHiwtr)) = set5(&(*(*int32)(unsafe.Pointer(_iCur))), int32(-1))
	Xsqlite3_db_status(tls, _db, int32(7), _iCur, _iHiwtr, int32(1))
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_pArg + 32)), ts+11791 /* "Page cache hits:                ..." */, *(*int32)(unsafe.Pointer(_iCur)))
	*(*int32)(unsafe.Pointer(_iHiwtr)) = set5(&(*(*int32)(unsafe.Pointer(_iCur))), int32(-1))
	Xsqlite3_db_status(tls, _db, int32(8), _iCur, _iHiwtr, int32(1))
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_pArg + 32)), ts+11832 /* "Page cache misses:              ..." */, *(*int32)(unsafe.Pointer(_iCur)))
	*(*int32)(unsafe.Pointer(_iHiwtr)) = set5(&(*(*int32)(unsafe.Pointer(_iCur))), int32(-1))
	Xsqlite3_db_status(tls, _db, int32(9), _iCur, _iHiwtr, int32(1))
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_pArg + 32)), ts+11873 /* "Page cache writes:              ..." */, *(*int32)(unsafe.Pointer(_iCur)))
	*(*int32)(unsafe.Pointer(_iHiwtr)) = set5(&(*(*int32)(unsafe.Pointer(_iCur))), int32(-1))
	Xsqlite3_db_status(tls, _db, int32(2), _iCur, _iHiwtr, _bReset)
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_pArg + 32)), ts+11914 /* "Schema Heap Usage:              ..." */, *(*int32)(unsafe.Pointer(_iCur)))
	*(*int32)(unsafe.Pointer(_iHiwtr)) = set5(&(*(*int32)(unsafe.Pointer(_iCur))), int32(-1))
	Xsqlite3_db_status(tls, _db, int32(3), _iCur, _iHiwtr, _bReset)
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_pArg + 32)), ts+11961 /* "Statement Heap/Lookaside Usage: ..." */, *(*int32)(unsafe.Pointer(_iCur)))
_3:
	if _pArg == 0 || (*(*uintptr)(unsafe.Pointer(_pArg + 32))) == 0 || _db == 0 || (*(*uintptr)(unsafe.Pointer(_pArg + 5104))) == 0 {
		goto _5
	}

	*(*int32)(unsafe.Pointer(_iCur)) = Xsqlite3_stmt_status(tls, *(*uintptr)(unsafe.Pointer(_pArg + 5104)), int32(1), _bReset)
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_pArg + 32)), ts+12008 /* "Fullscan Steps:                 ..." */, *(*int32)(unsafe.Pointer(_iCur)))
	*(*int32)(unsafe.Pointer(_iCur)) = Xsqlite3_stmt_status(tls, *(*uintptr)(unsafe.Pointer(_pArg + 5104)), int32(2), _bReset)
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_pArg + 32)), ts+12049 /* "Sort Operations:                ..." */, *(*int32)(unsafe.Pointer(_iCur)))
	*(*int32)(unsafe.Pointer(_iCur)) = Xsqlite3_stmt_status(tls, *(*uintptr)(unsafe.Pointer(_pArg + 5104)), int32(3), _bReset)
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_pArg + 32)), ts+12090 /* "Autoindex Inserts:              ..." */, *(*int32)(unsafe.Pointer(_iCur)))
	*(*int32)(unsafe.Pointer(_iCur)) = Xsqlite3_stmt_status(tls, *(*uintptr)(unsafe.Pointer(_pArg + 5104)), int32(4), _bReset)
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_pArg + 32)), ts+12131 /* "Virtual Machine Steps:          ..." */, *(*int32)(unsafe.Pointer(_iCur)))
_5:
	_229displayLinuxIoStats(tls, *(*uintptr)(unsafe.Pointer(_pArg + 32)))
	return int32(0)
}

// _73shellDatabaseError is defined at shell.c:5033:12
func _73shellDatabaseError(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */) (r int32) {
	var _zErr uintptr // *int8

	_zErr = Xsqlite3_errmsg(tls, _db)
	crt.Xfprintf(tls, Xstderr, ts+540 /* "Error: %s\n" */, _zErr)
	return int32(1)
}

// Xsqlite3_realloc64 is defined at sqlite3.c:25263:17
func Xsqlite3_realloc64(tls crt.TLS, _pOld uintptr /* *void */, _n uint64) (r uintptr /* *void */) {
	if Xsqlite3_initialize(tls) == 0 {
		goto _1
	}

	return null

_1:
	return _230sqlite3Realloc(tls, _pOld, _n)
}

// _74shellNomemError is defined at shell.c:5042:12
func _74shellNomemError(tls crt.TLS) (r int32) {
	crt.Xfprintf(tls, Xstderr, ts+3665 /* "Error: out of memory\n" */)
	return int32(1)
}

// Xsqlite3_busy_timeout is defined at sqlite3.c:143557:16
func Xsqlite3_busy_timeout(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _ms int32) (r int32) {
	if _ms <= int32(0) {
		goto _1
	}

	Xsqlite3_busy_handler(tls, _db, fp26(_231sqliteDefaultBusyCallback), _db)
	*(*int32)(unsafe.Pointer(_db + 640)) = _ms
	goto _2

_1:
	Xsqlite3_busy_handler(tls, _db, null, null)
_2:
	return int32(0)
}

// _75enableTimer int32, escapes: false, shell.c:203:12
var _75enableTimer int32

// Xsqlite3_trace_v2 is defined at sqlite3.c:143839:16
func Xsqlite3_trace_v2(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _mTrace uint32, _xTrace uintptr /* *func(crt.TLS, uint32, uintptr, uintptr, uintptr) int32 */, _pArg uintptr /* *void */) (r int32) {
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	if _mTrace != uint32(0) {
		goto _1
	}

	_xTrace = null
_1:
	if _xTrace != 0 {
		goto _2
	}

	_mTrace = uint32(0)
_2:
	*(*uint8)(unsafe.Pointer(_db + 104)) = uint8(_mTrace)
	*(*uintptr)(unsafe.Pointer(_db + 216)) = _xTrace
	*(*uintptr)(unsafe.Pointer(_db + 224)) = _pArg
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	return int32(0)
}

// _76sql_trace_callback is defined at shell.c:4504:12
func _76sql_trace_callback(tls crt.TLS, _mType uint32, _pArg uintptr /* *void */, _pP uintptr /* *void */, _pX uintptr /* *void */) (r int32) {
	var (
		_f uintptr // *TFILE = S_IO_FILE
		_z uintptr // *int8
		_i int32
	)
	_f = _pArg

	if _f == 0 {
		goto _1
	}

	_z = _pX
	_i = int32(crt.Xstrlen(tls, _z))
_2:
	if _i <= int32(0) || int32(*(*int8)(unsafe.Pointer(_z + uintptr(_i-int32(1))))) != int32(';') {
		goto _3
	}

	_i--
	goto _2

_3:
	crt.Xfprintf(tls, _f, ts+12172 /* "%.*s;\n" */, _i, _z)
_1:
	return int32(0)
}

// Xsqlite3_file_control is defined at sqlite3.c:145522:16
func Xsqlite3_file_control(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _zDbName uintptr /* *int8 */, _op int32, _pArg uintptr /* *void */) (r int32) {
	var (
		_rc     int32
		_pBtree uintptr // *TBtree = SBtree
		_pPager uintptr // *TPager = SPager
		_fd     uintptr // *Tsqlite3_file = Ssqlite3_file
	)
	_rc = int32(1)
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	_pBtree = _232sqlite3DbNameToBtree(tls, _db, _zDbName)
	if _pBtree == 0 {
		goto _1
	}

	_139sqlite3BtreeEnter(tls, _pBtree)
	_pPager = _141sqlite3BtreePager(tls, _pBtree)

	_fd = _159sqlite3PagerFile(tls, _pPager)

	if _op != int32(7) {
		goto _2
	}

	*(*uintptr)(unsafe.Pointer(_pArg)) = _fd
	_rc = int32(0)
	goto _3

_2:
	if _op != int32(27) {
		goto _4
	}

	*(*uintptr)(unsafe.Pointer(_pArg)) = _233sqlite3PagerVfs(tls, _pPager)
	_rc = int32(0)
	goto _5

_4:
	if _op != int32(28) {
		goto _6
	}

	*(*uintptr)(unsafe.Pointer(_pArg)) = _234sqlite3PagerJrnlFile(tls, _pPager)
	_rc = int32(0)
	goto _7

_6:
	if (*(*uintptr)(unsafe.Pointer(_fd))) == 0 {
		goto _8
	}

	_rc = _235sqlite3OsFileControl(tls, _fd, _op, _pArg)
	goto _9

_8:
	_rc = int32(12)
_9:
_7:
_5:
_3:
	_169sqlite3BtreeLeave(tls, _pBtree)
_1:
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	return _rc
}

// _77zStmtSql *int8, escapes: false, shell.c:3629:23
var _77zStmtSql uintptr

// _78save_err_msg is defined at shell.c:3165:13
func _78save_err_msg(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */) (r uintptr /* *int8 */) {
	var (
		_nErrMsg int32
		_zErrMsg uintptr // *int8
	)
	_nErrMsg = int32(1) + _18strlen30(tls, Xsqlite3_errmsg(tls, _db))
	_zErrMsg = Xsqlite3_malloc64(tls, uint64(_nErrMsg))
	if _zErrMsg == 0 {
		goto _1
	}

	crt.Xmemcpy(tls, _zErrMsg, Xsqlite3_errmsg(tls, _db), uint64(_nErrMsg))
_1:
	return _zErrMsg
}

// Xsqlite3_sql is defined at sqlite3.c:78586:23
func Xsqlite3_sql(tls crt.TLS, _pStmt uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */) (r uintptr /* *int8 */) {
	var _p uintptr // *TVdbe = SVdbe

	_p = _pStmt
	if _p != 0 {
		return *(*uintptr)(unsafe.Pointer(_p + 232))
	}

	return null
}

// _79disable_debug_trace_modes is defined at shell.c:3515:13
func _79disable_debug_trace_modes(tls crt.TLS) {
}

// _80explain_data_prepare is defined at shell.c:3415:13
func _80explain_data_prepare(tls crt.TLS, _p uintptr /* *TShellState = SShellState */, _pSql uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */) {
	esc := crt.MustMalloc(128)
	var (
		_zSql    uintptr // *int8
		_z       uintptr // *int8
		_abYield uintptr // *int32
		_nAlloc  int32
		_iOp     int32
		_azNext  = esc       // *[8]*int8
		_azYield = esc + 64  // *[6]*int8
		_azGoto  = esc + 112 // *[2]*int8
		_i       int32
		_iAddr   int32
		_zOp     uintptr // *int8
		_p2      int32
		_p2op    int32
		_jj      int32
	)
	defer crt.Free(esc)
	_abYield = 0
	_nAlloc = int32(0)
	*(*[8]uintptr)(unsafe.Pointer(_azNext)) = [8]uintptr{
		0: ts + 12179, /* "Next" */
		1: ts + 12184, /* "Prev" */
		2: ts + 12189, /* "VPrev" */
		3: ts + 12195, /* "VNext" */
		4: ts + 12201, /* "SorterNext" */
		5: ts + 12212, /* "NextIfOpen" */
		6: ts + 12223, /* "PrevIfOpen" */
	}
	*(*[6]uintptr)(unsafe.Pointer(_azYield)) = [6]uintptr{
		0: ts + 12234, /* "Yield" */
		1: ts + 12240, /* "SeekLT" */
		2: ts + 12247, /* "SeekGT" */
		3: ts + 12254, /* "RowSetRead" */
		4: ts + 12265, /* "Rewind" */
	}
	*(*[2]uintptr)(unsafe.Pointer(_azGoto)) = [2]uintptr{
		0: ts + 12272, /* "Goto" */
	}
	if Xsqlite3_column_count(tls, _pSql) == int32(8) {
		goto _1
	}

	*(*int32)(unsafe.Pointer(_p + 56)) = *(*int32)(unsafe.Pointer(_p + 52))
	return

_1:
	_zSql = Xsqlite3_sql(tls, _pSql)
	if _zSql != 0 {
		goto _2
	}

	return

_2:
	_z = _zSql
_3:
	if int32(*(*int8)(unsafe.Pointer(_z))) != int32(' ') && int32(*(*int8)(unsafe.Pointer(_z))) != int32('\t') && int32(*(*int8)(unsafe.Pointer(_z))) != int32('\n') && int32(*(*int8)(unsafe.Pointer(_z))) != int32('\f') && int32(*(*int8)(unsafe.Pointer(_z))) != int32('\r') {
		goto _5
	}

	_z++
	goto _3

_5:
	if Xsqlite3_strnicmp(tls, _z, ts+2735 /* "explain" */, int32(7)) == 0 {
		goto _6
	}

	*(*int32)(unsafe.Pointer(_p + 56)) = *(*int32)(unsafe.Pointer(_p + 52))
	return

_6:
	_iOp = int32(0)
_7:
	if int32(100) != Xsqlite3_step(tls, _pSql) {
		goto _9
	}

	_iAddr = Xsqlite3_column_int(tls, _pSql, int32(0))
	_zOp = Xsqlite3_column_text(tls, _pSql, int32(1))
	_p2 = Xsqlite3_column_int(tls, _pSql, int32(3))
	_p2op = _p2 + (_iOp - _iAddr)
	if _iOp < _nAlloc {
		goto _10
	}

	if _iOp != int32(0) {
		goto _11
	}

	_jj = int32(0)
_12:
	if _jj >= int32(8) {
		goto _14
	}

	if crt.Xstrcmp(tls, Xsqlite3_column_name(tls, _pSql, _jj), *(*uintptr)(unsafe.Pointer(_236explainCols + 8*uintptr(_jj)))) == int32(0) {
		goto _15
	}

	*(*int32)(unsafe.Pointer(_p + 56)) = *(*int32)(unsafe.Pointer(_p + 52))
	Xsqlite3_reset(tls, _pSql)
	return

_15:
	_jj++
	goto _12

_14:
_11:
	_nAlloc = int32(_nAlloc + int32(100))
	*(*uintptr)(unsafe.Pointer(_p + 5120)) = Xsqlite3_realloc64(tls, *(*uintptr)(unsafe.Pointer(_p + 5120)), uint64(uint64(_nAlloc)*uint64(4)))
	_abYield = Xsqlite3_realloc64(tls, _abYield, uint64(uint64(_nAlloc)*uint64(4)))
_10:
	*(*int32)(unsafe.Pointer(_abYield + 4*uintptr(_iOp))) = _237str_in_array(tls, _zOp, _azYield)
	*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 5120))) + 4*uintptr(_iOp))) = int32(0)
	*(*int32)(unsafe.Pointer(_p + 5128)) = _iOp + int32(1)
	if _237str_in_array(tls, _zOp, _azNext) == 0 {
		goto _16
	}

	_i = _p2op
_17:
	if _i >= _iOp {
		goto _19
	}

	{
		p := &(*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 5120))) + 4*uintptr(_i))))
		*p = int32(int32(*p) + int32(2))
	}
	_i++
	goto _17

_19:
_16:
	if _237str_in_array(tls, _zOp, _azGoto) == 0 || _p2op >= (*(*int32)(unsafe.Pointer(_p + 5128))) || (*(*int32)(unsafe.Pointer(_abYield + 4*uintptr(_p2op)))) == 0 && Xsqlite3_column_int(tls, _pSql, int32(2)) == 0 {
		goto _20
	}

	_i = _p2op
_21:
	if _i >= _iOp {
		goto _23
	}

	{
		p := &(*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 5120))) + 4*uintptr(_i))))
		*p = int32(int32(*p) + int32(2))
	}
	_i++
	goto _21

_23:
_20:
	_iOp++
	goto _7

_9:
	*(*int32)(unsafe.Pointer(_p + 5132)) = int32(0)
	Xsqlite3_free(tls, _abYield)
	Xsqlite3_reset(tls, _pSql)
}

// _81exec_prepared_stmt is defined at shell.c:3537:13
func _81exec_prepared_stmt(tls crt.TLS, _pArg uintptr /* *TShellState = SShellState */, _pStmt uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */, _xCallback uintptr /* *func(crt.TLS, uintptr, int32, uintptr, uintptr, uintptr) int32 */) {
	var (
		_rc      int32
		_nCol    int32
		_pData   uintptr // *void
		_azCols  uintptr // **int8
		_azVals  uintptr // **int8
		_aiTypes uintptr // *int32
		_i       int32
		_x       int32
	)
	_rc = Xsqlite3_step(tls, _pStmt)
	if int32(100) != _rc {
		goto _1
	}

	if _xCallback == 0 {
		goto _2
	}

	_nCol = Xsqlite3_column_count(tls, _pStmt)
	_pData = Xsqlite3_malloc64(tls, uint64((uint64(int32(3)*_nCol)*uint64(8))+uint64(1)))
	if _pData != 0 {
		goto _4
	}

	_rc = int32(7)
	goto _5

_4:
	_azCols = _pData
	_azVals = _azCols + 8*uintptr(_nCol)
	_aiTypes = _azVals + 8*uintptr(_nCol)

	_i = int32(0)
_6:
	if _i >= _nCol {
		goto _8
	}

	*(*uintptr)(unsafe.Pointer(_azCols + 8*uintptr(_i))) = Xsqlite3_column_name(tls, _pStmt, _i)
	_i++
	goto _6

_8:
_9:
	_i = int32(0)
_12:
	if _i >= _nCol {
		goto _14
	}

	*(*int32)(unsafe.Pointer(_aiTypes + 4*uintptr(_i))) = set5(&_x, Xsqlite3_column_type(tls, _pStmt, _i))
	if _x != int32(4) || _pArg == 0 || (*(*int32)(unsafe.Pointer(_pArg + 56))) != int32(5) {
		goto _15
	}

	*(*uintptr)(unsafe.Pointer(_azVals + 8*uintptr(_i))) = ts + 4553 /* "" */
	goto _16

_15:
	*(*uintptr)(unsafe.Pointer(_azVals + 8*uintptr(_i))) = Xsqlite3_column_text(tls, _pStmt, _i)
_16:
	if (*(*uintptr)(unsafe.Pointer(_azVals + 8*uintptr(_i)))) != 0 || (*(*int32)(unsafe.Pointer(_aiTypes + 4*uintptr(_i)))) == int32(5) {
		goto _17
	}

	_rc = int32(7)
	goto _14

_17:
	_i++
	goto _12

_14:
	if int32(100) != _rc {
		goto _18
	}

	if fn27(_xCallback)(tls, _pArg, _nCol, _azVals, _azCols, _aiTypes) == 0 {
		goto _19
	}

	_rc = int32(4)
	goto _20

_19:
	_rc = Xsqlite3_step(tls, _pStmt)
_20:
_18:
	if int32(100) == _rc {
		goto _9
	}

	Xsqlite3_free(tls, _pData)
_5:
	goto _3

_2:
_21:
	_rc = Xsqlite3_step(tls, _pStmt)
	if _rc == int32(100) {
		goto _21
	}

_3:
_1:
}

// _82explain_data_delete is defined at shell.c:3497:13
func _82explain_data_delete(tls crt.TLS, _p uintptr /* *TShellState = SShellState */) {
	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_p + 5120)))
	*(*uintptr)(unsafe.Pointer(_p + 5120)) = null
	*(*int32)(unsafe.Pointer(_p + 5128)) = int32(0)
	*(*int32)(unsafe.Pointer(_p + 5132)) = int32(0)
}

// _83restore_debug_trace_modes is defined at shell.c:3525:13
func _83restore_debug_trace_modes(tls crt.TLS) {
}

// _84display_scanstats is defined at shell.c:3338:13
func _84display_scanstats(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pArg uintptr /* *TShellState = SShellState */) {
}

// _85__func__ [15]int8, escapes: true, shell.c:2657:2
var _85__func__ = ds + 5788

// _86aExplainWidths [8]int32, escapes: true, shell.c:2679:24
var _86aExplainWidths = ds + 5804

// _87strlenChar is defined at shell.c:534:12
func _87strlenChar(tls crt.TLS, _z uintptr /* *int8 */) (r int32) {
	var _n int32

	_n = int32(0)
_1:
	if (*(*int8)(unsafe.Pointer(_z))) == 0 {
		goto _2
	}

	if (int32(0xc0) & int32(*(*int8)(unsafe.Pointer(postinc19(&_z))))) == int32(0x80) {
		goto _3
	}

	_n++
_3:
	goto _1

_2:
	return _n
}

// _88utf8_width_print is defined at shell.c:468:13
func _88utf8_width_print(tls crt.TLS, _pOut uintptr /* *TFILE = S_IO_FILE */, _w int32, _zUtf uintptr /* *int8 */) {
	var (
		_i  int32
		_n  int32
		_aw int32
	)
	_aw = func() int32 {
		if _w < int32(0) {
			return -_w
		}
		return _w
	}()
	if _aw <= int32(333) {
		goto _1
	}

	_aw = int32(333)
_1:
	_i = set5(&_n, int32(0))
_2:
	if (*(*int8)(unsafe.Pointer(_zUtf + uintptr(_i)))) == 0 {
		goto _4
	}

	if (int32(*(*int8)(unsafe.Pointer(_zUtf + uintptr(_i)))) & int32(0xc0)) == int32(0x80) {
		goto _5
	}

	_n++
	if _n != _aw {
		goto _6
	}

_7:
	_i++
	if (int32(*(*int8)(unsafe.Pointer(_zUtf + uintptr(_i)))) & int32(0xc0)) == int32(0x80) {
		goto _7
	}

	goto _4

_6:
_5:
	_i++
	goto _2

_4:
	if _n < _aw {
		goto _10
	}

	crt.Xfprintf(tls, _pOut, ts+4740 /* "%.*s" */, _i, _zUtf)
	goto _11

_10:
	if _w >= int32(0) {
		goto _12
	}

	crt.Xfprintf(tls, _pOut, ts+12277 /* "%*s%s" */, _aw-_n, ts+4553 /* "" */, _zUtf)
	goto _13

_12:
	crt.Xfprintf(tls, _pOut, ts+12283 /* "%s%*s" */, _zUtf, _aw-_n, ts+4553 /* "" */)
_13:
_11:
}

// _89printSchemaLine is defined at shell.c:2633:13
func _89printSchemaLine(tls crt.TLS, _out uintptr /* *TFILE = S_IO_FILE */, _z uintptr /* *int8 */, _zTail uintptr /* *int8 */) {
	if Xsqlite3_strglob(tls, ts+12289 /* "CREATE TABLE ['\"]*" */, _z) != int32(0) {
		goto _1
	}

	crt.Xfprintf(tls, _out, ts+12308 /* "CREATE TABLE IF NOT EXISTS %s%s" */, _z+uintptr(13), _zTail)
	goto _2

_1:
	crt.Xfprintf(tls, _out, ts+8770 /* "%s%s" */, _z, _zTail)
_2:
}

// _90printSchemaLineN is defined at shell.c:2640:13
func _90printSchemaLineN(tls crt.TLS, _out uintptr /* *TFILE = S_IO_FILE */, _z uintptr /* *int8 */, _n int32, _zTail uintptr /* *int8 */) {
	var _c int8

	_c = *(*int8)(unsafe.Pointer(_z + uintptr(_n)))
	*(*int8)(unsafe.Pointer(_z + uintptr(_n))) = int8(0)
	_89printSchemaLine(tls, _out, _z, _zTail)
	*(*int8)(unsafe.Pointer(_z + uintptr(_n))) = _c
}

// _91output_html_string is defined at shell.c:2477:13
func _91output_html_string(tls crt.TLS, _out uintptr /* *TFILE = S_IO_FILE */, _z uintptr /* *int8 */) {
	var _i int32

	if _z != 0 {
		goto _1
	}

	_z = ts + 4553 /* "" */
_1:
_2:
	if (*(*int8)(unsafe.Pointer(_z))) == 0 {
		goto _3
	}

	_i = int32(0)
_4:
	if (*(*int8)(unsafe.Pointer(_z + uintptr(_i)))) == 0 || int32(*(*int8)(unsafe.Pointer(_z + uintptr(_i)))) == int32('<') || int32(*(*int8)(unsafe.Pointer(_z + uintptr(_i)))) == int32('&') || int32(*(*int8)(unsafe.Pointer(_z + uintptr(_i)))) == int32('>') || int32(*(*int8)(unsafe.Pointer(_z + uintptr(_i)))) == int32('"') || int32(*(*int8)(unsafe.Pointer(_z + uintptr(_i)))) == int32('\'') {
		goto _6
	}

	_i++
	goto _4

_6:
	if _i <= int32(0) {
		goto _7
	}

	crt.Xfprintf(tls, _out, ts+4740 /* "%.*s" */, _i, _z)
_7:
	if int32(*(*int8)(unsafe.Pointer(_z + uintptr(_i)))) != int32('<') {
		goto _8
	}

	crt.Xfprintf(tls, _out, ts+12340 /* "&lt;" */)
	goto _9

_8:
	if int32(*(*int8)(unsafe.Pointer(_z + uintptr(_i)))) != int32('&') {
		goto _10
	}

	crt.Xfprintf(tls, _out, ts+12345 /* "&amp;" */)
	goto _11

_10:
	if int32(*(*int8)(unsafe.Pointer(_z + uintptr(_i)))) != int32('>') {
		goto _12
	}

	crt.Xfprintf(tls, _out, ts+12351 /* "&gt;" */)
	goto _13

_12:
	if int32(*(*int8)(unsafe.Pointer(_z + uintptr(_i)))) != int32('"') {
		goto _14
	}

	crt.Xfprintf(tls, _out, ts+12356 /* "&quot;" */)
	goto _15

_14:
	if int32(*(*int8)(unsafe.Pointer(_z + uintptr(_i)))) != int32('\'') {
		goto _16
	}

	crt.Xfprintf(tls, _out, ts+12363 /* "&#39;" */)
	goto _17

_16:
	goto _3

_17:
_15:
_13:
_11:
_9:
	_z += uintptr(_i + int32(1))
	goto _2

_3:
}

// _92output_csv is defined at shell.c:2537:13
func _92output_csv(tls crt.TLS, _p uintptr /* *TShellState = SShellState */, _z uintptr /* *int8 */, _bSep int32) {
	var (
		_out  uintptr // *TFILE = S_IO_FILE
		_i    int32
		_nSep int32
	)
	_out = *(*uintptr)(unsafe.Pointer(_p + 32))
	if _z != 0 {
		goto _1
	}

	crt.Xfprintf(tls, _out, ts+429 /* "%s" */, _p+960)
	goto _2

_1:
	_nSep = _18strlen30(tls, _p+118)
	_i = int32(0)
_3:
	if (*(*int8)(unsafe.Pointer(_z + uintptr(_i)))) == 0 {
		goto _5
	}

	if (*(*int8)(unsafe.Pointer(_239needCsvQuote + uintptr(*(*uint8)(unsafe.Pointer(_z + uintptr(_i))))))) == 0 && (int32(*(*int8)(unsafe.Pointer(_z + uintptr(_i)))) != int32(*(*int8)(unsafe.Pointer(_p + 118))) || _nSep != int32(1) && crt.Xmemcmp(tls, _z, _p+118, uint64(_nSep)) != int32(0)) {
		goto _6
	}

	_i = int32(0)
	goto _5

_6:
	_i++
	goto _3

_5:
	if _i != int32(0) {
		goto _7
	}

	crt.X_IO_putc(tls, int32('"'), _out)
	_i = int32(0)
_9:
	if (*(*int8)(unsafe.Pointer(_z + uintptr(_i)))) == 0 {
		goto _11
	}

	if int32(*(*int8)(unsafe.Pointer(_z + uintptr(_i)))) != int32('"') {
		goto _12
	}

	crt.X_IO_putc(tls, int32('"'), _out)
_12:
	crt.X_IO_putc(tls, int32(*(*int8)(unsafe.Pointer(_z + uintptr(_i)))), _out)
	_i++
	goto _9

_11:
	crt.X_IO_putc(tls, int32('"'), _out)
	goto _8

_7:
	crt.Xfprintf(tls, _out, ts+429 /* "%s" */, _z)
_8:
_2:
	if _bSep == 0 {
		goto _13
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+429 /* "%s" */, _p+118)
_13:
}

// _93quoteChar is defined at shell.c:708:13
func _93quoteChar(tls crt.TLS, _zName uintptr /* *int8 */) (r int8) {
	var (
		_i   int32
		_lwr int32
		_upr int32
		_mid int32
		_c   int32
	)
	if int32(*(*uint16)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(crt.X__ctype_b_loc(tls))) + 2*uintptr(int32(uint8(*(*int8)(unsafe.Pointer(_zName))))))))&int32(1024) != 0 || int32(*(*int8)(unsafe.Pointer(_zName))) == int32('_') {
		goto _1
	}

	return int8('"')

_1:
	_i = int32(0)
_2:
	if (*(*int8)(unsafe.Pointer(_zName + uintptr(_i)))) == 0 {
		goto _4
	}

	if int32(*(*uint16)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(crt.X__ctype_b_loc(tls))) + 2*uintptr(int32(uint8(*(*int8)(unsafe.Pointer(_zName + uintptr(_i)))))))))&int32(8) != 0 || int32(*(*int8)(unsafe.Pointer(_zName + uintptr(_i)))) == int32('_') {
		goto _5
	}

	return int8('"')

_5:
	_i++
	goto _2

_4:
	_lwr = int32(0)
	_upr = int32(123)
_6:
	if _lwr > _upr {
		goto _7
	}

	_mid = (_lwr + _upr) / int32(2)
	_c = Xsqlite3_stricmp(tls, *(*uintptr)(unsafe.Pointer(_240azKeywords + 8*uintptr(_mid))), _zName)
	if _c != int32(0) {
		goto _8
	}

	return int8('"')

_8:
	if _c >= int32(0) {
		goto _9
	}

	_lwr = _mid + int32(1)
	goto _10

_9:
	_upr = _mid - int32(1)
_10:
	goto _6

_7:
	return int8(0)
}

// _94output_quoted_string is defined at shell.c:2345:13
func _94output_quoted_string(tls crt.TLS, _out uintptr /* *TFILE = S_IO_FILE */, _z uintptr /* *int8 */) {
	var (
		_i int32
		_c int8
	)
	_i = int32(0)
_1:
	if int32(set15(&_c, *(*int8)(unsafe.Pointer(_z + uintptr(_i))))) == int32(0) || int32(_c) == int32('\'') {
		goto _3
	}

	_i++
	goto _1

_3:
	if int32(_c) != int32(0) {
		goto _4
	}

	crt.Xfprintf(tls, _out, ts+12369 /* "'%s'" */, _z)
	goto _5

_4:
	crt.Xfprintf(tls, _out, ts+12374 /* "'" */)
_6:
	if (*(*int8)(unsafe.Pointer(_z))) == 0 {
		goto _7
	}

	_i = int32(0)
_8:
	if int32(set15(&_c, *(*int8)(unsafe.Pointer(_z + uintptr(_i))))) == int32(0) || int32(_c) == int32('\'') {
		goto _10
	}

	_i++
	goto _8

_10:
	if int32(_c) != int32('\'') {
		goto _11
	}

	_i++
_11:
	if _i == 0 {
		goto _12
	}

	crt.Xfprintf(tls, _out, ts+4740 /* "%.*s" */, _i, _z)
	_z += uintptr(_i)
_12:
	if int32(_c) != int32('\'') {
		goto _13
	}

	crt.Xfprintf(tls, _out, ts+12374 /* "'" */)
	goto _6

_13:
	if int32(_c) != int32(0) {
		goto _14
	}

	goto _7

_14:
	_z++
	goto _6

_7:
	crt.Xfprintf(tls, _out, ts+12374 /* "'" */)
_5:
}

// _95output_quoted_escaped_string is defined at shell.c:2384:13
func _95output_quoted_escaped_string(tls crt.TLS, _out uintptr /* *TFILE = S_IO_FILE */, _z uintptr /* *int8 */) {
	esc := crt.MustMalloc(52)
	var (
		_i     int32
		_c     int8
		_zNL   uintptr // *int8
		_zCR   uintptr // *int8
		_nNL   int32
		_nCR   int32
		_zBuf1 = esc      // *[20]int8
		_zBuf2 = esc + 32 // *[20]int8
	)
	defer crt.Free(esc)
	_i = int32(0)
_1:
	if int32(set15(&_c, *(*int8)(unsafe.Pointer(_z + uintptr(_i))))) == int32(0) || int32(_c) == int32('\'') || int32(_c) == int32('\n') || int32(_c) == int32('\r') {
		goto _3
	}

	_i++
	goto _1

_3:
	if int32(_c) != int32(0) {
		goto _4
	}

	crt.Xfprintf(tls, _out, ts+12369 /* "'%s'" */, _z)
	goto _5

_4:
	_zNL = 0
	_zCR = 0
	_nNL = int32(0)
	_nCR = int32(0)
	_i = int32(0)
_6:
	if (*(*int8)(unsafe.Pointer(_z + uintptr(_i)))) == 0 {
		goto _8
	}

	if int32(*(*int8)(unsafe.Pointer(_z + uintptr(_i)))) != int32('\n') {
		goto _9
	}

	_nNL++
_9:
	if int32(*(*int8)(unsafe.Pointer(_z + uintptr(_i)))) != int32('\r') {
		goto _10
	}

	_nCR++
_10:
	_i++
	goto _6

_8:
	if _nNL == 0 {
		goto _11
	}

	crt.Xfprintf(tls, _out, ts+12376 /* "replace(" */)
	_zNL = _241unused_string(tls, _z, ts+12385 /* "\\n" */, ts+12388 /* "\\012" */, _zBuf1)
_11:
	if _nCR == 0 {
		goto _12
	}

	crt.Xfprintf(tls, _out, ts+12376 /* "replace(" */)
	_zCR = _241unused_string(tls, _z, ts+12393 /* "\\r" */, ts+12396 /* "\\015" */, _zBuf2)
_12:
	crt.Xfprintf(tls, _out, ts+12374 /* "'" */)
_13:
	if (*(*int8)(unsafe.Pointer(_z))) == 0 {
		goto _14
	}

	_i = int32(0)
_15:
	if int32(set15(&_c, *(*int8)(unsafe.Pointer(_z + uintptr(_i))))) == int32(0) || int32(_c) == int32('\n') || int32(_c) == int32('\r') || int32(_c) == int32('\'') {
		goto _17
	}

	_i++
	goto _15

_17:
	if int32(_c) != int32('\'') {
		goto _18
	}

	_i++
_18:
	if _i == 0 {
		goto _19
	}

	crt.Xfprintf(tls, _out, ts+4740 /* "%.*s" */, _i, _z)
	_z += uintptr(_i)
_19:
	if int32(_c) != int32('\'') {
		goto _20
	}

	crt.Xfprintf(tls, _out, ts+12374 /* "'" */)
	goto _13

_20:
	if int32(_c) != int32(0) {
		goto _21
	}

	goto _14

_21:
	_z++
	if int32(_c) != int32('\n') {
		goto _22
	}

	crt.Xfprintf(tls, _out, ts+429 /* "%s" */, _zNL)
	goto _13

_22:
	crt.Xfprintf(tls, _out, ts+429 /* "%s" */, _zCR)
	goto _13

_14:
	crt.Xfprintf(tls, _out, ts+12374 /* "'" */)
	if _nCR == 0 {
		goto _23
	}

	crt.Xfprintf(tls, _out, ts+12401 /* ",'%s',char(13))" */, _zCR)
_23:
	if _nNL == 0 {
		goto _24
	}

	crt.Xfprintf(tls, _out, ts+12417 /* ",'%s',char(10))" */, _zNL)
_24:
_5:
}

// Xsqlite3_column_double is defined at sqlite3.c:77973:19
func Xsqlite3_column_double(tls crt.TLS, _pStmt uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */, _i int32) (r float64) {
	var _val float64

	_val = Xsqlite3_value_double(tls, _203columnMem(tls, _pStmt, _i))
	_204columnMallocFailure(tls, _pStmt)
	return _val
}

// Xsqlite3_column_blob is defined at sqlite3.c:77953:23
func Xsqlite3_column_blob(tls crt.TLS, _pStmt uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */, _i int32) (r uintptr /* *void */) {
	var _val uintptr // *void

	_val = Xsqlite3_value_blob(tls, _203columnMem(tls, _pStmt, _i))
	_204columnMallocFailure(tls, _pStmt)
	return _val
}

// Xsqlite3_column_bytes is defined at sqlite3.c:77963:16
func Xsqlite3_column_bytes(tls crt.TLS, _pStmt uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */, _i int32) (r int32) {
	var _val int32

	_val = Xsqlite3_value_bytes(tls, _203columnMem(tls, _pStmt, _i))
	_204columnMallocFailure(tls, _pStmt)
	return _val
}

// _96output_hex_blob is defined at shell.c:2311:13
func _96output_hex_blob(tls crt.TLS, _out uintptr /* *TFILE = S_IO_FILE */, _pBlob uintptr /* *void */, _nBlob int32) {
	var (
		_i     int32
		_zBlob uintptr // *int8
	)
	_zBlob = _pBlob
	crt.Xfprintf(tls, _out, ts+12433 /* "X'" */)
	_i = int32(0)
_1:
	if _i >= _nBlob {
		goto _3
	}

	crt.Xfprintf(tls, _out, ts+12436 /* "%02x" */, int32(*(*int8)(unsafe.Pointer(_zBlob + uintptr(_i))))&int32(0xff))
	_i++
	goto _1

_3:
	crt.Xfprintf(tls, _out, ts+12374 /* "'" */)
}

// _97isNumber is defined at shell.c:496:12
func _97isNumber(tls crt.TLS, _z uintptr /* *int8 */, _realnum uintptr /* *int32 */) (r int32) {
	if int32(*(*int8)(unsafe.Pointer(_z))) != int32('-') && int32(*(*int8)(unsafe.Pointer(_z))) != int32('+') {
		goto _1
	}

	_z++
_1:
	if int32(*(*uint16)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(crt.X__ctype_b_loc(tls))) + 2*uintptr(int32(uint8(*(*int8)(unsafe.Pointer(_z))))))))&int32(2048) != 0 {
		goto _2
	}

	return int32(0)

_2:
	_z++
	if _realnum == 0 {
		goto _3
	}

	*(*int32)(unsafe.Pointer(_realnum)) = int32(0)
_3:
_4:
	if int32(*(*uint16)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(crt.X__ctype_b_loc(tls))) + 2*uintptr(int32(uint8(*(*int8)(unsafe.Pointer(_z))))))))&int32(2048) == 0 {
		goto _5
	}

	_z++
	goto _4

_5:
	if int32(*(*int8)(unsafe.Pointer(_z))) != int32('.') {
		goto _6
	}

	_z++
	if int32(*(*uint16)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(crt.X__ctype_b_loc(tls))) + 2*uintptr(int32(uint8(*(*int8)(unsafe.Pointer(_z))))))))&int32(2048) != 0 {
		goto _7
	}

	return int32(0)

_7:
_8:
	if int32(*(*uint16)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(crt.X__ctype_b_loc(tls))) + 2*uintptr(int32(uint8(*(*int8)(unsafe.Pointer(_z))))))))&int32(2048) == 0 {
		goto _9
	}

	_z++
	goto _8

_9:
	if _realnum == 0 {
		goto _10
	}

	*(*int32)(unsafe.Pointer(_realnum)) = int32(1)
_10:
_6:
	if int32(*(*int8)(unsafe.Pointer(_z))) != int32('e') && int32(*(*int8)(unsafe.Pointer(_z))) != int32('E') {
		goto _11
	}

	_z++
	if int32(*(*int8)(unsafe.Pointer(_z))) != int32('+') && int32(*(*int8)(unsafe.Pointer(_z))) != int32('-') {
		goto _12
	}

	_z++
_12:
	if int32(*(*uint16)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(crt.X__ctype_b_loc(tls))) + 2*uintptr(int32(uint8(*(*int8)(unsafe.Pointer(_z))))))))&int32(2048) != 0 {
		goto _13
	}

	return int32(0)

_13:
_14:
	if int32(*(*uint16)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(crt.X__ctype_b_loc(tls))) + 2*uintptr(int32(uint8(*(*int8)(unsafe.Pointer(_z))))))))&int32(2048) == 0 {
		goto _15
	}

	_z++
	goto _14

_15:
	if _realnum == 0 {
		goto _16
	}

	*(*int32)(unsafe.Pointer(_realnum)) = int32(1)
_16:
_11:
	return bool2int(int32(*(*int8)(unsafe.Pointer(_z))) == int32(0))
}

// _98home_dir *int8, escapes: false, shell.c:7789:15
var _98home_dir uintptr

type Spasswd struct {
	Xpw_name   uintptr // *int8
	Xpw_passwd uintptr // *int8
	Xpw_uid    uint32
	Xpw_gid    uint32
	Xpw_gecos  uintptr // *int8
	Xpw_dir    uintptr // *int8
	Xpw_shell  uintptr // *int8
}

// _99__func__ [14]int8, escapes: true, shell.c:7699:50
var _99__func__ = ds + 5836

// _100one_input_line is defined at shell.c:613:13
func _100one_input_line(tls crt.TLS, _in uintptr /* *TFILE = S_IO_FILE */, _zPrior uintptr /* *int8 */, _isContinuation int32) (r uintptr /* *int8 */) {
	var (
		_zPrompt uintptr // *int8
		_zResult uintptr // *int8
	)
	if _in == 0 {
		goto _1
	}

	_zResult = _242local_getline(tls, _zPrior, _in)
	goto _2

_1:
	_zPrompt = func() uintptr {
		if _isContinuation != 0 {
			return _23continuePrompt
		}
		return _22mainPrompt
	}()
	crt.Xprintf(tls, ts+429 /* "%s" */, _zPrompt)
	crt.Xfflush(tls, Xstdout)
	_zResult = _242local_getline(tls, _zPrior, Xstdin)
_2:
	return _zResult
}

// _101_all_whitespace is defined at shell.c:7602:12
func _101_all_whitespace(tls crt.TLS, _z uintptr /* *int8 */) (r int32) {
_1:
	if (*(*int8)(unsafe.Pointer(_z))) == 0 {
		goto _3
	}

	if int32(*(*uint16)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(crt.X__ctype_b_loc(tls))) + 2*uintptr(int32(uint8(*(*int8)(unsafe.Pointer(_z))))))))&int32(8192) == 0 {
		goto _4
	}

	goto _2

_4:
	if int32(*(*int8)(unsafe.Pointer(_z))) != int32('/') || int32(*(*int8)(unsafe.Pointer(_z + 1))) != int32('*') {
		goto _5
	}

	_z += uintptr(2)
_6:
	if (*(*int8)(unsafe.Pointer(_z))) == 0 || int32(*(*int8)(unsafe.Pointer(_z))) == int32('*') && int32(*(*int8)(unsafe.Pointer(_z + 1))) == int32('/') {
		goto _7
	}

	_z++
	goto _6

_7:
	if int32(*(*int8)(unsafe.Pointer(_z))) != int32(0) {
		goto _8
	}

	return int32(0)

_8:
	_z++
	goto _2

_5:
	if int32(*(*int8)(unsafe.Pointer(_z))) != int32('-') || int32(*(*int8)(unsafe.Pointer(_z + 1))) != int32('-') {
		goto _9
	}

	_z += uintptr(2)
_10:
	if (*(*int8)(unsafe.Pointer(_z))) == 0 || int32(*(*int8)(unsafe.Pointer(_z))) == int32('\n') {
		goto _11
	}

	_z++
	goto _10

_11:
	if int32(*(*int8)(unsafe.Pointer(_z))) != int32(0) {
		goto _12
	}

	return int32(1)

_12:
	goto _2

_9:
	return int32(0)

_2:
	_z++
	goto _1

_3:
	return int32(1)
}

// _102line_is_command_terminator is defined at shell.c:7628:12
func _102line_is_command_terminator(tls crt.TLS, _zLine uintptr /* *int8 */) (r int32) {
_1:
	if int32(*(*uint16)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(crt.X__ctype_b_loc(tls))) + 2*uintptr(int32(uint8(*(*int8)(unsafe.Pointer(_zLine))))))))&int32(8192) == 0 {
		goto _2
	}

	_zLine++
	goto _1

_2:
	if int32(*(*int8)(unsafe.Pointer(_zLine))) != int32('/') || _101_all_whitespace(tls, _zLine+1) == 0 {
		goto _3
	}

	return int32(1)

_3:
	if int32(int8(crt.Xtolower(tls, int32(uint8(*(*int8)(unsafe.Pointer(_zLine))))))) != int32('g') || int32(int8(crt.Xtolower(tls, int32(uint8(*(*int8)(unsafe.Pointer(_zLine + 1))))))) != int32('o') || _101_all_whitespace(tls, _zLine+2) == 0 {
		goto _4
	}

	return int32(1)

_4:
	return int32(0)
}

// _103line_is_complete is defined at shell.c:7644:12
func _103line_is_complete(tls crt.TLS, _zSql uintptr /* *int8 */, _nSql int32) (r int32) {
	var _rc int32

	if _zSql != 0 {
		goto _1
	}

	return int32(1)

_1:
	*(*int8)(unsafe.Pointer(_zSql + uintptr(_nSql))) = int8(';')
	*(*int8)(unsafe.Pointer(_zSql + uintptr(_nSql+int32(1)))) = int8(0)
	_rc = Xsqlite3_complete(tls, _zSql)
	*(*int8)(unsafe.Pointer(_zSql + uintptr(_nSql))) = int8(0)
	return _rc
}

// _104line_contains_semicolon is defined at shell.c:7593:12
func _104line_contains_semicolon(tls crt.TLS, _z uintptr /* *int8 */, _N int32) (r int32) {
	var _i int32

	_i = int32(0)
_1:
	if _i >= _N {
		goto _3
	}

	if int32(*(*int8)(unsafe.Pointer(_z + uintptr(_i)))) != int32(';') {
		goto _4
	}

	return int32(1)

_4:
	_i++
	goto _1

_3:
	return int32(0)
}

// Xsqlite3_complete is defined at sqlite3.c:141698:16
func Xsqlite3_complete(tls crt.TLS, _zSql uintptr /* *int8 */) (r int32) {
	var (
		_state uint8
		_token uint8
		_c     int32
		_nId   int32
	)
	_state = uint8(0)
_1:
	if (*(*int8)(unsafe.Pointer(_zSql))) == 0 {
		goto _2
	}

	switch int32(*(*int8)(unsafe.Pointer(_zSql))) {
	case int32(';'):
		goto _4
	case int32(' '):
		goto _5
	case int32('\r'):
		goto _6
	case int32('\t'):
		goto _7
	case int32('\n'):
		goto _8
	case int32('\f'):
		goto _9
	case int32('/'):
		goto _10
	case int32('-'):
		goto _11
	case int32('['):
		goto _12
	case int32('`'):
		goto _13
	case int32('"'):
		goto _14
	case int32('\''):
		goto _15
	default:
		goto _16
	}
_4:
	_token = uint8(0)
	goto _3

_5:
_6:
_7:
_8:
_9:
	_token = uint8(1)
	goto _3

_10:
	if int32(*(*int8)(unsafe.Pointer(_zSql + 1))) == int32('*') {
		goto _17
	}

	_token = uint8(2)
	goto _3

_17:
	_zSql += uintptr(2)
_18:
	if (*(*int8)(unsafe.Pointer(_zSql))) == 0 || int32(*(*int8)(unsafe.Pointer(_zSql))) == int32('*') && int32(*(*int8)(unsafe.Pointer(_zSql + 1))) == int32('/') {
		goto _19
	}

	_zSql++
	goto _18

_19:
	if int32(*(*int8)(unsafe.Pointer(_zSql))) != int32(0) {
		goto _20
	}

	return int32(0)

_20:
	_zSql++
	_token = uint8(1)
	goto _3

_11:
	if int32(*(*int8)(unsafe.Pointer(_zSql + 1))) == int32('-') {
		goto _21
	}

	_token = uint8(2)
	goto _3

_21:
_22:
	if (*(*int8)(unsafe.Pointer(_zSql))) == 0 || int32(*(*int8)(unsafe.Pointer(_zSql))) == int32('\n') {
		goto _23
	}

	_zSql++
	goto _22

_23:
	if int32(*(*int8)(unsafe.Pointer(_zSql))) != int32(0) {
		goto _24
	}

	return bool2int(int32(_state) == int32(1))

_24:
	_token = uint8(1)
	goto _3

_12:
	_zSql++
_25:
	if (*(*int8)(unsafe.Pointer(_zSql))) == 0 || int32(*(*int8)(unsafe.Pointer(_zSql))) == int32(']') {
		goto _26
	}

	_zSql++
	goto _25

_26:
	if int32(*(*int8)(unsafe.Pointer(_zSql))) != int32(0) {
		goto _27
	}

	return int32(0)

_27:
	_token = uint8(2)
	goto _3

_13:
_14:
_15:
	_c = int32(*(*int8)(unsafe.Pointer(_zSql)))
	_zSql++
_28:
	if (*(*int8)(unsafe.Pointer(_zSql))) == 0 || int32(*(*int8)(unsafe.Pointer(_zSql))) == _c {
		goto _29
	}

	_zSql++
	goto _28

_29:
	if int32(*(*int8)(unsafe.Pointer(_zSql))) != int32(0) {
		goto _30
	}

	return int32(0)

_30:
	_token = uint8(2)
	goto _3

_16:
	if (int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(uint8(*(*int8)(unsafe.Pointer(_zSql))))))) & int32(0x46)) == int32(0) {
		goto _31
	}

	_nId = int32(1)
_33:
	if (int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(uint8(*(*int8)(unsafe.Pointer(_zSql + uintptr(_nId)))))))) & int32(0x46)) == int32(0) {
		goto _35
	}

	_nId++
	goto _33

_35:
	switch int32(*(*int8)(unsafe.Pointer(_zSql))) {
	case int32('c'):
		goto _37
	case int32('C'):
		goto _38
	case int32('t'):
		goto _39
	case int32('T'):
		goto _40
	case int32('e'):
		goto _41
	case int32('E'):
		goto _42
	default:
		goto _43
	}
_37:
_38:
	if _nId != int32(6) || Xsqlite3_strnicmp(tls, _zSql, ts+12441 /* "create" */, int32(6)) != int32(0) {
		goto _44
	}

	_token = uint8(4)
	goto _45

_44:
	_token = uint8(2)
_45:
	goto _36

_39:
_40:
	if _nId != int32(7) || Xsqlite3_strnicmp(tls, _zSql, ts+12448 /* "trigger" */, int32(7)) != int32(0) {
		goto _46
	}

	_token = uint8(6)
	goto _47

_46:
	if _nId != int32(4) || Xsqlite3_strnicmp(tls, _zSql, ts+9787 /* "temp" */, int32(4)) != int32(0) {
		goto _48
	}

	_token = uint8(5)
	goto _49

_48:
	if _nId != int32(9) || Xsqlite3_strnicmp(tls, _zSql, ts+12456 /* "temporary" */, int32(9)) != int32(0) {
		goto _50
	}

	_token = uint8(5)
	goto _51

_50:
	_token = uint8(2)
_51:
_49:
_47:
	goto _36

_41:
_42:
	if _nId != int32(3) || Xsqlite3_strnicmp(tls, _zSql, ts+12466 /* "end" */, int32(3)) != int32(0) {
		goto _52
	}

	_token = uint8(7)
	goto _53

_52:
	if _nId != int32(7) || Xsqlite3_strnicmp(tls, _zSql, ts+2735 /* "explain" */, int32(7)) != int32(0) {
		goto _54
	}

	_token = uint8(3)
	goto _55

_54:
	_token = uint8(2)
_55:
_53:
	goto _36

_43:
	_token = uint8(2)
	goto _36

_36:
	_zSql += uintptr(_nId - int32(1))
	goto _32

_31:
	_token = uint8(2)
_32:
	goto _3

_3:
	_state = *(*uint8)(unsafe.Pointer((_243trans + 8*uintptr(_state)) + uintptr(_token)))
	_zSql++
	goto _1

_2:
	return bool2int(int32(_state) == int32(1))
}

// _105runOneSqlLine is defined at shell.c:7657:12
func _105runOneSqlLine(tls crt.TLS, _p uintptr /* *TShellState = SShellState */, _zSql uintptr /* *int8 */, _in uintptr /* *TFILE = S_IO_FILE */, _startline int32) (r int32) {
	esc := crt.MustMalloc(116)
	var (
		_rc      int32
		_zErrMsg = esc      // **int8
		_zPrefix = esc + 16 // *[100]int8
	)
	defer crt.Free(esc)
	*(*uintptr)(unsafe.Pointer(_zErrMsg)) = 0
	_9open_db(tls, _p, int32(0))
	if ((*(*uint32)(unsafe.Pointer(_p + 76))) & uint32(0x4)) == uint32(0) {
		goto _1
	}

	_44resolve_backslashes(tls, _zSql)
_1:
	_244beginTimer(tls)
	_rc = _14shell_exec(tls, *(*uintptr)(unsafe.Pointer(_p)), _zSql, fp3(_15shell_callback), _p, _zErrMsg)
	_245endTimer(tls)
	if _rc == 0 && (*(*uintptr)(unsafe.Pointer(_zErrMsg))) == 0 {
		goto _2
	}

	if _in == 0 && _2stdin_is_interactive != 0 {
		goto _4
	}

	Xsqlite3_snprintf(tls, int32(100), _zPrefix, ts+12470 /* "Error: near line %d:" */, _startline)
	goto _5

_4:
	Xsqlite3_snprintf(tls, int32(100), _zPrefix, ts+12491 /* "Error:" */)
_5:
	if (*(*uintptr)(unsafe.Pointer(_zErrMsg))) == 0 {
		goto _6
	}

	crt.Xfprintf(tls, Xstderr, ts+514 /* "%s %s\n" */, _zPrefix, *(*uintptr)(unsafe.Pointer(_zErrMsg)))
	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_zErrMsg)))
	*(*uintptr)(unsafe.Pointer(_zErrMsg)) = null
	goto _7

_6:
	crt.Xfprintf(tls, Xstderr, ts+514 /* "%s %s\n" */, _zPrefix, Xsqlite3_errmsg(tls, *(*uintptr)(unsafe.Pointer(_p))))
_7:
	return int32(1)

	goto _3

_2:
	if ((*(*uint32)(unsafe.Pointer(_p + 76))) & uint32(0x20)) == uint32(0) {
		goto _8
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+12498 /* "changes: %3d   total_changes: %d..." */, Xsqlite3_changes(tls, *(*uintptr)(unsafe.Pointer(_p))), Xsqlite3_total_changes(tls, *(*uintptr)(unsafe.Pointer(_p))))
_8:
_3:
	return int32(0)
}

type Ssqlite3 struct {
	XpVfs                   uintptr // *Ssqlite3_vfs
	XpVdbe                  uintptr // *SVdbe
	XpDfltColl              uintptr // *SCollSeq
	Xmutex                  uintptr // *Ssqlite3_mutex
	XaDb                    uintptr // *SDb
	XnDb                    int32
	XmDbFlags               uint32
	Xflags                  uint32
	XlastRowid              int64
	XszMmap                 int64
	XnSchemaLock            uint32
	XopenFlags              uint32
	XerrCode                int32
	XerrMask                int32
	XiSysErrno              int32
	XdbOptFlags             uint16
	Xenc                    uint8
	XautoCommit             uint8
	Xtemp_store             uint8
	XmallocFailed           uint8
	XbBenignMalloc          uint8
	XdfltLockMode           uint8
	XnextAutovac            int8
	XsuppressErr            uint8
	XvtabOnConflict         uint8
	XisTransactionSavepoint uint8
	XmTrace                 uint8
	XskipBtreeMutex         uint8
	XnSqlExec               uint8
	XnextPagesize           int32
	Xmagic                  uint32
	XnChange                int32
	XnTotalChange           int32
	XaLimit                 [12]int32
	XnMaxSorterMmap         int32
	Xinit                   struct {
		XnewTnum       int32
		XiDb           uint8
		Xbusy          uint8
		XorphanTrigger uint8
		XimposterTable uint8
	}
	XnVdbeActive       int32
	XnVdbeRead         int32
	XnVdbeWrite        int32
	XnVdbeExec         int32
	XnVDestroy         int32
	XnExtension        int32
	XaExtension        uintptr // *uintptr
	XxTrace            uintptr // *func(crt.TLS, uint32, uintptr, uintptr, uintptr) int32
	XpTraceArg         uintptr // uintptr
	XxProfile          uintptr // *func(crt.TLS, uintptr, uintptr, uint64)
	XpProfileArg       uintptr // uintptr
	XpCommitArg        uintptr // uintptr
	XxCommitCallback   uintptr // *func(crt.TLS, uintptr) int32
	XpRollbackArg      uintptr // uintptr
	XxRollbackCallback uintptr // *func(crt.TLS, uintptr)
	XpUpdateArg        uintptr // uintptr
	XxUpdateCallback   uintptr // *func(crt.TLS, uintptr, int32, uintptr, uintptr, int64)
	XxWalCallback      uintptr // *func(crt.TLS, uintptr, uintptr, uintptr, int32) int32
	XpWalArg           uintptr // uintptr
	XxCollNeeded       uintptr // *func(crt.TLS, uintptr, uintptr, int32, uintptr)
	XxCollNeeded16     uintptr // *func(crt.TLS, uintptr, uintptr, int32, uintptr)
	XpCollNeededArg    uintptr // uintptr
	XpErr              uintptr // *Ssqlite3_value
	Xu1                struct{ X int64 }
	Xlookaside         SLookaside
	XxAuth             uintptr // *func(crt.TLS, uintptr, int32, uintptr, uintptr, uintptr, uintptr) int32
	XpAuthArg          uintptr // uintptr
	XxProgress         uintptr // *func(crt.TLS, uintptr) int32
	XpProgressArg      uintptr // uintptr
	XnProgressOps      uint32
	XnVTrans           int32
	XaModule           SHash
	XpVtabCtx          uintptr // *SVtabCtx
	XaVTrans           uintptr // **SVTable
	XpDisconnect       uintptr // *SVTable
	XaFunc             SHash
	XaCollSeq          SHash
	XbusyHandler       SBusyHandler
	XaDbStatic         [2]SDb
	XpSavepoint        uintptr // *SSavepoint
	XbusyTimeout       int32
	XnSavepoint        int32
	XnStatement        int32
	XnDeferredCons     int64
	XnDeferredImmCons  int64
	XpnBytesFreed      uintptr // *int32
}

// _106sqlite3Close is defined at sqlite3.c:143032:12
func _106sqlite3Close(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _forceZombie int32) (r int32) {
	if _db != 0 {
		goto _1
	}

	return int32(0)

_1:
	if _122sqlite3SafetyCheckSickOrOk(tls, _db) != 0 {
		goto _2
	}

	return _29sqlite3MisuseError(tls, int32(143039))

_2:
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	if (int32(*(*uint8)(unsafe.Pointer(_db + 104))) & int32(0x8)) == 0 {
		goto _3
	}

	fn28(*(*uintptr)(unsafe.Pointer(_db + 216)))(tls, uint32(0x8), *(*uintptr)(unsafe.Pointer(_db + 224)), _db, null)
_3:
	_246disconnectAllVtab(tls, _db)
	_247sqlite3VtabRollback(tls, _db)
	if _forceZombie != 0 || _248connectionIsBusy(tls, _db) == 0 {
		goto _4
	}

	_134sqlite3ErrorWithMsg(tls, _db, int32(5), ts+12532 /* "unable to close due to unfinaliz..." */)
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	return int32(5)

_4:
	*(*uint32)(unsafe.Pointer(_db + 112)) = uint32(0x64cffc7f)
	_172sqlite3LeaveMutexAndCloseZombie(tls, _db)
	return int32(0)
}

// _107mem0 struct{Xmutex *Ssqlite3_mutex;Xa...eshold int64;XnearlyFull int32;}, escapes: true, sqlite3.c:24877:3
var _107mem0 = bss + 1200

// _108sqlite3StatusDown is defined at sqlite3.c:19160:21
func _108sqlite3StatusDown(tls crt.TLS, _op int32, _N int32) {
	{
		p := &(*(*int64)(unsafe.Pointer(_249sqlite3Stat + 8*uintptr(_op))))
		*p = int64(int64(*p) - int64(_N))
	}
}

// _109sqlite3MallocSize is defined at sqlite3.c:25112:20
func _109sqlite3MallocSize(tls crt.TLS, _p uintptr /* *void */) (r int32) {
	return fn12(*(*uintptr)(unsafe.Pointer((_28sqlite3Config + 48) + 24)))(tls, _p)
}

type S_IO_marker struct {
	X_next uintptr // *S_IO_marker
	X_sbuf uintptr // *S_IO_FILE
	X_pos  int32
}

// _110sqlite3StrICmp is defined at sqlite3.c:28428:20
func _110sqlite3StrICmp(tls crt.TLS, _zLeft uintptr /* *int8 */, _zRight uintptr /* *int8 */) (r int32) {
	var (
		_a uintptr // *uint8
		_b uintptr // *uint8
		_c int32
	)
	_a = _zLeft
	_b = _zRight

_1:
	_c = int32(*(*uint8)(unsafe.Pointer(_215sqlite3UpperToLower + uintptr(*(*uint8)(unsafe.Pointer(_a)))))) - int32(*(*uint8)(unsafe.Pointer(_215sqlite3UpperToLower + uintptr(*(*uint8)(unsafe.Pointer(_b))))))
	if _c == 0 && int32(*(*uint8)(unsafe.Pointer(_a))) != int32(0) {
		goto _4
	}

	goto _3

_4:
	_a++
	_b++
	goto _1

_3:
	return _c
}

type SSqlite3Config struct {
	XbMemstat            int32
	XbCoreMutex          int32
	XbFullMutex          int32
	XbOpenUri            int32
	XbUseCis             int32
	XbSmallMalloc        int32
	XmxStrlen            int32
	XneverCorrupt        int32
	XszLookaside         int32
	XnLookaside          int32
	XnStmtSpill          int32
	Xm                   Ssqlite3_mem_methods
	Xmutex               Ssqlite3_mutex_methods
	Xpcache2             Ssqlite3_pcache_methods2
	XpHeap               uintptr // uintptr
	XnHeap               int32
	XmnReq               int32
	XmxReq               int32
	XszMmap              int64
	XmxMmap              int64
	XpPage               uintptr // uintptr
	XszPage              int32
	XnPage               int32
	XmxParserStack       int32
	XsharedCacheEnabled  int32
	XszPma               uint32
	XisInit              int32
	XinProgress          int32
	XisMutexInit         int32
	XisMallocInit        int32
	XisPCacheInit        int32
	XnRefInitMutex       int32
	XpInitMutex          uintptr // *Ssqlite3_mutex
	XxLog                uintptr // *func(crt.TLS, uintptr, int32, uintptr)
	XpLogArg             uintptr // uintptr
	XxTestCallback       uintptr // *func(crt.TLS, int32) int32
	XbLocaltimeFault     int32
	XiOnceResetThreshold int32
}

// _111reportError is defined at sqlite3.c:145325:12
func _111reportError(tls crt.TLS, _iErr int32, _lineno int32, _zType uintptr /* *int8 */) (r int32) {
	Xsqlite3_log(tls, _iErr, ts+12600 /* "%s at line %d of [%.10s]" */, _zType, _lineno, uintptr(20)+Xsqlite3_sourceid(tls))
	return _iErr
}

// _112defaultMethods Tsqlite3_mem_methods = Ssqlite3_mem_methods, escapes: true, sqlite3.c:21542:36
var _112defaultMethods = bss + 1224 // sqlite3_mem_methods

func init() {
	*(*Ssqlite3_mem_methods)(unsafe.Pointer(_112defaultMethods)) = Ssqlite3_mem_methods{
		XxMalloc:   fp29(_250sqlite3MemMalloc),
		XxFree:     fp18(_251sqlite3MemFree),
		XxRealloc:  fp30(_252sqlite3MemRealloc),
		XxSize:     fp10(_253sqlite3MemSize),
		XxRoundup:  fp31(_254sqlite3MemRoundup),
		XxInit:     fp10(_255sqlite3MemInit),
		XxShutdown: fp18(_256sqlite3MemShutdown),
	}
}

// _113defaultMethods Tsqlite3_pcache_methods2 = Ssqlite3_pcache_methods2, escapes: true, sqlite3.c:46735:40
var _113defaultMethods = bss + 1288 // sqlite3_pcache_methods2

func init() {
	*(*Ssqlite3_pcache_methods2)(unsafe.Pointer(_113defaultMethods)) = Ssqlite3_pcache_methods2{
		XiVersion:   int32(1),
		XxInit:      fp10(_257pcache1Init),
		XxShutdown:  fp18(_258pcache1Shutdown),
		XxCreate:    fp32(_259pcache1Create),
		XxCachesize: fp33(_260pcache1Cachesize),
		XxPagecount: fp10(_261pcache1Pagecount),
		XxFetch:     fp34(_262pcache1Fetch),
		XxUnpin:     fp35(_263pcache1Unpin),
		XxRekey:     fp36(_264pcache1Rekey),
		XxTruncate:  fp37(_265pcache1Truncate),
		XxDestroy:   fp18(_266pcache1Destroy),
		XxShrink:    fp18(_267pcache1Shrink),
	}
}

// _114sqlite3MutexInit is defined at sqlite3.c:23390:20
func _114sqlite3MutexInit(tls crt.TLS) (r int32) {
	var (
		_rc    int32
		_pFrom uintptr // *Tsqlite3_mutex_methods = Ssqlite3_mutex_methods
		_pTo   uintptr // *Tsqlite3_mutex_methods = Ssqlite3_mutex_methods
	)
	_rc = int32(0)
	if (*(*uintptr)(unsafe.Pointer((_28sqlite3Config + 112) + 16))) != 0 {
		goto _1
	}

	_pTo = _28sqlite3Config + 112
	if (*(*int32)(unsafe.Pointer(_28sqlite3Config + 4))) == 0 {
		goto _2
	}

	_pFrom = _268sqlite3DefaultMutex(tls)
	goto _3

_2:
	_pFrom = _269sqlite3NoopMutex(tls)
_3:
	*(*uintptr)(unsafe.Pointer(_pTo)) = *(*uintptr)(unsafe.Pointer(_pFrom))
	*(*uintptr)(unsafe.Pointer(_pTo + 8)) = *(*uintptr)(unsafe.Pointer(_pFrom + 8))
	*(*uintptr)(unsafe.Pointer(_pTo + 24)) = *(*uintptr)(unsafe.Pointer(_pFrom + 24))
	*(*uintptr)(unsafe.Pointer(_pTo + 32)) = *(*uintptr)(unsafe.Pointer(_pFrom + 32))
	*(*uintptr)(unsafe.Pointer(_pTo + 40)) = *(*uintptr)(unsafe.Pointer(_pFrom + 40))
	*(*uintptr)(unsafe.Pointer(_pTo + 48)) = *(*uintptr)(unsafe.Pointer(_pFrom + 48))
	*(*uintptr)(unsafe.Pointer(_pTo + 56)) = *(*uintptr)(unsafe.Pointer(_pFrom + 56))
	*(*uintptr)(unsafe.Pointer(_pTo + 64)) = *(*uintptr)(unsafe.Pointer(_pFrom + 64))
	_270sqlite3MemoryBarrier(tls)
	*(*uintptr)(unsafe.Pointer(_pTo + 16)) = *(*uintptr)(unsafe.Pointer(_pFrom + 16))
_1:
	_rc = fn38(*(*uintptr)(unsafe.Pointer(_28sqlite3Config + 112)))(tls)
	return _rc
}

// _115sqlite3MallocInit is defined at sqlite3.c:24940:20
func _115sqlite3MallocInit(tls crt.TLS) (r int32) {
	var _rc int32

	if (*(*uintptr)(unsafe.Pointer(_28sqlite3Config + 48))) != 0 {
		goto _1
	}

	_30sqlite3MemSetDefault(tls)
_1:
	crt.Xmemset(tls, _107mem0, int32(0), uint64(24))
	*(*uintptr)(unsafe.Pointer(_107mem0)) = _35sqlite3MutexAlloc(tls, int32(3))
	if (*(*uintptr)(unsafe.Pointer(_28sqlite3Config + 328))) != 0 && (*(*int32)(unsafe.Pointer(_28sqlite3Config + 336))) >= int32(512) && (*(*int32)(unsafe.Pointer(_28sqlite3Config + 340))) > int32(0) {
		goto _2
	}

	*(*uintptr)(unsafe.Pointer(_28sqlite3Config + 328)) = null
	*(*int32)(unsafe.Pointer(_28sqlite3Config + 336)) = int32(0)
_2:
	_rc = fn12(*(*uintptr)(unsafe.Pointer((_28sqlite3Config + 48) + 40)))(tls, *(*uintptr)(unsafe.Pointer((_28sqlite3Config + 48) + 56)))
	if _rc == int32(0) {
		goto _3
	}

	crt.Xmemset(tls, _107mem0, int32(0), uint64(24))
_3:
	return _rc
}

// _116sqlite3BuiltinFunctions TFuncDefHash = SFuncDefHash, escapes: true, sqlite3.c:18451:28
var _116sqlite3BuiltinFunctions = bss + 1392

// _117sqlite3RegisterBuiltinFunctions is defined at sqlite3.c:108307:21
func _117sqlite3RegisterBuiltinFunctions(tls crt.TLS) {
	_272sqlite3AlterFunctions(tls)
	_273sqlite3RegisterDateTimeFunctions(tls)
	_274sqlite3InsertBuiltinFuncs(tls, _271aBuiltinFunc, int32(59))
}

// _118sqlite3PcacheInitialize is defined at sqlite3.c:44948:20
func _118sqlite3PcacheInitialize(tls crt.TLS) (r int32) {
	if (*(*uintptr)(unsafe.Pointer((_28sqlite3Config + 184) + 16))) != 0 {
		goto _1
	}

	_34sqlite3PCacheSetDefault(tls)
_1:
	return fn12(*(*uintptr)(unsafe.Pointer((_28sqlite3Config + 184) + 16)))(tls, *(*uintptr)(unsafe.Pointer((_28sqlite3Config + 184) + 8)))
}

// _119sqlite3OsInit is defined at sqlite3.c:21010:20
func _119sqlite3OsInit(tls crt.TLS) (r int32) {
	var _p uintptr // *void

	_p = Xsqlite3_malloc(tls, int32(10))
	if _p != 0 {
		goto _1
	}

	return int32(7)

_1:
	Xsqlite3_free(tls, _p)
	return Xsqlite3_os_init(tls)
}

// _120sqlite3PCacheBufferSetup is defined at sqlite3.c:45816:21
func _120sqlite3PCacheBufferSetup(tls crt.TLS, _pBuf uintptr /* *void */, _sz int32, _n int32) {
	var _p uintptr // *TPgFreeslot = SPgFreeslot

	if (*(*int32)(unsafe.Pointer(_275pcache1_g + 80))) == 0 {
		goto _1
	}

	if _pBuf != 0 {
		goto _2
	}

	_sz = set5(&_n, int32(0))
_2:
	if _n != int32(0) {
		goto _3
	}

	_sz = int32(0)
_3:
	_sz = _sz & int32(-8)
	*(*int32)(unsafe.Pointer(_275pcache1_g + 92)) = _sz
	*(*int32)(unsafe.Pointer(_275pcache1_g + 96)) = set5(&(*(*int32)(unsafe.Pointer(_275pcache1_g + 136))), _n)
	*(*int32)(unsafe.Pointer(_275pcache1_g + 100)) = func() int32 {
		if _n > int32(90) {
			return int32(10)
		}
		return (_n / int32(10)) + int32(1)
	}()
	*(*uintptr)(unsafe.Pointer(_275pcache1_g + 104)) = _pBuf
	*(*uintptr)(unsafe.Pointer(_275pcache1_g + 128)) = null
	*(*int32)(unsafe.Pointer(_275pcache1_g + 140)) = int32(0)
_4:
	if postinc24(&_n) == 0 {
		goto _5
	}

	_p = _pBuf
	*(*uintptr)(unsafe.Pointer(_p)) = *(*uintptr)(unsafe.Pointer(_275pcache1_g + 128))
	*(*uintptr)(unsafe.Pointer(_275pcache1_g + 128)) = _p
	_pBuf = _pBuf + uintptr(_sz)
	goto _4

_5:
	*(*uintptr)(unsafe.Pointer(_275pcache1_g + 112)) = _pBuf
_1:
}

// Xsqlite3_mutex_free is defined at sqlite3.c:23468:17
func Xsqlite3_mutex_free(tls crt.TLS, _p uintptr /* *Tsqlite3_mutex = Ssqlite3_mutex */) {
	if _p == 0 {
		goto _1
	}

	fn16(*(*uintptr)(unsafe.Pointer((_28sqlite3Config + 112) + 24)))(tls, _p)
_1:
}

// _121openDatabase is defined at sqlite3.c:144773:12
func _121openDatabase(tls crt.TLS, _zFilename uintptr /* *int8 */, _ppDb uintptr /* **Tsqlite3 = Ssqlite3 */, aflags uint32, _zVfs uintptr /* *int8 */) (r int32) {
	esc := crt.MustMalloc(40)
	var (
		_flags        = esc   // *uint32
		_db           uintptr // *Tsqlite3 = Ssqlite3
		_rc           int32
		_isThreadsafe int32
		_zOpen        = esc + 16 // **int8
		_zErrMsg      = esc + 32 // **int8
	)
	defer crt.Free(esc)
	*(*uint32)(unsafe.Pointer(_flags)) = aflags
	*(*uintptr)(unsafe.Pointer(_zOpen)) = 0
	*(*uintptr)(unsafe.Pointer(_zErrMsg)) = 0
	*(*uintptr)(unsafe.Pointer(_ppDb)) = null
	_rc = Xsqlite3_initialize(tls)
	if _rc == 0 {
		goto _1
	}

	return _rc

_1:
	if (*(*int32)(unsafe.Pointer(_28sqlite3Config + 4))) != int32(0) {
		goto _2
	}

	_isThreadsafe = int32(0)
	goto _3

_2:
	if ((*(*uint32)(unsafe.Pointer(_flags))) & uint32(0x8000)) == 0 {
		goto _4
	}

	_isThreadsafe = int32(0)
	goto _5

_4:
	if ((*(*uint32)(unsafe.Pointer(_flags))) & uint32(0x10000)) == 0 {
		goto _6
	}

	_isThreadsafe = int32(1)
	goto _7

_6:
	_isThreadsafe = *(*int32)(unsafe.Pointer(_28sqlite3Config + 8))
_7:
_5:
_3:
	if ((*(*uint32)(unsafe.Pointer(_flags))) & uint32(0x40000)) == 0 {
		goto _8
	}

	*(*uint32)(unsafe.Pointer(_flags)) = uint32((*(*uint32)(unsafe.Pointer(_flags))) & uint32(4294836223))
	goto _9

_8:
	if (*(*int32)(unsafe.Pointer(_28sqlite3Config + 348))) == 0 {
		goto _10
	}

	*(*uint32)(unsafe.Pointer(_flags)) = uint32((*(*uint32)(unsafe.Pointer(_flags))) | uint32(0x20000))
_10:
_9:
	*(*uint32)(unsafe.Pointer(_flags)) = uint32((*(*uint32)(unsafe.Pointer(_flags))) & uint32(4294312167))
	_db = _135sqlite3MallocZero(tls, uint64(680))
	if _db != 0 {
		goto _11
	}

	goto _opendb_out

_11:
	if _isThreadsafe == 0 {
		goto _12
	}

	*(*uintptr)(unsafe.Pointer(_db + 24)) = _35sqlite3MutexAlloc(tls, int32(1))
	if (*(*uintptr)(unsafe.Pointer(_db + 24))) != 0 {
		goto _13
	}

	Xsqlite3_free(tls, _db)
	_db = null
	goto _opendb_out

_13:
_12:
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	*(*int32)(unsafe.Pointer(_db + 84)) = int32(0xff)
	*(*int32)(unsafe.Pointer(_db + 40)) = int32(2)
	*(*uint32)(unsafe.Pointer(_db + 112)) = uint32(0xf03b7906)
	*(*uintptr)(unsafe.Pointer(_db + 32)) = _db + 568

	crt.Xmemcpy(tls, _db+124, _214aHardLimit, uint64(48))
	*(*int32)(unsafe.Pointer((_db + 124) + 44)) = int32(0)
	*(*uint8)(unsafe.Pointer(_db + 95)) = uint8(1)
	*(*int8)(unsafe.Pointer(_db + 100)) = int8(-1)
	*(*int64)(unsafe.Pointer(_db + 64)) = int64(*(*int64)(unsafe.Pointer(_28sqlite3Config + 312)))
	*(*int32)(unsafe.Pointer(_db + 108)) = int32(0)
	*(*int32)(unsafe.Pointer(_db + 172)) = int32(0x7fffffff)
	{
		p := &(*(*uint32)(unsafe.Pointer(_db + 48)))
		*p = uint32(uint32(*p) | uint32(295008))
	}
	_276sqlite3HashInit(tls, _db+520)
	_276sqlite3HashInit(tls, _db+448)
	_277createCollation(tls, _db, _224sqlite3StrBINARY, uint8(1), null, fp39(_278binCollFunc), null)
	_277createCollation(tls, _db, _224sqlite3StrBINARY, uint8(3), null, fp39(_278binCollFunc), null)
	_277createCollation(tls, _db, _224sqlite3StrBINARY, uint8(2), null, fp39(_278binCollFunc), null)
	_277createCollation(tls, _db, ts+12625 /* "NOCASE" */, uint8(1), null, fp39(_279nocaseCollatingFunc), null)
	_277createCollation(tls, _db, ts+12632 /* "RTRIM" */, uint8(1), uintptr(1), fp39(_278binCollFunc), null)
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _14
	}

	goto _opendb_out

_14:
	*(*uintptr)(unsafe.Pointer(_db + 16)) = _280sqlite3FindCollSeq(tls, _db, uint8(1), _224sqlite3StrBINARY, int32(0))

	*(*uint32)(unsafe.Pointer(_db + 76)) = *(*uint32)(unsafe.Pointer(_flags))

	if ((int32(1) << (uint((*(*uint32)(unsafe.Pointer(_flags)))&uint32(7)) % 32)) & int32(0x46)) != int32(0) {
		goto _15
	}

	_rc = _29sqlite3MisuseError(tls, int32(144935))
	goto _16

_15:
	_rc = _281sqlite3ParseUri(tls, _zVfs, _zFilename, _flags, _db, _zOpen, _zErrMsg)
_16:
	if _rc == int32(0) {
		goto _17
	}

	if _rc != int32(7) {
		goto _18
	}

	_178sqlite3OomFault(tls, _db)
_18:
	_134sqlite3ErrorWithMsg(tls, _db, _rc, func() uintptr {
		if (*(*uintptr)(unsafe.Pointer(_zErrMsg))) != 0 {
			return ts + 429 /* "%s" */
		}
		return null
	}(), *(*uintptr)(unsafe.Pointer(_zErrMsg)))
	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_zErrMsg)))
	goto _opendb_out

_17:
	_rc = _282sqlite3BtreeOpen(tls, *(*uintptr)(unsafe.Pointer(_db)), *(*uintptr)(unsafe.Pointer(_zOpen)), _db, *(*uintptr)(unsafe.Pointer(_db + 32))+8, int32(0), int32((*(*uint32)(unsafe.Pointer(_flags)))|uint32(0x100)))
	if _rc == int32(0) {
		goto _19
	}

	if _rc != int32(3082) {
		goto _20
	}

	_rc = int32(7)
_20:
	_136sqlite3Error(tls, _db, _rc)
	goto _opendb_out

_19:
	_139sqlite3BtreeEnter(tls, *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_db + 32)) + 8)))
	*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_db + 32)) + 24)) = _283sqlite3SchemaGet(tls, _db, *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_db + 32)) + 8)))
	if (*(*uint8)(unsafe.Pointer(_db + 97))) != 0 {
		goto _21
	}

	*(*uint8)(unsafe.Pointer(_db + 94)) = *(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_db + 32)) + 24))) + 113))
_21:
	_169sqlite3BtreeLeave(tls, *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_db + 32)) + 8)))
	*(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32) + 24)) = _283sqlite3SchemaGet(tls, _db, null)
	*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_db + 32)))) = ts + 1432 /* "main" */
	*(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_db + 32)) + 16)) = uint8(3)
	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32)) = ts + 9787 /* "temp" */
	*(*uint8)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32) + 16)) = uint8(0x1)
	*(*uint32)(unsafe.Pointer(_db + 112)) = uint32(0xa029a697)
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _22
	}

	goto _opendb_out

_22:
	_136sqlite3Error(tls, _db, int32(0))
	_284sqlite3RegisterPerConnectionBuiltinFunctions(tls, _db)
	_rc = Xsqlite3_errcode(tls, _db)
	if _rc != int32(0) {
		goto _23
	}

	_285sqlite3AutoLoadExtensions(tls, _db)
	_rc = Xsqlite3_errcode(tls, _db)
	if _rc == int32(0) {
		goto _24
	}

	goto _opendb_out

_24:
_23:
	if _rc == 0 {
		goto _25
	}

	_136sqlite3Error(tls, _db, _rc)
_25:
	_286setupLookaside(tls, _db, null, *(*int32)(unsafe.Pointer(_28sqlite3Config + 32)), *(*int32)(unsafe.Pointer(_28sqlite3Config + 36)))
	Xsqlite3_wal_autocheckpoint(tls, _db, int32(1000))
	goto _opendb_out
_opendb_out:
	if _db == 0 {
		goto _26
	}

	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
_26:
	_rc = Xsqlite3_errcode(tls, _db)

	if _rc != int32(7) {
		goto _27
	}

	Xsqlite3_close(tls, _db)
	_db = null
	goto _28

_27:
	if _rc == int32(0) {
		goto _29
	}

	*(*uint32)(unsafe.Pointer(_db + 112)) = uint32(0x4b771290)
_29:
_28:
	*(*uintptr)(unsafe.Pointer(_ppDb)) = _db
	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_zOpen)))
	return _rc & int32(0xff)
}

// _122sqlite3SafetyCheckSickOrOk is defined at sqlite3.c:29395:20
func _122sqlite3SafetyCheckSickOrOk(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */) (r int32) {
	var _magic uint32

	_magic = *(*uint32)(unsafe.Pointer(_db + 112))
	if _magic == uint32(0x4b771290) || _magic == uint32(0xa029a697) || _magic == uint32(0xf03b7906) {
		goto _1
	}

	_287logBadConnection(tls, ts+12638 /* "invalid" */)
	return int32(0)

	goto _2

_1:
	return int32(1)

_2:
	return r
}

// _123sqlite3ErrStr is defined at sqlite3.c:143384:27
func _123sqlite3ErrStr(tls crt.TLS, _rc int32) (r uintptr /* *int8 */) {
	var _zErr uintptr // *int8

	_zErr = ts + 12646 /* "unknown error" */
	switch _rc {
	case int32(516):
		goto _2
	default:
		goto _3
	}
_2:
	_zErr = ts + 12660 /* "abort due to ROLLBACK" */
	goto _1

_3:
	_rc = int32(_rc & int32(0xff))
	if _rc < int32(0) || _rc >= int32(27) || (*(*uintptr)(unsafe.Pointer(_288aMsg + 8*uintptr(_rc)))) == 0 {
		goto _4
	}

	_zErr = *(*uintptr)(unsafe.Pointer(_288aMsg + 8*uintptr(_rc)))
_4:
	goto _1

_1:
	return _zErr
}

// Xsqlite3_value_text is defined at sqlite3.c:77122:32
func Xsqlite3_value_text(tls crt.TLS, _pVal uintptr /* *Tsqlite3_value = Ssqlite3_value */) (r uintptr /* *uint8 */) {
	return _289sqlite3ValueText(tls, _pVal, uint8(1))
}

// _124readfileFunc is defined at shell.c:1554:13
func _124readfileFunc(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _argc int32, _argv uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	var (
		_zName uintptr // *int8
		_in    uintptr // *TFILE = S_IO_FILE
		_nIn   int64
		_pBuf  uintptr // *void
	)

	_zName = Xsqlite3_value_text(tls, *(*uintptr)(unsafe.Pointer(_argv)))
	if _zName != 0 {
		goto _1
	}

	return

_1:
	_in = crt.Xfopen64(tls, _zName, ts+1058 /* "rb" */)
	if _in != 0 {
		goto _2
	}

	return

_2:
	crt.Xfseek(tls, _in, int64(0), int32(2))
	_nIn = crt.Xftell(tls, _in)
	crt.Xrewind(tls, _in)
	_pBuf = Xsqlite3_malloc(tls, int32(_nIn))
	if _pBuf == 0 || uint64(1) != crt.Xfread(tls, _pBuf, uint64(_nIn), uint64(1), _in) {
		goto _3
	}

	Xsqlite3_result_blob(tls, _context, _pBuf, int32(_nIn), fp18(Xsqlite3_free))
	goto _4

_3:
	Xsqlite3_free(tls, _pBuf)
_4:
	crt.Xfclose(tls, _in)
}

// _125writefileFunc is defined at shell.c:1587:13
func _125writefileFunc(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _argc int32, _argv uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	var (
		_out   uintptr // *TFILE = S_IO_FILE
		_z     uintptr // *int8
		_rc    int64
		_zFile uintptr // *int8
	)

	_zFile = Xsqlite3_value_text(tls, *(*uintptr)(unsafe.Pointer(_argv)))
	if _zFile != 0 {
		goto _1
	}

	return

_1:
	_out = crt.Xfopen64(tls, _zFile, ts+10120 /* "wb" */)
	if _out != 0 {
		goto _2
	}

	return

_2:
	_z = Xsqlite3_value_blob(tls, *(*uintptr)(unsafe.Pointer(_argv + 8)))
	if _z != 0 {
		goto _3
	}

	_rc = int64(0)
	goto _4

_3:
	_rc = int64(crt.Xfwrite(tls, _z, uint64(1), uint64(Xsqlite3_value_bytes(tls, *(*uintptr)(unsafe.Pointer(_argv + 8)))), _out))
_4:
	crt.Xfclose(tls, _out)
	Xsqlite3_result_int64(tls, _context, _rc)
}

// _126sha3Func is defined at shell.c:1311:13
func _126sha3Func(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _argc int32, _argv uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	esc := crt.MustMalloc(1616)
	var (
		_cx    = esc // *TSHA3Context = SSHA3Context
		_eType int32
		_nByte int32
		_iSize int32
	)
	defer crt.Free(esc)
	_eType = Xsqlite3_value_type(tls, *(*uintptr)(unsafe.Pointer(_argv)))
	_nByte = Xsqlite3_value_bytes(tls, *(*uintptr)(unsafe.Pointer(_argv)))
	if _argc != int32(1) {
		goto _1
	}

	_iSize = int32(256)
	goto _2

_1:
	_iSize = Xsqlite3_value_int(tls, *(*uintptr)(unsafe.Pointer(_argv + 8)))
	if _iSize == int32(224) || _iSize == int32(256) || _iSize == int32(384) || _iSize == int32(512) {
		goto _3
	}

	Xsqlite3_result_error(tls, _context, ts+12682 /* "SHA3 size should be one of: 224 ..." */, int32(-1))
	return

_3:
_2:
	if _eType != int32(5) {
		goto _4
	}

	return

_4:
	_290SHA3Init(tls, _cx, _iSize)
	if _eType != int32(4) {
		goto _5
	}

	_291SHA3Update(tls, _cx, Xsqlite3_value_blob(tls, *(*uintptr)(unsafe.Pointer(_argv))), uint32(_nByte))
	goto _6

_5:
	_291SHA3Update(tls, _cx, Xsqlite3_value_text(tls, *(*uintptr)(unsafe.Pointer(_argv))), uint32(_nByte))
_6:
	Xsqlite3_result_blob(tls, _context, _292SHA3Final(tls, _cx), _iSize/int32(8), uintptr(18446744073709551615))
}

// _127sha3QueryFunc is defined at shell.c:1390:13
func _127sha3QueryFunc(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _argc int32, _argv uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	esc := crt.MustMalloc(1736)
	var (
		_db    uintptr    // *Tsqlite3 = Ssqlite3
		_zSql  = esc      // **int8
		_pStmt = esc + 16 // **Tsqlite3_stmt = Ssqlite3_stmt
		_nCol  int32
		_i     int32
		_rc    int32
		_n     int32
		_z     uintptr    // *int8
		_cx    = esc + 32 // *TSHA3Context = SSHA3Context
		_iSize int32
		_zMsg  uintptr      // *int8
		_1zMsg uintptr      // *int8
		_u     = esc + 1648 // *Tsqlite3_uint64 = Tsqlite_uint64 = uint64
		_j     int32
		_x     = esc + 1664 // *[9]uint8
		_v     = esc + 1680 // *Tsqlite3_int64 = Tsqlite_int64 = int64
		_2u    = esc + 1696 // *Tsqlite3_uint64 = Tsqlite_uint64 = uint64
		_3j    int32
		_4x    = esc + 1712 // *[9]uint8
		_r     = esc + 1728 // *float64
		_n2    int32
		_z2    uintptr // *uint8
		_5n2   int32
		_6z2   uintptr // *uint8
	)
	defer crt.Free(esc)
	_db = Xsqlite3_context_db_handle(tls, _context)
	*(*uintptr)(unsafe.Pointer(_zSql)) = Xsqlite3_value_text(tls, *(*uintptr)(unsafe.Pointer(_argv)))
	*(*uintptr)(unsafe.Pointer(_pStmt)) = 0
	if _argc != int32(1) {
		goto _1
	}

	_iSize = int32(256)
	goto _2

_1:
	_iSize = Xsqlite3_value_int(tls, *(*uintptr)(unsafe.Pointer(_argv + 8)))
	if _iSize == int32(224) || _iSize == int32(256) || _iSize == int32(384) || _iSize == int32(512) {
		goto _3
	}

	Xsqlite3_result_error(tls, _context, ts+12682 /* "SHA3 size should be one of: 224 ..." */, int32(-1))
	return

_3:
_2:
	if (*(*uintptr)(unsafe.Pointer(_zSql))) != 0 {
		goto _4
	}

	return

_4:
	_290SHA3Init(tls, _cx, _iSize)
_5:
	if (*(*int8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_zSql))))) == 0 {
		goto _6
	}

	_rc = Xsqlite3_prepare_v2(tls, _db, *(*uintptr)(unsafe.Pointer(_zSql)), int32(-1), _pStmt, _zSql)
	if _rc == 0 {
		goto _7
	}

	_zMsg = Xsqlite3_mprintf(tls, ts+12726 /* "error SQL statement [%s]: %s" */, *(*uintptr)(unsafe.Pointer(_zSql)), Xsqlite3_errmsg(tls, _db))
	Xsqlite3_finalize(tls, *(*uintptr)(unsafe.Pointer(_pStmt)))
	Xsqlite3_result_error(tls, _context, _zMsg, int32(-1))
	Xsqlite3_free(tls, _zMsg)
	return

_7:
	if Xsqlite3_stmt_readonly(tls, *(*uintptr)(unsafe.Pointer(_pStmt))) != 0 {
		goto _8
	}

	_1zMsg = Xsqlite3_mprintf(tls, ts+12755 /* "non-query: [%s]" */, Xsqlite3_sql(tls, *(*uintptr)(unsafe.Pointer(_pStmt))))
	Xsqlite3_finalize(tls, *(*uintptr)(unsafe.Pointer(_pStmt)))
	Xsqlite3_result_error(tls, _context, _1zMsg, int32(-1))
	Xsqlite3_free(tls, _1zMsg)
	return

_8:
	_nCol = Xsqlite3_column_count(tls, *(*uintptr)(unsafe.Pointer(_pStmt)))
	_z = Xsqlite3_sql(tls, *(*uintptr)(unsafe.Pointer(_pStmt)))
	_n = int32(crt.Xstrlen(tls, _z))
	_293hash_step_vformat(tls, _cx, ts+12771 /* "S%d:" */, _n)
	_291SHA3Update(tls, _cx, _z, uint32(_n))
_9:
	if int32(100) != Xsqlite3_step(tls, *(*uintptr)(unsafe.Pointer(_pStmt))) {
		goto _10
	}

	_291SHA3Update(tls, _cx, ts+12776 /* "R" */, uint32(1))
	_i = int32(0)
_11:
	if _i >= _nCol {
		goto _13
	}

	switch Xsqlite3_column_type(tls, *(*uintptr)(unsafe.Pointer(_pStmt)), _i) {
	case int32(5):
		goto _15
	case int32(1):
		goto _16
	case int32(2):
		goto _17
	case int32(3):
		goto _18
	case int32(4):
		goto _19
	}
	goto _14

_15:
	_291SHA3Update(tls, _cx, ts+12778 /* "N" */, uint32(1))
	goto _14

_16:
	*(*int64)(unsafe.Pointer(_v)) = Xsqlite3_column_int64(tls, *(*uintptr)(unsafe.Pointer(_pStmt)), _i)
	crt.Xmemcpy(tls, _u, _v, uint64(8))
	_j = int32(8)
_20:
	if _j < int32(1) {
		goto _22
	}

	*(*uint8)(unsafe.Pointer(_x + uintptr(_j))) = uint8((*(*uint64)(unsafe.Pointer(_u))) & uint64(0xff))
	*(*uint64)(unsafe.Pointer(_u)) = uint64((*(*uint64)(unsafe.Pointer(_u))) >> uint32(8))
	_j--
	goto _20

_22:
	*(*uint8)(unsafe.Pointer(_x)) = uint8('I')
	_291SHA3Update(tls, _cx, _x, uint32(9))
	goto _14

_17:
	*(*float64)(unsafe.Pointer(_r)) = Xsqlite3_column_double(tls, *(*uintptr)(unsafe.Pointer(_pStmt)), _i)
	crt.Xmemcpy(tls, _2u, _r, uint64(8))
	_3j = int32(8)
_23:
	if _3j < int32(1) {
		goto _25
	}

	*(*uint8)(unsafe.Pointer(_4x + uintptr(_3j))) = uint8((*(*uint64)(unsafe.Pointer(_2u))) & uint64(0xff))
	*(*uint64)(unsafe.Pointer(_2u)) = uint64((*(*uint64)(unsafe.Pointer(_2u))) >> uint32(8))
	_3j--
	goto _23

_25:
	*(*uint8)(unsafe.Pointer(_4x)) = uint8('F')
	_291SHA3Update(tls, _cx, _4x, uint32(9))
	goto _14

_18:
	_n2 = Xsqlite3_column_bytes(tls, *(*uintptr)(unsafe.Pointer(_pStmt)), _i)
	_z2 = Xsqlite3_column_text(tls, *(*uintptr)(unsafe.Pointer(_pStmt)), _i)
	_293hash_step_vformat(tls, _cx, ts+12780 /* "T%d:" */, _n2)
	_291SHA3Update(tls, _cx, _z2, uint32(_n2))
	goto _14

_19:
	_5n2 = Xsqlite3_column_bytes(tls, *(*uintptr)(unsafe.Pointer(_pStmt)), _i)
	_6z2 = Xsqlite3_column_blob(tls, *(*uintptr)(unsafe.Pointer(_pStmt)), _i)
	_293hash_step_vformat(tls, _cx, ts+12785 /* "B%d:" */, _5n2)
	_291SHA3Update(tls, _cx, _6z2, uint32(_5n2))
	goto _14

_14:
	_i++
	goto _11

_13:
	goto _9

_10:
	Xsqlite3_finalize(tls, *(*uintptr)(unsafe.Pointer(_pStmt)))
	goto _5

_6:
	Xsqlite3_result_blob(tls, _context, _292SHA3Final(tls, _cx), _iSize/int32(8), uintptr(18446744073709551615))
}

// Xsqlite3CompletionVtabInit is defined at shell.c:2133:5
func Xsqlite3CompletionVtabInit(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */) (r int32) {
	var _rc int32

	_rc = int32(0)
	_rc = Xsqlite3_create_module(tls, _db, ts+12790 /* "completion" */, _294completionModule, null)
	return _rc
}

// Xsqlite3_create_function_v2 is defined at sqlite3.c:143703:16
func Xsqlite3_create_function_v2(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _zFunc uintptr /* *int8 */, _nArg int32, _enc int32, _p uintptr /* *void */, _xSFunc uintptr /* *func(crt.TLS, uintptr, int32, uintptr) */, _xStep uintptr /* *func(crt.TLS, uintptr, int32, uintptr) */, _xFinal uintptr /* *func(crt.TLS, uintptr) */, _xDestroy uintptr /* *func(crt.TLS, uintptr) */) (r int32) {
	var (
		_rc   int32
		_pArg uintptr // *TFuncDestructor = SFuncDestructor
	)
	_rc = int32(1)
	_pArg = 0
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	if _xDestroy == 0 {
		goto _1
	}

	_pArg = _295sqlite3DbMallocZero(tls, _db, uint64(24))
	if _pArg != 0 {
		goto _2
	}

	fn16(_xDestroy)(tls, _p)
	goto _out

_2:
	*(*uintptr)(unsafe.Pointer(_pArg + 8)) = _xDestroy
	*(*uintptr)(unsafe.Pointer(_pArg + 16)) = _p
_1:
	_rc = _296sqlite3CreateFunc(tls, _db, _zFunc, _nArg, _enc, _p, _xSFunc, _xStep, _xFinal, _pArg)
	if _pArg == 0 || (*(*int32)(unsafe.Pointer(_pArg))) != int32(0) {
		goto _3
	}

	fn16(_xDestroy)(tls, _p)
	_181sqlite3DbFree(tls, _db, _pArg)
_3:
	goto _out
_out:
	_rc = _182sqlite3ApiExit(tls, _db, _rc)
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	return _rc
}

// _128__func__ [19]int8, escapes: true, shell.c:773:2
var _128__func__ = ds + 5850

// _129aPrefix [6]*int8, escapes: true, shell.c:774:21
var _129aPrefix = bss + 1576 // array of 6 pointer to char

func init() {
	*(*[6]uintptr)(unsafe.Pointer(_129aPrefix)) = [6]uintptr{
		0: ts + 12801, /* "TABLE" */
		1: ts + 12807, /* "INDEX" */
		2: ts + 12813, /* "UNIQUE INDEX" */
		3: ts + 12826, /* "VIEW" */
		4: ts + 12831, /* "TRIGGER" */
		5: ts + 12839, /* "VIRTUAL TABLE" */
	}
}

// Xsqlite3_result_text is defined at sqlite3.c:77318:17
func Xsqlite3_result_text(tls crt.TLS, _pCtx uintptr /* *Tsqlite3_context = Ssqlite3_context */, _z uintptr /* *int8 */, _n int32, _xDel uintptr /* *func(crt.TLS, uintptr) */) {
	_297setResultStrOrError(tls, _pCtx, _z, _n, uint8(1), _xDel)
}

// Xsqlite3_result_value is defined at sqlite3.c:77372:17
func Xsqlite3_result_value(tls crt.TLS, _pCtx uintptr /* *Tsqlite3_context = Ssqlite3_context */, _pValue uintptr /* *Tsqlite3_value = Ssqlite3_value */) {
	_298sqlite3VdbeMemCopy(tls, *(*uintptr)(unsafe.Pointer(_pCtx)), _pValue)
}

// Xsqlite3_vmprintf is defined at sqlite3.c:26506:17
func Xsqlite3_vmprintf(tls crt.TLS, _zFormat uintptr /* *int8 */, _ap *[]interface{}) (r uintptr /* *int8 */) {
	esc := crt.MustMalloc(112)
	var (
		_z     uintptr    // *int8
		_zBase = esc      // *[70]int8
		_acc   = esc + 80 // *TStrAccum = SStrAccum
	)
	defer crt.Free(esc)
	if Xsqlite3_initialize(tls) == 0 {
		goto _1
	}

	return null

_1:
	_130sqlite3StrAccumInit(tls, _acc, null, _zBase, int32(70), int32(1000000000))
	_131sqlite3VXPrintf(tls, _acc, _zFormat, _ap)
	_z = _299sqlite3StrAccumFinish(tls, _acc)
	return _z
}

type SStrAccum struct {
	Xdb          uintptr // *Ssqlite3
	XzText       uintptr // *int8
	XnAlloc      uint32
	XmxAlloc     uint32
	XnChar       uint32
	XaccError    uint8
	XprintfFlags uint8
}

// _130sqlite3StrAccumInit is defined at sqlite3.c:26459:21
func _130sqlite3StrAccumInit(tls crt.TLS, _p uintptr /* *TStrAccum = SStrAccum */, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _zBase uintptr /* *int8 */, _n int32, _mx int32) {
	*(*uintptr)(unsafe.Pointer(_p + 8)) = _zBase
	*(*uintptr)(unsafe.Pointer(_p)) = _db
	*(*uint32)(unsafe.Pointer(_p + 16)) = uint32(_n)
	*(*uint32)(unsafe.Pointer(_p + 20)) = uint32(_mx)
	*(*uint32)(unsafe.Pointer(_p + 24)) = uint32(0)
	*(*uint8)(unsafe.Pointer(_p + 28)) = uint8(0)
	*(*uint8)(unsafe.Pointer(_p + 29)) = uint8(0)
}

// _131sqlite3VXPrintf is defined at sqlite3.c:25706:21
func _131sqlite3VXPrintf(tls crt.TLS, _pAccum uintptr /* *TStrAccum = SStrAccum */, _fmt uintptr /* *int8 */, _ap *[]interface{}) {
	esc := crt.MustMalloc(102)
	var (
		_c                  int32
		_bufpt              uintptr // *int8
		_precision          int32
		_length             int32
		_idx                int32
		_width              int32
		_flag_leftjustify   uint8
		_flag_prefix        uint8
		_flag_alternateform uint8
		_flag_altform2      uint8
		_flag_zeropad       uint8
		_flag_long          uint8
		_done               uint8
		_cThousand          uint8
		_xtype              uint8
		_bArgList           uint8
		_prefix             int8
		_longvalue          uint64
		_realvalue          = esc   // *float64
		_infop              uintptr // *Tet_info = struct{Xfmttype int8...8;Xcharset uint8;Xprefix uint8;}
		_zOut               uintptr // *int8
		_nOut               int32
		_zExtra             uintptr // *int8
		_exp                int32
		_e2                 int32
		_nsd                = esc + 16 // *int32
		_rounder            float64
		_flag_dp            uint8
		_flag_rtz           uint8
		_pArgList           uintptr    // *TPrintfArguments = SPrintfArguments
		_buf                = esc + 32 // *[70]int8
		_wx                 uint32
		_px                 uint32
		_v                  int64
		_n                  uint64
		_x                  int32
		_cset               uintptr // *int8
		_base               uint8
		_nn                 int32
		_ix                 int32
		_pre                uintptr // *int8
		_1x                 int8
		_scale              float64
		_i                  int32
		_nPad               int32
		_2i                 int32
		_j                  int32
		_k                  int32
		_3n                 int32
		_isnull             int32
		_needQuote          int32
		_ch                 int8
		_q                  int8
		_escarg             uintptr // *int8
		_pToken             uintptr // *TToken = SToken
		_pSrc               uintptr // *TSrcList = SSrcList
		_4k                 int32
		_pItem              uintptr // *SSrcList_item
	)
	defer crt.Free(esc)
	_xtype = uint8(17)
	_zExtra = 0
	_pArgList = 0
	_bufpt = null
	if (int32(*(*uint8)(unsafe.Pointer(_pAccum + 29))) & int32(0x2)) == int32(0) {
		goto _1
	}

	_pArgList = crt.VAuintptr(_ap)
	_bArgList = uint8(1)
	goto _2

_1:
	_bArgList = uint8(0)
_2:
_3:
	if set5(&_c, int32(*(*int8)(unsafe.Pointer(_fmt)))) == int32(0) {
		goto _5
	}

	if _c == int32('%') {
		goto _6
	}

	_bufpt = _fmt
_7:
	_fmt++
	if ((*(*int8)(unsafe.Pointer(_fmt))) != 0) && (int32(*(*int8)(unsafe.Pointer(_fmt))) != int32('%')) {
		goto _7
	}

	_301sqlite3StrAccumAppend(tls, _pAccum, _bufpt, int32(int64(_fmt-_bufpt)))
	if int32(*(*int8)(unsafe.Pointer(_fmt))) != int32(0) {
		goto _10
	}

	goto _5

_10:
_6:
	if set5(&_c, int32(*(*int8)(unsafe.Pointer(preinc40(&_fmt))))) != int32(0) {
		goto _11
	}

	_301sqlite3StrAccumAppend(tls, _pAccum, ts+7750 /* "%" */, int32(1))
	goto _5

_11:
	_flag_leftjustify = set23(&_flag_prefix, set23(&_cThousand, set23(&_flag_alternateform, set23(&_flag_altform2, set23(&_flag_zeropad, uint8(0))))))
	_done = uint8(0)
_12:
	switch _c {
	case int32('-'):
		goto _16
	case int32('+'):
		goto _17
	case int32(' '):
		goto _18
	case int32('#'):
		goto _19
	case int32('!'):
		goto _20
	case int32('0'):
		goto _21
	case int32(','):
		goto _22
	default:
		goto _23
	}
_16:
	_flag_leftjustify = uint8(1)
	goto _15

_17:
	_flag_prefix = uint8('+')
	goto _15

_18:
	_flag_prefix = uint8(' ')
	goto _15

_19:
	_flag_alternateform = uint8(1)
	goto _15

_20:
	_flag_altform2 = uint8(1)
	goto _15

_21:
	_flag_zeropad = uint8(1)
	goto _15

_22:
	_cThousand = uint8(',')
	goto _15

_23:
	_done = uint8(1)
	goto _15

_15:
	if (_done == 0) && (set5(&_c, int32(*(*int8)(unsafe.Pointer(preinc40(&_fmt))))) != int32(0)) {
		goto _12
	}

	if _c != int32('*') {
		goto _24
	}

	if _bArgList == 0 {
		goto _26
	}

	_width = int32(_302getIntArg(tls, _pArgList))
	goto _27

_26:
	_width = crt.VAint32(_ap)
_27:
	if _width >= int32(0) {
		goto _28
	}

	_flag_leftjustify = uint8(1)
	_width = func() int32 {
		if _width >= int32(-2147483647) {
			return -_width
		}
		return int32(0)
	}()
_28:
	_c = int32(*(*int8)(unsafe.Pointer(preinc40(&_fmt))))
	goto _25

_24:
	_wx = uint32(0)
_29:
	if _c < int32('0') || _c > int32('9') {
		goto _30
	}

	_wx = ((_wx * uint32(10)) + uint32(_c)) - uint32('0')
	_c = int32(*(*int8)(unsafe.Pointer(preinc40(&_fmt))))
	goto _29

_30:
	_width = int32(_wx & uint32(0x7fffffff))
_25:
	if _c != int32('.') {
		goto _31
	}

	_c = int32(*(*int8)(unsafe.Pointer(preinc40(&_fmt))))
	if _c != int32('*') {
		goto _33
	}

	if _bArgList == 0 {
		goto _35
	}

	_precision = int32(_302getIntArg(tls, _pArgList))
	goto _36

_35:
	_precision = crt.VAint32(_ap)
_36:
	_c = int32(*(*int8)(unsafe.Pointer(preinc40(&_fmt))))
	if _precision >= int32(0) {
		goto _37
	}

	_precision = func() int32 {
		if _precision >= int32(-2147483647) {
			return -_precision
		}
		return int32(-1)
	}()
_37:
	goto _34

_33:
	_px = uint32(0)
_38:
	if _c < int32('0') || _c > int32('9') {
		goto _39
	}

	_px = ((_px * uint32(10)) + uint32(_c)) - uint32('0')
	_c = int32(*(*int8)(unsafe.Pointer(preinc40(&_fmt))))
	goto _38

_39:
	_precision = int32(_px & uint32(0x7fffffff))
_34:
	goto _32

_31:
	_precision = int32(-1)
_32:
	if _c != int32('l') {
		goto _40
	}

	_flag_long = uint8(1)
	_c = int32(*(*int8)(unsafe.Pointer(preinc40(&_fmt))))
	if _c != int32('l') {
		goto _42
	}

	_flag_long = uint8(2)
	_c = int32(*(*int8)(unsafe.Pointer(preinc40(&_fmt))))
_42:
	goto _41

_40:
	_flag_long = uint8(0)
_41:
	_infop = _303fmtinfo
	_xtype = uint8(17)
	_idx = int32(0)
_43:
	if _idx >= int32(23) {
		goto _45
	}

	if _c != int32(*(*int8)(unsafe.Pointer(_303fmtinfo + 6*uintptr(_idx)))) {
		goto _46
	}

	_infop = _303fmtinfo + 6*uintptr(_idx)
	_xtype = *(*uint8)(unsafe.Pointer(_infop + 3))
	goto _45

_46:
	_idx++
	goto _43

_45:
	switch int32(_xtype) {
	case int32(13):
		goto _48
	case int32(15):
		goto _49
	case int32(0):
		goto _50
	case int32(16):
		goto _51
	case int32(1):
		goto _52
	case int32(2):
		goto _53
	case int32(3):
		goto _54
	case int32(4):
		goto _55
	case int32(7):
		goto _56
	case int32(8):
		goto _57
	case int32(5):
		goto _58
	case int32(6):
		goto _59
	case int32(9):
		goto _60
	case int32(10):
		goto _61
	case int32(14):
		goto _62
	case int32(11):
		goto _63
	case int32(12):
		goto _64
	default:
		goto _65
	}
_48:
	_flag_long = uint8(2)
_49:
_50:
	_cThousand = uint8(0)
_51:
	if (int32(*(*uint8)(unsafe.Pointer(_infop + 2))) & int32(1)) == 0 {
		goto _66
	}

	if _bArgList == 0 {
		goto _68
	}

	_v = int64(_302getIntArg(tls, _pArgList))
	goto _69

_68:
	if _flag_long == 0 {
		goto _70
	}

	if int32(_flag_long) != int32(2) {
		goto _72
	}

	_v = crt.VAint64(_ap)
	goto _73

_72:
	_v = int64(crt.VAint64(_ap))
_73:
	goto _71

_70:
	_v = int64(crt.VAint32(_ap))
_71:
_69:
	if _v >= int64(0) {
		goto _74
	}

	if _v != int64(-9223372036854775808) {
		goto _76
	}

	_longvalue = uint64(9223372036854775808)
	goto _77

_76:
	_longvalue = uint64(-_v)
_77:
	_prefix = int8('-')
	goto _75

_74:
	_longvalue = uint64(_v)
	_prefix = int8(_flag_prefix)
_75:
	goto _67

_66:
	if _bArgList == 0 {
		goto _78
	}

	_longvalue = uint64(_302getIntArg(tls, _pArgList))
	goto _79

_78:
	if _flag_long == 0 {
		goto _80
	}

	if int32(_flag_long) != int32(2) {
		goto _82
	}

	_longvalue = crt.VAuint64(_ap)
	goto _83

_82:
	_longvalue = uint64(crt.VAuint64(_ap))
_83:
	goto _81

_80:
	_longvalue = uint64(crt.VAuint32(_ap))
_81:
_79:
	_prefix = int8(0)
_67:
	if _longvalue != uint64(0) {
		goto _84
	}

	_flag_alternateform = uint8(0)
_84:
	if _flag_zeropad == 0 || _precision >= (_width-bool2int(int32(_prefix) != int32(0))) {
		goto _85
	}

	_precision = _width - bool2int(int32(_prefix) != int32(0))
_85:
	if _precision >= int32(37) {
		goto _86
	}

	_nOut = int32(70)
	_zOut = _buf
	goto _87

_86:
	_n = (uint64(_precision) + uint64(10)) + uint64(_precision/int32(3))
	_zOut = set4(&_zExtra, _198sqlite3Malloc(tls, _n))
	if _zOut != 0 {
		goto _88
	}

	_304setStrAccumError(tls, _pAccum, uint8(1))
	return

_88:
	_nOut = int32(_n)
_87:
	_bufpt = _zOut + uintptr(_nOut-int32(1))
	if int32(_xtype) != int32(15) {
		goto _89
	}

	_x = int32(_longvalue % uint64(10))
	if _x < int32(4) && ((_longvalue/uint64(10))%uint64(10)) != uint64(1) {
		goto _90
	}

	_x = int32(0)
_90:
	*(*int8)(unsafe.Pointer(preinc41(&_bufpt))) = *(*int8)(unsafe.Pointer(_300zOrd + uintptr((_x*int32(2))+int32(1))))
	*(*int8)(unsafe.Pointer(preinc41(&_bufpt))) = *(*int8)(unsafe.Pointer(_300zOrd + uintptr(_x*int32(2))))
_89:
	_cset = _305aDigits + uintptr(*(*uint8)(unsafe.Pointer(_infop + 4)))
	_base = uint8(*(*uint8)(unsafe.Pointer(_infop + 1)))
_91:
	*(*int8)(unsafe.Pointer(preinc41(&_bufpt))) = *(*int8)(unsafe.Pointer(_cset + uintptr(_longvalue%uint64(_base))))
	_longvalue = _longvalue / uint64(_base)
	if _longvalue > uint64(0) {
		goto _91
	}

	_length = int32(int64(_zOut + uintptr(_nOut-int32(1)) - _bufpt))
_94:
	if _precision <= _length {
		goto _95
	}

	*(*int8)(unsafe.Pointer(preinc41(&_bufpt))) = int8('0')
	_length++
	goto _94

_95:
	if _cThousand == 0 {
		goto _96
	}

	_nn = (_length - int32(1)) / int32(3)
	_ix = ((_length - int32(1)) % int32(3)) + int32(1)
	_bufpt -= uintptr(_nn)
	_idx = int32(0)
_97:
	if _nn <= int32(0) {
		goto _99
	}

	*(*int8)(unsafe.Pointer(_bufpt + uintptr(_idx))) = *(*int8)(unsafe.Pointer(_bufpt + uintptr(_idx+_nn)))
	_ix--
	if _ix != int32(0) {
		goto _100
	}

	*(*int8)(unsafe.Pointer(_bufpt + uintptr(preinc2(&_idx)))) = int8(_cThousand)
	_nn--
	_ix = int32(3)
_100:
	_idx++
	goto _97

_99:
_96:
	if _prefix == 0 {
		goto _101
	}

	*(*int8)(unsafe.Pointer(preinc41(&_bufpt))) = _prefix
_101:
	if _flag_alternateform == 0 || (*(*uint8)(unsafe.Pointer(_infop + 5))) == 0 {
		goto _102
	}

	_pre = _306aPrefix + uintptr(*(*uint8)(unsafe.Pointer(_infop + 5)))

_103:
	if int32(set15(&_1x, *(*int8)(unsafe.Pointer(_pre)))) == int32(0) {
		goto _105
	}

	*(*int8)(unsafe.Pointer(preinc41(&_bufpt))) = _1x
	_pre++
	goto _103

_105:
_102:
	_length = int32(int64(_zOut + uintptr(_nOut-int32(1)) - _bufpt))
	goto _47

_52:
_53:
_54:
	if _bArgList == 0 {
		goto _106
	}

	*(*float64)(unsafe.Pointer(_realvalue)) = float64(_307getDoubleArg(tls, _pArgList))
	goto _107

_106:
	*(*float64)(unsafe.Pointer(_realvalue)) = float64(crt.VAfloat64(_ap))
_107:
	if _precision >= int32(0) {
		goto _108
	}

	_precision = int32(6)
_108:
	if (*(*float64)(unsafe.Pointer(_realvalue))) >= float64(0) {
		goto _109
	}

	*(*float64)(unsafe.Pointer(_realvalue)) = -(*(*float64)(unsafe.Pointer(_realvalue)))
	_prefix = int8('-')
	goto _110

_109:
	_prefix = int8(_flag_prefix)
_110:
	if int32(_xtype) != int32(3) || _precision <= int32(0) {
		goto _111
	}

	_precision--
_111:
	_idx = _precision & int32(0xfff)
	_rounder = float64(0.5)
_112:
	if _idx <= int32(0) {
		goto _114
	}

	_idx--
	_rounder = float64(_rounder * float64(0.1))
	goto _112

_114:
	if int32(_xtype) != int32(1) {
		goto _115
	}

	*(*float64)(unsafe.Pointer(_realvalue)) = float64((*(*float64)(unsafe.Pointer(_realvalue))) + float64(_rounder))
_115:
	_exp = int32(0)
	if _308sqlite3IsNaN(tls, float64(*(*float64)(unsafe.Pointer(_realvalue)))) == 0 {
		goto _116
	}

	_bufpt = ts + 12853 /* "NaN" */
	_length = int32(3)
	goto _47

_116:
	if (*(*float64)(unsafe.Pointer(_realvalue))) <= float64(0) {
		goto _117
	}

	_scale = float64(1)
_118:
	if (*(*float64)(unsafe.Pointer(_realvalue))) < (float64(1e+100)*_scale) || _exp > int32(350) {
		goto _119
	}

	_scale = float64(_scale * float64(1e+100))
	_exp = int32(_exp + int32(100))
	goto _118

_119:
_120:
	if (*(*float64)(unsafe.Pointer(_realvalue))) < (float64(1e+10)*_scale) || _exp > int32(350) {
		goto _121
	}

	_scale = float64(_scale * float64(1e+10))
	_exp = int32(_exp + int32(10))
	goto _120

_121:
_122:
	if (*(*float64)(unsafe.Pointer(_realvalue))) < (float64(10)*_scale) || _exp > int32(350) {
		goto _123
	}

	_scale = float64(_scale * float64(10))
	_exp++
	goto _122

_123:
	*(*float64)(unsafe.Pointer(_realvalue)) = float64((*(*float64)(unsafe.Pointer(_realvalue))) / _scale)
_124:
	if (*(*float64)(unsafe.Pointer(_realvalue))) >= float64(1e-08) {
		goto _125
	}

	*(*float64)(unsafe.Pointer(_realvalue)) = float64((*(*float64)(unsafe.Pointer(_realvalue))) * float64(1e+08))
	_exp = int32(_exp - int32(8))
	goto _124

_125:
_126:
	if (*(*float64)(unsafe.Pointer(_realvalue))) >= float64(1) {
		goto _127
	}

	*(*float64)(unsafe.Pointer(_realvalue)) = float64((*(*float64)(unsafe.Pointer(_realvalue))) * float64(10))
	_exp--
	goto _126

_127:
	if _exp <= int32(350) {
		goto _128
	}

	_bufpt = _buf
	*(*int8)(unsafe.Pointer(_buf)) = _prefix
	crt.Xmemcpy(tls, _buf+uintptr(bool2int(int32(_prefix) != int32(0))), ts+12857 /* "Inf" */, uint64(4))
	_length = int32(3) + bool2int(int32(_prefix) != int32(0))
	goto _47

_128:
_117:
	_bufpt = _buf
	if int32(_xtype) == int32(1) {
		goto _129
	}

	*(*float64)(unsafe.Pointer(_realvalue)) = float64((*(*float64)(unsafe.Pointer(_realvalue))) + float64(_rounder))
	if (*(*float64)(unsafe.Pointer(_realvalue))) < float64(10) {
		goto _130
	}

	*(*float64)(unsafe.Pointer(_realvalue)) = float64((*(*float64)(unsafe.Pointer(_realvalue))) * float64(0.1))
	_exp++
_130:
_129:
	if int32(_xtype) != int32(3) {
		goto _131
	}

	_flag_rtz = uint8(bool2int(_flag_alternateform == 0))
	if _exp >= int32(-4) && _exp <= _precision {
		goto _133
	}

	_xtype = uint8(2)
	goto _134

_133:
	_precision = _precision - _exp
	_xtype = uint8(1)
_134:
	goto _132

_131:
	_flag_rtz = _flag_altform2
_132:
	if int32(_xtype) != int32(2) {
		goto _135
	}

	_e2 = int32(0)
	goto _136

_135:
	_e2 = _exp
_136:
	if ((int64(func() int32 {
		if _e2 > int32(0) {
			return _e2
		}
		return int32(0)
	}()) + int64(_precision)) + int64(_width)) <= int64(55) {
		goto _137
	}

	_bufpt = set4(&_zExtra, _198sqlite3Malloc(tls, uint64(((int64(func() int32 {
		if _e2 > int32(0) {
			return _e2
		}
		return int32(0)
	}())+int64(_precision))+int64(_width))+int64(15))))
	if _bufpt != 0 {
		goto _138
	}

	_304setStrAccumError(tls, _pAccum, uint8(1))
	return

_138:
_137:
	_zOut = _bufpt
	*(*int32)(unsafe.Pointer(_nsd)) = int32(16) + (int32(_flag_altform2) * int32(10))
	_flag_dp = uint8((func() int32 {
		if _precision > int32(0) {
			return int32(1)
		}
		return int32(0)
	}() | int32(_flag_alternateform)) | int32(_flag_altform2))
	if _prefix == 0 {
		goto _139
	}

	*(*int8)(unsafe.Pointer(postinc19(&_bufpt))) = _prefix
_139:
	if _e2 >= int32(0) {
		goto _140
	}

	*(*int8)(unsafe.Pointer(postinc19(&_bufpt))) = int8('0')
	goto _141

_140:
_142:
	if _e2 < int32(0) {
		goto _144
	}

	*(*int8)(unsafe.Pointer(postinc19(&_bufpt))) = _309et_getdigit(tls, _realvalue, _nsd)
	_e2--
	goto _142

_144:
_141:
	if _flag_dp == 0 {
		goto _145
	}

	*(*int8)(unsafe.Pointer(postinc19(&_bufpt))) = int8('.')
_145:
	_e2++
_146:
	if _e2 >= int32(0) {
		goto _148
	}

	*(*int8)(unsafe.Pointer(postinc19(&_bufpt))) = int8('0')
	_precision--
	_e2++
	goto _146

_148:
_149:
	if postinc24(&_precision) <= int32(0) {
		goto _150
	}

	*(*int8)(unsafe.Pointer(postinc19(&_bufpt))) = _309et_getdigit(tls, _realvalue, _nsd)
	goto _149

_150:
	if _flag_rtz == 0 || _flag_dp == 0 {
		goto _151
	}

_152:
	if int32(*(*int8)(unsafe.Pointer(_bufpt - 1))) != int32('0') {
		goto _153
	}

	*(*int8)(unsafe.Pointer(preinc41(&_bufpt))) = int8(0)
	goto _152

_153:
	if int32(*(*int8)(unsafe.Pointer(_bufpt - 1))) != int32('.') {
		goto _154
	}

	if _flag_altform2 == 0 {
		goto _155
	}

	*(*int8)(unsafe.Pointer(postinc19(&_bufpt))) = int8('0')
	goto _156

_155:
	*(*int8)(unsafe.Pointer(preinc41(&_bufpt))) = int8(0)
_156:
_154:
_151:
	if int32(_xtype) != int32(2) {
		goto _157
	}

	*(*int8)(unsafe.Pointer(postinc19(&_bufpt))) = *(*int8)(unsafe.Pointer(_305aDigits + uintptr(*(*uint8)(unsafe.Pointer(_infop + 4)))))
	if _exp >= int32(0) {
		goto _158
	}

	*(*int8)(unsafe.Pointer(postinc19(&_bufpt))) = int8('-')
	_exp = -_exp
	goto _159

_158:
	*(*int8)(unsafe.Pointer(postinc19(&_bufpt))) = int8('+')
_159:
	if _exp < int32(100) {
		goto _160
	}

	*(*int8)(unsafe.Pointer(postinc19(&_bufpt))) = int8((_exp / int32(100)) + int32('0'))
	_exp = int32(_exp % int32(100))
_160:
	*(*int8)(unsafe.Pointer(postinc19(&_bufpt))) = int8((_exp / int32(10)) + int32('0'))
	*(*int8)(unsafe.Pointer(postinc19(&_bufpt))) = int8((_exp % int32(10)) + int32('0'))
_157:
	*(*int8)(unsafe.Pointer(_bufpt)) = int8(0)
	_length = int32(int64(_bufpt - _zOut))
	_bufpt = _zOut
	if _flag_zeropad == 0 || _flag_leftjustify != 0 || _length >= _width {
		goto _161
	}

	_nPad = _width - _length
	_i = _width
_162:
	if _i < _nPad {
		goto _164
	}

	*(*int8)(unsafe.Pointer(_bufpt + uintptr(_i))) = *(*int8)(unsafe.Pointer(_bufpt + uintptr(_i-_nPad)))
	_i--
	goto _162

_164:
	_i = bool2int(int32(_prefix) != int32(0))
_165:
	if postinc24(&_nPad) == 0 {
		goto _166
	}

	*(*int8)(unsafe.Pointer(_bufpt + uintptr(postinc7(&_i)))) = int8('0')
	goto _165

_166:
	_length = _width
_161:
	goto _47

_55:
	if _bArgList != 0 {
		goto _167
	}

	*(*int32)(unsafe.Pointer(crt.VAuintptr(_ap))) = int32(*(*uint32)(unsafe.Pointer(_pAccum + 24)))
_167:
	_length = set5(&_width, int32(0))
	goto _47

_56:
	*(*int8)(unsafe.Pointer(_buf)) = int8('%')
	_bufpt = _buf
	_length = int32(1)
	goto _47

_57:
	if _bArgList == 0 {
		goto _168
	}

	_bufpt = _310getTextArg(tls, _pArgList)
	_c = func() int32 {
		if _bufpt != 0 {
			return int32(*(*int8)(unsafe.Pointer(_bufpt)))
		}
		return int32(0)
	}()
	goto _169

_168:
	_c = crt.VAint32(_ap)
_169:
	if _precision <= int32(1) {
		goto _170
	}

	_width = int32(_width - (_precision - int32(1)))
	if _width <= int32(1) || _flag_leftjustify != 0 {
		goto _171
	}

	_311sqlite3AppendChar(tls, _pAccum, _width-int32(1), int8(' '))
	_width = int32(0)
_171:
	_311sqlite3AppendChar(tls, _pAccum, _precision-int32(1), int8(_c))
_170:
	_length = int32(1)
	*(*int8)(unsafe.Pointer(_buf)) = int8(_c)
	_bufpt = _buf
	goto _47

_58:
_59:
	if _bArgList == 0 {
		goto _172
	}

	_bufpt = _310getTextArg(tls, _pArgList)
	_xtype = uint8(5)
	goto _173

_172:
	_bufpt = crt.VAuintptr(_ap)
_173:
	if _bufpt != 0 {
		goto _174
	}

	_bufpt = ts + 4553 /* "" */
	goto _175

_174:
	if int32(_xtype) != int32(6) {
		goto _176
	}

	_zExtra = _bufpt
_176:
_175:
	if _precision < int32(0) {
		goto _177
	}

	_length = int32(0)
_179:
	if _length >= _precision || (*(*int8)(unsafe.Pointer(_bufpt + uintptr(_length)))) == 0 {
		goto _181
	}

	_length++
	goto _179

_181:
	goto _178

_177:
	_length = int32(0x7fffffff) & int32(crt.Xstrlen(tls, _bufpt))
_178:
	goto _47

_60:
_61:
_62:
	_q = int8(func() int32 {
		if int32(_xtype) == int32(14) {
			return int32('"')
		}
		return int32('\'')
	}())
	if _bArgList == 0 {
		goto _182
	}

	_escarg = _310getTextArg(tls, _pArgList)
	goto _183

_182:
	_escarg = crt.VAuintptr(_ap)
_183:
	_isnull = bool2int(_escarg == 0)
	if _isnull == 0 {
		goto _184
	}

	_escarg = func() uintptr {
		if int32(_xtype) == int32(10) {
			return ts + 8837 /* "NULL" */
		}
		return ts + 12861 /* "(NULL)" */
	}()
_184:
	_k = _precision
	_2i = set5(&_3n, int32(0))
_185:
	if _k == int32(0) || int32(set15(&_ch, *(*int8)(unsafe.Pointer(_escarg + uintptr(_2i))))) == int32(0) {
		goto _187
	}

	if int32(_ch) != int32(_q) {
		goto _188
	}

	_3n++
_188:
	_2i++
	_k--
	goto _185

_187:
	_needQuote = bool2int((_isnull == 0) && (int32(_xtype) == int32(10)))
	_3n = int32(_3n + (_2i + int32(3)))
	if _3n <= int32(70) {
		goto _189
	}

	_bufpt = set4(&_zExtra, _198sqlite3Malloc(tls, uint64(_3n)))
	if _bufpt != 0 {
		goto _191
	}

	_304setStrAccumError(tls, _pAccum, uint8(1))
	return

_191:
	goto _190

_189:
	_bufpt = _buf
_190:
	_j = int32(0)
	if _needQuote == 0 {
		goto _192
	}

	*(*int8)(unsafe.Pointer(_bufpt + uintptr(postinc7(&_j)))) = _q
_192:
	_k = _2i
	_2i = int32(0)
_193:
	if _2i >= _k {
		goto _195
	}

	*(*int8)(unsafe.Pointer(_bufpt + uintptr(postinc7(&_j)))) = set15(&_ch, *(*int8)(unsafe.Pointer(_escarg + uintptr(_2i))))
	if int32(_ch) != int32(_q) {
		goto _196
	}

	*(*int8)(unsafe.Pointer(_bufpt + uintptr(postinc7(&_j)))) = _ch
_196:
	_2i++
	goto _193

_195:
	if _needQuote == 0 {
		goto _197
	}

	*(*int8)(unsafe.Pointer(_bufpt + uintptr(postinc7(&_j)))) = _q
_197:
	*(*int8)(unsafe.Pointer(_bufpt + uintptr(_j))) = int8(0)
	_length = _j
	goto _47

_63:
	if (int32(*(*uint8)(unsafe.Pointer(_pAccum + 29))) & int32(0x1)) != int32(0) {
		goto _198
	}

	return

_198:
	_pToken = crt.VAuintptr(_ap)

	if _pToken == 0 || (*(*uint32)(unsafe.Pointer(_pToken + 8))) == 0 {
		goto _199
	}

	_301sqlite3StrAccumAppend(tls, _pAccum, *(*uintptr)(unsafe.Pointer(_pToken)), int32(*(*uint32)(unsafe.Pointer(_pToken + 8))))
_199:
	_length = set5(&_width, int32(0))
	goto _47

_64:
	if (int32(*(*uint8)(unsafe.Pointer(_pAccum + 29))) & int32(0x1)) != int32(0) {
		goto _200
	}

	return

_200:
	_pSrc = crt.VAuintptr(_ap)
	_4k = crt.VAint32(_ap)
	_pItem = (_pSrc + 8) + 112*uintptr(_4k)

	if (*(*uintptr)(unsafe.Pointer(_pItem + 8))) == 0 {
		goto _201
	}

	_312sqlite3StrAccumAppendAll(tls, _pAccum, *(*uintptr)(unsafe.Pointer(_pItem + 8)))
	_301sqlite3StrAccumAppend(tls, _pAccum, ts+12868 /* "." */, int32(1))
_201:
	_312sqlite3StrAccumAppendAll(tls, _pAccum, *(*uintptr)(unsafe.Pointer(_pItem + 16)))
	_length = set5(&_width, int32(0))
	goto _47

_65:
	return

_47:
	_width = int32(_width - _length)
	if _width <= int32(0) {
		goto _202
	}

	if _flag_leftjustify != 0 {
		goto _204
	}

	_311sqlite3AppendChar(tls, _pAccum, _width, int8(' '))
_204:
	_301sqlite3StrAccumAppend(tls, _pAccum, _bufpt, _length)
	if _flag_leftjustify == 0 {
		goto _205
	}

	_311sqlite3AppendChar(tls, _pAccum, _width, int8(' '))
_205:
	goto _203

_202:
	_301sqlite3StrAccumAppend(tls, _pAccum, _bufpt, _length)
_203:
	if _zExtra == 0 {
		goto _206
	}

	_181sqlite3DbFree(tls, *(*uintptr)(unsafe.Pointer(_pAccum)), _zExtra)
	_zExtra = null
_206:
	_fmt++
	goto _3

_5:
}

// _132sqlite3ExpirePreparedStatements is defined at sqlite3.c:76717:21
func _132sqlite3ExpirePreparedStatements(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */) {
	var _p uintptr // *TVdbe = SVdbe

	_p = *(*uintptr)(unsafe.Pointer(_db + 8))
_1:
	if _p == 0 {
		goto _3
	}

	set42b(&(*(*uint16)(unsafe.Pointer(_p + 194))), uint32(1))
	_p = *(*uintptr)(unsafe.Pointer(_p + 16))
	goto _1

_3:
}

// _133azAction [34]*int8, escapes: true, shell.c:2594:21
var _133azAction = bss + 1624 // array of 34 pointer to char

func init() {
	*(*[34]uintptr)(unsafe.Pointer(_133azAction)) = [34]uintptr{
		1:  ts + 12870, /* "CREATE_INDEX" */
		2:  ts + 12883, /* "CREATE_TABLE" */
		3:  ts + 12896, /* "CREATE_TEMP_INDEX" */
		4:  ts + 12914, /* "CREATE_TEMP_TABLE" */
		5:  ts + 12932, /* "CREATE_TEMP_TRIGGER" */
		6:  ts + 12952, /* "CREATE_TEMP_VIEW" */
		7:  ts + 12969, /* "CREATE_TRIGGER" */
		8:  ts + 12984, /* "CREATE_VIEW" */
		9:  ts + 12996, /* "DELETE" */
		10: ts + 13003, /* "DROP_INDEX" */
		11: ts + 13014, /* "DROP_TABLE" */
		12: ts + 13025, /* "DROP_TEMP_INDEX" */
		13: ts + 13041, /* "DROP_TEMP_TABLE" */
		14: ts + 13057, /* "DROP_TEMP_TRIGGER" */
		15: ts + 13075, /* "DROP_TEMP_VIEW" */
		16: ts + 13090, /* "DROP_TRIGGER" */
		17: ts + 13103, /* "DROP_VIEW" */
		18: ts + 13113, /* "INSERT" */
		19: ts + 13120, /* "PRAGMA" */
		20: ts + 13127, /* "READ" */
		21: ts + 13132, /* "SELECT" */
		22: ts + 13139, /* "TRANSACTION" */
		23: ts + 13151, /* "UPDATE" */
		24: ts + 13158, /* "ATTACH" */
		25: ts + 13165, /* "DETACH" */
		26: ts + 13172, /* "ALTER_TABLE" */
		27: ts + 13184, /* "REINDEX" */
		28: ts + 13192, /* "ANALYZE" */
		29: ts + 13200, /* "CREATE_VTABLE" */
		30: ts + 13214, /* "DROP_VTABLE" */
		31: ts + 13226, /* "FUNCTION" */
		32: ts + 13235, /* "SAVEPOINT" */
		33: ts + 13245, /* "RECURSIVE" */
	}
}

type Ssqlite3_backup struct {
	XpDestDb     uintptr // *Ssqlite3
	XpDest       uintptr // *SBtree
	XiDestSchema uint32
	XbDestLocked int32
	XiNext       uint32
	XpSrcDb      uintptr // *Ssqlite3
	XpSrc        uintptr // *SBtree
	Xrc          int32
	XnRemaining  uint32
	XnPagecount  uint32
	XisAttached  int32
	XpNext       uintptr // *Ssqlite3_backup
}

// _134sqlite3ErrorWithMsg is defined at sqlite3.c:28309:21
func _134sqlite3ErrorWithMsg(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _err_code int32, _zFormat uintptr /* *int8 */, ap ...interface{}) {
	var (
		_z  uintptr        // *int8
		_ap *[]interface{} // Tva_list = T__gnuc_va_list = T__...a_list = *struct{X_ [2]uintptr;}
	)

	*(*int32)(unsafe.Pointer(_db + 80)) = _err_code
	_313sqlite3SystemError(tls, _db, _err_code)
	if _zFormat != 0 {
		goto _1
	}

	_136sqlite3Error(tls, _db, _err_code)
	goto _2

_1:
	if (*(*uintptr)(unsafe.Pointer(_db + 336))) == 0 && set4(&(*(*uintptr)(unsafe.Pointer(_db + 336))), _314sqlite3ValueNew(tls, _db)) == 0 {
		goto _3
	}

	{
		x := ap
		_ap = &x
	}
	_z = _315sqlite3VMPrintf(tls, _db, _zFormat, _ap)
	_ap = nil
	_316sqlite3ValueSetStr(tls, *(*uintptr)(unsafe.Pointer(_db + 336)), int32(-1), _z, uint8(1), fp10(_109sqlite3MallocSize))
_3:
_2:
}

// _135sqlite3MallocZero is defined at sqlite3.c:25274:21
func _135sqlite3MallocZero(tls crt.TLS, _n uint64) (r uintptr /* *void */) {
	var _p uintptr // *void

	_p = _198sqlite3Malloc(tls, _n)
	if _p == 0 {
		goto _1
	}

	crt.Xmemset(tls, _p, int32(0), uint64(_n))
_1:
	return _p
}

// _136sqlite3Error is defined at sqlite3.c:28270:21
func _136sqlite3Error(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _err_code int32) {
	*(*int32)(unsafe.Pointer(_db + 80)) = _err_code
	if _err_code == 0 && (*(*uintptr)(unsafe.Pointer(_db + 336))) == 0 {
		goto _1
	}

	_317sqlite3ErrorFinish(tls, _db, _err_code)
_1:
}

// _137findBtree is defined at sqlite3.c:69697:14
func _137findBtree(tls crt.TLS, _pErrorDb uintptr /* *Tsqlite3 = Ssqlite3 */, _pDb uintptr /* *Tsqlite3 = Ssqlite3 */, _zDb uintptr /* *int8 */) (r uintptr /* *TBtree = SBtree */) {
	esc := crt.MustMalloc(592)
	var (
		_i      int32
		_sParse = esc // *TParse = SParse
		_rc     int32
	)
	defer crt.Free(esc)
	_i = _213sqlite3FindDbName(tls, _pDb, _zDb)
	if _i != int32(1) {
		goto _1
	}

	_rc = int32(0)
	crt.Xmemset(tls, _sParse, int32(0), uint64(592))
	*(*uintptr)(unsafe.Pointer(_sParse)) = _pDb
	if _318sqlite3OpenTempDatabase(tls, _sParse) == 0 {
		goto _2
	}

	_134sqlite3ErrorWithMsg(tls, _pErrorDb, *(*int32)(unsafe.Pointer(_sParse + 24)), ts+429 /* "%s" */, *(*uintptr)(unsafe.Pointer(_sParse + 8)))
	_rc = int32(1)
_2:
	_181sqlite3DbFree(tls, _pErrorDb, *(*uintptr)(unsafe.Pointer(_sParse + 8)))
	_319sqlite3ParserReset(tls, _sParse)
	if _rc == 0 {
		goto _3
	}

	return null

_3:
_1:
	if _i >= int32(0) {
		goto _4
	}

	_134sqlite3ErrorWithMsg(tls, _pErrorDb, int32(1), ts+13255 /* "unknown database %s" */, _zDb)
	return null

_4:
	return *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pDb + 32))) + 32*uintptr(_i)) + 8))
}

// _138checkReadTransaction is defined at sqlite3.c:69740:12
func _138checkReadTransaction(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _p uintptr /* *TBtree = SBtree */) (r int32) {
	if _142sqlite3BtreeIsInReadTrans(tls, _p) == 0 {
		goto _1
	}

	_134sqlite3ErrorWithMsg(tls, _db, int32(1), ts+13275 /* "destination database is in use" */)
	return int32(1)

_1:
	return int32(0)
}

type SPager struct {
	XpVfs              uintptr // *Ssqlite3_vfs
	XexclusiveMode     uint8
	XjournalMode       uint8
	XuseJournal        uint8
	XnoSync            uint8
	XfullSync          uint8
	XextraSync         uint8
	XsyncFlags         uint8
	XwalSyncFlags      uint8
	XtempFile          uint8
	XnoLock            uint8
	XreadOnly          uint8
	XmemDb             uint8
	XeState            uint8
	XeLock             uint8
	XchangeCountDone   uint8
	XsetMaster         uint8
	XdoNotSpill        uint8
	XsubjInMemory      uint8
	XbUseFetch         uint8
	XhasHeldSharedLock uint8
	XdbSize            uint32
	XdbOrigSize        uint32
	XdbFileSize        uint32
	XdbHintSize        uint32
	XerrCode           int32
	XnRec              int32
	XcksumInit         uint32
	XnSubRec           uint32
	XpInJournal        uintptr // *SBitvec
	Xfd                uintptr // *Ssqlite3_file
	Xjfd               uintptr // *Ssqlite3_file
	Xsjfd              uintptr // *Ssqlite3_file
	XjournalOff        int64
	XjournalHdr        int64
	XpBackup           uintptr // *Ssqlite3_backup
	XaSavepoint        uintptr // *SPagerSavepoint
	XnSavepoint        int32
	XiDataVersion      uint32
	XdbFileVers        [16]int8
	XnMmapOut          int32
	XszMmap            int64
	XpMmapFreelist     uintptr // *SPgHdr
	XnExtra            uint16
	XnReserve          int16
	XvfsFlags          uint32
	XsectorSize        uint32
	XpageSize          int32
	XmxPgno            uint32
	XjournalSizeLimit  int64
	XzFilename         uintptr // *int8
	XzJournal          uintptr // *int8
	XxBusyHandler      uintptr // *func(crt.TLS, uintptr) int32
	XpBusyHandlerArg   uintptr // uintptr
	XaStat             [3]int32
	XxReiniter         uintptr // *func(crt.TLS, uintptr)
	XxGet              uintptr // *func(crt.TLS, uintptr, uint32, uintptr, int32) int32
	XpTmpSpace         uintptr // *int8
	XpPCache           uintptr // *SPCache
	XpWal              uintptr // *SWal
	XzWal              uintptr // *int8
}

type SPgHdr struct {
	XpPage      uintptr // *Ssqlite3_pcache_page
	XpData      uintptr // uintptr
	XpExtra     uintptr // uintptr
	XpCache     uintptr // *SPCache
	XpDirty     uintptr // *SPgHdr
	XpPager     uintptr // *SPager
	Xpgno       uint32
	Xflags      uint16
	XnRef       int16
	XpDirtyNext uintptr // *SPgHdr
	XpDirtyPrev uintptr // *SPgHdr
}

type Ssqlite3_file struct {
	XpMethods uintptr // *Ssqlite3_io_methods
}

// _139sqlite3BtreeEnter is defined at sqlite3.c:59433:21
func _139sqlite3BtreeEnter(tls crt.TLS, _p uintptr /* *TBtree = SBtree */) {
	if (*(*uint8)(unsafe.Pointer(_p + 17))) != 0 {
		goto _1
	}

	return

_1:
	(*(*int32)(unsafe.Pointer(_p + 20)))++
	if (*(*uint8)(unsafe.Pointer(_p + 18))) == 0 {
		goto _2
	}

	return

_2:
	_320btreeLockCarefully(tls, _p)
}

// _140isFatalError is defined at sqlite3.c:69833:12
func _140isFatalError(tls crt.TLS, _rc int32) (r int32) {
	return bool2int(((_rc != int32(0)) && (_rc != int32(5))) && (_rc != int32(6)))
}

// _141sqlite3BtreePager is defined at sqlite3.c:68707:22
func _141sqlite3BtreePager(tls crt.TLS, _p uintptr /* *TBtree = SBtree */) (r uintptr /* *TPager = SPager */) {
	return *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_p + 8))))
}

// _142sqlite3BtreeIsInReadTrans is defined at sqlite3.c:69390:20
func _142sqlite3BtreeIsInReadTrans(tls crt.TLS, _p uintptr /* *TBtree = SBtree */) (r int32) {
	return bool2int(int32(*(*uint8)(unsafe.Pointer(_p + 16))) != int32(0))
}

// _143sqlite3BtreeBeginTrans is defined at sqlite3.c:62936:20
func _143sqlite3BtreeBeginTrans(tls crt.TLS, _p uintptr /* *TBtree = SBtree */, _wrflag int32) (r int32) {
	var (
		_pBt    uintptr // *TBtShared = SBtShared
		_rc     int32
		_pBlock uintptr // *Tsqlite3 = Ssqlite3
		_pIter  uintptr // *TBtLock = SBtLock
		_pPage1 uintptr // *TMemPage = SMemPage
	)
	_pBt = *(*uintptr)(unsafe.Pointer(_p + 8))
	_rc = int32(0)
	_139sqlite3BtreeEnter(tls, _p)

	if int32(*(*uint8)(unsafe.Pointer(_p + 16))) != int32(2) && (int32(*(*uint8)(unsafe.Pointer(_p + 16))) != int32(1) || _wrflag != 0) {
		goto _1
	}

	goto _trans_begun

_1:
	if (int32(*(*uint16)(unsafe.Pointer(_pBt + 38)))&int32(0x1)) == int32(0) || _wrflag == 0 {
		goto _2
	}

	_rc = int32(8)
	goto _trans_begun

_2:
	_pBlock = 0
	if (_wrflag == 0 || int32(*(*uint8)(unsafe.Pointer(_pBt + 36))) != int32(2)) && (int32(*(*uint16)(unsafe.Pointer(_pBt + 38)))&int32(0x80)) == int32(0) {
		goto _3
	}

	_pBlock = *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pBt + 120))))
	goto _4

_3:
	if _wrflag <= int32(1) {
		goto _5
	}

	_pIter = *(*uintptr)(unsafe.Pointer(_pBt + 112))
_6:
	if _pIter == 0 {
		goto _8
	}

	if (*(*uintptr)(unsafe.Pointer(_pIter))) == _p {
		goto _9
	}

	_pBlock = *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pIter))))
	goto _8

_9:
	_pIter = *(*uintptr)(unsafe.Pointer(_pIter + 16))
	goto _6

_8:
_5:
_4:
	if _pBlock == 0 {
		goto _10
	}

	_rc = int32(262)
	goto _trans_begun

_10:
	_rc = _321querySharedCacheTableLock(tls, _p, uint32(1), uint8(1))
	if int32(0) == _rc {
		goto _11
	}

	goto _trans_begun

_11:
	{
		p := &(*(*uint16)(unsafe.Pointer(_pBt + 38)))
		*p = uint16(int32(*p) & int32(-17))
	}
	if (*(*uint32)(unsafe.Pointer(_pBt + 60))) != uint32(0) {
		goto _12
	}

	{
		p := &(*(*uint16)(unsafe.Pointer(_pBt + 38)))
		*p = uint16(int32(*p) | int32(0x10))
	}
_12:
_13:
_16:
	if (*(*uintptr)(unsafe.Pointer(_pBt + 24))) != 0 || int32(0) != set5(&_rc, _322lockBtree(tls, _pBt)) {
		goto _17
	}

	goto _16

_17:
	if _rc != int32(0) || _wrflag == 0 {
		goto _18
	}

	if (int32(*(*uint16)(unsafe.Pointer(_pBt + 38))) & int32(0x1)) == int32(0) {
		goto _19
	}

	_rc = int32(8)
	goto _20

_19:
	_rc = _323sqlite3PagerBegin(tls, *(*uintptr)(unsafe.Pointer(_pBt)), bool2int(_wrflag > int32(1)), _324sqlite3TempInMemory(tls, *(*uintptr)(unsafe.Pointer(_p))))
	if _rc != int32(0) {
		goto _21
	}

	_rc = _325newDatabase(tls, _pBt)
_21:
_20:
_18:
	if _rc == int32(0) {
		goto _22
	}

	_326unlockBtreeIfUnused(tls, _pBt)
_22:
	if (((_rc & int32(0xff)) == int32(5)) && (int32(*(*uint8)(unsafe.Pointer(_pBt + 36))) == int32(0))) && (_327btreeInvokeBusyHandler(tls, _pBt) != 0) {
		goto _13
	}

	if _rc != int32(0) {
		goto _23
	}

	if int32(*(*uint8)(unsafe.Pointer(_p + 16))) != int32(0) {
		goto _24
	}

	(*(*int32)(unsafe.Pointer(_pBt + 56)))++
	if (*(*uint8)(unsafe.Pointer(_p + 17))) == 0 {
		goto _25
	}

	*(*uint8)(unsafe.Pointer((_p + 48) + 12)) = uint8(1)
	*(*uintptr)(unsafe.Pointer((_p + 48) + 16)) = *(*uintptr)(unsafe.Pointer(_pBt + 112))
	*(*uintptr)(unsafe.Pointer(_pBt + 112)) = _p + 48
_25:
_24:
	*(*uint8)(unsafe.Pointer(_p + 16)) = uint8(func() int32 {
		if _wrflag != 0 {
			return int32(2)
		}
		return int32(1)
	}())
	if int32(*(*uint8)(unsafe.Pointer(_p + 16))) <= int32(*(*uint8)(unsafe.Pointer(_pBt + 36))) {
		goto _26
	}

	*(*uint8)(unsafe.Pointer(_pBt + 36)) = *(*uint8)(unsafe.Pointer(_p + 16))
_26:
	if _wrflag == 0 {
		goto _27
	}

	_pPage1 = *(*uintptr)(unsafe.Pointer(_pBt + 24))

	*(*uintptr)(unsafe.Pointer(_pBt + 120)) = _p
	{
		p := &(*(*uint16)(unsafe.Pointer(_pBt + 38)))
		*p = uint16(int32(*p) & int32(-65))
	}
	if _wrflag <= int32(1) {
		goto _28
	}

	{
		p := &(*(*uint16)(unsafe.Pointer(_pBt + 38)))
		*p = uint16(int32(*p) | int32(0x40))
	}
_28:
	if (*(*uint32)(unsafe.Pointer(_pBt + 60))) == _328sqlite3Get4byte(tls, (*(*uintptr)(unsafe.Pointer(_pPage1 + 80)))+28) {
		goto _29
	}

	_rc = _161sqlite3PagerWrite(tls, *(*uintptr)(unsafe.Pointer(_pPage1 + 112)))
	if _rc != int32(0) {
		goto _30
	}

	_329sqlite3Put4byte(tls, (*(*uintptr)(unsafe.Pointer(_pPage1 + 80)))+28, *(*uint32)(unsafe.Pointer(_pBt + 60)))
_30:
_29:
_27:
_23:
	goto _trans_begun
_trans_begun:
	if _rc != int32(0) || _wrflag == 0 {
		goto _31
	}

	_rc = _330sqlite3PagerOpenSavepoint(tls, *(*uintptr)(unsafe.Pointer(_pBt)), *(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p))) + 644)))
_31:
	_169sqlite3BtreeLeave(tls, _p)
	return _rc
}

// _144setDestPgsz is defined at sqlite3.c:69728:12
func _144setDestPgsz(tls crt.TLS, _p uintptr /* *Tsqlite3_backup = Ssqlite3_backup */) (r int32) {
	var _rc int32

	_rc = _210sqlite3BtreeSetPageSize(tls, *(*uintptr)(unsafe.Pointer(_p + 8)), _146sqlite3BtreeGetPageSize(tls, *(*uintptr)(unsafe.Pointer(_p + 40))), int32(-1), int32(0))
	return _rc
}

// _145sqlite3BtreeGetMeta is defined at sqlite3.c:68574:21
func _145sqlite3BtreeGetMeta(tls crt.TLS, _p uintptr /* *TBtree = SBtree */, _idx int32, _pMeta uintptr /* *Tu32 = uint32 */) {
	var _pBt uintptr // *TBtShared = SBtShared

	_pBt = *(*uintptr)(unsafe.Pointer(_p + 8))
	_139sqlite3BtreeEnter(tls, _p)

	if _idx != int32(15) {
		goto _1
	}

	*(*uint32)(unsafe.Pointer(_pMeta)) = _331sqlite3PagerDataVersion(tls, *(*uintptr)(unsafe.Pointer(_pBt))) + (*(*uint32)(unsafe.Pointer(_p + 28)))
	goto _2

_1:
	*(*uint32)(unsafe.Pointer(_pMeta)) = _328sqlite3Get4byte(tls, (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pBt + 24))) + 80)))+uintptr(int32(36)+(_idx*int32(4))))
_2:
	_169sqlite3BtreeLeave(tls, _p)
}

// _146sqlite3BtreeGetPageSize is defined at sqlite3.c:62457:20
func _146sqlite3BtreeGetPageSize(tls crt.TLS, _p uintptr /* *TBtree = SBtree */) (r int32) {
	return int32(*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 8))) + 48)))
}

// _147sqlite3PagerGetJournalMode is defined at sqlite3.c:54815:20
func _147sqlite3PagerGetJournalMode(tls crt.TLS, _pPager uintptr /* *TPager = SPager */) (r int32) {
	return int32(*(*uint8)(unsafe.Pointer(_pPager + 9)))
}

// _148sqlite3BtreeLastPage is defined at sqlite3.c:61714:20
func _148sqlite3BtreeLastPage(tls crt.TLS, _p uintptr /* *TBtree = SBtree */) (r uint32) {
	return _332btreePagecount(tls, *(*uintptr)(unsafe.Pointer(_p + 8)))
}

// _149sqlite3PendingByte int32, escapes: false, sqlite3.c:18481:20
var _149sqlite3PendingByte = int32(0x40000000)

// _150sqlite3PagerGet is defined at sqlite3.c:53096:20
func _150sqlite3PagerGet(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _pgno uint32, _ppPage uintptr /* **TDbPage = SPgHdr */, _flags int32) (r int32) {
	return fn43(*(*uintptr)(unsafe.Pointer(_pPager + 264)))(tls, _pPager, _pgno, _ppPage, _flags)
}

// _151backupOnePage is defined at sqlite3.c:69842:12
func _151backupOnePage(tls crt.TLS, _p uintptr /* *Tsqlite3_backup = Ssqlite3_backup */, _iSrcPg uint32, _zSrcData uintptr /* *Tu8 = uint8 */, _bUpdate int32) (r int32) {
	esc := crt.MustMalloc(8)
	var (
		_pDestPager uintptr // *TPager = SPager
		_nSrcPgsz   int32
		_nDestPgsz  int32
		_nCopy      int32
		_iEnd       int64
		_rc         int32
		_iOff       int64
		_pDestPg    = esc // **TDbPage = SPgHdr
		_iDest      uint32
		_zIn        uintptr // *Tu8 = uint8
		_zDestData  uintptr // *Tu8 = uint8
		_zOut       uintptr // *Tu8 = uint8
	)
	defer crt.Free(esc)
	_pDestPager = _141sqlite3BtreePager(tls, *(*uintptr)(unsafe.Pointer(_p + 8)))
	_nSrcPgsz = _146sqlite3BtreeGetPageSize(tls, *(*uintptr)(unsafe.Pointer(_p + 40)))
	_nDestPgsz = _146sqlite3BtreeGetPageSize(tls, *(*uintptr)(unsafe.Pointer(_p + 8)))
	_nCopy = func() int32 {
		if _nSrcPgsz < _nDestPgsz {
			return _nSrcPgsz
		}
		return _nDestPgsz
	}()
	_iEnd = int64(_iSrcPg) * int64(_nSrcPgsz)
	_rc = int32(0)

	if _nSrcPgsz == _nDestPgsz || _333sqlite3PagerIsMemdb(tls, _pDestPager) == 0 {
		goto _1
	}

	_rc = int32(8)
_1:
	_iOff = _iEnd - int64(_nSrcPgsz)
_2:
	if _rc != int32(0) || _iOff >= _iEnd {
		goto _4
	}

	*(*uintptr)(unsafe.Pointer(_pDestPg)) = 0
	_iDest = uint32(_iOff/int64(_nDestPgsz)) + uint32(1)
	if _iDest != (uint32(_149sqlite3PendingByte)/(*(*uint32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 8))) + 8)) + 48))))+uint32(1) {
		goto _5
	}

	goto _3

_5:
	if int32(0) != set5(&_rc, _150sqlite3PagerGet(tls, _pDestPager, _iDest, _pDestPg, int32(0))) || int32(0) != set5(&_rc, _161sqlite3PagerWrite(tls, *(*uintptr)(unsafe.Pointer(_pDestPg)))) {
		goto _6
	}

	_zIn = _zSrcData + uintptr(_iOff%int64(_nSrcPgsz))
	_zDestData = _152sqlite3PagerGetData(tls, *(*uintptr)(unsafe.Pointer(_pDestPg)))
	_zOut = _zDestData + uintptr(_iOff%int64(_nDestPgsz))
	crt.Xmemcpy(tls, _zOut, _zIn, uint64(_nCopy))
	*(*uint8)(unsafe.Pointer(_334sqlite3PagerGetExtra(tls, *(*uintptr)(unsafe.Pointer(_pDestPg))))) = uint8(0)
	if _iOff != int64(0) || _bUpdate != int32(0) {
		goto _7
	}

	_329sqlite3Put4byte(tls, _zOut+28, _148sqlite3BtreeLastPage(tls, *(*uintptr)(unsafe.Pointer(_p + 40))))
_7:
_6:
	_153sqlite3PagerUnref(tls, *(*uintptr)(unsafe.Pointer(_pDestPg)))

_3:
	_iOff = int64(_iOff + int64(_nDestPgsz))
	goto _2

_4:
	return _rc
}

// _152sqlite3PagerGetData is defined at sqlite3.c:54661:21
func _152sqlite3PagerGetData(tls crt.TLS, _pPg uintptr /* *TDbPage = SPgHdr */) (r uintptr /* *void */) {
	return *(*uintptr)(unsafe.Pointer(_pPg + 8))
}

// _153sqlite3PagerUnref is defined at sqlite3.c:53151:21
func _153sqlite3PagerUnref(tls crt.TLS, _pPg uintptr /* *TDbPage = SPgHdr */) {
	if _pPg == 0 {
		goto _1
	}

	_335sqlite3PagerUnrefNotNull(tls, _pPg)
_1:
}

// _154attachBackupObject is defined at sqlite3.c:69951:13
func _154attachBackupObject(tls crt.TLS, _p uintptr /* *Tsqlite3_backup = Ssqlite3_backup */) {
	var _pp uintptr // **Tsqlite3_backup = Ssqlite3_backup

	_pp = _170sqlite3PagerBackupPtr(tls, _141sqlite3BtreePager(tls, *(*uintptr)(unsafe.Pointer(_p + 40))))
	*(*uintptr)(unsafe.Pointer(_p + 64)) = *(*uintptr)(unsafe.Pointer(_pp))
	*(*uintptr)(unsafe.Pointer(_pp)) = _p
	*(*int32)(unsafe.Pointer(_p + 60)) = int32(1)
}

// _155sqlite3BtreeNewDb is defined at sqlite3.c:62892:20
func _155sqlite3BtreeNewDb(tls crt.TLS, _p uintptr /* *TBtree = SBtree */) (r int32) {
	var _rc int32

	_139sqlite3BtreeEnter(tls, _p)
	*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 8))) + 60)) = uint32(0)
	_rc = _325newDatabase(tls, *(*uintptr)(unsafe.Pointer(_p + 8)))
	_169sqlite3BtreeLeave(tls, _p)
	return _rc
}

// _156sqlite3BtreeUpdateMeta is defined at sqlite3.c:68604:20
func _156sqlite3BtreeUpdateMeta(tls crt.TLS, _p uintptr /* *TBtree = SBtree */, _idx int32, _iMeta uint32) (r int32) {
	var (
		_pBt uintptr // *TBtShared = SBtShared
		_pP1 uintptr // *uint8
		_rc  int32
	)
	_pBt = *(*uintptr)(unsafe.Pointer(_p + 8))

	_139sqlite3BtreeEnter(tls, _p)

	_pP1 = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pBt + 24))) + 80))
	_rc = _161sqlite3PagerWrite(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pBt + 24))) + 112)))
	if _rc != int32(0) {
		goto _1
	}

	_329sqlite3Put4byte(tls, _pP1+uintptr(int32(36)+(_idx*int32(4))), _iMeta)
	if _idx != int32(7) {
		goto _2
	}

	*(*uint8)(unsafe.Pointer(_pBt + 34)) = uint8(_iMeta)
_2:
_1:
	_169sqlite3BtreeLeave(tls, _p)
	return _rc
}

// _157sqlite3ResetAllSchemasOfConnection is defined at sqlite3.c:101241:21
func _157sqlite3ResetAllSchemasOfConnection(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */) {
	var (
		_i   int32
		_pDb uintptr // *TDb = SDb
	)
	_219sqlite3BtreeEnterAll(tls, _db)

	_i = int32(0)
_1:
	if _i >= (*(*int32)(unsafe.Pointer(_db + 40))) {
		goto _3
	}

	_pDb = (*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_i)
	if (*(*uintptr)(unsafe.Pointer(_pDb + 24))) == 0 {
		goto _4
	}

	_336sqlite3SchemaClear(tls, *(*uintptr)(unsafe.Pointer(_pDb + 24)))
_4:
	_i++
	goto _1

_3:
	{
		p := &(*(*uint32)(unsafe.Pointer(_db + 44)))
		*p = uint32(uint32(*p) & uint32(4294967294))
	}
	_337sqlite3VtabUnlockList(tls, _db)
	_225sqlite3BtreeLeaveAll(tls, _db)
	_338sqlite3CollapseDatabaseArray(tls, _db)
}

// _158sqlite3BtreeSetVersion is defined at sqlite3.c:69544:20
func _158sqlite3BtreeSetVersion(tls crt.TLS, _pBtree uintptr /* *TBtree = SBtree */, _iVersion int32) (r int32) {
	var (
		_pBt   uintptr // *TBtShared = SBtShared
		_rc    int32
		_aData uintptr // *Tu8 = uint8
	)
	_pBt = *(*uintptr)(unsafe.Pointer(_pBtree + 8))

	{
		p := &(*(*uint16)(unsafe.Pointer(_pBt + 38)))
		*p = uint16(int32(*p) & int32(-33))
	}
	if _iVersion != int32(1) {
		goto _1
	}

	{
		p := &(*(*uint16)(unsafe.Pointer(_pBt + 38)))
		*p = uint16(int32(*p) | int32(0x20))
	}
_1:
	_rc = _143sqlite3BtreeBeginTrans(tls, _pBtree, int32(0))
	if _rc != int32(0) {
		goto _2
	}

	_aData = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pBt + 24))) + 80))
	if int32(*(*uint8)(unsafe.Pointer(_aData + 18))) == int32(uint8(_iVersion)) && int32(*(*uint8)(unsafe.Pointer(_aData + 19))) == int32(uint8(_iVersion)) {
		goto _3
	}

	_rc = _143sqlite3BtreeBeginTrans(tls, _pBtree, int32(2))
	if _rc != int32(0) {
		goto _4
	}

	_rc = _161sqlite3PagerWrite(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pBt + 24))) + 112)))
	if _rc != int32(0) {
		goto _5
	}

	*(*uint8)(unsafe.Pointer(_aData + 18)) = uint8(_iVersion)
	*(*uint8)(unsafe.Pointer(_aData + 19)) = uint8(_iVersion)
_5:
_4:
_3:
_2:
	{
		p := &(*(*uint16)(unsafe.Pointer(_pBt + 38)))
		*p = uint16(int32(*p) & int32(-33))
	}
	return _rc
}

// _159sqlite3PagerFile is defined at sqlite3.c:54425:29
func _159sqlite3PagerFile(tls crt.TLS, _pPager uintptr /* *TPager = SPager */) (r uintptr /* *Tsqlite3_file = Ssqlite3_file */) {
	return *(*uintptr)(unsafe.Pointer(_pPager + 72))
}

// _160sqlite3PagerPagecount is defined at sqlite3.c:51380:21
func _160sqlite3PagerPagecount(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _pnPage uintptr /* *int32 */) {
	*(*int32)(unsafe.Pointer(_pnPage)) = int32(*(*uint32)(unsafe.Pointer(_pPager + 28)))
}

// _161sqlite3PagerWrite is defined at sqlite3.c:53587:20
func _161sqlite3PagerWrite(tls crt.TLS, _pPg uintptr /* *TPgHdr = SPgHdr */) (r int32) {
	var _pPager uintptr // *TPager = SPager

	_pPager = *(*uintptr)(unsafe.Pointer(_pPg + 40))

	if (int32(*(*uint16)(unsafe.Pointer(_pPg + 52)))&int32(0x4)) == int32(0) || (*(*uint32)(unsafe.Pointer(_pPager + 28))) < (*(*uint32)(unsafe.Pointer(_pPg + 48))) {
		goto _1
	}

	if (*(*int32)(unsafe.Pointer(_pPager + 128))) == 0 {
		goto _3
	}

	return _339subjournalPageIfRequired(tls, _pPg)

_3:
	return int32(0)

	goto _2

_1:
	if (*(*int32)(unsafe.Pointer(_pPager + 44))) == 0 {
		goto _4
	}

	return *(*int32)(unsafe.Pointer(_pPager + 44))

	goto _5

_4:
	if (*(*uint32)(unsafe.Pointer(_pPager + 184))) <= uint32(*(*int32)(unsafe.Pointer(_pPager + 188))) {
		goto _6
	}

	return _340pagerWriteLargeSector(tls, _pPg)

	goto _7

_6:
	return _341pager_write(tls, _pPg)

_7:
_5:
_2:
	return r
}

// _162sqlite3PagerCommitPhaseOne is defined at sqlite3.c:53821:20
func _162sqlite3PagerCommitPhaseOne(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _zMaster uintptr /* *int8 */, _noSync int32) (r int32) {
	esc := crt.MustMalloc(8)
	var (
		_rc       int32
		_pList    uintptr // *TPgHdr = SPgHdr
		_pPageOne = esc   // **TPgHdr = SPgHdr
		_fd       uintptr // *Tsqlite3_file = Ssqlite3_file
		_nNew     uint32
	)
	defer crt.Free(esc)
	_rc = int32(0)

	if *(*int32)(unsafe.Pointer(_pPager + 44)) == 0 {
		goto _1
	}

	return *(*int32)(unsafe.Pointer(_pPager + 44))

_1:
	if _208sqlite3FaultSim(tls, int32(400)) == 0 {
		goto _2
	}

	return int32(10)

_2:
	if int32(*(*uint8)(unsafe.Pointer(_pPager + 20))) >= int32(3) {
		goto _3
	}

	return int32(0)

_3:
	if int32(0) != _342pagerFlushOnCommit(tls, _pPager, int32(1)) {
		goto _4
	}

	_343sqlite3BackupRestart(tls, *(*uintptr)(unsafe.Pointer(_pPager + 112)))
	goto _5

_4:
	if (*(*uintptr)(unsafe.Pointer(_pPager + 288))) == 0 {
		goto _6
	}

	_pList = _344sqlite3PcacheDirtyList(tls, *(*uintptr)(unsafe.Pointer(_pPager + 280)))
	*(*uintptr)(unsafe.Pointer(_pPageOne)) = 0
	if _pList != 0 {
		goto _8
	}

	_rc = _150sqlite3PagerGet(tls, _pPager, uint32(1), _pPageOne, int32(0))
	_pList = *(*uintptr)(unsafe.Pointer(_pPageOne))
	*(*uintptr)(unsafe.Pointer(_pList + 32)) = null
_8:
	if _pList == 0 {
		goto _9
	}

	_rc = _345pagerWalFrames(tls, _pPager, _pList, *(*uint32)(unsafe.Pointer(_pPager + 28)), int32(1))
_9:
	_153sqlite3PagerUnref(tls, *(*uintptr)(unsafe.Pointer(_pPageOne)))
	if _rc != int32(0) {
		goto _10
	}

	_346sqlite3PcacheCleanAll(tls, *(*uintptr)(unsafe.Pointer(_pPager + 280)))
_10:
	goto _7

_6:
	_fd = *(*uintptr)(unsafe.Pointer(_pPager + 72))
	_rc = _347pager_incr_changecounter(tls, _pPager, int32(0))
	if _rc == int32(0) {
		goto _11
	}

	goto _commit_phase_one_exit

_11:
	_rc = _348writeMasterJournal(tls, _pPager, _zMaster)
	if _rc == int32(0) {
		goto _12
	}

	goto _commit_phase_one_exit

_12:
	_rc = _349syncJournal(tls, _pPager, int32(0))
	if _rc == int32(0) {
		goto _13
	}

	goto _commit_phase_one_exit

_13:
	goto _14

	if _rc == int32(0) {
		goto _15
	}

	goto _commit_phase_one_exit

_15:
_14:
	_rc = _350pager_write_pagelist(tls, _pPager, _344sqlite3PcacheDirtyList(tls, *(*uintptr)(unsafe.Pointer(_pPager + 280))))

	goto _16

	if _rc != int32(0) {
		goto _17
	}

	goto _18

_17:
	_235sqlite3OsFileControl(tls, _fd, int32(33), null)
_18:
_16:
	if _rc == int32(0) {
		goto _19
	}

	goto _commit_phase_one_exit

_19:
	_346sqlite3PcacheCleanAll(tls, *(*uintptr)(unsafe.Pointer(_pPager + 280)))
	if (*(*uint32)(unsafe.Pointer(_pPager + 28))) <= (*(*uint32)(unsafe.Pointer(_pPager + 36))) {
		goto _20
	}

	_nNew = (*(*uint32)(unsafe.Pointer(_pPager + 28))) - uint32(bool2int((*(*uint32)(unsafe.Pointer(_pPager + 28))) == uint32((_149sqlite3PendingByte/(*(*int32)(unsafe.Pointer(_pPager + 188))))+int32(1))))

	_rc = _351pager_truncate(tls, _pPager, _nNew)
	if _rc == int32(0) {
		goto _21
	}

	goto _commit_phase_one_exit

_21:
_20:
	if _noSync != 0 {
		goto _22
	}

	_rc = _165sqlite3PagerSync(tls, _pPager, _zMaster)
_22:
_7:
_5:
	goto _commit_phase_one_exit
_commit_phase_one_exit:
	if _rc != int32(0) || (*(*uintptr)(unsafe.Pointer(_pPager + 288))) != 0 {
		goto _23
	}

	*(*uint8)(unsafe.Pointer(_pPager + 20)) = uint8(5)
_23:
	return _rc
}

// _163sqlite3OsWrite is defined at sqlite3.c:20784:20
func _163sqlite3OsWrite(tls crt.TLS, _id uintptr /* *Tsqlite3_file = Ssqlite3_file */, _pBuf uintptr /* *void */, _amt int32, _offset int64) (r int32) {
	return fn44(*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_id))) + 24)))(tls, _id, _pBuf, _amt, _offset)
}

// _164backupTruncateFile is defined at sqlite3.c:69938:12
func _164backupTruncateFile(tls crt.TLS, _pFile uintptr /* *Tsqlite3_file = Ssqlite3_file */, _iSize int64) (r int32) {
	esc := crt.MustMalloc(8)
	var (
		_iCurrent = esc // *Ti64 = Tsqlite_int64 = int64
		_rc       int32
	)
	defer crt.Free(esc)
	_rc = _352sqlite3OsFileSize(tls, _pFile, _iCurrent)
	if _rc != int32(0) || (*(*int64)(unsafe.Pointer(_iCurrent))) <= _iSize {
		goto _1
	}

	_rc = _353sqlite3OsTruncate(tls, _pFile, _iSize)
_1:
	return _rc
}

// _165sqlite3PagerSync is defined at sqlite3.c:53753:20
func _165sqlite3PagerSync(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _zMaster uintptr /* *int8 */) (r int32) {
	var (
		_rc   int32
		_pArg uintptr // *void
	)
	_rc = int32(0)
	if (*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pPager + 72))))) == 0 {
		goto _1
	}

	_pArg = _zMaster
	_rc = _235sqlite3OsFileControl(tls, *(*uintptr)(unsafe.Pointer(_pPager + 72)), int32(21), _pArg)
	if _rc != int32(12) {
		goto _2
	}

	_rc = int32(0)
_2:
_1:
	if _rc != int32(0) || (*(*uint8)(unsafe.Pointer(_pPager + 11))) != 0 {
		goto _3
	}

	_rc = _354sqlite3OsSync(tls, *(*uintptr)(unsafe.Pointer(_pPager + 72)), int32(*(*uint8)(unsafe.Pointer(_pPager + 14))))
_3:
	return _rc
}

// _166sqlite3PagerTruncateImage is defined at sqlite3.c:51465:21
func _166sqlite3PagerTruncateImage(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _nPage uint32) {
	*(*uint32)(unsafe.Pointer(_pPager + 28)) = _nPage
}

// _167sqlite3BtreeCommitPhaseTwo is defined at sqlite3.c:63614:20
func _167sqlite3BtreeCommitPhaseTwo(tls crt.TLS, _p uintptr /* *TBtree = SBtree */, _bCleanup int32) (r int32) {
	var (
		_rc  int32
		_pBt uintptr // *TBtShared = SBtShared
	)
	if int32(*(*uint8)(unsafe.Pointer(_p + 16))) != int32(0) {
		goto _1
	}

	return int32(0)

_1:
	_139sqlite3BtreeEnter(tls, _p)

	if int32(*(*uint8)(unsafe.Pointer(_p + 16))) != int32(2) {
		goto _2
	}

	_pBt = *(*uintptr)(unsafe.Pointer(_p + 8))

	_rc = _355sqlite3PagerCommitPhaseTwo(tls, *(*uintptr)(unsafe.Pointer(_pBt)))
	if _rc == int32(0) || _bCleanup != int32(0) {
		goto _3
	}

	_169sqlite3BtreeLeave(tls, _p)
	return _rc

_3:
	(*(*uint32)(unsafe.Pointer(_p + 28)))--
	*(*uint8)(unsafe.Pointer(_pBt + 36)) = uint8(1)
	_356btreeClearHasContent(tls, _pBt)
_2:
	_357btreeEndTransaction(tls, _p)
	_169sqlite3BtreeLeave(tls, _p)
	return int32(0)
}

// _168sqlite3BtreeCommitPhaseOne is defined at sqlite3.c:63525:20
func _168sqlite3BtreeCommitPhaseOne(tls crt.TLS, _p uintptr /* *TBtree = SBtree */, _zMaster uintptr /* *int8 */) (r int32) {
	var (
		_rc  int32
		_pBt uintptr // *TBtShared = SBtShared
	)
	_rc = int32(0)
	if int32(*(*uint8)(unsafe.Pointer(_p + 16))) != int32(2) {
		goto _1
	}

	_pBt = *(*uintptr)(unsafe.Pointer(_p + 8))
	_139sqlite3BtreeEnter(tls, _p)
	if (*(*uint8)(unsafe.Pointer(_pBt + 33))) == 0 {
		goto _2
	}

	_rc = _358autoVacuumCommit(tls, _pBt)
	if _rc == int32(0) {
		goto _3
	}

	_169sqlite3BtreeLeave(tls, _p)
	return _rc

_3:
_2:
	if (*(*uint8)(unsafe.Pointer(_pBt + 35))) == 0 {
		goto _4
	}

	_166sqlite3PagerTruncateImage(tls, *(*uintptr)(unsafe.Pointer(_pBt)), *(*uint32)(unsafe.Pointer(_pBt + 60)))
_4:
	_rc = _162sqlite3PagerCommitPhaseOne(tls, *(*uintptr)(unsafe.Pointer(_pBt)), _zMaster, int32(0))
	_169sqlite3BtreeLeave(tls, _p)
_1:
	return _rc
}

// _169sqlite3BtreeLeave is defined at sqlite3.c:59505:21
func _169sqlite3BtreeLeave(tls crt.TLS, _p uintptr /* *TBtree = SBtree */) {
	if (*(*uint8)(unsafe.Pointer(_p + 17))) == 0 {
		goto _1
	}

	(*(*int32)(unsafe.Pointer(_p + 20)))--
	if (*(*int32)(unsafe.Pointer(_p + 20))) != int32(0) {
		goto _2
	}

	_359unlockBtreeMutex(tls, _p)
_2:
_1:
}

// _170sqlite3PagerBackupPtr is defined at sqlite3.c:54851:31
func _170sqlite3PagerBackupPtr(tls crt.TLS, _pPager uintptr /* *TPager = SPager */) (r uintptr /* **Tsqlite3_backup = Ssqlite3_backup */) {
	return _pPager + 112
}

// _171sqlite3BtreeRollback is defined at sqlite3.c:63722:20
func _171sqlite3BtreeRollback(tls crt.TLS, _p uintptr /* *TBtree = SBtree */, _tripCode int32, _writeOnly int32) (r int32) {
	esc := crt.MustMalloc(20)
	var (
		_rc     int32
		_pBt    uintptr // *TBtShared = SBtShared
		_pPage1 = esc   // **TMemPage = SMemPage
		_rc2    int32
		_1rc2   int32
		_nPage  = esc + 16 // *int32
	)
	defer crt.Free(esc)
	_pBt = *(*uintptr)(unsafe.Pointer(_p + 8))

	_139sqlite3BtreeEnter(tls, _p)
	if _tripCode != int32(0) {
		goto _1
	}

	_rc = set5(&_tripCode, _360saveAllCursors(tls, _pBt, uint32(0), null))
	if _rc == 0 {
		goto _3
	}

	_writeOnly = int32(0)
_3:
	goto _2

_1:
	_rc = int32(0)
_2:
	if _tripCode == 0 {
		goto _4
	}

	_rc2 = _361sqlite3BtreeTripAllCursors(tls, _p, _tripCode, _writeOnly)

	if _rc2 == int32(0) {
		goto _5
	}

	_rc = _rc2
_5:
_4:
	if int32(*(*uint8)(unsafe.Pointer(_p + 16))) != int32(2) {
		goto _6
	}

	_1rc2 = _362sqlite3PagerRollback(tls, *(*uintptr)(unsafe.Pointer(_pBt)))
	if _1rc2 == int32(0) {
		goto _7
	}

	_rc = _1rc2
_7:
	if _363btreeGetPage(tls, _pBt, uint32(1), _pPage1, int32(0)) != int32(0) {
		goto _8
	}

	*(*int32)(unsafe.Pointer(_nPage)) = int32(_328sqlite3Get4byte(tls, uintptr(28)+*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage1))) + 80))))
	if (*(*int32)(unsafe.Pointer(_nPage))) != int32(0) {
		goto _9
	}

	_160sqlite3PagerPagecount(tls, *(*uintptr)(unsafe.Pointer(_pBt)), _nPage)
_9:
	*(*uint32)(unsafe.Pointer(_pBt + 60)) = uint32(*(*int32)(unsafe.Pointer(_nPage)))
	_364releasePageOne(tls, *(*uintptr)(unsafe.Pointer(_pPage1)))
_8:
	*(*uint8)(unsafe.Pointer(_pBt + 36)) = uint8(1)
	_356btreeClearHasContent(tls, _pBt)
_6:
	_357btreeEndTransaction(tls, _p)
	_169sqlite3BtreeLeave(tls, _p)
	return _rc
}

// _172sqlite3LeaveMutexAndCloseZombie is defined at sqlite3.c:143103:21
func _172sqlite3LeaveMutexAndCloseZombie(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */) {
	var (
		_i     uintptr // *THashElem = SHashElem
		_j     int32
		_pDb   uintptr // *SDb
		_pNext uintptr // *TFuncDef = SFuncDef
		_p     uintptr // *TFuncDef = SFuncDef
		_pColl uintptr // *TCollSeq = SCollSeq
		_pMod  uintptr // *TModule = SModule
	)
	if (*(*uint32)(unsafe.Pointer(_db + 112))) == uint32(0x64cffc7f) && _248connectionIsBusy(tls, _db) == 0 {
		goto _1
	}

	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	return

_1:
	_365sqlite3RollbackAll(tls, _db, int32(0))
	_366sqlite3CloseSavepoints(tls, _db)
	_j = int32(0)
_2:
	if _j >= (*(*int32)(unsafe.Pointer(_db + 40))) {
		goto _4
	}

	_pDb = (*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_j)
	if (*(*uintptr)(unsafe.Pointer(_pDb + 8))) == 0 {
		goto _5
	}

	_367sqlite3BtreeClose(tls, *(*uintptr)(unsafe.Pointer(_pDb + 8)))
	*(*uintptr)(unsafe.Pointer(_pDb + 8)) = null
	if _j == int32(1) {
		goto _6
	}

	*(*uintptr)(unsafe.Pointer(_pDb + 24)) = null
_6:
_5:
	_j++
	goto _2

_4:
	if (*(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32) + 24))) == 0 {
		goto _7
	}

	_336sqlite3SchemaClear(tls, *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32) + 24)))
_7:
	_337sqlite3VtabUnlockList(tls, _db)
	_338sqlite3CollapseDatabaseArray(tls, _db)

	_i = *(*uintptr)(unsafe.Pointer((_db + 496) + 8))
_8:
	if _i == 0 {
		goto _10
	}

	_p = *(*uintptr)(unsafe.Pointer(_i + 16))
_11:
	_368functionDestroy(tls, _db, _p)
	_pNext = *(*uintptr)(unsafe.Pointer(_p + 16))
	_181sqlite3DbFree(tls, _db, _p)
	_p = _pNext
	if _p != 0 {
		goto _11
	}

	_i = *(*uintptr)(unsafe.Pointer(_i))
	goto _8

_10:
	_369sqlite3HashClear(tls, _db+496)
	_i = *(*uintptr)(unsafe.Pointer((_db + 520) + 8))
_14:
	if _i == 0 {
		goto _16
	}

	_pColl = *(*uintptr)(unsafe.Pointer(_i + 16))
	_j = int32(0)
_17:
	if _j >= int32(3) {
		goto _19
	}

	if (*(*uintptr)(unsafe.Pointer((_pColl + 40*uintptr(_j)) + 32))) == 0 {
		goto _20
	}

	fn16(*(*uintptr)(unsafe.Pointer((_pColl + 40*uintptr(_j)) + 32)))(tls, *(*uintptr)(unsafe.Pointer((_pColl + 40*uintptr(_j)) + 16)))
_20:
	_j++
	goto _17

_19:
	_181sqlite3DbFree(tls, _db, _pColl)
	_i = *(*uintptr)(unsafe.Pointer(_i))
	goto _14

_16:
	_369sqlite3HashClear(tls, _db+520)
	_i = *(*uintptr)(unsafe.Pointer((_db + 448) + 8))
_21:
	if _i == 0 {
		goto _23
	}

	_pMod = *(*uintptr)(unsafe.Pointer(_i + 16))
	if (*(*uintptr)(unsafe.Pointer(_pMod + 24))) == 0 {
		goto _24
	}

	fn16(*(*uintptr)(unsafe.Pointer(_pMod + 24)))(tls, *(*uintptr)(unsafe.Pointer(_pMod + 16)))
_24:
	_370sqlite3VtabEponymousTableClear(tls, _db, _pMod)
	_181sqlite3DbFree(tls, _db, _pMod)
	_i = *(*uintptr)(unsafe.Pointer(_i))
	goto _21

_23:
	_369sqlite3HashClear(tls, _db+448)
	_136sqlite3Error(tls, _db, int32(0))
	_371sqlite3ValueFree(tls, *(*uintptr)(unsafe.Pointer(_db + 336)))
	_372sqlite3CloseExtensions(tls, _db)
	*(*uint32)(unsafe.Pointer(_db + 112)) = uint32(0xb5357930)
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32) + 24)))
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	*(*uint32)(unsafe.Pointer(_db + 112)) = uint32(0x9f3c2d33)
	Xsqlite3_mutex_free(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))

	if (*(*uint8)(unsafe.Pointer((_db + 352) + 6))) == 0 {
		goto _25
	}

	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer((_db + 352) + 40)))
_25:
	Xsqlite3_free(tls, _db)
}

// _173nCall int32, escapes: false, shell.c:4529:14
var _173nCall int32

// _174tryToCloneSchema is defined at shell.c:4806:13
func _174tryToCloneSchema(tls crt.TLS, _p uintptr /* *TShellState = SShellState */, _newDb uintptr /* *Tsqlite3 = Ssqlite3 */, _zWhere uintptr /* *int8 */, _xForEach uintptr /* *func(crt.TLS, uintptr, uintptr, uintptr) */) {
	esc := crt.MustMalloc(24)
	var (
		_pQuery  = esc   // **Tsqlite3_stmt = Ssqlite3_stmt
		_zQuery  uintptr // *int8
		_rc      int32
		_zName   uintptr    // *uint8
		_zSql    uintptr    // *uint8
		_zErrMsg = esc + 16 // **int8
	)
	defer crt.Free(esc)
	*(*uintptr)(unsafe.Pointer(_pQuery)) = 0
	_zQuery = 0
	*(*uintptr)(unsafe.Pointer(_zErrMsg)) = 0
	_zQuery = Xsqlite3_mprintf(tls, ts+13306 /* "SELECT name, sql FROM sqlite_mas..." */, _zWhere)
	_rc = Xsqlite3_prepare_v2(tls, *(*uintptr)(unsafe.Pointer(_p)), _zQuery, int32(-1), _pQuery, null)
	if _rc == 0 {
		goto _1
	}

	crt.Xfprintf(tls, Xstderr, ts+13351 /* "Error: (%d) %s on [%s]\n" */, Xsqlite3_extended_errcode(tls, *(*uintptr)(unsafe.Pointer(_p))), Xsqlite3_errmsg(tls, *(*uintptr)(unsafe.Pointer(_p))), _zQuery)
	goto _end_schema_xfer

_1:
_2:
	if set5(&_rc, Xsqlite3_step(tls, *(*uintptr)(unsafe.Pointer(_pQuery)))) != int32(100) {
		goto _3
	}

	_zName = Xsqlite3_column_text(tls, *(*uintptr)(unsafe.Pointer(_pQuery)), int32(0))
	_zSql = Xsqlite3_column_text(tls, *(*uintptr)(unsafe.Pointer(_pQuery)), int32(1))
	crt.Xprintf(tls, ts+13375 /* "%s... " */, _zName)
	crt.Xfflush(tls, Xstdout)
	Xsqlite3_exec(tls, _newDb, _zSql, null, null, _zErrMsg)
	if (*(*uintptr)(unsafe.Pointer(_zErrMsg))) == 0 {
		goto _4
	}

	crt.Xfprintf(tls, Xstderr, ts+13382 /* "Error: %s\nSQL: [%s]\n" */, *(*uintptr)(unsafe.Pointer(_zErrMsg)), _zSql)
	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_zErrMsg)))
	*(*uintptr)(unsafe.Pointer(_zErrMsg)) = null
_4:
	if _xForEach == 0 {
		goto _5
	}

	fn45(_xForEach)(tls, _p, _newDb, _zName)
_5:
	crt.Xprintf(tls, ts+13403 /* "done\n" */)
	goto _2

_3:
	if _rc == int32(101) {
		goto _6
	}

	Xsqlite3_finalize(tls, *(*uintptr)(unsafe.Pointer(_pQuery)))
	Xsqlite3_free(tls, _zQuery)
	_zQuery = Xsqlite3_mprintf(tls, ts+13409 /* "SELECT name, sql FROM sqlite_mas..." */, _zWhere)
	_rc = Xsqlite3_prepare_v2(tls, *(*uintptr)(unsafe.Pointer(_p)), _zQuery, int32(-1), _pQuery, null)
	if _rc == 0 {
		goto _7
	}

	crt.Xfprintf(tls, Xstderr, ts+13351 /* "Error: (%d) %s on [%s]\n" */, Xsqlite3_extended_errcode(tls, *(*uintptr)(unsafe.Pointer(_p))), Xsqlite3_errmsg(tls, *(*uintptr)(unsafe.Pointer(_p))), _zQuery)
	goto _end_schema_xfer

_7:
_8:
	if set5(&_rc, Xsqlite3_step(tls, *(*uintptr)(unsafe.Pointer(_pQuery)))) != int32(100) {
		goto _9
	}

	_zName = Xsqlite3_column_text(tls, *(*uintptr)(unsafe.Pointer(_pQuery)), int32(0))
	_zSql = Xsqlite3_column_text(tls, *(*uintptr)(unsafe.Pointer(_pQuery)), int32(1))
	crt.Xprintf(tls, ts+13375 /* "%s... " */, _zName)
	crt.Xfflush(tls, Xstdout)
	Xsqlite3_exec(tls, _newDb, _zSql, null, null, _zErrMsg)
	if (*(*uintptr)(unsafe.Pointer(_zErrMsg))) == 0 {
		goto _10
	}

	crt.Xfprintf(tls, Xstderr, ts+13382 /* "Error: %s\nSQL: [%s]\n" */, *(*uintptr)(unsafe.Pointer(_zErrMsg)), _zSql)
	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_zErrMsg)))
	*(*uintptr)(unsafe.Pointer(_zErrMsg)) = null
_10:
	if _xForEach == 0 {
		goto _11
	}

	fn45(_xForEach)(tls, _p, _newDb, _zName)
_11:
	crt.Xprintf(tls, ts+13403 /* "done\n" */)
	goto _8

_9:
_6:
	goto _end_schema_xfer
_end_schema_xfer:
	Xsqlite3_finalize(tls, *(*uintptr)(unsafe.Pointer(_pQuery)))
	Xsqlite3_free(tls, _zQuery)
}

// _175tryToCloneData is defined at shell.c:4693:13
func _175tryToCloneData(tls crt.TLS, _p uintptr /* *TShellState = SShellState */, _newDb uintptr /* *Tsqlite3 = Ssqlite3 */, _zTable uintptr /* *int8 */) {
	esc := crt.MustMalloc(24)
	var (
		_pQuery   = esc      // **Tsqlite3_stmt = Ssqlite3_stmt
		_pInsert  = esc + 16 // **Tsqlite3_stmt = Ssqlite3_stmt
		_zQuery   uintptr    // *int8
		_zInsert  uintptr    // *int8
		_rc       int32
		_i        int32
		_j        int32
		_n        int32
		_nTable   int32
		_k        int32
		_cnt      int32
		_spinRate int32
	)
	defer crt.Free(esc)
	*(*uintptr)(unsafe.Pointer(_pQuery)) = 0
	*(*uintptr)(unsafe.Pointer(_pInsert)) = 0
	_zQuery = 0
	_zInsert = 0
	_nTable = int32(crt.Xstrlen(tls, _zTable))
	_k = int32(0)
	_cnt = int32(0)
	_spinRate = int32(10000)
	_zQuery = Xsqlite3_mprintf(tls, ts+13474 /* "SELECT * FROM \"%w\"" */, _zTable)
	_rc = Xsqlite3_prepare_v2(tls, *(*uintptr)(unsafe.Pointer(_p)), _zQuery, int32(-1), _pQuery, null)
	if _rc == 0 {
		goto _1
	}

	crt.Xfprintf(tls, Xstderr, ts+13493 /* "Error %d: %s on [%s]\n" */, Xsqlite3_extended_errcode(tls, *(*uintptr)(unsafe.Pointer(_p))), Xsqlite3_errmsg(tls, *(*uintptr)(unsafe.Pointer(_p))), _zQuery)
	goto _end_data_xfer

_1:
	_n = Xsqlite3_column_count(tls, *(*uintptr)(unsafe.Pointer(_pQuery)))
	_zInsert = Xsqlite3_malloc64(tls, uint64((int32(200)+_nTable)+(_n*int32(3))))
	if _zInsert != 0 {
		goto _2
	}

	crt.Xfprintf(tls, Xstderr, ts+247 /* "out of memory\n" */)
	goto _end_data_xfer

_2:
	Xsqlite3_snprintf(tls, int32(200)+_nTable, _zInsert, ts+13515 /* "INSERT OR IGNORE INTO \"%s\" VALUE..." */, _zTable)
	_i = int32(crt.Xstrlen(tls, _zInsert))
	_j = int32(1)
_3:
	if _j >= _n {
		goto _5
	}

	crt.Xmemcpy(tls, _zInsert+uintptr(_i), ts+13551 /* ",?" */, uint64(2))
	_i = int32(_i + int32(2))
	_j++
	goto _3

_5:
	crt.Xmemcpy(tls, _zInsert+uintptr(_i), ts+13554 /* ");" */, uint64(3))
	_rc = Xsqlite3_prepare_v2(tls, _newDb, _zInsert, int32(-1), _pInsert, null)
	if _rc == 0 {
		goto _6
	}

	crt.Xfprintf(tls, Xstderr, ts+13493 /* "Error %d: %s on [%s]\n" */, Xsqlite3_extended_errcode(tls, _newDb), Xsqlite3_errmsg(tls, _newDb), _zQuery)
	goto _end_data_xfer

_6:
	_k = int32(0)
_7:
	if _k >= int32(2) {
		goto _9
	}

_10:
	if set5(&_rc, Xsqlite3_step(tls, *(*uintptr)(unsafe.Pointer(_pQuery)))) != int32(100) {
		goto _11
	}

	_i = int32(0)
_12:
	if _i >= _n {
		goto _14
	}

	switch Xsqlite3_column_type(tls, *(*uintptr)(unsafe.Pointer(_pQuery)), _i) {
	case int32(5):
		goto _16
	case int32(1):
		goto _17
	case int32(2):
		goto _18
	case int32(3):
		goto _19
	case int32(4):
		goto _20
	}
	goto _15

_16:
	Xsqlite3_bind_null(tls, *(*uintptr)(unsafe.Pointer(_pInsert)), _i+int32(1))
	goto _15

_17:
	Xsqlite3_bind_int64(tls, *(*uintptr)(unsafe.Pointer(_pInsert)), _i+int32(1), Xsqlite3_column_int64(tls, *(*uintptr)(unsafe.Pointer(_pQuery)), _i))
	goto _15

_18:
	Xsqlite3_bind_double(tls, *(*uintptr)(unsafe.Pointer(_pInsert)), _i+int32(1), Xsqlite3_column_double(tls, *(*uintptr)(unsafe.Pointer(_pQuery)), _i))
	goto _15

_19:
	Xsqlite3_bind_text(tls, *(*uintptr)(unsafe.Pointer(_pInsert)), _i+int32(1), Xsqlite3_column_text(tls, *(*uintptr)(unsafe.Pointer(_pQuery)), _i), int32(-1), null)
	goto _15

_20:
	Xsqlite3_bind_blob(tls, *(*uintptr)(unsafe.Pointer(_pInsert)), _i+int32(1), Xsqlite3_column_blob(tls, *(*uintptr)(unsafe.Pointer(_pQuery)), _i), Xsqlite3_column_bytes(tls, *(*uintptr)(unsafe.Pointer(_pQuery)), _i), null)
	goto _15

_15:
	_i++
	goto _12

_14:
	_rc = Xsqlite3_step(tls, *(*uintptr)(unsafe.Pointer(_pInsert)))
	if _rc == int32(0) || _rc == int32(100) || _rc == int32(101) {
		goto _21
	}

	crt.Xfprintf(tls, Xstderr, ts+13557 /* "Error %d: %s\n" */, Xsqlite3_extended_errcode(tls, _newDb), Xsqlite3_errmsg(tls, _newDb))
_21:
	Xsqlite3_reset(tls, *(*uintptr)(unsafe.Pointer(_pInsert)))
	_cnt++
	if (_cnt % _spinRate) != int32(0) {
		goto _22
	}

	crt.Xprintf(tls, ts+13571 /* "%c\b" */, int32(*(*int8)(unsafe.Pointer((ts + 13575 /* "|/-\\" */) + uintptr((_cnt/_spinRate)%int32(4))))))
	crt.Xfflush(tls, Xstdout)
_22:
	goto _10

_11:
	if _rc != int32(101) {
		goto _23
	}

	goto _9

_23:
	Xsqlite3_finalize(tls, *(*uintptr)(unsafe.Pointer(_pQuery)))
	Xsqlite3_free(tls, _zQuery)
	_zQuery = Xsqlite3_mprintf(tls, ts+13580 /* "SELECT * FROM \"%w\" ORDER BY rowi..." */, _zTable)
	_rc = Xsqlite3_prepare_v2(tls, *(*uintptr)(unsafe.Pointer(_p)), _zQuery, int32(-1), _pQuery, null)
	if _rc == 0 {
		goto _24
	}

	crt.Xfprintf(tls, Xstderr, ts+13620 /* "Warning: cannot step \"%s\" backwa..." */, _zTable)
	goto _9

_24:
	_k++
	goto _7

_9:
	goto _end_data_xfer
_end_data_xfer:
	Xsqlite3_finalize(tls, *(*uintptr)(unsafe.Pointer(_pQuery)))
	Xsqlite3_finalize(tls, *(*uintptr)(unsafe.Pointer(_pInsert)))
	Xsqlite3_free(tls, _zQuery)
	Xsqlite3_free(tls, _zInsert)
}

// _176sqlite3SafetyCheckOk is defined at sqlite3.c:29378:20
func _176sqlite3SafetyCheckOk(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */) (r int32) {
	var _magic uint32

	if _db != 0 {
		goto _1
	}

	_287logBadConnection(tls, ts+8837 /* "NULL" */)
	return int32(0)

_1:
	_magic = *(*uint32)(unsafe.Pointer(_db + 112))
	if _magic == uint32(0xa029a697) {
		goto _2
	}

	if _122sqlite3SafetyCheckSickOrOk(tls, _db) == 0 {
		goto _4
	}

	_287logBadConnection(tls, ts+13656 /* "unopened" */)
_4:
	return int32(0)

	goto _3

_2:
	return int32(1)

_3:
	return r
}

// _177sqlite3DbMallocRaw is defined at sqlite3.c:25330:21
func _177sqlite3DbMallocRaw(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _n uint64) (r uintptr /* *void */) {
	var _p uintptr // *void

	if _db == 0 {
		goto _1
	}

	return _373sqlite3DbMallocRawNN(tls, _db, _n)

_1:
	_p = _198sqlite3Malloc(tls, _n)
	return _p
}

// Xsqlite3_column_name is defined at sqlite3.c:78073:23
func Xsqlite3_column_name(tls crt.TLS, _pStmt uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */, _N int32) (r uintptr /* *int8 */) {
	return _374columnName(tls, _pStmt, _N, fp11(Xsqlite3_value_text), int32(0))
}

// Xsqlite3_column_type is defined at sqlite3.c:78009:16
func Xsqlite3_column_type(tls crt.TLS, _pStmt uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */, _i int32) (r int32) {
	var _iType int32

	_iType = Xsqlite3_value_type(tls, _203columnMem(tls, _pStmt, _i))
	_204columnMallocFailure(tls, _pStmt)
	return _iType
}

// _178sqlite3OomFault is defined at sqlite3.c:25474:21
func _178sqlite3OomFault(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */) {
	if int32(*(*uint8)(unsafe.Pointer(_db + 97))) != int32(0) || int32(*(*uint8)(unsafe.Pointer(_db + 98))) != int32(0) {
		goto _1
	}

	*(*uint8)(unsafe.Pointer(_db + 97)) = uint8(1)
	if (*(*int32)(unsafe.Pointer(_db + 196))) <= int32(0) {
		goto _2
	}

	*(*int32)(unsafe.Pointer(_db + 344)) = int32(1)
_2:
	(*(*uint32)(unsafe.Pointer(_db + 352)))++
_1:
}

// _179sqlite3VdbeFinalize is defined at sqlite3.c:75141:20
func _179sqlite3VdbeFinalize(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */) (r int32) {
	var _rc int32

	_rc = int32(0)
	if (*(*uint32)(unsafe.Pointer(_p + 36))) != uint32(0x2df20da3) && (*(*uint32)(unsafe.Pointer(_p + 36))) != uint32(0x319c2973) {
		goto _1
	}

	_rc = _201sqlite3VdbeReset(tls, _p)

_1:
	_375sqlite3VdbeDelete(tls, _p)
	return _rc
}

// _180sqlite3CtypeMap [256]uint8, escapes: true, sqlite3.c:18291:36
var _180sqlite3CtypeMap = ds + 5869

// _181sqlite3DbFree is defined at sqlite3.c:25196:21
func _181sqlite3DbFree(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _p uintptr /* *void */) {
	if _p == 0 {
		goto _1
	}

	_376sqlite3DbFreeNN(tls, _db, _p)
_1:
}

// _182sqlite3ApiExit is defined at sqlite3.c:25521:20
func _182sqlite3ApiExit(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _rc int32) (r int32) {
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 && _rc != int32(3082) {
		goto _1
	}

	return _377apiOomError(tls, _db)

_1:
	return _rc & (*(*int32)(unsafe.Pointer(_db + 84)))
}

// _183sqlite3DbStrDup is defined at sqlite3.c:25432:21
func _183sqlite3DbStrDup(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _z uintptr /* *int8 */) (r uintptr /* *int8 */) {
	var (
		_zNew uintptr // *int8
		_n    uint64
	)
	if _z != 0 {
		goto _1
	}

	return null

_1:
	_n = crt.Xstrlen(tls, _z) + uint64(1)
	_zNew = _177sqlite3DbMallocRaw(tls, _db, uint64(_n))
	if _zNew == 0 {
		goto _2
	}

	crt.Xmemcpy(tls, _zNew, _z, _n)
_2:
	return _zNew
}

// _184aField [12]struct{XzName *int8;Xofst int32;}, escapes: true, shell.c:4948:56
var _184aField = bss + 1896 // array of 12 struct{zName pointer to char; ofst int}

func init() {
	*(*[12]struct {
		XzName uintptr // *int8
		Xofst  int32
	})(unsafe.Pointer(_184aField)) = [12]struct {
		XzName uintptr // *int8
		Xofst  int32
	}{
		0:
		// *int8

		{
			XzName: ts + 13665, /* "file change counter:" */
			Xofst:  int32(24),
		},
		1:
		// *int8

		{
			XzName: ts + 13686, /* "database page count:" */
			Xofst:  int32(28),
		},
		2:
		// *int8

		{
			XzName: ts + 13707, /* "freelist page count:" */
			Xofst:  int32(36),
		},
		3:
		// *int8

		{
			XzName: ts + 13728, /* "schema cookie:" */
			Xofst:  int32(40),
		},
		4:
		// *int8

		{
			XzName: ts + 13743, /* "schema format:" */
			Xofst:  int32(44),
		},
		5:
		// *int8

		{
			XzName: ts + 13758, /* "default cache size:" */
			Xofst:  int32(48),
		},
		6:
		// *int8

		{
			XzName: ts + 13778, /* "autovacuum top root:" */
			Xofst:  int32(52),
		},
		7:
		// *int8

		{
			XzName: ts + 13799, /* "incremental vacuum:" */
			Xofst:  int32(64),
		},
		8:
		// *int8

		{
			XzName: ts + 13819, /* "text encoding:" */
			Xofst:  int32(56),
		},
		9:
		// *int8

		{
			XzName: ts + 13834, /* "user version:" */
			Xofst:  int32(60),
		},
		10:
		// *int8

		{
			XzName: ts + 13848, /* "application id:" */
			Xofst:  int32(68),
		},
		11:
		// *int8

		{
			XzName: ts + 13864, /* "software version:" */
			Xofst:  int32(96),
		},
	}
}

// _185aQuery [5]struct{XzName *int8;XzSql *int8;}, escapes: true, shell.c:4962:64
var _185aQuery = bss + 2088 // array of 5 struct{zName pointer to char; zSql pointer to char}

func init() {
	*(*[5]struct {
		XzName uintptr // *int8
		XzSql  uintptr // *int8
	})(unsafe.Pointer(_185aQuery)) = [5]struct {
		XzName uintptr // *int8
		XzSql  uintptr // *int8
	}{
		0:
		// *int8
		// *int8
		{
			XzName: ts + 13882, /* "number of tables:" */
			XzSql:  ts + 13900, /* "SELECT count(*) FROM %s WHERE ty..." */
		},
		1:
		// *int8
		// *int8
		{
			XzName: ts + 13943, /* "number of indexes:" */
			XzSql:  ts + 13962, /* "SELECT count(*) FROM %s WHERE ty..." */
		},
		2:
		// *int8
		// *int8
		{
			XzName: ts + 14005, /* "number of triggers:" */
			XzSql:  ts + 14025, /* "SELECT count(*) FROM %s WHERE ty..." */
		},
		3:
		// *int8
		// *int8
		{
			XzName: ts + 14070, /* "number of views:" */
			XzSql:  ts + 14087, /* "SELECT count(*) FROM %s WHERE ty..." */
		},
		4:
		// *int8
		// *int8
		{
			XzName: ts + 14129, /* "schema size:" */
			XzSql:  ts + 14142, /* "SELECT total(length(sql)) FROM %..." */
		},
	}
}

// _186get2byteInt is defined at shell.c:4935:21
func _186get2byteInt(tls crt.TLS, _a uintptr /* *uint8 */) (r uint32) {
	return uint32((int32(*(*uint8)(unsafe.Pointer(_a))) << (uint(8) % 32)) + int32(*(*uint8)(unsafe.Pointer(_a + 1))))
}

// _187get4byteInt is defined at shell.c:4938:21
func _187get4byteInt(tls crt.TLS, _a uintptr /* *uint8 */) (r uint32) {
	return uint32((((int32(*(*uint8)(unsafe.Pointer(_a))) << (uint(24) % 32)) + (int32(*(*uint8)(unsafe.Pointer(_a + 1))) << (uint(16) % 32))) + (int32(*(*uint8)(unsafe.Pointer(_a + 2))) << (uint(8) % 32))) + int32(*(*uint8)(unsafe.Pointer(_a + 3))))
}

// _188db_int is defined at shell.c:4921:12
func _188db_int(tls crt.TLS, _p uintptr /* *TShellState = SShellState */, _zSql uintptr /* *int8 */) (r int32) {
	esc := crt.MustMalloc(8)
	var (
		_pStmt = esc // **Tsqlite3_stmt = Ssqlite3_stmt
		_res   int32
	)
	defer crt.Free(esc)
	_res = int32(0)
	Xsqlite3_prepare_v2(tls, *(*uintptr)(unsafe.Pointer(_p)), _zSql, int32(-1), _pStmt, null)
	if (*(*uintptr)(unsafe.Pointer(_pStmt))) == 0 || Xsqlite3_step(tls, *(*uintptr)(unsafe.Pointer(_pStmt))) != int32(100) {
		goto _1
	}

	_res = Xsqlite3_column_int(tls, *(*uintptr)(unsafe.Pointer(_pStmt)), int32(0))
_1:
	Xsqlite3_finalize(tls, *(*uintptr)(unsafe.Pointer(_pStmt)))
	return _res
}

// _189dump_callback is defined at shell.c:3880:12
func _189dump_callback(tls crt.TLS, _pArg uintptr /* *void */, _nArg int32, _azArg uintptr /* **int8 */, _azNotUsed uintptr /* **int8 */) (r int32) {
	esc := crt.MustMalloc(32)
	var (
		_rc             int32
		_zTable         uintptr    // *int8
		_zType          uintptr    // *int8
		_zSql           uintptr    // *int8
		_p              uintptr    // *TShellState = SShellState
		_zIns           uintptr    // *int8
		_sSelect        = esc      // *TShellText = SShellText
		_sTable         = esc + 16 // *TShellText = SShellText
		_azCol          uintptr    // **int8
		_i              int32
		_savedDestTable uintptr // *int8
		_savedMode      int32
	)
	defer crt.Free(esc)
	_p = _pArg

	if _nArg == int32(3) && _azArg != 0 {
		goto _1
	}

	return int32(0)

_1:
	_zTable = *(*uintptr)(unsafe.Pointer(_azArg))
	_zType = *(*uintptr)(unsafe.Pointer(_azArg + 8))
	_zSql = *(*uintptr)(unsafe.Pointer(_azArg + 16))
	if crt.Xstrcmp(tls, _zTable, ts+6945 /* "sqlite_sequence" */) != int32(0) {
		goto _2
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+14176 /* "DELETE FROM sqlite_sequence;\n" */)
	goto _3

_2:
	if Xsqlite3_strglob(tls, ts+14206 /* "sqlite_stat?" */, _zTable) != int32(0) {
		goto _4
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+3158 /* "ANALYZE sqlite_master;\n" */)
	goto _5

_4:
	if crt.Xstrncmp(tls, _zTable, ts+6844 /* "sqlite_" */, uint64(7)) != int32(0) {
		goto _6
	}

	return int32(0)

	goto _7

_6:
	if crt.Xstrncmp(tls, _zSql, ts+14219 /* "CREATE VIRTUAL TABLE" */, uint64(20)) != int32(0) {
		goto _8
	}

	if (*(*int32)(unsafe.Pointer(_p + 64))) != 0 {
		goto _10
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+14240 /* "PRAGMA writable_schema=ON;\n" */)
	*(*int32)(unsafe.Pointer(_p + 64)) = int32(1)
_10:
	_zIns = Xsqlite3_mprintf(tls, ts+14268 /* "INSERT INTO sqlite_master(type,n..." */, _zTable, _zTable, _zSql)
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+6158 /* "%s\n" */, _zIns)
	Xsqlite3_free(tls, _zIns)
	return int32(0)

	goto _9

_8:
	_89printSchemaLine(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), _zSql, ts+8729 /* ";\n" */)
_9:
_7:
_5:
_3:
	if crt.Xstrcmp(tls, _zType, ts+4602 /* "table" */) != int32(0) {
		goto _11
	}

	_azCol = _378tableColumnList(tls, _p, _zTable)
	if _azCol != 0 {
		goto _12
	}

	(*(*int32)(unsafe.Pointer(_p + 48)))++
	return int32(0)

_12:
	_66initText(tls, _sTable)
	_67appendText(tls, _sTable, _zTable, _93quoteChar(tls, _zTable))
	if (*(*uintptr)(unsafe.Pointer(_azCol))) == 0 {
		goto _13
	}

	_67appendText(tls, _sTable, ts+5384 /* "(" */, int8(0))
	_67appendText(tls, _sTable, *(*uintptr)(unsafe.Pointer(_azCol)), int8(0))
	_i = int32(1)
_14:
	if (*(*uintptr)(unsafe.Pointer(_azCol + 8*uintptr(_i)))) == 0 {
		goto _16
	}

	_67appendText(tls, _sTable, ts+416 /* "," */, int8(0))
	_67appendText(tls, _sTable, *(*uintptr)(unsafe.Pointer(_azCol + 8*uintptr(_i))), _93quoteChar(tls, *(*uintptr)(unsafe.Pointer(_azCol + 8*uintptr(_i)))))
	_i++
	goto _14

_16:
	_67appendText(tls, _sTable, ts+8826 /* ")" */, int8(0))
_13:
	_66initText(tls, _sSelect)
	_67appendText(tls, _sSelect, ts+7571 /* "SELECT " */, int8(0))
	if (*(*uintptr)(unsafe.Pointer(_azCol))) == 0 {
		goto _17
	}

	_67appendText(tls, _sSelect, *(*uintptr)(unsafe.Pointer(_azCol)), int8(0))
	_67appendText(tls, _sSelect, ts+416 /* "," */, int8(0))
_17:
	_i = int32(1)
_18:
	if (*(*uintptr)(unsafe.Pointer(_azCol + 8*uintptr(_i)))) == 0 {
		goto _20
	}

	_67appendText(tls, _sSelect, *(*uintptr)(unsafe.Pointer(_azCol + 8*uintptr(_i))), _93quoteChar(tls, *(*uintptr)(unsafe.Pointer(_azCol + 8*uintptr(_i)))))
	if (*(*uintptr)(unsafe.Pointer(_azCol + 8*uintptr(_i+int32(1))))) == 0 {
		goto _21
	}

	_67appendText(tls, _sSelect, ts+416 /* "," */, int8(0))
_21:
	_i++
	goto _18

_20:
	_379freeColumnList(tls, _azCol)
	_67appendText(tls, _sSelect, ts+14360 /* " FROM " */, int8(0))
	_67appendText(tls, _sSelect, _zTable, _93quoteChar(tls, _zTable))
	_savedDestTable = *(*uintptr)(unsafe.Pointer(_p + 80))
	_savedMode = *(*int32)(unsafe.Pointer(_p + 52))
	*(*uintptr)(unsafe.Pointer(_p + 80)) = *(*uintptr)(unsafe.Pointer(_sTable))
	*(*int32)(unsafe.Pointer(_p + 52)) = set5(&(*(*int32)(unsafe.Pointer(_p + 56))), int32(5))
	_rc = _14shell_exec(tls, *(*uintptr)(unsafe.Pointer(_p)), *(*uintptr)(unsafe.Pointer(_sSelect)), fp3(_15shell_callback), _p, null)
	if (_rc & int32(0xff)) != int32(11) {
		goto _22
	}

	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+9811 /* "/****** CORRUPTION ERROR *******..." */)
	_380toggleSelectOrder(tls, *(*uintptr)(unsafe.Pointer(_p)))
	_14shell_exec(tls, *(*uintptr)(unsafe.Pointer(_p)), *(*uintptr)(unsafe.Pointer(_sSelect)), fp3(_15shell_callback), _p, null)
	_380toggleSelectOrder(tls, *(*uintptr)(unsafe.Pointer(_p)))
_22:
	*(*uintptr)(unsafe.Pointer(_p + 80)) = _savedDestTable
	*(*int32)(unsafe.Pointer(_p + 52)) = _savedMode
	_68freeText(tls, _sTable)
	_68freeText(tls, _sSelect)
	if _rc == 0 {
		goto _23
	}

	(*(*int32)(unsafe.Pointer(_p + 48)))++
_23:
_11:
	return int32(0)
}

// _190sqlite3LockAndPrepare is defined at sqlite3.c:117449:12
func _190sqlite3LockAndPrepare(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _zSql uintptr /* *int8 */, _nBytes int32, _prepFlags uint32, _pOld uintptr /* *TVdbe = SVdbe */, _ppStmt uintptr /* **Tsqlite3_stmt = Ssqlite3_stmt */, _pzTail uintptr /* **int8 */) (r int32) {
	var _rc int32

	*(*uintptr)(unsafe.Pointer(_ppStmt)) = null
	if _176sqlite3SafetyCheckOk(tls, _db) != 0 && _zSql != 0 {
		goto _1
	}

	return _29sqlite3MisuseError(tls, int32(117465))

_1:
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	_219sqlite3BtreeEnterAll(tls, _db)
	_rc = _381sqlite3Prepare(tls, _db, _zSql, _nBytes, _prepFlags, _pOld, _ppStmt, _pzTail)
	if _rc != int32(17) {
		goto _2
	}

	_382sqlite3ResetOneSchema(tls, _db, int32(-1))
	Xsqlite3_finalize(tls, *(*uintptr)(unsafe.Pointer(_ppStmt)))
	_rc = _381sqlite3Prepare(tls, _db, _zSql, _nBytes, _prepFlags, _pOld, _ppStmt, _pzTail)
_2:
	_225sqlite3BtreeLeaveAll(tls, _db)
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))

	return _rc
}

type SVdbe struct {
	Xdb                 uintptr // *Ssqlite3
	XpPrev              uintptr // *SVdbe
	XpNext              uintptr // *SVdbe
	XpParse             uintptr // *SParse
	XnVar               int16
	Xmagic              uint32
	XnMem               int32
	XnCursor            int32
	XcacheCtr           uint32
	Xpc                 int32
	Xrc                 int32
	XnChange            int32
	XiStatement         int32
	XiCurrentTime       int64
	XnFkConstraint      int64
	XnStmtDefCons       int64
	XnStmtDefImmCons    int64
	XaOp                uintptr // *SVdbeOp
	XaMem               uintptr // *Ssqlite3_value
	XapArg              uintptr // **Ssqlite3_value
	XaColName           uintptr // *Ssqlite3_value
	XpResultSet         uintptr // *Ssqlite3_value
	XzErrMsg            uintptr // *int8
	XapCsr              uintptr // **SVdbeCursor
	XaVar               uintptr // *Ssqlite3_value
	XpVList             uintptr // *int32
	XstartTime          int64
	XnOp                int32
	XnResColumn         uint16
	XerrorAction        uint8
	XminWriteFileFormat uint8
	XprepFlags          uint8
	F194                uint16
	XbtreeMask          uint32
	XlockMask           uint32
	XaCounter           [7]uint32
	XzSql               uintptr // *int8
	XpFree              uintptr // uintptr
	XpFrame             uintptr // *SVdbeFrame
	XpDelFrame          uintptr // *SVdbeFrame
	XnFrame             int32
	Xexpmask            uint32
	XpProgram           uintptr // *SSubProgram
	XpAuxData           uintptr // *SAuxData
}

// _191vdbeSafetyNotNull is defined at sqlite3.c:76954:12
func _191vdbeSafetyNotNull(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */) (r int32) {
	if _p != 0 {
		goto _1
	}

	Xsqlite3_log(tls, int32(21), ts+14367 /* "API called with NULL prepared st..." */)
	return int32(1)

	goto _2

_1:
	return _194vdbeSafety(tls, _p)

_2:
	return r
}

// _192sqlite3Step is defined at sqlite3.c:77453:12
func _192sqlite3Step(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */) (r int32) {
	var (
		_db uintptr // *Tsqlite3 = Ssqlite3
		_rc int32
	)

	if (*(*uint32)(unsafe.Pointer(_p + 36))) == uint32(0x2df20da3) {
		goto _1
	}

	Xsqlite3_reset(tls, _p)
_1:
	_db = *(*uintptr)(unsafe.Pointer(_p))
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _2
	}

	*(*int32)(unsafe.Pointer(_p + 56)) = int32(7)
	return int32(7)

_2:
	if (*(*int32)(unsafe.Pointer(_p + 52))) > int32(0) || (uint32(*(*uint16)(unsafe.Pointer(_p + 194)))<<31>>31) == 0 {
		goto _3
	}

	*(*int32)(unsafe.Pointer(_p + 56)) = int32(17)
	_rc = int32(1)
	goto _end_of_step

_3:
	if (*(*int32)(unsafe.Pointer(_p + 52))) >= int32(0) {
		goto _4
	}

	if (*(*int32)(unsafe.Pointer(_db + 184))) != int32(0) {
		goto _5
	}

	*(*int32)(unsafe.Pointer(_db + 344)) = int32(0)
_5:
	if (*(*uintptr)(unsafe.Pointer(_db + 232))) == 0 && (int32(*(*uint8)(unsafe.Pointer(_db + 104)))&int32(0x2)) == int32(0) || (*(*uint8)(unsafe.Pointer((_db + 176) + 5))) != 0 || (*(*uintptr)(unsafe.Pointer(_p + 232))) == 0 {
		goto _6
	}

	_383sqlite3OsCurrentTimeInt64(tls, *(*uintptr)(unsafe.Pointer(_db)), _p+176)
	goto _7

_6:
_7:
	(*(*int32)(unsafe.Pointer(_db + 184)))++
	if int32(uint32((*(*uint16)(unsafe.Pointer(_p + 194)))>>7)<<31>>31) != int32(0) {
		goto _8
	}

	(*(*int32)(unsafe.Pointer(_db + 192)))++
_8:
	if (uint32((*(*uint16)(unsafe.Pointer(_p + 194)))>>8) << 31 >> 31) == 0 {
		goto _9
	}

	(*(*int32)(unsafe.Pointer(_db + 188)))++
_9:
	*(*int32)(unsafe.Pointer(_p + 52)) = int32(0)
_4:
	if (uint32((*(*uint16)(unsafe.Pointer(_p + 194)))>>2) << 30 >> 30) == 0 {
		goto _10
	}

	_rc = _384sqlite3VdbeList(tls, _p)
	goto _11

_10:
	(*(*int32)(unsafe.Pointer(_db + 196)))++
	_rc = _385sqlite3VdbeExec(tls, _p)
	(*(*int32)(unsafe.Pointer(_db + 196)))--
_11:
	if _rc == int32(100) {
		goto _12
	}

	if (*(*int64)(unsafe.Pointer(_p + 176))) <= int64(0) {
		goto _13
	}

	_195invokeProfileCallback(tls, _db, _p)
_13:
_12:
	if _rc != int32(101) || (*(*uint8)(unsafe.Pointer(_db + 95))) == 0 {
		goto _14
	}

	*(*int32)(unsafe.Pointer(_p + 56)) = _386doWalCallbacks(tls, _db)
	if (*(*int32)(unsafe.Pointer(_p + 56))) == int32(0) {
		goto _15
	}

	_rc = int32(1)
_15:
_14:
	*(*int32)(unsafe.Pointer(_db + 80)) = _rc
	if int32(7) != _182sqlite3ApiExit(tls, *(*uintptr)(unsafe.Pointer(_p)), *(*int32)(unsafe.Pointer(_p + 56))) {
		goto _16
	}

	*(*int32)(unsafe.Pointer(_p + 56)) = int32(7)
_16:
	goto _end_of_step
_end_of_step:
	if (int32(*(*uint8)(unsafe.Pointer(_p + 192)))&int32(0x80)) == int32(0) || _rc == int32(100) || _rc == int32(101) {
		goto _17
	}

	_rc = _387sqlite3VdbeTransferError(tls, _p)
_17:
	return _rc & (*(*int32)(unsafe.Pointer(_db + 84)))
}

// _193sqlite3Reprepare is defined at sqlite3.c:117489:20
func _193sqlite3Reprepare(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */) (r int32) {
	esc := crt.MustMalloc(8)
	var (
		_rc        int32
		_pNew      = esc   // **Tsqlite3_stmt = Ssqlite3_stmt
		_zSql      uintptr // *int8
		_db        uintptr // *Tsqlite3 = Ssqlite3
		_prepFlags uint8
	)
	defer crt.Free(esc)

	_zSql = Xsqlite3_sql(tls, _p)

	_db = _388sqlite3VdbeDb(tls, _p)

	_prepFlags = _389sqlite3VdbePrepareFlags(tls, _p)
	_rc = _190sqlite3LockAndPrepare(tls, _db, _zSql, int32(-1), uint32(_prepFlags), _p, _pNew, null)
	if _rc == 0 {
		goto _1
	}

	if _rc != int32(7) {
		goto _3
	}

	_178sqlite3OomFault(tls, _db)
_3:
	return _rc

	goto _2

_1:
_2:
	_390sqlite3VdbeSwap(tls, *(*uintptr)(unsafe.Pointer(_pNew)), _p)
	_391sqlite3TransferBindings(tls, *(*uintptr)(unsafe.Pointer(_pNew)), _p)
	_392sqlite3VdbeResetStepResult(tls, *(*uintptr)(unsafe.Pointer(_pNew)))
	_179sqlite3VdbeFinalize(tls, *(*uintptr)(unsafe.Pointer(_pNew)))
	return int32(0)
}

// _194vdbeSafety is defined at sqlite3.c:76946:12
func _194vdbeSafety(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */) (r int32) {
	if (*(*uintptr)(unsafe.Pointer(_p))) != 0 {
		goto _1
	}

	Xsqlite3_log(tls, int32(21), ts+14407 /* "API called with finalized prepar..." */)
	return int32(1)

	goto _2

_1:
	return int32(0)

_2:
	return r
}

// _195invokeProfileCallback is defined at sqlite3.c:76968:29
func _195invokeProfileCallback(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _p uintptr /* *TVdbe = SVdbe */) {
	esc := crt.MustMalloc(24)
	var (
		_iNow    = esc      // *Tsqlite3_int64 = Tsqlite_int64 = int64
		_iElapse = esc + 16 // *Tsqlite3_int64 = Tsqlite_int64 = int64
	)
	defer crt.Free(esc)

	_383sqlite3OsCurrentTimeInt64(tls, *(*uintptr)(unsafe.Pointer(_db)), _iNow)
	*(*int64)(unsafe.Pointer(_iElapse)) = ((*(*int64)(unsafe.Pointer(_iNow))) - int64(*(*int64)(unsafe.Pointer(_p + 176)))) * int64(1000000)
	if (*(*uintptr)(unsafe.Pointer(_db + 232))) == 0 {
		goto _1
	}

	fn46(*(*uintptr)(unsafe.Pointer(_db + 232)))(tls, *(*uintptr)(unsafe.Pointer(_db + 240)), *(*uintptr)(unsafe.Pointer(_p + 232)), uint64(*(*int64)(unsafe.Pointer(_iElapse))))
_1:
	if (int32(*(*uint8)(unsafe.Pointer(_db + 104))) & int32(0x2)) == 0 {
		goto _2
	}

	fn28(*(*uintptr)(unsafe.Pointer(_db + 216)))(tls, uint32(0x2), *(*uintptr)(unsafe.Pointer(_db + 224)), _p, _iElapse)
_2:
	*(*int64)(unsafe.Pointer(_p + 176)) = int64(0)
}

// _196patternCompare is defined at sqlite3.c:107191:12
func _196patternCompare(tls crt.TLS, azPattern uintptr, azString uintptr, _pInfo uintptr /* *ScompareInfo */, _matchOther uint32) (r int32) {
	esc := crt.MustMalloc(24)
	var (
		_zPattern = esc      // **uint8
		_zString  = esc + 16 // **uint8
		_c        uint32
		_c2       uint32
		_matchOne uint32
		_matchAll uint32
		_noCase   uint8
		_zEscaped uintptr // *Tu8 = uint8
		_bMatch   int32
		_cx       uint32
		_1bMatch  int32
		_2bMatch  int32
		_prior_c  uint32
		_seen     int32
		_invert   int32
	)
	defer crt.Free(esc)
	*(*uintptr)(unsafe.Pointer(_zPattern)) = azPattern
	*(*uintptr)(unsafe.Pointer(_zString)) = azString
	_matchOne = uint32(*(*uint8)(unsafe.Pointer(_pInfo + 1)))
	_matchAll = uint32(*(*uint8)(unsafe.Pointer(_pInfo)))
	_noCase = *(*uint8)(unsafe.Pointer(_pInfo + 3))
	_zEscaped = 0
_1:
	if set25(&_c, func() uint32 {
		if int32(*(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_zPattern))))) < int32(0x80) {
			return uint32(*(*uint8)(unsafe.Pointer(postinc19(&(*(*uintptr)(unsafe.Pointer(_zPattern)))))))
		}
		return _393sqlite3Utf8Read(tls, _zPattern)
	}()) == uint32(0) {
		goto _2
	}

	if _c != _matchAll {
		goto _3
	}

_4:
	if set25(&_c, func() uint32 {
		if int32(*(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_zPattern))))) < int32(0x80) {
			return uint32(*(*uint8)(unsafe.Pointer(postinc19(&(*(*uintptr)(unsafe.Pointer(_zPattern)))))))
		}
		return _393sqlite3Utf8Read(tls, _zPattern)
	}()) != _matchAll && _c != _matchOne {
		goto _5
	}

	if _c != _matchOne || _393sqlite3Utf8Read(tls, _zString) != uint32(0) {
		goto _6
	}

	return int32(2)

_6:
	goto _4

_5:
	if _c != uint32(0) {
		goto _7
	}

	return int32(0)

	goto _8

_7:
	if _c != _matchOther {
		goto _9
	}

	if int32(*(*uint8)(unsafe.Pointer(_pInfo + 2))) != int32(0) {
		goto _10
	}

	_c = _393sqlite3Utf8Read(tls, _zPattern)
	if _c != uint32(0) {
		goto _12
	}

	return int32(2)

_12:
	goto _11

_10:
_13:
	if (*(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_zString))))) == 0 {
		goto _14
	}

	_bMatch = _196patternCompare(tls, (*(*uintptr)(unsafe.Pointer(_zPattern)))-1, *(*uintptr)(unsafe.Pointer(_zString)), _pInfo, _matchOther)
	if _bMatch == int32(1) {
		goto _15
	}

	return _bMatch

_15:
	if int32(*(*uint8)(unsafe.Pointer(postinc19(&(*(*uintptr)(unsafe.Pointer(_zString))))))) < int32(0xc0) {
		goto _16
	}

_17:
	if (int32(*(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_zString))))) & int32(0xc0)) != int32(0x80) {
		goto _18
	}

	(*(*uintptr)(unsafe.Pointer(_zString)))++
	goto _17

_18:
_16:
	goto _13

_14:
	return int32(2)

_11:
_9:
_8:
	if _c > uint32(0x80) {
		goto _19
	}

	if _noCase == 0 {
		goto _21
	}

	_cx = _c & uint32(^(int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(uint8(_c))))) & int32(0x20)))
	_c = uint32(*(*uint8)(unsafe.Pointer(_215sqlite3UpperToLower + uintptr(uint8(_c)))))
	goto _22

_21:
	_cx = _c
_22:
_23:
	if set25(&_c2, uint32(*(*uint8)(unsafe.Pointer(postinc19(&(*(*uintptr)(unsafe.Pointer(_zString)))))))) == uint32(0) {
		goto _24
	}

	if _c2 == _c || _c2 == _cx {
		goto _25
	}

	goto _23

_25:
	_1bMatch = _196patternCompare(tls, *(*uintptr)(unsafe.Pointer(_zPattern)), *(*uintptr)(unsafe.Pointer(_zString)), _pInfo, _matchOther)
	if _1bMatch == int32(1) {
		goto _26
	}

	return _1bMatch

_26:
	goto _23

_24:
	goto _20

_19:
_27:
	if set25(&_c2, func() uint32 {
		if int32(*(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_zString))))) < int32(0x80) {
			return uint32(*(*uint8)(unsafe.Pointer(postinc19(&(*(*uintptr)(unsafe.Pointer(_zString)))))))
		}
		return _393sqlite3Utf8Read(tls, _zString)
	}()) == uint32(0) {
		goto _28
	}

	if _c2 == _c {
		goto _29
	}

	goto _27

_29:
	_2bMatch = _196patternCompare(tls, *(*uintptr)(unsafe.Pointer(_zPattern)), *(*uintptr)(unsafe.Pointer(_zString)), _pInfo, _matchOther)
	if _2bMatch == int32(1) {
		goto _30
	}

	return _2bMatch

_30:
	goto _27

_28:
_20:
	return int32(2)

_3:
	if _c != _matchOther {
		goto _31
	}

	if int32(*(*uint8)(unsafe.Pointer(_pInfo + 2))) != int32(0) {
		goto _32
	}

	_c = _393sqlite3Utf8Read(tls, _zPattern)
	if _c != uint32(0) {
		goto _34
	}

	return int32(1)

_34:
	_zEscaped = *(*uintptr)(unsafe.Pointer(_zPattern))
	goto _33

_32:
	_prior_c = uint32(0)
	_seen = int32(0)
	_invert = int32(0)
	_c = _393sqlite3Utf8Read(tls, _zString)
	if _c != uint32(0) {
		goto _35
	}

	return int32(1)

_35:
	_c2 = _393sqlite3Utf8Read(tls, _zPattern)
	if _c2 != uint32('^') {
		goto _36
	}

	_invert = int32(1)
	_c2 = _393sqlite3Utf8Read(tls, _zPattern)
_36:
	if _c2 != uint32(']') {
		goto _37
	}

	if _c != uint32(']') {
		goto _38
	}

	_seen = int32(1)
_38:
	_c2 = _393sqlite3Utf8Read(tls, _zPattern)
_37:
_39:
	if _c2 == 0 || _c2 == uint32(']') {
		goto _40
	}

	if _c2 != uint32('-') || int32(*(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_zPattern))))) == int32(']') || int32(*(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_zPattern))))) == int32(0) || _prior_c <= uint32(0) {
		goto _41
	}

	_c2 = _393sqlite3Utf8Read(tls, _zPattern)
	if _c < _prior_c || _c > _c2 {
		goto _43
	}

	_seen = int32(1)
_43:
	_prior_c = uint32(0)
	goto _42

_41:
	if _c != _c2 {
		goto _44
	}

	_seen = int32(1)
_44:
	_prior_c = _c2
_42:
	_c2 = _393sqlite3Utf8Read(tls, _zPattern)
	goto _39

_40:
	if _c2 != uint32(0) && (_seen^_invert) != int32(0) {
		goto _45
	}

	return int32(1)

_45:
	goto _1

_33:
_31:
	_c2 = func() uint32 {
		if int32(*(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_zString))))) < int32(0x80) {
			return uint32(*(*uint8)(unsafe.Pointer(postinc19(&(*(*uintptr)(unsafe.Pointer(_zString)))))))
		}
		return _393sqlite3Utf8Read(tls, _zString)
	}()
	if _c != _c2 {
		goto _46
	}

	goto _1

_46:
	if _noCase == 0 || int32(*(*uint8)(unsafe.Pointer(_215sqlite3UpperToLower + uintptr(uint8(_c))))) != int32(*(*uint8)(unsafe.Pointer(_215sqlite3UpperToLower + uintptr(uint8(_c2))))) || _c >= uint32(0x80) || _c2 >= uint32(0x80) {
		goto _47
	}

	goto _1

_47:
	if _c != _matchOne || (*(*uintptr)(unsafe.Pointer(_zPattern))) == _zEscaped || _c2 == uint32(0) {
		goto _48
	}

	goto _1

_48:
	return int32(1)

	goto _1

_2:
	if int32(*(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_zString))))) == int32(0) {
		return int32(0)
	}

	return int32(1)
}

// _197globInfo ScompareInfo, escapes: true, sqlite3.c:107138:33
var _197globInfo = ds + 6125

// _198sqlite3Malloc is defined at sqlite3.c:25059:21
func _198sqlite3Malloc(tls crt.TLS, _n uint64) (r uintptr /* *void */) {
	esc := crt.MustMalloc(8)
	var _p = esc // **void
	defer crt.Free(esc)
	if _n != uint64(0) && _n < uint64(0x7fffff00) {
		goto _1
	}

	*(*uintptr)(unsafe.Pointer(_p)) = null
	goto _2

_1:
	if (*(*int32)(unsafe.Pointer(_28sqlite3Config))) == 0 {
		goto _3
	}

	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_107mem0)))
	_394mallocWithAlarm(tls, int32(_n), _p)
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_107mem0)))
	goto _4

_3:
	*(*uintptr)(unsafe.Pointer(_p)) = fn17(*(*uintptr)(unsafe.Pointer(_28sqlite3Config + 48)))(tls, int32(_n))
_4:
_2:
	return *(*uintptr)(unsafe.Pointer(_p))
}

// _199bindText is defined at sqlite3.c:78219:12
func _199bindText(tls crt.TLS, _pStmt uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */, _i int32, _zData uintptr /* *void */, _nData int32, _xDel uintptr /* *func(crt.TLS, uintptr) */, _encoding uint8) (r int32) {
	var (
		_p    uintptr // *TVdbe = SVdbe
		_pVar uintptr // *TMem = Ssqlite3_value
		_rc   int32
	)
	_p = _pStmt
	_rc = _200vdbeUnbind(tls, _p, _i)
	if _rc != int32(0) {
		goto _1
	}

	if _zData == 0 {
		goto _3
	}

	_pVar = (*(*uintptr)(unsafe.Pointer(_p + 160))) + 56*uintptr(_i-int32(1))
	_rc = _395sqlite3VdbeMemSetStr(tls, _pVar, _zData, _nData, _encoding, _xDel)
	if _rc != int32(0) || int32(_encoding) == int32(0) {
		goto _4
	}

	_rc = _396sqlite3VdbeChangeEncoding(tls, _pVar, int32(*(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_p)) + 94))))
_4:
	if _rc == 0 {
		goto _5
	}

	_136sqlite3Error(tls, *(*uintptr)(unsafe.Pointer(_p)), _rc)
	_rc = _182sqlite3ApiExit(tls, *(*uintptr)(unsafe.Pointer(_p)), _rc)
_5:
_3:
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p))) + 24)))
	goto _2

_1:
	if _xDel == null || _xDel == uintptr(18446744073709551615) {
		goto _6
	}

	fn16(_xDel)(tls, _zData)
_6:
_2:
	return _rc
}

// _200vdbeUnbind is defined at sqlite3.c:78176:12
func _200vdbeUnbind(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */, _i int32) (r int32) {
	var _pVar uintptr // *TMem = Ssqlite3_value

	if _191vdbeSafetyNotNull(tls, _p) == 0 {
		goto _1
	}

	return _29sqlite3MisuseError(tls, int32(78179))

_1:
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p))) + 24)))
	if (*(*uint32)(unsafe.Pointer(_p + 36))) == uint32(0x2df20da3) && (*(*int32)(unsafe.Pointer(_p + 52))) < int32(0) {
		goto _2
	}

	_136sqlite3Error(tls, *(*uintptr)(unsafe.Pointer(_p)), int32(21))
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p))) + 24)))
	Xsqlite3_log(tls, int32(21), ts+14452 /* "bind on a busy prepared statemen..." */, *(*uintptr)(unsafe.Pointer(_p + 232)))
	return _29sqlite3MisuseError(tls, int32(78187))

_2:
	if _i >= int32(1) && _i <= int32(*(*int16)(unsafe.Pointer(_p + 32))) {
		goto _3
	}

	_136sqlite3Error(tls, *(*uintptr)(unsafe.Pointer(_p)), int32(25))
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p))) + 24)))
	return int32(25)

_3:
	_i--
	_pVar = (*(*uintptr)(unsafe.Pointer(_p + 160))) + 56*uintptr(_i)
	_397sqlite3VdbeMemRelease(tls, _pVar)
	*(*uint16)(unsafe.Pointer(_pVar + 8)) = uint16(0x1)
	_136sqlite3Error(tls, *(*uintptr)(unsafe.Pointer(_p)), int32(0))

	if (*(*uint32)(unsafe.Pointer(_p + 268))) == uint32(0) || ((*(*uint32)(unsafe.Pointer(_p + 268)))&func() uint32 {
		if _i >= int32(31) {
			return uint32(0x80000000)
		}
		return uint32(1) << (uint(_i) % 32)
	}()) == uint32(0) {
		goto _4
	}

	set42b(&(*(*uint16)(unsafe.Pointer(_p + 194))), uint32(1))
_4:
	return int32(0)
}

// _201sqlite3VdbeReset is defined at sqlite3.c:75053:20
func _201sqlite3VdbeReset(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */) (r int32) {
	var _db uintptr // *Tsqlite3 = Ssqlite3

	_db = *(*uintptr)(unsafe.Pointer(_p))
	_398sqlite3VdbeHalt(tls, _p)
	if (*(*int32)(unsafe.Pointer(_p + 52))) < int32(0) {
		goto _1
	}

	_387sqlite3VdbeTransferError(tls, _p)
	if (uint32((*(*uint16)(unsafe.Pointer(_p + 194)))>>5) << 31 >> 31) == 0 {
		goto _3
	}

	set42b(&(*(*uint16)(unsafe.Pointer(_p + 194))), uint32(1))
_3:
	goto _2

_1:
	if (*(*int32)(unsafe.Pointer(_p + 56))) == 0 || (uint32(*(*uint16)(unsafe.Pointer(_p + 194)))<<31>>31) == 0 {
		goto _4
	}

	_134sqlite3ErrorWithMsg(tls, _db, *(*int32)(unsafe.Pointer(_p + 56)), func() uintptr {
		if (*(*uintptr)(unsafe.Pointer(_p + 144))) != 0 {
			return ts + 429 /* "%s" */
		}
		return null
	}(), *(*uintptr)(unsafe.Pointer(_p + 144)))
_4:
_2:
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 144)))
	*(*uintptr)(unsafe.Pointer(_p + 144)) = null
	*(*uintptr)(unsafe.Pointer(_p + 136)) = null
	*(*uint32)(unsafe.Pointer(_p + 36)) = uint32(0x48fa9f76)
	return (*(*int32)(unsafe.Pointer(_p + 56))) & (*(*int32)(unsafe.Pointer(_db + 84)))
}

// _202sqlite3VdbeRewind is defined at sqlite3.c:74086:21
func _202sqlite3VdbeRewind(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */) {
	*(*uint32)(unsafe.Pointer(_p + 36)) = uint32(0x2df20da3)
	*(*int32)(unsafe.Pointer(_p + 52)) = int32(-1)
	*(*int32)(unsafe.Pointer(_p + 56)) = int32(0)
	*(*uint8)(unsafe.Pointer(_p + 190)) = uint8(2)
	*(*int32)(unsafe.Pointer(_p + 60)) = int32(0)
	*(*uint32)(unsafe.Pointer(_p + 48)) = uint32(1)
	*(*uint8)(unsafe.Pointer(_p + 191)) = uint8(255)
	*(*int32)(unsafe.Pointer(_p + 64)) = int32(0)
	*(*int64)(unsafe.Pointer(_p + 80)) = int64(0)
}

// Xsqlite3_value_int is defined at sqlite3.c:77099:16
func Xsqlite3_value_int(tls crt.TLS, _pVal uintptr /* *Tsqlite3_value = Ssqlite3_value */) (r int32) {
	return int32(_399sqlite3VdbeIntValue(tls, _pVal))
}

// _203columnMem is defined at sqlite3.c:77898:12
func _203columnMem(tls crt.TLS, _pStmt uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */, _i int32) (r uintptr /* *TMem = Ssqlite3_value */) {
	var (
		_pVm  uintptr // *TVdbe = SVdbe
		_pOut uintptr // *TMem = Ssqlite3_value
	)
	_pVm = _pStmt
	if _pVm != 0 {
		goto _1
	}

	return _400columnNullValue(tls)

_1:
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pVm))) + 24)))
	if (*(*uintptr)(unsafe.Pointer(_pVm + 136))) == 0 || _i >= int32(*(*uint16)(unsafe.Pointer(_pVm + 188))) || _i < int32(0) {
		goto _2
	}

	_pOut = (*(*uintptr)(unsafe.Pointer(_pVm + 136))) + 56*uintptr(_i)
	goto _3

_2:
	_136sqlite3Error(tls, *(*uintptr)(unsafe.Pointer(_pVm)), int32(25))
	_pOut = _400columnNullValue(tls)
_3:
	return _pOut
}

// _204columnMallocFailure is defined at sqlite3.c:77933:13
func _204columnMallocFailure(tls crt.TLS, _pStmt uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */) {
	var _p uintptr // *TVdbe = SVdbe

	_p = _pStmt
	if _p == 0 {
		goto _1
	}

	*(*int32)(unsafe.Pointer(_p + 56)) = _182sqlite3ApiExit(tls, *(*uintptr)(unsafe.Pointer(_p)), *(*int32)(unsafe.Pointer(_p + 56)))
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p))) + 24)))
_1:
}

// _205sqlite3PrngSaveState is defined at sqlite3.c:27302:21
func _205sqlite3PrngSaveState(tls crt.TLS) {
	crt.Xmemcpy(tls, _401sqlite3SavedPrng, _402sqlite3Prng, uint64(259))
}

// _206sqlite3PrngRestoreState is defined at sqlite3.c:27309:21
func _206sqlite3PrngRestoreState(tls crt.TLS) {
	crt.Xmemcpy(tls, _402sqlite3Prng, _401sqlite3SavedPrng, uint64(259))
}

// Xsqlite3_randomness is defined at sqlite3.c:27215:17
func Xsqlite3_randomness(tls crt.TLS, _N int32, _pBuf uintptr /* *void */) {
	esc := crt.MustMalloc(256)
	var (
		_t     uint8
		_zBuf  uintptr // *uint8
		_mutex uintptr // *Tsqlite3_mutex = Ssqlite3_mutex
		_i     int32
		_k     = esc // *[256]int8
	)
	defer crt.Free(esc)
	_zBuf = _pBuf
	if Xsqlite3_initialize(tls) == 0 {
		goto _1
	}

	return

_1:
	_mutex = _35sqlite3MutexAlloc(tls, int32(5))
	Xsqlite3_mutex_enter(tls, _mutex)
	if _N > int32(0) && _pBuf != 0 {
		goto _2
	}

	*(*uint8)(unsafe.Pointer(_402sqlite3Prng)) = uint8(0)
	Xsqlite3_mutex_leave(tls, _mutex)
	return

_2:
	if (*(*uint8)(unsafe.Pointer(_402sqlite3Prng))) != 0 {
		goto _3
	}

	*(*uint8)(unsafe.Pointer(_402sqlite3Prng + 2)) = uint8(0)
	*(*uint8)(unsafe.Pointer(_402sqlite3Prng + 1)) = uint8(0)
	_403sqlite3OsRandomness(tls, Xsqlite3_vfs_find(tls, null), int32(256), _k)
	_i = int32(0)
_4:
	if _i >= int32(256) {
		goto _6
	}

	*(*uint8)(unsafe.Pointer((_402sqlite3Prng + 3) + uintptr(_i))) = uint8(_i)
	_i++
	goto _4

_6:
	_i = int32(0)
_7:
	if _i >= int32(256) {
		goto _9
	}

	{
		p := &(*(*uint8)(unsafe.Pointer(_402sqlite3Prng + 2)))
		*p = uint8(int32(*p) + (int32(*(*uint8)(unsafe.Pointer((_402sqlite3Prng + 3) + uintptr(_i)))) + int32(*(*int8)(unsafe.Pointer(_k + uintptr(_i))))))
	}
	_t = *(*uint8)(unsafe.Pointer((_402sqlite3Prng + 3) + uintptr(*(*uint8)(unsafe.Pointer(_402sqlite3Prng + 2)))))
	*(*uint8)(unsafe.Pointer((_402sqlite3Prng + 3) + uintptr(*(*uint8)(unsafe.Pointer(_402sqlite3Prng + 2))))) = *(*uint8)(unsafe.Pointer((_402sqlite3Prng + 3) + uintptr(_i)))
	*(*uint8)(unsafe.Pointer((_402sqlite3Prng + 3) + uintptr(_i))) = _t
	_i++
	goto _7

_9:
	*(*uint8)(unsafe.Pointer(_402sqlite3Prng)) = uint8(1)
_3:
_10:
	(*(*uint8)(unsafe.Pointer(_402sqlite3Prng + 1)))++
	_t = *(*uint8)(unsafe.Pointer((_402sqlite3Prng + 3) + uintptr(*(*uint8)(unsafe.Pointer(_402sqlite3Prng + 1)))))
	{
		p := &(*(*uint8)(unsafe.Pointer(_402sqlite3Prng + 2)))
		*p = uint8(int32(*p) + int32(_t))
	}
	*(*uint8)(unsafe.Pointer((_402sqlite3Prng + 3) + uintptr(*(*uint8)(unsafe.Pointer(_402sqlite3Prng + 1))))) = *(*uint8)(unsafe.Pointer((_402sqlite3Prng + 3) + uintptr(*(*uint8)(unsafe.Pointer(_402sqlite3Prng + 2)))))
	*(*uint8)(unsafe.Pointer((_402sqlite3Prng + 3) + uintptr(*(*uint8)(unsafe.Pointer(_402sqlite3Prng + 2))))) = _t
	_t = uint8(int32(_t) + int32(*(*uint8)(unsafe.Pointer((_402sqlite3Prng + 3) + uintptr(*(*uint8)(unsafe.Pointer(_402sqlite3Prng + 1)))))))
	*(*uint8)(unsafe.Pointer(postinc19(&_zBuf))) = *(*uint8)(unsafe.Pointer((_402sqlite3Prng + 3) + uintptr(_t)))
	if preinc47(&_N) != 0 {
		goto _10
	}

	Xsqlite3_mutex_leave(tls, _mutex)
}

// _207sqlite3BitvecBuiltinTest is defined at sqlite3.c:44613:20
func _207sqlite3BitvecBuiltinTest(tls crt.TLS, _sz int32, _aOp uintptr /* *int32 */) (r int32) {
	esc := crt.MustMalloc(4)
	var (
		_pBitvec   uintptr // *TBitvec = SBitvec
		_pV        uintptr // *uint8
		_rc        int32
		_i         = esc // *int32
		_nx        int32
		_pc        int32
		_op        int32
		_pTmpSpace uintptr // *void
	)
	defer crt.Free(esc)
	_pBitvec = 0
	_pV = 0
	_rc = int32(-1)
	_pBitvec = _404sqlite3BitvecCreate(tls, uint32(_sz))
	_pV = _135sqlite3MallocZero(tls, uint64(((_sz+int32(7))/int32(8))+int32(1)))
	_pTmpSpace = Xsqlite3_malloc64(tls, uint64(512))
	if _pBitvec != 0 && _pV != 0 && _pTmpSpace != 0 {
		goto _1
	}

	goto _bitvec_end

_1:
	_405sqlite3BitvecSet(tls, null, uint32(1))
	_406sqlite3BitvecClear(tls, null, uint32(1), _pTmpSpace)
	_pc = int32(0)
_2:
	if set5(&_op, *(*int32)(unsafe.Pointer(_aOp + 4*uintptr(_pc)))) == int32(0) {
		goto _3
	}

	switch _op {
	case int32(1):
		goto _5
	case int32(2):
		goto _6
	case int32(5):
		goto _7
	case int32(3):
		goto _8
	case int32(4):
		goto _9
	default:
		goto _10
	}
_5:
_6:
_7:
	_nx = int32(4)
	*(*int32)(unsafe.Pointer(_i)) = (*(*int32)(unsafe.Pointer(_aOp + 4*uintptr(_pc+int32(2))))) - int32(1)
	{
		p := &(*(*int32)(unsafe.Pointer(_aOp + 4*uintptr(_pc+int32(2)))))
		*p = int32(int32(*p) + (*(*int32)(unsafe.Pointer(_aOp + 4*uintptr(_pc+int32(3))))))
	}
	goto _4

_8:
_9:
_10:
	_nx = int32(2)
	Xsqlite3_randomness(tls, int32(4), _i)
	goto _4

_4:
	if preinc47(&(*(*int32)(unsafe.Pointer(_aOp + 4*uintptr(_pc+int32(1)))))) <= int32(0) {
		goto _11
	}

	_nx = int32(0)
_11:
	_pc = int32(_pc + _nx)
	*(*int32)(unsafe.Pointer(_i)) = ((*(*int32)(unsafe.Pointer(_i))) & int32(0x7fffffff)) % _sz
	if (_op & int32(1)) == int32(0) {
		goto _12
	}

	{
		p := &(*(*uint8)(unsafe.Pointer(_pV + uintptr(((*(*int32)(unsafe.Pointer(_i)))+int32(1))>>(uint(3)%32)))))
		*p = uint8(int32(*p) | (int32(1) << (uint(((*(*int32)(unsafe.Pointer(_i)))+int32(1))&int32(7)) % 32)))
	}
	if _op == int32(5) {
		goto _14
	}

	if _405sqlite3BitvecSet(tls, _pBitvec, uint32((*(*int32)(unsafe.Pointer(_i)))+int32(1))) == 0 {
		goto _15
	}

	goto _bitvec_end

_15:
_14:
	goto _13

_12:
	{
		p := &(*(*uint8)(unsafe.Pointer(_pV + uintptr(((*(*int32)(unsafe.Pointer(_i)))+int32(1))>>(uint(3)%32)))))
		*p = uint8(int32(*p) & (^(int32(1) << (uint(((*(*int32)(unsafe.Pointer(_i)))+int32(1))&int32(7)) % 32))))
	}
	_406sqlite3BitvecClear(tls, _pBitvec, uint32((*(*int32)(unsafe.Pointer(_i)))+int32(1)), _pTmpSpace)
_13:
	goto _2

_3:
	_rc = int32(uint32((_407sqlite3BitvecTest(tls, null, uint32(0))+_407sqlite3BitvecTest(tls, _pBitvec, uint32(_sz+int32(1))))+_407sqlite3BitvecTest(tls, _pBitvec, uint32(0))) + (_408sqlite3BitvecSize(tls, _pBitvec) - uint32(_sz)))
	*(*int32)(unsafe.Pointer(_i)) = int32(1)
_16:
	if (*(*int32)(unsafe.Pointer(_i))) > _sz {
		goto _18
	}

	if bool2int((int32(*(*uint8)(unsafe.Pointer(_pV + uintptr((*(*int32)(unsafe.Pointer(_i)))>>(uint(3)%32)))))&(int32(1)<<(uint((*(*int32)(unsafe.Pointer(_i)))&int32(7))%32))) != int32(0)) == _407sqlite3BitvecTest(tls, _pBitvec, uint32(*(*int32)(unsafe.Pointer(_i)))) {
		goto _19
	}

	_rc = *(*int32)(unsafe.Pointer(_i))
	goto _18

_19:
	(*(*int32)(unsafe.Pointer(_i)))++
	goto _16

_18:
	goto _bitvec_end
_bitvec_end:
	Xsqlite3_free(tls, _pTmpSpace)
	Xsqlite3_free(tls, _pV)
	_409sqlite3BitvecDestroy(tls, _pBitvec)
	return _rc
}

// _208sqlite3FaultSim is defined at sqlite3.c:28177:20
func _208sqlite3FaultSim(tls crt.TLS, _iTest int32) (r int32) {
	var _xCallback uintptr // *func(crt.TLS, int32) int32

	_xCallback = *(*uintptr)(unsafe.Pointer(_28sqlite3Config + 408))
	if _xCallback != 0 {
		return fn48(_xCallback)(tls, _iTest)
	}

	return int32(0)
}

// _209sqlite3BenignMallocHooks is defined at sqlite3.c:21172:21
func _209sqlite3BenignMallocHooks(tls crt.TLS, _xBenignBegin uintptr /* *func(crt.TLS) */, _xBenignEnd uintptr /* *func(crt.TLS) */) {
	*(*uintptr)(unsafe.Pointer(_410sqlite3Hooks)) = _xBenignBegin
	*(*uintptr)(unsafe.Pointer(_410sqlite3Hooks + 8)) = _xBenignEnd
}

// _210sqlite3BtreeSetPageSize is defined at sqlite3.c:62424:20
func _210sqlite3BtreeSetPageSize(tls crt.TLS, _p uintptr /* *TBtree = SBtree */, _pageSize int32, _nReserve int32, _iFix int32) (r int32) {
	var (
		_rc  int32
		_pBt uintptr // *TBtShared = SBtShared
	)
	_rc = int32(0)
	_pBt = *(*uintptr)(unsafe.Pointer(_p + 8))

	_139sqlite3BtreeEnter(tls, _p)
	if (int32(*(*uint16)(unsafe.Pointer(_pBt + 38))) & int32(0x2)) == 0 {
		goto _1
	}

	_169sqlite3BtreeLeave(tls, _p)
	return int32(8)

_1:
	if _nReserve >= int32(0) {
		goto _2
	}

	_nReserve = int32((*(*uint32)(unsafe.Pointer(_pBt + 48))) - (*(*uint32)(unsafe.Pointer(_pBt + 52))))
_2:
	if _pageSize < int32(512) || _pageSize > int32(65536) || ((_pageSize-int32(1))&_pageSize) != int32(0) {
		goto _3
	}

	*(*uint32)(unsafe.Pointer(_pBt + 48)) = uint32(_pageSize)
	_411freeTempSpace(tls, _pBt)
_3:
	_rc = _412sqlite3PagerSetPagesize(tls, *(*uintptr)(unsafe.Pointer(_pBt)), _pBt+48, _nReserve)
	*(*uint32)(unsafe.Pointer(_pBt + 52)) = (*(*uint32)(unsafe.Pointer(_pBt + 48))) - uint32(uint16(_nReserve))
	if _iFix == 0 {
		goto _4
	}

	{
		p := &(*(*uint16)(unsafe.Pointer(_pBt + 38)))
		*p = uint16(int32(*p) | int32(0x2))
	}
_4:
	_169sqlite3BtreeLeave(tls, _p)
	return _rc
}

// _211sqlite3Strlen30 is defined at sqlite3.c:28238:20
func _211sqlite3Strlen30(tls crt.TLS, _z uintptr /* *int8 */) (r int32) {
	if _z != 0 {
		goto _1
	}

	return int32(0)

_1:
	return int32(0x3fffffff) & int32(crt.Xstrlen(tls, _z))
}

// _212sqlite3KeywordCode is defined at sqlite3.c:141112:20
func _212sqlite3KeywordCode(tls crt.TLS, _z uintptr /* *uint8 */, _n int32) (r int32) {
	esc := crt.MustMalloc(4)
	var _id = esc // *int32
	defer crt.Free(esc)
	*(*int32)(unsafe.Pointer(_id)) = int32(59)
	_413keywordCode(tls, _z, _n, _id)
	return *(*int32)(unsafe.Pointer(_id))
}

// _213sqlite3FindDbName is defined at sqlite3.c:101414:20
func _213sqlite3FindDbName(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _zName uintptr /* *int8 */) (r int32) {
	var (
		_i   int32
		_pDb uintptr // *TDb = SDb
	)
	_i = int32(-1)
	if _zName == 0 {
		goto _1
	}

	_i = (*(*int32)(unsafe.Pointer(_db + 40))) - int32(1)
	_pDb = (*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_i)
_2:
	if _i < int32(0) {
		goto _4
	}

	if int32(0) != Xsqlite3_stricmp(tls, *(*uintptr)(unsafe.Pointer(_pDb)), _zName) {
		goto _5
	}

	goto _4

_5:
	if _i != int32(0) || int32(0) != Xsqlite3_stricmp(tls, ts+1432 /* "main" */, _zName) {
		goto _6
	}

	goto _4

_6:
	_i--
	_pDb -= 32
	goto _2

_4:
_1:
	return _i
}

// _214aHardLimit [12]int32, escapes: true, sqlite3.c:144406:18
var _214aHardLimit = ds + 6132

// _215sqlite3UpperToLower [256]uint8, escapes: true, sqlite3.c:18224:36
var _215sqlite3UpperToLower = ds + 6180

// _216lintFkeyIndexes is defined at shell.c:5228:12
func _216lintFkeyIndexes(tls crt.TLS, _pState uintptr /* *TShellState = SShellState */, _azArg uintptr /* **int8 */, _nArg int32) (r int32) {
	esc := crt.MustMalloc(24)
	var (
		_db             uintptr // *Tsqlite3 = Ssqlite3
		_out            uintptr // *TFILE = S_IO_FILE
		_bVerbose       int32
		_bGroupByParent int32
		_i              int32
		_zIndent        uintptr // *int8
		_rc             int32
		_pSql           = esc   // **Tsqlite3_stmt = Ssqlite3_stmt
		_zSql           uintptr // *int8
		_zGlobIPK       uintptr // *int8
		_n              int32
		_rc2            int32
		_zPrev          uintptr // *int8
		_res            int32
		_pExplain       = esc + 16 // **Tsqlite3_stmt = Ssqlite3_stmt
		_zEQP           uintptr    // *int8
		_zGlob          uintptr    // *int8
		_zFrom          uintptr    // *int8
		_zTarget        uintptr    // *int8
		_zCI            uintptr    // *int8
		_zParent        uintptr    // *int8
		_zPlan          uintptr    // *int8
	)
	defer crt.Free(esc)
	_db = *(*uintptr)(unsafe.Pointer(_pState))
	_out = *(*uintptr)(unsafe.Pointer(_pState + 32))
	_bVerbose = int32(0)
	_bGroupByParent = int32(0)
	_zIndent = ts + 4553 /* "" */
	*(*uintptr)(unsafe.Pointer(_pSql)) = 0
	_zSql = ts + 14492     /* "SELECT      'EXPLAIN QUERY PLAN ..." */
	_zGlobIPK = ts + 15450 /* "SEARCH TABLE * USING INTEGER PRI..." */
	_i = int32(2)
_1:
	if _i >= _nArg {
		goto _3
	}

	_n = int32(crt.Xstrlen(tls, *(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_i)))))
	if _n <= int32(1) || Xsqlite3_strnicmp(tls, ts+15501 /* "-verbose" */, *(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_i))), _n) != int32(0) {
		goto _4
	}

	_bVerbose = int32(1)
	goto _5

_4:
	if _n <= int32(1) || Xsqlite3_strnicmp(tls, ts+15510 /* "-groupbyparent" */, *(*uintptr)(unsafe.Pointer(_azArg + 8*uintptr(_i))), _n) != int32(0) {
		goto _6
	}

	_bGroupByParent = int32(1)
	_zIndent = ts + 15525 /* "    " */
	goto _7

_6:
	crt.Xfprintf(tls, Xstderr, ts+15530 /* "Usage: %s %s ?-verbose? ?-groupb..." */, *(*uintptr)(unsafe.Pointer(_azArg)), *(*uintptr)(unsafe.Pointer(_azArg + 8)))
	return int32(1)

_7:
_5:
	_i++
	goto _1

_3:
	_rc = Xsqlite3_create_function(tls, _db, ts+15572 /* "fkey_collate_clause" */, int32(4), int32(1), null, fp6(_414shellFkeyCollateClause), null, null)
	if _rc != int32(0) {
		goto _8
	}

	_rc = Xsqlite3_prepare_v2(tls, _db, _zSql, int32(-1), _pSql, null)
_8:
	if _rc != int32(0) {
		goto _9
	}

	Xsqlite3_bind_int(tls, *(*uintptr)(unsafe.Pointer(_pSql)), int32(1), _bGroupByParent)
_9:
	if _rc != int32(0) {
		goto _10
	}

	_zPrev = 0
_12:
	if int32(100) != Xsqlite3_step(tls, *(*uintptr)(unsafe.Pointer(_pSql))) {
		goto _13
	}

	_res = int32(-1)
	*(*uintptr)(unsafe.Pointer(_pExplain)) = 0
	_zEQP = Xsqlite3_column_text(tls, *(*uintptr)(unsafe.Pointer(_pSql)), int32(0))
	_zGlob = Xsqlite3_column_text(tls, *(*uintptr)(unsafe.Pointer(_pSql)), int32(1))
	_zFrom = Xsqlite3_column_text(tls, *(*uintptr)(unsafe.Pointer(_pSql)), int32(2))
	_zTarget = Xsqlite3_column_text(tls, *(*uintptr)(unsafe.Pointer(_pSql)), int32(3))
	_zCI = Xsqlite3_column_text(tls, *(*uintptr)(unsafe.Pointer(_pSql)), int32(4))
	_zParent = Xsqlite3_column_text(tls, *(*uintptr)(unsafe.Pointer(_pSql)), int32(5))
	_rc = Xsqlite3_prepare_v2(tls, _db, _zEQP, int32(-1), _pExplain, null)
	if _rc == int32(0) {
		goto _14
	}

	goto _13

_14:
	if int32(100) != Xsqlite3_step(tls, *(*uintptr)(unsafe.Pointer(_pExplain))) {
		goto _15
	}

	_zPlan = Xsqlite3_column_text(tls, *(*uintptr)(unsafe.Pointer(_pExplain)), int32(3))
	_res = bool2int((int32(0) == Xsqlite3_strglob(tls, _zGlob, _zPlan)) || (int32(0) == Xsqlite3_strglob(tls, _zGlobIPK, _zPlan)))
_15:
	_rc = Xsqlite3_finalize(tls, *(*uintptr)(unsafe.Pointer(_pExplain)))
	if _rc == int32(0) {
		goto _16
	}

	goto _13

_16:
	if _res >= int32(0) {
		goto _17
	}

	crt.Xfprintf(tls, Xstderr, ts+15592 /* "Error: internal error" */)
	goto _13

	goto _18

_17:
	if _bGroupByParent == 0 || _bVerbose == 0 && _res != int32(0) || _zPrev != 0 && Xsqlite3_stricmp(tls, _zParent, _zPrev) == 0 {
		goto _19
	}

	crt.Xfprintf(tls, _out, ts+15614 /* "-- Parent table %s\n" */, _zParent)
	Xsqlite3_free(tls, _zPrev)
	_zPrev = Xsqlite3_mprintf(tls, ts+429 /* "%s" */, _zParent)
_19:
	if _res != int32(0) {
		goto _20
	}

	crt.Xfprintf(tls, _out, ts+15634 /* "%s%s --> %s\n" */, _zIndent, _zCI, _zTarget)
	goto _21

_20:
	if _bVerbose == 0 {
		goto _22
	}

	crt.Xfprintf(tls, _out, ts+15647 /* "%s/* no extra indexes required f..." */, _zIndent, _zFrom, _zTarget)
_22:
_21:
_18:
	goto _12

_13:
	Xsqlite3_free(tls, _zPrev)
	if _rc == int32(0) {
		goto _23
	}

	crt.Xfprintf(tls, Xstderr, ts+6158 /* "%s\n" */, Xsqlite3_errmsg(tls, _db))
_23:
	_rc2 = Xsqlite3_finalize(tls, *(*uintptr)(unsafe.Pointer(_pSql)))
	if _rc != int32(0) || _rc2 == int32(0) {
		goto _24
	}

	_rc = _rc2
	crt.Xfprintf(tls, Xstderr, ts+6158 /* "%s\n" */, Xsqlite3_errmsg(tls, _db))
_24:
	goto _11

_10:
	crt.Xfprintf(tls, Xstderr, ts+6158 /* "%s\n" */, Xsqlite3_errmsg(tls, _db))
_11:
	return _rc
}

// _217sqlite3LoadExtension is defined at sqlite3.c:113293:12
func _217sqlite3LoadExtension(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _zFile uintptr /* *int8 */, _zProc uintptr /* *int8 */, _pzErrMsg uintptr /* **int8 */) (r int32) {
	esc := crt.MustMalloc(8)
	var (
		_pVfs      uintptr // *Tsqlite3_vfs = Ssqlite3_vfs
		_handle    uintptr // *void
		_xInit     uintptr // Tsqlite3_loadext_entry = *func(c...uintptr, uintptr, uintptr) int32
		_zErrmsg   = esc   // **int8
		_zEntry    uintptr // *int8
		_zAltEntry uintptr // *int8
		_aHandle   uintptr // **void
		_nMsg      uint64
		_ii        int32
		_rc        int32
		_zAltFile  uintptr // *int8
		_iFile     int32
		_iEntry    int32
		_c         int32
		_ncFile    int32
	)
	defer crt.Free(esc)
	_pVfs = *(*uintptr)(unsafe.Pointer(_db))
	*(*uintptr)(unsafe.Pointer(_zErrmsg)) = 0
	_zAltEntry = 0
	_nMsg = uint64(int32(300) + _211sqlite3Strlen30(tls, _zFile))
	if _pzErrMsg == 0 {
		goto _1
	}

	*(*uintptr)(unsafe.Pointer(_pzErrMsg)) = null
_1:
	if ((*(*uint32)(unsafe.Pointer(_db + 48))) & uint32(0x10000)) != uint32(0) {
		goto _2
	}

	if _pzErrMsg == 0 {
		goto _3
	}

	*(*uintptr)(unsafe.Pointer(_pzErrMsg)) = Xsqlite3_mprintf(tls, ts+15695 /* "not authorized" */)
_3:
	return int32(1)

_2:
	_zEntry = func() uintptr {
		if _zProc != 0 {
			return _zProc
		}
		return ts + 15710 /* "sqlite3_extension_init" */
	}()
	_handle = _416sqlite3OsDlOpen(tls, _pVfs, _zFile)
	_ii = int32(0)
_4:
	if _ii >= int32(1) || _handle != 0 {
		goto _6
	}

	_zAltFile = Xsqlite3_mprintf(tls, ts+15733 /* "%s.%s" */, _zFile, *(*uintptr)(unsafe.Pointer(_415azEndings + 8*uintptr(_ii))))
	if _zAltFile != 0 {
		goto _7
	}

	return int32(7)

_7:
	_handle = _416sqlite3OsDlOpen(tls, _pVfs, _zAltFile)
	Xsqlite3_free(tls, _zAltFile)
	_ii++
	goto _4

_6:
	if _handle != 0 {
		goto _8
	}

	if _pzErrMsg == 0 {
		goto _9
	}

	*(*uintptr)(unsafe.Pointer(_pzErrMsg)) = set4(&(*(*uintptr)(unsafe.Pointer(_zErrmsg))), Xsqlite3_malloc64(tls, _nMsg))
	if (*(*uintptr)(unsafe.Pointer(_zErrmsg))) == 0 {
		goto _10
	}

	Xsqlite3_snprintf(tls, int32(_nMsg), *(*uintptr)(unsafe.Pointer(_zErrmsg)), ts+15739 /* "unable to open shared library [%..." */, _zFile)
	_417sqlite3OsDlError(tls, _pVfs, int32(_nMsg-uint64(1)), *(*uintptr)(unsafe.Pointer(_zErrmsg)))
_10:
_9:
	return int32(1)

_8:
	_xInit = _418sqlite3OsDlSym(tls, _pVfs, _handle, _zEntry)
	if _xInit != 0 || _zProc != 0 {
		goto _11
	}

	_ncFile = _211sqlite3Strlen30(tls, _zFile)
	_zAltEntry = Xsqlite3_malloc64(tls, uint64(_ncFile+int32(30)))
	if _zAltEntry != 0 {
		goto _12
	}

	_419sqlite3OsDlClose(tls, _pVfs, _handle)
	return int32(7)

_12:
	crt.Xmemcpy(tls, _zAltEntry, ts+15774 /* "sqlite3_" */, uint64(8))
	_iFile = _ncFile - int32(1)
_13:
	if _iFile < int32(0) || int32(*(*int8)(unsafe.Pointer(_zFile + uintptr(_iFile)))) == int32('/') {
		goto _15
	}

	_iFile--
	goto _13

_15:
	_iFile++
	if Xsqlite3_strnicmp(tls, _zFile+uintptr(_iFile), ts+15783 /* "lib" */, int32(3)) != int32(0) {
		goto _16
	}

	_iFile = int32(_iFile + int32(3))
_16:
	_iEntry = int32(8)
_17:
	if set5(&_c, int32(*(*int8)(unsafe.Pointer(_zFile + uintptr(_iFile))))) == int32(0) || _c == int32('.') {
		goto _19
	}

	if int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(uint8(_c)))))&int32(0x2) == 0 {
		goto _20
	}

	*(*int8)(unsafe.Pointer(_zAltEntry + uintptr(postinc7(&_iEntry)))) = int8(*(*uint8)(unsafe.Pointer(_215sqlite3UpperToLower + uintptr(uint32(_c)))))
_20:
	_iFile++
	goto _17

_19:
	crt.Xmemcpy(tls, _zAltEntry+uintptr(_iEntry), ts+15787 /* "_init" */, uint64(6))
	_zEntry = _zAltEntry
	_xInit = _418sqlite3OsDlSym(tls, _pVfs, _handle, _zEntry)
_11:
	if _xInit != 0 {
		goto _21
	}

	if _pzErrMsg == 0 {
		goto _22
	}

	_nMsg = uint64(_nMsg + uint64(_211sqlite3Strlen30(tls, _zEntry)))
	*(*uintptr)(unsafe.Pointer(_pzErrMsg)) = set4(&(*(*uintptr)(unsafe.Pointer(_zErrmsg))), Xsqlite3_malloc64(tls, _nMsg))
	if (*(*uintptr)(unsafe.Pointer(_zErrmsg))) == 0 {
		goto _23
	}

	Xsqlite3_snprintf(tls, int32(_nMsg), *(*uintptr)(unsafe.Pointer(_zErrmsg)), ts+15793 /* "no entry point [%s] in shared li..." */, _zEntry, _zFile)
	_417sqlite3OsDlError(tls, _pVfs, int32(_nMsg-uint64(1)), *(*uintptr)(unsafe.Pointer(_zErrmsg)))
_23:
_22:
	_419sqlite3OsDlClose(tls, _pVfs, _handle)
	Xsqlite3_free(tls, _zAltEntry)
	return int32(1)

_21:
	Xsqlite3_free(tls, _zAltEntry)
	_rc = fn49(_xInit)(tls, _db, _zErrmsg, _420sqlite3Apis)
	if _rc == 0 {
		goto _24
	}

	if _rc != int32(256) {
		goto _25
	}

	return int32(0)

_25:
	if _pzErrMsg == 0 {
		goto _26
	}

	*(*uintptr)(unsafe.Pointer(_pzErrMsg)) = Xsqlite3_mprintf(tls, ts+15836 /* "error during initialization: %s" */, *(*uintptr)(unsafe.Pointer(_zErrmsg)))
_26:
	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_zErrmsg)))
	_419sqlite3OsDlClose(tls, _pVfs, _handle)
	return int32(1)

_24:
	_aHandle = _295sqlite3DbMallocZero(tls, _db, uint64(uint64(8)*uint64((*(*int32)(unsafe.Pointer(_db + 204)))+int32(1))))
	if _aHandle != 0 {
		goto _27
	}

	return int32(7)

_27:
	if (*(*int32)(unsafe.Pointer(_db + 204))) <= int32(0) {
		goto _28
	}

	crt.Xmemcpy(tls, _aHandle, *(*uintptr)(unsafe.Pointer(_db + 208)), uint64(8)*uint64(*(*int32)(unsafe.Pointer(_db + 204))))
_28:
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_db + 208)))
	*(*uintptr)(unsafe.Pointer(_db + 208)) = _aHandle
	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 208))) + 8*uintptr(postinc7(&(*(*int32)(unsafe.Pointer(_db + 204))))))) = _handle
	return int32(0)
}

// _218sqlite3OsSleep is defined at sqlite3.c:20952:20
func _218sqlite3OsSleep(tls crt.TLS, _pVfs uintptr /* *Tsqlite3_vfs = Ssqlite3_vfs */, _nMicro int32) (r int32) {
	return fn50(*(*uintptr)(unsafe.Pointer(_pVfs + 112)))(tls, _pVfs, _nMicro)
}

type STable struct {
	XzName        uintptr // *int8
	XaCol         uintptr // *SColumn
	XpIndex       uintptr // *SIndex
	XpSelect      uintptr // *SSelect
	XpFKey        uintptr // *SFKey
	XzColAff      uintptr // *int8
	XpCheck       uintptr // *SExprList
	Xtnum         int32
	XnTabRef      uint32
	XtabFlags     uint32
	XiPKey        int16
	XnCol         int16
	XnRowLogEst   int16
	XszTabRow     int16
	XkeyConf      uint8
	XaddColOffset int32
	XnModuleArg   int32
	XazModuleArg  uintptr // **int8
	XpVTable      uintptr // *SVTable
	XpTrigger     uintptr // *STrigger
	XpSchema      uintptr // *SSchema
	XpNextZombie  uintptr // *STable
}

type SColumn struct {
	XzName    uintptr // *int8
	XpDflt    uintptr // *SExpr
	XzColl    uintptr // *int8
	XnotNull  uint8
	Xaffinity int8
	XszEst    uint8
	XcolFlags uint8
}

// _219sqlite3BtreeEnterAll is defined at sqlite3.c:59562:21
func _219sqlite3BtreeEnterAll(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */) {
	if int32(*(*uint8)(unsafe.Pointer(_db + 105))) != int32(0) {
		goto _1
	}

	_421btreeEnterAll(tls, _db)
_1:
}

// _220sqlite3Init is defined at sqlite3.c:117149:20
func _220sqlite3Init(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pzErrMsg uintptr /* **int8 */) (r int32) {
	var (
		_i               int32
		_rc              int32
		_commit_internal int32
	)
	_commit_internal = bool2int((*(*uint32)(unsafe.Pointer(_db + 44)))&uint32(0x1) == 0)

	*(*uint8)(unsafe.Pointer(_db + 94)) = *(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_db + 32)) + 24))) + 113))

	if (int32(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_db + 32)) + 24))) + 114))) & int32(0x1)) == int32(0x1) {
		goto _1
	}

	_rc = _422sqlite3InitOne(tls, _db, int32(0), _pzErrMsg)
	if _rc == 0 {
		goto _2
	}

	return _rc

_2:
_1:
	_i = (*(*int32)(unsafe.Pointer(_db + 40))) - int32(1)
_3:
	if _i <= int32(0) {
		goto _5
	}

	if (int32(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_i)) + 24))) + 114))) & int32(0x1)) == int32(0x1) {
		goto _6
	}

	_rc = _422sqlite3InitOne(tls, _db, _i, _pzErrMsg)
	if _rc == 0 {
		goto _7
	}

	return _rc

_7:
_6:
	_i--
	goto _3

_5:
	if _commit_internal == 0 {
		goto _8
	}

	_423sqlite3CommitInternalChanges(tls, _db)
_8:
	return int32(0)
}

// _221sqlite3FindTable is defined at sqlite3.c:100996:22
func _221sqlite3FindTable(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _zName uintptr /* *int8 */, _zDatabase uintptr /* *int8 */) (r uintptr /* *TTable = STable */) {
	var (
		_p uintptr // *TTable = STable
		_i int32
		_j int32
	)
	_p = 0

_1:
	_i = int32(0)
_3:
	if _i >= (*(*int32)(unsafe.Pointer(_db + 40))) {
		goto _5
	}

	_j = func() int32 {
		if _i < int32(2) {
			return _i ^ int32(1)
		}
		return _i
	}()
	if _zDatabase != 0 && _110sqlite3StrICmp(tls, _zDatabase, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_j)))) != int32(0) {
		goto _6
	}

	_p = _424sqlite3HashFind(tls, (*(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_j)) + 24)))+8, _zName)
	if _p == 0 {
		goto _7
	}

	return _p

_7:
_6:
	_i++
	goto _3

_5:
	if _110sqlite3StrICmp(tls, _zName, ts+5127 /* "sqlite_master" */) == int32(0) {
		goto _8
	}

	goto _2

_8:
	if Xsqlite3_stricmp(tls, _zDatabase, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32))) == int32(0) {
		goto _9
	}

	goto _2

_9:
	_zName = ts + 5250 /* "sqlite_temp_master" */
	goto _1

_2:
	return null
}

// _222sqlite3IsRowid is defined at sqlite3.c:93870:20
func _222sqlite3IsRowid(tls crt.TLS, _z uintptr /* *int8 */) (r int32) {
	if _110sqlite3StrICmp(tls, _z, ts+4139 /* "_ROWID_" */) != int32(0) {
		goto _1
	}

	return int32(1)

_1:
	if _110sqlite3StrICmp(tls, _z, ts+15868 /* "ROWID" */) != int32(0) {
		goto _2
	}

	return int32(1)

_2:
	if _110sqlite3StrICmp(tls, _z, ts+15874 /* "OID" */) != int32(0) {
		goto _3
	}

	return int32(1)

_3:
	return int32(0)
}

// _223sqlite3ColumnType is defined at sqlite3.c:28250:21
func _223sqlite3ColumnType(tls crt.TLS, _pCol uintptr /* *TColumn = SColumn */, _zDflt uintptr /* *int8 */) (r uintptr /* *int8 */) {
	if (int32(*(*uint8)(unsafe.Pointer(_pCol + 27))) & int32(0x4)) != int32(0) {
		goto _1
	}

	return _zDflt

_1:
	return ((*(*uintptr)(unsafe.Pointer(_pCol))) + uintptr(crt.Xstrlen(tls, *(*uintptr)(unsafe.Pointer(_pCol))))) + uintptr(1)
}

// _224sqlite3StrBINARY [7]int8, escapes: true, sqlite3.c:18496:27
var _224sqlite3StrBINARY = ds + 6436

// _225sqlite3BtreeLeaveAll is defined at sqlite3.c:59574:21
func _225sqlite3BtreeLeaveAll(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */) {
	if int32(*(*uint8)(unsafe.Pointer(_db + 105))) != int32(0) {
		goto _1
	}

	_425btreeLeaveAll(tls, _db)
_1:
}

// _226sqlite3MPrintf is defined at sqlite3.c:26493:21
func _226sqlite3MPrintf(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _zFormat uintptr /* *int8 */, ap ...interface{}) (r uintptr /* *int8 */) {
	var (
		_ap *[]interface{} // Tva_list = T__gnuc_va_list = T__...a_list = *struct{X_ [2]uintptr;}
		_z  uintptr        // *int8
	)
	{
		x := ap
		_ap = &x
	}
	_z = _315sqlite3VMPrintf(tls, _db, _zFormat, _ap)
	_ap = nil
	return _z
}

// _227likeInfoNorm ScompareInfo, escapes: true, sqlite3.c:107141:33
var _227likeInfoNorm = ds + 6443

// _228displayStatLine is defined at shell.c:3215:13
func _228displayStatLine(tls crt.TLS, _p uintptr /* *TShellState = SShellState */, _zLabel uintptr /* *int8 */, _zFormat uintptr /* *int8 */, _iStatusCtrl int32, _bReset int32) {
	esc := crt.MustMalloc(232)
	var (
		_iCur     = esc      // *Tsqlite3_int64 = Tsqlite_int64 = int64
		_iHiwtr   = esc + 16 // *Tsqlite3_int64 = Tsqlite_int64 = int64
		_i        int32
		_nPercent int32
		_zLine    = esc + 32 // *[200]int8
	)
	defer crt.Free(esc)
	*(*int64)(unsafe.Pointer(_iCur)) = int64(-1)
	*(*int64)(unsafe.Pointer(_iHiwtr)) = int64(-1)
	Xsqlite3_status64(tls, _iStatusCtrl, _iCur, _iHiwtr, _bReset)
	_i = int32(0)
	_nPercent = int32(0)
_1:
	if (*(*int8)(unsafe.Pointer(_zFormat + uintptr(_i)))) == 0 {
		goto _3
	}

	if int32(*(*int8)(unsafe.Pointer(_zFormat + uintptr(_i)))) != int32('%') {
		goto _4
	}

	_nPercent++
_4:
	_i++
	goto _1

_3:
	if _nPercent <= int32(1) {
		goto _5
	}

	Xsqlite3_snprintf(tls, int32(200), _zLine, _zFormat, *(*int64)(unsafe.Pointer(_iCur)), *(*int64)(unsafe.Pointer(_iHiwtr)))
	goto _6

_5:
	Xsqlite3_snprintf(tls, int32(200), _zLine, _zFormat, *(*int64)(unsafe.Pointer(_iHiwtr)))
_6:
	crt.Xfprintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+15878 /* "%-36s %s\n" */, _zLabel, _zLine)
}

// Xsqlite3_db_status is defined at sqlite3.c:19258:16
func Xsqlite3_db_status(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _op int32, _pCurrent uintptr /* *int32 */, _pHighwater uintptr /* *int32 */, _resetFlag int32) (r int32) {
	esc := crt.MustMalloc(36)
	var (
		_rc        int32
		_p         uintptr // *TLookasideSlot = SLookasideSlot
		_totalUsed int32
		_i         int32
		_pBt       uintptr // *TBtree = SBtree
		_pPager    uintptr // *TPager = SPager
		_nByte     int32
		_1i        int32
		_2nByte    = esc      // *int32
		_pSchema   uintptr    // *TSchema = SSchema
		_3p        uintptr    // *THashElem = SHashElem
		_pVdbe     uintptr    // *SVdbe
		_4nByte    = esc + 16 // *int32
		_5i        int32
		_nRet      = esc + 32 // *int32
		_6pPager   uintptr    // *TPager = SPager
	)
	defer crt.Free(esc)
	_rc = int32(0)
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	switch _op {
	case int32(0):
		goto _2
	case int32(4):
		goto _3
	case int32(5):
		goto _4
	case int32(6):
		goto _5
	case int32(11):
		goto _6
	case int32(1):
		goto _7
	case int32(2):
		goto _8
	case int32(3):
		goto _9
	case int32(7):
		goto _10
	case int32(8):
		goto _11
	case int32(9):
		goto _12
	case int32(10):
		goto _13
	default:
		goto _14
	}
_2:
	*(*int32)(unsafe.Pointer(_pCurrent)) = _426sqlite3LookasideUsed(tls, _db, _pHighwater)
	if _resetFlag == 0 {
		goto _15
	}

	_p = *(*uintptr)(unsafe.Pointer((_db + 352) + 32))
	if _p == 0 {
		goto _16
	}

_17:
	if (*(*uintptr)(unsafe.Pointer(_p))) == 0 {
		goto _18
	}

	_p = *(*uintptr)(unsafe.Pointer(_p))
	goto _17

_18:
	*(*uintptr)(unsafe.Pointer(_p)) = *(*uintptr)(unsafe.Pointer((_db + 352) + 24))
	*(*uintptr)(unsafe.Pointer((_db + 352) + 24)) = *(*uintptr)(unsafe.Pointer((_db + 352) + 32))
	*(*uintptr)(unsafe.Pointer((_db + 352) + 32)) = null
_16:
_15:
	goto _1

_3:
_4:
_5:
	*(*int32)(unsafe.Pointer(_pCurrent)) = int32(0)
	*(*int32)(unsafe.Pointer(_pHighwater)) = int32(*(*uint32)(unsafe.Pointer(((_db + 352) + 12) + 4*uintptr(_op-int32(4)))))
	if _resetFlag == 0 {
		goto _19
	}

	*(*uint32)(unsafe.Pointer(((_db + 352) + 12) + 4*uintptr(_op-int32(4)))) = uint32(0)
_19:
	goto _1

_6:
_7:
	_totalUsed = int32(0)
	_219sqlite3BtreeEnterAll(tls, _db)
	_i = int32(0)
_20:
	if _i >= (*(*int32)(unsafe.Pointer(_db + 40))) {
		goto _22
	}

	_pBt = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_i)) + 8))
	if _pBt == 0 {
		goto _23
	}

	_pPager = _141sqlite3BtreePager(tls, _pBt)
	_nByte = _427sqlite3PagerMemUsed(tls, _pPager)
	if _op != int32(11) {
		goto _24
	}

	_nByte = _nByte / _428sqlite3BtreeConnectionCount(tls, _pBt)
_24:
	_totalUsed = int32(_totalUsed + _nByte)
_23:
	_i++
	goto _20

_22:
	_225sqlite3BtreeLeaveAll(tls, _db)
	*(*int32)(unsafe.Pointer(_pCurrent)) = _totalUsed
	*(*int32)(unsafe.Pointer(_pHighwater)) = int32(0)
	goto _1

_8:
	*(*int32)(unsafe.Pointer(_2nByte)) = int32(0)
	_219sqlite3BtreeEnterAll(tls, _db)
	*(*uintptr)(unsafe.Pointer(_db + 672)) = _2nByte
	_1i = int32(0)
_25:
	if _1i >= (*(*int32)(unsafe.Pointer(_db + 40))) {
		goto _27
	}

	_pSchema = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_1i)) + 24))
	if _pSchema == 0 {
		goto _28
	}

	*(*int32)(unsafe.Pointer(_2nByte)) = int32(uint32(*(*int32)(unsafe.Pointer(_2nByte))) + (uint32(fn48(*(*uintptr)(unsafe.Pointer((_28sqlite3Config + 48) + 32)))(tls, int32(32))) * ((((*(*uint32)(unsafe.Pointer((_pSchema + 8) + 4))) + (*(*uint32)(unsafe.Pointer((_pSchema + 56) + 4)))) + (*(*uint32)(unsafe.Pointer((_pSchema + 32) + 4)))) + (*(*uint32)(unsafe.Pointer((_pSchema + 80) + 4))))))
	*(*int32)(unsafe.Pointer(_2nByte)) = int32(uint64(*(*int32)(unsafe.Pointer(_2nByte))) + Xsqlite3_msize(tls, *(*uintptr)(unsafe.Pointer((_pSchema + 8) + 16))))
	*(*int32)(unsafe.Pointer(_2nByte)) = int32(uint64(*(*int32)(unsafe.Pointer(_2nByte))) + Xsqlite3_msize(tls, *(*uintptr)(unsafe.Pointer((_pSchema + 56) + 16))))
	*(*int32)(unsafe.Pointer(_2nByte)) = int32(uint64(*(*int32)(unsafe.Pointer(_2nByte))) + Xsqlite3_msize(tls, *(*uintptr)(unsafe.Pointer((_pSchema + 32) + 16))))
	*(*int32)(unsafe.Pointer(_2nByte)) = int32(uint64(*(*int32)(unsafe.Pointer(_2nByte))) + Xsqlite3_msize(tls, *(*uintptr)(unsafe.Pointer((_pSchema + 80) + 16))))
	_3p = *(*uintptr)(unsafe.Pointer((_pSchema + 56) + 8))
_29:
	if _3p == 0 {
		goto _31
	}

	_429sqlite3DeleteTrigger(tls, _db, *(*uintptr)(unsafe.Pointer(_3p + 16)))
	_3p = *(*uintptr)(unsafe.Pointer(_3p))
	goto _29

_31:
	_3p = *(*uintptr)(unsafe.Pointer((_pSchema + 8) + 8))
_32:
	if _3p == 0 {
		goto _34
	}

	_430sqlite3DeleteTable(tls, _db, *(*uintptr)(unsafe.Pointer(_3p + 16)))
	_3p = *(*uintptr)(unsafe.Pointer(_3p))
	goto _32

_34:
_28:
	_1i++
	goto _25

_27:
	*(*uintptr)(unsafe.Pointer(_db + 672)) = null
	_225sqlite3BtreeLeaveAll(tls, _db)
	*(*int32)(unsafe.Pointer(_pHighwater)) = int32(0)
	*(*int32)(unsafe.Pointer(_pCurrent)) = *(*int32)(unsafe.Pointer(_2nByte))
	goto _1

_9:
	*(*int32)(unsafe.Pointer(_4nByte)) = int32(0)
	*(*uintptr)(unsafe.Pointer(_db + 672)) = _4nByte
	_pVdbe = *(*uintptr)(unsafe.Pointer(_db + 8))
_35:
	if _pVdbe == 0 {
		goto _37
	}

	_431sqlite3VdbeClearObject(tls, _db, _pVdbe)
	_181sqlite3DbFree(tls, _db, _pVdbe)
	_pVdbe = *(*uintptr)(unsafe.Pointer(_pVdbe + 16))
	goto _35

_37:
	*(*uintptr)(unsafe.Pointer(_db + 672)) = null
	*(*int32)(unsafe.Pointer(_pHighwater)) = int32(0)
	*(*int32)(unsafe.Pointer(_pCurrent)) = *(*int32)(unsafe.Pointer(_4nByte))
	goto _1

_10:
_11:
_12:
	*(*int32)(unsafe.Pointer(_nRet)) = int32(0)

	_5i = int32(0)
_38:
	if _5i >= (*(*int32)(unsafe.Pointer(_db + 40))) {
		goto _40
	}

	if (*(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_5i)) + 8))) == 0 {
		goto _41
	}

	_6pPager = _141sqlite3BtreePager(tls, *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_5i)) + 8)))
	_432sqlite3PagerCacheStat(tls, _6pPager, _op, _resetFlag, _nRet)
_41:
	_5i++
	goto _38

_40:
	*(*int32)(unsafe.Pointer(_pHighwater)) = int32(0)
	*(*int32)(unsafe.Pointer(_pCurrent)) = *(*int32)(unsafe.Pointer(_nRet))
	goto _1

_13:
	*(*int32)(unsafe.Pointer(_pHighwater)) = int32(0)
	*(*int32)(unsafe.Pointer(_pCurrent)) = bool2int(((*(*int64)(unsafe.Pointer(_db + 664))) > int64(0)) || ((*(*int64)(unsafe.Pointer(_db + 656))) > int64(0)))
	goto _1

_14:
	_rc = int32(1)
_1:
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	return _rc
}

// Xsqlite3_stmt_status is defined at sqlite3.c:78558:16
func Xsqlite3_stmt_status(tls crt.TLS, _pStmt uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */, _op int32, _resetFlag int32) (r int32) {
	esc := crt.MustMalloc(4)
	var (
		_pVdbe uintptr // *TVdbe = SVdbe
		_v     = esc   // *Tu32 = uint32
		_db    uintptr // *Tsqlite3 = Ssqlite3
	)
	defer crt.Free(esc)
	_pVdbe = _pStmt
	if _op != int32(99) {
		goto _1
	}

	_db = *(*uintptr)(unsafe.Pointer(_pVdbe))
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	*(*uint32)(unsafe.Pointer(_v)) = uint32(0)
	*(*uintptr)(unsafe.Pointer(_db + 672)) = _v
	_431sqlite3VdbeClearObject(tls, _db, _pVdbe)
	_181sqlite3DbFree(tls, _db, _pVdbe)
	*(*uintptr)(unsafe.Pointer(_db + 672)) = null
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	goto _2

_1:
	*(*uint32)(unsafe.Pointer(_v)) = *(*uint32)(unsafe.Pointer((_pVdbe + 204) + 4*uintptr(_op)))
	if _resetFlag == 0 {
		goto _3
	}

	*(*uint32)(unsafe.Pointer((_pVdbe + 204) + 4*uintptr(_op))) = uint32(0)
_3:
_2:
	return int32(*(*uint32)(unsafe.Pointer(_v)))
}

// _229displayLinuxIoStats is defined at shell.c:3180:13
func _229displayLinuxIoStats(tls crt.TLS, _out uintptr /* *TFILE = S_IO_FILE */) {
	esc := crt.MustMalloc(200)
	var (
		_in uintptr // *TFILE = S_IO_FILE
		_z  = esc   // *[200]int8
		_i  int32
		_n  int32
	)
	defer crt.Free(esc)
	Xsqlite3_snprintf(tls, int32(200), _z, ts+15888 /* "/proc/%d/io" */, crt.Xgetpid(tls))
	_in = crt.Xfopen64(tls, _z, ts+1058 /* "rb" */)
	if _in != 0 {
		goto _1
	}

	return

_1:
_2:
	if crt.Xfgets(tls, _z, int32(200), _in) == 0 {
		goto _3
	}

	_i = int32(0)
_4:
	if _i >= int32(7) {
		goto _6
	}

	_n = int32(crt.Xstrlen(tls, *(*uintptr)(unsafe.Pointer(_433aTrans + 16*uintptr(_i)))))
	if crt.Xstrncmp(tls, *(*uintptr)(unsafe.Pointer(_433aTrans + 16*uintptr(_i))), _z, uint64(_n)) != int32(0) {
		goto _7
	}

	crt.Xfprintf(tls, _out, ts+15900 /* "%-36s %s" */, *(*uintptr)(unsafe.Pointer((_433aTrans + 16*uintptr(_i)) + 8)), _z+uintptr(_n))
	goto _6

_7:
	_i++
	goto _4

_6:
	goto _2

_3:
	crt.Xfclose(tls, _in)
}

// _230sqlite3Realloc is defined at sqlite3.c:25204:21
func _230sqlite3Realloc(tls crt.TLS, _pOld uintptr /* *void */, _nBytes uint64) (r uintptr /* *void */) {
	var (
		_nOld  int32
		_nNew  int32
		_nDiff int32
		_pNew  uintptr // *void
	)

	if _pOld != 0 {
		goto _1
	}

	return _198sqlite3Malloc(tls, _nBytes)

_1:
	if _nBytes != uint64(0) {
		goto _2
	}

	Xsqlite3_free(tls, _pOld)
	return null

_2:
	if _nBytes < uint64(0x7fffff00) {
		goto _3
	}

	return null

_3:
	_nOld = _109sqlite3MallocSize(tls, _pOld)
	_nNew = fn48(*(*uintptr)(unsafe.Pointer((_28sqlite3Config + 48) + 32)))(tls, int32(_nBytes))
	if _nOld != _nNew {
		goto _4
	}

	_pNew = _pOld
	goto _5

_4:
	if (*(*int32)(unsafe.Pointer(_28sqlite3Config))) == 0 {
		goto _6
	}

	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_107mem0)))
	_434sqlite3StatusHighwater(tls, int32(5), int32(_nBytes))
	_nDiff = _nNew - _nOld
	if _nDiff <= int32(0) || _435sqlite3StatusValue(tls, int32(0)) < ((*(*int64)(unsafe.Pointer(_107mem0 + 8)))-int64(_nDiff)) {
		goto _8
	}

	_436sqlite3MallocAlarm(tls, _nDiff)
_8:
	_pNew = fn51(*(*uintptr)(unsafe.Pointer((_28sqlite3Config + 48) + 16)))(tls, _pOld, _nNew)
	if _pNew != 0 || (*(*int64)(unsafe.Pointer(_107mem0 + 8))) <= int64(0) {
		goto _9
	}

	_436sqlite3MallocAlarm(tls, int32(_nBytes))
	_pNew = fn51(*(*uintptr)(unsafe.Pointer((_28sqlite3Config + 48) + 16)))(tls, _pOld, _nNew)
_9:
	if _pNew == 0 {
		goto _10
	}

	_nNew = _109sqlite3MallocSize(tls, _pNew)
	_437sqlite3StatusUp(tls, int32(0), _nNew-_nOld)
_10:
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_107mem0)))
	goto _7

_6:
	_pNew = fn51(*(*uintptr)(unsafe.Pointer((_28sqlite3Config + 48) + 16)))(tls, _pOld, _nNew)
_7:
_5:
	return _pNew
}

// Xsqlite3_busy_handler is defined at sqlite3.c:143503:16
func Xsqlite3_busy_handler(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _xBusy uintptr /* *func(crt.TLS, uintptr, int32) int32 */, _pArg uintptr /* *void */) (r int32) {
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	*(*uintptr)(unsafe.Pointer(_db + 544)) = _xBusy
	*(*uintptr)(unsafe.Pointer((_db + 544) + 8)) = _pArg
	*(*int32)(unsafe.Pointer((_db + 544) + 16)) = int32(0)
	*(*int32)(unsafe.Pointer(_db + 640)) = int32(0)
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	return int32(0)
}

// _231sqliteDefaultBusyCallback is defined at sqlite3.c:143441:12
func _231sqliteDefaultBusyCallback(tls crt.TLS, _ptr uintptr /* *void */, _count int32) (r int32) {
	var (
		_db      uintptr // *Tsqlite3 = Ssqlite3
		_timeout int32
		_delay   int32
		_prior   int32
	)
	_db = _ptr
	_timeout = *(*int32)(unsafe.Pointer(_db + 640))

	if _count >= int32(12) {
		goto _1
	}

	_delay = int32(*(*uint8)(unsafe.Pointer(_438delays + uintptr(_count))))
	_prior = int32(*(*uint8)(unsafe.Pointer(_439totals + uintptr(_count))))
	goto _2

_1:
	_delay = int32(*(*uint8)(unsafe.Pointer(_438delays + 11)))
	_prior = int32(*(*uint8)(unsafe.Pointer(_439totals + 11))) + (_delay * (_count - int32(11)))
_2:
	if (_prior + _delay) <= _timeout {
		goto _3
	}

	_delay = _timeout - _prior
	if _delay > int32(0) {
		goto _4
	}

	return int32(0)

_4:
_3:
	_218sqlite3OsSleep(tls, *(*uintptr)(unsafe.Pointer(_db)), _delay*int32(1000))
	return int32(1)
}

type SBtree struct {
	Xdb             uintptr // *Ssqlite3
	XpBt            uintptr // *SBtShared
	XinTrans        uint8
	Xsharable       uint8
	Xlocked         uint8
	XhasIncrblobCur uint8
	XwantToLock     int32
	XnBackup        int32
	XiDataVersion   uint32
	XpNext          uintptr // *SBtree
	XpPrev          uintptr // *SBtree
	Xlock           SBtLock
}

// _232sqlite3DbNameToBtree is defined at sqlite3.c:145940:22
func _232sqlite3DbNameToBtree(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _zDbName uintptr /* *int8 */) (r uintptr /* *TBtree = SBtree */) {
	var _iDb int32

	_iDb = func() int32 {
		if _zDbName != 0 {
			return _213sqlite3FindDbName(tls, _db, _zDbName)
		}
		return int32(0)
	}()
	if _iDb < int32(0) {
		return null
	}

	return *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)) + 8))
}

// _233sqlite3PagerVfs is defined at sqlite3.c:54416:28
func _233sqlite3PagerVfs(tls crt.TLS, _pPager uintptr /* *TPager = SPager */) (r uintptr /* *Tsqlite3_vfs = Ssqlite3_vfs */) {
	return *(*uintptr)(unsafe.Pointer(_pPager))
}

// _234sqlite3PagerJrnlFile is defined at sqlite3.c:54433:29
func _234sqlite3PagerJrnlFile(tls crt.TLS, _pPager uintptr /* *TPager = SPager */) (r uintptr /* *Tsqlite3_file = Ssqlite3_file */) {
	if (*(*uintptr)(unsafe.Pointer(_pPager + 288))) != 0 {
		return _440sqlite3WalFile(tls, *(*uintptr)(unsafe.Pointer(_pPager + 288)))
	}

	return *(*uintptr)(unsafe.Pointer(_pPager + 80))
}

// _235sqlite3OsFileControl is defined at sqlite3.c:20819:20
func _235sqlite3OsFileControl(tls crt.TLS, _id uintptr /* *Tsqlite3_file = Ssqlite3_file */, _op int32, _pArg uintptr /* *void */) (r int32) {
	return fn52(*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_id))) + 80)))(tls, _id, _op, _pArg)
}

// _236explainCols [8]*int8, escapes: true, shell.c:3460:27
var _236explainCols = bss + 2168 // array of 8 pointer to char

func init() {
	*(*[8]uintptr)(unsafe.Pointer(_236explainCols)) = [8]uintptr{
		0: ts + 15909, /* "addr" */
		1: ts + 15914, /* "opcode" */
		2: ts + 15921, /* "p1" */
		3: ts + 15924, /* "p2" */
		4: ts + 15927, /* "p3" */
		5: ts + 15930, /* "p4" */
		6: ts + 15933, /* "p5" */
		7: ts + 15936, /* "comment" */
	}
}

// _237str_in_array is defined at shell.c:3389:12
func _237str_in_array(tls crt.TLS, _zStr uintptr /* *int8 */, _azArray uintptr /* **int8 */) (r int32) {
	var _i int32

	_i = int32(0)
_1:
	if (*(*uintptr)(unsafe.Pointer(_azArray + 8*uintptr(_i)))) == 0 {
		goto _3
	}

	if int32(0) != crt.Xstrcmp(tls, _zStr, *(*uintptr)(unsafe.Pointer(_azArray + 8*uintptr(_i)))) {
		goto _4
	}

	return int32(1)

_4:
	_i++
	goto _1

_3:
	return int32(0)
}

// _238__func__ [19]int8, escapes: true, shell.c:3541:2
var _238__func__ = ds + 6447

// _239needCsvQuote [256]int8, escapes: true, shell.c:2512:19
var _239needCsvQuote = ds + 6466

// _240azKeywords [124]*int8, escapes: true, shell.c:710:21
var _240azKeywords = bss + 2232 // array of 124 pointer to char

func init() {
	*(*[124]uintptr)(unsafe.Pointer(_240azKeywords)) = [124]uintptr{
		0:   ts + 15944, /* "ABORT" */
		1:   ts + 15950, /* "ACTION" */
		2:   ts + 15957, /* "ADD" */
		3:   ts + 15961, /* "AFTER" */
		4:   ts + 15967, /* "ALL" */
		5:   ts + 15971, /* "ALTER" */
		6:   ts + 13192, /* "ANALYZE" */
		7:   ts + 15977, /* "AND" */
		8:   ts + 15981, /* "AS" */
		9:   ts + 15984, /* "ASC" */
		10:  ts + 13158, /* "ATTACH" */
		11:  ts + 15988, /* "AUTOINCREMENT" */
		12:  ts + 16002, /* "BEFORE" */
		13:  ts + 3817,  /* "BEGIN" */
		14:  ts + 16009, /* "BETWEEN" */
		15:  ts + 16017, /* "BY" */
		16:  ts + 16020, /* "CASCADE" */
		17:  ts + 16028, /* "CASE" */
		18:  ts + 16033, /* "CAST" */
		19:  ts + 16038, /* "CHECK" */
		20:  ts + 16044, /* "COLLATE" */
		21:  ts + 16052, /* "COLUMN" */
		22:  ts + 3977,  /* "COMMIT" */
		23:  ts + 16059, /* "CONFLICT" */
		24:  ts + 16068, /* "CONSTRAINT" */
		25:  ts + 16079, /* "CREATE" */
		26:  ts + 16086, /* "CROSS" */
		27:  ts + 16092, /* "CURRENT_DATE" */
		28:  ts + 16105, /* "CURRENT_TIME" */
		29:  ts + 16118, /* "CURRENT_TIMESTAMP" */
		30:  ts + 16136, /* "DATABASE" */
		31:  ts + 16145, /* "DEFAULT" */
		32:  ts + 16153, /* "DEFERRABLE" */
		33:  ts + 16164, /* "DEFERRED" */
		34:  ts + 12996, /* "DELETE" */
		35:  ts + 16173, /* "DESC" */
		36:  ts + 13165, /* "DETACH" */
		37:  ts + 16178, /* "DISTINCT" */
		38:  ts + 16187, /* "DROP" */
		39:  ts + 16192, /* "EACH" */
		40:  ts + 16197, /* "ELSE" */
		41:  ts + 16202, /* "END" */
		42:  ts + 16206, /* "ESCAPE" */
		43:  ts + 16213, /* "EXCEPT" */
		44:  ts + 16220, /* "EXCLUSIVE" */
		45:  ts + 16230, /* "EXISTS" */
		46:  ts + 16237, /* "EXPLAIN" */
		47:  ts + 16245, /* "FAIL" */
		48:  ts + 16250, /* "FOR" */
		49:  ts + 16254, /* "FOREIGN" */
		50:  ts + 16262, /* "FROM" */
		51:  ts + 16267, /* "FULL" */
		52:  ts + 16272, /* "GLOB" */
		53:  ts + 16277, /* "GROUP" */
		54:  ts + 16283, /* "HAVING" */
		55:  ts + 16290, /* "IF" */
		56:  ts + 16293, /* "IGNORE" */
		57:  ts + 16300, /* "IMMEDIATE" */
		58:  ts + 16310, /* "IN" */
		59:  ts + 12807, /* "INDEX" */
		60:  ts + 16313, /* "INDEXED" */
		61:  ts + 16321, /* "INITIALLY" */
		62:  ts + 16331, /* "INNER" */
		63:  ts + 13113, /* "INSERT" */
		64:  ts + 16337, /* "INSTEAD" */
		65:  ts + 16345, /* "INTERSECT" */
		66:  ts + 16355, /* "INTO" */
		67:  ts + 16360, /* "IS" */
		68:  ts + 16363, /* "ISNULL" */
		69:  ts + 16370, /* "JOIN" */
		70:  ts + 16375, /* "KEY" */
		71:  ts + 16379, /* "LEFT" */
		72:  ts + 16384, /* "LIKE" */
		73:  ts + 16389, /* "LIMIT" */
		74:  ts + 16395, /* "MATCH" */
		75:  ts + 16401, /* "NATURAL" */
		76:  ts + 16409, /* "NO" */
		77:  ts + 16412, /* "NOT" */
		78:  ts + 16416, /* "NOTNULL" */
		79:  ts + 8837,  /* "NULL" */
		80:  ts + 16424, /* "OF" */
		81:  ts + 16427, /* "OFFSET" */
		82:  ts + 16434, /* "ON" */
		83:  ts + 16437, /* "OR" */
		84:  ts + 16440, /* "ORDER" */
		85:  ts + 16446, /* "OUTER" */
		86:  ts + 16452, /* "PLAN" */
		87:  ts + 13120, /* "PRAGMA" */
		88:  ts + 16457, /* "PRIMARY" */
		89:  ts + 16465, /* "QUERY" */
		90:  ts + 16471, /* "RAISE" */
		91:  ts + 13245, /* "RECURSIVE" */
		92:  ts + 16477, /* "REFERENCES" */
		93:  ts + 16488, /* "REGEXP" */
		94:  ts + 13184, /* "REINDEX" */
		95:  ts + 16495, /* "RELEASE" */
		96:  ts + 16503, /* "RENAME" */
		97:  ts + 16510, /* "REPLACE" */
		98:  ts + 16518, /* "RESTRICT" */
		99:  ts + 16527, /* "RIGHT" */
		100: ts + 16533, /* "ROLLBACK" */
		101: ts + 16542, /* "ROW" */
		102: ts + 13235, /* "SAVEPOINT" */
		103: ts + 13132, /* "SELECT" */
		104: ts + 16546, /* "SET" */
		105: ts + 12801, /* "TABLE" */
		106: ts + 16550, /* "TEMP" */
		107: ts + 16555, /* "TEMPORARY" */
		108: ts + 16565, /* "THEN" */
		109: ts + 16570, /* "TO" */
		110: ts + 13139, /* "TRANSACTION" */
		111: ts + 12831, /* "TRIGGER" */
		112: ts + 16573, /* "UNION" */
		113: ts + 16579, /* "UNIQUE" */
		114: ts + 13151, /* "UPDATE" */
		115: ts + 16586, /* "USING" */
		116: ts + 16592, /* "VACUUM" */
		117: ts + 16599, /* "VALUES" */
		118: ts + 12826, /* "VIEW" */
		119: ts + 16606, /* "VIRTUAL" */
		120: ts + 16614, /* "WHEN" */
		121: ts + 16619, /* "WHERE" */
		122: ts + 16625, /* "WITH" */
		123: ts + 16630, /* "WITHOUT" */
	}
}

// _241unused_string is defined at shell.c:2326:19
func _241unused_string(tls crt.TLS, _z uintptr /* *int8 */, _zA uintptr /* *int8 */, _zB uintptr /* *int8 */, _zBuf uintptr /* *int8 */) (r uintptr /* *int8 */) {
	var _i uint32

	_i = uint32(0)
	if crt.Xstrstr(tls, _z, _zA) != 0 {
		goto _1
	}

	return _zA

_1:
	if crt.Xstrstr(tls, _z, _zB) != 0 {
		goto _2
	}

	return _zB

_2:
_3:
	Xsqlite3_snprintf(tls, int32(20), _zBuf, ts+16638 /* "(%s%u)" */, _zA, postinc53(&_i))
	if crt.Xstrstr(tls, _z, _zBuf) != 0 {
		goto _3
	}

	return _zBuf
}

// Xsqlite3_value_double is defined at sqlite3.c:77096:19
func Xsqlite3_value_double(tls crt.TLS, _pVal uintptr /* *Tsqlite3_value = Ssqlite3_value */) (r float64) {
	return _441sqlite3VdbeRealValue(tls, _pVal)
}

// Xsqlite3_value_blob is defined at sqlite3.c:77077:23
func Xsqlite3_value_blob(tls crt.TLS, _pVal uintptr /* *Tsqlite3_value = Ssqlite3_value */) (r uintptr /* *void */) {
	var _p uintptr // *TMem = Ssqlite3_value

	_p = _pVal
	if (int32(*(*uint16)(unsafe.Pointer(_p + 8))) & int32(18)) == 0 {
		goto _1
	}

	if func() int32 {
		if int32(*(*uint16)(unsafe.Pointer(_p + 8)))&int32(0x4000) != 0 {
			return _442sqlite3VdbeMemExpandBlob(tls, _p)
		}
		return int32(0)
	}() == int32(0) {
		goto _3
	}

	return null

_3:
	{
		p := &(*(*uint16)(unsafe.Pointer(_p + 8)))
		*p = uint16(int32(*p) | int32(0x10))
	}
	if (*(*int32)(unsafe.Pointer(_p + 12))) != 0 {
		return *(*uintptr)(unsafe.Pointer(_p + 16))
	}

	return null

	goto _2

_1:
	return Xsqlite3_value_text(tls, _pVal)

_2:
	return r
}

// Xsqlite3_value_bytes is defined at sqlite3.c:77090:16
func Xsqlite3_value_bytes(tls crt.TLS, _pVal uintptr /* *Tsqlite3_value = Ssqlite3_value */) (r int32) {
	return _443sqlite3ValueBytes(tls, _pVal, uint8(1))
}

// _242local_getline is defined at shell.c:551:13
func _242local_getline(tls crt.TLS, _zLine uintptr /* *int8 */, _in uintptr /* *TFILE = S_IO_FILE */) (r uintptr /* *int8 */) {
	var (
		_nLine int32
		_n     int32
	)
	_nLine = func() int32 {
		if _zLine == 0 {
			return int32(0)
		}
		return int32(100)
	}()
	_n = int32(0)
_1:
	if (_n + int32(100)) <= _nLine {
		goto _3
	}

	_nLine = (_nLine * int32(2)) + int32(100)
	_zLine = crt.Xrealloc(tls, _zLine, uint64(_nLine))
	if _zLine != 0 {
		goto _4
	}

	return null

_4:
_3:
	if crt.Xfgets(tls, _zLine+uintptr(_n), _nLine-_n, _in) != 0 {
		goto _5
	}

	if _n != int32(0) {
		goto _6
	}

	crt.Xfree(tls, _zLine)
	return null

_6:
	*(*int8)(unsafe.Pointer(_zLine + uintptr(_n))) = int8(0)
	goto _2

_5:
_7:
	if (*(*int8)(unsafe.Pointer(_zLine + uintptr(_n)))) == 0 {
		goto _8
	}

	_n++
	goto _7

_8:
	if _n <= int32(0) || int32(*(*int8)(unsafe.Pointer(_zLine + uintptr(_n-int32(1))))) != int32('\n') {
		goto _9
	}

	_n--
	if _n <= int32(0) || int32(*(*int8)(unsafe.Pointer(_zLine + uintptr(_n-int32(1))))) != int32('\r') {
		goto _10
	}

	_n--
_10:
	*(*int8)(unsafe.Pointer(_zLine + uintptr(_n))) = int8(0)
	goto _2

_9:
	goto _1

_2:
	return _zLine
}

// _243trans [8][8]uint8, escapes: true, sqlite3.c:141706:19
var _243trans = ds + 6722

// _244beginTimer is defined at shell.c:240:13
func _244beginTimer(tls crt.TLS) {
	if _75enableTimer == 0 {
		goto _1
	}

	crt.Xgetrusage(tls, int32(0), _444sBegin)
	_445iBegin = _446timeOfDay(tls)
_1:
}

// _245endTimer is defined at shell.c:256:13
func _245endTimer(tls crt.TLS) {
	esc := crt.MustMalloc(144)
	var (
		_iEnd int64
		_sEnd = esc // *Srusage
	)
	defer crt.Free(esc)
	if _75enableTimer == 0 {
		goto _1
	}

	_iEnd = _446timeOfDay(tls)
	crt.Xgetrusage(tls, int32(0), _sEnd)
	crt.Xprintf(tls, ts+16645 /* "Run Time: real %.3f user %f sys ..." */, float64(_iEnd-_445iBegin)*float64(0.001), _447timeDiff(tls, _444sBegin, _sEnd), _447timeDiff(tls, _444sBegin+16, _sEnd+16))
_1:
}

// Xsqlite3_changes is defined at sqlite3.c:142927:16
func Xsqlite3_changes(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */) (r int32) {
	return *(*int32)(unsafe.Pointer(_db + 116))
}

// Xsqlite3_total_changes is defined at sqlite3.c:142940:16
func Xsqlite3_total_changes(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */) (r int32) {
	return *(*int32)(unsafe.Pointer(_db + 120))
}

type SCollSeq struct {
	XzName uintptr // *int8
	Xenc   uint8
	XpUser uintptr // uintptr
	XxCmp  uintptr // *func(crt.TLS, uintptr, int32, uintptr, int32, uintptr) int32
	XxDel  uintptr // *func(crt.TLS, uintptr)
}

type SDb struct {
	XzDbSName     uintptr // *int8
	XpBt          uintptr // *SBtree
	Xsafety_level uint8
	XbSyncSet     uint8
	XpSchema      uintptr // *SSchema
}

type Ssqlite3_value struct {
	Xu        struct{ X int64 }
	Xflags    uint16
	Xenc      uint8
	XeSubtype uint8
	Xn        int32
	Xz        uintptr // *int8
	XzMalloc  uintptr // *int8
	XszMalloc int32
	XuTemp    uint32
	Xdb       uintptr // *Ssqlite3
	XxDel     uintptr // *func(crt.TLS, uintptr)
}

type SLookaside struct {
	XbDisable  uint32
	Xsz        uint16
	XbMalloced uint8
	XnSlot     uint32
	XanStat    [3]uint32
	XpInit     uintptr // *SLookasideSlot
	XpFree     uintptr // *SLookasideSlot
	XpStart    uintptr // uintptr
	XpEnd      uintptr // uintptr
}

type SHash struct {
	Xhtsize uint32
	Xcount  uint32
	Xfirst  uintptr // *SHashElem
	Xht     uintptr // *struct{Xcount int32;Xchain *SHashElem;}
}

type SVtabCtx struct {
	XpVTable   uintptr // *SVTable
	XpTab      uintptr // *STable
	XpPrior    uintptr // *SVtabCtx
	XbDeclared int32
}

type SVTable struct {
	Xdb          uintptr // *Ssqlite3
	XpMod        uintptr // *SModule
	XpVtab       uintptr // *Ssqlite3_vtab
	XnRef        int32
	XbConstraint uint8
	XiSavepoint  int32
	XpNext       uintptr // *SVTable
}

type SBusyHandler struct {
	XxFunc uintptr // *func(crt.TLS, uintptr, int32) int32
	XpArg  uintptr // uintptr
	XnBusy int32
}

type SSavepoint struct {
	XzName            uintptr // *int8
	XnDeferredCons    int64
	XnDeferredImmCons int64
	XpNext            uintptr // *SSavepoint
}

// _246disconnectAllVtab is defined at sqlite3.c:142987:13
func _246disconnectAllVtab(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */) {
	var (
		_i       int32
		_p       uintptr // *THashElem = SHashElem
		_pSchema uintptr // *TSchema = SSchema
		_pTab    uintptr // *TTable = STable
		_pMod    uintptr // *TModule = SModule
	)
	_219sqlite3BtreeEnterAll(tls, _db)
	_i = int32(0)
_1:
	if _i >= (*(*int32)(unsafe.Pointer(_db + 40))) {
		goto _3
	}

	_pSchema = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_i)) + 24))
	if (*(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_i)) + 24))) == 0 {
		goto _4
	}

	_p = *(*uintptr)(unsafe.Pointer((_pSchema + 8) + 8))
_5:
	if _p == 0 {
		goto _7
	}

	_pTab = *(*uintptr)(unsafe.Pointer(_p + 16))
	if *(*int32)(unsafe.Pointer(_pTab + 84)) == 0 {
		goto _8
	}

	_448sqlite3VtabDisconnect(tls, _db, _pTab)
_8:
	_p = *(*uintptr)(unsafe.Pointer(_p))
	goto _5

_7:
_4:
	_i++
	goto _1

_3:
	_p = *(*uintptr)(unsafe.Pointer((_db + 448) + 8))
_9:
	if _p == 0 {
		goto _11
	}

	_pMod = *(*uintptr)(unsafe.Pointer(_p + 16))
	if (*(*uintptr)(unsafe.Pointer(_pMod + 32))) == 0 {
		goto _12
	}

	_448sqlite3VtabDisconnect(tls, _db, *(*uintptr)(unsafe.Pointer(_pMod + 32)))
_12:
	_p = *(*uintptr)(unsafe.Pointer(_p))
	goto _9

_11:
	_337sqlite3VtabUnlockList(tls, _db)
	_225sqlite3BtreeLeaveAll(tls, _db)
}

// _247sqlite3VtabRollback is defined at sqlite3.c:127223:20
func _247sqlite3VtabRollback(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */) (r int32) {
	_449callFinaliser(tls, _db, int32(136))
	return int32(0)
}

// _248connectionIsBusy is defined at sqlite3.c:143018:12
func _248connectionIsBusy(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */) (r int32) {
	var (
		_j   int32
		_pBt uintptr // *TBtree = SBtree
	)

	if (*(*uintptr)(unsafe.Pointer(_db + 8))) == 0 {
		goto _1
	}

	return int32(1)

_1:
	_j = int32(0)
_2:
	if _j >= (*(*int32)(unsafe.Pointer(_db + 40))) {
		goto _4
	}

	_pBt = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_j)) + 8))
	if _pBt == 0 || _450sqlite3BtreeIsInBackup(tls, _pBt) == 0 {
		goto _5
	}

	return int32(1)

_5:
	_j++
	goto _2

_4:
	return int32(0)
}

// _249sqlite3Stat struct{XnowValue [10]int64;XmxValue [10]int64;}, escapes: true, sqlite3.c:19091:3
var _249sqlite3Stat = bss + 3224

// Xsqlite3_log is defined at sqlite3.c:26606:17
func Xsqlite3_log(tls crt.TLS, _iErrCode int32, _zFormat uintptr /* *int8 */, ap ...interface{}) {
	var _ap *[]interface{} // Tva_list = T__gnuc_va_list = T__...a_list = *struct{X_ [2]uintptr;}

	if (*(*uintptr)(unsafe.Pointer(_28sqlite3Config + 392))) == 0 {
		goto _1
	}

	{
		x := ap
		_ap = &x
	}
	_451renderLogMsg(tls, _iErrCode, _zFormat, _ap)
	_ap = nil
_1:
}

// _250sqlite3MemMalloc is defined at sqlite3.c:21392:13
func _250sqlite3MemMalloc(tls crt.TLS, _nByte int32) (r uintptr /* *void */) {
	var _p uintptr // *Tsqlite3_int64 = Tsqlite_int64 = int64

	_p = crt.Xmalloc(tls, uint64(_nByte+int32(8)))
	if _p == 0 {
		goto _1
	}

	*(*int64)(unsafe.Pointer(_p)) = int64(_nByte)
	_p += 8
	goto _2

_1:
	Xsqlite3_log(tls, int32(7), ts+16681 /* "failed to allocate %u bytes of m..." */, _nByte)
_2:
	return _p
}

// _251sqlite3MemFree is defined at sqlite3.c:21426:13
func _251sqlite3MemFree(tls crt.TLS, _pPrior uintptr /* *void */) {
	var _p uintptr // *Tsqlite3_int64 = Tsqlite_int64 = int64

	_p = _pPrior

	_p -= 8
	crt.Xfree(tls, _p)
}

// _252sqlite3MemRealloc is defined at sqlite3.c:21464:13
func _252sqlite3MemRealloc(tls crt.TLS, _pPrior uintptr /* *void */, _nByte int32) (r uintptr /* *void */) {
	var _p uintptr // *Tsqlite3_int64 = Tsqlite_int64 = int64

	_p = _pPrior

	_p -= 8
	_p = crt.Xrealloc(tls, _p, uint64(_nByte+int32(8)))
	if _p == 0 {
		goto _1
	}

	*(*int64)(unsafe.Pointer(_p)) = int64(_nByte)
	_p += 8
	goto _2

_1:
	Xsqlite3_log(tls, int32(7), ts+16719 /* "failed memory resize %u to %u by..." */, _253sqlite3MemSize(tls, _pPrior), _nByte)
_2:
	return _p
}

// _253sqlite3MemSize is defined at sqlite3.c:21441:12
func _253sqlite3MemSize(tls crt.TLS, _pPrior uintptr /* *void */) (r int32) {
	var _p uintptr // *Tsqlite3_int64 = Tsqlite_int64 = int64

	_p = _pPrior
	_p -= 8
	return int32(*(*int64)(unsafe.Pointer(_p)))
}

// _254sqlite3MemRoundup is defined at sqlite3.c:21496:12
func _254sqlite3MemRoundup(tls crt.TLS, _n int32) (r int32) {
	return (_n + int32(7)) & int32(-8)
}

// _255sqlite3MemInit is defined at sqlite3.c:21503:12
func _255sqlite3MemInit(tls crt.TLS, _NotUsed uintptr /* *void */) (r int32) {
	return int32(0)
}

// _256sqlite3MemShutdown is defined at sqlite3.c:21530:13
func _256sqlite3MemShutdown(tls crt.TLS, _NotUsed uintptr /* *void */) {
	return
}

// _257pcache1Init is defined at sqlite3.c:46246:12
func _257pcache1Init(tls crt.TLS, _NotUsed uintptr /* *void */) (r int32) {
	crt.Xmemset(tls, _275pcache1_g, int32(0), uint64(144))
	*(*int32)(unsafe.Pointer(_275pcache1_g + 84)) = bool2int(((*(*uintptr)(unsafe.Pointer(_28sqlite3Config + 328))) == 0) || ((*(*int32)(unsafe.Pointer(_28sqlite3Config + 4))) > int32(0)))
	if (*(*int32)(unsafe.Pointer(_28sqlite3Config + 4))) == 0 {
		goto _1
	}

	*(*uintptr)(unsafe.Pointer(_275pcache1_g)) = _35sqlite3MutexAlloc(tls, int32(6))
	*(*uintptr)(unsafe.Pointer(_275pcache1_g + 120)) = _35sqlite3MutexAlloc(tls, int32(7))
_1:
	if (*(*int32)(unsafe.Pointer(_275pcache1_g + 84))) == 0 || (*(*int32)(unsafe.Pointer(_28sqlite3Config + 340))) == int32(0) || (*(*uintptr)(unsafe.Pointer(_28sqlite3Config + 328))) != 0 {
		goto _2
	}

	*(*int32)(unsafe.Pointer(_275pcache1_g + 88)) = *(*int32)(unsafe.Pointer(_28sqlite3Config + 340))
	goto _3

_2:
	*(*int32)(unsafe.Pointer(_275pcache1_g + 88)) = int32(0)
_3:
	*(*uint32)(unsafe.Pointer(_275pcache1_g + 16)) = uint32(10)
	*(*int32)(unsafe.Pointer(_275pcache1_g + 80)) = int32(1)
	return int32(0)
}

// _258pcache1Shutdown is defined at sqlite3.c:46299:13
func _258pcache1Shutdown(tls crt.TLS, _NotUsed uintptr /* *void */) {
	crt.Xmemset(tls, _275pcache1_g, int32(0), uint64(144))
}

// _259pcache1Create is defined at sqlite3.c:46313:23
func _259pcache1Create(tls crt.TLS, _szPage int32, _szExtra int32, _bPurgeable int32) (r uintptr /* *Tsqlite3_pcache = Ssqlite3_pcache */) {
	var (
		_pCache uintptr // *TPCache1 = SPCache1
		_pGroup uintptr // *TPGroup = SPGroup
		_sz     int32
	)

	_sz = int32(uint64(88) + (uint64(80) * uint64(*(*int32)(unsafe.Pointer(_275pcache1_g + 84)))))
	_pCache = _135sqlite3MallocZero(tls, uint64(_sz))
	if _pCache == 0 {
		goto _1
	}

	if (*(*int32)(unsafe.Pointer(_275pcache1_g + 84))) == 0 {
		goto _2
	}

	_pGroup = _pCache + 88
	*(*uint32)(unsafe.Pointer(_pGroup + 16)) = uint32(10)
	goto _3

_2:
	_pGroup = _275pcache1_g
_3:
	if int32(*(*uint8)(unsafe.Pointer((_pGroup + 24) + 21))) != int32(0) {
		goto _4
	}

	*(*uint8)(unsafe.Pointer((_pGroup + 24) + 21)) = uint8(1)
	*(*uintptr)(unsafe.Pointer((_pGroup + 24) + 48)) = set4(&(*(*uintptr)(unsafe.Pointer((_pGroup + 24) + 40))), _pGroup+24)
_4:
	*(*uintptr)(unsafe.Pointer(_pCache)) = _pGroup
	*(*int32)(unsafe.Pointer(_pCache + 16)) = _szPage
	*(*int32)(unsafe.Pointer(_pCache + 20)) = _szExtra
	*(*int32)(unsafe.Pointer(_pCache + 24)) = int32(uint64(_szPage+_szExtra) + uint64(56))
	*(*int32)(unsafe.Pointer(_pCache + 28)) = func() int32 {
		if _bPurgeable != 0 {
			return int32(1)
		}
		return int32(0)
	}()

	_453pcache1ResizeHash(tls, _pCache)
	if _bPurgeable == 0 {
		goto _5
	}

	*(*uint32)(unsafe.Pointer(_pCache + 32)) = uint32(10)
	{
		p := &(*(*uint32)(unsafe.Pointer(_pGroup + 12)))
		*p = uint32(uint32(*p) + (*(*uint32)(unsafe.Pointer(_pCache + 32))))
	}
	*(*uint32)(unsafe.Pointer(_pGroup + 16)) = ((*(*uint32)(unsafe.Pointer(_pGroup + 8))) + uint32(10)) - (*(*uint32)(unsafe.Pointer(_pGroup + 12)))
	*(*uintptr)(unsafe.Pointer(_pCache + 8)) = _pGroup + 20
	goto _6

_5:
	*(*uintptr)(unsafe.Pointer(_pCache + 8)) = _452dummyCurrentPage
_6:
	if (*(*uint32)(unsafe.Pointer(_pCache + 56))) != uint32(0) {
		goto _7
	}

	_266pcache1Destroy(tls, _pCache)
	_pCache = null
_7:
_1:
	return _pCache
}

// _260pcache1Cachesize is defined at sqlite3.c:46364:13
func _260pcache1Cachesize(tls crt.TLS, _p uintptr /* *Tsqlite3_pcache = Ssqlite3_pcache */, _nMax int32) {
	var (
		_pCache uintptr // *TPCache1 = SPCache1
		_pGroup uintptr // *TPGroup = SPGroup
	)
	_pCache = _p
	if (*(*int32)(unsafe.Pointer(_pCache + 28))) == 0 {
		goto _1
	}

	_pGroup = *(*uintptr)(unsafe.Pointer(_pCache))

	{
		p := &(*(*uint32)(unsafe.Pointer(_pGroup + 8)))
		*p = uint32(uint32(*p) + (uint32(_nMax) - (*(*uint32)(unsafe.Pointer(_pCache + 36)))))
	}
	*(*uint32)(unsafe.Pointer(_pGroup + 16)) = ((*(*uint32)(unsafe.Pointer(_pGroup + 8))) + uint32(10)) - (*(*uint32)(unsafe.Pointer(_pGroup + 12)))
	*(*uint32)(unsafe.Pointer(_pCache + 36)) = uint32(_nMax)
	*(*uint32)(unsafe.Pointer(_pCache + 40)) = ((*(*uint32)(unsafe.Pointer(_pCache + 36))) * uint32(9)) / uint32(10)
	_454pcache1EnforceMaxPage(tls, _pCache)

_1:
}

// _261pcache1Pagecount is defined at sqlite3.c:46400:12
func _261pcache1Pagecount(tls crt.TLS, _p uintptr /* *Tsqlite3_pcache = Ssqlite3_pcache */) (r int32) {
	var (
		_n      int32
		_pCache uintptr // *TPCache1 = SPCache1
	)
	_pCache = _p

	_n = int32(*(*uint32)(unsafe.Pointer(_pCache + 52)))

	return _n
}

// _262pcache1Fetch is defined at sqlite3.c:46590:28
func _262pcache1Fetch(tls crt.TLS, _p uintptr /* *Tsqlite3_pcache = Ssqlite3_pcache */, _iKey uint32, _createFlag int32) (r uintptr /* *Tsqlite3_pcache_page = Ssqlite3_pcache_page */) {
	return _455pcache1FetchNoMutex(tls, _p, _iKey, _createFlag)
	return r
}

// _263pcache1Unpin is defined at sqlite3.c:46621:13
func _263pcache1Unpin(tls crt.TLS, _p uintptr /* *Tsqlite3_pcache = Ssqlite3_pcache */, _pPg uintptr /* *Tsqlite3_pcache_page = Ssqlite3_pcache_page */, _reuseUnlikely int32) {
	var (
		_pCache  uintptr // *TPCache1 = SPCache1
		_pPage   uintptr // *TPgHdr1 = SPgHdr1
		_pGroup  uintptr // *TPGroup = SPGroup
		_ppFirst uintptr // **TPgHdr1 = SPgHdr1
	)
	_pCache = _p
	_pPage = _pPg
	_pGroup = *(*uintptr)(unsafe.Pointer(_pCache))

	if _reuseUnlikely == 0 && (*(*uint32)(unsafe.Pointer(_pGroup + 20))) <= (*(*uint32)(unsafe.Pointer(_pGroup + 8))) {
		goto _1
	}

	_456pcache1RemoveFromHash(tls, _pPage, int32(1))
	goto _2

_1:
	_ppFirst = (_pGroup + 24) + 40
	*(*uintptr)(unsafe.Pointer(_pPage + 48)) = _pGroup + 24
	*(*uintptr)(unsafe.Pointer(set4(&(*(*uintptr)(unsafe.Pointer(_pPage + 40))), *(*uintptr)(unsafe.Pointer(_ppFirst))) + 48)) = _pPage
	*(*uintptr)(unsafe.Pointer(_ppFirst)) = _pPage
	(*(*uint32)(unsafe.Pointer(_pCache + 48)))++
_2:
}

// _264pcache1Rekey is defined at sqlite3.c:46656:13
func _264pcache1Rekey(tls crt.TLS, _p uintptr /* *Tsqlite3_pcache = Ssqlite3_pcache */, _pPg uintptr /* *Tsqlite3_pcache_page = Ssqlite3_pcache_page */, _iOld uint32, _iNew uint32) {
	var (
		_pCache uintptr // *TPCache1 = SPCache1
		_pPage  uintptr // *TPgHdr1 = SPgHdr1
		_pp     uintptr // **TPgHdr1 = SPgHdr1
		_h      uint32
	)
	_pCache = _p
	_pPage = _pPg

	_h = _iOld % (*(*uint32)(unsafe.Pointer(_pCache + 56)))
	_pp = (*(*uintptr)(unsafe.Pointer(_pCache + 64))) + 8*uintptr(_h)
_1:
	if *(*uintptr)(unsafe.Pointer(_pp)) == _pPage {
		goto _2
	}

	_pp = *(*uintptr)(unsafe.Pointer(_pp)) + 24
	goto _1

_2:
	*(*uintptr)(unsafe.Pointer(_pp)) = *(*uintptr)(unsafe.Pointer(_pPage + 24))
	_h = _iNew % (*(*uint32)(unsafe.Pointer(_pCache + 56)))
	*(*uint32)(unsafe.Pointer(_pPage + 16)) = _iNew
	*(*uintptr)(unsafe.Pointer(_pPage + 24)) = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pCache + 64))) + 8*uintptr(_h)))
	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pCache + 64))) + 8*uintptr(_h))) = _pPage
	if _iNew <= (*(*uint32)(unsafe.Pointer(_pCache + 44))) {
		goto _3
	}

	*(*uint32)(unsafe.Pointer(_pCache + 44)) = _iNew
_3:
}

// _265pcache1Truncate is defined at sqlite3.c:46696:13
func _265pcache1Truncate(tls crt.TLS, _p uintptr /* *Tsqlite3_pcache = Ssqlite3_pcache */, _iLimit uint32) {
	var _pCache uintptr // *TPCache1 = SPCache1

	_pCache = _p

	if _iLimit > (*(*uint32)(unsafe.Pointer(_pCache + 44))) {
		goto _1
	}

	_457pcache1TruncateUnsafe(tls, _pCache, _iLimit)
	*(*uint32)(unsafe.Pointer(_pCache + 44)) = _iLimit - uint32(1)
_1:
}

// _266pcache1Destroy is defined at sqlite3.c:46711:13
func _266pcache1Destroy(tls crt.TLS, _p uintptr /* *Tsqlite3_pcache = Ssqlite3_pcache */) {
	var (
		_pCache uintptr // *TPCache1 = SPCache1
		_pGroup uintptr // *TPGroup = SPGroup
	)
	_pCache = _p
	_pGroup = *(*uintptr)(unsafe.Pointer(_pCache))

	if (*(*uint32)(unsafe.Pointer(_pCache + 52))) == 0 {
		goto _1
	}

	_457pcache1TruncateUnsafe(tls, _pCache, uint32(0))
_1:
	{
		p := &(*(*uint32)(unsafe.Pointer(_pGroup + 8)))
		*p = uint32(uint32(*p) - (*(*uint32)(unsafe.Pointer(_pCache + 36))))
	}

	{
		p := &(*(*uint32)(unsafe.Pointer(_pGroup + 12)))
		*p = uint32(uint32(*p) - (*(*uint32)(unsafe.Pointer(_pCache + 32))))
	}
	*(*uint32)(unsafe.Pointer(_pGroup + 16)) = ((*(*uint32)(unsafe.Pointer(_pGroup + 8))) + uint32(10)) - (*(*uint32)(unsafe.Pointer(_pGroup + 12)))
	_454pcache1EnforceMaxPage(tls, _pCache)

	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_pCache + 80)))
	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_pCache + 64)))
	Xsqlite3_free(tls, _pCache)
}

// _267pcache1Shrink is defined at sqlite3.c:46383:13
func _267pcache1Shrink(tls crt.TLS, _p uintptr /* *Tsqlite3_pcache = Ssqlite3_pcache */) {
	var (
		_pCache       uintptr // *TPCache1 = SPCache1
		_pGroup       uintptr // *TPGroup = SPGroup
		_savedMaxPage int32
	)
	_pCache = _p
	if (*(*int32)(unsafe.Pointer(_pCache + 28))) == 0 {
		goto _1
	}

	_pGroup = *(*uintptr)(unsafe.Pointer(_pCache))

	_savedMaxPage = int32(*(*uint32)(unsafe.Pointer(_pGroup + 8)))
	*(*uint32)(unsafe.Pointer(_pGroup + 8)) = uint32(0)
	_454pcache1EnforceMaxPage(tls, _pCache)
	*(*uint32)(unsafe.Pointer(_pGroup + 8)) = uint32(_savedMaxPage)

_1:
}

// _268sqlite3DefaultMutex is defined at sqlite3.c:24114:44
func _268sqlite3DefaultMutex(tls crt.TLS) (r uintptr /* *Tsqlite3_mutex_methods = Ssqlite3_mutex_methods */) {
	return _458sMutex
}

// _269sqlite3NoopMutex is defined at sqlite3.c:23582:44
func _269sqlite3NoopMutex(tls crt.TLS) (r uintptr /* *Tsqlite3_mutex_methods = Ssqlite3_mutex_methods */) {
	return _459sMutex
}

// _270sqlite3MemoryBarrier is defined at sqlite3.c:23838:21
func _270sqlite3MemoryBarrier(tls crt.TLS) {
}

type SFuncDefHash struct{ Xa [23]uintptr }

// _271aBuiltinFunc [59]SFuncDef, escapes: true, sqlite3.c:108318:18
var _271aBuiltinFunc = bss + 3384 // array of 59 FuncDef

func init() {
	*(*[59]SFuncDef)(unsafe.Pointer(_271aBuiltinFunc)) = [59]SFuncDef{
		0: {
			XnArg:      int8(1),
			XfuncFlags: uint16(1),
			XxSFunc:    fp6(_460loadExt),
			XzName:     ts + 16755, /* "load_extension" */
		},
		1: {
			XnArg:      int8(2),
			XfuncFlags: uint16(1),
			XxSFunc:    fp6(_460loadExt),
			XzName:     ts + 16755, /* "load_extension" */
		},
		2: {
			XnArg:      int8(1),
			XfuncFlags: uint16(8193),
			XxSFunc:    fp6(_461compileoptionusedFunc),
			XzName:     ts + 16770, /* "sqlite_compileoption_used" */
		},
		3: {
			XnArg:      int8(1),
			XfuncFlags: uint16(8193),
			XxSFunc:    fp6(_462compileoptiongetFunc),
			XzName:     ts + 16796, /* "sqlite_compileoption_get" */
		},
		4: {
			XnArg:      int8(1),
			XfuncFlags: uint16(3073),
			XxSFunc:    fp6(_463versionFunc),
			XzName:     ts + 16821, /* "unlikely" */
		},
		5: {
			XnArg:      int8(2),
			XfuncFlags: uint16(3073),
			XxSFunc:    fp6(_463versionFunc),
			XzName:     ts + 16830, /* "likelihood" */
		},
		6: {
			XnArg:      int8(1),
			XfuncFlags: uint16(3073),
			XxSFunc:    fp6(_463versionFunc),
			XzName:     ts + 16841, /* "likely" */
		},
		7: {
			XnArg:      int8(1),
			XfuncFlags: uint16(2049),
			XpUserData: uintptr(1),
			XxSFunc:    fp6(_464trimFunc),
			XzName:     ts + 16848, /* "ltrim" */
		},
		8: {
			XnArg:      int8(2),
			XfuncFlags: uint16(2049),
			XpUserData: uintptr(1),
			XxSFunc:    fp6(_464trimFunc),
			XzName:     ts + 16848, /* "ltrim" */
		},
		9: {
			XnArg:      int8(1),
			XfuncFlags: uint16(2049),
			XpUserData: uintptr(2),
			XxSFunc:    fp6(_464trimFunc),
			XzName:     ts + 16854, /* "rtrim" */
		},
		10: {
			XnArg:      int8(2),
			XfuncFlags: uint16(2049),
			XpUserData: uintptr(2),
			XxSFunc:    fp6(_464trimFunc),
			XzName:     ts + 16854, /* "rtrim" */
		},
		11: {
			XnArg:      int8(1),
			XfuncFlags: uint16(2049),
			XpUserData: uintptr(3),
			XxSFunc:    fp6(_464trimFunc),
			XzName:     ts + 16860, /* "trim" */
		},
		12: {
			XnArg:      int8(2),
			XfuncFlags: uint16(2049),
			XpUserData: uintptr(3),
			XxSFunc:    fp6(_464trimFunc),
			XzName:     ts + 16860, /* "trim" */
		},
		13: {
			XnArg:      int8(-1),
			XfuncFlags: uint16(2081),
			XxSFunc:    fp6(_465minmaxFunc),
			XzName:     ts + 16865, /* "min" */
		},
		14: {
			XfuncFlags: uint16(2081),
			XzName:     ts + 16865, /* "min" */
		},
		15: {
			XnArg:      int8(1),
			XfuncFlags: uint16(4129),
			XxSFunc:    fp6(_466minmaxStep),
			XxFinalize: fp18(_467minMaxFinalize),
			XzName:     ts + 16865, /* "min" */
		},
		16: {
			XnArg:      int8(-1),
			XfuncFlags: uint16(2081),
			XpUserData: uintptr(1),
			XxSFunc:    fp6(_465minmaxFunc),
			XzName:     ts + 16869, /* "max" */
		},
		17: {
			XfuncFlags: uint16(2081),
			XpUserData: uintptr(1),
			XzName:     ts + 16869, /* "max" */
		},
		18: {
			XnArg:      int8(1),
			XfuncFlags: uint16(4129),
			XpUserData: uintptr(1),
			XxSFunc:    fp6(_466minmaxStep),
			XxFinalize: fp18(_467minMaxFinalize),
			XzName:     ts + 16869, /* "max" */
		},
		19: {
			XnArg:      int8(1),
			XfuncFlags: uint16(2177),
			XxSFunc:    fp6(_468typeofFunc),
			XzName:     ts + 16873, /* "typeof" */
		},
		20: {
			XnArg:      int8(1),
			XfuncFlags: uint16(2113),
			XxSFunc:    fp6(_469lengthFunc),
			XzName:     ts + 9009, /* "length" */
		},
		21: {
			XnArg:      int8(2),
			XfuncFlags: uint16(2049),
			XxSFunc:    fp6(_470instrFunc),
			XzName:     ts + 16880, /* "instr" */
		},
		22: {
			XnArg:      int8(-1),
			XfuncFlags: uint16(2049),
			XxSFunc:    fp6(_471printfFunc),
			XzName:     ts + 16886, /* "printf" */
		},
		23: {
			XnArg:      int8(1),
			XfuncFlags: uint16(2049),
			XxSFunc:    fp6(_472unicodeFunc),
			XzName:     ts + 16893, /* "unicode" */
		},
		24: {
			XnArg:      int8(-1),
			XfuncFlags: uint16(2049),
			XxSFunc:    fp6(_473charFunc),
			XzName:     ts + 16901, /* "char" */
		},
		25: {
			XnArg:      int8(1),
			XfuncFlags: uint16(2049),
			XxSFunc:    fp6(_474absFunc),
			XzName:     ts + 16906, /* "abs" */
		},
		26: {
			XnArg:      int8(1),
			XfuncFlags: uint16(2049),
			XxSFunc:    fp6(_475roundFunc),
			XzName:     ts + 16910, /* "round" */
		},
		27: {
			XnArg:      int8(2),
			XfuncFlags: uint16(2049),
			XxSFunc:    fp6(_475roundFunc),
			XzName:     ts + 16910, /* "round" */
		},
		28: {
			XnArg:      int8(1),
			XfuncFlags: uint16(2049),
			XxSFunc:    fp6(_476upperFunc),
			XzName:     ts + 16916, /* "upper" */
		},
		29: {
			XnArg:      int8(1),
			XfuncFlags: uint16(2049),
			XxSFunc:    fp6(_477lowerFunc),
			XzName:     ts + 16922, /* "lower" */
		},
		30: {
			XnArg:      int8(1),
			XfuncFlags: uint16(2049),
			XxSFunc:    fp6(_478hexFunc),
			XzName:     ts + 16928, /* "hex" */
		},
		31: {
			XnArg:      int8(2),
			XfuncFlags: uint16(2561),
			XxSFunc:    fp6(_463versionFunc),
			XzName:     ts + 16932, /* "ifnull" */
		},
		32: {
			XfuncFlags: uint16(1),
			XxSFunc:    fp6(_479randomFunc),
			XzName:     ts + 16939, /* "random" */
		},
		33: {
			XnArg:      int8(1),
			XfuncFlags: uint16(1),
			XxSFunc:    fp6(_480randomBlob),
			XzName:     ts + 16946, /* "randomblob" */
		},
		34: {
			XnArg:      int8(2),
			XfuncFlags: uint16(2081),
			XxSFunc:    fp6(_481nullifFunc),
			XzName:     ts + 16957, /* "nullif" */
		},
		35: {
			XfuncFlags: uint16(8193),
			XxSFunc:    fp6(_463versionFunc),
			XzName:     ts + 16964, /* "sqlite_version" */
		},
		36: {
			XfuncFlags: uint16(8193),
			XxSFunc:    fp6(_482sourceidFunc),
			XzName:     ts + 16979, /* "sqlite_source_id" */
		},
		37: {
			XnArg:      int8(2),
			XfuncFlags: uint16(2049),
			XxSFunc:    fp6(_483errlogFunc),
			XzName:     ts + 16996, /* "sqlite_log" */
		},
		38: {
			XnArg:      int8(1),
			XfuncFlags: uint16(2049),
			XxSFunc:    fp6(_484quoteFunc),
			XzName:     ts + 4608, /* "quote" */
		},
		39: {
			XfuncFlags: uint16(1),
			XxSFunc:    fp6(_485last_insert_rowid),
			XzName:     ts + 17007, /* "last_insert_rowid" */
		},
		40: {
			XfuncFlags: uint16(1),
			XxSFunc:    fp6(_486changes),
			XzName:     ts + 1587, /* "changes" */
		},
		41: {
			XfuncFlags: uint16(1),
			XxSFunc:    fp6(_487total_changes),
			XzName:     ts + 17025, /* "total_changes" */
		},
		42: {
			XnArg:      int8(3),
			XfuncFlags: uint16(2049),
			XxSFunc:    fp6(_488replaceFunc),
			XzName:     ts + 17039, /* "replace" */
		},
		43: {
			XnArg:      int8(1),
			XfuncFlags: uint16(2049),
			XxSFunc:    fp6(_489zeroblobFunc),
			XzName:     ts + 17047, /* "zeroblob" */
		},
		44: {
			XnArg:      int8(2),
			XfuncFlags: uint16(2049),
			XxSFunc:    fp6(_490substrFunc),
			XzName:     ts + 17056, /* "substr" */
		},
		45: {
			XnArg:      int8(3),
			XfuncFlags: uint16(2049),
			XxSFunc:    fp6(_490substrFunc),
			XzName:     ts + 17056, /* "substr" */
		},
		46: {
			XnArg:      int8(1),
			XfuncFlags: uint16(1),
			XxSFunc:    fp6(_491sumStep),
			XxFinalize: fp18(_492sumFinalize),
			XzName:     ts + 17063, /* "sum" */
		},
		47: {
			XnArg:      int8(1),
			XfuncFlags: uint16(1),
			XxSFunc:    fp6(_491sumStep),
			XxFinalize: fp18(_493totalFinalize),
			XzName:     ts + 17067, /* "total" */
		},
		48: {
			XnArg:      int8(1),
			XfuncFlags: uint16(1),
			XxSFunc:    fp6(_491sumStep),
			XxFinalize: fp18(_494avgFinalize),
			XzName:     ts + 17073, /* "avg" */
		},
		49: {
			XfuncFlags: uint16(257),
			XxSFunc:    fp6(_495countStep),
			XxFinalize: fp18(_496countFinalize),
			XzName:     ts + 17077, /* "count" */
		},
		50: {
			XnArg:      int8(1),
			XfuncFlags: uint16(1),
			XxSFunc:    fp6(_495countStep),
			XxFinalize: fp18(_496countFinalize),
			XzName:     ts + 17077, /* "count" */
		},
		51: {
			XnArg:      int8(1),
			XfuncFlags: uint16(1),
			XxSFunc:    fp6(_497groupConcatStep),
			XxFinalize: fp18(_498groupConcatFinalize),
			XzName:     ts + 17083, /* "group_concat" */
		},
		52: {
			XnArg:      int8(2),
			XfuncFlags: uint16(1),
			XxSFunc:    fp6(_497groupConcatStep),
			XxFinalize: fp18(_498groupConcatFinalize),
			XzName:     ts + 17083, /* "group_concat" */
		},
		53: {
			XnArg:      int8(2),
			XfuncFlags: uint16(2061),
			XpUserData: _197globInfo,
			XxSFunc:    fp6(_499likeFunc),
			XzName:     ts + 17096, /* "glob" */
		},
		54: {
			XnArg:      int8(2),
			XfuncFlags: uint16(2053),
			XpUserData: _227likeInfoNorm,
			XxSFunc:    fp6(_499likeFunc),
			XzName:     ts + 17101, /* "like" */
		},
		55: {
			XnArg:      int8(3),
			XfuncFlags: uint16(2053),
			XpUserData: _227likeInfoNorm,
			XxSFunc:    fp6(_499likeFunc),
			XzName:     ts + 17101, /* "like" */
		},
		56: {
			XnArg:      int8(1),
			XfuncFlags: uint16(2049),
			XzName:     ts + 17106, /* "coalesce" */
		},
		57: {
			XfuncFlags: uint16(2049),
			XzName:     ts + 17106, /* "coalesce" */
		},
		58: {
			XnArg:      int8(-1),
			XfuncFlags: uint16(2561),
			XxSFunc:    fp6(_463versionFunc),
			XzName:     ts + 17106, /* "coalesce" */
		},
	}
}

// _272sqlite3AlterFunctions is defined at sqlite3.c:97352:21
func _272sqlite3AlterFunctions(tls crt.TLS) {
	_274sqlite3InsertBuiltinFuncs(tls, _500aAlterTableFuncs, int32(3))
}

// _273sqlite3RegisterDateTimeFunctions is defined at sqlite3.c:20671:21
func _273sqlite3RegisterDateTimeFunctions(tls crt.TLS) {
	_274sqlite3InsertBuiltinFuncs(tls, _501aDateTimeFuncs, int32(8))
}

// _274sqlite3InsertBuiltinFuncs is defined at sqlite3.c:105442:21
func _274sqlite3InsertBuiltinFuncs(tls crt.TLS, _aDef uintptr /* *TFuncDef = SFuncDef */, _nDef int32) {
	var (
		_i      int32
		_pOther uintptr // *TFuncDef = SFuncDef
		_zName  uintptr // *int8
		_nName  int32
		_h      int32
	)
	_i = int32(0)
_1:
	if _i >= _nDef {
		goto _3
	}

	_zName = *(*uintptr)(unsafe.Pointer((_aDef + 56*uintptr(_i)) + 40))
	_nName = _211sqlite3Strlen30(tls, _zName)
	_h = (int32(*(*int8)(unsafe.Pointer(_zName))) + _nName) % int32(23)

	_pOther = _502functionSearch(tls, _h, _zName)
	if _pOther == 0 {
		goto _4
	}

	*(*uintptr)(unsafe.Pointer((_aDef + 56*uintptr(_i)) + 16)) = *(*uintptr)(unsafe.Pointer(_pOther + 16))
	*(*uintptr)(unsafe.Pointer(_pOther + 16)) = _aDef + 56*uintptr(_i)
	goto _5

_4:
	*(*uintptr)(unsafe.Pointer((_aDef + 56*uintptr(_i)) + 16)) = null
	*(*uintptr)(unsafe.Pointer((_aDef + 56*uintptr(_i)) + 48)) = *(*uintptr)(unsafe.Pointer(_116sqlite3BuiltinFunctions + 8*uintptr(_h)))
	*(*uintptr)(unsafe.Pointer(_116sqlite3BuiltinFunctions + 8*uintptr(_h))) = _aDef + 56*uintptr(_i)
_5:
	_i++
	goto _1

_3:
}

// Xsqlite3_malloc is defined at sqlite3.c:25084:17
func Xsqlite3_malloc(tls crt.TLS, _n int32) (r uintptr /* *void */) {
	if Xsqlite3_initialize(tls) == 0 {
		goto _1
	}

	return null

_1:
	if _n <= int32(0) {
		return null
	}

	return _198sqlite3Malloc(tls, uint64(_n))
}

// Xsqlite3_os_init is defined at sqlite3.c:37940:16
func Xsqlite3_os_init(tls crt.TLS) (r int32) {
	var _i uint32

	_i = uint32(0)
_1:
	if uint64(_i) >= uint64(4) {
		goto _3
	}

	Xsqlite3_vfs_register(tls, _503aVfs+168*uintptr(_i), bool2int(_i == uint32(0)))
	_i++
	goto _1

_3:
	return int32(0)
}

type SPgFreeslot struct {
	XpNext uintptr // *SPgFreeslot
}

// _275pcache1_g struct{Xgrp SPGroup;XisInit int3...ot int32;XbUnderPressure int32;}, escapes: true, sqlite3.c:45781:3
var _275pcache1_g = bss + 6688

// _276sqlite3HashInit is defined at sqlite3.c:29736:21
func _276sqlite3HashInit(tls crt.TLS, _pNew uintptr /* *THash = SHash */) {
	*(*uintptr)(unsafe.Pointer(_pNew + 8)) = null
	*(*uint32)(unsafe.Pointer(_pNew + 4)) = uint32(0)
	*(*uint32)(unsafe.Pointer(_pNew)) = uint32(0)
	*(*uintptr)(unsafe.Pointer(_pNew + 16)) = null
}

// _277createCollation is defined at sqlite3.c:144329:12
func _277createCollation(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _zName uintptr /* *int8 */, _enc uint8, _pCtx uintptr /* *void */, _xCompare uintptr /* *func(crt.TLS, uintptr, int32, uintptr, int32, uintptr) int32 */, _xDel uintptr /* *func(crt.TLS, uintptr) */) (r int32) {
	var (
		_pColl uintptr // *TCollSeq = SCollSeq
		_enc2  int32
		_aColl uintptr // *TCollSeq = SCollSeq
		_j     int32
		_p     uintptr // *TCollSeq = SCollSeq
	)

	_enc2 = int32(_enc)
	if _enc2 != int32(4) && _enc2 != int32(8) {
		goto _1
	}

	_enc2 = int32(2)
_1:
	if _enc2 >= int32(1) && _enc2 <= int32(3) {
		goto _2
	}

	return _29sqlite3MisuseError(tls, int32(144353))

_2:
	_pColl = _280sqlite3FindCollSeq(tls, _db, uint8(_enc2), _zName, int32(0))
	if _pColl == 0 || (*(*uintptr)(unsafe.Pointer(_pColl + 24))) == 0 {
		goto _3
	}

	if (*(*int32)(unsafe.Pointer(_db + 184))) == 0 {
		goto _4
	}

	_134sqlite3ErrorWithMsg(tls, _db, int32(5), ts+17115 /* "unable to delete/modify collatio..." */)
	return int32(5)

_4:
	_132sqlite3ExpirePreparedStatements(tls, _db)
	if (int32(*(*uint8)(unsafe.Pointer(_pColl + 8))) & int32(-9)) != _enc2 {
		goto _5
	}

	_aColl = _424sqlite3HashFind(tls, _db+520, _zName)
	_j = int32(0)
_6:
	if _j >= int32(3) {
		goto _8
	}

	_p = _aColl + 40*uintptr(_j)
	if int32(*(*uint8)(unsafe.Pointer(_p + 8))) != int32(*(*uint8)(unsafe.Pointer(_pColl + 8))) {
		goto _9
	}

	if (*(*uintptr)(unsafe.Pointer(_p + 32))) == 0 {
		goto _10
	}

	fn16(*(*uintptr)(unsafe.Pointer(_p + 32)))(tls, *(*uintptr)(unsafe.Pointer(_p + 16)))
_10:
	*(*uintptr)(unsafe.Pointer(_p + 24)) = null
_9:
	_j++
	goto _6

_8:
_5:
_3:
	_pColl = _280sqlite3FindCollSeq(tls, _db, uint8(_enc2), _zName, int32(1))
	if _pColl != 0 {
		goto _11
	}

	return int32(7)

_11:
	*(*uintptr)(unsafe.Pointer(_pColl + 24)) = _xCompare
	*(*uintptr)(unsafe.Pointer(_pColl + 16)) = _pCtx
	*(*uintptr)(unsafe.Pointer(_pColl + 32)) = _xDel
	*(*uint8)(unsafe.Pointer(_pColl + 8)) = uint8(_enc2 | (int32(_enc) & int32(8)))
	_136sqlite3Error(tls, _db, int32(0))
	return int32(0)
}

// _278binCollFunc is defined at sqlite3.c:142844:12
func _278binCollFunc(tls crt.TLS, _padFlag uintptr /* *void */, _nKey1 int32, _pKey1 uintptr /* *void */, _nKey2 int32, _pKey2 uintptr /* *void */) (r int32) {
	var (
		_rc int32
		_n  int32
	)
	_n = func() int32 {
		if _nKey1 < _nKey2 {
			return _nKey1
		}
		return _nKey2
	}()

	_rc = crt.Xmemcmp(tls, _pKey1, _pKey2, uint64(_n))
	if _rc != int32(0) {
		goto _1
	}

	if _padFlag == 0 || _504allSpaces(tls, _pKey1+uintptr(_n), _nKey1-_n) == 0 || _504allSpaces(tls, _pKey2+uintptr(_n), _nKey2-_n) == 0 {
		goto _2
	}

	goto _3

_2:
	_rc = _nKey1 - _nKey2
_3:
_1:
	return _rc
}

// _279nocaseCollatingFunc is defined at sqlite3.c:142882:12
func _279nocaseCollatingFunc(tls crt.TLS, _NotUsed uintptr /* *void */, _nKey1 int32, _pKey1 uintptr /* *void */, _nKey2 int32, _pKey2 uintptr /* *void */) (r int32) {
	var _r int32

	_r = Xsqlite3_strnicmp(tls, _pKey1, _pKey2, func() int32 {
		if _nKey1 < _nKey2 {
			return _nKey1
		}
		return _nKey2
	}())

	if int32(0) != _r {
		goto _1
	}

	_r = _nKey1 - _nKey2
_1:
	return _r
}

// _280sqlite3FindCollSeq is defined at sqlite3.c:105344:24
func _280sqlite3FindCollSeq(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _enc uint8, _zName uintptr /* *int8 */, _create int32) (r uintptr /* *TCollSeq = SCollSeq */) {
	var _pColl uintptr // *TCollSeq = SCollSeq

	if _zName == 0 {
		goto _1
	}

	_pColl = _505findCollSeqEntry(tls, _db, _zName, _create)
	goto _2

_1:
	_pColl = *(*uintptr)(unsafe.Pointer(_db + 16))
_2:
	if _pColl == 0 {
		goto _3
	}

	_pColl += 40 * uintptr(int32(_enc)-int32(1))
_3:
	return _pColl
}

// _281sqlite3ParseUri is defined at sqlite3.c:144537:20
func _281sqlite3ParseUri(tls crt.TLS, _zDefaultVfs uintptr /* *int8 */, _zUri uintptr /* *int8 */, _pFlags uintptr /* *uint32 */, _ppVfs uintptr /* **Tsqlite3_vfs = Ssqlite3_vfs */, _pzFile uintptr /* **int8 */, _pzErrMsg uintptr /* **int8 */) (r int32) {
	var (
		_rc        int32
		_flags     uint32
		_zVfs      uintptr // *int8
		_zFile     uintptr // *int8
		_c         int8
		_nUri      int32
		_zOpt      uintptr // *int8
		_eState    int32
		_iIn       int32
		_iOut      int32
		_nByte     uint64
		_octet     int32
		_nOpt      int32
		_zVal      uintptr // *int8
		_nVal      int32
		_aMode     uintptr // *struct{Xz *int8;Xmode int32;}
		_zModeType uintptr // *int8
		_mask      int32
		_limit     int32
		_i         int32
		_mode      int32
		_z         uintptr // *int8
	)
	_rc = int32(0)
	_flags = *(*uint32)(unsafe.Pointer(_pFlags))
	_zVfs = _zDefaultVfs
	_nUri = _211sqlite3Strlen30(tls, _zUri)

	if _flags&uint32(0x40) == 0 && (*(*int32)(unsafe.Pointer(_28sqlite3Config + 12))) == 0 || _nUri < int32(5) || crt.Xmemcmp(tls, _zUri, ts+17183 /* "file:" */, uint64(5)) != int32(0) {
		goto _1
	}

	_iOut = int32(0)
	_nByte = uint64(_nUri + int32(2))
	_flags = uint32(_flags | uint32(0x40))
	_iIn = int32(0)
_3:
	if _iIn >= _nUri {
		goto _5
	}

	_nByte = uint64(_nByte + uint64(bool2int(int32(*(*int8)(unsafe.Pointer(_zUri + uintptr(_iIn)))) == int32('&'))))
	_iIn++
	goto _3

_5:
	_zFile = Xsqlite3_malloc64(tls, _nByte)
	if _zFile != 0 {
		goto _6
	}

	return int32(7)

_6:
	_iIn = int32(5)
	if int32(*(*int8)(unsafe.Pointer(_zUri + 5))) != int32('/') || int32(*(*int8)(unsafe.Pointer(_zUri + 6))) != int32('/') {
		goto _7
	}

	_iIn = int32(7)
_8:
	if (*(*int8)(unsafe.Pointer(_zUri + uintptr(_iIn)))) == 0 || int32(*(*int8)(unsafe.Pointer(_zUri + uintptr(_iIn)))) == int32('/') {
		goto _9
	}

	_iIn++
	goto _8

_9:
	if _iIn == int32(7) || _iIn == int32(16) && crt.Xmemcmp(tls, ts+17189 /* "localhost" */, _zUri+7, uint64(9)) == 0 {
		goto _10
	}

	*(*uintptr)(unsafe.Pointer(_pzErrMsg)) = Xsqlite3_mprintf(tls, ts+17199 /* "invalid uri authority: %.*s" */, _iIn-int32(7), _zUri+7)
	_rc = int32(1)
	goto _parse_uri_out

_10:
_7:
	_eState = int32(0)
_11:
	if int32(set15(&_c, *(*int8)(unsafe.Pointer(_zUri + uintptr(_iIn))))) == int32(0) || int32(_c) == int32('#') {
		goto _12
	}

	_iIn++
	if int32(_c) != int32('%') || int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(uint8(*(*int8)(unsafe.Pointer(_zUri + uintptr(_iIn))))))))&int32(0x8) == 0 || int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(uint8(*(*int8)(unsafe.Pointer(_zUri + uintptr(_iIn+int32(1)))))))))&int32(0x8) == 0 {
		goto _13
	}

	_octet = int32(_508sqlite3HexToInt(tls, int32(*(*int8)(unsafe.Pointer(_zUri + uintptr(postinc7(&_iIn))))))) << (uint(4) % 32)
	_octet = int32(_octet + int32(_508sqlite3HexToInt(tls, int32(*(*int8)(unsafe.Pointer(_zUri + uintptr(postinc7(&_iIn))))))))

	if _octet != int32(0) {
		goto _15
	}

_16:
	if int32(set15(&_c, *(*int8)(unsafe.Pointer(_zUri + uintptr(_iIn))))) == int32(0) || int32(_c) == int32('#') || _eState == int32(0) && int32(_c) == int32('?') || _eState == int32(1) && (int32(_c) == int32('=') || int32(_c) == int32('&')) || _eState == int32(2) && int32(_c) == int32('&') {
		goto _17
	}

	_iIn++
	goto _16

_17:
	goto _11

_15:
	_c = int8(_octet)
	goto _14

_13:
	if _eState != int32(1) || int32(_c) != int32('&') && int32(_c) != int32('=') {
		goto _18
	}

	if int32(*(*int8)(unsafe.Pointer(_zFile + uintptr(_iOut-int32(1))))) != int32(0) {
		goto _20
	}

_21:
	if (*(*int8)(unsafe.Pointer(_zUri + uintptr(_iIn)))) == 0 || int32(*(*int8)(unsafe.Pointer(_zUri + uintptr(_iIn)))) == int32('#') || int32(*(*int8)(unsafe.Pointer(_zUri + uintptr(_iIn-int32(1))))) == int32('&') {
		goto _22
	}

	_iIn++
	goto _21

_22:
	goto _11

_20:
	if int32(_c) != int32('&') {
		goto _23
	}

	*(*int8)(unsafe.Pointer(_zFile + uintptr(postinc7(&_iOut)))) = int8('\x00')
	goto _24

_23:
	_eState = int32(2)
_24:
	_c = int8(0)
	goto _19

_18:
	if (_eState != int32(0) || int32(_c) != int32('?')) && (_eState != int32(2) || int32(_c) != int32('&')) {
		goto _25
	}

	_c = int8(0)
	_eState = int32(1)
_25:
_19:
_14:
	*(*int8)(unsafe.Pointer(_zFile + uintptr(postinc7(&_iOut)))) = _c
	goto _11

_12:
	if _eState != int32(1) {
		goto _26
	}

	*(*int8)(unsafe.Pointer(_zFile + uintptr(postinc7(&_iOut)))) = int8('\x00')
_26:
	*(*int8)(unsafe.Pointer(_zFile + uintptr(postinc7(&_iOut)))) = int8('\x00')
	*(*int8)(unsafe.Pointer(_zFile + uintptr(postinc7(&_iOut)))) = int8('\x00')
	_zOpt = _zFile + uintptr(_211sqlite3Strlen30(tls, _zFile)+int32(1))
_27:
	if (*(*int8)(unsafe.Pointer(_zOpt))) == 0 {
		goto _28
	}

	_nOpt = _211sqlite3Strlen30(tls, _zOpt)
	_zVal = _zOpt + uintptr(_nOpt+int32(1))
	_nVal = _211sqlite3Strlen30(tls, _zVal)
	if _nOpt != int32(3) || crt.Xmemcmp(tls, ts+17227 /* "vfs" */, _zOpt, uint64(3)) != int32(0) {
		goto _29
	}

	_zVfs = _zVal
	goto _30

_29:
	_aMode = 0
	_zModeType = 0
	_mask = int32(0)
	_limit = int32(0)
	if _nOpt != int32(5) || crt.Xmemcmp(tls, ts+17231 /* "cache" */, _zOpt, uint64(5)) != int32(0) {
		goto _31
	}

	_mask = int32(393216)
	_aMode = _506aCacheMode
	_limit = _mask
	_zModeType = ts + 17231 /* "cache" */
_31:
	if _nOpt != int32(4) || crt.Xmemcmp(tls, ts+4548 /* "mode" */, _zOpt, uint64(4)) != int32(0) {
		goto _32
	}

	_mask = int32(135)
	_aMode = _507aOpenMode
	_limit = int32(uint32(_mask) & _flags)
	_zModeType = ts + 17237 /* "access" */
_32:
	if _aMode == 0 {
		goto _33
	}

	_mode = int32(0)
	_i = int32(0)
_34:
	if (*(*uintptr)(unsafe.Pointer(_aMode + 16*uintptr(_i)))) == 0 {
		goto _36
	}

	_z = *(*uintptr)(unsafe.Pointer(_aMode + 16*uintptr(_i)))
	if _nVal != _211sqlite3Strlen30(tls, _z) || int32(0) != crt.Xmemcmp(tls, _zVal, _z, uint64(_nVal)) {
		goto _37
	}

	_mode = *(*int32)(unsafe.Pointer((_aMode + 16*uintptr(_i)) + 8))
	goto _36

_37:
	_i++
	goto _34

_36:
	if _mode != int32(0) {
		goto _38
	}

	*(*uintptr)(unsafe.Pointer(_pzErrMsg)) = Xsqlite3_mprintf(tls, ts+17244 /* "no such %s mode: %s" */, _zModeType, _zVal)
	_rc = int32(1)
	goto _parse_uri_out

_38:
	if (_mode & int32(-129)) <= _limit {
		goto _39
	}

	*(*uintptr)(unsafe.Pointer(_pzErrMsg)) = Xsqlite3_mprintf(tls, ts+17264 /* "%s mode not allowed: %s" */, _zModeType, _zVal)
	_rc = int32(3)
	goto _parse_uri_out

_39:
	_flags = (_flags & uint32(^_mask)) | uint32(_mode)
_33:
_30:
	_zOpt = _zVal + uintptr(_nVal+int32(1))
	goto _27

_28:
	goto _2

_1:
	_zFile = Xsqlite3_malloc64(tls, uint64(_nUri+int32(2)))
	if _zFile != 0 {
		goto _40
	}

	return int32(7)

_40:
	if _nUri == 0 {
		goto _41
	}

	crt.Xmemcpy(tls, _zFile, _zUri, uint64(_nUri))
_41:
	*(*int8)(unsafe.Pointer(_zFile + uintptr(_nUri))) = int8('\x00')
	*(*int8)(unsafe.Pointer(_zFile + uintptr(_nUri+int32(1)))) = int8('\x00')
	_flags = uint32(_flags & uint32(4294967231))
_2:
	*(*uintptr)(unsafe.Pointer(_ppVfs)) = Xsqlite3_vfs_find(tls, _zVfs)
	if (*(*uintptr)(unsafe.Pointer(_ppVfs))) != 0 {
		goto _42
	}

	*(*uintptr)(unsafe.Pointer(_pzErrMsg)) = Xsqlite3_mprintf(tls, ts+17288 /* "no such vfs: %s" */, _zVfs)
	_rc = int32(1)
_42:
	goto _parse_uri_out
_parse_uri_out:
	if _rc == int32(0) {
		goto _43
	}

	Xsqlite3_free(tls, _zFile)
	_zFile = null
_43:
	*(*uint32)(unsafe.Pointer(_pFlags)) = _flags
	*(*uintptr)(unsafe.Pointer(_pzFile)) = _zFile
	return _rc
}

// _282sqlite3BtreeOpen is defined at sqlite3.c:61903:20
func _282sqlite3BtreeOpen(tls crt.TLS, _pVfs uintptr /* *Tsqlite3_vfs = Ssqlite3_vfs */, _zFilename uintptr /* *int8 */, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _ppBtree uintptr /* **TBtree = SBtree */, _flags int32, _vfsFlags int32) (r int32) {
	esc := crt.MustMalloc(100)
	var (
		_pBt           uintptr // *TBtShared = SBtShared
		_p             uintptr // *TBtree = SBtree
		_mutexOpen     uintptr // *Tsqlite3_mutex = Ssqlite3_mutex
		_rc            int32
		_nReserve      uint8
		_zDbHeader     = esc // *[100]uint8
		_isTempDb      int32
		_isMemdb       int32
		_nFilename     int32
		_nFullPathname int32
		_zFullPathname uintptr // *int8
		_mutexShared   uintptr // *Tsqlite3_mutex = Ssqlite3_mutex
		_iDb           int32
		_pExisting     uintptr // *TBtree = SBtree
		_1mutexShared  uintptr // *Tsqlite3_mutex = Ssqlite3_mutex
		_i             int32
		_pSib          uintptr // *TBtree = SBtree
		_pFile         uintptr // *Tsqlite3_file = Ssqlite3_file
	)
	defer crt.Free(esc)
	_pBt = 0
	_mutexOpen = 0
	_rc = int32(0)
	_isTempDb = bool2int((_zFilename == 0) || (int32(*(*int8)(unsafe.Pointer(_zFilename))) == int32(0)))
	_isMemdb = bool2int((((_zFilename != 0) && (crt.Xstrcmp(tls, _zFilename, ts+369 /* ":memory:" */) == int32(0))) || ((_isTempDb != 0) && (_324sqlite3TempInMemory(tls, _db) != 0))) || ((_vfsFlags & int32(0x80)) != int32(0)))

	if _isMemdb == 0 {
		goto _1
	}

	_flags = int32(_flags | int32(2))
_1:
	if (_vfsFlags&int32(0x100)) == int32(0) || _isMemdb == 0 && _isTempDb == 0 {
		goto _2
	}

	_vfsFlags = (_vfsFlags & int32(-257)) | int32(0x200)
_2:
	_p = _135sqlite3MallocZero(tls, uint64(72))
	if _p != 0 {
		goto _3
	}

	return int32(7)

_3:
	*(*uint8)(unsafe.Pointer(_p + 16)) = uint8(0)
	*(*uintptr)(unsafe.Pointer(_p)) = _db
	*(*uintptr)(unsafe.Pointer(_p + 48)) = _p
	*(*uint32)(unsafe.Pointer((_p + 48) + 8)) = uint32(1)
	if _isTempDb != int32(0) || _isMemdb != int32(0) && (_vfsFlags&int32(0x40)) == int32(0) {
		goto _4
	}

	if (_vfsFlags & int32(0x20000)) == 0 {
		goto _5
	}

	_nFilename = _211sqlite3Strlen30(tls, _zFilename) + int32(1)
	_nFullPathname = (*(*int32)(unsafe.Pointer(_pVfs + 8))) + int32(1)
	_zFullPathname = _198sqlite3Malloc(tls, uint64(func() int32 {
		if _nFullPathname > _nFilename {
			return _nFullPathname
		}
		return _nFilename
	}()))
	*(*uint8)(unsafe.Pointer(_p + 17)) = uint8(1)
	if _zFullPathname != 0 {
		goto _6
	}

	Xsqlite3_free(tls, _p)
	return int32(7)

_6:
	if _isMemdb == 0 {
		goto _7
	}

	crt.Xmemcpy(tls, _zFullPathname, _zFilename, uint64(_nFilename))
	goto _8

_7:
	_rc = _509sqlite3OsFullPathname(tls, _pVfs, _zFilename, _nFullPathname, _zFullPathname)
	if _rc == 0 {
		goto _9
	}

	Xsqlite3_free(tls, _zFullPathname)
	Xsqlite3_free(tls, _p)
	return _rc

_9:
_8:
	_mutexOpen = _35sqlite3MutexAlloc(tls, int32(4))
	Xsqlite3_mutex_enter(tls, _mutexOpen)
	_mutexShared = _35sqlite3MutexAlloc(tls, int32(2))
	Xsqlite3_mutex_enter(tls, _mutexShared)
	_pBt = _510sqlite3SharedCacheList
_10:
	if _pBt == 0 {
		goto _12
	}

	if int32(0) != crt.Xstrcmp(tls, _zFullPathname, _511sqlite3PagerFilename(tls, *(*uintptr)(unsafe.Pointer(_pBt)), int32(0))) || _233sqlite3PagerVfs(tls, *(*uintptr)(unsafe.Pointer(_pBt))) != _pVfs {
		goto _13
	}

	_iDb = (*(*int32)(unsafe.Pointer(_db + 40))) - int32(1)
_14:
	if _iDb < int32(0) {
		goto _16
	}

	_pExisting = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)) + 8))
	if _pExisting == 0 || (*(*uintptr)(unsafe.Pointer(_pExisting + 8))) != _pBt {
		goto _17
	}

	Xsqlite3_mutex_leave(tls, _mutexShared)
	Xsqlite3_mutex_leave(tls, _mutexOpen)
	Xsqlite3_free(tls, _zFullPathname)
	Xsqlite3_free(tls, _p)
	return int32(19)

_17:
	_iDb--
	goto _14

_16:
	*(*uintptr)(unsafe.Pointer(_p + 8)) = _pBt
	(*(*int32)(unsafe.Pointer(_pBt + 96)))++
	goto _12

_13:
	_pBt = *(*uintptr)(unsafe.Pointer(_pBt + 104))
	goto _10

_12:
	Xsqlite3_mutex_leave(tls, _mutexShared)
	Xsqlite3_free(tls, _zFullPathname)
_5:
_4:
	if _pBt != 0 {
		goto _18
	}

	_pBt = _135sqlite3MallocZero(tls, uint64(136))
	if _pBt != 0 {
		goto _19
	}

	_rc = int32(7)
	goto _btree_open_out

_19:
	_rc = _512sqlite3PagerOpen(tls, _pVfs, _pBt, _zFilename, int32(136), _flags, _vfsFlags, fp18(_513pageReinit))
	if _rc != int32(0) {
		goto _20
	}

	_514sqlite3PagerSetMmapLimit(tls, *(*uintptr)(unsafe.Pointer(_pBt)), *(*int64)(unsafe.Pointer(_db + 64)))
	_rc = _515sqlite3PagerReadFileheader(tls, *(*uintptr)(unsafe.Pointer(_pBt)), int32(100), _zDbHeader)
_20:
	if _rc == int32(0) {
		goto _21
	}

	goto _btree_open_out

_21:
	*(*uint8)(unsafe.Pointer(_pBt + 32)) = uint8(_flags)
	*(*uintptr)(unsafe.Pointer(_pBt + 8)) = _db
	_516sqlite3PagerSetBusyhandler(tls, *(*uintptr)(unsafe.Pointer(_pBt)), fp10(_327btreeInvokeBusyHandler), _pBt)
	*(*uintptr)(unsafe.Pointer(_p + 8)) = _pBt
	*(*uintptr)(unsafe.Pointer(_pBt + 16)) = null
	*(*uintptr)(unsafe.Pointer(_pBt + 24)) = null
	if _517sqlite3PagerIsreadonly(tls, *(*uintptr)(unsafe.Pointer(_pBt))) == 0 {
		goto _22
	}

	{
		p := &(*(*uint16)(unsafe.Pointer(_pBt + 38)))
		*p = uint16(int32(*p) | int32(0x1))
	}
_22:
	*(*uint32)(unsafe.Pointer(_pBt + 48)) = uint32((int32(*(*uint8)(unsafe.Pointer(_zDbHeader + 16))) << (uint(8) % 32)) | (int32(*(*uint8)(unsafe.Pointer(_zDbHeader + 17))) << (uint(16) % 32)))
	if (*(*uint32)(unsafe.Pointer(_pBt + 48))) >= uint32(512) && (*(*uint32)(unsafe.Pointer(_pBt + 48))) <= uint32(65536) && (((*(*uint32)(unsafe.Pointer(_pBt + 48)))-uint32(1))&(*(*uint32)(unsafe.Pointer(_pBt + 48)))) == uint32(0) {
		goto _23
	}

	*(*uint32)(unsafe.Pointer(_pBt + 48)) = uint32(0)
	if _zFilename == 0 || _isMemdb != 0 {
		goto _25
	}

	*(*uint8)(unsafe.Pointer(_pBt + 33)) = uint8(0)
	*(*uint8)(unsafe.Pointer(_pBt + 34)) = uint8(0)
_25:
	_nReserve = uint8(0)
	goto _24

_23:
	_nReserve = *(*uint8)(unsafe.Pointer(_zDbHeader + 20))
	{
		p := &(*(*uint16)(unsafe.Pointer(_pBt + 38)))
		*p = uint16(int32(*p) | int32(0x2))
	}
	*(*uint8)(unsafe.Pointer(_pBt + 33)) = uint8(func() int32 {
		if _328sqlite3Get4byte(tls, _zDbHeader+52) != 0 {
			return int32(1)
		}
		return int32(0)
	}())
	*(*uint8)(unsafe.Pointer(_pBt + 34)) = uint8(func() int32 {
		if _328sqlite3Get4byte(tls, _zDbHeader+64) != 0 {
			return int32(1)
		}
		return int32(0)
	}())
_24:
	_rc = _412sqlite3PagerSetPagesize(tls, *(*uintptr)(unsafe.Pointer(_pBt)), _pBt+48, int32(_nReserve))
	if _rc == 0 {
		goto _26
	}

	goto _btree_open_out

_26:
	*(*uint32)(unsafe.Pointer(_pBt + 52)) = (*(*uint32)(unsafe.Pointer(_pBt + 48))) - uint32(_nReserve)

	*(*int32)(unsafe.Pointer(_pBt + 96)) = int32(1)
	if (*(*uint8)(unsafe.Pointer(_p + 17))) == 0 {
		goto _27
	}

	_1mutexShared = _35sqlite3MutexAlloc(tls, int32(2))
	if 1 == 0 || (*(*int32)(unsafe.Pointer(_28sqlite3Config + 4))) == 0 {
		goto _28
	}

	*(*uintptr)(unsafe.Pointer(_pBt + 80)) = _35sqlite3MutexAlloc(tls, int32(0))
	if (*(*uintptr)(unsafe.Pointer(_pBt + 80))) != 0 {
		goto _29
	}

	_rc = int32(7)
	goto _btree_open_out

_29:
_28:
	Xsqlite3_mutex_enter(tls, _1mutexShared)
	*(*uintptr)(unsafe.Pointer(_pBt + 104)) = _510sqlite3SharedCacheList
	_510sqlite3SharedCacheList = _pBt
	Xsqlite3_mutex_leave(tls, _1mutexShared)
_27:
_18:
	if (*(*uint8)(unsafe.Pointer(_p + 17))) == 0 {
		goto _30
	}

	_i = int32(0)
_31:
	if _i >= (*(*int32)(unsafe.Pointer(_db + 40))) {
		goto _33
	}

	if set4(&_pSib, *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_i)) + 8))) == 0 || (*(*uint8)(unsafe.Pointer(_pSib + 17))) == 0 {
		goto _34
	}

_35:
	if (*(*uintptr)(unsafe.Pointer(_pSib + 40))) == 0 {
		goto _36
	}

	_pSib = *(*uintptr)(unsafe.Pointer(_pSib + 40))
	goto _35

_36:
	if uint64(*(*uintptr)(unsafe.Pointer(_p + 8))) >= uint64(*(*uintptr)(unsafe.Pointer(_pSib + 8))) {
		goto _37
	}

	*(*uintptr)(unsafe.Pointer(_p + 32)) = _pSib
	*(*uintptr)(unsafe.Pointer(_p + 40)) = null
	*(*uintptr)(unsafe.Pointer(_pSib + 40)) = _p
	goto _38

_37:
_39:
	if (*(*uintptr)(unsafe.Pointer(_pSib + 32))) == 0 || uint64(*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pSib + 32))) + 8))) >= uint64(*(*uintptr)(unsafe.Pointer(_p + 8))) {
		goto _40
	}

	_pSib = *(*uintptr)(unsafe.Pointer(_pSib + 32))
	goto _39

_40:
	*(*uintptr)(unsafe.Pointer(_p + 32)) = *(*uintptr)(unsafe.Pointer(_pSib + 32))
	*(*uintptr)(unsafe.Pointer(_p + 40)) = _pSib
	if (*(*uintptr)(unsafe.Pointer(_p + 32))) == 0 {
		goto _41
	}

	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 32))) + 40)) = _p
_41:
	*(*uintptr)(unsafe.Pointer(_pSib + 32)) = _p
_38:
	goto _33

_34:
	_i++
	goto _31

_33:
_30:
	*(*uintptr)(unsafe.Pointer(_ppBtree)) = _p
	goto _btree_open_out
_btree_open_out:
	if _rc == int32(0) {
		goto _42
	}

	if _pBt == 0 || (*(*uintptr)(unsafe.Pointer(_pBt))) == 0 {
		goto _44
	}

	_518sqlite3PagerClose(tls, *(*uintptr)(unsafe.Pointer(_pBt)), null)
_44:
	Xsqlite3_free(tls, _pBt)
	Xsqlite3_free(tls, _p)
	*(*uintptr)(unsafe.Pointer(_ppBtree)) = null
	goto _43

_42:
	if _519sqlite3BtreeSchema(tls, _p, int32(0), null) != 0 {
		goto _45
	}

	_520sqlite3PagerSetCachesize(tls, *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_p + 8)))), int32(-2000))
_45:
	_pFile = _159sqlite3PagerFile(tls, *(*uintptr)(unsafe.Pointer(_pBt)))
	if (*(*uintptr)(unsafe.Pointer(_pFile))) == 0 {
		goto _46
	}

	_521sqlite3OsFileControlHint(tls, _pFile, int32(30), _pBt+8)
_46:
_43:
	if _mutexOpen == 0 {
		goto _47
	}

	Xsqlite3_mutex_leave(tls, _mutexOpen)
_47:
	return _rc
}

// _283sqlite3SchemaGet is defined at sqlite3.c:105609:23
func _283sqlite3SchemaGet(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pBt uintptr /* *TBtree = SBtree */) (r uintptr /* *TSchema = SSchema */) {
	var _p uintptr // *TSchema = SSchema

	if _pBt == 0 {
		goto _1
	}

	_p = _519sqlite3BtreeSchema(tls, _pBt, int32(120), fp18(_336sqlite3SchemaClear))
	goto _2

_1:
	_p = _295sqlite3DbMallocZero(tls, null, uint64(120))
_2:
	if _p != 0 {
		goto _3
	}

	_178sqlite3OomFault(tls, _db)
	goto _4

_3:
	if int32(0) != int32(*(*uint8)(unsafe.Pointer(_p + 112))) {
		goto _5
	}

	_276sqlite3HashInit(tls, _p+8)
	_276sqlite3HashInit(tls, _p+32)
	_276sqlite3HashInit(tls, _p+56)
	_276sqlite3HashInit(tls, _p+80)
	*(*uint8)(unsafe.Pointer(_p + 113)) = uint8(1)
_5:
_4:
	return _p
}

// _284sqlite3RegisterPerConnectionBuiltinFunctions is defined at sqlite3.c:108208:21
func _284sqlite3RegisterPerConnectionBuiltinFunctions(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */) {
	var _rc int32

	_rc = Xsqlite3_overload_function(tls, _db, ts+16395 /* "MATCH" */, int32(2))

	if _rc != int32(7) {
		goto _1
	}

	_178sqlite3OomFault(tls, _db)
_1:
}

// _285sqlite3AutoLoadExtensions is defined at sqlite3.c:113605:21
func _285sqlite3AutoLoadExtensions(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */) {
	esc := crt.MustMalloc(8)
	var (
		_i       uint32
		_go      int32
		_rc      int32
		_xInit   uintptr // Tsqlite3_loadext_entry = *func(c...uintptr, uintptr, uintptr) int32
		_zErrmsg = esc   // **int8
		_mutex   uintptr // *Tsqlite3_mutex = Ssqlite3_mutex
		_pThunk  uintptr // *Tsqlite3_api_routines = Ssqlite3_api_routines
	)
	defer crt.Free(esc)
	_go = int32(1)
	if (*(*uint32)(unsafe.Pointer(_522sqlite3Autoext))) != uint32(0) {
		goto _1
	}

	return

_1:
	_i = uint32(0)
_2:
	if _go == 0 {
		goto _4
	}

	_mutex = _35sqlite3MutexAlloc(tls, int32(2))
	_pThunk = _420sqlite3Apis
	Xsqlite3_mutex_enter(tls, _mutex)
	if _i < (*(*uint32)(unsafe.Pointer(_522sqlite3Autoext))) {
		goto _5
	}

	_xInit = null
	_go = int32(0)
	goto _6

_5:
	_xInit = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_522sqlite3Autoext + 8))) + 8*uintptr(_i)))
_6:
	Xsqlite3_mutex_leave(tls, _mutex)
	*(*uintptr)(unsafe.Pointer(_zErrmsg)) = null
	if _xInit == 0 || set5(&_rc, fn49(_xInit)(tls, _db, _zErrmsg, _pThunk)) == int32(0) {
		goto _7
	}

	_134sqlite3ErrorWithMsg(tls, _db, _rc, ts+17304 /* "automatic extension loading fail..." */, *(*uintptr)(unsafe.Pointer(_zErrmsg)))
	_go = int32(0)
_7:
	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_zErrmsg)))
	_i++
	goto _2

_4:
}

// _286setupLookaside is defined at sqlite3.c:142638:12
func _286setupLookaside(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pBuf uintptr /* *void */, _sz int32, _cnt int32) (r int32) {
	var (
		_pStart uintptr // *void
		_i      int32
		_p      uintptr // *TLookasideSlot = SLookasideSlot
	)
	if _426sqlite3LookasideUsed(tls, _db, null) <= int32(0) {
		goto _1
	}

	return int32(5)

_1:
	if (*(*uint8)(unsafe.Pointer((_db + 352) + 6))) == 0 {
		goto _2
	}

	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer((_db + 352) + 40)))
_2:
	_sz = _sz & int32(-8)
	if _sz > int32(8) {
		goto _3
	}

	_sz = int32(0)
_3:
	if _cnt >= int32(0) {
		goto _4
	}

	_cnt = int32(0)
_4:
	if _sz != int32(0) && _cnt != int32(0) {
		goto _5
	}

	_sz = int32(0)
	_pStart = null
	goto _6

_5:
	if _pBuf != 0 {
		goto _7
	}

	_523sqlite3BeginBenignMalloc(tls)
	_pStart = _198sqlite3Malloc(tls, uint64(_sz*_cnt))
	_524sqlite3EndBenignMalloc(tls)
	if _pStart == 0 {
		goto _9
	}

	_cnt = _109sqlite3MallocSize(tls, _pStart) / _sz
_9:
	goto _8

_7:
	_pStart = _pBuf
_8:
_6:
	*(*uintptr)(unsafe.Pointer((_db + 352) + 40)) = _pStart
	*(*uintptr)(unsafe.Pointer((_db + 352) + 24)) = null
	*(*uintptr)(unsafe.Pointer((_db + 352) + 32)) = null
	*(*uint16)(unsafe.Pointer((_db + 352) + 4)) = uint16(_sz)
	if _pStart == 0 {
		goto _10
	}

	*(*uint32)(unsafe.Pointer((_db + 352) + 8)) = uint32(_cnt)
	_p = _pStart
	_i = _cnt - int32(1)
_12:
	if _i < int32(0) {
		goto _14
	}

	*(*uintptr)(unsafe.Pointer(_p)) = *(*uintptr)(unsafe.Pointer((_db + 352) + 24))
	*(*uintptr)(unsafe.Pointer((_db + 352) + 24)) = _p
	_p = _p + uintptr(_sz)
	_i--
	goto _12

_14:
	*(*uintptr)(unsafe.Pointer((_db + 352) + 48)) = _p
	*(*uint32)(unsafe.Pointer(_db + 352)) = uint32(0)
	*(*uint8)(unsafe.Pointer((_db + 352) + 6)) = uint8(func() int32 {
		if _pBuf == 0 {
			return int32(1)
		}
		return int32(0)
	}())
	goto _11

_10:
	*(*uintptr)(unsafe.Pointer((_db + 352) + 40)) = _db
	*(*uintptr)(unsafe.Pointer((_db + 352) + 48)) = _db
	*(*uint32)(unsafe.Pointer(_db + 352)) = uint32(1)
	*(*uint8)(unsafe.Pointer((_db + 352) + 6)) = uint8(0)
	*(*uint32)(unsafe.Pointer((_db + 352) + 8)) = uint32(0)
_11:
	return int32(0)
}

// Xsqlite3_wal_autocheckpoint is defined at sqlite3.c:144022:16
func Xsqlite3_wal_autocheckpoint(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _nFrame int32) (r int32) {
	if _nFrame <= int32(0) {
		goto _1
	}

	Xsqlite3_wal_hook(tls, _db, fp54(_525sqlite3WalDefaultHook), uintptr(int64(_nFrame)))
	goto _2

_1:
	Xsqlite3_wal_hook(tls, _db, null, null)
_2:
	return int32(0)
}

// _287logBadConnection is defined at sqlite3.c:29357:13
func _287logBadConnection(tls crt.TLS, _zType uintptr /* *int8 */) {
	Xsqlite3_log(tls, int32(21), ts+17343 /* "API call with %s database connec..." */, _zType)
}

// _288aMsg [27]*int8, escapes: true, sqlite3.c:143385:20
var _288aMsg = bss + 6832 // array of 27 pointer to char

func init() {
	*(*[27]uintptr)(unsafe.Pointer(_288aMsg)) = [27]uintptr{
		0:  ts + 17388, /* "not an error" */
		1:  ts + 17401, /* "SQL logic error" */
		3:  ts + 17417, /* "access permission denied" */
		4:  ts + 17442, /* "query aborted" */
		5:  ts + 17456, /* "database is locked" */
		6:  ts + 17475, /* "database table is locked" */
		7:  ts + 17500, /* "out of memory" */
		8:  ts + 17514, /* "attempt to write a readonly data..." */
		9:  ts + 17551, /* "interrupted" */
		10: ts + 17563, /* "disk I/O error" */
		11: ts + 17578, /* "database disk image is malformed" */
		12: ts + 17611, /* "unknown operation" */
		13: ts + 17629, /* "database or disk is full" */
		14: ts + 17654, /* "unable to open database file" */
		15: ts + 17683, /* "locking protocol" */
		17: ts + 17700, /* "database schema has changed" */
		18: ts + 17728, /* "string or blob too big" */
		19: ts + 17751, /* "constraint failed" */
		20: ts + 17769, /* "datatype mismatch" */
		21: ts + 17787, /* "bad parameter or other API misus..." */
		23: ts + 17821, /* "authorization denied" */
		25: ts + 17842, /* "column index out of range" */
		26: ts + 17868, /* "file is not a database" */
	}
}

// _289sqlite3ValueText is defined at sqlite3.c:71523:27
func _289sqlite3ValueText(tls crt.TLS, _pVal uintptr /* *Tsqlite3_value = Ssqlite3_value */, _enc uint8) (r uintptr /* *void */) {
	if _pVal != 0 {
		goto _1
	}

	return null

_1:
	if (int32(*(*uint16)(unsafe.Pointer(_pVal + 8)))&int32(514)) != int32(514) || int32(*(*uint8)(unsafe.Pointer(_pVal + 10))) != int32(_enc) {
		goto _2
	}

	return *(*uintptr)(unsafe.Pointer(_pVal + 16))

_2:
	if (int32(*(*uint16)(unsafe.Pointer(_pVal + 8))) & int32(0x1)) == 0 {
		goto _3
	}

	return null

_3:
	return _526valueToText(tls, _pVal, _enc)
}

// Xsqlite3_result_blob is defined at sqlite3.c:77246:17
func Xsqlite3_result_blob(tls crt.TLS, _pCtx uintptr /* *Tsqlite3_context = Ssqlite3_context */, _z uintptr /* *void */, _n int32, _xDel uintptr /* *func(crt.TLS, uintptr) */) {
	_297setResultStrOrError(tls, _pCtx, _z, _n, uint8(0), _xDel)
}

// Xsqlite3_result_int64 is defined at sqlite3.c:77292:17
func Xsqlite3_result_int64(tls crt.TLS, _pCtx uintptr /* *Tsqlite3_context = Ssqlite3_context */, _iVal int64) {
	_527sqlite3VdbeMemSetInt64(tls, *(*uintptr)(unsafe.Pointer(_pCtx)), _iVal)
}

type SSHA3Context struct {
	Xu struct {
		X int64
		_ [1592]byte
	}
	XnRate   uint32
	XnLoaded uint32
	XixMask  uint32
}

// Xsqlite3_value_type is defined at sqlite3.c:77140:16
func Xsqlite3_value_type(tls crt.TLS, _pVal uintptr /* *Tsqlite3_value = Ssqlite3_value */) (r int32) {
	return int32(*(*uint8)(unsafe.Pointer(_528aType + uintptr(int32(*(*uint16)(unsafe.Pointer(_pVal + 8)))&int32(0x1f)))))
}

// Xsqlite3_result_error is defined at sqlite3.c:77274:17
func Xsqlite3_result_error(tls crt.TLS, _pCtx uintptr /* *Tsqlite3_context = Ssqlite3_context */, _z uintptr /* *int8 */, _n int32) {
	*(*int32)(unsafe.Pointer(_pCtx + 36)) = int32(1)
	*(*uint8)(unsafe.Pointer(_pCtx + 41)) = uint8(1)
	_395sqlite3VdbeMemSetStr(tls, *(*uintptr)(unsafe.Pointer(_pCtx)), _z, _n, uint8(1), uintptr(18446744073709551615))
}

// _290SHA3Init is defined at shell.c:1214:13
func _290SHA3Init(tls crt.TLS, _p uintptr /* *TSHA3Context = SSHA3Context */, _iSize int32) {
	crt.Xmemset(tls, _p, int32(0), uint64(1616))
	if _iSize < int32(128) || _iSize > int32(512) {
		goto _1
	}

	*(*uint32)(unsafe.Pointer(_p + 1600)) = uint32((int32(1600) - (((_iSize + int32(31)) & int32(-32)) * int32(2))) / int32(8))
	goto _2

_1:
	*(*uint32)(unsafe.Pointer(_p + 1600)) = uint32(136)
_2:
}

// _291SHA3Update is defined at shell.c:1243:13
func _291SHA3Update(tls crt.TLS, _p uintptr /* *TSHA3Context = SSHA3Context */, _aData uintptr /* *uint8 */, _nData uint32) {
	var _i uint32

	_i = uint32(0)
	if ((*(*uint32)(unsafe.Pointer(_p + 1604)))%uint32(8)) != uint32(0) || (int64(_aData-null)&int64(7)) != int64(0) {
		goto _1
	}

_2:
	if (_i + uint32(7)) >= _nData {
		goto _4
	}

	{
		p := &(*(*uint64)(unsafe.Pointer(_p + 8*uintptr((*(*uint32)(unsafe.Pointer(_p + 1604)))/uint32(8)))))
		*p = uint64(uint64(*p) ^ (*(*uint64)(unsafe.Pointer(_aData + uintptr(_i)))))
	}
	{
		p := &(*(*uint32)(unsafe.Pointer(_p + 1604)))
		*p = uint32(uint32(*p) + uint32(8))
	}
	if (*(*uint32)(unsafe.Pointer(_p + 1604))) < (*(*uint32)(unsafe.Pointer(_p + 1600))) {
		goto _5
	}

	_529KeccakF1600Step(tls, _p)
	*(*uint32)(unsafe.Pointer(_p + 1604)) = uint32(0)
_5:
	_i = uint32(_i + uint32(8))
	goto _2

_4:
_1:
_6:
	if _i >= _nData {
		goto _8
	}

	{
		p := &(*(*uint8)(unsafe.Pointer(_p + uintptr(*(*uint32)(unsafe.Pointer(_p + 1604))))))
		*p = uint8(int32(*p) ^ int32(*(*uint8)(unsafe.Pointer(_aData + uintptr(_i)))))
	}
	(*(*uint32)(unsafe.Pointer(_p + 1604)))++
	if (*(*uint32)(unsafe.Pointer(_p + 1604))) != (*(*uint32)(unsafe.Pointer(_p + 1600))) {
		goto _9
	}

	_529KeccakF1600Step(tls, _p)
	*(*uint32)(unsafe.Pointer(_p + 1604)) = uint32(0)
_9:
	_i++
	goto _6

_8:
}

// _292SHA3Final is defined at shell.c:1282:22
func _292SHA3Final(tls crt.TLS, _p uintptr /* *TSHA3Context = SSHA3Context */) (r uintptr /* *uint8 */) {
	esc := crt.MustMalloc(33)
	var (
		_i  uint32
		_c1 = esc      // *uint8
		_c2 = esc + 16 // *uint8
		_c3 = esc + 32 // *uint8
	)
	defer crt.Free(esc)
	if (*(*uint32)(unsafe.Pointer(_p + 1604))) != ((*(*uint32)(unsafe.Pointer(_p + 1600))) - uint32(1)) {
		goto _1
	}

	*(*uint8)(unsafe.Pointer(_c1)) = uint8(0x86)
	_291SHA3Update(tls, _p, _c1, uint32(1))
	goto _2

_1:
	*(*uint8)(unsafe.Pointer(_c2)) = uint8(0x6)
	*(*uint8)(unsafe.Pointer(_c3)) = uint8(0x80)
	_291SHA3Update(tls, _p, _c2, uint32(1))
	*(*uint32)(unsafe.Pointer(_p + 1604)) = (*(*uint32)(unsafe.Pointer(_p + 1600))) - uint32(1)
	_291SHA3Update(tls, _p, _c3, uint32(1))
_2:
	_i = uint32(0)
_3:
	if _i >= (*(*uint32)(unsafe.Pointer(_p + 1600))) {
		goto _5
	}

	*(*uint8)(unsafe.Pointer(_p + uintptr(_i+(*(*uint32)(unsafe.Pointer(_p + 1600)))))) = *(*uint8)(unsafe.Pointer(_p + uintptr(_i^(*(*uint32)(unsafe.Pointer(_p + 1608))))))
	_i++
	goto _3

_5:
	return _p + uintptr(*(*uint32)(unsafe.Pointer(_p + 1600)))
}

// Xsqlite3_context_db_handle is defined at sqlite3.c:77650:20
func Xsqlite3_context_db_handle(tls crt.TLS, _p uintptr /* *Tsqlite3_context = Ssqlite3_context */) (r uintptr /* *Tsqlite3 = Ssqlite3 */) {
	return *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p))) + 40))
}

// Xsqlite3_stmt_readonly is defined at sqlite3.c:78519:16
func Xsqlite3_stmt_readonly(tls crt.TLS, _pStmt uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */) (r int32) {
	if _pStmt != 0 {
		return int32(uint32((*(*uint16)(unsafe.Pointer(_pStmt + 194)))>>7) << 31 >> 31)
	}

	return int32(1)
}

// _293hash_step_vformat is defined at shell.c:1343:13
func _293hash_step_vformat(tls crt.TLS, _p uintptr /* *TSHA3Context = SSHA3Context */, _zFormat uintptr /* *int8 */, ap ...interface{}) {
	esc := crt.MustMalloc(50)
	var (
		_ap   *[]interface{} // Tva_list = T__gnuc_va_list = T__...a_list = *struct{X_ [2]uintptr;}
		_n    int32
		_zBuf = esc // *[50]int8
	)
	defer crt.Free(esc)
	{
		x := ap
		_ap = &x
	}
	Xsqlite3_vsnprintf(tls, int32(50), _zBuf, _zFormat, _ap)
	_ap = nil
	_n = int32(crt.Xstrlen(tls, _zBuf))
	_291SHA3Update(tls, _p, _zBuf, uint32(_n))
}

// Xsqlite3_column_int64 is defined at sqlite3.c:77983:25
func Xsqlite3_column_int64(tls crt.TLS, _pStmt uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */, _i int32) (r int64) {
	var _val int64

	_val = Xsqlite3_value_int64(tls, _203columnMem(tls, _pStmt, _i))
	_204columnMallocFailure(tls, _pStmt)
	return _val
}

// Xsqlite3_create_module is defined at sqlite3.c:126410:16
func Xsqlite3_create_module(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _zName uintptr /* *int8 */, _pModule uintptr /* *Tsqlite3_module = Ssqlite3_module */, _pAux uintptr /* *void */) (r int32) {
	return _530createModule(tls, _db, _zName, _pModule, _pAux, null)
}

// _294completionModule Tsqlite3_module = Ssqlite3_module, escapes: true, shell.c:2105:23
var _294completionModule = bss + 7048 // sqlite3_module

func init() {
	*(*Ssqlite3_module)(unsafe.Pointer(_294completionModule)) = Ssqlite3_module{
		XxConnect:    fp55(_531completionConnect),
		XxBestIndex:  fp56(_532completionBestIndex),
		XxDisconnect: fp10(_533completionDisconnect),
		XxOpen:       fp56(_534completionOpen),
		XxClose:      fp10(_535completionClose),
		XxFilter:     fp39(_536completionFilter),
		XxNext:       fp10(_537completionNext),
		XxEof:        fp10(_538completionEof),
		XxColumn:     fp57(_539completionColumn),
		XxRowid:      fp56(_540completionRowid),
	}
}

type SFuncDestructor struct {
	XnRef      int32
	XxDestroy  uintptr // *func(crt.TLS, uintptr)
	XpUserData uintptr // uintptr
}

// _295sqlite3DbMallocZero is defined at sqlite3.c:25286:21
func _295sqlite3DbMallocZero(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _n uint64) (r uintptr /* *void */) {
	var _p uintptr // *void

	_p = _177sqlite3DbMallocRaw(tls, _db, _n)
	if _p == 0 {
		goto _1
	}

	crt.Xmemset(tls, _p, int32(0), uint64(_n))
_1:
	return _p
}

// _296sqlite3CreateFunc is defined at sqlite3.c:143590:20
func _296sqlite3CreateFunc(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _zFunctionName uintptr /* *int8 */, _nArg int32, _enc int32, _pUserData uintptr /* *void */, _xSFunc uintptr /* *func(crt.TLS, uintptr, int32, uintptr) */, _xStep uintptr /* *func(crt.TLS, uintptr, int32, uintptr) */, _xFinal uintptr /* *func(crt.TLS, uintptr) */, _pDestructor uintptr /* *TFuncDestructor = SFuncDestructor */) (r int32) {
	var (
		_p          uintptr // *TFuncDef = SFuncDef
		_nName      int32
		_extraFlags int32
		_rc         int32
	)

	if _zFunctionName != 0 && (_xSFunc == 0 || _xFinal == 0 && _xStep == 0) && (_xSFunc != 0 || (_xFinal == 0 || _xStep != 0)) && (_xSFunc != 0 || (_xFinal != 0 || _xStep == 0)) && (_nArg >= int32(-1) && _nArg <= int32(127)) && int32(255) >= set5(&_nName, _211sqlite3Strlen30(tls, _zFunctionName)) {
		goto _1
	}

	return _29sqlite3MisuseError(tls, int32(143612))

_1:
	_extraFlags = _enc & int32(0x800)
	_enc = int32(_enc & int32(7))
	if _enc != int32(4) {
		goto _2
	}

	_enc = int32(2)
	goto _3

_2:
	if _enc != int32(5) {
		goto _4
	}

	_rc = _296sqlite3CreateFunc(tls, _db, _zFunctionName, _nArg, int32(1)|_extraFlags, _pUserData, _xSFunc, _xStep, _xFinal, _pDestructor)
	if _rc != int32(0) {
		goto _5
	}

	_rc = _296sqlite3CreateFunc(tls, _db, _zFunctionName, _nArg, int32(2)|_extraFlags, _pUserData, _xSFunc, _xStep, _xFinal, _pDestructor)
_5:
	if _rc == int32(0) {
		goto _6
	}

	return _rc

_6:
	_enc = int32(3)
_4:
_3:
	_p = _541sqlite3FindFunction(tls, _db, _zFunctionName, _nArg, uint8(_enc), uint8(0))
	if _p == 0 || (int32(*(*uint16)(unsafe.Pointer(_p + 2)))&int32(0x3)) != _enc || int32(*(*int8)(unsafe.Pointer(_p))) != _nArg {
		goto _7
	}

	if (*(*int32)(unsafe.Pointer(_db + 184))) == 0 {
		goto _8
	}

	_134sqlite3ErrorWithMsg(tls, _db, int32(5), ts+17891 /* "unable to delete/modify user-fun..." */)

	return int32(5)

	goto _9

_8:
	_132sqlite3ExpirePreparedStatements(tls, _db)
_9:
_7:
	_p = _541sqlite3FindFunction(tls, _db, _zFunctionName, _nArg, uint8(_enc), uint8(1))

	if _p != 0 {
		goto _10
	}

	return int32(7)

_10:
	_368functionDestroy(tls, _db, _p)
	if _pDestructor == 0 {
		goto _11
	}

	(*(*int32)(unsafe.Pointer(_pDestructor)))++
_11:
	*(*uintptr)(unsafe.Pointer(_p + 48)) = _pDestructor
	*(*uint16)(unsafe.Pointer(_p + 2)) = uint16((int32(*(*uint16)(unsafe.Pointer(_p + 2))) & int32(0x3)) | _extraFlags)
	*(*uintptr)(unsafe.Pointer(_p + 24)) = func() uintptr {
		if _xSFunc != 0 {
			return _xSFunc
		}
		return _xStep
	}()
	*(*uintptr)(unsafe.Pointer(_p + 32)) = _xFinal
	*(*uintptr)(unsafe.Pointer(_p + 8)) = _pUserData
	*(*int8)(unsafe.Pointer(_p)) = int8(uint16(_nArg))
	return int32(0)
}

type Ssqlite3_context struct {
	XpOut        uintptr // *Ssqlite3_value
	XpFunc       uintptr // *SFuncDef
	XpMem        uintptr // *Ssqlite3_value
	XpVdbe       uintptr // *SVdbe
	XiOp         int32
	XisError     int32
	XskipFlag    uint8
	XfErrorOrAux uint8
	Xargc        uint8
	Xargv        [1]uintptr
}

// _297setResultStrOrError is defined at sqlite3.c:77219:13
func _297setResultStrOrError(tls crt.TLS, _pCtx uintptr /* *Tsqlite3_context = Ssqlite3_context */, _z uintptr /* *int8 */, _n int32, _enc uint8, _xDel uintptr /* *func(crt.TLS, uintptr) */) {
	if _395sqlite3VdbeMemSetStr(tls, *(*uintptr)(unsafe.Pointer(_pCtx)), _z, _n, _enc, _xDel) != int32(18) {
		goto _1
	}

	Xsqlite3_result_error_toobig(tls, _pCtx)
_1:
}

// _298sqlite3VdbeMemCopy is defined at sqlite3.c:71278:20
func _298sqlite3VdbeMemCopy(tls crt.TLS, _pTo uintptr /* *TMem = Ssqlite3_value */, _pFrom uintptr /* *TMem = Ssqlite3_value */) (r int32) {
	var _rc int32

	_rc = int32(0)

	if (int32(*(*uint16)(unsafe.Pointer(_pTo + 8))) & int32(9312)) == int32(0) {
		goto _1
	}

	_542vdbeMemClearExternAndSetNull(tls, _pTo)
_1:
	crt.Xmemcpy(tls, _pTo, _pFrom, uint64(24))
	{
		p := &(*(*uint16)(unsafe.Pointer(_pTo + 8)))
		*p = uint16(int32(*p) & int32(-1025))
	}
	if (int32(*(*uint16)(unsafe.Pointer(_pTo + 8))) & int32(18)) == 0 {
		goto _2
	}

	if int32(0) != (int32(*(*uint16)(unsafe.Pointer(_pFrom + 8))) & int32(0x800)) {
		goto _3
	}

	{
		p := &(*(*uint16)(unsafe.Pointer(_pTo + 8)))
		*p = uint16(int32(*p) | int32(0x1000))
	}
	_rc = _543sqlite3VdbeMemMakeWriteable(tls, _pTo)
_3:
_2:
	return _rc
}

// _299sqlite3StrAccumFinish is defined at sqlite3.c:26424:21
func _299sqlite3StrAccumFinish(tls crt.TLS, _p uintptr /* *TStrAccum = SStrAccum */) (r uintptr /* *int8 */) {
	if (*(*uintptr)(unsafe.Pointer(_p + 8))) == 0 {
		goto _1
	}

	*(*int8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 8))) + uintptr(*(*uint32)(unsafe.Pointer(_p + 24))))) = int8(0)
	if (*(*uint32)(unsafe.Pointer(_p + 20))) <= uint32(0) || (int32(*(*uint8)(unsafe.Pointer(_p + 29)))&int32(0x4)) != int32(0) {
		goto _2
	}

	return _544strAccumFinishRealloc(tls, _p)

_2:
_1:
	return *(*uintptr)(unsafe.Pointer(_p + 8))
}

// _300zOrd [9]int8, escapes: true, sqlite3.c:25948:29
var _300zOrd = ds + 6786

type SPrintfArguments struct {
	XnArg  int32
	XnUsed int32
	XapArg uintptr // **Ssqlite3_value
}

type SToken struct {
	Xz uintptr // *int8
	Xn uint32
}

type SSrcList struct {
	XnSrc   int32
	XnAlloc uint32
	Xa      [1]struct {
		XpSchema     uintptr
		XzDatabase   uintptr
		XzName       uintptr
		XzAlias      uintptr
		XpTab        uintptr
		XpSelect     uintptr
		XaddrFillSub int32
		XregReturn   int32
		XregResult   int32
		Xfg          struct {
			Xjointype uint8
			F1        uint8
		}
		XiSelectId uint8
		XiCursor   int32
		XpOn       uintptr
		XpUsing    uintptr
		XcolUsed   uint64
		Xu1        struct{ X int64 }
		XpIBIndex  uintptr
	}
}

type SSrcList_item struct {
	XpSchema     uintptr
	XzDatabase   uintptr
	XzName       uintptr
	XzAlias      uintptr
	XpTab        uintptr
	XpSelect     uintptr
	XaddrFillSub int32
	XregReturn   int32
	XregResult   int32
	Xfg          struct {
		Xjointype uint8
		F1        uint8
	}
	XiSelectId uint8
	XiCursor   int32
	XpOn       uintptr
	XpUsing    uintptr
	XcolUsed   uint64
	Xu1        struct{ X int64 }
	XpIBIndex  uintptr
}

// _301sqlite3StrAccumAppend is defined at sqlite3.c:26384:21
func _301sqlite3StrAccumAppend(tls crt.TLS, _p uintptr /* *TStrAccum = SStrAccum */, _z uintptr /* *int8 */, _N int32) {
	if ((*(*uint32)(unsafe.Pointer(_p + 24))) + uint32(_N)) < (*(*uint32)(unsafe.Pointer(_p + 16))) {
		goto _1
	}

	_545enlargeAndAppend(tls, _p, _z, _N)
	goto _2

_1:
	if _N == 0 {
		goto _3
	}

	{
		p := &(*(*uint32)(unsafe.Pointer(_p + 24)))
		*p = uint32(uint32(*p) + uint32(_N))
	}
	crt.Xmemcpy(tls, (*(*uintptr)(unsafe.Pointer(_p + 8)))+uintptr((*(*uint32)(unsafe.Pointer(_p + 24)))-uint32(_N)), _z, uint64(_N))
_3:
_2:
}

// _302getIntArg is defined at sqlite3.c:25680:22
func _302getIntArg(tls crt.TLS, _p uintptr /* *TPrintfArguments = SPrintfArguments */) (r int64) {
	if (*(*int32)(unsafe.Pointer(_p))) > (*(*int32)(unsafe.Pointer(_p + 4))) {
		goto _1
	}

	return int64(0)

_1:
	return Xsqlite3_value_int64(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 8))) + 8*uintptr(postinc7(&(*(*int32)(unsafe.Pointer(_p + 4))))))))
}

// _303fmtinfo [23]struct{Xfmttype int8;Xbase u...8;Xcharset uint8;Xprefix uint8;}, escapes: true, sqlite3.c:25607:22
var _303fmtinfo = ds + 6795

// _304setStrAccumError is defined at sqlite3.c:25671:13
func _304setStrAccumError(tls crt.TLS, _p uintptr /* *TStrAccum = SStrAccum */, _eError uint8) {
	*(*uint8)(unsafe.Pointer(_p + 28)) = _eError
	*(*uint32)(unsafe.Pointer(_p + 16)) = uint32(0)
}

// _305aDigits [33]int8, escapes: true, sqlite3.c:25605:19
var _305aDigits = ds + 6933

// _306aPrefix [7]int8, escapes: true, sqlite3.c:25606:19
var _306aPrefix = ds + 6966

// _307getDoubleArg is defined at sqlite3.c:25684:15
func _307getDoubleArg(tls crt.TLS, _p uintptr /* *TPrintfArguments = SPrintfArguments */) (r float64) {
	if (*(*int32)(unsafe.Pointer(_p))) > (*(*int32)(unsafe.Pointer(_p + 4))) {
		goto _1
	}

	return float64(0)

_1:
	return Xsqlite3_value_double(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 8))) + 8*uintptr(postinc7(&(*(*int32)(unsafe.Pointer(_p + 4))))))))
}

// _308sqlite3IsNaN is defined at sqlite3.c:28190:20
func _308sqlite3IsNaN(tls crt.TLS, _x float64) (r int32) {
	var _rc int32

	_rc = crt.X__isnan(tls, _x)
	return _rc
}

// _309et_getdigit is defined at sqlite3.c:25655:13
func _309et_getdigit(tls crt.TLS, _val uintptr /* *float64 */, _cnt uintptr /* *int32 */) (r int8) {
	var (
		_digit int32
		_d     float64
	)
	if (*(*int32)(unsafe.Pointer(_cnt))) > int32(0) {
		goto _1
	}

	return int8('0')

_1:
	*(*int32)(unsafe.Pointer(_cnt))--
	_digit = int32(*(*float64)(unsafe.Pointer(_val)))
	_d = float64(_digit)
	_digit = int32(_digit + int32('0'))
	*(*float64)(unsafe.Pointer(_val)) = ((*(*float64)(unsafe.Pointer(_val))) - _d) * float64(10)
	return int8(_digit)
}

// _310getTextArg is defined at sqlite3.c:25688:13
func _310getTextArg(tls crt.TLS, _p uintptr /* *TPrintfArguments = SPrintfArguments */) (r uintptr /* *int8 */) {
	if (*(*int32)(unsafe.Pointer(_p))) > (*(*int32)(unsafe.Pointer(_p + 4))) {
		goto _1
	}

	return null

_1:
	return Xsqlite3_value_text(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 8))) + 8*uintptr(postinc7(&(*(*int32)(unsafe.Pointer(_p + 4))))))))
}

// _311sqlite3AppendChar is defined at sqlite3.c:26356:21
func _311sqlite3AppendChar(tls crt.TLS, _p uintptr /* *TStrAccum = SStrAccum */, _N int32, _c int8) {
	if (int64(*(*uint32)(unsafe.Pointer(_p + 24)))+int64(_N)) < int64(*(*uint32)(unsafe.Pointer(_p + 16))) || set5(&_N, _546sqlite3StrAccumEnlarge(tls, _p, _N)) > int32(0) {
		goto _1
	}

	return

_1:
_2:
	if postinc24(&_N) <= int32(0) {
		goto _3
	}

	*(*int8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 8))) + uintptr(postinc53(&(*(*uint32)(unsafe.Pointer(_p + 24))))))) = _c
	goto _2

_3:
}

// _312sqlite3StrAccumAppendAll is defined at sqlite3.c:26401:21
func _312sqlite3StrAccumAppendAll(tls crt.TLS, _p uintptr /* *TStrAccum = SStrAccum */, _z uintptr /* *int8 */) {
	_301sqlite3StrAccumAppend(tls, _p, _z, _211sqlite3Strlen30(tls, _z))
}

// _313sqlite3SystemError is defined at sqlite3.c:28280:21
func _313sqlite3SystemError(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _rc int32) {
	if _rc != int32(3082) {
		goto _1
	}

	return

_1:
	_rc = int32(_rc & int32(0xff))
	if _rc != int32(14) && _rc != int32(10) {
		goto _2
	}

	*(*int32)(unsafe.Pointer(_db + 88)) = _547sqlite3OsGetLastError(tls, *(*uintptr)(unsafe.Pointer(_db)))
_2:
}

// _314sqlite3ValueNew is defined at sqlite3.c:71540:30
func _314sqlite3ValueNew(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */) (r uintptr /* *Tsqlite3_value = Ssqlite3_value */) {
	var _p uintptr // *TMem = Ssqlite3_value

	_p = _295sqlite3DbMallocZero(tls, _db, uint64(56))
	if _p == 0 {
		goto _1
	}

	*(*uint16)(unsafe.Pointer(_p + 8)) = uint16(0x1)
	*(*uintptr)(unsafe.Pointer(_p + 40)) = _db
_1:
	return _p
}

// _315sqlite3VMPrintf is defined at sqlite3.c:26473:21
func _315sqlite3VMPrintf(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _zFormat uintptr /* *int8 */, _ap *[]interface{}) (r uintptr /* *int8 */) {
	esc := crt.MustMalloc(112)
	var (
		_z     uintptr    // *int8
		_zBase = esc      // *[70]int8
		_acc   = esc + 80 // *TStrAccum = SStrAccum
	)
	defer crt.Free(esc)

	_130sqlite3StrAccumInit(tls, _acc, _db, _zBase, int32(70), *(*int32)(unsafe.Pointer(_db + 124)))
	*(*uint8)(unsafe.Pointer(_acc + 29)) = uint8(0x1)
	_131sqlite3VXPrintf(tls, _acc, _zFormat, _ap)
	_z = _299sqlite3StrAccumFinish(tls, _acc)
	if int32(*(*uint8)(unsafe.Pointer(_acc + 28))) != int32(1) {
		goto _1
	}

	_178sqlite3OomFault(tls, _db)
_1:
	return _z
}

// _316sqlite3ValueSetStr is defined at sqlite3.c:72138:21
func _316sqlite3ValueSetStr(tls crt.TLS, _v uintptr /* *Tsqlite3_value = Ssqlite3_value */, _n int32, _z uintptr /* *void */, _enc uint8, _xDel uintptr /* *func(crt.TLS, uintptr) */) {
	if _v == 0 {
		goto _1
	}

	_395sqlite3VdbeMemSetStr(tls, _v, _z, _n, _enc, _xDel)
_1:
}

// _317sqlite3ErrorFinish is defined at sqlite3.c:28260:30
func _317sqlite3ErrorFinish(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _err_code int32) {
	if (*(*uintptr)(unsafe.Pointer(_db + 336))) == 0 {
		goto _1
	}

	_548sqlite3ValueSetNull(tls, *(*uintptr)(unsafe.Pointer(_db + 336)))
_1:
	_313sqlite3SystemError(tls, _db, _err_code)
}

type SParse struct {
	Xdb               uintptr // *Ssqlite3
	XzErrMsg          uintptr // *int8
	XpVdbe            uintptr // *SVdbe
	Xrc               int32
	XcolNamesSet      uint8
	XcheckSchema      uint8
	Xnested           uint8
	XnTempReg         uint8
	XisMultiWrite     uint8
	XmayAbort         uint8
	XhasCompound      uint8
	XokConstFactor    uint8
	XdisableLookaside uint8
	XnColCache        uint8
	XnRangeReg        int32
	XiRangeReg        int32
	XnErr             int32
	XnTab             int32
	XnMem             int32
	XnOpAlloc         int32
	XszOpAlloc        int32
	XiSelfTab         int32
	XiCacheLevel      int32
	XiCacheCnt        int32
	XnLabel           int32
	XaLabel           uintptr // *int32
	XpConstExpr       uintptr // *SExprList
	XconstraintName   SToken
	XwriteMask        uint32
	XcookieMask       uint32
	XregRowid         int32
	XregRoot          int32
	XnMaxArg          int32
	XnTableLock       int32
	XaTableLock       uintptr // *STableLock
	XpAinc            uintptr // *SAutoincInfo
	XpToplevel        uintptr // *SParse
	XpTriggerTab      uintptr // *STable
	XaddrCrTab        int32
	XnQueryLoop       uint32
	Xoldmask          uint32
	Xnewmask          uint32
	XeTriggerOp       uint8
	XeOrconf          uint8
	XdisableTriggers  uint8
	XaColCache        [10]struct {
		XiTable  int32
		XiColumn int16
		XtempReg uint8
		XiLevel  int32
		XiReg    int32
		Xlru     int32
	}
	XaTempReg      [8]int32
	XsNameToken    SToken
	XsLastToken    SToken
	XnVar          int16
	XiPkSortOrder  uint8
	Xexplain       uint8
	XdeclareVtab   uint8
	XnVtabLock     int32
	XnHeight       int32
	XiSelectId     int32
	XiNextSelectId int32
	XpVList        uintptr // *int32
	XpReprepare    uintptr // *SVdbe
	XzTail         uintptr // *int8
	XpNewTable     uintptr // *STable
	XpNewTrigger   uintptr // *STrigger
	XzAuthContext  uintptr // *int8
	XsArg          SToken
	XapVtabLock    uintptr // **STable
	XpZombieTab    uintptr // *STable
	XpTriggerPrg   uintptr // *STriggerPrg
	XpWith         uintptr // *SWith
	XpWithToFree   uintptr // *SWith
}

// _318sqlite3OpenTempDatabase is defined at sqlite3.c:104712:20
func _318sqlite3OpenTempDatabase(tls crt.TLS, _pParse uintptr /* *TParse = SParse */) (r int32) {
	esc := crt.MustMalloc(8)
	var (
		_db  uintptr // *Tsqlite3 = Ssqlite3
		_rc  int32
		_pBt = esc // **TBtree = SBtree
	)
	defer crt.Free(esc)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	if (*(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32) + 8))) != 0 || (*(*uint8)(unsafe.Pointer(_pParse + 467))) != 0 {
		goto _1
	}

	_rc = _282sqlite3BtreeOpen(tls, *(*uintptr)(unsafe.Pointer(_db)), null, _db, _pBt, int32(0), _549flags)
	if _rc == int32(0) {
		goto _2
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+17954 /* "unable to open a temporary datab..." */)
	*(*int32)(unsafe.Pointer(_pParse + 24)) = _rc
	return int32(1)

_2:
	*(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32) + 8)) = *(*uintptr)(unsafe.Pointer(_pBt))

	if int32(7) != _210sqlite3BtreeSetPageSize(tls, *(*uintptr)(unsafe.Pointer(_pBt)), *(*int32)(unsafe.Pointer(_db + 108)), int32(-1), int32(0)) {
		goto _3
	}

	_178sqlite3OomFault(tls, _db)
	return int32(1)

_3:
_1:
	return int32(0)
}

// _319sqlite3ParserReset is defined at sqlite3.c:117277:21
func _319sqlite3ParserReset(tls crt.TLS, _pParse uintptr /* *TParse = SParse */) {
	var _db uintptr // *Tsqlite3 = Ssqlite3

	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_pParse + 88)))
	_551sqlite3ExprListDelete(tls, _db, *(*uintptr)(unsafe.Pointer(_pParse + 96)))
	if _db == 0 {
		goto _1
	}

	{
		p := &(*(*uint32)(unsafe.Pointer(_db + 352)))
		*p = uint32(uint32(*p) - uint32(*(*uint8)(unsafe.Pointer(_pParse + 36))))
	}
_1:
	*(*uint8)(unsafe.Pointer(_pParse + 36)) = uint8(0)
}

type SBitvec struct {
	XiSize    uint32
	XnSet     uint32
	XiDivisor uint32
	Xu        struct {
		X int64
		_ [488]byte
	}
}

type SPagerSavepoint struct {
	XiOffset      int64
	XiHdrOffset   int64
	XpInSavepoint uintptr // *SBitvec
	XnOrig        uint32
	XiSubRec      uint32
	XaWalData     [4]uint32
}

type SPCache struct {
	XpDirty     uintptr // *SPgHdr
	XpDirtyTail uintptr // *SPgHdr
	XpSynced    uintptr // *SPgHdr
	XnRefSum    int32
	XszCache    int32
	XszSpill    int32
	XszPage     int32
	XszExtra    int32
	XbPurgeable uint8
	XeCreate    uint8
	XxStress    uintptr // *func(crt.TLS, uintptr, uintptr) int32
	XpStress    uintptr // uintptr
	XpCache     uintptr // *Ssqlite3_pcache
}

type SWal struct {
	XpVfs                uintptr // *Ssqlite3_vfs
	XpDbFd               uintptr // *Ssqlite3_file
	XpWalFd              uintptr // *Ssqlite3_file
	XiCallback           uint32
	XmxWalSize           int64
	XnWiData             int32
	XszFirstBlock        int32
	XapWiData            uintptr // **uint32
	XszPage              uint32
	XreadLock            int16
	XsyncFlags           uint8
	XexclusiveMode       uint8
	XwriteLock           uint8
	XckptLock            uint8
	XreadOnly            uint8
	XtruncateOnCommit    uint8
	XsyncHeader          uint8
	XpadToSectorBoundary uint8
	Xhdr                 SWalIndexHdr
	XminFrame            uint32
	XiReCksum            uint32
	XzWalName            uintptr // *int8
	XnCkpt               uint32
}

type Ssqlite3_pcache_page struct {
	XpBuf   uintptr // uintptr
	XpExtra uintptr // uintptr
}

type Ssqlite3_io_methods struct {
	XiVersion               int32
	XxClose                 uintptr // *func(crt.TLS, uintptr) int32
	XxRead                  uintptr // *func(crt.TLS, uintptr, uintptr, int32, int64) int32
	XxWrite                 uintptr // *func(crt.TLS, uintptr, uintptr, int32, int64) int32
	XxTruncate              uintptr // *func(crt.TLS, uintptr, int64) int32
	XxSync                  uintptr // *func(crt.TLS, uintptr, int32) int32
	XxFileSize              uintptr // *func(crt.TLS, uintptr, uintptr) int32
	XxLock                  uintptr // *func(crt.TLS, uintptr, int32) int32
	XxUnlock                uintptr // *func(crt.TLS, uintptr, int32) int32
	XxCheckReservedLock     uintptr // *func(crt.TLS, uintptr, uintptr) int32
	XxFileControl           uintptr // *func(crt.TLS, uintptr, int32, uintptr) int32
	XxSectorSize            uintptr // *func(crt.TLS, uintptr) int32
	XxDeviceCharacteristics uintptr // *func(crt.TLS, uintptr) int32
	XxShmMap                uintptr // *func(crt.TLS, uintptr, int32, int32, int32, uintptr) int32
	XxShmLock               uintptr // *func(crt.TLS, uintptr, int32, int32, int32) int32
	XxShmBarrier            uintptr // *func(crt.TLS, uintptr)
	XxShmUnmap              uintptr // *func(crt.TLS, uintptr, int32) int32
	XxFetch                 uintptr // *func(crt.TLS, uintptr, int64, int32, uintptr) int32
	XxUnfetch               uintptr // *func(crt.TLS, uintptr, int64, uintptr) int32
}

// _320btreeLockCarefully is defined at sqlite3.c:59467:29
func _320btreeLockCarefully(tls crt.TLS, _p uintptr /* *TBtree = SBtree */) {
	var _pLater uintptr // *TBtree = SBtree

	if Xsqlite3_mutex_try(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 8))) + 80))) != int32(0) {
		goto _1
	}

	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 8))) + 8)) = *(*uintptr)(unsafe.Pointer(_p))
	*(*uint8)(unsafe.Pointer(_p + 18)) = uint8(1)
	return

_1:
	_pLater = *(*uintptr)(unsafe.Pointer(_p + 32))
_2:
	if _pLater == 0 {
		goto _4
	}

	if (*(*uint8)(unsafe.Pointer(_pLater + 18))) == 0 {
		goto _5
	}

	_359unlockBtreeMutex(tls, _pLater)
_5:
	_pLater = *(*uintptr)(unsafe.Pointer(_pLater + 32))
	goto _2

_4:
	_552lockBtreeMutex(tls, _p)
	_pLater = *(*uintptr)(unsafe.Pointer(_p + 32))
_6:
	if _pLater == 0 {
		goto _8
	}

	if (*(*int32)(unsafe.Pointer(_pLater + 20))) == 0 {
		goto _9
	}

	_552lockBtreeMutex(tls, _pLater)
_9:
	_pLater = *(*uintptr)(unsafe.Pointer(_pLater + 32))
	goto _6

_8:
}

type SBtShared struct {
	XpPager          uintptr // *SPager
	Xdb              uintptr // *Ssqlite3
	XpCursor         uintptr // *SBtCursor
	XpPage1          uintptr // *SMemPage
	XopenFlags       uint8
	XautoVacuum      uint8
	XincrVacuum      uint8
	XbDoTruncate     uint8
	XinTransaction   uint8
	Xmax1bytePayload uint8
	XbtsFlags        uint16
	XmaxLocal        uint16
	XminLocal        uint16
	XmaxLeaf         uint16
	XminLeaf         uint16
	XpageSize        uint32
	XusableSize      uint32
	XnTransaction    int32
	XnPage           uint32
	XpSchema         uintptr // uintptr
	XxFreeSchema     uintptr // *func(crt.TLS, uintptr)
	Xmutex           uintptr // *Ssqlite3_mutex
	XpHasContent     uintptr // *SBitvec
	XnRef            int32
	XpNext           uintptr // *SBtShared
	XpLock           uintptr // *SBtLock
	XpWriter         uintptr // *SBtree
	XpTmpSpace       uintptr // *uint8
}

type SBtLock struct {
	XpBtree uintptr // *SBtree
	XiTable uint32
	XeLock  uint8
	XpNext  uintptr // *SBtLock
}

type SMemPage struct {
	XisInit          uint8
	XbBusy           uint8
	XintKey          uint8
	XintKeyLeaf      uint8
	Xpgno            uint32
	Xleaf            uint8
	XhdrOffset       uint8
	XchildPtrSize    uint8
	Xmax1bytePayload uint8
	XnOverflow       uint8
	XmaxLocal        uint16
	XminLocal        uint16
	XcellOffset      uint16
	XnFree           uint16
	XnCell           uint16
	XmaskPage        uint16
	XaiOvfl          [4]uint16
	XapOvfl          [4]uintptr
	XpBt             uintptr // *SBtShared
	XaData           uintptr // *uint8
	XaDataEnd        uintptr // *uint8
	XaCellIdx        uintptr // *uint8
	XaDataOfst       uintptr // *uint8
	XpDbPage         uintptr // *SPgHdr
	XxCellSize       uintptr // *func(crt.TLS, uintptr, uintptr) uint16
	XxParseCell      uintptr // *func(crt.TLS, uintptr, uintptr, uintptr)
}

// _321querySharedCacheTableLock is defined at sqlite3.c:59920:12
func _321querySharedCacheTableLock(tls crt.TLS, _p uintptr /* *TBtree = SBtree */, _iTab uint32, _eLock uint8) (r int32) {
	var (
		_pBt   uintptr // *TBtShared = SBtShared
		_pIter uintptr // *TBtLock = SBtLock
	)
	_pBt = *(*uintptr)(unsafe.Pointer(_p + 8))

	if (*(*uint8)(unsafe.Pointer(_p + 17))) != 0 {
		goto _1
	}

	return int32(0)

_1:
	if (*(*uintptr)(unsafe.Pointer(_pBt + 120))) == _p || (int32(*(*uint16)(unsafe.Pointer(_pBt + 38)))&int32(0x40)) == int32(0) {
		goto _2
	}

	return int32(262)

_2:
	_pIter = *(*uintptr)(unsafe.Pointer(_pBt + 112))
_3:
	if _pIter == 0 {
		goto _5
	}

	if (*(*uintptr)(unsafe.Pointer(_pIter))) == _p || (*(*uint32)(unsafe.Pointer(_pIter + 8))) != _iTab || int32(*(*uint8)(unsafe.Pointer(_pIter + 12))) == int32(_eLock) {
		goto _6
	}

	if int32(_eLock) != int32(2) {
		goto _7
	}

	{
		p := &(*(*uint16)(unsafe.Pointer(_pBt + 38)))
		*p = uint16(int32(*p) | int32(0x80))
	}
_7:
	return int32(262)

_6:
	_pIter = *(*uintptr)(unsafe.Pointer(_pIter + 16))
	goto _3

_5:
	return int32(0)
}

// _322lockBtree is defined at sqlite3.c:62628:12
func _322lockBtree(tls crt.TLS, _pBt uintptr /* *TBtShared = SBtShared */) (r int32) {
	esc := crt.MustMalloc(36)
	var (
		_rc          int32
		_pPage1      = esc // **TMemPage = SMemPage
		_nPage       int32
		_nPageFile   = esc + 16 // *int32
		_nPageHeader int32
		_pageSize    uint32
		_usableSize  uint32
		_page1       uintptr    // *Tu8 = uint8
		_isOpen      = esc + 32 // *int32
	)
	defer crt.Free(esc)
	*(*int32)(unsafe.Pointer(_nPageFile)) = int32(0)

	_rc = _553sqlite3PagerSharedLock(tls, *(*uintptr)(unsafe.Pointer(_pBt)))
	if _rc == int32(0) {
		goto _1
	}

	return _rc

_1:
	_rc = _363btreeGetPage(tls, _pBt, uint32(1), _pPage1, int32(0))
	if _rc == int32(0) {
		goto _2
	}

	return _rc

_2:
	_nPage = set5(&_nPageHeader, int32(_328sqlite3Get4byte(tls, uintptr(28)+*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage1))) + 80)))))
	_160sqlite3PagerPagecount(tls, *(*uintptr)(unsafe.Pointer(_pBt)), _nPageFile)
	if _nPage != int32(0) && crt.Xmemcmp(tls, uintptr(24)+*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage1))) + 80)), uintptr(92)+*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage1))) + 80)), uint64(4)) == int32(0) {
		goto _3
	}

	_nPage = *(*int32)(unsafe.Pointer(_nPageFile))
_3:
	if _nPage <= int32(0) {
		goto _4
	}

	_page1 = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage1))) + 80))
	_rc = int32(26)
	if crt.Xmemcmp(tls, _page1, _554zMagicHeader, uint64(16)) == int32(0) {
		goto _5
	}

	goto _page1_init_failed

_5:
	if int32(*(*uint8)(unsafe.Pointer(_page1 + 18))) <= int32(2) {
		goto _6
	}

	{
		p := &(*(*uint16)(unsafe.Pointer(_pBt + 38)))
		*p = uint16(int32(*p) | int32(0x1))
	}
_6:
	if int32(*(*uint8)(unsafe.Pointer(_page1 + 19))) <= int32(2) {
		goto _7
	}

	goto _page1_init_failed

_7:
	if int32(*(*uint8)(unsafe.Pointer(_page1 + 19))) != int32(2) || (int32(*(*uint16)(unsafe.Pointer(_pBt + 38)))&int32(0x20)) != int32(0) {
		goto _8
	}

	*(*int32)(unsafe.Pointer(_isOpen)) = int32(0)
	_rc = _555sqlite3PagerOpenWal(tls, *(*uintptr)(unsafe.Pointer(_pBt)), _isOpen)
	if _rc == int32(0) {
		goto _10
	}

	goto _page1_init_failed

	goto _11

_10:
	if (*(*int32)(unsafe.Pointer(_isOpen))) != int32(0) {
		goto _12
	}

	_364releasePageOne(tls, *(*uintptr)(unsafe.Pointer(_pPage1)))
	return int32(0)

_12:
_11:
	_rc = int32(26)
	goto _9

_8:
_9:
	if crt.Xmemcmp(tls, _page1+21, ts+18024 /* "@  " */, uint64(3)) == int32(0) {
		goto _13
	}

	goto _page1_init_failed

_13:
	_pageSize = uint32((int32(*(*uint8)(unsafe.Pointer(_page1 + 16))) << (uint(8) % 32)) | (int32(*(*uint8)(unsafe.Pointer(_page1 + 17))) << (uint(16) % 32)))
	if ((_pageSize-uint32(1))&_pageSize) == uint32(0) && _pageSize <= uint32(65536) && _pageSize > uint32(256) {
		goto _14
	}

	goto _page1_init_failed

_14:
	_usableSize = _pageSize - uint32(*(*uint8)(unsafe.Pointer(_page1 + 20)))
	if _pageSize == (*(*uint32)(unsafe.Pointer(_pBt + 48))) {
		goto _15
	}

	_364releasePageOne(tls, *(*uintptr)(unsafe.Pointer(_pPage1)))
	*(*uint32)(unsafe.Pointer(_pBt + 52)) = _usableSize
	*(*uint32)(unsafe.Pointer(_pBt + 48)) = _pageSize
	_411freeTempSpace(tls, _pBt)
	_rc = _412sqlite3PagerSetPagesize(tls, *(*uintptr)(unsafe.Pointer(_pBt)), _pBt+48, int32(_pageSize-_usableSize))
	return _rc

_15:
	if ((*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pBt + 8))) + 48)))&uint32(0x1)) != uint32(0) || _nPage <= (*(*int32)(unsafe.Pointer(_nPageFile))) {
		goto _16
	}

	_rc = _556sqlite3CorruptError(tls, int32(62749))
	goto _page1_init_failed

_16:
	if _usableSize >= uint32(480) {
		goto _17
	}

	goto _page1_init_failed

_17:
	*(*uint32)(unsafe.Pointer(_pBt + 48)) = _pageSize
	*(*uint32)(unsafe.Pointer(_pBt + 52)) = _usableSize
	*(*uint8)(unsafe.Pointer(_pBt + 33)) = uint8(func() int32 {
		if _328sqlite3Get4byte(tls, _page1+52) != 0 {
			return int32(1)
		}
		return int32(0)
	}())
	*(*uint8)(unsafe.Pointer(_pBt + 34)) = uint8(func() int32 {
		if _328sqlite3Get4byte(tls, _page1+64) != 0 {
			return int32(1)
		}
		return int32(0)
	}())
_4:
	*(*uint16)(unsafe.Pointer(_pBt + 40)) = uint16(((((*(*uint32)(unsafe.Pointer(_pBt + 52))) - uint32(12)) * uint32(64)) / uint32(255)) - uint32(23))
	*(*uint16)(unsafe.Pointer(_pBt + 42)) = uint16(((((*(*uint32)(unsafe.Pointer(_pBt + 52))) - uint32(12)) * uint32(32)) / uint32(255)) - uint32(23))
	*(*uint16)(unsafe.Pointer(_pBt + 44)) = uint16((*(*uint32)(unsafe.Pointer(_pBt + 52))) - uint32(35))
	*(*uint16)(unsafe.Pointer(_pBt + 46)) = uint16(((((*(*uint32)(unsafe.Pointer(_pBt + 52))) - uint32(12)) * uint32(32)) / uint32(255)) - uint32(23))
	if int32(*(*uint16)(unsafe.Pointer(_pBt + 40))) <= int32(127) {
		goto _18
	}

	*(*uint8)(unsafe.Pointer(_pBt + 37)) = uint8(127)
	goto _19

_18:
	*(*uint8)(unsafe.Pointer(_pBt + 37)) = uint8(*(*uint16)(unsafe.Pointer(_pBt + 40)))
_19:
	*(*uintptr)(unsafe.Pointer(_pBt + 24)) = *(*uintptr)(unsafe.Pointer(_pPage1))
	*(*uint32)(unsafe.Pointer(_pBt + 60)) = uint32(_nPage)
	return int32(0)

	goto _page1_init_failed
_page1_init_failed:
	_364releasePageOne(tls, *(*uintptr)(unsafe.Pointer(_pPage1)))
	*(*uintptr)(unsafe.Pointer(_pBt + 24)) = null
	return _rc
}

// _323sqlite3PagerBegin is defined at sqlite3.c:53275:20
func _323sqlite3PagerBegin(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _exFlag int32, _subjInMemory int32) (r int32) {
	var _rc int32

	_rc = int32(0)
	if (*(*int32)(unsafe.Pointer(_pPager + 44))) == 0 {
		goto _1
	}

	return *(*int32)(unsafe.Pointer(_pPager + 44))

_1:
	*(*uint8)(unsafe.Pointer(_pPager + 25)) = uint8(_subjInMemory)
	if int32(*(*uint8)(unsafe.Pointer(_pPager + 20))) != int32(1) {
		goto _2
	}

	if (*(*uintptr)(unsafe.Pointer(_pPager + 288))) == 0 {
		goto _3
	}

	if (*(*uint8)(unsafe.Pointer(_pPager + 8))) == 0 || _557sqlite3WalExclusiveMode(tls, *(*uintptr)(unsafe.Pointer(_pPager + 288)), int32(-1)) == 0 {
		goto _5
	}

	_rc = _558pagerLockDb(tls, _pPager, int32(4))
	if _rc == int32(0) {
		goto _6
	}

	return _rc

_6:
	_557sqlite3WalExclusiveMode(tls, *(*uintptr)(unsafe.Pointer(_pPager + 288)), int32(1))
_5:
	_rc = _559sqlite3WalBeginWriteTransaction(tls, *(*uintptr)(unsafe.Pointer(_pPager + 288)))
	goto _4

_3:
	_rc = _558pagerLockDb(tls, _pPager, int32(2))
	if _rc != int32(0) || _exFlag == 0 {
		goto _7
	}

	_rc = _560pager_wait_on_lock(tls, _pPager, int32(4))
_7:
_4:
	if _rc != int32(0) {
		goto _8
	}

	*(*uint8)(unsafe.Pointer(_pPager + 20)) = uint8(2)
	*(*uint32)(unsafe.Pointer(_pPager + 40)) = *(*uint32)(unsafe.Pointer(_pPager + 28))
	*(*uint32)(unsafe.Pointer(_pPager + 36)) = *(*uint32)(unsafe.Pointer(_pPager + 28))
	*(*uint32)(unsafe.Pointer(_pPager + 32)) = *(*uint32)(unsafe.Pointer(_pPager + 28))
	*(*int64)(unsafe.Pointer(_pPager + 96)) = int64(0)
_8:
_2:
	return _rc
}

// _324sqlite3TempInMemory is defined at sqlite3.c:144203:20
func _324sqlite3TempInMemory(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */) (r int32) {
	return bool2int(int32(*(*uint8)(unsafe.Pointer(_db + 96))) == int32(2))
}

// _325newDatabase is defined at sqlite3.c:62848:12
func _325newDatabase(tls crt.TLS, _pBt uintptr /* *TBtShared = SBtShared */) (r int32) {
	var (
		_pP1  uintptr // *TMemPage = SMemPage
		_data uintptr // *uint8
		_rc   int32
	)

	if (*(*uint32)(unsafe.Pointer(_pBt + 60))) <= uint32(0) {
		goto _1
	}

	return int32(0)

_1:
	_pP1 = *(*uintptr)(unsafe.Pointer(_pBt + 24))

	_data = *(*uintptr)(unsafe.Pointer(_pP1 + 80))
	_rc = _161sqlite3PagerWrite(tls, *(*uintptr)(unsafe.Pointer(_pP1 + 112)))
	if _rc == 0 {
		goto _2
	}

	return _rc

_2:
	crt.Xmemcpy(tls, _data, _554zMagicHeader, uint64(16))

	*(*uint8)(unsafe.Pointer(_data + 16)) = uint8(((*(*uint32)(unsafe.Pointer(_pBt + 48))) >> (uint(8) % 32)) & uint32(0xff))
	*(*uint8)(unsafe.Pointer(_data + 17)) = uint8(((*(*uint32)(unsafe.Pointer(_pBt + 48))) >> (uint(16) % 32)) & uint32(0xff))
	*(*uint8)(unsafe.Pointer(_data + 18)) = uint8(1)
	*(*uint8)(unsafe.Pointer(_data + 19)) = uint8(1)

	*(*uint8)(unsafe.Pointer(_data + 20)) = uint8((*(*uint32)(unsafe.Pointer(_pBt + 48))) - (*(*uint32)(unsafe.Pointer(_pBt + 52))))
	*(*uint8)(unsafe.Pointer(_data + 21)) = uint8(64)
	*(*uint8)(unsafe.Pointer(_data + 22)) = uint8(32)
	*(*uint8)(unsafe.Pointer(_data + 23)) = uint8(32)
	crt.Xmemset(tls, _data+24, int32(0), uint64(76))
	_561zeroPage(tls, _pP1, int32(13))
	{
		p := &(*(*uint16)(unsafe.Pointer(_pBt + 38)))
		*p = uint16(int32(*p) | int32(0x2))
	}

	_329sqlite3Put4byte(tls, _data+52, uint32(*(*uint8)(unsafe.Pointer(_pBt + 33))))
	_329sqlite3Put4byte(tls, _data+64, uint32(*(*uint8)(unsafe.Pointer(_pBt + 34))))
	*(*uint32)(unsafe.Pointer(_pBt + 60)) = uint32(1)
	*(*uint8)(unsafe.Pointer(_data + 31)) = uint8(1)
	return int32(0)
}

// _326unlockBtreeIfUnused is defined at sqlite3.c:62831:13
func _326unlockBtreeIfUnused(tls crt.TLS, _pBt uintptr /* *TBtShared = SBtShared */) {
	var _pPage1 uintptr // *TMemPage = SMemPage

	if int32(*(*uint8)(unsafe.Pointer(_pBt + 36))) != int32(0) || (*(*uintptr)(unsafe.Pointer(_pBt + 24))) == 0 {
		goto _1
	}

	_pPage1 = *(*uintptr)(unsafe.Pointer(_pBt + 24))

	*(*uintptr)(unsafe.Pointer(_pBt + 24)) = null
	_364releasePageOne(tls, _pPage1)
_1:
}

// _327btreeInvokeBusyHandler is defined at sqlite3.c:61875:12
func _327btreeInvokeBusyHandler(tls crt.TLS, _pArg uintptr /* *void */) (r int32) {
	var _pBt uintptr // *TBtShared = SBtShared

	_pBt = _pArg

	return _562sqlite3InvokeBusyHandler(tls, (*(*uintptr)(unsafe.Pointer(_pBt + 8)))+544)
}

// _328sqlite3Get4byte is defined at sqlite3.c:29276:20
func _328sqlite3Get4byte(tls crt.TLS, _p uintptr /* *Tu8 = uint8 */) (r uint32) {
	return (((uint32(*(*uint8)(unsafe.Pointer(_p))) << (uint(24) % 32)) | uint32(int32(*(*uint8)(unsafe.Pointer(_p + 1)))<<(uint(16)%32))) | uint32(int32(*(*uint8)(unsafe.Pointer(_p + 2)))<<(uint(8)%32))) | uint32(*(*uint8)(unsafe.Pointer(_p + 3)))
}

// _329sqlite3Put4byte is defined at sqlite3.c:29294:21
func _329sqlite3Put4byte(tls crt.TLS, _p uintptr /* *uint8 */, _v uint32) {
	*(*uint8)(unsafe.Pointer(_p)) = uint8(_v >> (uint(24) % 32))
	*(*uint8)(unsafe.Pointer(_p + 1)) = uint8(_v >> (uint(16) % 32))
	*(*uint8)(unsafe.Pointer(_p + 2)) = uint8(_v >> (uint(8) % 32))
	*(*uint8)(unsafe.Pointer(_p + 3)) = uint8(_v)
}

// _330sqlite3PagerOpenSavepoint is defined at sqlite3.c:54291:20
func _330sqlite3PagerOpenSavepoint(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _nSavepoint int32) (r int32) {
	if _nSavepoint <= (*(*int32)(unsafe.Pointer(_pPager + 128))) || (*(*uint8)(unsafe.Pointer(_pPager + 10))) == 0 {
		goto _1
	}

	return _563pagerOpenSavepoint(tls, _pPager, _nSavepoint)

	goto _2

_1:
	return int32(0)

_2:
	return r
}

// _331sqlite3PagerDataVersion is defined at sqlite3.c:49244:20
func _331sqlite3PagerDataVersion(tls crt.TLS, _pPager uintptr /* *TPager = SPager */) (r uint32) {
	return *(*uint32)(unsafe.Pointer(_pPager + 132))
}

// _332btreePagecount is defined at sqlite3.c:61711:13
func _332btreePagecount(tls crt.TLS, _pBt uintptr /* *TBtShared = SBtShared */) (r uint32) {
	return *(*uint32)(unsafe.Pointer(_pBt + 60))
}

// _333sqlite3PagerIsMemdb is defined at sqlite3.c:54232:20
func _333sqlite3PagerIsMemdb(tls crt.TLS, _pPager uintptr /* *TPager = SPager */) (r int32) {
	return int32(*(*uint8)(unsafe.Pointer(_pPager + 16)))
}

// _334sqlite3PagerGetExtra is defined at sqlite3.c:54670:21
func _334sqlite3PagerGetExtra(tls crt.TLS, _pPg uintptr /* *TDbPage = SPgHdr */) (r uintptr /* *void */) {
	return *(*uintptr)(unsafe.Pointer(_pPg + 16))
}

// _335sqlite3PagerUnrefNotNull is defined at sqlite3.c:53139:21
func _335sqlite3PagerUnrefNotNull(tls crt.TLS, _pPg uintptr /* *TDbPage = SPgHdr */) {
	if (int32(*(*uint16)(unsafe.Pointer(_pPg + 52))) & int32(0x20)) == 0 {
		goto _1
	}

	_564pagerReleaseMapPage(tls, _pPg)
	goto _2

_1:
	_565sqlite3PcacheRelease(tls, _pPg)
_2:
}

// _336sqlite3SchemaClear is defined at sqlite3.c:105577:21
func _336sqlite3SchemaClear(tls crt.TLS, _p uintptr /* *void */) {
	esc := crt.MustMalloc(56)
	var (
		_temp1   = esc      // *THash = SHash
		_temp2   = esc + 32 // *THash = SHash
		_pElem   uintptr    // *THashElem = SHashElem
		_pSchema uintptr    // *TSchema = SSchema
		_pTab    uintptr    // *TTable = STable
	)
	defer crt.Free(esc)
	_pSchema = _p
	*(*SHash)(unsafe.Pointer(_temp1)) = *(*SHash)(unsafe.Pointer(_pSchema + 8))
	*(*SHash)(unsafe.Pointer(_temp2)) = *(*SHash)(unsafe.Pointer(_pSchema + 56))
	_276sqlite3HashInit(tls, _pSchema+56)
	_369sqlite3HashClear(tls, _pSchema+32)
	_pElem = *(*uintptr)(unsafe.Pointer(_temp2 + 8))
_1:
	if _pElem == 0 {
		goto _3
	}

	_429sqlite3DeleteTrigger(tls, null, *(*uintptr)(unsafe.Pointer(_pElem + 16)))
	_pElem = *(*uintptr)(unsafe.Pointer(_pElem))
	goto _1

_3:
	_369sqlite3HashClear(tls, _temp2)
	_276sqlite3HashInit(tls, _pSchema+8)
	_pElem = *(*uintptr)(unsafe.Pointer(_temp1 + 8))
_4:
	if _pElem == 0 {
		goto _6
	}

	_pTab = *(*uintptr)(unsafe.Pointer(_pElem + 16))
	_430sqlite3DeleteTable(tls, null, _pTab)
	_pElem = *(*uintptr)(unsafe.Pointer(_pElem))
	goto _4

_6:
	_369sqlite3HashClear(tls, _temp1)
	_369sqlite3HashClear(tls, _pSchema+80)
	*(*uintptr)(unsafe.Pointer(_pSchema + 104)) = null
	if (int32(*(*uint16)(unsafe.Pointer(_pSchema + 114))) & int32(0x1)) == 0 {
		goto _7
	}

	(*(*int32)(unsafe.Pointer(_pSchema + 4)))++
_7:
	{
		p := &(*(*uint16)(unsafe.Pointer(_pSchema + 114)))
		*p = uint16(int32(*p) & int32(-10))
	}
}

// _337sqlite3VtabUnlockList is defined at sqlite3.c:126569:21
func _337sqlite3VtabUnlockList(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */) {
	var (
		_p     uintptr // *TVTable = SVTable
		_pNext uintptr // *TVTable = SVTable
	)
	_p = *(*uintptr)(unsafe.Pointer(_db + 488))
	*(*uintptr)(unsafe.Pointer(_db + 488)) = null

	if _p == 0 {
		goto _1
	}

	_132sqlite3ExpirePreparedStatements(tls, _db)
_2:
	_pNext = *(*uintptr)(unsafe.Pointer(_p + 40))
	_566sqlite3VtabUnlock(tls, _p)
	_p = _pNext
	if _p != 0 {
		goto _2
	}

_1:
}

// _338sqlite3CollapseDatabaseArray is defined at sqlite3.c:101191:21
func _338sqlite3CollapseDatabaseArray(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */) {
	var (
		_i   int32
		_j   int32
		_pDb uintptr // *SDb
	)
	_i = set5(&_j, int32(2))
_1:
	if _i >= (*(*int32)(unsafe.Pointer(_db + 40))) {
		goto _3
	}

	_pDb = (*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_i)
	if (*(*uintptr)(unsafe.Pointer(_pDb + 8))) != 0 {
		goto _4
	}

	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_pDb)))
	*(*uintptr)(unsafe.Pointer(_pDb)) = null
	goto _2

_4:
	if _j >= _i {
		goto _5
	}

	*(*SDb)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_j))) = *(*SDb)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_i)))
_5:
	_j++

_2:
	_i++
	goto _1

_3:
	*(*int32)(unsafe.Pointer(_db + 40)) = _j
	if (*(*int32)(unsafe.Pointer(_db + 40))) > int32(2) || (*(*uintptr)(unsafe.Pointer(_db + 32))) == (_db+568) {
		goto _6
	}

	crt.Xmemcpy(tls, _db+568, *(*uintptr)(unsafe.Pointer(_db + 32)), uint64(64))
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_db + 32)))
	*(*uintptr)(unsafe.Pointer(_db + 32)) = _db + 568
_6:
}

// _339subjournalPageIfRequired is defined at sqlite3.c:52010:12
func _339subjournalPageIfRequired(tls crt.TLS, _pPg uintptr /* *TPgHdr = SPgHdr */) (r int32) {
	if _567subjRequiresPage(tls, _pPg) == 0 {
		goto _1
	}

	return _568subjournalPage(tls, _pPg)

	goto _2

_1:
	return int32(0)

_2:
	return r
}

// _340pagerWriteLargeSector is defined at sqlite3.c:53493:28
func _340pagerWriteLargeSector(tls crt.TLS, _pPg uintptr /* *TPgHdr = SPgHdr */) (r int32) {
	esc := crt.MustMalloc(8)
	var (
		_rc             int32
		_nPageCount     uint32
		_pg1            uint32
		_nPage          int32
		_ii             int32
		_needSync       int32
		_pPager         uintptr // *TPager = SPager
		_nPagePerSector uint32
		_pg             uint32
		_pPage          = esc   // **TPgHdr = SPgHdr
		_1pPage         uintptr // *TPgHdr = SPgHdr
	)
	defer crt.Free(esc)
	_rc = int32(0)
	_nPage = int32(0)
	_needSync = int32(0)
	_pPager = *(*uintptr)(unsafe.Pointer(_pPg + 40))
	_nPagePerSector = uint32((*(*uint32)(unsafe.Pointer(_pPager + 184))) / uint32(*(*int32)(unsafe.Pointer(_pPager + 188))))

	{
		p := &(*(*uint8)(unsafe.Pointer(_pPager + 24)))
		*p = uint8(int32(*p) | int32(0x4))
	}
	_pg1 = (((*(*uint32)(unsafe.Pointer(_pPg + 48))) - uint32(1)) & (^(_nPagePerSector - uint32(1)))) + uint32(1)
	_nPageCount = *(*uint32)(unsafe.Pointer(_pPager + 28))
	if (*(*uint32)(unsafe.Pointer(_pPg + 48))) <= _nPageCount {
		goto _1
	}

	_nPage = int32(((*(*uint32)(unsafe.Pointer(_pPg + 48))) - _pg1) + uint32(1))
	goto _2

_1:
	if ((_pg1 + _nPagePerSector) - uint32(1)) <= _nPageCount {
		goto _3
	}

	_nPage = int32((_nPageCount + uint32(1)) - _pg1)
	goto _4

_3:
	_nPage = int32(_nPagePerSector)
_4:
_2:
	_ii = int32(0)
_5:
	if _ii >= _nPage || _rc != int32(0) {
		goto _7
	}

	_pg = _pg1 + uint32(_ii)
	if _pg != (*(*uint32)(unsafe.Pointer(_pPg + 48))) && _407sqlite3BitvecTest(tls, *(*uintptr)(unsafe.Pointer(_pPager + 64)), _pg) != 0 {
		goto _8
	}

	if _pg == uint32((_149sqlite3PendingByte/(*(*int32)(unsafe.Pointer(_pPager + 188))))+int32(1)) {
		goto _10
	}

	_rc = _150sqlite3PagerGet(tls, _pPager, _pg, _pPage, int32(0))
	if _rc != int32(0) {
		goto _11
	}

	_rc = _341pager_write(tls, *(*uintptr)(unsafe.Pointer(_pPage)))
	if (int32(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage))) + 52))) & int32(0x8)) == 0 {
		goto _12
	}

	_needSync = int32(1)
_12:
	_335sqlite3PagerUnrefNotNull(tls, *(*uintptr)(unsafe.Pointer(_pPage)))
_11:
_10:
	goto _9

_8:
	if set4(&(*(*uintptr)(unsafe.Pointer(_pPage))), _569sqlite3PagerLookup(tls, _pPager, _pg)) == 0 {
		goto _13
	}

	if (int32(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage))) + 52))) & int32(0x8)) == 0 {
		goto _14
	}

	_needSync = int32(1)
_14:
	_335sqlite3PagerUnrefNotNull(tls, *(*uintptr)(unsafe.Pointer(_pPage)))
_13:
_9:
	_ii++
	goto _5

_7:
	if _rc != int32(0) || _needSync == 0 {
		goto _15
	}

	_ii = int32(0)
_16:
	if _ii >= _nPage {
		goto _18
	}

	_1pPage = _569sqlite3PagerLookup(tls, _pPager, _pg1+uint32(_ii))
	if _1pPage == 0 {
		goto _19
	}

	{
		p := &(*(*uint16)(unsafe.Pointer(_1pPage + 52)))
		*p = uint16(int32(*p) | int32(0x8))
	}
	_335sqlite3PagerUnrefNotNull(tls, _1pPage)
_19:
	_ii++
	goto _16

_18:
_15:
	{
		p := &(*(*uint8)(unsafe.Pointer(_pPager + 24)))
		*p = uint8(int32(*p) & int32(-5))
	}
	return _rc
}

// _341pager_write is defined at sqlite3.c:53401:12
func _341pager_write(tls crt.TLS, _pPg uintptr /* *TPgHdr = SPgHdr */) (r int32) {
	var (
		_pPager uintptr // *TPager = SPager
		_rc     int32
	)
	_pPager = *(*uintptr)(unsafe.Pointer(_pPg + 40))
	_rc = int32(0)

	if int32(*(*uint8)(unsafe.Pointer(_pPager + 20))) != int32(2) {
		goto _1
	}

	_rc = _570pager_open_journal(tls, _pPager)
	if _rc == int32(0) {
		goto _2
	}

	return _rc

_2:
_1:
	_571sqlite3PcacheMakeDirty(tls, _pPg)

	if (*(*uintptr)(unsafe.Pointer(_pPager + 64))) == 0 || _572sqlite3BitvecTestNotNull(tls, *(*uintptr)(unsafe.Pointer(_pPager + 64)), *(*uint32)(unsafe.Pointer(_pPg + 48))) != int32(0) {
		goto _3
	}

	if (*(*uint32)(unsafe.Pointer(_pPg + 48))) > (*(*uint32)(unsafe.Pointer(_pPager + 32))) {
		goto _4
	}

	_rc = _573pagerAddPageToRollbackJournal(tls, _pPg)
	if _rc == int32(0) {
		goto _6
	}

	return _rc

_6:
	goto _5

_4:
	if int32(*(*uint8)(unsafe.Pointer(_pPager + 20))) == int32(4) {
		goto _7
	}

	{
		p := &(*(*uint16)(unsafe.Pointer(_pPg + 52)))
		*p = uint16(int32(*p) | int32(0x8))
	}
_7:
_5:
_3:
	{
		p := &(*(*uint16)(unsafe.Pointer(_pPg + 52)))
		*p = uint16(int32(*p) | int32(0x4))
	}
	if (*(*int32)(unsafe.Pointer(_pPager + 128))) <= int32(0) {
		goto _8
	}

	_rc = _339subjournalPageIfRequired(tls, _pPg)
_8:
	if (*(*uint32)(unsafe.Pointer(_pPager + 28))) >= (*(*uint32)(unsafe.Pointer(_pPg + 48))) {
		goto _9
	}

	*(*uint32)(unsafe.Pointer(_pPager + 28)) = *(*uint32)(unsafe.Pointer(_pPg + 48))
_9:
	return _rc
}

// _342pagerFlushOnCommit is defined at sqlite3.c:49437:12
func _342pagerFlushOnCommit(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _bCommit int32) (r int32) {
	if int32(*(*uint8)(unsafe.Pointer(_pPager + 16))) != int32(0) {
		goto _1
	}

	return int32(1)

_1:
	if _bCommit != 0 {
		goto _2
	}

	return int32(0)

_2:
	if (*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pPager + 72))))) != 0 {
		goto _3
	}

	return int32(0)

_3:
	return bool2int(_574sqlite3PCachePercentDirty(tls, *(*uintptr)(unsafe.Pointer(_pPager + 280))) >= int32(25))
}

// _343sqlite3BackupRestart is defined at sqlite3.c:70345:21
func _343sqlite3BackupRestart(tls crt.TLS, _pBackup uintptr /* *Tsqlite3_backup = Ssqlite3_backup */) {
	var _p uintptr // *Tsqlite3_backup = Ssqlite3_backup

	_p = _pBackup
_1:
	if _p == 0 {
		goto _3
	}

	*(*uint32)(unsafe.Pointer(_p + 24)) = uint32(1)
	_p = *(*uintptr)(unsafe.Pointer(_p + 64))
	goto _1

_3:
}

// _344sqlite3PcacheDirtyList is defined at sqlite3.c:45453:22
func _344sqlite3PcacheDirtyList(tls crt.TLS, _pCache uintptr /* *TPCache = SPCache */) (r uintptr /* *TPgHdr = SPgHdr */) {
	var _p uintptr // *TPgHdr = SPgHdr

	_p = *(*uintptr)(unsafe.Pointer(_pCache))
_1:
	if _p == 0 {
		goto _3
	}

	*(*uintptr)(unsafe.Pointer(_p + 32)) = *(*uintptr)(unsafe.Pointer(_p + 56))
	_p = *(*uintptr)(unsafe.Pointer(_p + 56))
	goto _1

_3:
	return _575pcacheSortDirtyList(tls, *(*uintptr)(unsafe.Pointer(_pCache)))
}

// _345pagerWalFrames is defined at sqlite3.c:50652:12
func _345pagerWalFrames(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, apList uintptr, _nTruncate uint32, _isCommit int32) (r int32) {
	esc := crt.MustMalloc(8)
	var (
		_pList  = esc // **SPgHdr
		_rc     int32
		_nList  int32
		_p      uintptr // *TPgHdr = SPgHdr
		_ppNext uintptr // **TPgHdr = SPgHdr
	)
	defer crt.Free(esc)
	*(*uintptr)(unsafe.Pointer(_pList)) = apList

	if _isCommit == 0 {
		goto _1
	}

	_ppNext = _pList
	_nList = int32(0)
	_p = *(*uintptr)(unsafe.Pointer(_pList))
_3:
	if set4(&(*(*uintptr)(unsafe.Pointer(_ppNext))), _p) == 0 {
		goto _5
	}

	if (*(*uint32)(unsafe.Pointer(_p + 48))) > _nTruncate {
		goto _6
	}

	_ppNext = _p + 32
	_nList++
_6:
	_p = *(*uintptr)(unsafe.Pointer(_p + 32))
	goto _3

_5:
	goto _2

_1:
	_nList = int32(1)
_2:
	{
		p := &(*(*int32)(unsafe.Pointer((_pPager + 240) + 8)))
		*p = int32(int32(*p) + _nList)
	}
	if (*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pList))) + 48))) != uint32(1) {
		goto _7
	}

	_576pager_write_changecounter(tls, *(*uintptr)(unsafe.Pointer(_pList)))
_7:
	_rc = _577sqlite3WalFrames(tls, *(*uintptr)(unsafe.Pointer(_pPager + 288)), *(*int32)(unsafe.Pointer(_pPager + 188)), *(*uintptr)(unsafe.Pointer(_pList)), _nTruncate, _isCommit, int32(*(*uint8)(unsafe.Pointer(_pPager + 15))))
	if _rc != int32(0) || (*(*uintptr)(unsafe.Pointer(_pPager + 112))) == 0 {
		goto _8
	}

	_p = *(*uintptr)(unsafe.Pointer(_pList))
_9:
	if _p == 0 {
		goto _11
	}

	_578sqlite3BackupUpdate(tls, *(*uintptr)(unsafe.Pointer(_pPager + 112)), *(*uint32)(unsafe.Pointer(_p + 48)), *(*uintptr)(unsafe.Pointer(_p + 8)))
	_p = *(*uintptr)(unsafe.Pointer(_p + 32))
	goto _9

_11:
_8:
	return _rc
}

// _346sqlite3PcacheCleanAll is defined at sqlite3.c:45275:21
func _346sqlite3PcacheCleanAll(tls crt.TLS, _pCache uintptr /* *TPCache = SPCache */) {
	var _p uintptr // *TPgHdr = SPgHdr

_1:
	if set4(&_p, *(*uintptr)(unsafe.Pointer(_pCache))) == 0 {
		goto _2
	}

	_579sqlite3PcacheMakeClean(tls, _p)
	goto _1

_2:
}

// _347pager_incr_changecounter is defined at sqlite3.c:53670:12
func _347pager_incr_changecounter(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _isDirectMode int32) (r int32) {
	esc := crt.MustMalloc(8)
	var (
		_rc     int32
		_pPgHdr = esc   // **TPgHdr = SPgHdr
		_zBuf   uintptr // *void
		_pCopy  uintptr // *void
	)
	defer crt.Free(esc)
	_rc = int32(0)

	if (*(*uint8)(unsafe.Pointer(_pPager + 22))) != 0 || (*(*uint32)(unsafe.Pointer(_pPager + 28))) <= uint32(0) {
		goto _1
	}

	_rc = _150sqlite3PagerGet(tls, _pPager, uint32(1), _pPgHdr, int32(0))

	if 1 == 0 || _rc != int32(0) {
		goto _2
	}

	_rc = _161sqlite3PagerWrite(tls, *(*uintptr)(unsafe.Pointer(_pPgHdr)))
_2:
	if _rc != int32(0) {
		goto _3
	}

	_576pager_write_changecounter(tls, *(*uintptr)(unsafe.Pointer(_pPgHdr)))

	goto _4

	if _rc != int32(0) {
		goto _6
	}

_6:
	if _rc != int32(0) {
		goto _7
	}

	_pCopy = _zBuf + 24
	crt.Xmemcpy(tls, _pPager+136, _pCopy, uint64(16))
	*(*uint8)(unsafe.Pointer(_pPager + 22)) = uint8(1)
_7:
	goto _5

_4:
	*(*uint8)(unsafe.Pointer(_pPager + 22)) = uint8(1)
_5:
_3:
	_153sqlite3PagerUnref(tls, *(*uintptr)(unsafe.Pointer(_pPgHdr)))
_1:
	return _rc
}

// _348writeMasterJournal is defined at sqlite3.c:49167:12
func _348writeMasterJournal(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _zMaster uintptr /* *int8 */) (r int32) {
	esc := crt.MustMalloc(8)
	var (
		_rc       int32
		_nMaster  int32
		_iHdrOff  int64
		_jrnlSize = esc // *Ti64 = Tsqlite_int64 = int64
		_cksum    uint32
	)
	defer crt.Free(esc)
	_cksum = uint32(0)

	if _zMaster != 0 && int32(*(*uint8)(unsafe.Pointer(_pPager + 9))) != int32(4) && (*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pPager + 80))))) != 0 {
		goto _1
	}

	return int32(0)

_1:
	*(*uint8)(unsafe.Pointer(_pPager + 23)) = uint8(1)

	_nMaster = int32(0)
_2:
	if (*(*int8)(unsafe.Pointer(_zMaster + uintptr(_nMaster)))) == 0 {
		goto _4
	}

	_cksum = uint32(_cksum + uint32(*(*int8)(unsafe.Pointer(_zMaster + uintptr(_nMaster)))))
	_nMaster++
	goto _2

_4:
	if (*(*uint8)(unsafe.Pointer(_pPager + 12))) == 0 {
		goto _5
	}

	*(*int64)(unsafe.Pointer(_pPager + 96)) = _580journalHdrOffset(tls, _pPager)
_5:
	_iHdrOff = *(*int64)(unsafe.Pointer(_pPager + 96))
	if int32(0) == set5(&_rc, _581write32bits(tls, *(*uintptr)(unsafe.Pointer(_pPager + 80)), _iHdrOff, uint32((_149sqlite3PendingByte/(*(*int32)(unsafe.Pointer(_pPager + 188))))+int32(1)))) && int32(0) == set5(&_rc, _163sqlite3OsWrite(tls, *(*uintptr)(unsafe.Pointer(_pPager + 80)), _zMaster, _nMaster, _iHdrOff+int64(4))) && int32(0) == set5(&_rc, _581write32bits(tls, *(*uintptr)(unsafe.Pointer(_pPager + 80)), (_iHdrOff+int64(4))+int64(_nMaster), uint32(_nMaster))) && int32(0) == set5(&_rc, _581write32bits(tls, *(*uintptr)(unsafe.Pointer(_pPager + 80)), ((_iHdrOff+int64(4))+int64(_nMaster))+int64(4), _cksum)) && int32(0) == set5(&_rc, _163sqlite3OsWrite(tls, *(*uintptr)(unsafe.Pointer(_pPager + 80)), _582aJournalMagic, int32(8), ((_iHdrOff+int64(4))+int64(_nMaster))+int64(8))) {
		goto _6
	}

	return _rc

_6:
	{
		p := &(*(*int64)(unsafe.Pointer(_pPager + 96)))
		*p = int64(int64(*p) + int64(_nMaster+int32(20)))
	}
	if int32(0) != set5(&_rc, _352sqlite3OsFileSize(tls, *(*uintptr)(unsafe.Pointer(_pPager + 80)), _jrnlSize)) || (*(*int64)(unsafe.Pointer(_jrnlSize))) <= (*(*int64)(unsafe.Pointer(_pPager + 96))) {
		goto _7
	}

	_rc = _353sqlite3OsTruncate(tls, *(*uintptr)(unsafe.Pointer(_pPager + 80)), *(*int64)(unsafe.Pointer(_pPager + 96)))
_7:
	return _rc
}

// _349syncJournal is defined at sqlite3.c:51707:12
func _349syncJournal(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _newHdr int32) (r int32) {
	esc := crt.MustMalloc(28)
	var (
		_rc             int32
		_iDc            int32
		_iNextHdrOffset int64
		_aMagic         = esc      // *[8]uint8
		_zHeader        = esc + 16 // *[12]uint8
	)
	defer crt.Free(esc)

	_rc = _584sqlite3PagerExclusiveLock(tls, _pPager)
	if _rc == int32(0) {
		goto _1
	}

	return _rc

_1:
	if (*(*uint8)(unsafe.Pointer(_pPager + 11))) != 0 {
		goto _2
	}

	if (*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pPager + 80))))) == 0 || int32(*(*uint8)(unsafe.Pointer(_pPager + 9))) == int32(4) {
		goto _3
	}

	_iDc = _585sqlite3OsDeviceCharacteristics(tls, *(*uintptr)(unsafe.Pointer(_pPager + 72)))

	if int32(0) != (_iDc & int32(0x200)) {
		goto _5
	}

	crt.Xmemcpy(tls, _zHeader, _582aJournalMagic, uint64(8))
	_329sqlite3Put4byte(tls, _zHeader+8, uint32(*(*int32)(unsafe.Pointer(_pPager + 48))))
	_iNextHdrOffset = _580journalHdrOffset(tls, _pPager)
	_rc = _586sqlite3OsRead(tls, *(*uintptr)(unsafe.Pointer(_pPager + 80)), _aMagic, int32(8), _iNextHdrOffset)
	if _rc != int32(0) || int32(0) != crt.Xmemcmp(tls, _aMagic, _582aJournalMagic, uint64(8)) {
		goto _6
	}

	_rc = _163sqlite3OsWrite(tls, *(*uintptr)(unsafe.Pointer(_pPager + 80)), _583zerobyte, int32(1), _iNextHdrOffset)
_6:
	if _rc == int32(0) || _rc == int32(522) {
		goto _7
	}

	return _rc

_7:
	if (*(*uint8)(unsafe.Pointer(_pPager + 12))) == 0 || int32(0) != (_iDc&int32(0x400)) {
		goto _8
	}

	_rc = _354sqlite3OsSync(tls, *(*uintptr)(unsafe.Pointer(_pPager + 80)), int32(*(*uint8)(unsafe.Pointer(_pPager + 14))))
	if _rc == int32(0) {
		goto _9
	}

	return _rc

_9:
_8:
	_rc = _163sqlite3OsWrite(tls, *(*uintptr)(unsafe.Pointer(_pPager + 80)), _zHeader, int32(12), *(*int64)(unsafe.Pointer(_pPager + 104)))
	if _rc == int32(0) {
		goto _10
	}

	return _rc

_10:
_5:
	if int32(0) != (_iDc & int32(0x400)) {
		goto _11
	}

	_rc = _354sqlite3OsSync(tls, *(*uintptr)(unsafe.Pointer(_pPager + 80)), int32(*(*uint8)(unsafe.Pointer(_pPager + 14)))|func() int32 {
		if int32(*(*uint8)(unsafe.Pointer(_pPager + 14))) == int32(0x3) {
			return int32(0x10)
		}
		return int32(0)
	}())
	if _rc == int32(0) {
		goto _12
	}

	return _rc

_12:
_11:
	*(*int64)(unsafe.Pointer(_pPager + 104)) = *(*int64)(unsafe.Pointer(_pPager + 96))
	if _newHdr == 0 || int32(0) != (_iDc&int32(0x200)) {
		goto _13
	}

	*(*int32)(unsafe.Pointer(_pPager + 48)) = int32(0)
	_rc = _587writeJournalHdr(tls, _pPager)
	if _rc == int32(0) {
		goto _14
	}

	return _rc

_14:
_13:
	goto _4

_3:
	*(*int64)(unsafe.Pointer(_pPager + 104)) = *(*int64)(unsafe.Pointer(_pPager + 96))
_4:
_2:
	_588sqlite3PcacheClearSyncFlags(tls, *(*uintptr)(unsafe.Pointer(_pPager + 280)))
	*(*uint8)(unsafe.Pointer(_pPager + 20)) = uint8(4)

	return int32(0)
}

// _350pager_write_pagelist is defined at sqlite3.c:51850:12
func _350pager_write_pagelist(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _pList uintptr /* *TPgHdr = SPgHdr */) (r int32) {
	esc := crt.MustMalloc(8)
	var (
		_rc     int32
		_szFile = esc // *Tsqlite3_int64 = Tsqlite_int64 = int64
		_pgno   uint32
		_offset int64
		_pData  uintptr // *int8
	)
	defer crt.Free(esc)
	_rc = int32(0)

	if (*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pPager + 72))))) != 0 {
		goto _1
	}

	_rc = _589pagerOpentemp(tls, _pPager, *(*uintptr)(unsafe.Pointer(_pPager + 72)), int32(*(*uint32)(unsafe.Pointer(_pPager + 180))))
_1:
	if _rc != int32(0) || (*(*uint32)(unsafe.Pointer(_pPager + 40))) >= (*(*uint32)(unsafe.Pointer(_pPager + 28))) || (*(*uintptr)(unsafe.Pointer(_pList + 32))) == 0 && (*(*uint32)(unsafe.Pointer(_pList + 48))) <= (*(*uint32)(unsafe.Pointer(_pPager + 40))) {
		goto _2
	}

	*(*int64)(unsafe.Pointer(_szFile)) = int64(*(*int32)(unsafe.Pointer(_pPager + 188))) * int64(*(*uint32)(unsafe.Pointer(_pPager + 28)))
	_521sqlite3OsFileControlHint(tls, *(*uintptr)(unsafe.Pointer(_pPager + 72)), int32(5), _szFile)
	*(*uint32)(unsafe.Pointer(_pPager + 40)) = *(*uint32)(unsafe.Pointer(_pPager + 28))
_2:
_3:
	if _rc != int32(0) || _pList == 0 {
		goto _4
	}

	_pgno = *(*uint32)(unsafe.Pointer(_pList + 48))
	if _pgno > (*(*uint32)(unsafe.Pointer(_pPager + 28))) || int32(0) != (int32(*(*uint16)(unsafe.Pointer(_pList + 52)))&int32(0x10)) {
		goto _5
	}

	_offset = int64(_pgno-uint32(1)) * int64(*(*int32)(unsafe.Pointer(_pPager + 188)))

	if (*(*uint32)(unsafe.Pointer(_pList + 48))) != uint32(1) {
		goto _7
	}

	_576pager_write_changecounter(tls, _pList)
_7:
	_pData = *(*uintptr)(unsafe.Pointer(_pList + 8))
	_rc = _163sqlite3OsWrite(tls, *(*uintptr)(unsafe.Pointer(_pPager + 72)), _pData, *(*int32)(unsafe.Pointer(_pPager + 188)), _offset)
	if _pgno != uint32(1) {
		goto _8
	}

	crt.Xmemcpy(tls, _pPager+136, _pData+24, uint64(16))
_8:
	if _pgno <= (*(*uint32)(unsafe.Pointer(_pPager + 36))) {
		goto _9
	}

	*(*uint32)(unsafe.Pointer(_pPager + 36)) = _pgno
_9:
	(*(*int32)(unsafe.Pointer((_pPager + 240) + 8)))++
	_578sqlite3BackupUpdate(tls, *(*uintptr)(unsafe.Pointer(_pPager + 112)), _pgno, *(*uintptr)(unsafe.Pointer(_pList + 8)))
	goto _6

_5:
_6:
	_pList = *(*uintptr)(unsafe.Pointer(_pList + 32))
	goto _3

_4:
	return _rc
}

// _351pager_truncate is defined at sqlite3.c:50137:12
func _351pager_truncate(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _nPage uint32) (r int32) {
	esc := crt.MustMalloc(8)
	var (
		_rc          int32
		_currentSize = esc // *Ti64 = Tsqlite_int64 = int64
		_newSize     int64
		_szPage      int32
		_pTmp        uintptr // *int8
	)
	defer crt.Free(esc)
	_rc = int32(0)

	if (*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pPager + 72))))) == 0 || int32(*(*uint8)(unsafe.Pointer(_pPager + 20))) < int32(4) && int32(*(*uint8)(unsafe.Pointer(_pPager + 20))) != int32(0) {
		goto _1
	}

	_szPage = *(*int32)(unsafe.Pointer(_pPager + 188))

	_rc = _352sqlite3OsFileSize(tls, *(*uintptr)(unsafe.Pointer(_pPager + 72)), _currentSize)
	_newSize = int64(_szPage) * int64(_nPage)
	if _rc != int32(0) || (*(*int64)(unsafe.Pointer(_currentSize))) == _newSize {
		goto _2
	}

	if (*(*int64)(unsafe.Pointer(_currentSize))) <= _newSize {
		goto _3
	}

	_rc = _353sqlite3OsTruncate(tls, *(*uintptr)(unsafe.Pointer(_pPager + 72)), _newSize)
	goto _4

_3:
	if ((*(*int64)(unsafe.Pointer(_currentSize))) + int64(_szPage)) > _newSize {
		goto _5
	}

	_pTmp = *(*uintptr)(unsafe.Pointer(_pPager + 272))
	crt.Xmemset(tls, _pTmp, int32(0), uint64(_szPage))
	_rc = _163sqlite3OsWrite(tls, *(*uintptr)(unsafe.Pointer(_pPager + 72)), _pTmp, _szPage, _newSize-int64(_szPage))
_5:
_4:
	if _rc != int32(0) {
		goto _6
	}

	*(*uint32)(unsafe.Pointer(_pPager + 36)) = _nPage
_6:
_2:
_1:
	return _rc
}

// _352sqlite3OsFileSize is defined at sqlite3.c:20795:20
func _352sqlite3OsFileSize(tls crt.TLS, _id uintptr /* *Tsqlite3_file = Ssqlite3_file */, _pSize uintptr /* *Ti64 = Tsqlite_int64 = int64 */) (r int32) {
	return fn58(*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_id))) + 48)))(tls, _id, _pSize)
}

// _353sqlite3OsTruncate is defined at sqlite3.c:20788:20
func _353sqlite3OsTruncate(tls crt.TLS, _id uintptr /* *Tsqlite3_file = Ssqlite3_file */, _size int64) (r int32) {
	return fn59(*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_id))) + 32)))(tls, _id, _size)
}

// _354sqlite3OsSync is defined at sqlite3.c:20791:20
func _354sqlite3OsSync(tls crt.TLS, _id uintptr /* *Tsqlite3_file = Ssqlite3_file */, _flags int32) (r int32) {
	if _flags != 0 {
		return fn50(*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_id))) + 40)))(tls, _id, _flags)
	}

	return int32(0)
}

// _355sqlite3PagerCommitPhaseTwo is defined at sqlite3.c:54036:20
func _355sqlite3PagerCommitPhaseTwo(tls crt.TLS, _pPager uintptr /* *TPager = SPager */) (r int32) {
	var _rc int32

	_rc = int32(0)
	if *(*int32)(unsafe.Pointer(_pPager + 44)) == 0 {
		goto _1
	}

	return *(*int32)(unsafe.Pointer(_pPager + 44))

_1:
	if int32(*(*uint8)(unsafe.Pointer(_pPager + 20))) != int32(2) || (*(*uint8)(unsafe.Pointer(_pPager + 8))) == 0 || int32(*(*uint8)(unsafe.Pointer(_pPager + 9))) != int32(1) {
		goto _2
	}

	*(*uint8)(unsafe.Pointer(_pPager + 20)) = uint8(1)
	return int32(0)

_2:
	(*(*uint32)(unsafe.Pointer(_pPager + 132)))++
	_rc = _590pager_end_transaction(tls, _pPager, int32(*(*uint8)(unsafe.Pointer(_pPager + 23))), int32(1))
	return _591pager_error(tls, _pPager, _rc)
}

// _356btreeClearHasContent is defined at sqlite3.c:60266:13
func _356btreeClearHasContent(tls crt.TLS, _pBt uintptr /* *TBtShared = SBtShared */) {
	_409sqlite3BitvecDestroy(tls, *(*uintptr)(unsafe.Pointer(_pBt + 88)))
	*(*uintptr)(unsafe.Pointer(_pBt + 88)) = null
}

// _357btreeEndTransaction is defined at sqlite3.c:63552:13
func _357btreeEndTransaction(tls crt.TLS, _p uintptr /* *TBtree = SBtree */) {
	var (
		_pBt uintptr // *TBtShared = SBtShared
		_db  uintptr // *Tsqlite3 = Ssqlite3
	)
	_pBt = *(*uintptr)(unsafe.Pointer(_p + 8))
	_db = *(*uintptr)(unsafe.Pointer(_p))

	*(*uint8)(unsafe.Pointer(_pBt + 35)) = uint8(0)
	if int32(*(*uint8)(unsafe.Pointer(_p + 16))) <= int32(0) || (*(*int32)(unsafe.Pointer(_db + 188))) <= int32(1) {
		goto _1
	}

	_592downgradeAllSharedCacheTableLocks(tls, _p)
	*(*uint8)(unsafe.Pointer(_p + 16)) = uint8(1)
	goto _2

_1:
	if int32(*(*uint8)(unsafe.Pointer(_p + 16))) == int32(0) {
		goto _3
	}

	_593clearAllSharedCacheTableLocks(tls, _p)
	(*(*int32)(unsafe.Pointer(_pBt + 56)))--
	if int32(0) != (*(*int32)(unsafe.Pointer(_pBt + 56))) {
		goto _4
	}

	*(*uint8)(unsafe.Pointer(_pBt + 36)) = uint8(0)
_4:
_3:
	*(*uint8)(unsafe.Pointer(_p + 16)) = uint8(0)
	_326unlockBtreeIfUnused(tls, _pBt)
_2:
}

// _358autoVacuumCommit is defined at sqlite3.c:63446:12
func _358autoVacuumCommit(tls crt.TLS, _pBt uintptr /* *TBtShared = SBtShared */) (r int32) {
	var (
		_rc     int32
		_pPager uintptr // *TPager = SPager
		_nFin   uint32
		_nFree  uint32
		_iFree  uint32
		_nOrig  uint32
	)
	_rc = int32(0)
	_pPager = *(*uintptr)(unsafe.Pointer(_pBt))

	_594invalidateAllOverflowCache(tls, _pBt)

	if (*(*uint8)(unsafe.Pointer(_pBt + 34))) != 0 {
		goto _1
	}

	_nOrig = _332btreePagecount(tls, _pBt)
	if _595ptrmapPageno(tls, _pBt, _nOrig) != _nOrig && _nOrig != (uint32(_149sqlite3PendingByte)/(*(*uint32)(unsafe.Pointer(_pBt + 48))))+uint32(1) {
		goto _2
	}

	return _556sqlite3CorruptError(tls, int32(63466))

_2:
	_nFree = uint32(_328sqlite3Get4byte(tls, (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pBt + 24))) + 80)))+36))
	_nFin = _596finalDbSize(tls, _pBt, _nOrig, _nFree)
	if _nFin <= _nOrig {
		goto _3
	}

	return _556sqlite3CorruptError(tls, int32(63471))

_3:
	if _nFin >= _nOrig {
		goto _4
	}

	_rc = _360saveAllCursors(tls, _pBt, uint32(0), null)
_4:
	_iFree = _nOrig
_5:
	if _iFree <= _nFin || _rc != int32(0) {
		goto _7
	}

	_rc = _597incrVacuumStep(tls, _pBt, _nFin, _iFree, int32(1))
	_iFree--
	goto _5

_7:
	if _rc != int32(101) && _rc != int32(0) || _nFree <= uint32(0) {
		goto _8
	}

	_rc = _161sqlite3PagerWrite(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pBt + 24))) + 112)))
	_329sqlite3Put4byte(tls, (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pBt + 24))) + 80)))+32, uint32(0))
	_329sqlite3Put4byte(tls, (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pBt + 24))) + 80)))+36, uint32(0))
	_329sqlite3Put4byte(tls, (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pBt + 24))) + 80)))+28, _nFin)
	*(*uint8)(unsafe.Pointer(_pBt + 35)) = uint8(1)
	*(*uint32)(unsafe.Pointer(_pBt + 60)) = uint32(_nFin)
_8:
	if _rc == int32(0) {
		goto _9
	}

	_362sqlite3PagerRollback(tls, _pPager)
_9:
_1:
	return _rc
}

// _359unlockBtreeMutex is defined at sqlite3.c:59403:29
func _359unlockBtreeMutex(tls crt.TLS, _p uintptr /* *TBtree = SBtree */) {
	var _pBt uintptr // *TBtShared = SBtShared

	_pBt = *(*uintptr)(unsafe.Pointer(_p + 8))

	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_pBt + 80)))
	*(*uint8)(unsafe.Pointer(_p + 18)) = uint8(0)
}

// _360saveAllCursors is defined at sqlite3.c:60381:12
func _360saveAllCursors(tls crt.TLS, _pBt uintptr /* *TBtShared = SBtShared */, _iRoot uint32, _pExcept uintptr /* *TBtCursor = SBtCursor */) (r int32) {
	var _p uintptr // *TBtCursor = SBtCursor

	_p = *(*uintptr)(unsafe.Pointer(_pBt + 16))
_1:
	if _p == 0 {
		goto _3
	}

	if _p == _pExcept || uint32(0) != _iRoot && (*(*uint32)(unsafe.Pointer(_p + 80))) != _iRoot {
		goto _4
	}

	goto _3

_4:
	_p = *(*uintptr)(unsafe.Pointer(_p + 24))
	goto _1

_3:
	if _p == 0 {
		goto _5
	}

	return _598saveCursorsOnList(tls, _p, _iRoot, _pExcept)

_5:
	if _pExcept == 0 {
		goto _6
	}

	{
		p := &(*(*uint8)(unsafe.Pointer(_pExcept + 1)))
		*p = uint8(int32(*p) & int32(-33))
	}
_6:
	return int32(0)
}

// _361sqlite3BtreeTripAllCursors is defined at sqlite3.c:63683:20
func _361sqlite3BtreeTripAllCursors(tls crt.TLS, _pBtree uintptr /* *TBtree = SBtree */, _errCode int32, _writeOnly int32) (r int32) {
	var (
		_p  uintptr // *TBtCursor = SBtCursor
		_rc int32
	)
	_rc = int32(0)

	if _pBtree == 0 {
		goto _1
	}

	_139sqlite3BtreeEnter(tls, _pBtree)
	_p = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pBtree + 8))) + 16))
_2:
	if _p == 0 {
		goto _4
	}

	if _writeOnly == 0 || (int32(*(*uint8)(unsafe.Pointer(_p + 1)))&int32(0x1)) != int32(0) {
		goto _5
	}

	if int32(*(*uint8)(unsafe.Pointer(_p))) != int32(1) && int32(*(*uint8)(unsafe.Pointer(_p))) != int32(2) {
		goto _7
	}

	_rc = _599saveCursorPosition(tls, _p)
	if _rc == int32(0) {
		goto _8
	}

	_361sqlite3BtreeTripAllCursors(tls, _pBtree, _rc, int32(0))
	goto _4

_8:
_7:
	goto _6

_5:
	_600sqlite3BtreeClearCursor(tls, _p)
	*(*uint8)(unsafe.Pointer(_p)) = uint8(4)
	*(*int32)(unsafe.Pointer(_p + 84)) = _errCode
_6:
	_601btreeReleaseAllCursorPages(tls, _p)
	_p = *(*uintptr)(unsafe.Pointer(_p + 24))
	goto _2

_4:
	_169sqlite3BtreeLeave(tls, _pBtree)
_1:
	return _rc
}

// _362sqlite3PagerRollback is defined at sqlite3.c:54102:20
func _362sqlite3PagerRollback(tls crt.TLS, _pPager uintptr /* *TPager = SPager */) (r int32) {
	var (
		_rc     int32
		_rc2    int32
		_eState int32
	)
	_rc = int32(0)

	if int32(*(*uint8)(unsafe.Pointer(_pPager + 20))) != int32(6) {
		goto _1
	}

	return *(*int32)(unsafe.Pointer(_pPager + 44))

_1:
	if int32(*(*uint8)(unsafe.Pointer(_pPager + 20))) > int32(1) {
		goto _2
	}

	return int32(0)

_2:
	if (*(*uintptr)(unsafe.Pointer(_pPager + 288))) == 0 {
		goto _3
	}

	_rc = _602sqlite3PagerSavepoint(tls, _pPager, int32(2), int32(-1))
	_rc2 = _590pager_end_transaction(tls, _pPager, int32(*(*uint8)(unsafe.Pointer(_pPager + 23))), int32(0))
	if _rc != int32(0) {
		goto _5
	}

	_rc = _rc2
_5:
	goto _4

_3:
	if (*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pPager + 80))))) != 0 && int32(*(*uint8)(unsafe.Pointer(_pPager + 20))) != int32(2) {
		goto _6
	}

	_eState = int32(*(*uint8)(unsafe.Pointer(_pPager + 20)))
	_rc = _590pager_end_transaction(tls, _pPager, int32(0), int32(0))
	if (*(*uint8)(unsafe.Pointer(_pPager + 19))) != 0 || _eState <= int32(2) {
		goto _8
	}

	*(*int32)(unsafe.Pointer(_pPager + 44)) = int32(4)
	*(*uint8)(unsafe.Pointer(_pPager + 20)) = uint8(6)
	_603setGetterMethod(tls, _pPager)
	return _rc

_8:
	goto _7

_6:
	_rc = _604pager_playback(tls, _pPager, int32(0))
_7:
_4:
	return _591pager_error(tls, _pPager, _rc)
}

// _363btreeGetPage is defined at sqlite3.c:61675:12
func _363btreeGetPage(tls crt.TLS, _pBt uintptr /* *TBtShared = SBtShared */, _pgno uint32, _ppPage uintptr /* **TMemPage = SMemPage */, _flags int32) (r int32) {
	esc := crt.MustMalloc(8)
	var (
		_rc      int32
		_pDbPage = esc // **TDbPage = SPgHdr
	)
	defer crt.Free(esc)

	_rc = _150sqlite3PagerGet(tls, *(*uintptr)(unsafe.Pointer(_pBt)), _pgno, _pDbPage, _flags)
	if _rc == 0 {
		goto _1
	}

	return _rc

_1:
	*(*uintptr)(unsafe.Pointer(_ppPage)) = _605btreePageFromDbPage(tls, *(*uintptr)(unsafe.Pointer(_pDbPage)), _pgno, _pBt)
	return int32(0)
}

// _364releasePageOne is defined at sqlite3.c:61804:13
func _364releasePageOne(tls crt.TLS, _pPage uintptr /* *TMemPage = SMemPage */) {
	_606sqlite3PagerUnrefPageOne(tls, *(*uintptr)(unsafe.Pointer(_pPage + 112)))
}

type SHashElem struct {
	Xnext uintptr // *SHashElem
	Xprev uintptr // *SHashElem
	Xdata uintptr // uintptr
	XpKey uintptr // *int8
}

type SFuncDef struct {
	XnArg      int8
	XfuncFlags uint16
	XpUserData uintptr // uintptr
	XpNext     uintptr // *SFuncDef
	XxSFunc    uintptr // *func(crt.TLS, uintptr, int32, uintptr)
	XxFinalize uintptr // *func(crt.TLS, uintptr)
	XzName     uintptr // *int8
	Xu         struct{ X int64 }
}

type SModule struct {
	XpModule  uintptr // *Ssqlite3_module
	XzName    uintptr // *int8
	XpAux     uintptr // uintptr
	XxDestroy uintptr // *func(crt.TLS, uintptr)
	XpEpoTab  uintptr // *STable
}

// _365sqlite3RollbackAll is defined at sqlite3.c:143226:21
func _365sqlite3RollbackAll(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _tripCode int32) {
	var (
		_i            int32
		_inTrans      int32
		_schemaChange int32
		_p            uintptr // *TBtree = SBtree
	)
	_inTrans = int32(0)

	_523sqlite3BeginBenignMalloc(tls)
	_219sqlite3BtreeEnterAll(tls, _db)
	_schemaChange = bool2int((((*(*uint32)(unsafe.Pointer(_db + 44))) & uint32(0x1)) != uint32(0)) && (int32(*(*uint8)(unsafe.Pointer((_db + 176) + 5))) == int32(0)))
	_i = int32(0)
_1:
	if _i >= (*(*int32)(unsafe.Pointer(_db + 40))) {
		goto _3
	}

	_p = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_i)) + 8))
	if _p == 0 {
		goto _4
	}

	if _607sqlite3BtreeIsInTrans(tls, _p) == 0 {
		goto _5
	}

	_inTrans = int32(1)
_5:
	_171sqlite3BtreeRollback(tls, _p, _tripCode, bool2int(_schemaChange == 0))
_4:
	_i++
	goto _1

_3:
	_247sqlite3VtabRollback(tls, _db)
	_524sqlite3EndBenignMalloc(tls)
	if ((*(*uint32)(unsafe.Pointer(_db + 44)))&uint32(0x1)) == uint32(0) || int32(*(*uint8)(unsafe.Pointer((_db + 176) + 5))) != int32(0) {
		goto _6
	}

	_132sqlite3ExpirePreparedStatements(tls, _db)
	_157sqlite3ResetAllSchemasOfConnection(tls, _db)
_6:
	_225sqlite3BtreeLeaveAll(tls, _db)
	*(*int64)(unsafe.Pointer(_db + 656)) = int64(0)
	*(*int64)(unsafe.Pointer(_db + 664)) = int64(0)
	{
		p := &(*(*uint32)(unsafe.Pointer(_db + 48)))
		*p = uint32(uint32(*p) & uint32(4294443007))
	}
	if (*(*uintptr)(unsafe.Pointer(_db + 272))) == 0 || _inTrans == 0 && (*(*uint8)(unsafe.Pointer(_db + 95))) != 0 {
		goto _7
	}

	fn16(*(*uintptr)(unsafe.Pointer(_db + 272)))(tls, *(*uintptr)(unsafe.Pointer(_db + 264)))
_7:
}

// _366sqlite3CloseSavepoints is defined at sqlite3.c:142955:21
func _366sqlite3CloseSavepoints(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */) {
	var _pTmp uintptr // *TSavepoint = SSavepoint

_1:
	if (*(*uintptr)(unsafe.Pointer(_db + 632))) == 0 {
		goto _2
	}

	_pTmp = *(*uintptr)(unsafe.Pointer(_db + 632))
	*(*uintptr)(unsafe.Pointer(_db + 632)) = *(*uintptr)(unsafe.Pointer(_pTmp + 24))
	_181sqlite3DbFree(tls, _db, _pTmp)
	goto _1

_2:
	*(*int32)(unsafe.Pointer(_db + 644)) = int32(0)
	*(*int32)(unsafe.Pointer(_db + 648)) = int32(0)
	*(*uint8)(unsafe.Pointer(_db + 103)) = uint8(0)
}

// _367sqlite3BtreeClose is defined at sqlite3.c:62276:20
func _367sqlite3BtreeClose(tls crt.TLS, _p uintptr /* *TBtree = SBtree */) (r int32) {
	var (
		_pBt  uintptr // *TBtShared = SBtShared
		_pCur uintptr // *TBtCursor = SBtCursor
		_pTmp uintptr // *TBtCursor = SBtCursor
	)
	_pBt = *(*uintptr)(unsafe.Pointer(_p + 8))

	_139sqlite3BtreeEnter(tls, _p)
	_pCur = *(*uintptr)(unsafe.Pointer(_pBt + 16))
_1:
	if _pCur == 0 {
		goto _2
	}

	_pTmp = _pCur
	_pCur = *(*uintptr)(unsafe.Pointer(_pCur + 24))
	if (*(*uintptr)(unsafe.Pointer(_pTmp + 8))) != _p {
		goto _3
	}

	_608sqlite3BtreeCloseCursor(tls, _pTmp)
_3:
	goto _1

_2:
	_171sqlite3BtreeRollback(tls, _p, int32(0), int32(0))
	_169sqlite3BtreeLeave(tls, _p)

	if (*(*uint8)(unsafe.Pointer(_p + 17))) != 0 && _609removeFromSharingList(tls, _pBt) == 0 {
		goto _4
	}

	_518sqlite3PagerClose(tls, *(*uintptr)(unsafe.Pointer(_pBt)), *(*uintptr)(unsafe.Pointer(_p)))
	if (*(*uintptr)(unsafe.Pointer(_pBt + 72))) == 0 || (*(*uintptr)(unsafe.Pointer(_pBt + 64))) == 0 {
		goto _5
	}

	fn16(*(*uintptr)(unsafe.Pointer(_pBt + 72)))(tls, *(*uintptr)(unsafe.Pointer(_pBt + 64)))
_5:
	_181sqlite3DbFree(tls, null, *(*uintptr)(unsafe.Pointer(_pBt + 64)))
	_411freeTempSpace(tls, _pBt)
	Xsqlite3_free(tls, _pBt)
_4:
	if (*(*uintptr)(unsafe.Pointer(_p + 40))) == 0 {
		goto _6
	}

	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 40))) + 32)) = *(*uintptr)(unsafe.Pointer(_p + 32))
_6:
	if (*(*uintptr)(unsafe.Pointer(_p + 32))) == 0 {
		goto _7
	}

	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 32))) + 40)) = *(*uintptr)(unsafe.Pointer(_p + 40))
_7:
	Xsqlite3_free(tls, _p)
	return int32(0)
}

// _368functionDestroy is defined at sqlite3.c:142972:13
func _368functionDestroy(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _p uintptr /* *TFuncDef = SFuncDef */) {
	var _pDestructor uintptr // *TFuncDestructor = SFuncDestructor

	_pDestructor = *(*uintptr)(unsafe.Pointer(_p + 48))
	if _pDestructor == 0 {
		goto _1
	}

	(*(*int32)(unsafe.Pointer(_pDestructor)))--
	if (*(*int32)(unsafe.Pointer(_pDestructor))) != int32(0) {
		goto _2
	}

	fn16(*(*uintptr)(unsafe.Pointer(_pDestructor + 8)))(tls, *(*uintptr)(unsafe.Pointer(_pDestructor + 16)))
	_181sqlite3DbFree(tls, _db, _pDestructor)
_2:
_1:
}

// _369sqlite3HashClear is defined at sqlite3.c:29748:21
func _369sqlite3HashClear(tls crt.TLS, _pH uintptr /* *THash = SHash */) {
	var (
		_elem      uintptr // *THashElem = SHashElem
		_next_elem uintptr // *THashElem = SHashElem
	)

	_elem = *(*uintptr)(unsafe.Pointer(_pH + 8))
	*(*uintptr)(unsafe.Pointer(_pH + 8)) = null
	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_pH + 16)))
	*(*uintptr)(unsafe.Pointer(_pH + 16)) = null
	*(*uint32)(unsafe.Pointer(_pH)) = uint32(0)
_1:
	if _elem == 0 {
		goto _2
	}

	_next_elem = *(*uintptr)(unsafe.Pointer(_elem))
	Xsqlite3_free(tls, _elem)
	_elem = _next_elem
	goto _1

_2:
	*(*uint32)(unsafe.Pointer(_pH + 4)) = uint32(0)
}

// _370sqlite3VtabEponymousTableClear is defined at sqlite3.c:127487:21
func _370sqlite3VtabEponymousTableClear(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pMod uintptr /* *TModule = SModule */) {
	var _pTab uintptr // *TTable = STable

	_pTab = *(*uintptr)(unsafe.Pointer(_pMod + 32))
	if _pTab == 0 {
		goto _1
	}

	{
		p := &(*(*uint32)(unsafe.Pointer(_pTab + 64)))
		*p = uint32(uint32(*p) | uint32(0x2))
	}
	_430sqlite3DeleteTable(tls, _db, _pTab)
	*(*uintptr)(unsafe.Pointer(_pMod + 32)) = null
_1:
}

// _371sqlite3ValueFree is defined at sqlite3.c:72151:21
func _371sqlite3ValueFree(tls crt.TLS, _v uintptr /* *Tsqlite3_value = Ssqlite3_value */) {
	if _v != 0 {
		goto _1
	}

	return

_1:
	_397sqlite3VdbeMemRelease(tls, _v)
	_376sqlite3DbFreeNN(tls, *(*uintptr)(unsafe.Pointer(_v + 40)), _v)
}

// _372sqlite3CloseExtensions is defined at sqlite3.c:113452:21
func _372sqlite3CloseExtensions(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */) {
	var _i int32

	_i = int32(0)
_1:
	if _i >= (*(*int32)(unsafe.Pointer(_db + 204))) {
		goto _3
	}

	_419sqlite3OsDlClose(tls, *(*uintptr)(unsafe.Pointer(_db)), *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 208))) + 8*uintptr(_i))))
	_i++
	goto _1

_3:
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_db + 208)))
}

// Xsqlite3_extended_errcode is defined at sqlite3.c:144303:16
func Xsqlite3_extended_errcode(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */) (r int32) {
	if _db == 0 || _122sqlite3SafetyCheckSickOrOk(tls, _db) != 0 {
		goto _1
	}

	return _29sqlite3MisuseError(tls, int32(144305))

_1:
	if _db != 0 && (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _2
	}

	return int32(7)

_2:
	return *(*int32)(unsafe.Pointer(_db + 80))
}

// Xsqlite3_bind_int64 is defined at sqlite3.c:78294:16
func Xsqlite3_bind_int64(tls crt.TLS, _pStmt uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */, _i int32, _iValue int64) (r int32) {
	var (
		_rc int32
		_p  uintptr // *TVdbe = SVdbe
	)
	_p = _pStmt
	_rc = _200vdbeUnbind(tls, _p, _i)
	if _rc != int32(0) {
		goto _1
	}

	_527sqlite3VdbeMemSetInt64(tls, (*(*uintptr)(unsafe.Pointer(_p + 160)))+56*uintptr(_i-int32(1)), _iValue)
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p))) + 24)))
_1:
	return _rc
}

// Xsqlite3_bind_double is defined at sqlite3.c:78281:16
func Xsqlite3_bind_double(tls crt.TLS, _pStmt uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */, _i int32, _rValue float64) (r int32) {
	var (
		_rc int32
		_p  uintptr // *TVdbe = SVdbe
	)
	_p = _pStmt
	_rc = _200vdbeUnbind(tls, _p, _i)
	if _rc != int32(0) {
		goto _1
	}

	_610sqlite3VdbeMemSetDouble(tls, (*(*uintptr)(unsafe.Pointer(_p + 160)))+56*uintptr(_i-int32(1)), _rValue)
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p))) + 24)))
_1:
	return _rc
}

// Xsqlite3_bind_blob is defined at sqlite3.c:78255:16
func Xsqlite3_bind_blob(tls crt.TLS, _pStmt uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */, _i int32, _zData uintptr /* *void */, _nData int32, _xDel uintptr /* *func(crt.TLS, uintptr) */) (r int32) {
	return _199bindText(tls, _pStmt, _i, _zData, _nData, _xDel, uint8(0))
}

// _373sqlite3DbMallocRawNN is defined at sqlite3.c:25337:21
func _373sqlite3DbMallocRawNN(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _n uint64) (r uintptr /* *void */) {
	var _pBuf uintptr // *TLookasideSlot = SLookasideSlot

	if (*(*uint32)(unsafe.Pointer(_db + 352))) != uint32(0) {
		goto _1
	}

	if _n <= uint64(*(*uint16)(unsafe.Pointer((_db + 352) + 4))) {
		goto _3
	}

	(*(*uint32)(unsafe.Pointer(((_db + 352) + 12) + 4)))++
	goto _4

_3:
	if set4(&_pBuf, *(*uintptr)(unsafe.Pointer((_db + 352) + 32))) == 0 {
		goto _5
	}

	*(*uintptr)(unsafe.Pointer((_db + 352) + 32)) = *(*uintptr)(unsafe.Pointer(_pBuf))
	(*(*uint32)(unsafe.Pointer((_db + 352) + 12)))++
	return _pBuf

	goto _6

_5:
	if set4(&_pBuf, *(*uintptr)(unsafe.Pointer((_db + 352) + 24))) == 0 {
		goto _7
	}

	*(*uintptr)(unsafe.Pointer((_db + 352) + 24)) = *(*uintptr)(unsafe.Pointer(_pBuf))
	(*(*uint32)(unsafe.Pointer((_db + 352) + 12)))++
	return _pBuf

	goto _8

_7:
	(*(*uint32)(unsafe.Pointer(((_db + 352) + 12) + 8)))++
_8:
_6:
_4:
	goto _2

_1:
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _9
	}

	return null

_9:
_2:
	return _611dbMallocRawFinish(tls, _db, _n)
}

// _374columnName is defined at sqlite3.c:78031:19
func _374columnName(tls crt.TLS, _pStmt uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */, _N int32, _xFunc uintptr /* *func(crt.TLS, uintptr) uintptr */, _useType int32) (r uintptr /* *void */) {
	var (
		_ret uintptr // *void
		_p   uintptr // *TVdbe = SVdbe
		_n   int32
		_db  uintptr // *Tsqlite3 = Ssqlite3
	)
	_ret = null
	_p = _pStmt
	_db = *(*uintptr)(unsafe.Pointer(_p))

	_n = Xsqlite3_column_count(tls, _pStmt)
	if _N >= _n || _N < int32(0) {
		goto _1
	}

	_N = int32(_N + (_useType * _n))
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))

	_ret = fn13(_xFunc)(tls, (*(*uintptr)(unsafe.Pointer(_p + 128)))+56*uintptr(_N))
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _2
	}

	_612sqlite3OomClear(tls, _db)
	_ret = null
_2:
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
_1:
	return _ret
}

// _375sqlite3VdbeDelete is defined at sqlite3.c:75226:21
func _375sqlite3VdbeDelete(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */) {
	var _db uintptr // *Tsqlite3 = Ssqlite3

	if _p != 0 {
		goto _1
	}

	return

_1:
	_db = *(*uintptr)(unsafe.Pointer(_p))

	_431sqlite3VdbeClearObject(tls, _db, _p)
	if (*(*uintptr)(unsafe.Pointer(_p + 8))) == 0 {
		goto _2
	}

	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 8))) + 16)) = *(*uintptr)(unsafe.Pointer(_p + 16))
	goto _3

_2:
	*(*uintptr)(unsafe.Pointer(_db + 8)) = *(*uintptr)(unsafe.Pointer(_p + 16))
_3:
	if (*(*uintptr)(unsafe.Pointer(_p + 16))) == 0 {
		goto _4
	}

	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 16))) + 8)) = *(*uintptr)(unsafe.Pointer(_p + 8))
_4:
	*(*uint32)(unsafe.Pointer(_p + 36)) = uint32(0x5606c3c8)
	*(*uintptr)(unsafe.Pointer(_p)) = null
	_376sqlite3DbFreeNN(tls, _db, _p)
}

// _376sqlite3DbFreeNN is defined at sqlite3.c:25171:21
func _376sqlite3DbFreeNN(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _p uintptr /* *void */) {
	var _pBuf uintptr // *TLookasideSlot = SLookasideSlot

	if _db == 0 {
		goto _1
	}

	if (*(*uintptr)(unsafe.Pointer(_db + 672))) == 0 {
		goto _2
	}

	_613measureAllocationSize(tls, _db, _p)
	return

_2:
	if _614isLookaside(tls, _db, _p) == 0 {
		goto _3
	}

	_pBuf = _p
	*(*uintptr)(unsafe.Pointer(_pBuf)) = *(*uintptr)(unsafe.Pointer((_db + 352) + 32))
	*(*uintptr)(unsafe.Pointer((_db + 352) + 32)) = _pBuf
	return

_3:
_1:
	Xsqlite3_free(tls, _p)
}

// _377apiOomError is defined at sqlite3.c:25503:28
func _377apiOomError(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */) (r int32) {
	_612sqlite3OomClear(tls, _db)
	_136sqlite3Error(tls, _db, int32(7))
	return int32(7)
}

// _378tableColumnList is defined at shell.c:3766:13
func _378tableColumnList(tls crt.TLS, _p uintptr /* *TShellState = SShellState */, _zTab uintptr /* *int8 */) (r uintptr /* **int8 */) {
	esc := crt.MustMalloc(8)
	var (
		_azCol         uintptr // **int8
		_pStmt         = esc   // **Tsqlite3_stmt = Ssqlite3_stmt
		_zSql          uintptr // *int8
		_nCol          int32
		_nAlloc        int32
		_nPK           int32
		_isIPK         int32
		_preserveRowid int32
		_rc            int32
		_i             int32
		_j             int32
	)
	defer crt.Free(esc)
	_azCol = 0
	_nCol = int32(0)
	_nAlloc = int32(0)
	_nPK = int32(0)
	_isIPK = int32(0)
	_preserveRowid = bool2int(((*(*uint32)(unsafe.Pointer(_p + 76))) & uint32(0x8)) != uint32(0))
	_zSql = Xsqlite3_mprintf(tls, ts+18028 /* "PRAGMA table_info=%Q" */, _zTab)
	_rc = Xsqlite3_prepare_v2(tls, *(*uintptr)(unsafe.Pointer(_p)), _zSql, int32(-1), _pStmt, null)
	Xsqlite3_free(tls, _zSql)
	if _rc == 0 {
		goto _1
	}

	return null

_1:
_2:
	if Xsqlite3_step(tls, *(*uintptr)(unsafe.Pointer(_pStmt))) != int32(100) {
		goto _3
	}

	if _nCol < (_nAlloc - int32(2)) {
		goto _4
	}

	_nAlloc = ((_nAlloc * int32(2)) + _nCol) + int32(10)
	_azCol = Xsqlite3_realloc(tls, _azCol, int32(uint64(_nAlloc)*uint64(8)))
	if _azCol != 0 {
		goto _5
	}

	crt.Xfprintf(tls, Xstderr, ts+3665 /* "Error: out of memory\n" */)
	crt.Xexit(tls, int32(1))
_5:
_4:
	*(*uintptr)(unsafe.Pointer(_azCol + 8*uintptr(preinc2(&_nCol)))) = Xsqlite3_mprintf(tls, ts+429 /* "%s" */, Xsqlite3_column_text(tls, *(*uintptr)(unsafe.Pointer(_pStmt)), int32(1)))
	if Xsqlite3_column_int(tls, *(*uintptr)(unsafe.Pointer(_pStmt)), int32(5)) == 0 {
		goto _6
	}

	_nPK++
	if _nPK != int32(1) || Xsqlite3_stricmp(tls, Xsqlite3_column_text(tls, *(*uintptr)(unsafe.Pointer(_pStmt)), int32(2)), ts+10145 /* "INTEGER" */) != int32(0) {
		goto _7
	}

	_isIPK = int32(1)
	goto _8

_7:
	_isIPK = int32(0)
_8:
_6:
	goto _2

_3:
	Xsqlite3_finalize(tls, *(*uintptr)(unsafe.Pointer(_pStmt)))
	if _azCol != 0 {
		goto _9
	}

	return null

_9:
	*(*uintptr)(unsafe.Pointer(_azCol)) = null
	*(*uintptr)(unsafe.Pointer(_azCol + 8*uintptr(_nCol+int32(1)))) = null
	if _preserveRowid == 0 || _isIPK == 0 {
		goto _10
	}

	_zSql = Xsqlite3_mprintf(tls, ts+18049 /* "SELECT 1 FROM pragma_index_list(..." */, _zTab)
	_rc = Xsqlite3_prepare_v2(tls, *(*uintptr)(unsafe.Pointer(_p)), _zSql, int32(-1), _pStmt, null)
	Xsqlite3_free(tls, _zSql)
	if _rc == 0 {
		goto _11
	}

	_379freeColumnList(tls, _azCol)
	return null

_11:
	_rc = Xsqlite3_step(tls, *(*uintptr)(unsafe.Pointer(_pStmt)))
	Xsqlite3_finalize(tls, *(*uintptr)(unsafe.Pointer(_pStmt)))
	_preserveRowid = bool2int(_rc == int32(100))
_10:
	if _preserveRowid == 0 {
		goto _12
	}

	_j = int32(0)
_13:
	if _j >= int32(3) {
		goto _15
	}

	_i = int32(1)
_16:
	if _i > _nCol {
		goto _18
	}

	if Xsqlite3_stricmp(tls, *(*uintptr)(unsafe.Pointer(_615azRowid + 8*uintptr(_j))), *(*uintptr)(unsafe.Pointer(_azCol + 8*uintptr(_i)))) != int32(0) {
		goto _19
	}

	goto _18

_19:
	_i++
	goto _16

_18:
	if _i <= _nCol {
		goto _20
	}

	_rc = Xsqlite3_table_column_metadata(tls, *(*uintptr)(unsafe.Pointer(_p)), null, _zTab, *(*uintptr)(unsafe.Pointer(_615azRowid + 8*uintptr(_j))), null, null, null, null, null)
	if _rc != int32(0) {
		goto _21
	}

	*(*uintptr)(unsafe.Pointer(_azCol)) = *(*uintptr)(unsafe.Pointer(_615azRowid + 8*uintptr(_j)))
_21:
	goto _15

_20:
	_j++
	goto _13

_15:
_12:
	return _azCol
}

// _379freeColumnList is defined at shell.c:3744:13
func _379freeColumnList(tls crt.TLS, _azCol uintptr /* **int8 */) {
	var _i int32

	_i = int32(1)
_1:
	if (*(*uintptr)(unsafe.Pointer(_azCol + 8*uintptr(_i)))) == 0 {
		goto _3
	}

	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_azCol + 8*uintptr(_i))))
	_i++
	goto _1

_3:
	Xsqlite3_free(tls, _azCol)
}

// _380toggleSelectOrder is defined at shell.c:3860:13
func _380toggleSelectOrder(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */) {
	esc := crt.MustMalloc(116)
	var (
		_pStmt    = esc // **Tsqlite3_stmt = Ssqlite3_stmt
		_iSetting int32
		_zStmt    = esc + 16 // *[100]int8
	)
	defer crt.Free(esc)
	*(*uintptr)(unsafe.Pointer(_pStmt)) = 0
	_iSetting = int32(0)
	Xsqlite3_prepare_v2(tls, _db, ts+18103 /* "PRAGMA reverse_unordered_selects" */, int32(-1), _pStmt, null)
	if Xsqlite3_step(tls, *(*uintptr)(unsafe.Pointer(_pStmt))) != int32(100) {
		goto _1
	}

	_iSetting = Xsqlite3_column_int(tls, *(*uintptr)(unsafe.Pointer(_pStmt)), int32(0))
_1:
	Xsqlite3_finalize(tls, *(*uintptr)(unsafe.Pointer(_pStmt)))
	Xsqlite3_snprintf(tls, int32(100), _zStmt, ts+18136 /* "PRAGMA reverse_unordered_selects..." */, bool2int(_iSetting == 0))
	Xsqlite3_exec(tls, _db, _zStmt, null, null, null)
}

// _381sqlite3Prepare is defined at sqlite3.c:117291:12
func _381sqlite3Prepare(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _zSql uintptr /* *int8 */, _nBytes int32, _prepFlags uint32, _pReprepare uintptr /* *TVdbe = SVdbe */, _ppStmt uintptr /* **Tsqlite3_stmt = Ssqlite3_stmt */, _pzTail uintptr /* **int8 */) (r int32) {
	esc := crt.MustMalloc(608)
	var (
		_zErrMsg  = esc // **int8
		_rc       int32
		_i        int32
		_sParse   = esc + 16 // *TParse = SParse
		_pBt      uintptr    // *TBtree = SBtree
		_zDb      uintptr    // *int8
		_zSqlCopy uintptr    // *int8
		_mxLen    int32
		_iFirst   int32
		_mx       int32
		_pT       uintptr // *TTriggerPrg = STriggerPrg
	)
	defer crt.Free(esc)
	*(*uintptr)(unsafe.Pointer(_zErrMsg)) = 0
	_rc = int32(0)
	crt.Xmemset(tls, _sParse, int32(0), uint64(196))
	crt.Xmemset(tls, _sParse+uintptr(448), int32(0), uint64(144))
	*(*uintptr)(unsafe.Pointer(_sParse + 496)) = _pReprepare

	if (_prepFlags & uint32(0x1)) == 0 {
		goto _1
	}

	(*(*uint8)(unsafe.Pointer(_sParse + 36)))++
	(*(*uint32)(unsafe.Pointer(_db + 352)))++
_1:
	_i = int32(0)
_2:
	if _i >= (*(*int32)(unsafe.Pointer(_db + 40))) {
		goto _4
	}

	_pBt = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_i)) + 8))
	if _pBt == 0 {
		goto _5
	}

	_rc = _617sqlite3BtreeSchemaLocked(tls, _pBt)
	if _rc == 0 {
		goto _6
	}

	_zDb = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_i)))
	_134sqlite3ErrorWithMsg(tls, _db, _rc, ts+18173 /* "database schema is locked: %s" */, _zDb)
	goto _end_prepare

_6:
_5:
	_i++
	goto _2

_4:
	_337sqlite3VtabUnlockList(tls, _db)
	*(*uintptr)(unsafe.Pointer(_sParse)) = _db
	if _nBytes < int32(0) || _nBytes != int32(0) && int32(*(*int8)(unsafe.Pointer(_zSql + uintptr(_nBytes-int32(1))))) == int32(0) {
		goto _7
	}

	_mxLen = *(*int32)(unsafe.Pointer((_db + 124) + 4))
	if _nBytes <= _mxLen {
		goto _9
	}

	_134sqlite3ErrorWithMsg(tls, _db, int32(18), ts+18203 /* "statement too long" */)
	_rc = _182sqlite3ApiExit(tls, _db, int32(18))
	goto _end_prepare

_9:
	_zSqlCopy = _618sqlite3DbStrNDup(tls, _db, _zSql, uint64(_nBytes))
	if _zSqlCopy == 0 {
		goto _10
	}

	_619sqlite3RunParser(tls, _sParse, _zSqlCopy, _zErrMsg)
	*(*uintptr)(unsafe.Pointer(_sParse + 504)) = _zSql + uintptr(int64((*(*uintptr)(unsafe.Pointer(_sParse + 504)))-_zSqlCopy))
	_181sqlite3DbFree(tls, _db, _zSqlCopy)
	goto _11

_10:
	*(*uintptr)(unsafe.Pointer(_sParse + 504)) = _zSql + uintptr(_nBytes)
_11:
	goto _8

_7:
	_619sqlite3RunParser(tls, _sParse, _zSql, _zErrMsg)
_8:
	if (*(*int32)(unsafe.Pointer(_sParse + 24))) != int32(101) {
		goto _12
	}

	*(*int32)(unsafe.Pointer(_sParse + 24)) = int32(0)
_12:
	if (*(*uint8)(unsafe.Pointer(_sParse + 29))) == 0 {
		goto _13
	}

	_620schemaIsValid(tls, _sParse)
_13:
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _14
	}

	*(*int32)(unsafe.Pointer(_sParse + 24)) = int32(7)
_14:
	if _pzTail == 0 {
		goto _15
	}

	*(*uintptr)(unsafe.Pointer(_pzTail)) = *(*uintptr)(unsafe.Pointer(_sParse + 504))
_15:
	_rc = *(*int32)(unsafe.Pointer(_sParse + 24))
	if _rc != int32(0) || (*(*uintptr)(unsafe.Pointer(_sParse + 16))) == 0 || (*(*uint8)(unsafe.Pointer(_sParse + 467))) == 0 {
		goto _16
	}

	if int32(*(*uint8)(unsafe.Pointer(_sParse + 467))) != int32(2) {
		goto _17
	}

	_621sqlite3VdbeSetNumCols(tls, *(*uintptr)(unsafe.Pointer(_sParse + 16)), int32(4))
	_iFirst = int32(8)
	_mx = int32(12)
	goto _18

_17:
	_621sqlite3VdbeSetNumCols(tls, *(*uintptr)(unsafe.Pointer(_sParse + 16)), int32(8))
	_iFirst = int32(0)
	_mx = int32(8)
_18:
	_i = _iFirst
_19:
	if _i >= _mx {
		goto _21
	}

	_622sqlite3VdbeSetColName(tls, *(*uintptr)(unsafe.Pointer(_sParse + 16)), _i-_iFirst, int32(0), *(*uintptr)(unsafe.Pointer(_616azColName + 8*uintptr(_i))), null)
	_i++
	goto _19

_21:
_16:
	if int32(*(*uint8)(unsafe.Pointer((_db + 176) + 5))) != int32(0) {
		goto _22
	}

	_623sqlite3VdbeSetSql(tls, *(*uintptr)(unsafe.Pointer(_sParse + 16)), _zSql, int32(int64((*(*uintptr)(unsafe.Pointer(_sParse + 504)))-_zSql)), uint8(_prepFlags))
_22:
	if (*(*uintptr)(unsafe.Pointer(_sParse + 16))) == 0 || _rc == int32(0) && (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _23
	}

	_179sqlite3VdbeFinalize(tls, *(*uintptr)(unsafe.Pointer(_sParse + 16)))

	goto _24

_23:
	*(*uintptr)(unsafe.Pointer(_ppStmt)) = *(*uintptr)(unsafe.Pointer(_sParse + 16))
_24:
	if (*(*uintptr)(unsafe.Pointer(_zErrMsg))) == 0 {
		goto _25
	}

	_134sqlite3ErrorWithMsg(tls, _db, _rc, ts+429 /* "%s" */, *(*uintptr)(unsafe.Pointer(_zErrMsg)))
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_zErrMsg)))
	goto _26

_25:
	_136sqlite3Error(tls, _db, _rc)
_26:
_27:
	if (*(*uintptr)(unsafe.Pointer(_sParse + 568))) == 0 {
		goto _28
	}

	_pT = *(*uintptr)(unsafe.Pointer(_sParse + 568))
	*(*uintptr)(unsafe.Pointer(_sParse + 568)) = *(*uintptr)(unsafe.Pointer(_pT + 8))
	_181sqlite3DbFree(tls, _db, _pT)
	goto _27

_28:
	goto _end_prepare
_end_prepare:
	_319sqlite3ParserReset(tls, _sParse)
	_rc = _182sqlite3ApiExit(tls, _db, _rc)

	return _rc
}

// _382sqlite3ResetOneSchema is defined at sqlite3.c:101218:21
func _382sqlite3ResetOneSchema(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _iDb int32) {
	var _i int32

	if _iDb < int32(0) {
		goto _1
	}

	{
		p := &(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)) + 24))) + 114)))
		*p = uint16(int32(*p) | int32(0x8))
	}
	{
		p := &(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32) + 24))) + 114)))
		*p = uint16(int32(*p) | int32(0x8))
	}
_1:
	if (*(*uint32)(unsafe.Pointer(_db + 72))) != uint32(0) {
		goto _2
	}

	_i = int32(0)
_3:
	if _i >= (*(*int32)(unsafe.Pointer(_db + 40))) {
		goto _5
	}

	if (int32(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_i)) + 24))) + 114))) & int32(0x8)) != int32(0x8) {
		goto _6
	}

	_336sqlite3SchemaClear(tls, *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_i)) + 24)))
_6:
	_i++
	goto _3

_5:
_2:
}

type SVdbeOp struct {
	Xopcode uint8
	Xp4type int8
	Xp5     uint16
	Xp1     int32
	Xp2     int32
	Xp3     int32
	Xp4     struct{ X int64 }
}

type SVdbeCursor struct {
	XeCurType       uint8
	XiDb            int8
	XnullRow        uint8
	XdeferredMoveto uint8
	XisTable        uint8
	F5              uint8
	XpBtx           uintptr // *SBtree
	XseqCount       int64
	XaAltMap        uintptr // *int32
	XcacheStatus    uint32
	XseekResult     int32
	XpAltCursor     uintptr // *SVdbeCursor
	Xuc             struct{ X int64 }
	XpKeyInfo       uintptr // *SKeyInfo
	XiHdrOffset     uint32
	XpgnoRoot       uint32
	XnField         int16
	XnHdrParsed     uint16
	XmovetoTarget   int64
	XaOffset        uintptr // *uint32
	XaRow           uintptr // *uint8
	XpayloadSize    uint32
	XszRow          uint32
	XaType          [1]uint32
}

type SVdbeFrame struct {
	Xv         uintptr // *SVdbe
	XpParent   uintptr // *SVdbeFrame
	XaOp       uintptr // *SVdbeOp
	XanExec    uintptr // *int64
	XaMem      uintptr // *Ssqlite3_value
	XapCsr     uintptr // **SVdbeCursor
	XaOnce     uintptr // *uint8
	Xtoken     uintptr // uintptr
	XlastRowid int64
	XpAuxData  uintptr // *SAuxData
	XnCursor   int32
	Xpc        int32
	XnOp       int32
	XnMem      int32
	XnChildMem int32
	XnChildCsr int32
	XnChange   int32
	XnDbChange int32
}

type SSubProgram struct {
	XaOp   uintptr // *SVdbeOp
	XnOp   int32
	XnMem  int32
	XnCsr  int32
	XaOnce uintptr // *uint8
	Xtoken uintptr // uintptr
	XpNext uintptr // *SSubProgram
}

type SAuxData struct {
	XiAuxOp     int32
	XiAuxArg    int32
	XpAux       uintptr // uintptr
	XxDeleteAux uintptr // *func(crt.TLS, uintptr)
	XpNextAux   uintptr // *SAuxData
}

// _383sqlite3OsCurrentTimeInt64 is defined at sqlite3.c:20958:20
func _383sqlite3OsCurrentTimeInt64(tls crt.TLS, _pVfs uintptr /* *Tsqlite3_vfs = Ssqlite3_vfs */, _pTimeOut uintptr /* *Tsqlite3_int64 = Tsqlite_int64 = int64 */) (r int32) {
	esc := crt.MustMalloc(8)
	var (
		_rc int32
		_r  = esc // *float64
	)
	defer crt.Free(esc)
	if (*(*int32)(unsafe.Pointer(_pVfs))) < int32(2) || (*(*uintptr)(unsafe.Pointer(_pVfs + 136))) == 0 {
		goto _1
	}

	_rc = fn58(*(*uintptr)(unsafe.Pointer(_pVfs + 136)))(tls, _pVfs, _pTimeOut)
	goto _2

_1:
	_rc = fn58(*(*uintptr)(unsafe.Pointer(_pVfs + 120)))(tls, _pVfs, _r)
	*(*int64)(unsafe.Pointer(_pTimeOut)) = int64((*(*float64)(unsafe.Pointer(_r))) * float64(8.64e+07))
_2:
	return _rc
}

// _384sqlite3VdbeList is defined at sqlite3.c:73814:20
func _384sqlite3VdbeList(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */) (r int32) {
	var (
		_nRow  int32
		_nSub  int32
		_apSub uintptr // **TSubProgram = SSubProgram
		_pSub  uintptr // *TMem = Ssqlite3_value
		_db    uintptr // *Tsqlite3 = Ssqlite3
		_i     int32
		_rc    int32
		_pMem  uintptr // *TMem = Ssqlite3_value
		_zP4   uintptr // *int8
		_pOp   uintptr // *TOp = SVdbeOp
		_j     int32
		_nByte int32
		_1j    int32
	)
	_nSub = int32(0)
	_apSub = 0
	_pSub = 0
	_db = *(*uintptr)(unsafe.Pointer(_p))
	_rc = int32(0)
	_pMem = (*(*uintptr)(unsafe.Pointer(_p + 112))) + 56

	_624releaseMemArray(tls, _pMem, int32(8))
	*(*uintptr)(unsafe.Pointer(_p + 136)) = null
	if (*(*int32)(unsafe.Pointer(_p + 56))) != int32(7) {
		goto _1
	}

	_178sqlite3OomFault(tls, _db)
	return int32(1)

_1:
	_nRow = *(*int32)(unsafe.Pointer(_p + 184))
	if int32(uint32((*(*uint16)(unsafe.Pointer(_p + 194)))>>2)<<30>>30) != int32(1) {
		goto _2
	}

	_pSub = (*(*uintptr)(unsafe.Pointer(_p + 112))) + 504
	if (int32(*(*uint16)(unsafe.Pointer(_pSub + 8))) & int32(0x10)) == 0 {
		goto _3
	}

	_nSub = int32(uint64(*(*int32)(unsafe.Pointer(_pSub + 12))) / uint64(8))
	_apSub = *(*uintptr)(unsafe.Pointer(_pSub + 16))
_3:
	_i = int32(0)
_4:
	if _i >= _nSub {
		goto _6
	}

	_nRow = int32(_nRow + (*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_apSub + 8*uintptr(_i)))) + 8))))
	_i++
	goto _4

_6:
_2:
_7:
	_i = postinc7(&(*(*int32)(unsafe.Pointer(_p + 52))))
	if ((_i < _nRow) && (int32(uint32((*(*uint16)(unsafe.Pointer(_p + 194)))>>2)<<30>>30) == int32(2))) && (int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 104))) + 24*uintptr(_i)))) != int32(167)) {
		goto _7
	}

	if _i < _nRow {
		goto _10
	}

	*(*int32)(unsafe.Pointer(_p + 56)) = int32(0)
	_rc = int32(101)
	goto _11

_10:
	if (*(*int32)(unsafe.Pointer(_db + 344))) == 0 {
		goto _12
	}

	*(*int32)(unsafe.Pointer(_p + 56)) = int32(9)
	_rc = int32(1)
	_625sqlite3VdbeError(tls, _p, _123sqlite3ErrStr(tls, *(*int32)(unsafe.Pointer(_p + 56))))
	goto _13

_12:
	if _i >= (*(*int32)(unsafe.Pointer(_p + 184))) {
		goto _14
	}

	_pOp = (*(*uintptr)(unsafe.Pointer(_p + 104))) + 24*uintptr(_i)
	goto _15

_14:
	_i = int32(_i - (*(*int32)(unsafe.Pointer(_p + 184))))
	_j = int32(0)
_16:
	if _i < (*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_apSub + 8*uintptr(_j)))) + 8))) {
		goto _18
	}

	_i = int32(_i - (*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_apSub + 8*uintptr(_j)))) + 8))))
	_j++
	goto _16

_18:
	_pOp = (*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_apSub + 8*uintptr(_j)))))) + 24*uintptr(_i)
_15:
	if int32(uint32((*(*uint16)(unsafe.Pointer(_p + 194)))>>2)<<30>>30) != int32(1) {
		goto _19
	}

	*(*uint16)(unsafe.Pointer(_pMem + 8)) = uint16(0x4)
	*(*int64)(unsafe.Pointer(_pMem)) = int64(_i)
	_pMem += 56
	*(*uint16)(unsafe.Pointer(_pMem + 8)) = uint16(2562)
	*(*uintptr)(unsafe.Pointer(_pMem + 16)) = _626sqlite3OpcodeName(tls, int32(*(*uint8)(unsafe.Pointer(_pOp))))

	*(*int32)(unsafe.Pointer(_pMem + 12)) = _211sqlite3Strlen30(tls, *(*uintptr)(unsafe.Pointer(_pMem + 16)))
	*(*uint8)(unsafe.Pointer(_pMem + 10)) = uint8(1)
	_pMem += 56
	if int32(*(*int8)(unsafe.Pointer(_pOp + 1))) != int32(-4) {
		goto _20
	}

	_nByte = int32(uint64(_nSub+int32(1)) * uint64(8))
	_1j = int32(0)
_21:
	if _1j >= _nSub {
		goto _23
	}

	if (*(*uintptr)(unsafe.Pointer(_apSub + 8*uintptr(_1j)))) != (*(*uintptr)(unsafe.Pointer(_pOp + 16))) {
		goto _24
	}

	goto _23

_24:
	_1j++
	goto _21

_23:
	if _1j != _nSub || int32(0) != _627sqlite3VdbeMemGrow(tls, _pSub, _nByte, bool2int(_nSub != int32(0))) {
		goto _25
	}

	_apSub = *(*uintptr)(unsafe.Pointer(_pSub + 16))
	*(*uintptr)(unsafe.Pointer(_apSub + 8*uintptr(postinc7(&_nSub)))) = *(*uintptr)(unsafe.Pointer(_pOp + 16))
	{
		p := &(*(*uint16)(unsafe.Pointer(_pSub + 8)))
		*p = uint16(int32(*p) | int32(0x10))
	}
	*(*int32)(unsafe.Pointer(_pSub + 12)) = int32(uint64(_nSub) * uint64(8))
_25:
_20:
_19:
	*(*uint16)(unsafe.Pointer(_pMem + 8)) = uint16(0x4)
	*(*int64)(unsafe.Pointer(_pMem)) = int64(*(*int32)(unsafe.Pointer(_pOp + 4)))
	_pMem += 56
	*(*uint16)(unsafe.Pointer(_pMem + 8)) = uint16(0x4)
	*(*int64)(unsafe.Pointer(_pMem)) = int64(*(*int32)(unsafe.Pointer(_pOp + 8)))
	_pMem += 56
	*(*uint16)(unsafe.Pointer(_pMem + 8)) = uint16(0x4)
	*(*int64)(unsafe.Pointer(_pMem)) = int64(*(*int32)(unsafe.Pointer(_pOp + 12)))
	_pMem += 56
	if _628sqlite3VdbeMemClearAndResize(tls, _pMem, int32(100)) == 0 {
		goto _26
	}

	return int32(1)

_26:
	*(*uint16)(unsafe.Pointer(_pMem + 8)) = uint16(514)
	_zP4 = _629displayP4(tls, _pOp, *(*uintptr)(unsafe.Pointer(_pMem + 16)), *(*int32)(unsafe.Pointer(_pMem + 32)))
	if _zP4 == (*(*uintptr)(unsafe.Pointer(_pMem + 16))) {
		goto _27
	}

	*(*int32)(unsafe.Pointer(_pMem + 12)) = int32(0)
	_395sqlite3VdbeMemSetStr(tls, _pMem, _zP4, int32(-1), uint8(1), null)
	goto _28

_27:
	*(*int32)(unsafe.Pointer(_pMem + 12)) = _211sqlite3Strlen30(tls, *(*uintptr)(unsafe.Pointer(_pMem + 16)))
	*(*uint8)(unsafe.Pointer(_pMem + 10)) = uint8(1)
_28:
	_pMem += 56
	if int32(uint32((*(*uint16)(unsafe.Pointer(_p + 194)))>>2)<<30>>30) != int32(1) {
		goto _29
	}

	if _628sqlite3VdbeMemClearAndResize(tls, _pMem, int32(4)) == 0 {
		goto _30
	}

	return int32(1)

_30:
	*(*uint16)(unsafe.Pointer(_pMem + 8)) = uint16(514)
	*(*int32)(unsafe.Pointer(_pMem + 12)) = int32(2)
	Xsqlite3_snprintf(tls, int32(3), *(*uintptr)(unsafe.Pointer(_pMem + 16)), ts+18222 /* "%.2x" */, int32(*(*uint16)(unsafe.Pointer(_pOp + 2))))
	*(*uint8)(unsafe.Pointer(_pMem + 10)) = uint8(1)
	_pMem += 56
	*(*uint16)(unsafe.Pointer(_pMem + 8)) = uint16(0x1)
_29:
	*(*uint16)(unsafe.Pointer(_p + 188)) = uint16(int32(8) - (int32(4) * (int32(uint32((*(*uint16)(unsafe.Pointer(_p + 194)))>>2)<<30>>30) - int32(1))))
	*(*uintptr)(unsafe.Pointer(_p + 136)) = (*(*uintptr)(unsafe.Pointer(_p + 112))) + 56
	*(*int32)(unsafe.Pointer(_p + 56)) = int32(0)
	_rc = int32(100)
_13:
_11:
	return _rc
}

// _385sqlite3VdbeExec is defined at sqlite3.c:79716:20
func _385sqlite3VdbeExec(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */) (r int32) {
	esc := crt.MustMalloc(1032)
	var (
		_aOp                uintptr // *TOp = SVdbeOp
		_pOp                uintptr // *TOp = SVdbeOp
		_rc                 int32
		_db                 uintptr // *Tsqlite3 = Ssqlite3
		_resetSchemaOnFault uint8
		_encoding           uint8
		_iCompare           int32
		_nVmStep            uint32
		_nProgressLimit     uint32
		_aMem               uintptr // *TMem = Ssqlite3_value
		_pIn1               uintptr // *TMem = Ssqlite3_value
		_pIn2               uintptr // *TMem = Ssqlite3_value
		_pIn3               uintptr // *TMem = Ssqlite3_value
		_pOut               uintptr // *TMem = Ssqlite3_value
		_iPrior             uint32
		_pCaller            uintptr // *TVdbeOp = SVdbeOp
		_pcDest             int32
		_pFrame             uintptr // *TVdbeFrame = SVdbeFrame
		_pcx                int32
		_cnt                int32
		_nullFlag           uint16
		_pVar               uintptr // *TMem = Ssqlite3_value
		_n                  int32
		_p1                 int32
		_p2                 int32
		_1n                 int32
		_pMem               uintptr // *TMem = Ssqlite3_value
		_i                  int32
		_nByte              int64
		_bIntint            int8
		_flags              uint16
		_type1              uint16
		_type2              uint16
		_iA                 int64
		_iB                 = esc // *Ti64 = Tsqlite_int64 = int64
		_rA                 float64
		_rB                 float64
		_2iA                = esc + 16 // *Ti64 = Tsqlite_int64 = int64
		_uA                 = esc + 32 // *Tu64 = Tsqlite_uint64 = uint64
		_3iB                int64
		_op                 uint8
		_res                int32
		_res2               int32
		_affinity           int8
		_flags1             uint16
		_flags3             uint16
		_4n                 int32
		_5i                 int32
		_6p1                int32
		_7p2                int32
		_pKeyInfo           uintptr // *TKeyInfo = SKeyInfo
		_idx                int32
		_pColl              uintptr // *TCollSeq = SCollSeq
		_bRev               int32
		_aPermute           uintptr // *int32
		_v1                 int32
		_v2                 int32
		_iAddr              uint32
		_c                  int32
		_8p2                = esc + 48 // *int32
		_pC                 = esc + 64 // **TVdbeCursor = SVdbeCursor
		_pCrsr              uintptr    // *TBtCursor = SBtCursor
		_aOffset            uintptr    // *Tu32 = uint32
		_len                int32
		_9i                 int32
		_pDest              uintptr    // *TMem = Ssqlite3_value
		_sMem               = esc + 80 // *TMem = Ssqlite3_value
		_zData              uintptr    // *Tu8 = uint8
		_zHdr               uintptr    // *Tu8 = uint8
		_zEndHdr            uintptr    // *Tu8 = uint8
		_offset64           uint64
		_t                  = esc + 144 // *Tu32 = uint32
		_pReg               uintptr     // *TMem = Ssqlite3_value
		_zAffinity          uintptr     // *int8
		_zNewRecord         uintptr     // *Tu8 = uint8
		_pRec               uintptr     // *TMem = Ssqlite3_value
		_nData              uint64
		_nHdr               int32
		_10nByte            int64
		_nZero              int64
		_nVarint            int32
		_serial_type        uint32
		_pData0             uintptr // *TMem = Ssqlite3_value
		_pLast              uintptr // *TMem = Ssqlite3_value
		_nField             int32
		_11zAffinity        uintptr // *int8
		_file_format        int32
		_12i                int32
		_j                  int32
		_13len              = esc + 160 // *Tu32 = uint32
		_nEntry             = esc + 176 // *Ti64 = Tsqlite_int64 = int64
		_14pCrsr            uintptr     // *TBtCursor = SBtCursor
		_15p1               int32
		_zName              uintptr // *int8
		_nName              int32
		_pNew               uintptr // *TSavepoint = SSavepoint
		_pSavepoint         uintptr // *TSavepoint = SSavepoint
		_pTmp               uintptr // *TSavepoint = SSavepoint
		_iSavepoint         int32
		_ii                 int32
		_isTransaction      int32
		_isSchemaChange     int32
		_desiredAutoCommit  int32
		_iRollback          int32
		_pBt                uintptr     // *TBtree = SBtree
		_iMeta              = esc + 192 // *int32
		_iGen               int32
		_16iMeta            = esc + 208 // *int32
		_iDb                int32
		_iCookie            int32
		_pDb                uintptr // *TDb = SDb
		_17nField           int32
		_18pKeyInfo         uintptr // *TKeyInfo = SKeyInfo
		_19p2               int32
		_20iDb              int32
		_wrFlag             int32
		_pX                 uintptr     // *TBtree = SBtree
		_pCur               uintptr     // *TVdbeCursor = SVdbeCursor
		_21pDb              uintptr     // *TDb = SDb
		_pOrig              uintptr     // *TVdbeCursor = SVdbeCursor
		_pCx                uintptr     // *TVdbeCursor = SVdbeCursor
		_22pCx              uintptr     // *TVdbeCursor = SVdbeCursor
		_23pKeyInfo         uintptr     // *TKeyInfo = SKeyInfo
		_pgno               = esc + 224 // *int32
		_24pCx              uintptr     // *TVdbeCursor = SVdbeCursor
		_25pC               uintptr     // *TVdbeCursor = SVdbeCursor
		_26pCx              uintptr     // *TVdbeCursor = SVdbeCursor
		_27res              = esc + 240 // *int32
		_oc                 int32
		_28pC               uintptr     // *TVdbeCursor = SVdbeCursor
		_r                  = esc + 256 // *TUnpackedRecord = SUnpackedRecord
		_29nField           int32
		_iKey               int64
		_eqOnly             int32
		_alreadyExists      int32
		_takeJump           int32
		_30ii               int32
		_31pC               uintptr     // *TVdbeCursor = SVdbeCursor
		_32res              = esc + 288 // *int32
		_pFree              uintptr     // *TUnpackedRecord = SUnpackedRecord
		_pIdxKey            uintptr     // *TUnpackedRecord = SUnpackedRecord
		_33r                = esc + 304 // *TUnpackedRecord = SUnpackedRecord
		_34pC               uintptr     // *TVdbeCursor = SVdbeCursor
		_35pCrsr            uintptr     // *TBtCursor = SBtCursor
		_36res              = esc + 336 // *int32
		_37iKey             uint64
		_v                  = esc + 352 // *Ti64 = Tsqlite_int64 = int64
		_38pC               uintptr     // *TVdbeCursor = SVdbeCursor
		_39res              = esc + 368 // *int32
		_40cnt              int32
		_41pMem             uintptr // *TMem = Ssqlite3_value
		_42pFrame           uintptr // *TVdbeFrame = SVdbeFrame
		_pData              uintptr // *TMem = Ssqlite3_value
		_pKey               uintptr // *TMem = Ssqlite3_value
		_43pC               uintptr // *TVdbeCursor = SVdbeCursor
		_seekResult         int32
		_zDb                uintptr // *int8
		_pTab               uintptr // *TTable = STable
		_44op               int32
		_x                  = esc + 384 // *TBtreePayload = SBtreePayload
		_45pC               uintptr     // *TVdbeCursor = SVdbeCursor
		_46zDb              uintptr     // *int8
		_47pTab             uintptr     // *TTable = STable
		_opflags            int32
		_48pC               uintptr     // *TVdbeCursor = SVdbeCursor
		_49res              = esc + 432 // *int32
		_nKeyCol            int32
		_50pC               uintptr // *TVdbeCursor = SVdbeCursor
		_51pC               uintptr // *TVdbeCursor = SVdbeCursor
		_52pCrsr            uintptr // *TBtCursor = SBtCursor
		_53n                uint32
		_54pC               uintptr     // *TVdbeCursor = SVdbeCursor
		_55v                = esc + 448 // *Ti64 = Tsqlite_int64 = int64
		_pVtab              uintptr     // *Tsqlite3_vtab = Ssqlite3_vtab
		_pModule            uintptr     // *Tsqlite3_module = Ssqlite3_module
		_56pC               uintptr     // *TVdbeCursor = SVdbeCursor
		_57pC               uintptr     // *TVdbeCursor = SVdbeCursor
		_58pCrsr            uintptr     // *TBtCursor = SBtCursor
		_59res              = esc + 464 // *int32
		_60pC               uintptr     // *TVdbeCursor = SVdbeCursor
		_61pCrsr            uintptr     // *TBtCursor = SBtCursor
		_62res              = esc + 480 // *int32
		_sz                 int64
		_63pC               uintptr     // *TVdbeCursor = SVdbeCursor
		_64pCrsr            uintptr     // *TBtCursor = SBtCursor
		_65res              = esc + 496 // *int32
		_66pC               uintptr     // *TVdbeCursor = SVdbeCursor
		_67pC               uintptr     // *TVdbeCursor = SVdbeCursor
		_68x                = esc + 512 // *TBtreePayload = SBtreePayload
		_69pC               uintptr     // *TVdbeCursor = SVdbeCursor
		_70pCrsr            uintptr     // *TBtCursor = SBtCursor
		_71res              = esc + 560 // *int32
		_72r                = esc + 576 // *TUnpackedRecord = SUnpackedRecord
		_73pC               uintptr     // *TVdbeCursor = SVdbeCursor
		_pTabCur            uintptr     // *TVdbeCursor = SVdbeCursor
		_rowid              = esc + 608 // *Ti64 = Tsqlite_int64 = int64
		_74pC               uintptr     // *TVdbeCursor = SVdbeCursor
		_75res              = esc + 624 // *int32
		_76r                = esc + 640 // *TUnpackedRecord = SUnpackedRecord
		_iMoved             = esc + 672 // *int32
		_77iDb              int32
		_nChange            = esc + 688 // *int32
		_78pC               uintptr     // *TVdbeCursor = SVdbeCursor
		_79pgno             = esc + 704 // *int32
		_80pDb              uintptr     // *TDb = SDb
		_81iDb              int32
		_zMaster            uintptr     // *int8
		_zSql               uintptr     // *int8
		_initData           = esc + 720 // *TInitData = struct{Xdb *Ssqlite3...sg **int8;XiDb int32;Xrc int32;}
		_nRoot              int32
		_aRoot              uintptr     // *int32
		_nErr               = esc + 752 // *int32
		_z                  uintptr     // *int8
		_pnErr              uintptr     // *TMem = Ssqlite3_value
		_val                = esc + 768 // *Ti64 = Tsqlite_int64 = int64
		_iSet               int32
		_exists             int32
		_nMem               int32
		_82nByte            int32
		_pRt                uintptr     // *TMem = Ssqlite3_value
		_83pMem             uintptr     // *TMem = Ssqlite3_value
		_pEnd               uintptr     // *TMem = Ssqlite3_value
		_84pFrame           uintptr     // *TVdbeFrame = SVdbeFrame
		_pProgram           uintptr     // *TSubProgram = SSubProgram
		_85t                uintptr     // *void
		_86pFrame           uintptr     // *TVdbeFrame = SVdbeFrame
		_pIn                uintptr     // *TMem = Ssqlite3_value
		_87pFrame           uintptr     // *TVdbeFrame = SVdbeFrame
		_88x                = esc + 784 // *Ti64 = Tsqlite_int64 = int64
		_89n                int32
		_pCtx               uintptr // *Tsqlite3_context = Ssqlite3_context
		_90i                int32
		_91pCtx             uintptr     // *Tsqlite3_context = Ssqlite3_context
		_92pMem             uintptr     // *TMem = Ssqlite3_value
		_93t                = esc + 800 // *TMem = Ssqlite3_value
		_94pMem             uintptr     // *TMem = Ssqlite3_value
		_95i                int32
		_aRes               = esc + 864 // *[3]int32
		_96pMem             uintptr     // *TMem = Ssqlite3_value
		_97pBt              uintptr     // *TBtree = SBtree
		_pPager             uintptr     // *TPager = SPager
		_eNew               int32
		_eOld               int32
		_zFilename          uintptr // *int8
		_98pBt              uintptr // *TBtree = SBtree
		_isWriteLock        uint8
		_99p1               int32
		_100z               uintptr     // *int8
		_pVTab              uintptr     // *TVTable = SVTable
		_101sMem            = esc + 880 // *TMem = Ssqlite3_value
		_zTab               uintptr     // *int8
		_102pCur            uintptr     // *TVdbeCursor = SVdbeCursor
		_pVCur              = esc + 944 // **Tsqlite3_vtab_cursor = Ssqlite3_vtab_cursor
		_103pVtab           uintptr     // *Tsqlite3_vtab = Ssqlite3_vtab
		_104pModule         uintptr     // *Tsqlite3_module = Ssqlite3_module
		_nArg               int32
		_iQuery             int32
		_105pModule         uintptr // *Tsqlite3_module = Ssqlite3_module
		_pQuery             uintptr // *TMem = Ssqlite3_value
		_pArgc              uintptr // *TMem = Ssqlite3_value
		_106pVCur           uintptr // *Tsqlite3_vtab_cursor = Ssqlite3_vtab_cursor
		_107pVtab           uintptr // *Tsqlite3_vtab = Ssqlite3_vtab
		_108pCur            uintptr // *TVdbeCursor = SVdbeCursor
		_109res             int32
		_110i               int32
		_apArg              uintptr     // **TMem = Ssqlite3_value
		_111pVtab           uintptr     // *Tsqlite3_vtab = Ssqlite3_vtab
		_112pModule         uintptr     // *Tsqlite3_module = Ssqlite3_module
		_113pDest           uintptr     // *TMem = Ssqlite3_value
		_sContext           = esc + 960 // *Tsqlite3_context = Ssqlite3_context
		_114pCur            uintptr     // *TVdbeCursor = SVdbeCursor
		_115pVtab           uintptr     // *Tsqlite3_vtab = Ssqlite3_vtab
		_116pModule         uintptr     // *Tsqlite3_module = Ssqlite3_module
		_117res             int32
		_118pCur            uintptr // *TVdbeCursor = SVdbeCursor
		_119pVtab           uintptr // *Tsqlite3_vtab = Ssqlite3_vtab
		_pName              uintptr // *TMem = Ssqlite3_value
		_120pVtab           uintptr // *Tsqlite3_vtab = Ssqlite3_vtab
		_121pModule         uintptr // *Tsqlite3_module = Ssqlite3_module
		_122nArg            int32
		_123i               int32
		_124rowid           = esc + 1024 // *Tsqlite_int64 = int64
		_125apArg           uintptr      // **TMem = Ssqlite3_value
		_126pX              uintptr      // *TMem = Ssqlite3_value
		_vtabOnConflict     uint8
		_newMax             uint32
		_127pBt             uintptr // *TBtree = SBtree
		_128n               int32
		_129pCtx            uintptr // *Tsqlite3_context = Ssqlite3_context
		_130i               int32
		_131pCtx            uintptr // *Tsqlite3_context = Ssqlite3_context
		_zTrace             uintptr // *int8
		_132i               int32
		_133x               uintptr // *func(crt.TLS, uintptr, uintptr)
		_134z               uintptr // *int8
		_135z               uintptr // *int8
	)
	defer crt.Free(esc)
	_aOp = *(*uintptr)(unsafe.Pointer(_p + 104))
	_pOp = _aOp
	_rc = int32(0)
	_db = *(*uintptr)(unsafe.Pointer(_p))
	_resetSchemaOnFault = uint8(0)
	_encoding = *(*uint8)(unsafe.Pointer(_db + 94))
	_iCompare = int32(0)
	_nVmStep = uint32(0)
	_aMem = *(*uintptr)(unsafe.Pointer(_p + 112))
	_pIn1 = 0
	_pIn2 = 0
	_pIn3 = 0
	_pOut = 0

	_639sqlite3VdbeEnter(tls, _p)
	if (*(*int32)(unsafe.Pointer(_p + 56))) != int32(7) {
		goto _1
	}

	goto _no_mem

_1:
	*(*int64)(unsafe.Pointer(_p + 72)) = int64(0)

	*(*uintptr)(unsafe.Pointer(_p + 136)) = null
	*(*int32)(unsafe.Pointer((_db + 544) + 16)) = int32(0)
	if (*(*int32)(unsafe.Pointer(_db + 344))) == 0 {
		goto _2
	}

	goto _abort_due_to_interrupt

_2:
	if (*(*uintptr)(unsafe.Pointer(_db + 424))) == 0 {
		goto _3
	}

	_iPrior = *(*uint32)(unsafe.Pointer((_p + 204) + 16))

	_nProgressLimit = (*(*uint32)(unsafe.Pointer(_db + 440))) - (_iPrior % (*(*uint32)(unsafe.Pointer(_db + 440))))
	goto _4

_3:
	_nProgressLimit = uint32(0xffffffff)
_4:
	_pOp = _aOp + 24*uintptr(*(*int32)(unsafe.Pointer(_p + 52)))
_5:
	if 1 == 0 {
		goto _7
	}

	_nVmStep++
	switch int32(*(*uint8)(unsafe.Pointer(_pOp))) {
	case int32(13):
		goto _9
	case int32(14):
		goto _10
	case int32(63):
		goto _11
	case int32(15):
		goto _12
	case int32(64):
		goto _13
	case int32(16):
		goto _14
	case int32(65):
		goto _15
	case int32(66):
		goto _16
	case int32(67):
		goto _17
	case int32(68):
		goto _18
	case int32(132):
		goto _19
	case int32(97):
		goto _20
	case int32(69):
		goto _21
	case int32(70):
		goto _22
	case int32(71):
		goto _23
	case int32(72):
		goto _24
	case int32(73):
		goto _25
	case int32(74):
		goto _26
	case int32(75):
		goto _27
	case int32(76):
		goto _28
	case int32(77):
		goto _29
	case int32(78):
		goto _30
	case int32(93):
		goto _31
	case int32(88):
		goto _32
	case int32(89):
		goto _33
	case int32(90):
		goto _34
	case int32(91):
		goto _35
	case int32(92):
		goto _36
	case int32(79):
		goto _37
	case int32(84):
		goto _38
	case int32(85):
		goto _39
	case int32(86):
		goto _40
	case int32(87):
		goto _41
	case int32(80):
		goto _42
	case int32(17):
		goto _43
	case int32(81):
		goto _44
	case int32(82):
		goto _45
	case int32(53):
		goto _46
	case int32(52):
		goto _47
	case int32(56):
		goto _48
	case int32(55):
		goto _49
	case int32(54):
		goto _50
	case int32(57):
		goto _51
	case int32(58):
		goto _52
	case int32(83):
		goto _53
	case int32(94):
		goto _54
	case int32(18):
		goto _55
	case int32(44):
		goto _56
	case int32(43):
		goto _57
	case int32(19):
		goto _58
	case int32(95):
		goto _59
	case int32(20):
		goto _60
	case int32(21):
		goto _61
	case int32(22):
		goto _62
	case int32(50):
		goto _63
	case int32(51):
		goto _64
	case int32(23):
		goto _65
	case int32(96):
		goto _66
	case int32(98):
		goto _67
	case int32(99):
		goto _68
	case int32(100):
		goto _69
	case int32(0):
		goto _70
	case int32(1):
		goto _71
	case int32(2):
		goto _72
	case int32(101):
		goto _73
	case int32(102):
		goto _74
	case int32(103):
		goto _75
	case int32(104):
		goto _76
	case int32(105):
		goto _77
	case int32(106):
		goto _78
	case int32(107):
		goto _79
	case int32(108):
		goto _80
	case int32(109):
		goto _81
	case int32(110):
		goto _82
	case int32(111):
		goto _83
	case int32(112):
		goto _84
	case int32(24):
		goto _85
	case int32(25):
		goto _86
	case int32(26):
		goto _87
	case int32(27):
		goto _88
	case int32(28):
		goto _89
	case int32(29):
		goto _90
	case int32(30):
		goto _91
	case int32(31):
		goto _92
	case int32(32):
		goto _93
	case int32(114):
		goto _94
	case int32(115):
		goto _95
	case int32(116):
		goto _96
	case int32(117):
		goto _97
	case int32(118):
		goto _98
	case int32(119):
		goto _99
	case int32(120):
		goto _100
	case int32(121):
		goto _101
	case int32(122):
		goto _102
	case int32(123):
		goto _103
	case int32(124):
		goto _104
	case int32(125):
		goto _105
	case int32(33):
		goto _106
	case int32(34):
		goto _107
	case int32(35):
		goto _108
	case int32(36):
		goto _109
	case int32(37):
		goto _110
	case int32(3):
		goto _111
	case int32(4):
		goto _112
	case int32(5):
		goto _113
	case int32(6):
		goto _114
	case int32(7):
		goto _115
	case int32(126):
		goto _116
	case int32(127):
		goto _117
	case int32(128):
		goto _118
	case int32(129):
		goto _119
	case int32(130):
		goto _120
	case int32(38):
		goto _121
	case int32(39):
		goto _122
	case int32(40):
		goto _123
	case int32(41):
		goto _124
	case int32(131):
		goto _125
	case int32(133):
		goto _126
	case int32(134):
		goto _127
	case int32(135):
		goto _128
	case int32(136):
		goto _129
	case int32(137):
		goto _130
	case int32(138):
		goto _131
	case int32(139):
		goto _132
	case int32(140):
		goto _133
	case int32(141):
		goto _134
	case int32(142):
		goto _135
	case int32(143):
		goto _136
	case int32(42):
		goto _137
	case int32(45):
		goto _138
	case int32(46):
		goto _139
	case int32(144):
		goto _140
	case int32(145):
		goto _141
	case int32(47):
		goto _142
	case int32(146):
		goto _143
	case int32(48):
		goto _144
	case int32(147):
		goto _145
	case int32(49):
		goto _146
	case int32(59):
		goto _147
	case int32(148):
		goto _148
	case int32(149):
		goto _149
	case int32(150):
		goto _150
	case int32(8):
		goto _151
	case int32(9):
		goto _152
	case int32(10):
		goto _153
	case int32(60):
		goto _154
	case int32(151):
		goto _155
	case int32(152):
		goto _156
	case int32(153):
		goto _157
	case int32(154):
		goto _158
	case int32(155):
		goto _159
	case int32(156):
		goto _160
	case int32(11):
		goto _161
	case int32(157):
		goto _162
	case int32(61):
		goto _163
	case int32(158):
		goto _164
	case int32(12):
		goto _165
	case int32(159):
		goto _166
	case int32(160):
		goto _167
	case int32(161):
		goto _168
	case int32(162):
		goto _169
	case int32(163):
		goto _170
	case int32(164):
		goto _171
	case int32(62):
		goto _172
	default:
		goto _173
	}
_9:
	goto _jump_to_p2_and_check_for_interrupt
_jump_to_p2_and_check_for_interrupt:
	_pOp = _aOp + 24*uintptr((*(*int32)(unsafe.Pointer(_pOp + 8)))-int32(1))
	goto _check_for_interrupt
_check_for_interrupt:
	if (*(*int32)(unsafe.Pointer(_db + 344))) == 0 {
		goto _174
	}

	goto _abort_due_to_interrupt

_174:
	if _nVmStep < _nProgressLimit || (*(*uintptr)(unsafe.Pointer(_db + 424))) == 0 {
		goto _175
	}

	_nProgressLimit = (_nVmStep + (*(*uint32)(unsafe.Pointer(_db + 440)))) - (_nVmStep % (*(*uint32)(unsafe.Pointer(_db + 440))))
	if fn12(*(*uintptr)(unsafe.Pointer(_db + 424)))(tls, *(*uintptr)(unsafe.Pointer(_db + 432))) == 0 {
		goto _176
	}

	_rc = int32(9)
	goto _abort_due_to_error

_176:
_175:
	goto _8

_10:
	_pIn1 = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))

	*(*uint16)(unsafe.Pointer(_pIn1 + 8)) = uint16(0x4)
	*(*int64)(unsafe.Pointer(_pIn1)) = int64(int32(int64((_pOp - _aOp) / 24)))
	goto _jump_to_p2
_jump_to_p2:
	_pOp = _aOp + 24*uintptr((*(*int32)(unsafe.Pointer(_pOp + 8)))-int32(1))
	goto _8

_11:
	_pIn1 = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))

	_pOp = _aOp + 24*uintptr(*(*int64)(unsafe.Pointer(_pIn1)))
	*(*uint16)(unsafe.Pointer(_pIn1 + 8)) = uint16(0x80)
	goto _8

_12:
	_pOut = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))

	*(*int64)(unsafe.Pointer(_pOut)) = int64((*(*int32)(unsafe.Pointer(_pOp + 12))) - int32(1))
	*(*uint16)(unsafe.Pointer(_pOut + 8)) = uint16(0x4)
	if (*(*int32)(unsafe.Pointer(_pOp + 8))) == 0 {
		goto _177
	}

	goto _jump_to_p2

_177:
	goto _8

_13:
	_pIn1 = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))

	_pCaller = _aOp + 24*uintptr(*(*int64)(unsafe.Pointer(_pIn1)))

	_pOp = _aOp + 24*uintptr((*(*int32)(unsafe.Pointer(_pCaller + 8)))-int32(1))
	*(*uint16)(unsafe.Pointer(_pIn1 + 8)) = uint16(0x80)
	goto _8

_14:
	_pIn1 = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))

	*(*uint16)(unsafe.Pointer(_pIn1 + 8)) = uint16(0x4)
	_pcDest = int32(*(*int64)(unsafe.Pointer(_pIn1)))
	*(*int64)(unsafe.Pointer(_pIn1)) = int64(int32(int64((_pOp - _aOp) / 24)))
	_pOp = _aOp + 24*uintptr(_pcDest)
	goto _8

_15:
	_pIn3 = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 12)))
	if (int32(*(*uint16)(unsafe.Pointer(_pIn3 + 8))) & int32(0x1)) != int32(0) {
		goto _178
	}

	goto _8

_178:
_16:
	_pcx = int32(int64((_pOp - _aOp) / 24))
	if (*(*int32)(unsafe.Pointer(_pOp + 4))) != int32(0) || (*(*uintptr)(unsafe.Pointer(_p + 248))) == 0 {
		goto _179
	}

	_pFrame = *(*uintptr)(unsafe.Pointer(_p + 248))
	*(*uintptr)(unsafe.Pointer(_p + 248)) = *(*uintptr)(unsafe.Pointer(_pFrame + 8))
	(*(*int32)(unsafe.Pointer(_p + 264)))--
	_640sqlite3VdbeSetChanges(tls, _db, *(*int32)(unsafe.Pointer(_p + 60)))
	_pcx = _641sqlite3VdbeFrameRestore(tls, _pFrame)
	if (*(*int32)(unsafe.Pointer(_pOp + 8))) != int32(4) {
		goto _180
	}

	_pcx = (*(*int32)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_p + 104))) + 24*uintptr(_pcx)) + 8))) - int32(1)
_180:
	_aOp = *(*uintptr)(unsafe.Pointer(_p + 104))
	_aMem = *(*uintptr)(unsafe.Pointer(_p + 112))
	_pOp = _aOp + 24*uintptr(_pcx)
	goto _8

_179:
	*(*int32)(unsafe.Pointer(_p + 56)) = *(*int32)(unsafe.Pointer(_pOp + 4))
	*(*uint8)(unsafe.Pointer(_p + 190)) = uint8(*(*int32)(unsafe.Pointer(_pOp + 8)))
	*(*int32)(unsafe.Pointer(_p + 52)) = _pcx

	if (*(*int32)(unsafe.Pointer(_p + 56))) == 0 {
		goto _181
	}

	if (*(*uint16)(unsafe.Pointer(_pOp + 2))) == 0 {
		goto _182
	}

	_625sqlite3VdbeError(tls, _p, ts+18227 /* "%s constraint failed" */, *(*uintptr)(unsafe.Pointer(_630azType + 8*uintptr(int32(*(*uint16)(unsafe.Pointer(_pOp + 2)))-int32(1)))))
	if (*(*uintptr)(unsafe.Pointer(_pOp + 16))) == 0 {
		goto _184
	}

	*(*uintptr)(unsafe.Pointer(_p + 144)) = _226sqlite3MPrintf(tls, _db, ts+18248 /* "%z: %s" */, *(*uintptr)(unsafe.Pointer(_p + 144)), *(*uintptr)(unsafe.Pointer(_pOp + 16)))
_184:
	goto _183

_182:
	_625sqlite3VdbeError(tls, _p, ts+429 /* "%s" */, *(*uintptr)(unsafe.Pointer(_pOp + 16)))
_183:
	Xsqlite3_log(tls, *(*int32)(unsafe.Pointer(_pOp + 4)), ts+18255 /* "abort at %d in [%s]: %s" */, _pcx, *(*uintptr)(unsafe.Pointer(_p + 232)), *(*uintptr)(unsafe.Pointer(_p + 144)))
_181:
	_rc = _398sqlite3VdbeHalt(tls, _p)

	if _rc != int32(5) {
		goto _185
	}

	*(*int32)(unsafe.Pointer(_p + 56)) = int32(5)
	goto _186

_185:
	_rc = func() int32 {
		if (*(*int32)(unsafe.Pointer(_p + 56))) != 0 {
			return int32(1)
		}
		return int32(101)
	}()
_186:
	goto _vdbe_return

_17:
	_pOut = _642out2Prerelease(tls, _p, _pOp)
	*(*int64)(unsafe.Pointer(_pOut)) = int64(*(*int32)(unsafe.Pointer(_pOp + 4)))
	goto _8

_18:
	_pOut = _642out2Prerelease(tls, _p, _pOp)

	*(*int64)(unsafe.Pointer(_pOut)) = *(*int64)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pOp + 16))))
	goto _8

_19:
	_pOut = _642out2Prerelease(tls, _p, _pOp)
	*(*uint16)(unsafe.Pointer(_pOut + 8)) = uint16(0x8)

	*(*float64)(unsafe.Pointer(_pOut)) = *(*float64)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pOp + 16))))
	goto _8

_20:
	_pOut = _642out2Prerelease(tls, _p, _pOp)
	*(*uint8)(unsafe.Pointer(_pOp)) = uint8(69)
	*(*int32)(unsafe.Pointer(_pOp + 4)) = _211sqlite3Strlen30(tls, *(*uintptr)(unsafe.Pointer(_pOp + 16)))
	if int32(_encoding) == int32(1) {
		goto _187
	}

	_rc = _395sqlite3VdbeMemSetStr(tls, _pOut, *(*uintptr)(unsafe.Pointer(_pOp + 16)), int32(-1), uint8(1), null)

	if int32(0) == _396sqlite3VdbeChangeEncoding(tls, _pOut, int32(_encoding)) {
		goto _188
	}

	goto _no_mem

_188:
	*(*int32)(unsafe.Pointer(_pOut + 32)) = int32(0)
	{
		p := &(*(*uint16)(unsafe.Pointer(_pOut + 8)))
		*p = uint16(int32(*p) | int32(0x800))
	}
	if int32(*(*int8)(unsafe.Pointer(_pOp + 1))) != int32(-7) {
		goto _189
	}

	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_pOp + 16)))
_189:
	*(*int8)(unsafe.Pointer(_pOp + 1)) = int8(-7)
	*(*uintptr)(unsafe.Pointer(_pOp + 16)) = *(*uintptr)(unsafe.Pointer(_pOut + 16))
	*(*int32)(unsafe.Pointer(_pOp + 4)) = *(*int32)(unsafe.Pointer(_pOut + 12))
_187:
	if (*(*int32)(unsafe.Pointer(_pOp + 4))) <= (*(*int32)(unsafe.Pointer(_db + 124))) {
		goto _190
	}

	goto _too_big

_190:
_21:
	_pOut = _642out2Prerelease(tls, _p, _pOp)
	*(*uint16)(unsafe.Pointer(_pOut + 8)) = uint16(2562)
	*(*uintptr)(unsafe.Pointer(_pOut + 16)) = *(*uintptr)(unsafe.Pointer(_pOp + 16))
	*(*int32)(unsafe.Pointer(_pOut + 12)) = *(*int32)(unsafe.Pointer(_pOp + 4))
	*(*uint8)(unsafe.Pointer(_pOut + 10)) = _encoding
	if (*(*int32)(unsafe.Pointer(_pOp + 12))) <= int32(0) {
		goto _191
	}

	_pIn3 = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 12)))

	if (*(*int64)(unsafe.Pointer(_pIn3))) != int64(*(*uint16)(unsafe.Pointer(_pOp + 2))) {
		goto _192
	}

	*(*uint16)(unsafe.Pointer(_pOut + 8)) = uint16(2576)
_192:
_191:
	goto _8

_22:
	_pOut = _642out2Prerelease(tls, _p, _pOp)
	_cnt = (*(*int32)(unsafe.Pointer(_pOp + 12))) - (*(*int32)(unsafe.Pointer(_pOp + 8)))

	*(*uint16)(unsafe.Pointer(_pOut + 8)) = set60(&_nullFlag, uint16(func() int32 {
		if (*(*int32)(unsafe.Pointer(_pOp + 4))) != 0 {
			return int32(257)
		}
		return int32(0x1)
	}()))
	*(*int32)(unsafe.Pointer(_pOut + 12)) = int32(0)
_193:
	if _cnt <= int32(0) {
		goto _194
	}

	_pOut += 56
	_643sqlite3VdbeMemSetNull(tls, _pOut)
	*(*uint16)(unsafe.Pointer(_pOut + 8)) = _nullFlag
	*(*int32)(unsafe.Pointer(_pOut + 12)) = int32(0)
	_cnt--
	goto _193

_194:
	goto _8

_23:
	_pOut = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))
	*(*uint16)(unsafe.Pointer(_pOut + 8)) = uint16((int32(*(*uint16)(unsafe.Pointer(_pOut + 8))) & int32(-160)) | int32(0x1))
	goto _8

_24:
	_pOut = _642out2Prerelease(tls, _p, _pOp)
	_395sqlite3VdbeMemSetStr(tls, _pOut, *(*uintptr)(unsafe.Pointer(_pOp + 16)), *(*int32)(unsafe.Pointer(_pOp + 4)), uint8(0), null)
	*(*uint8)(unsafe.Pointer(_pOut + 10)) = _encoding
	goto _8

_25:
	_pVar = (*(*uintptr)(unsafe.Pointer(_p + 160))) + 56*uintptr((*(*int32)(unsafe.Pointer(_pOp + 4)))-int32(1))
	if _644sqlite3VdbeMemTooBig(tls, _pVar) == 0 {
		goto _195
	}

	goto _too_big

_195:
	_pOut = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 8)))
	_645sqlite3VdbeMemShallowCopy(tls, _pOut, _pVar, int32(0x800))
	goto _8

_26:
	_n = *(*int32)(unsafe.Pointer(_pOp + 12))
	_p1 = *(*int32)(unsafe.Pointer(_pOp + 4))
	_p2 = *(*int32)(unsafe.Pointer(_pOp + 8))

	_pIn1 = _aMem + 56*uintptr(_p1)
	_pOut = _aMem + 56*uintptr(_p2)
_196:
	_646sqlite3VdbeMemMove(tls, _pOut, _pIn1)
	if (int32(*(*uint16)(unsafe.Pointer(_pOut + 8)))&int32(0x1000)) == int32(0) || _543sqlite3VdbeMemMakeWriteable(tls, _pOut) == 0 {
		goto _199
	}

	goto _no_mem

_199:
	_pIn1 += 56
	_pOut += 56
	if preinc47(&_n) != 0 {
		goto _196
	}

	goto _8

_27:
	_1n = *(*int32)(unsafe.Pointer(_pOp + 12))
	_pIn1 = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))
	_pOut = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 8)))

_200:
	_645sqlite3VdbeMemShallowCopy(tls, _pOut, _pIn1, int32(0x1000))
	if (int32(*(*uint16)(unsafe.Pointer(_pOut + 8)))&int32(0x1000)) == int32(0) || _543sqlite3VdbeMemMakeWriteable(tls, _pOut) == 0 {
		goto _202
	}

	goto _no_mem

_202:
	if postinc24(&_1n) != int32(0) {
		goto _203
	}

	goto _201

_203:
	_pOut += 56
	_pIn1 += 56
	goto _200

_201:
	goto _8

_28:
	_pIn1 = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))
	_pOut = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 8)))

	_645sqlite3VdbeMemShallowCopy(tls, _pOut, _pIn1, int32(0x1000))
	goto _8

_29:
	_pIn1 = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))

	_pOut = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 8)))
	_527sqlite3VdbeMemSetInt64(tls, _pOut, *(*int64)(unsafe.Pointer(_pIn1)))
	goto _8

_30:
	if (*(*uintptr)(unsafe.Pointer(_db + 424))) == 0 || _nVmStep < _nProgressLimit || fn12(*(*uintptr)(unsafe.Pointer(_db + 424)))(tls, *(*uintptr)(unsafe.Pointer(_db + 432))) == int32(0) {
		goto _204
	}

	_rc = int32(9)
	goto _abort_due_to_error

_204:
	if int32(0) == set5(&_rc, _647sqlite3VdbeCheckFk(tls, _p, int32(0))) {
		goto _205
	}

	goto _abort_due_to_error

_205:
	_rc = _648sqlite3VdbeCloseStatement(tls, _p, int32(1))

	*(*uint32)(unsafe.Pointer(_p + 48)) = ((*(*uint32)(unsafe.Pointer(_p + 48))) + uint32(2)) | uint32(1)
	_pMem = set4(&(*(*uintptr)(unsafe.Pointer(_p + 136))), _aMem+56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4))))
	_i = int32(0)
_206:
	if _i >= (*(*int32)(unsafe.Pointer(_pOp + 8))) {
		goto _208
	}

	if (int32(*(*uint16)(unsafe.Pointer((_pMem + 56*uintptr(_i)) + 8)))&int32(0x1000)) == int32(0) || _543sqlite3VdbeMemMakeWriteable(tls, _pMem+56*uintptr(_i)) == 0 {
		goto _209
	}

	goto _no_mem

_209:
	_649sqlite3VdbeMemNulTerminate(tls, _pMem+56*uintptr(_i))
	_i++
	goto _206

_208:
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _210
	}

	goto _no_mem

_210:
	if (int32(*(*uint8)(unsafe.Pointer(_db + 104))) & int32(0x4)) == 0 {
		goto _211
	}

	fn28(*(*uintptr)(unsafe.Pointer(_db + 216)))(tls, uint32(0x4), *(*uintptr)(unsafe.Pointer(_db + 224)), _p, null)
_211:
	*(*int32)(unsafe.Pointer(_p + 52)) = int32(int64((_pOp-_aOp)/24)) + int32(1)
	_rc = int32(100)
	goto _vdbe_return

_31:
	_pIn1 = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))
	_pIn2 = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 8)))
	_pOut = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 12)))

	if ((int32(*(*uint16)(unsafe.Pointer(_pIn1 + 8))) | int32(*(*uint16)(unsafe.Pointer(_pIn2 + 8)))) & int32(0x1)) == 0 {
		goto _212
	}

	_643sqlite3VdbeMemSetNull(tls, _pOut)
	goto _8

_212:
	if func() int32 {
		if int32(*(*uint16)(unsafe.Pointer(_pIn1 + 8)))&int32(0x4000) != 0 {
			return _442sqlite3VdbeMemExpandBlob(tls, _pIn1)
		}
		return int32(0)
	}() == 0 && func() int32 {
		if int32(*(*uint16)(unsafe.Pointer(_pIn2 + 8)))&int32(0x4000) != 0 {
			return _442sqlite3VdbeMemExpandBlob(tls, _pIn2)
		}
		return int32(0)
	}() == 0 {
		goto _213
	}

	goto _no_mem

_213:
	if (int32(*(*uint16)(unsafe.Pointer(_pIn1 + 8)))&int32(18)) != int32(0) || _650sqlite3VdbeMemStringify(tls, _pIn1, _encoding, uint8(0)) == 0 {
		goto _214
	}

	goto _no_mem

_214:
	if (int32(*(*uint16)(unsafe.Pointer(_pIn2 + 8)))&int32(18)) != int32(0) || _650sqlite3VdbeMemStringify(tls, _pIn2, _encoding, uint8(0)) == 0 {
		goto _215
	}

	goto _no_mem

_215:
	_nByte = int64((*(*int32)(unsafe.Pointer(_pIn1 + 12))) + (*(*int32)(unsafe.Pointer(_pIn2 + 12))))
	if _nByte <= int64(*(*int32)(unsafe.Pointer(_db + 124))) {
		goto _216
	}

	goto _too_big

_216:
	if _627sqlite3VdbeMemGrow(tls, _pOut, int32(_nByte)+int32(2), bool2int(_pOut == _pIn2)) == 0 {
		goto _217
	}

	goto _no_mem

_217:
	*(*uint16)(unsafe.Pointer(_pOut + 8)) = uint16((int32(*(*uint16)(unsafe.Pointer(_pOut + 8))) & int32(-49664)) | int32(0x2))
	if _pOut == _pIn2 {
		goto _218
	}

	crt.Xmemcpy(tls, *(*uintptr)(unsafe.Pointer(_pOut + 16)), *(*uintptr)(unsafe.Pointer(_pIn2 + 16)), uint64(*(*int32)(unsafe.Pointer(_pIn2 + 12))))
_218:
	crt.Xmemcpy(tls, (*(*uintptr)(unsafe.Pointer(_pOut + 16)))+uintptr(*(*int32)(unsafe.Pointer(_pIn2 + 12))), *(*uintptr)(unsafe.Pointer(_pIn1 + 16)), uint64(*(*int32)(unsafe.Pointer(_pIn1 + 12))))
	*(*int8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pOut + 16))) + uintptr(_nByte))) = int8(0)
	*(*int8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pOut + 16))) + uintptr(_nByte+int64(1)))) = int8(0)
	{
		p := &(*(*uint16)(unsafe.Pointer(_pOut + 8)))
		*p = uint16(int32(*p) | int32(0x200))
	}
	*(*int32)(unsafe.Pointer(_pOut + 12)) = int32(_nByte)
	*(*uint8)(unsafe.Pointer(_pOut + 10)) = _encoding
	goto _8

_32:
_33:
_34:
_35:
_36:
	_pIn1 = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))
	_type1 = _651numericType(tls, _pIn1)
	_pIn2 = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 8)))
	_type2 = _651numericType(tls, _pIn2)
	_pOut = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 12)))
	_flags = uint16(int32(*(*uint16)(unsafe.Pointer(_pIn1 + 8))) | int32(*(*uint16)(unsafe.Pointer(_pIn2 + 8))))
	if ((int32(_type1) & int32(_type2)) & int32(0x4)) == int32(0) {
		goto _219
	}

	_iA = *(*int64)(unsafe.Pointer(_pIn1))
	*(*int64)(unsafe.Pointer(_iB)) = *(*int64)(unsafe.Pointer(_pIn2))
	_bIntint = int8(1)
	switch int32(*(*uint8)(unsafe.Pointer(_pOp))) {
	case int32(88):
		goto _222
	case int32(89):
		goto _223
	case int32(90):
		goto _224
	case int32(91):
		goto _225
	default:
		goto _226
	}
_222:
	if _652sqlite3AddInt64(tls, _iB, _iA) == 0 {
		goto _227
	}

	goto _fp_math

_227:
	goto _221

_223:
	if _653sqlite3SubInt64(tls, _iB, _iA) == 0 {
		goto _228
	}

	goto _fp_math

_228:
	goto _221

_224:
	if _654sqlite3MulInt64(tls, _iB, _iA) == 0 {
		goto _229
	}

	goto _fp_math

_229:
	goto _221

_225:
	if _iA != int64(0) {
		goto _230
	}

	goto _arithmetic_result_is_null

_230:
	if _iA != int64(-1) || (*(*int64)(unsafe.Pointer(_iB))) != int64(-9223372036854775808) {
		goto _231
	}

	goto _fp_math

_231:
	*(*int64)(unsafe.Pointer(_iB)) = int64((*(*int64)(unsafe.Pointer(_iB))) / _iA)
	goto _221

_226:
	if _iA != int64(0) {
		goto _232
	}

	goto _arithmetic_result_is_null

_232:
	if _iA != int64(-1) {
		goto _233
	}

	_iA = int64(1)
_233:
	*(*int64)(unsafe.Pointer(_iB)) = int64((*(*int64)(unsafe.Pointer(_iB))) % _iA)
	goto _221

_221:
	*(*int64)(unsafe.Pointer(_pOut)) = *(*int64)(unsafe.Pointer(_iB))
	*(*uint16)(unsafe.Pointer(_pOut + 8)) = uint16((int32(*(*uint16)(unsafe.Pointer(_pOut + 8))) & int32(-49664)) | int32(0x4))
	goto _220

_219:
	if (int32(_flags) & int32(0x1)) == int32(0) {
		goto _234
	}

	goto _arithmetic_result_is_null

	goto _235

_234:
	_bIntint = int8(0)
	goto _fp_math
_fp_math:
	_rA = _441sqlite3VdbeRealValue(tls, _pIn1)
	_rB = _441sqlite3VdbeRealValue(tls, _pIn2)
	switch int32(*(*uint8)(unsafe.Pointer(_pOp))) {
	case int32(88):
		goto _237
	case int32(89):
		goto _238
	case int32(90):
		goto _239
	case int32(91):
		goto _240
	default:
		goto _241
	}
_237:
	_rB = float64(_rB + _rA)
	goto _236

_238:
	_rB = float64(_rB - _rA)
	goto _236

_239:
	_rB = float64(_rB * _rA)
	goto _236

_240:
	if _rA != float64(0) {
		goto _242
	}

	goto _arithmetic_result_is_null

_242:
	_rB = float64(_rB / _rA)
	goto _236

_241:
	_iA = int64(_rA)
	*(*int64)(unsafe.Pointer(_iB)) = int64(_rB)
	if _iA != int64(0) {
		goto _243
	}

	goto _arithmetic_result_is_null

_243:
	if _iA != int64(-1) {
		goto _244
	}

	_iA = int64(1)
_244:
	_rB = float64((*(*int64)(unsafe.Pointer(_iB))) % _iA)
	goto _236

_236:
	if _308sqlite3IsNaN(tls, _rB) == 0 {
		goto _245
	}

	goto _arithmetic_result_is_null

_245:
	*(*float64)(unsafe.Pointer(_pOut)) = _rB
	*(*uint16)(unsafe.Pointer(_pOut + 8)) = uint16((int32(*(*uint16)(unsafe.Pointer(_pOut + 8))) & int32(-49664)) | int32(0x8))
	if ((int32(_type1)|int32(_type2))&int32(0x8)) != int32(0) || _bIntint != 0 {
		goto _246
	}

	_655sqlite3VdbeIntegerAffinity(tls, _pOut)
_246:
_235:
_220:
	goto _8

	goto _arithmetic_result_is_null
_arithmetic_result_is_null:
	_643sqlite3VdbeMemSetNull(tls, _pOut)
	goto _8

_37:
	if (*(*int32)(unsafe.Pointer(_pOp + 4))) == 0 {
		goto _247
	}

	_527sqlite3VdbeMemSetInt64(tls, _aMem+56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4))), int64(0))
_247:
	goto _8

_38:
_39:
_40:
_41:
	_pIn1 = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))
	_pIn2 = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 8)))
	_pOut = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 12)))
	if ((int32(*(*uint16)(unsafe.Pointer(_pIn1 + 8))) | int32(*(*uint16)(unsafe.Pointer(_pIn2 + 8)))) & int32(0x1)) == 0 {
		goto _248
	}

	_643sqlite3VdbeMemSetNull(tls, _pOut)
	goto _8

_248:
	*(*int64)(unsafe.Pointer(_2iA)) = _399sqlite3VdbeIntValue(tls, _pIn2)
	_3iB = _399sqlite3VdbeIntValue(tls, _pIn1)
	_op = *(*uint8)(unsafe.Pointer(_pOp))
	if int32(_op) != int32(84) {
		goto _249
	}

	*(*int64)(unsafe.Pointer(_2iA)) = int64((*(*int64)(unsafe.Pointer(_2iA))) & _3iB)
	goto _250

_249:
	if int32(_op) != int32(85) {
		goto _251
	}

	*(*int64)(unsafe.Pointer(_2iA)) = int64((*(*int64)(unsafe.Pointer(_2iA))) | _3iB)
	goto _252

_251:
	if _3iB == int64(0) {
		goto _253
	}

	if _3iB >= int64(0) {
		goto _254
	}

	_op = uint8(int32(173) - int32(_op))
	_3iB = func() int64 {
		if _3iB > int64(-64) {
			return -_3iB
		}
		return int64(64)
	}()
_254:
	if _3iB < int64(64) {
		goto _255
	}

	*(*int64)(unsafe.Pointer(_2iA)) = int64(func() int32 {
		if ((*(*int64)(unsafe.Pointer(_2iA))) >= int64(0)) || (int32(_op) == int32(86)) {
			return int32(0)
		}
		return int32(-1)
	}())
	goto _256

_255:
	crt.Xmemcpy(tls, _uA, _2iA, uint64(8))
	if int32(_op) != int32(86) {
		goto _257
	}

	*(*uint64)(unsafe.Pointer(_uA)) = uint64((*(*uint64)(unsafe.Pointer(_uA))) << uint32(_3iB))
	goto _258

_257:
	*(*uint64)(unsafe.Pointer(_uA)) = uint64((*(*uint64)(unsafe.Pointer(_uA))) >> uint32(_3iB))
	if (*(*int64)(unsafe.Pointer(_2iA))) >= int64(0) {
		goto _259
	}

	*(*uint64)(unsafe.Pointer(_uA)) = uint64((*(*uint64)(unsafe.Pointer(_uA))) | (uint64(18446744073709551615) << (uint(int64(64)-_3iB) % 64)))
_259:
_258:
	crt.Xmemcpy(tls, _2iA, _uA, uint64(8))
_256:
_253:
_252:
_250:
	*(*int64)(unsafe.Pointer(_pOut)) = *(*int64)(unsafe.Pointer(_2iA))
	*(*uint16)(unsafe.Pointer(_pOut + 8)) = uint16((int32(*(*uint16)(unsafe.Pointer(_pOut + 8))) & int32(-49664)) | int32(0x4))
	goto _8

_42:
	_pIn1 = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))
	_656sqlite3VdbeMemIntegerify(tls, _pIn1)
	{
		p := &(*(*int64)(unsafe.Pointer(_pIn1)))
		*p = int64(int64(*p) + int64(*(*int32)(unsafe.Pointer(_pOp + 8))))
	}
	goto _8

_43:
	_pIn1 = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))
	if (int32(*(*uint16)(unsafe.Pointer(_pIn1 + 8))) & int32(0x4)) != int32(0) {
		goto _260
	}

	_657applyAffinity(tls, _pIn1, int8('C'), _encoding)
	if (int32(*(*uint16)(unsafe.Pointer(_pIn1 + 8))) & int32(0x4)) != int32(0) {
		goto _261
	}

	if (*(*int32)(unsafe.Pointer(_pOp + 8))) != int32(0) {
		goto _262
	}

	_rc = int32(20)
	goto _abort_due_to_error

	goto _263

_262:
	goto _jump_to_p2

_263:
_261:
_260:
	*(*uint16)(unsafe.Pointer(_pIn1 + 8)) = uint16((int32(*(*uint16)(unsafe.Pointer(_pIn1 + 8))) & int32(-49664)) | int32(0x4))
	goto _8

_44:
	_pIn1 = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))
	if (int32(*(*uint16)(unsafe.Pointer(_pIn1 + 8))) & int32(0x4)) == 0 {
		goto _264
	}

	_658sqlite3VdbeMemRealify(tls, _pIn1)
_264:
	goto _8

_45:
	_pIn1 = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))
	_rc = func() int32 {
		if int32(*(*uint16)(unsafe.Pointer(_pIn1 + 8)))&int32(0x4000) != 0 {
			return _442sqlite3VdbeMemExpandBlob(tls, _pIn1)
		}
		return int32(0)
	}()
	_659sqlite3VdbeMemCast(tls, _pIn1, uint8(*(*int32)(unsafe.Pointer(_pOp + 8))), _encoding)
	if _rc == 0 {
		goto _265
	}

	goto _abort_due_to_error

_265:
	goto _8

_46:
_47:
_48:
_49:
_50:
_51:
	_pIn1 = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))
	_pIn3 = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 12)))
	_flags1 = *(*uint16)(unsafe.Pointer(_pIn1 + 8))
	_flags3 = *(*uint16)(unsafe.Pointer(_pIn3 + 8))
	if ((int32(_flags1) | int32(_flags3)) & int32(0x1)) == 0 {
		goto _266
	}

	if (int32(*(*uint16)(unsafe.Pointer(_pOp + 2))) & int32(0x80)) == 0 {
		goto _268
	}

	if ((int32(_flags1)&int32(_flags3))&int32(0x1)) == int32(0) || (int32(_flags3)&int32(0x100)) != int32(0) {
		goto _270
	}

	_res = int32(0)
	goto _271

_270:
	_res = int32(1)
_271:
	goto _269

_268:
	if (int32(*(*uint16)(unsafe.Pointer(_pOp + 2))) & int32(0x20)) == 0 {
		goto _272
	}

	_pOut = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 8)))
	_iCompare = int32(1)
	*(*uint16)(unsafe.Pointer(_pOut + 8)) = uint16((int32(*(*uint16)(unsafe.Pointer(_pOut + 8))) & int32(-49664)) | int32(0x1))
	goto _273

_272:
	if (int32(*(*uint16)(unsafe.Pointer(_pOp + 2))) & int32(0x10)) == 0 {
		goto _274
	}

	goto _jump_to_p2

_274:
_273:
	goto _8

_269:
	goto _267

_266:
	_affinity = int8(int32(*(*uint16)(unsafe.Pointer(_pOp + 2))) & int32(0x47))
	if int32(_affinity) < int32('C') {
		goto _275
	}

	if ((int32(_flags1) | int32(_flags3)) & int32(0x2)) == 0 {
		goto _277
	}

	if (int32(_flags1) & int32(14)) != int32(0x2) {
		goto _278
	}

	_660applyNumericAffinity(tls, _pIn1, int32(0))
	_flags3 = *(*uint16)(unsafe.Pointer(_pIn3 + 8))
_278:
	if (int32(_flags3) & int32(14)) != int32(0x2) {
		goto _279
	}

	_660applyNumericAffinity(tls, _pIn3, int32(0))
_279:
_277:
	if ((int32(*(*uint16)(unsafe.Pointer(_pIn1 + 8))) & int32(*(*uint16)(unsafe.Pointer(_pIn3 + 8)))) & int32(0x4)) == int32(0) {
		goto _280
	}

	if (*(*int64)(unsafe.Pointer(_pIn3))) <= (*(*int64)(unsafe.Pointer(_pIn1))) {
		goto _281
	}

	_res = int32(1)
	goto _compare_op

_281:
	if (*(*int64)(unsafe.Pointer(_pIn3))) >= (*(*int64)(unsafe.Pointer(_pIn1))) {
		goto _282
	}

	_res = int32(-1)
	goto _compare_op

_282:
	_res = int32(0)
	goto _compare_op

_280:
	goto _276

_275:
	if int32(_affinity) != int32('B') {
		goto _283
	}

	if (int32(_flags1)&int32(0x2)) != int32(0) || (int32(_flags1)&int32(12)) == int32(0) {
		goto _284
	}

	_650sqlite3VdbeMemStringify(tls, _pIn1, _encoding, uint8(1))
	_flags1 = uint16((int32(*(*uint16)(unsafe.Pointer(_pIn1 + 8))) & int32(-49664)) | (int32(_flags1) & int32(0xc1ff)))

_284:
	if (int32(_flags3)&int32(0x2)) != int32(0) || (int32(_flags3)&int32(12)) == int32(0) {
		goto _285
	}

	_650sqlite3VdbeMemStringify(tls, _pIn3, _encoding, uint8(1))
	_flags3 = uint16((int32(*(*uint16)(unsafe.Pointer(_pIn3 + 8))) & int32(-49664)) | (int32(_flags3) & int32(0xc1ff)))
_285:
_283:
_276:
	_res = _661sqlite3MemCompare(tls, _pIn3, _pIn1, *(*uintptr)(unsafe.Pointer(_pOp + 16)))
_267:
	goto _compare_op
_compare_op:
	if _res >= int32(0) {
		goto _286
	}

	_res2 = int32(*(*uint8)(unsafe.Pointer(_631aLTb + uintptr(int32(*(*uint8)(unsafe.Pointer(_pOp)))-int32(52)))))
	goto _287

_286:
	if _res != int32(0) {
		goto _288
	}

	_res2 = int32(*(*uint8)(unsafe.Pointer(_632aEQb + uintptr(int32(*(*uint8)(unsafe.Pointer(_pOp)))-int32(52)))))
	goto _289

_288:
	_res2 = int32(*(*uint8)(unsafe.Pointer(_633aGTb + uintptr(int32(*(*uint8)(unsafe.Pointer(_pOp)))-int32(52)))))
_289:
_287:
	*(*uint16)(unsafe.Pointer(_pIn1 + 8)) = _flags1

	*(*uint16)(unsafe.Pointer(_pIn3 + 8)) = _flags3
	if (int32(*(*uint16)(unsafe.Pointer(_pOp + 2))) & int32(0x20)) == 0 {
		goto _290
	}

	_pOut = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 8)))
	_iCompare = _res
	if (int32(*(*uint16)(unsafe.Pointer(_pOp + 2))) & int32(0x8)) == int32(0) {
		goto _292
	}

	if bool2int(int32(*(*uint8)(unsafe.Pointer(_pOp))) == int32(53)) != _res2 {
		goto _293
	}

	goto _8

_293:
_292:
	*(*uint16)(unsafe.Pointer(_pOut + 8)) = uint16((int32(*(*uint16)(unsafe.Pointer(_pOut + 8))) & int32(-49664)) | int32(0x4))
	*(*int64)(unsafe.Pointer(_pOut)) = int64(_res2)
	goto _291

_290:
	if _res2 == 0 {
		goto _294
	}

	goto _jump_to_p2

_294:
_291:
	goto _8

_52:
	if _iCompare == int32(0) {
		goto _295
	}

	goto _jump_to_p2

_295:
	goto _8

_53:
	goto _8

_54:
	if (int32(*(*uint16)(unsafe.Pointer(_pOp + 2))) & int32(0x1)) != int32(0) {
		goto _296
	}

	_aPermute = null
	goto _297

_296:
	_aPermute = (*(*uintptr)(unsafe.Pointer((_pOp - 24) + 16))) + 4*uintptr(1)

_297:
	_4n = *(*int32)(unsafe.Pointer(_pOp + 12))
	_pKeyInfo = *(*uintptr)(unsafe.Pointer(_pOp + 16))

	_6p1 = *(*int32)(unsafe.Pointer(_pOp + 4))
	_7p2 = *(*int32)(unsafe.Pointer(_pOp + 8))
	_5i = int32(0)
_298:
	if _5i >= _4n {
		goto _300
	}

	_idx = func() int32 {
		if _aPermute != 0 {
			return *(*int32)(unsafe.Pointer(_aPermute + 4*uintptr(_5i)))
		}
		return _5i
	}()

	_pColl = *(*uintptr)(unsafe.Pointer((_pKeyInfo + 32) + 8*uintptr(_5i)))
	_bRev = int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pKeyInfo + 24))) + uintptr(_5i))))
	_iCompare = _661sqlite3MemCompare(tls, _aMem+56*uintptr(_6p1+_idx), _aMem+56*uintptr(_7p2+_idx), _pColl)
	if _iCompare == 0 {
		goto _301
	}

	if _bRev == 0 {
		goto _302
	}

	_iCompare = -_iCompare
_302:
	goto _300

_301:
	_5i++
	goto _298

_300:
	goto _8

_55:
	if _iCompare >= int32(0) {
		goto _303
	}

	_pOp = _aOp + 24*uintptr((*(*int32)(unsafe.Pointer(_pOp + 4)))-int32(1))
	goto _304

_303:
	if _iCompare != int32(0) {
		goto _305
	}

	_pOp = _aOp + 24*uintptr((*(*int32)(unsafe.Pointer(_pOp + 8)))-int32(1))
	goto _306

_305:
	_pOp = _aOp + 24*uintptr((*(*int32)(unsafe.Pointer(_pOp + 12)))-int32(1))
_306:
_304:
	goto _8

_56:
_57:
	_pIn1 = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))
	if (int32(*(*uint16)(unsafe.Pointer(_pIn1 + 8))) & int32(0x1)) == 0 {
		goto _307
	}

	_v1 = int32(2)
	goto _308

_307:
	_v1 = bool2int(_399sqlite3VdbeIntValue(tls, _pIn1) != int64(0))
_308:
	_pIn2 = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 8)))
	if (int32(*(*uint16)(unsafe.Pointer(_pIn2 + 8))) & int32(0x1)) == 0 {
		goto _309
	}

	_v2 = int32(2)
	goto _310

_309:
	_v2 = bool2int(_399sqlite3VdbeIntValue(tls, _pIn2) != int64(0))
_310:
	if int32(*(*uint8)(unsafe.Pointer(_pOp))) != int32(44) {
		goto _311
	}

	_v1 = int32(*(*uint8)(unsafe.Pointer(_634and_logic + uintptr((_v1*int32(3))+_v2))))
	goto _312

_311:
	_v1 = int32(*(*uint8)(unsafe.Pointer(_635or_logic + uintptr((_v1*int32(3))+_v2))))
_312:
	_pOut = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 12)))
	if _v1 != int32(2) {
		goto _313
	}

	*(*uint16)(unsafe.Pointer(_pOut + 8)) = uint16((int32(*(*uint16)(unsafe.Pointer(_pOut + 8))) & int32(-49664)) | int32(0x1))
	goto _314

_313:
	*(*int64)(unsafe.Pointer(_pOut)) = int64(_v1)
	*(*uint16)(unsafe.Pointer(_pOut + 8)) = uint16((int32(*(*uint16)(unsafe.Pointer(_pOut + 8))) & int32(-49664)) | int32(0x4))
_314:
	goto _8

_58:
	_pIn1 = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))
	_pOut = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 8)))
	_643sqlite3VdbeMemSetNull(tls, _pOut)
	if (int32(*(*uint16)(unsafe.Pointer(_pIn1 + 8))) & int32(0x1)) != int32(0) {
		goto _315
	}

	*(*uint16)(unsafe.Pointer(_pOut + 8)) = uint16(0x4)
	*(*int64)(unsafe.Pointer(_pOut)) = int64(bool2int(_399sqlite3VdbeIntValue(tls, _pIn1) == 0))
_315:
	goto _8

_59:
	_pIn1 = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))
	_pOut = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 8)))
	_643sqlite3VdbeMemSetNull(tls, _pOut)
	if (int32(*(*uint16)(unsafe.Pointer(_pIn1 + 8))) & int32(0x1)) != int32(0) {
		goto _316
	}

	*(*uint16)(unsafe.Pointer(_pOut + 8)) = uint16(0x4)
	*(*int64)(unsafe.Pointer(_pOut)) = ^_399sqlite3VdbeIntValue(tls, _pIn1)
_316:
	goto _8

_60:
	if (*(*uintptr)(unsafe.Pointer(_p + 248))) == 0 {
		goto _317
	}

	_iAddr = uint32(int32(int64((_pOp - (*(*uintptr)(unsafe.Pointer(_p + 104)))) / 24)))
	if (int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 248))) + 48))) + uintptr(_iAddr/uint32(8))))) & (int32(1) << (uint(_iAddr&uint32(7)) % 32))) == int32(0) {
		goto _319
	}

	goto _jump_to_p2

_319:
	{
		p := &(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 248))) + 48))) + uintptr(_iAddr/uint32(8)))))
		*p = uint8(int32(*p) | (int32(1) << (uint(_iAddr&uint32(7)) % 32)))
	}
	goto _318

_317:
	if (*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_p + 104)) + 4))) != (*(*int32)(unsafe.Pointer(_pOp + 4))) {
		goto _320
	}

	goto _jump_to_p2

_320:
_318:
	*(*int32)(unsafe.Pointer(_pOp + 4)) = *(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_p + 104)) + 4))
	goto _8

_61:
_62:
	_pIn1 = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))
	if (int32(*(*uint16)(unsafe.Pointer(_pIn1 + 8))) & int32(0x1)) == 0 {
		goto _321
	}

	_c = *(*int32)(unsafe.Pointer(_pOp + 12))
	goto _322

_321:
	_c = bool2int(_441sqlite3VdbeRealValue(tls, _pIn1) != float64(0))
	if int32(*(*uint8)(unsafe.Pointer(_pOp))) != int32(22) {
		goto _323
	}

	_c = bool2int(_c == 0)
_323:
_322:
	if _c == 0 {
		goto _324
	}

	goto _jump_to_p2

_324:
	goto _8

_63:
	_pIn1 = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))
	if (int32(*(*uint16)(unsafe.Pointer(_pIn1 + 8))) & int32(0x1)) == int32(0) {
		goto _325
	}

	goto _jump_to_p2

_325:
	goto _8

_64:
	_pIn1 = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))
	if (int32(*(*uint16)(unsafe.Pointer(_pIn1 + 8))) & int32(0x1)) != int32(0) {
		goto _326
	}

	goto _jump_to_p2

_326:
	goto _8

_65:
	if (*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 152))) + 8*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))))) + 2))) == 0 {
		goto _327
	}

	_643sqlite3VdbeMemSetNull(tls, _aMem+56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 12))))
	goto _jump_to_p2

_327:
	goto _8

_66:
	*(*uintptr)(unsafe.Pointer(_pC)) = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 152))) + 8*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))))
	*(*int32)(unsafe.Pointer(_8p2)) = *(*int32)(unsafe.Pointer(_pOp + 8))
	_rc = _662sqlite3VdbeCursorMoveto(tls, _pC, _8p2)
	if _rc == 0 {
		goto _328
	}

	goto _abort_due_to_error

_328:
	_pDest = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 12)))

	_aOffset = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pC))) + 88))

	if (*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pC))) + 32))) == (*(*uint32)(unsafe.Pointer(_p + 48))) {
		goto _329
	}

	if (*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pC))) + 2))) == 0 {
		goto _330
	}

	if int32(*(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pC))))) != int32(3) {
		goto _332
	}

	_pReg = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pC))) + 36)))

	*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pC))) + 104)) = set25(&(*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pC))) + 108))), uint32(*(*int32)(unsafe.Pointer(_pReg + 12))))
	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pC))) + 96)) = *(*uintptr)(unsafe.Pointer(_pReg + 16))
	goto _333

_332:
	_643sqlite3VdbeMemSetNull(tls, _pDest)
	goto _op_column_out

_333:
	goto _331

_330:
	_pCrsr = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pC))) + 48))

	*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pC))) + 104)) = _663sqlite3BtreePayloadSize(tls, _pCrsr)
	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pC))) + 96)) = _664sqlite3BtreePayloadFetch(tls, _pCrsr, (*(*uintptr)(unsafe.Pointer(_pC)))+108)

	if (*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pC))) + 104))) <= uint32(*(*int32)(unsafe.Pointer(_db + 124))) {
		goto _334
	}

	goto _too_big

_334:
_331:
	*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pC))) + 32)) = *(*uint32)(unsafe.Pointer(_p + 48))
	*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pC))) + 64)) = uint32(uint8(func() int32 {
		if int32(*(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pC))) + 96))))) < int32(0x80) {
			return func() int32 {
				*(*uint32)(unsafe.Pointer(_aOffset)) = uint32(*(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pC))) + 96)))))
				return int32(1)
			}()
		}
		return int32(_665sqlite3GetVarint32(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pC))) + 96)), _aOffset))
	}()))
	*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pC))) + 74)) = uint16(0)
	if (*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pC))) + 108))) >= (*(*uint32)(unsafe.Pointer(_aOffset))) {
		goto _335
	}

	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pC))) + 96)) = null
	*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pC))) + 108)) = uint32(0)
	if (*(*uint32)(unsafe.Pointer(_aOffset))) <= uint32(98307) && (*(*uint32)(unsafe.Pointer(_aOffset))) <= (*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pC))) + 104))) {
		goto _337
	}

	goto _op_column_corrupt

_337:
	goto _336

_335:
	_zData = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pC))) + 96))

	goto _op_column_read_header

_336:
_329:
	if int32(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pC))) + 74))) > (*(*int32)(unsafe.Pointer(_8p2))) {
		goto _338
	}

	if (*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pC))) + 64))) >= (*(*uint32)(unsafe.Pointer(_aOffset))) {
		goto _340
	}

	if (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pC))) + 96))) != 0 {
		goto _342
	}

	crt.Xmemset(tls, _sMem, int32(0), uint64(56))
	_rc = _666sqlite3VdbeMemFromBtree(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pC))) + 48)), uint32(0), *(*uint32)(unsafe.Pointer(_aOffset)), _sMem)
	if _rc == int32(0) {
		goto _344
	}

	goto _abort_due_to_error

_344:
	_zData = *(*uintptr)(unsafe.Pointer(_sMem + 16))
	goto _343

_342:
	_zData = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pC))) + 96))
_343:
	goto _op_column_read_header
_op_column_read_header:
	_9i = int32(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pC))) + 74)))
	_offset64 = uint64(*(*uint32)(unsafe.Pointer(_aOffset + 4*uintptr(_9i))))
	_zHdr = _zData + uintptr(*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pC))) + 64)))
	_zEndHdr = _zData + uintptr(*(*uint32)(unsafe.Pointer(_aOffset)))
_345:
	if set25(&(*(*uint32)(unsafe.Pointer(_t))), uint32(*(*uint8)(unsafe.Pointer(_zHdr)))) >= uint32(0x80) {
		goto _348
	}

	_zHdr++
	_offset64 = uint64(_offset64 + uint64(_667sqlite3VdbeOneByteSerialTypeLen(tls, uint8(*(*uint32)(unsafe.Pointer(_t))))))
	goto _349

_348:
	_zHdr += uintptr(_665sqlite3GetVarint32(tls, _zHdr, _t))
	_offset64 = uint64(_offset64 + uint64(_668sqlite3VdbeSerialTypeLen(tls, *(*uint32)(unsafe.Pointer(_t)))))
_349:
	*(*uint32)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pC))) + 112) + 4*uintptr(postinc7(&_9i)))) = *(*uint32)(unsafe.Pointer(_t))
	*(*uint32)(unsafe.Pointer(_aOffset + 4*uintptr(_9i))) = uint32(_offset64 & uint64(0xffffffff))
	if (_9i <= (*(*int32)(unsafe.Pointer(_8p2)))) && (_zHdr < _zEndHdr) {
		goto _345
	}

	if (_zHdr < _zEndHdr || _zHdr <= _zEndHdr && _offset64 == uint64(*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pC))) + 104)))) && _offset64 <= uint64(*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pC))) + 104))) {
		goto _350
	}

	if (*(*uint32)(unsafe.Pointer(_aOffset))) != uint32(0) {
		goto _351
	}

	_9i = int32(0)
	_zHdr = _zEndHdr
	goto _352

_351:
	if (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pC))) + 96))) != 0 {
		goto _353
	}

	_397sqlite3VdbeMemRelease(tls, _sMem)
_353:
	goto _op_column_corrupt

_352:
_350:
	*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pC))) + 74)) = uint16(_9i)
	*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pC))) + 64)) = uint32(int64(_zHdr - _zData))
	if (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pC))) + 96))) != 0 {
		goto _354
	}

	_397sqlite3VdbeMemRelease(tls, _sMem)
_354:
	goto _341

_340:
	*(*uint32)(unsafe.Pointer(_t)) = uint32(0)
_341:
	if int32(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pC))) + 74))) > (*(*int32)(unsafe.Pointer(_8p2))) {
		goto _355
	}

	if int32(*(*int8)(unsafe.Pointer(_pOp + 1))) != int32(-11) {
		goto _356
	}

	_645sqlite3VdbeMemShallowCopy(tls, _pDest, *(*uintptr)(unsafe.Pointer(_pOp + 16)), int32(0x800))
	goto _357

_356:
	_643sqlite3VdbeMemSetNull(tls, _pDest)
_357:
	goto _op_column_out

_355:
	goto _339

_338:
	*(*uint32)(unsafe.Pointer(_t)) = *(*uint32)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pC))) + 112) + 4*uintptr(*(*int32)(unsafe.Pointer(_8p2)))))
_339:
	if (int32(*(*uint16)(unsafe.Pointer(_pDest + 8))) & int32(9312)) == int32(0) {
		goto _358
	}

	_643sqlite3VdbeMemSetNull(tls, _pDest)
_358:
	if (*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pC))) + 108))) < (*(*uint32)(unsafe.Pointer(_aOffset + 4*uintptr((*(*int32)(unsafe.Pointer(_8p2)))+int32(1))))) {
		goto _359
	}

	_zData = (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pC))) + 96))) + uintptr(*(*uint32)(unsafe.Pointer(_aOffset + 4*uintptr(*(*int32)(unsafe.Pointer(_8p2))))))
	if (*(*uint32)(unsafe.Pointer(_t))) >= uint32(12) {
		goto _361
	}

	_669sqlite3VdbeSerialGet(tls, _zData, *(*uint32)(unsafe.Pointer(_t)), _pDest)
	goto _362

_361:
	*(*int32)(unsafe.Pointer(_pDest + 12)) = set5(&_len, int32(((*(*uint32)(unsafe.Pointer(_t)))-uint32(12))/uint32(2)))
	*(*uint8)(unsafe.Pointer(_pDest + 10)) = _encoding
	if (*(*int32)(unsafe.Pointer(_pDest + 32))) >= (_len + int32(2)) {
		goto _363
	}

	*(*uint16)(unsafe.Pointer(_pDest + 8)) = uint16(0x1)
	if _627sqlite3VdbeMemGrow(tls, _pDest, _len+int32(2), int32(0)) == 0 {
		goto _365
	}

	goto _no_mem

_365:
	goto _364

_363:
	*(*uintptr)(unsafe.Pointer(_pDest + 16)) = *(*uintptr)(unsafe.Pointer(_pDest + 24))
_364:
	crt.Xmemcpy(tls, *(*uintptr)(unsafe.Pointer(_pDest + 16)), _zData, uint64(_len))
	*(*int8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pDest + 16))) + uintptr(_len))) = int8(0)
	*(*int8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pDest + 16))) + uintptr(_len+int32(1)))) = int8(0)
	*(*uint16)(unsafe.Pointer(_pDest + 8)) = *(*uint16)(unsafe.Pointer(_636aFlag + 2*uintptr((*(*uint32)(unsafe.Pointer(_t)))&uint32(1))))
_362:
	goto _360

_359:
	*(*uint8)(unsafe.Pointer(_pDest + 10)) = _encoding
	if ((int32(*(*uint16)(unsafe.Pointer(_pOp + 2)))&int32(192)) == int32(0) || ((*(*uint32)(unsafe.Pointer(_t))) < uint32(12) || ((*(*uint32)(unsafe.Pointer(_t)))&uint32(1)) != uint32(0)) && (int32(*(*uint16)(unsafe.Pointer(_pOp + 2)))&int32(0x80)) == int32(0)) && set5(&_len, int32(_668sqlite3VdbeSerialTypeLen(tls, *(*uint32)(unsafe.Pointer(_t))))) != int32(0) {
		goto _366
	}

	_669sqlite3VdbeSerialGet(tls, _637aZero, *(*uint32)(unsafe.Pointer(_t)), _pDest)
	goto _367

_366:
	_rc = _666sqlite3VdbeMemFromBtree(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pC))) + 48)), *(*uint32)(unsafe.Pointer(_aOffset + 4*uintptr(*(*int32)(unsafe.Pointer(_8p2))))), uint32(_len), _pDest)
	if _rc == int32(0) {
		goto _368
	}

	goto _abort_due_to_error

_368:
	_669sqlite3VdbeSerialGet(tls, *(*uintptr)(unsafe.Pointer(_pDest + 16)), *(*uint32)(unsafe.Pointer(_t)), _pDest)
	{
		p := &(*(*uint16)(unsafe.Pointer(_pDest + 8)))
		*p = uint16(int32(*p) & int32(-4097))
	}
_367:
_360:
	goto _op_column_out
_op_column_out:
	goto _8

	goto _op_column_corrupt
_op_column_corrupt:
	if (*(*int32)(unsafe.Pointer(_aOp + 12))) <= int32(0) {
		goto _369
	}

	_pOp = _aOp + 24*uintptr((*(*int32)(unsafe.Pointer(_aOp + 12)))-int32(1))
	goto _8

	goto _370

_369:
	_rc = _556sqlite3CorruptError(tls, int32(81796))
	goto _abort_due_to_error

_370:
_67:
	_zAffinity = *(*uintptr)(unsafe.Pointer(_pOp + 16))

	_pIn1 = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))
_371:
	_657applyAffinity(tls, _pIn1, *(*int8)(unsafe.Pointer(postinc19(&_zAffinity))), _encoding)
	_pIn1 += 56
	if (*(*int8)(unsafe.Pointer(_zAffinity))) != 0 {
		goto _371
	}

	goto _8

_68:
	_nData = uint64(0)
	_nHdr = int32(0)
	_nZero = int64(0)
	_nField = *(*int32)(unsafe.Pointer(_pOp + 4))
	_11zAffinity = *(*uintptr)(unsafe.Pointer(_pOp + 16))

	_pData0 = _aMem + 56*uintptr(_nField)
	_nField = *(*int32)(unsafe.Pointer(_pOp + 8))
	_pLast = _pData0 + 56*uintptr(_nField-int32(1))
	_file_format = int32(*(*uint8)(unsafe.Pointer(_p + 191)))

	_pOut = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 12)))

	if _11zAffinity == 0 {
		goto _374
	}

	_pRec = _pData0
_375:
	_657applyAffinity(tls, postinc61(&_pRec), *(*int8)(unsafe.Pointer(postinc19(&_11zAffinity))), _encoding)

	if (*(*int8)(unsafe.Pointer(_11zAffinity))) != 0 {
		goto _375
	}

_374:
	_pRec = _pLast
_378:
	*(*uint32)(unsafe.Pointer(_pRec + 36)) = set25(&_serial_type, _670sqlite3VdbeSerialType(tls, _pRec, _file_format, _13len))
	if (int32(*(*uint16)(unsafe.Pointer(_pRec + 8))) & int32(0x4000)) == 0 {
		goto _381
	}

	if _nData == 0 {
		goto _382
	}

	if _442sqlite3VdbeMemExpandBlob(tls, _pRec) == 0 {
		goto _384
	}

	goto _no_mem

_384:
	goto _383

_382:
	_nZero = int64(_nZero + int64(*(*int32)(unsafe.Pointer(_pRec))))
	*(*uint32)(unsafe.Pointer(_13len)) = uint32((*(*uint32)(unsafe.Pointer(_13len))) - uint32(*(*int32)(unsafe.Pointer(_pRec))))
_383:
_381:
	_nData = uint64(_nData + uint64(*(*uint32)(unsafe.Pointer(_13len))))
	_nHdr = int32(_nHdr + func() int32 {
		if _serial_type <= uint32(127) {
			return int32(1)
		}
		return _671sqlite3VarintLen(tls, uint64(_serial_type))
	}())
	if _pRec != _pData0 {
		goto _385
	}

	goto _380

_385:
	_pRec -= 56
	if 1 != 0 {
		goto _378
	}

	goto _380

_380:
	if _nHdr > int32(126) {
		goto _386
	}

	_nHdr = int32(_nHdr + int32(1))
	goto _387

_386:
	_nVarint = _671sqlite3VarintLen(tls, uint64(_nHdr))
	_nHdr = int32(_nHdr + _nVarint)
	if _nVarint >= _671sqlite3VarintLen(tls, uint64(_nHdr)) {
		goto _388
	}

	_nHdr++
_388:
_387:
	_10nByte = int64(uint64(_nHdr) + _nData)
	if (_10nByte + _nZero) <= int64(*(*int32)(unsafe.Pointer(_db + 124))) {
		goto _389
	}

	goto _too_big

_389:
	if _628sqlite3VdbeMemClearAndResize(tls, _pOut, int32(_10nByte)) == 0 {
		goto _390
	}

	goto _no_mem

_390:
	_zNewRecord = *(*uintptr)(unsafe.Pointer(_pOut + 16))
	_12i = int32(uint8(func() int32 {
		if uint32(_nHdr) < uint32(0x80) {
			return func() int32 { *(*uint8)(unsafe.Pointer(_zNewRecord)) = uint8(_nHdr); return int32(1) }()
		}
		return _672sqlite3PutVarint(tls, _zNewRecord, uint64(_nHdr))
	}()))
	_j = _nHdr

	_pRec = _pData0
_391:
	_serial_type = *(*uint32)(unsafe.Pointer(_pRec + 36))
	_12i = int32(_12i + int32(uint8(func() int32 {
		if _serial_type < uint32(0x80) {
			return func() int32 {
				*(*uint8)(unsafe.Pointer(_zNewRecord + uintptr(_12i))) = uint8(_serial_type)
				return int32(1)
			}()
		}
		return _672sqlite3PutVarint(tls, _zNewRecord+uintptr(_12i), uint64(_serial_type))
	}())))
	_j = int32(uint32(_j) + _673sqlite3VdbeSerialPut(tls, _zNewRecord+uintptr(_j), _pRec, _serial_type))
	if preinc62(&_pRec) <= _pLast {
		goto _391
	}

	*(*int32)(unsafe.Pointer(_pOut + 12)) = int32(_10nByte)
	*(*uint16)(unsafe.Pointer(_pOut + 8)) = uint16(0x10)
	if _nZero == 0 {
		goto _394
	}

	*(*int32)(unsafe.Pointer(_pOut)) = int32(_nZero)
	{
		p := &(*(*uint16)(unsafe.Pointer(_pOut + 8)))
		*p = uint16(int32(*p) | int32(0x4000))
	}
_394:
	goto _8

_69:
	_14pCrsr = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 152))) + 8*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))))) + 48))

	*(*int64)(unsafe.Pointer(_nEntry)) = int64(0)
	_rc = _674sqlite3BtreeCount(tls, _14pCrsr, _nEntry)
	if _rc == 0 {
		goto _395
	}

	goto _abort_due_to_error

_395:
	_pOut = _642out2Prerelease(tls, _p, _pOp)
	*(*int64)(unsafe.Pointer(_pOut)) = *(*int64)(unsafe.Pointer(_nEntry))
	goto _8

_70:
	_15p1 = *(*int32)(unsafe.Pointer(_pOp + 4))
	_zName = *(*uintptr)(unsafe.Pointer(_pOp + 16))

	if _15p1 != int32(0) {
		goto _396
	}

	if (*(*int32)(unsafe.Pointer(_db + 192))) <= int32(0) {
		goto _398
	}

	_625sqlite3VdbeError(tls, _p, ts+18279 /* "cannot open savepoint - SQL stat..." */)
	_rc = int32(5)
	goto _399

_398:
	_nName = _211sqlite3Strlen30(tls, _zName)

	_rc = _675sqlite3VtabSavepoint(tls, _db, int32(0), (*(*int32)(unsafe.Pointer(_db + 648)))+(*(*int32)(unsafe.Pointer(_db + 644))))
	if _rc == int32(0) {
		goto _400
	}

	goto _abort_due_to_error

_400:
	_pNew = _373sqlite3DbMallocRawNN(tls, _db, uint64((uint64(32)+uint64(_nName))+uint64(1)))
	if _pNew == 0 {
		goto _401
	}

	*(*uintptr)(unsafe.Pointer(_pNew)) = _pNew + 32
	crt.Xmemcpy(tls, *(*uintptr)(unsafe.Pointer(_pNew)), _zName, uint64(_nName+int32(1)))
	if (*(*uint8)(unsafe.Pointer(_db + 95))) == 0 {
		goto _402
	}

	*(*uint8)(unsafe.Pointer(_db + 95)) = uint8(0)
	*(*uint8)(unsafe.Pointer(_db + 103)) = uint8(1)
	goto _403

_402:
	(*(*int32)(unsafe.Pointer(_db + 644)))++
_403:
	*(*uintptr)(unsafe.Pointer(_pNew + 24)) = *(*uintptr)(unsafe.Pointer(_db + 632))
	*(*uintptr)(unsafe.Pointer(_db + 632)) = _pNew
	*(*int64)(unsafe.Pointer(_pNew + 8)) = *(*int64)(unsafe.Pointer(_db + 656))
	*(*int64)(unsafe.Pointer(_pNew + 16)) = *(*int64)(unsafe.Pointer(_db + 664))
_401:
_399:
	goto _397

_396:
	_iSavepoint = int32(0)
	_pSavepoint = *(*uintptr)(unsafe.Pointer(_db + 632))
_404:
	if _pSavepoint == 0 || _110sqlite3StrICmp(tls, *(*uintptr)(unsafe.Pointer(_pSavepoint)), _zName) == 0 {
		goto _406
	}

	_iSavepoint++
	_pSavepoint = *(*uintptr)(unsafe.Pointer(_pSavepoint + 24))
	goto _404

_406:
	if _pSavepoint != 0 {
		goto _407
	}

	_625sqlite3VdbeError(tls, _p, ts+18330 /* "no such savepoint: %s" */, _zName)
	_rc = int32(1)
	goto _408

_407:
	if (*(*int32)(unsafe.Pointer(_db + 192))) <= int32(0) || _15p1 != int32(1) {
		goto _409
	}

	_625sqlite3VdbeError(tls, _p, ts+18352 /* "cannot release savepoint - SQL s..." */)
	_rc = int32(5)
	goto _410

_409:
	_isTransaction = bool2int(((*(*uintptr)(unsafe.Pointer(_pSavepoint + 24))) == 0) && ((*(*uint8)(unsafe.Pointer(_db + 103))) != 0))
	if _isTransaction == 0 || _15p1 != int32(1) {
		goto _411
	}

	if set5(&_rc, _647sqlite3VdbeCheckFk(tls, _p, int32(1))) == int32(0) {
		goto _413
	}

	goto _vdbe_return

_413:
	*(*uint8)(unsafe.Pointer(_db + 95)) = uint8(1)
	if _398sqlite3VdbeHalt(tls, _p) != int32(5) {
		goto _414
	}

	*(*int32)(unsafe.Pointer(_p + 52)) = int32(int64((_pOp - _aOp) / 24))
	*(*uint8)(unsafe.Pointer(_db + 95)) = uint8(0)
	*(*int32)(unsafe.Pointer(_p + 56)) = set5(&_rc, int32(5))
	goto _vdbe_return

_414:
	*(*uint8)(unsafe.Pointer(_db + 103)) = uint8(0)
	_rc = *(*int32)(unsafe.Pointer(_p + 56))
	goto _412

_411:
	_iSavepoint = ((*(*int32)(unsafe.Pointer(_db + 644))) - _iSavepoint) - int32(1)
	if _15p1 != int32(2) {
		goto _415
	}

	_isSchemaChange = bool2int(((*(*uint32)(unsafe.Pointer(_db + 44))) & uint32(0x1)) != uint32(0))
	_ii = int32(0)
_417:
	if _ii >= (*(*int32)(unsafe.Pointer(_db + 40))) {
		goto _419
	}

	_rc = _361sqlite3BtreeTripAllCursors(tls, *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_ii)) + 8)), int32(516), bool2int(_isSchemaChange == int32(0)))
	if _rc == int32(0) {
		goto _420
	}

	goto _abort_due_to_error

_420:
	_ii++
	goto _417

_419:
	goto _416

_415:
	_isSchemaChange = int32(0)
_416:
	_ii = int32(0)
_421:
	if _ii >= (*(*int32)(unsafe.Pointer(_db + 40))) {
		goto _423
	}

	_rc = _676sqlite3BtreeSavepoint(tls, *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_ii)) + 8)), _15p1, _iSavepoint)
	if _rc == int32(0) {
		goto _424
	}

	goto _abort_due_to_error

_424:
	_ii++
	goto _421

_423:
	if _isSchemaChange == 0 {
		goto _425
	}

	_132sqlite3ExpirePreparedStatements(tls, _db)
	_157sqlite3ResetAllSchemasOfConnection(tls, _db)
	{
		p := &(*(*uint32)(unsafe.Pointer(_db + 44)))
		*p = uint32(uint32(*p) | uint32(0x1))
	}
_425:
_412:
_426:
	if (*(*uintptr)(unsafe.Pointer(_db + 632))) == _pSavepoint {
		goto _427
	}

	_pTmp = *(*uintptr)(unsafe.Pointer(_db + 632))
	*(*uintptr)(unsafe.Pointer(_db + 632)) = *(*uintptr)(unsafe.Pointer(_pTmp + 24))
	_181sqlite3DbFree(tls, _db, _pTmp)
	(*(*int32)(unsafe.Pointer(_db + 644)))--
	goto _426

_427:
	if _15p1 != int32(1) {
		goto _428
	}

	*(*uintptr)(unsafe.Pointer(_db + 632)) = *(*uintptr)(unsafe.Pointer(_pSavepoint + 24))
	_181sqlite3DbFree(tls, _db, _pSavepoint)
	if _isTransaction != 0 {
		goto _430
	}

	(*(*int32)(unsafe.Pointer(_db + 644)))--
_430:
	goto _429

_428:
	*(*int64)(unsafe.Pointer(_db + 656)) = *(*int64)(unsafe.Pointer(_pSavepoint + 8))
	*(*int64)(unsafe.Pointer(_db + 664)) = *(*int64)(unsafe.Pointer(_pSavepoint + 16))
_429:
	if _isTransaction != 0 && _15p1 != int32(2) {
		goto _431
	}

	_rc = _675sqlite3VtabSavepoint(tls, _db, _15p1, _iSavepoint)
	if _rc == int32(0) {
		goto _432
	}

	goto _abort_due_to_error

_432:
_431:
_410:
_408:
_397:
	if _rc == 0 {
		goto _433
	}

	goto _abort_due_to_error

_433:
	goto _8

_71:
	_desiredAutoCommit = *(*int32)(unsafe.Pointer(_pOp + 4))
	_iRollback = *(*int32)(unsafe.Pointer(_pOp + 8))

	if _desiredAutoCommit == int32(*(*uint8)(unsafe.Pointer(_db + 95))) {
		goto _434
	}

	if _iRollback == 0 {
		goto _436
	}

	_365sqlite3RollbackAll(tls, _db, int32(516))
	*(*uint8)(unsafe.Pointer(_db + 95)) = uint8(1)
	goto _437

_436:
	if _desiredAutoCommit == 0 || (*(*int32)(unsafe.Pointer(_db + 192))) <= int32(0) {
		goto _438
	}

	_625sqlite3VdbeError(tls, _p, ts+18406 /* "cannot commit transaction - SQL ..." */)
	_rc = int32(5)
	goto _abort_due_to_error

	goto _439

_438:
	if set5(&_rc, _647sqlite3VdbeCheckFk(tls, _p, int32(1))) == int32(0) {
		goto _440
	}

	goto _vdbe_return

	goto _441

_440:
	*(*uint8)(unsafe.Pointer(_db + 95)) = uint8(_desiredAutoCommit)
_441:
_439:
_437:
	if _398sqlite3VdbeHalt(tls, _p) != int32(5) {
		goto _442
	}

	*(*int32)(unsafe.Pointer(_p + 52)) = int32(int64((_pOp - _aOp) / 24))
	*(*uint8)(unsafe.Pointer(_db + 95)) = uint8(int32(1) - _desiredAutoCommit)
	*(*int32)(unsafe.Pointer(_p + 56)) = set5(&_rc, int32(5))
	goto _vdbe_return

_442:
	_366sqlite3CloseSavepoints(tls, _db)
	if (*(*int32)(unsafe.Pointer(_p + 56))) != int32(0) {
		goto _443
	}

	_rc = int32(101)
	goto _444

_443:
	_rc = int32(1)
_444:
	goto _vdbe_return

	goto _435

_434:
	_625sqlite3VdbeError(tls, _p, func() uintptr {
		if _desiredAutoCommit == 0 {
			return ts + 18461 /* "cannot start a transaction withi..." */
		}
		return func() uintptr {
			if _iRollback != 0 {
				return ts + 18509 /* "cannot rollback - no transaction..." */
			}
			return ts + 18552 /* "cannot commit - no transaction i..." */
		}()
	}())
	_rc = int32(1)
	goto _abort_due_to_error

_435:
	goto _8

_72:
	if (*(*int32)(unsafe.Pointer(_pOp + 8))) == 0 || ((*(*uint32)(unsafe.Pointer(_db + 48)))&uint32(0x100000)) == uint32(0) {
		goto _445
	}

	_rc = int32(8)
	goto _abort_due_to_error

_445:
	_pBt = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))) + 8))
	if _pBt == 0 {
		goto _446
	}

	_rc = _143sqlite3BtreeBeginTrans(tls, _pBt, *(*int32)(unsafe.Pointer(_pOp + 8)))
	if _rc == int32(0) {
		goto _448
	}

	if (_rc & int32(0xff)) != int32(5) {
		goto _449
	}

	*(*int32)(unsafe.Pointer(_p + 52)) = int32(int64((_pOp - _aOp) / 24))
	*(*int32)(unsafe.Pointer(_p + 56)) = _rc
	goto _vdbe_return

_449:
	goto _abort_due_to_error

_448:
	if (*(*int32)(unsafe.Pointer(_pOp + 8))) == 0 || (uint32((*(*uint16)(unsafe.Pointer(_p + 194)))>>6)<<31>>31) == 0 || int32(*(*uint8)(unsafe.Pointer(_db + 95))) != int32(0) && (*(*int32)(unsafe.Pointer(_db + 188))) <= int32(1) {
		goto _450
	}

	if (*(*int32)(unsafe.Pointer(_p + 64))) != int32(0) {
		goto _451
	}

	(*(*int32)(unsafe.Pointer(_db + 648)))++
	*(*int32)(unsafe.Pointer(_p + 64)) = (*(*int32)(unsafe.Pointer(_db + 644))) + (*(*int32)(unsafe.Pointer(_db + 648)))
_451:
	_rc = _675sqlite3VtabSavepoint(tls, _db, int32(0), (*(*int32)(unsafe.Pointer(_p + 64)))-int32(1))
	if _rc != int32(0) {
		goto _452
	}

	_rc = _677sqlite3BtreeBeginStmt(tls, _pBt, *(*int32)(unsafe.Pointer(_p + 64)))
_452:
	*(*int64)(unsafe.Pointer(_p + 88)) = *(*int64)(unsafe.Pointer(_db + 656))
	*(*int64)(unsafe.Pointer(_p + 96)) = *(*int64)(unsafe.Pointer(_db + 664))
_450:
	_145sqlite3BtreeGetMeta(tls, _pBt, int32(1), _iMeta)
	_iGen = *(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))) + 24))) + 4))
	goto _447

_446:
	_iGen = set5(&(*(*int32)(unsafe.Pointer(_iMeta))), int32(0))
_447:
	if (*(*uint16)(unsafe.Pointer(_pOp + 2))) == 0 || (*(*int32)(unsafe.Pointer(_iMeta))) == (*(*int32)(unsafe.Pointer(_pOp + 12))) && _iGen == (*(*int32)(unsafe.Pointer(_pOp + 16))) {
		goto _453
	}

	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 144)))
	*(*uintptr)(unsafe.Pointer(_p + 144)) = _183sqlite3DbStrDup(tls, _db, ts+17700 /* "database schema has changed" */)
	if (*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))) + 24))))) == (*(*int32)(unsafe.Pointer(_iMeta))) {
		goto _454
	}

	_382sqlite3ResetOneSchema(tls, _db, *(*int32)(unsafe.Pointer(_pOp + 4)))
_454:
	set42b(&(*(*uint16)(unsafe.Pointer(_p + 194))), uint32(1))
	_rc = int32(17)
_453:
	if _rc == 0 {
		goto _455
	}

	goto _abort_due_to_error

_455:
	goto _8

_73:
	_iDb = *(*int32)(unsafe.Pointer(_pOp + 4))
	_iCookie = *(*int32)(unsafe.Pointer(_pOp + 12))

	_145sqlite3BtreeGetMeta(tls, *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)) + 8)), _iCookie, _16iMeta)
	_pOut = _642out2Prerelease(tls, _p, _pOp)
	*(*int64)(unsafe.Pointer(_pOut)) = int64(*(*int32)(unsafe.Pointer(_16iMeta)))
	goto _8

_74:
	_pDb = (*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))

	_rc = _156sqlite3BtreeUpdateMeta(tls, *(*uintptr)(unsafe.Pointer(_pDb + 8)), *(*int32)(unsafe.Pointer(_pOp + 8)), uint32(*(*int32)(unsafe.Pointer(_pOp + 12))))
	if (*(*int32)(unsafe.Pointer(_pOp + 8))) != int32(1) {
		goto _456
	}

	*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pDb + 24)))) = *(*int32)(unsafe.Pointer(_pOp + 12))
	{
		p := &(*(*uint32)(unsafe.Pointer(_db + 44)))
		*p = uint32(uint32(*p) | uint32(0x1))
	}
	goto _457

_456:
	if (*(*int32)(unsafe.Pointer(_pOp + 8))) != int32(2) {
		goto _458
	}

	*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pDb + 24))) + 112)) = uint8(*(*int32)(unsafe.Pointer(_pOp + 12)))
_458:
_457:
	if (*(*int32)(unsafe.Pointer(_pOp + 4))) != int32(1) {
		goto _459
	}

	_132sqlite3ExpirePreparedStatements(tls, _db)
	set42b(&(*(*uint16)(unsafe.Pointer(_p + 194))), uint32(0))
_459:
	if _rc == 0 {
		goto _460
	}

	goto _abort_due_to_error

_460:
	goto _8

_75:
	_pCur = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 152))) + 8*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))))
	if _pCur == 0 || (*(*uint32)(unsafe.Pointer(_pCur + 68))) != uint32(*(*int32)(unsafe.Pointer(_pOp + 8))) {
		goto _461
	}

	goto _open_cursor_set_hints

_461:
_76:
_77:
	if (uint32(*(*uint16)(unsafe.Pointer(_p + 194))) << 31 >> 31) == 0 {
		goto _462
	}

	_rc = int32(516)
	goto _abort_due_to_error

_462:
	_17nField = int32(0)
	_18pKeyInfo = null
	_19p2 = *(*int32)(unsafe.Pointer(_pOp + 8))
	_20iDb = *(*int32)(unsafe.Pointer(_pOp + 12))

	_21pDb = (*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_20iDb)
	_pX = *(*uintptr)(unsafe.Pointer(_21pDb + 8))

	if int32(*(*uint8)(unsafe.Pointer(_pOp))) != int32(105) {
		goto _463
	}

	_wrFlag = int32(0x4) | (int32(*(*uint16)(unsafe.Pointer(_pOp + 2))) & int32(0x8))

	if int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_21pDb + 24))) + 112))) >= int32(*(*uint8)(unsafe.Pointer(_p + 191))) {
		goto _465
	}

	*(*uint8)(unsafe.Pointer(_p + 191)) = *(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_21pDb + 24))) + 112))
_465:
	goto _464

_463:
	_wrFlag = int32(0)
_464:
	if (int32(*(*uint16)(unsafe.Pointer(_pOp + 2))) & int32(0x10)) == 0 {
		goto _466
	}

	_pIn2 = _aMem + 56*uintptr(_19p2)

	_656sqlite3VdbeMemIntegerify(tls, _pIn2)
	_19p2 = int32(*(*int64)(unsafe.Pointer(_pIn2)))

_466:
	if int32(*(*int8)(unsafe.Pointer(_pOp + 1))) != int32(-9) {
		goto _467
	}

	_18pKeyInfo = *(*uintptr)(unsafe.Pointer(_pOp + 16))

	_17nField = int32(*(*uint16)(unsafe.Pointer(_18pKeyInfo + 8)))
	goto _468

_467:
	if int32(*(*int8)(unsafe.Pointer(_pOp + 1))) != int32(-3) {
		goto _469
	}

	_17nField = *(*int32)(unsafe.Pointer(_pOp + 16))
_469:
_468:
	_pCur = _678allocateCursor(tls, _p, *(*int32)(unsafe.Pointer(_pOp + 4)), _17nField, _20iDb, uint8(0))
	if _pCur != 0 {
		goto _470
	}

	goto _no_mem

_470:
	*(*uint8)(unsafe.Pointer(_pCur + 2)) = uint8(1)
	set63b(&(*(*uint8)(unsafe.Pointer(_pCur + 5))), uint32(1))
	*(*uint32)(unsafe.Pointer(_pCur + 68)) = uint32(_19p2)
	_rc = _679sqlite3BtreeCursor(tls, _pX, _19p2, _wrFlag, _18pKeyInfo, *(*uintptr)(unsafe.Pointer(_pCur + 48)))
	*(*uintptr)(unsafe.Pointer(_pCur + 56)) = _18pKeyInfo
	*(*uint8)(unsafe.Pointer(_pCur + 4)) = uint8(bool2int(int32(*(*int8)(unsafe.Pointer(_pOp + 1))) != int32(-9)))
	goto _open_cursor_set_hints
_open_cursor_set_hints:
	_680sqlite3BtreeCursorHintFlags(tls, *(*uintptr)(unsafe.Pointer(_pCur + 48)), uint32(int32(*(*uint16)(unsafe.Pointer(_pOp + 2)))&int32(3)))
	if _rc == 0 {
		goto _471
	}

	goto _abort_due_to_error

_471:
	goto _8

_78:
	_pOrig = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 152))) + 8*uintptr(*(*int32)(unsafe.Pointer(_pOp + 8)))))

	_pCx = _678allocateCursor(tls, _p, *(*int32)(unsafe.Pointer(_pOp + 4)), int32(*(*int16)(unsafe.Pointer(_pOrig + 72))), int32(-1), uint8(0))
	if _pCx != 0 {
		goto _472
	}

	goto _no_mem

_472:
	*(*uint8)(unsafe.Pointer(_pCx + 2)) = uint8(1)
	set64b(&(*(*uint8)(unsafe.Pointer(_pCx + 5))), uint32(1))
	*(*uintptr)(unsafe.Pointer(_pCx + 56)) = *(*uintptr)(unsafe.Pointer(_pOrig + 56))
	*(*uint8)(unsafe.Pointer(_pCx + 4)) = *(*uint8)(unsafe.Pointer(_pOrig + 4))
	_rc = _679sqlite3BtreeCursor(tls, *(*uintptr)(unsafe.Pointer(_pOrig + 8)), int32(1), int32(0x4), *(*uintptr)(unsafe.Pointer(_pCx + 56)), *(*uintptr)(unsafe.Pointer(_pCx + 48)))

	goto _8

_79:
_80:
	_22pCx = _678allocateCursor(tls, _p, *(*int32)(unsafe.Pointer(_pOp + 4)), *(*int32)(unsafe.Pointer(_pOp + 8)), int32(-1), uint8(0))
	if _22pCx != 0 {
		goto _473
	}

	goto _no_mem

_473:
	*(*uint8)(unsafe.Pointer(_22pCx + 2)) = uint8(1)
	set64b(&(*(*uint8)(unsafe.Pointer(_22pCx + 5))), uint32(1))
	_rc = _282sqlite3BtreeOpen(tls, *(*uintptr)(unsafe.Pointer(_db)), null, _db, _22pCx+8, int32(5)|int32(*(*uint16)(unsafe.Pointer(_pOp + 2))), _638vfsFlags)
	if _rc != int32(0) {
		goto _474
	}

	_rc = _143sqlite3BtreeBeginTrans(tls, *(*uintptr)(unsafe.Pointer(_22pCx + 8)), int32(1))
_474:
	if _rc != int32(0) {
		goto _475
	}

	if set4(&(*(*uintptr)(unsafe.Pointer(_22pCx + 56))), set4(&_23pKeyInfo, *(*uintptr)(unsafe.Pointer(_pOp + 16)))) == 0 {
		goto _476
	}

	_rc = _681sqlite3BtreeCreateTable(tls, *(*uintptr)(unsafe.Pointer(_22pCx + 8)), _pgno, int32(2)|int32(*(*uint16)(unsafe.Pointer(_pOp + 2))))
	if _rc != int32(0) {
		goto _478
	}

	_rc = _679sqlite3BtreeCursor(tls, *(*uintptr)(unsafe.Pointer(_22pCx + 8)), *(*int32)(unsafe.Pointer(_pgno)), int32(0x4), _23pKeyInfo, *(*uintptr)(unsafe.Pointer(_22pCx + 48)))
_478:
	*(*uint8)(unsafe.Pointer(_22pCx + 4)) = uint8(0)
	goto _477

_476:
	_rc = _679sqlite3BtreeCursor(tls, *(*uintptr)(unsafe.Pointer(_22pCx + 8)), int32(1), int32(0x4), null, *(*uintptr)(unsafe.Pointer(_22pCx + 48)))
	*(*uint8)(unsafe.Pointer(_22pCx + 4)) = uint8(1)
_477:
_475:
	if _rc == 0 {
		goto _479
	}

	goto _abort_due_to_error

_479:
	set63b(&(*(*uint8)(unsafe.Pointer(_22pCx + 5))), uint32(bool2int(int32(*(*uint16)(unsafe.Pointer(_pOp + 2))) != int32(8))))
	goto _8

_81:
	_24pCx = _678allocateCursor(tls, _p, *(*int32)(unsafe.Pointer(_pOp + 4)), *(*int32)(unsafe.Pointer(_pOp + 8)), int32(-1), uint8(1))
	if _24pCx != 0 {
		goto _480
	}

	goto _no_mem

_480:
	*(*uintptr)(unsafe.Pointer(_24pCx + 56)) = *(*uintptr)(unsafe.Pointer(_pOp + 16))

	_rc = _682sqlite3VdbeSorterInit(tls, _db, *(*int32)(unsafe.Pointer(_pOp + 12)), _24pCx)
	if _rc == 0 {
		goto _481
	}

	goto _abort_due_to_error

_481:
	goto _8

_82:
	_25pC = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 152))) + 8*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))))

	if postinc65(&(*(*int64)(unsafe.Pointer(_25pC + 16)))) != int64(0) {
		goto _482
	}

	goto _jump_to_p2

_482:
	goto _8

_83:
	_26pCx = _678allocateCursor(tls, _p, *(*int32)(unsafe.Pointer(_pOp + 4)), *(*int32)(unsafe.Pointer(_pOp + 12)), int32(-1), uint8(3))
	if _26pCx != 0 {
		goto _483
	}

	goto _no_mem

_483:
	*(*uint8)(unsafe.Pointer(_26pCx + 2)) = uint8(1)
	*(*int32)(unsafe.Pointer(_26pCx + 36)) = *(*int32)(unsafe.Pointer(_pOp + 8))
	*(*uint8)(unsafe.Pointer(_26pCx + 4)) = uint8(1)
	*(*uintptr)(unsafe.Pointer(_26pCx + 48)) = _683sqlite3BtreeFakeValidCursor(tls)

	goto _8

_84:
	_684sqlite3VdbeFreeCursor(tls, _p, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 152))) + 8*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4))))))
	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 152))) + 8*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4))))) = null
	goto _8

_85:
_86:
_87:
_88:
	_28pC = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 152))) + 8*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))))

	_oc = int32(*(*uint8)(unsafe.Pointer(_pOp)))
	_eqOnly = int32(0)
	*(*uint8)(unsafe.Pointer(_28pC + 2)) = uint8(0)
	if (*(*uint8)(unsafe.Pointer(_28pC + 4))) == 0 {
		goto _484
	}

	_pIn3 = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 12)))
	if (int32(*(*uint16)(unsafe.Pointer(_pIn3 + 8))) & int32(14)) != int32(0x2) {
		goto _486
	}

	_660applyNumericAffinity(tls, _pIn3, int32(0))
_486:
	_iKey = _399sqlite3VdbeIntValue(tls, _pIn3)
	if (int32(*(*uint16)(unsafe.Pointer(_pIn3 + 8))) & int32(0x4)) != int32(0) {
		goto _487
	}

	if (int32(*(*uint16)(unsafe.Pointer(_pIn3 + 8))) & int32(0x8)) != int32(0) {
		goto _488
	}

	goto _jump_to_p2

	goto _8

_488:
	if (*(*float64)(unsafe.Pointer(_pIn3))) >= float64(_iKey) {
		goto _489
	}

	if (_oc & int32(0x1)) != int32(1) {
		goto _491
	}

	_oc--
_491:
	goto _490

_489:
	if (*(*float64)(unsafe.Pointer(_pIn3))) <= float64(_iKey) {
		goto _492
	}

	if (_oc & int32(0x1)) != int32(0) {
		goto _493
	}

	_oc++
_493:
_492:
_490:
_487:
	_rc = _685sqlite3BtreeMovetoUnpacked(tls, *(*uintptr)(unsafe.Pointer(_28pC + 48)), null, int64(uint64(_iKey)), int32(0), _27res)
	*(*int64)(unsafe.Pointer(_28pC + 80)) = _iKey
	if _rc == int32(0) {
		goto _494
	}

	goto _abort_due_to_error

_494:
	goto _485

_484:
	if _686sqlite3BtreeCursorHasHint(tls, *(*uintptr)(unsafe.Pointer(_28pC + 48)), uint32(0x2)) == 0 {
		goto _495
	}

	_eqOnly = int32(1)

_495:
	_29nField = *(*int32)(unsafe.Pointer(_pOp + 16))

	*(*uintptr)(unsafe.Pointer(_r)) = *(*uintptr)(unsafe.Pointer(_28pC + 56))
	*(*uint16)(unsafe.Pointer(_r + 16)) = uint16(_29nField)
	*(*int8)(unsafe.Pointer(_r + 18)) = int8(func() int32 {
		if int32(1)&(_oc-int32(24)) != 0 {
			return int32(-1)
		}
		return int32(1)
	}())

	*(*uintptr)(unsafe.Pointer(_r + 8)) = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 12)))
	*(*uint8)(unsafe.Pointer(_r + 22)) = uint8(0)
	_rc = _685sqlite3BtreeMovetoUnpacked(tls, *(*uintptr)(unsafe.Pointer(_28pC + 48)), _r, int64(0), int32(0), _27res)
	if _rc == int32(0) {
		goto _496
	}

	goto _abort_due_to_error

_496:
	if _eqOnly == 0 || int32(*(*uint8)(unsafe.Pointer(_r + 22))) != int32(0) {
		goto _497
	}

	goto _seek_not_found

_497:
_485:
	*(*uint8)(unsafe.Pointer(_28pC + 3)) = uint8(0)
	*(*uint32)(unsafe.Pointer(_28pC + 32)) = uint32(0)
	if _oc < int32(26) {
		goto _498
	}

	if (*(*int32)(unsafe.Pointer(_27res))) >= int32(0) && ((*(*int32)(unsafe.Pointer(_27res))) != int32(0) || _oc != int32(27)) {
		goto _500
	}

	*(*int32)(unsafe.Pointer(_27res)) = int32(0)
	_rc = _687sqlite3BtreeNext(tls, *(*uintptr)(unsafe.Pointer(_28pC + 48)), int32(0))
	if _rc == int32(0) {
		goto _502
	}

	if _rc != int32(101) {
		goto _503
	}

	_rc = int32(0)
	*(*int32)(unsafe.Pointer(_27res)) = int32(1)
	goto _504

_503:
	goto _abort_due_to_error

_504:
_502:
	goto _501

_500:
	*(*int32)(unsafe.Pointer(_27res)) = int32(0)
_501:
	goto _499

_498:
	if (*(*int32)(unsafe.Pointer(_27res))) <= int32(0) && ((*(*int32)(unsafe.Pointer(_27res))) != int32(0) || _oc != int32(24)) {
		goto _505
	}

	*(*int32)(unsafe.Pointer(_27res)) = int32(0)
	_rc = _688sqlite3BtreePrevious(tls, *(*uintptr)(unsafe.Pointer(_28pC + 48)), int32(0))
	if _rc == int32(0) {
		goto _507
	}

	if _rc != int32(101) {
		goto _508
	}

	_rc = int32(0)
	*(*int32)(unsafe.Pointer(_27res)) = int32(1)
	goto _509

_508:
	goto _abort_due_to_error

_509:
_507:
	goto _506

_505:
	*(*int32)(unsafe.Pointer(_27res)) = _689sqlite3BtreeEof(tls, *(*uintptr)(unsafe.Pointer(_28pC + 48)))
_506:
_499:
	goto _seek_not_found
_seek_not_found:
	if (*(*int32)(unsafe.Pointer(_27res))) == 0 {
		goto _510
	}

	goto _jump_to_p2

	goto _511

_510:
	if _eqOnly == 0 {
		goto _512
	}

	_pOp += 24
_512:
_511:
	goto _8

_89:
_90:
_91:
	_31pC = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 152))) + 8*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))))

	_pIn3 = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 12)))

	if (*(*int32)(unsafe.Pointer(_pOp + 16))) <= int32(0) {
		goto _513
	}

	*(*uintptr)(unsafe.Pointer(_33r)) = *(*uintptr)(unsafe.Pointer(_31pC + 56))
	*(*uint16)(unsafe.Pointer(_33r + 16)) = uint16(*(*int32)(unsafe.Pointer(_pOp + 16)))
	*(*uintptr)(unsafe.Pointer(_33r + 8)) = _pIn3
	_pIdxKey = _33r
	_pFree = null
	goto _514

_513:
	_rc = func() int32 {
		if int32(*(*uint16)(unsafe.Pointer(_pIn3 + 8)))&int32(0x4000) != 0 {
			return _442sqlite3VdbeMemExpandBlob(tls, _pIn3)
		}
		return int32(0)
	}()

	if _rc == 0 {
		goto _515
	}

	goto _no_mem

_515:
	_pFree = set4(&_pIdxKey, _690sqlite3VdbeAllocUnpackedRecord(tls, *(*uintptr)(unsafe.Pointer(_31pC + 56))))
	if _pIdxKey != 0 {
		goto _516
	}

	goto _no_mem

_516:
	_691sqlite3VdbeRecordUnpack(tls, *(*uintptr)(unsafe.Pointer(_31pC + 56)), *(*int32)(unsafe.Pointer(_pIn3 + 12)), *(*uintptr)(unsafe.Pointer(_pIn3 + 16)), _pIdxKey)
_514:
	*(*int8)(unsafe.Pointer(_pIdxKey + 18)) = int8(0)
	_takeJump = int32(0)
	if int32(*(*uint8)(unsafe.Pointer(_pOp))) != int32(28) {
		goto _517
	}

	_30ii = int32(0)
_518:
	if _30ii >= int32(*(*uint16)(unsafe.Pointer(_pIdxKey + 16))) {
		goto _520
	}

	if (int32(*(*uint16)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pIdxKey + 8))) + 56*uintptr(_30ii)) + 8))) & int32(0x1)) == 0 {
		goto _521
	}

	_takeJump = int32(1)
	goto _520

_521:
	_30ii++
	goto _518

_520:
_517:
	_rc = _685sqlite3BtreeMovetoUnpacked(tls, *(*uintptr)(unsafe.Pointer(_31pC + 48)), _pIdxKey, int64(0), int32(0), _32res)
	if _pFree == 0 {
		goto _522
	}

	_376sqlite3DbFreeNN(tls, _db, _pFree)
_522:
	if _rc == int32(0) {
		goto _523
	}

	goto _abort_due_to_error

_523:
	*(*int32)(unsafe.Pointer(_31pC + 36)) = *(*int32)(unsafe.Pointer(_32res))
	_alreadyExists = bool2int((*(*int32)(unsafe.Pointer(_32res))) == int32(0))
	*(*uint8)(unsafe.Pointer(_31pC + 2)) = uint8(int32(1) - _alreadyExists)
	*(*uint8)(unsafe.Pointer(_31pC + 3)) = uint8(0)
	*(*uint32)(unsafe.Pointer(_31pC + 32)) = uint32(0)
	if int32(*(*uint8)(unsafe.Pointer(_pOp))) != int32(30) {
		goto _524
	}

	if _alreadyExists == 0 {
		goto _526
	}

	goto _jump_to_p2

_526:
	goto _525

_524:
	if _takeJump == 0 && _alreadyExists != 0 {
		goto _527
	}

	goto _jump_to_p2

_527:
_525:
	goto _8

_92:
	_pIn3 = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 12)))
	if (int32(*(*uint16)(unsafe.Pointer(_pIn3 + 8))) & int32(0x4)) != int32(0) {
		goto _528
	}

	_657applyAffinity(tls, _pIn3, int8('C'), _encoding)
	if (int32(*(*uint16)(unsafe.Pointer(_pIn3 + 8))) & int32(0x4)) != int32(0) {
		goto _529
	}

	goto _jump_to_p2

_529:
_528:
_93:
	_pIn3 = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 12)))

	_34pC = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 152))) + 8*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))))

	_35pCrsr = *(*uintptr)(unsafe.Pointer(_34pC + 48))

	*(*int32)(unsafe.Pointer(_36res)) = int32(0)
	_37iKey = uint64(*(*int64)(unsafe.Pointer(_pIn3)))
	_rc = _685sqlite3BtreeMovetoUnpacked(tls, _35pCrsr, null, int64(_37iKey), int32(0), _36res)

	*(*int64)(unsafe.Pointer(_34pC + 80)) = int64(_37iKey)
	*(*uint8)(unsafe.Pointer(_34pC + 2)) = uint8(0)
	*(*uint32)(unsafe.Pointer(_34pC + 32)) = uint32(0)
	*(*uint8)(unsafe.Pointer(_34pC + 3)) = uint8(0)
	*(*int32)(unsafe.Pointer(_34pC + 36)) = *(*int32)(unsafe.Pointer(_36res))
	if (*(*int32)(unsafe.Pointer(_36res))) == int32(0) {
		goto _530
	}

	if (*(*int32)(unsafe.Pointer(_pOp + 8))) != int32(0) {
		goto _531
	}

	_rc = _556sqlite3CorruptError(tls, int32(83334))
	goto _532

_531:
	goto _jump_to_p2

_532:
_530:
	if _rc == 0 {
		goto _533
	}

	goto _abort_due_to_error

_533:
	goto _8

_94:
	_pOut = _642out2Prerelease(tls, _p, _pOp)
	*(*int64)(unsafe.Pointer(_pOut)) = postinc65(&(*(*int64)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 152))) + 8*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))))) + 16))))
	goto _8

_95:
	*(*int64)(unsafe.Pointer(_v)) = int64(0)
	*(*int32)(unsafe.Pointer(_39res)) = int32(0)
	_pOut = _642out2Prerelease(tls, _p, _pOp)

	_38pC = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 152))) + 8*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))))

	if (uint32((*(*uint8)(unsafe.Pointer(_38pC + 5)))>>1) << 31 >> 31) != 0 {
		goto _534
	}

	_rc = _692sqlite3BtreeLast(tls, *(*uintptr)(unsafe.Pointer(_38pC + 48)), _39res)
	if _rc == int32(0) {
		goto _535
	}

	goto _abort_due_to_error

_535:
	if (*(*int32)(unsafe.Pointer(_39res))) == 0 {
		goto _536
	}

	*(*int64)(unsafe.Pointer(_v)) = int64(1)
	goto _537

_536:
	*(*int64)(unsafe.Pointer(_v)) = _693sqlite3BtreeIntegerKey(tls, *(*uintptr)(unsafe.Pointer(_38pC + 48)))
	if (*(*int64)(unsafe.Pointer(_v))) < int64(9223372036854775807) {
		goto _538
	}

	set66b(&(*(*uint8)(unsafe.Pointer(_38pC + 5))), uint32(1))
	goto _539

_538:
	(*(*int64)(unsafe.Pointer(_v)))++
_539:
_537:
_534:
	if (*(*int32)(unsafe.Pointer(_pOp + 12))) == 0 {
		goto _540
	}

	if (*(*uintptr)(unsafe.Pointer(_p + 248))) == 0 {
		goto _541
	}

	_42pFrame = *(*uintptr)(unsafe.Pointer(_p + 248))
_543:
	if (*(*uintptr)(unsafe.Pointer(_42pFrame + 8))) == 0 {
		goto _545
	}

	_42pFrame = *(*uintptr)(unsafe.Pointer(_42pFrame + 8))
	goto _543

_545:
	_41pMem = (*(*uintptr)(unsafe.Pointer(_42pFrame + 32))) + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 12)))
	goto _542

_541:
	_41pMem = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 12)))
_542:
	_656sqlite3VdbeMemIntegerify(tls, _41pMem)

	if (*(*int64)(unsafe.Pointer(_41pMem))) != int64(9223372036854775807) && (uint32((*(*uint8)(unsafe.Pointer(_38pC + 5)))>>1)<<31>>31) == 0 {
		goto _546
	}

	_rc = int32(13)
	goto _abort_due_to_error

_546:
	if (*(*int64)(unsafe.Pointer(_v))) >= ((*(*int64)(unsafe.Pointer(_41pMem))) + int64(1)) {
		goto _547
	}

	*(*int64)(unsafe.Pointer(_v)) = (*(*int64)(unsafe.Pointer(_41pMem))) + int64(1)
_547:
	*(*int64)(unsafe.Pointer(_41pMem)) = *(*int64)(unsafe.Pointer(_v))
_540:
	if (uint32((*(*uint8)(unsafe.Pointer(_38pC + 5)))>>1) << 31 >> 31) == 0 {
		goto _548
	}

	_40cnt = int32(0)
_549:
	Xsqlite3_randomness(tls, int32(8), _v)
	*(*int64)(unsafe.Pointer(_v)) = int64((*(*int64)(unsafe.Pointer(_v))) & int64(4611686018427387903))
	(*(*int64)(unsafe.Pointer(_v)))++
	if ((set5(&_rc, _685sqlite3BtreeMovetoUnpacked(tls, *(*uintptr)(unsafe.Pointer(_38pC + 48)), null, int64(uint64(*(*int64)(unsafe.Pointer(_v)))), int32(0), _39res)) == int32(0)) && ((*(*int32)(unsafe.Pointer(_39res))) == int32(0))) && (preinc2(&_40cnt) < int32(100)) {
		goto _549
	}

	if _rc == 0 {
		goto _552
	}

	goto _abort_due_to_error

_552:
	if (*(*int32)(unsafe.Pointer(_39res))) != int32(0) {
		goto _553
	}

	_rc = int32(13)
	goto _abort_due_to_error

_553:
_548:
	*(*uint8)(unsafe.Pointer(_38pC + 3)) = uint8(0)
	*(*uint32)(unsafe.Pointer(_38pC + 32)) = uint32(0)
	*(*int64)(unsafe.Pointer(_pOut)) = *(*int64)(unsafe.Pointer(_v))
	goto _8

_96:
_97:
	_44op = int32(0)
	_pData = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 8)))

	_43pC = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 152))) + 8*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))))

	if int32(*(*uint8)(unsafe.Pointer(_pOp))) != int32(116) {
		goto _554
	}

	_pKey = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 12)))

	*(*int64)(unsafe.Pointer(_x + 8)) = int64(*(*int64)(unsafe.Pointer(_pKey)))
	goto _555

_554:
	*(*int64)(unsafe.Pointer(_x + 8)) = int64(*(*int32)(unsafe.Pointer(_pOp + 12)))
_555:
	if int32(*(*int8)(unsafe.Pointer(_pOp + 1))) != int32(-6) || *(*uintptr)(unsafe.Pointer(_db + 288)) == 0 {
		goto _556
	}

	_zDb = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(*(*int8)(unsafe.Pointer(_43pC + 1)))))
	_pTab = *(*uintptr)(unsafe.Pointer(_pOp + 16))

	_44op = func() int32 {
		if int32(*(*uint16)(unsafe.Pointer(_pOp + 2)))&int32(0x4) != 0 {
			return int32(23)
		}
		return int32(18)
	}()
	goto _557

_556:
	_pTab = null
	_zDb = null
_557:
	if (int32(*(*uint16)(unsafe.Pointer(_pOp + 2))) & int32(0x1)) == 0 {
		goto _558
	}

	(*(*int32)(unsafe.Pointer(_p + 60)))++
_558:
	if (int32(*(*uint16)(unsafe.Pointer(_pOp + 2))) & int32(0x20)) == 0 {
		goto _559
	}

	*(*int64)(unsafe.Pointer(_db + 56)) = int64(*(*int64)(unsafe.Pointer(_x + 8)))
_559:
	*(*uintptr)(unsafe.Pointer(_x + 16)) = *(*uintptr)(unsafe.Pointer(_pData + 16))
	*(*int32)(unsafe.Pointer(_x + 36)) = *(*int32)(unsafe.Pointer(_pData + 12))
	_seekResult = func() int32 {
		if int32(*(*uint16)(unsafe.Pointer(_pOp + 2)))&int32(0x10) != 0 {
			return *(*int32)(unsafe.Pointer(_43pC + 36))
		}
		return int32(0)
	}()
	if (int32(*(*uint16)(unsafe.Pointer(_pData + 8))) & int32(0x4000)) == 0 {
		goto _560
	}

	*(*int32)(unsafe.Pointer(_x + 40)) = *(*int32)(unsafe.Pointer(_pData))
	goto _561

_560:
	*(*int32)(unsafe.Pointer(_x + 40)) = int32(0)
_561:
	*(*uintptr)(unsafe.Pointer(_x)) = null
	_rc = _694sqlite3BtreeInsert(tls, *(*uintptr)(unsafe.Pointer(_43pC + 48)), _x, int32(*(*uint16)(unsafe.Pointer(_pOp + 2)))&int32(10), _seekResult)
	*(*uint8)(unsafe.Pointer(_43pC + 3)) = uint8(0)
	*(*uint32)(unsafe.Pointer(_43pC + 32)) = uint32(0)
	if _rc == 0 {
		goto _562
	}

	goto _abort_due_to_error

_562:
	if (*(*uintptr)(unsafe.Pointer(_db + 288))) == 0 || _44op == 0 {
		goto _563
	}

	fn67(*(*uintptr)(unsafe.Pointer(_db + 288)))(tls, *(*uintptr)(unsafe.Pointer(_db + 280)), _44op, _zDb, *(*uintptr)(unsafe.Pointer(_pTab)), *(*int64)(unsafe.Pointer(_x + 8)))
_563:
	goto _8

_98:
	_opflags = *(*int32)(unsafe.Pointer(_pOp + 8))

	_45pC = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 152))) + 8*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))))

	if int32(*(*int8)(unsafe.Pointer(_pOp + 1))) != int32(-6) || *(*uintptr)(unsafe.Pointer(_db + 288)) == 0 {
		goto _564
	}

	_46zDb = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(*(*int8)(unsafe.Pointer(_45pC + 1)))))
	_47pTab = *(*uintptr)(unsafe.Pointer(_pOp + 16))
	if (int32(*(*uint16)(unsafe.Pointer(_pOp + 2)))&int32(0x2)) == int32(0) || (*(*uint8)(unsafe.Pointer(_45pC + 4))) == 0 {
		goto _566
	}

	*(*int64)(unsafe.Pointer(_45pC + 80)) = _693sqlite3BtreeIntegerKey(tls, *(*uintptr)(unsafe.Pointer(_45pC + 48)))
_566:
	goto _565

_564:
	_46zDb = null
	_47pTab = null
_565:
	_rc = _695sqlite3BtreeDelete(tls, *(*uintptr)(unsafe.Pointer(_45pC + 48)), uint8(*(*uint16)(unsafe.Pointer(_pOp + 2))))
	*(*uint32)(unsafe.Pointer(_45pC + 32)) = uint32(0)
	*(*int32)(unsafe.Pointer(_45pC + 36)) = int32(0)
	if _rc == 0 {
		goto _567
	}

	goto _abort_due_to_error

_567:
	if (_opflags & int32(0x1)) == 0 {
		goto _568
	}

	(*(*int32)(unsafe.Pointer(_p + 60)))++
	if (*(*uintptr)(unsafe.Pointer(_db + 288))) == 0 || ((*(*uint32)(unsafe.Pointer(_47pTab + 64)))&uint32(0x20)) != uint32(0) {
		goto _569
	}

	fn67(*(*uintptr)(unsafe.Pointer(_db + 288)))(tls, *(*uintptr)(unsafe.Pointer(_db + 280)), int32(9), _46zDb, *(*uintptr)(unsafe.Pointer(_47pTab)), *(*int64)(unsafe.Pointer(_45pC + 80)))

_569:
_568:
	goto _8

_99:
	_640sqlite3VdbeSetChanges(tls, _db, *(*int32)(unsafe.Pointer(_p + 60)))
	*(*int32)(unsafe.Pointer(_p + 60)) = int32(0)
	goto _8

_100:
	_48pC = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 152))) + 8*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))))

	_pIn3 = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 12)))
	_nKeyCol = *(*int32)(unsafe.Pointer(_pOp + 16))
	*(*int32)(unsafe.Pointer(_49res)) = int32(0)
	_rc = _696sqlite3VdbeSorterCompare(tls, _48pC, _pIn3, _nKeyCol, _49res)
	if _rc == 0 {
		goto _570
	}

	goto _abort_due_to_error

_570:
	if (*(*int32)(unsafe.Pointer(_49res))) == 0 {
		goto _571
	}

	goto _jump_to_p2

_571:
	goto _8

_101:
	_pOut = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 8)))
	_50pC = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 152))) + 8*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))))

	_rc = _697sqlite3VdbeSorterRowkey(tls, _50pC, _pOut)

	if _rc == 0 {
		goto _572
	}

	goto _abort_due_to_error

_572:
	*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 152))) + 8*uintptr(*(*int32)(unsafe.Pointer(_pOp + 12)))))) + 32)) = uint32(0)
	goto _8

_102:
	_pOut = _642out2Prerelease(tls, _p, _pOp)

	_51pC = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 152))) + 8*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))))

	_52pCrsr = *(*uintptr)(unsafe.Pointer(_51pC + 48))

	_53n = _663sqlite3BtreePayloadSize(tls, _52pCrsr)
	if _53n <= uint32(*(*int32)(unsafe.Pointer(_db + 124))) {
		goto _573
	}

	goto _too_big

_573:
	_rc = _666sqlite3VdbeMemFromBtree(tls, _52pCrsr, uint32(0), _53n, _pOut)
	if _rc == 0 {
		goto _574
	}

	goto _abort_due_to_error

_574:
	if (*(*int32)(unsafe.Pointer(_pOp + 12))) != 0 {
		goto _575
	}

	if (int32(*(*uint16)(unsafe.Pointer(_pOut + 8)))&int32(0x1000)) == int32(0) || _543sqlite3VdbeMemMakeWriteable(tls, _pOut) == 0 {
		goto _576
	}

	goto _no_mem

_576:
_575:
	goto _8

_103:
	_pOut = _642out2Prerelease(tls, _p, _pOp)

	_54pC = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 152))) + 8*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))))

	if (*(*uint8)(unsafe.Pointer(_54pC + 2))) == 0 {
		goto _577
	}

	*(*uint16)(unsafe.Pointer(_pOut + 8)) = uint16(0x1)
	goto _8

	goto _578

_577:
	if (*(*uint8)(unsafe.Pointer(_54pC + 3))) == 0 {
		goto _579
	}

	*(*int64)(unsafe.Pointer(_55v)) = *(*int64)(unsafe.Pointer(_54pC + 80))
	goto _580

_579:
	if int32(*(*uint8)(unsafe.Pointer(_54pC))) != int32(2) {
		goto _581
	}

	_pVtab = *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_54pC + 48))))
	_pModule = *(*uintptr)(unsafe.Pointer(_pVtab))

	_rc = fn58(*(*uintptr)(unsafe.Pointer(_pModule + 96)))(tls, *(*uintptr)(unsafe.Pointer(_54pC + 48)), _55v)
	_698sqlite3VtabImportErrmsg(tls, _p, _pVtab)
	if _rc == 0 {
		goto _583
	}

	goto _abort_due_to_error

_583:
	goto _582

_581:
	_rc = _699sqlite3VdbeCursorRestore(tls, _54pC)
	if _rc == 0 {
		goto _584
	}

	goto _abort_due_to_error

_584:
	if (*(*uint8)(unsafe.Pointer(_54pC + 2))) == 0 {
		goto _585
	}

	*(*uint16)(unsafe.Pointer(_pOut + 8)) = uint16(0x1)
	goto _8

_585:
	*(*int64)(unsafe.Pointer(_55v)) = _693sqlite3BtreeIntegerKey(tls, *(*uintptr)(unsafe.Pointer(_54pC + 48)))
_582:
_580:
_578:
	*(*int64)(unsafe.Pointer(_pOut)) = *(*int64)(unsafe.Pointer(_55v))
	goto _8

_104:
	_56pC = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 152))) + 8*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))))

	*(*uint8)(unsafe.Pointer(_56pC + 2)) = uint8(1)
	*(*uint32)(unsafe.Pointer(_56pC + 32)) = uint32(0)
	if int32(*(*uint8)(unsafe.Pointer(_56pC))) != int32(0) {
		goto _586
	}

	_600sqlite3BtreeClearCursor(tls, *(*uintptr)(unsafe.Pointer(_56pC + 48)))
_586:
	goto _8

_105:
_106:
	_57pC = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 152))) + 8*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))))

	_58pCrsr = *(*uintptr)(unsafe.Pointer(_57pC + 48))
	*(*int32)(unsafe.Pointer(_59res)) = int32(0)

	if int32(*(*uint8)(unsafe.Pointer(_pOp))) != int32(125) {
		goto _587
	}

	*(*int32)(unsafe.Pointer(_57pC + 36)) = int32(-1)
	if _700sqlite3BtreeCursorIsValidNN(tls, _58pCrsr) == 0 {
		goto _588
	}

	goto _8

_588:
_587:
	_rc = _692sqlite3BtreeLast(tls, _58pCrsr, _59res)
	*(*uint8)(unsafe.Pointer(_57pC + 2)) = uint8(*(*int32)(unsafe.Pointer(_59res)))
	*(*uint8)(unsafe.Pointer(_57pC + 3)) = uint8(0)
	*(*uint32)(unsafe.Pointer(_57pC + 32)) = uint32(0)
	if _rc == 0 {
		goto _589
	}

	goto _abort_due_to_error

_589:
	if (*(*int32)(unsafe.Pointer(_pOp + 8))) <= int32(0) {
		goto _590
	}

	if (*(*int32)(unsafe.Pointer(_59res))) == 0 {
		goto _591
	}

	goto _jump_to_p2

_591:
_590:
	goto _8

_107:
	_60pC = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 152))) + 8*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))))

	_61pCrsr = *(*uintptr)(unsafe.Pointer(_60pC + 48))

	_rc = _701sqlite3BtreeFirst(tls, _61pCrsr, _62res)
	if _rc == 0 {
		goto _592
	}

	goto _abort_due_to_error

_592:
	if (*(*int32)(unsafe.Pointer(_62res))) != int32(0) {
		goto _593
	}

	_sz = _702sqlite3BtreeRowCountEst(tls, _61pCrsr)
	if _sz < int64(0) || int32(_703sqlite3LogEst(tls, uint64(_sz))) >= (*(*int32)(unsafe.Pointer(_pOp + 12))) {
		goto _594
	}

	*(*int32)(unsafe.Pointer(_62res)) = int32(1)
_594:
_593:
	if (*(*int32)(unsafe.Pointer(_62res))) == 0 {
		goto _595
	}

	goto _jump_to_p2

_595:
	goto _8

_108:
_109:
	(*(*uint32)(unsafe.Pointer((_p + 204) + 8)))++
_110:
	_63pC = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 152))) + 8*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))))

	*(*int32)(unsafe.Pointer(_65res)) = int32(1)
	if int32(*(*uint8)(unsafe.Pointer(_63pC))) != int32(1) {
		goto _596
	}

	_rc = _704sqlite3VdbeSorterRewind(tls, _63pC, _65res)
	goto _597

_596:
	_64pCrsr = *(*uintptr)(unsafe.Pointer(_63pC + 48))

	_rc = _701sqlite3BtreeFirst(tls, _64pCrsr, _65res)
	*(*uint8)(unsafe.Pointer(_63pC + 3)) = uint8(0)
	*(*uint32)(unsafe.Pointer(_63pC + 32)) = uint32(0)
_597:
	if _rc == 0 {
		goto _598
	}

	goto _abort_due_to_error

_598:
	*(*uint8)(unsafe.Pointer(_63pC + 2)) = uint8(*(*int32)(unsafe.Pointer(_65res)))

	if (*(*int32)(unsafe.Pointer(_65res))) == 0 {
		goto _599
	}

	goto _jump_to_p2

_599:
	goto _8

_111:
	_66pC = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 152))) + 8*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))))

	_rc = _705sqlite3VdbeSorterNext(tls, _db, _66pC)
	goto _next_tail

_112:
_113:
	if (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 152))) + 8*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))))) != 0 {
		goto _600
	}

	goto _8

_600:
_114:
_115:
	_66pC = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 152))) + 8*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))))

	_rc = fn50(*(*uintptr)(unsafe.Pointer(_pOp + 16)))(tls, *(*uintptr)(unsafe.Pointer(_66pC + 48)), *(*int32)(unsafe.Pointer(_pOp + 12)))
	goto _next_tail
_next_tail:
	*(*uint32)(unsafe.Pointer(_66pC + 32)) = uint32(0)
	if _rc != int32(0) {
		goto _601
	}

	*(*uint8)(unsafe.Pointer(_66pC + 2)) = uint8(0)
	(*(*uint32)(unsafe.Pointer((_p + 204) + 4*uintptr(*(*uint16)(unsafe.Pointer(_pOp + 2))))))++
	goto _jump_to_p2_and_check_for_interrupt

_601:
	if _rc == int32(101) {
		goto _602
	}

	goto _abort_due_to_error

_602:
	_rc = int32(0)
	*(*uint8)(unsafe.Pointer(_66pC + 2)) = uint8(1)
	goto _check_for_interrupt

_116:
_117:
	_67pC = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 152))) + 8*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))))

	_pIn2 = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 8)))

	if (int32(*(*uint16)(unsafe.Pointer(_pOp + 2))) & int32(0x1)) == 0 {
		goto _603
	}

	(*(*int32)(unsafe.Pointer(_p + 60)))++
_603:
	_rc = func() int32 {
		if int32(*(*uint16)(unsafe.Pointer(_pIn2 + 8)))&int32(0x4000) != 0 {
			return _442sqlite3VdbeMemExpandBlob(tls, _pIn2)
		}
		return int32(0)
	}()
	if _rc == 0 {
		goto _604
	}

	goto _abort_due_to_error

_604:
	if int32(*(*uint8)(unsafe.Pointer(_pOp))) != int32(126) {
		goto _605
	}

	_rc = _706sqlite3VdbeSorterWrite(tls, _67pC, _pIn2)
	goto _606

_605:
	*(*int64)(unsafe.Pointer(_68x + 8)) = int64(*(*int32)(unsafe.Pointer(_pIn2 + 12)))
	*(*uintptr)(unsafe.Pointer(_68x)) = *(*uintptr)(unsafe.Pointer(_pIn2 + 16))
	*(*uintptr)(unsafe.Pointer(_68x + 24)) = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 12)))
	*(*uint16)(unsafe.Pointer(_68x + 32)) = uint16(*(*int32)(unsafe.Pointer(_pOp + 16)))
	_rc = _694sqlite3BtreeInsert(tls, *(*uintptr)(unsafe.Pointer(_67pC + 48)), _68x, int32(*(*uint16)(unsafe.Pointer(_pOp + 2)))&int32(10), func() int32 {
		if int32(*(*uint16)(unsafe.Pointer(_pOp + 2)))&int32(0x10) != 0 {
			return *(*int32)(unsafe.Pointer(_67pC + 36))
		}
		return int32(0)
	}())

	*(*uint32)(unsafe.Pointer(_67pC + 32)) = uint32(0)
_606:
	if _rc == 0 {
		goto _607
	}

	goto _abort_due_to_error

_607:
	goto _8

_118:
	_69pC = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 152))) + 8*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))))

	_70pCrsr = *(*uintptr)(unsafe.Pointer(_69pC + 48))

	*(*uintptr)(unsafe.Pointer(_72r)) = *(*uintptr)(unsafe.Pointer(_69pC + 56))
	*(*uint16)(unsafe.Pointer(_72r + 16)) = uint16(*(*int32)(unsafe.Pointer(_pOp + 12)))
	*(*int8)(unsafe.Pointer(_72r + 18)) = int8(0)
	*(*uintptr)(unsafe.Pointer(_72r + 8)) = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 8)))
	_rc = _685sqlite3BtreeMovetoUnpacked(tls, _70pCrsr, _72r, int64(0), int32(0), _71res)
	if _rc == 0 {
		goto _608
	}

	goto _abort_due_to_error

_608:
	if (*(*int32)(unsafe.Pointer(_71res))) != int32(0) {
		goto _609
	}

	_rc = _695sqlite3BtreeDelete(tls, _70pCrsr, uint8(0x4))
	if _rc == 0 {
		goto _610
	}

	goto _abort_due_to_error

_610:
_609:
	*(*uint32)(unsafe.Pointer(_69pC + 32)) = uint32(0)
	*(*int32)(unsafe.Pointer(_69pC + 36)) = int32(0)
	goto _8

_119:
_120:
	_73pC = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 152))) + 8*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))))

	_rc = _699sqlite3VdbeCursorRestore(tls, _73pC)
	if _rc == int32(0) {
		goto _611
	}

	goto _abort_due_to_error

_611:
	if (*(*uint8)(unsafe.Pointer(_73pC + 2))) != 0 {
		goto _612
	}

	*(*int64)(unsafe.Pointer(_rowid)) = int64(0)
	_rc = _707sqlite3VdbeIdxRowid(tls, _db, *(*uintptr)(unsafe.Pointer(_73pC + 48)), _rowid)
	if _rc == int32(0) {
		goto _614
	}

	goto _abort_due_to_error

_614:
	if int32(*(*uint8)(unsafe.Pointer(_pOp))) != int32(129) {
		goto _615
	}

	_pTabCur = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 152))) + 8*uintptr(*(*int32)(unsafe.Pointer(_pOp + 12)))))

	*(*uint8)(unsafe.Pointer(_pTabCur + 2)) = uint8(0)
	*(*int64)(unsafe.Pointer(_pTabCur + 80)) = *(*int64)(unsafe.Pointer(_rowid))
	*(*uint8)(unsafe.Pointer(_pTabCur + 3)) = uint8(1)

	*(*uintptr)(unsafe.Pointer(_pTabCur + 24)) = *(*uintptr)(unsafe.Pointer(_pOp + 16))
	*(*uintptr)(unsafe.Pointer(_pTabCur + 40)) = _73pC
	goto _616

_615:
	_pOut = _642out2Prerelease(tls, _p, _pOp)
	*(*int64)(unsafe.Pointer(_pOut)) = *(*int64)(unsafe.Pointer(_rowid))
_616:
	goto _613

_612:
	_643sqlite3VdbeMemSetNull(tls, _aMem+56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 8))))
_613:
	goto _8

_121:
_122:
_123:
_124:
	_74pC = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 152))) + 8*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))))

	*(*uintptr)(unsafe.Pointer(_76r)) = *(*uintptr)(unsafe.Pointer(_74pC + 56))
	*(*uint16)(unsafe.Pointer(_76r + 16)) = uint16(*(*int32)(unsafe.Pointer(_pOp + 16)))
	if int32(*(*uint8)(unsafe.Pointer(_pOp))) >= int32(40) {
		goto _617
	}

	*(*int8)(unsafe.Pointer(_76r + 18)) = int8(-1)
	goto _618

_617:
	*(*int8)(unsafe.Pointer(_76r + 18)) = int8(0)
_618:
	*(*uintptr)(unsafe.Pointer(_76r + 8)) = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 12)))
	*(*int32)(unsafe.Pointer(_75res)) = int32(0)
	_rc = _708sqlite3VdbeIdxKeyCompare(tls, _db, _74pC, _76r, _75res)

	if (int32(*(*uint8)(unsafe.Pointer(_pOp))) & int32(1)) != int32(0) {
		goto _619
	}

	*(*int32)(unsafe.Pointer(_75res)) = -(*(*int32)(unsafe.Pointer(_75res)))
	goto _620

_619:
	(*(*int32)(unsafe.Pointer(_75res)))++
_620:
	if _rc == 0 {
		goto _621
	}

	goto _abort_due_to_error

_621:
	if (*(*int32)(unsafe.Pointer(_75res))) <= int32(0) {
		goto _622
	}

	goto _jump_to_p2

_622:
	goto _8

_125:
	_pOut = _642out2Prerelease(tls, _p, _pOp)
	*(*uint16)(unsafe.Pointer(_pOut + 8)) = uint16(0x1)
	if (*(*int32)(unsafe.Pointer(_db + 188))) <= ((*(*int32)(unsafe.Pointer(_db + 200))) + int32(1)) {
		goto _623
	}

	_rc = int32(6)
	*(*uint8)(unsafe.Pointer(_p + 190)) = uint8(2)
	goto _abort_due_to_error

	goto _624

_623:
	_77iDb = *(*int32)(unsafe.Pointer(_pOp + 12))

	*(*int32)(unsafe.Pointer(_iMoved)) = int32(0)
	_rc = _709sqlite3BtreeDropTable(tls, *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_77iDb)) + 8)), *(*int32)(unsafe.Pointer(_pOp + 4)), _iMoved)
	*(*uint16)(unsafe.Pointer(_pOut + 8)) = uint16(0x4)
	*(*int64)(unsafe.Pointer(_pOut)) = int64(*(*int32)(unsafe.Pointer(_iMoved)))
	if _rc == 0 {
		goto _625
	}

	goto _abort_due_to_error

_625:
	if (*(*int32)(unsafe.Pointer(_iMoved))) == int32(0) {
		goto _626
	}

	_710sqlite3RootPageMoved(tls, _db, _77iDb, *(*int32)(unsafe.Pointer(_iMoved)), *(*int32)(unsafe.Pointer(_pOp + 4)))

	_resetSchemaOnFault = uint8(_77iDb + int32(1))
_626:
_624:
	goto _8

_126:
	*(*int32)(unsafe.Pointer(_nChange)) = int32(0)

	_rc = _711sqlite3BtreeClearTable(tls, *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(*(*int32)(unsafe.Pointer(_pOp + 8)))) + 8)), *(*int32)(unsafe.Pointer(_pOp + 4)), func() uintptr {
		if (*(*int32)(unsafe.Pointer(_pOp + 12))) != 0 {
			return _nChange
		}
		return null
	}())
	if (*(*int32)(unsafe.Pointer(_pOp + 12))) == 0 {
		goto _627
	}

	{
		p := &(*(*int32)(unsafe.Pointer(_p + 60)))
		*p = int32(int32(*p) + (*(*int32)(unsafe.Pointer(_nChange))))
	}
	if (*(*int32)(unsafe.Pointer(_pOp + 12))) <= int32(0) {
		goto _628
	}

	{
		p := &(*(*int64)(unsafe.Pointer(_aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 12))))))
		*p = int64(int64(*p) + int64(*(*int32)(unsafe.Pointer(_nChange))))
	}
_628:
_627:
	if _rc == 0 {
		goto _629
	}

	goto _abort_due_to_error

_629:
	goto _8

_127:
	_78pC = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 152))) + 8*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))))

	if int32(*(*uint8)(unsafe.Pointer(_78pC))) != int32(1) {
		goto _630
	}

	_712sqlite3VdbeSorterReset(tls, _db, *(*uintptr)(unsafe.Pointer(_78pC + 48)))
	goto _631

_630:
	_rc = _713sqlite3BtreeClearTableOfCursor(tls, *(*uintptr)(unsafe.Pointer(_78pC + 48)))
	if _rc == 0 {
		goto _632
	}

	goto _abort_due_to_error

_632:
_631:
	goto _8

_128:
	_pOut = _642out2Prerelease(tls, _p, _pOp)
	*(*int32)(unsafe.Pointer(_79pgno)) = int32(0)

	_80pDb = (*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))

	_rc = _681sqlite3BtreeCreateTable(tls, *(*uintptr)(unsafe.Pointer(_80pDb + 8)), _79pgno, *(*int32)(unsafe.Pointer(_pOp + 12)))
	if _rc == 0 {
		goto _633
	}

	goto _abort_due_to_error

_633:
	*(*int64)(unsafe.Pointer(_pOut)) = int64(*(*int32)(unsafe.Pointer(_79pgno)))
	goto _8

_129:
	(*(*uint8)(unsafe.Pointer(_db + 106)))++
	_rc = Xsqlite3_exec(tls, _db, *(*uintptr)(unsafe.Pointer(_pOp + 16)), null, null, null)
	(*(*uint8)(unsafe.Pointer(_db + 106)))--
	if _rc == 0 {
		goto _634
	}

	goto _abort_due_to_error

_634:
	goto _8

_130:
	_81iDb = *(*int32)(unsafe.Pointer(_pOp + 4))

	_zMaster = ts + 5127 /* "sqlite_master" */
	*(*uintptr)(unsafe.Pointer(_initData)) = _db
	*(*int32)(unsafe.Pointer(_initData + 16)) = *(*int32)(unsafe.Pointer(_pOp + 4))
	*(*uintptr)(unsafe.Pointer(_initData + 8)) = _p + 144
	_zSql = _226sqlite3MPrintf(tls, _db, ts+18593 /* "SELECT name, rootpage, sql FROM ..." */, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_81iDb))), _zMaster, *(*uintptr)(unsafe.Pointer(_pOp + 16)))
	if _zSql != 0 {
		goto _635
	}

	_rc = int32(7)
	goto _636

_635:
	*(*uint8)(unsafe.Pointer((_db + 176) + 5)) = uint8(1)
	*(*int32)(unsafe.Pointer(_initData + 20)) = int32(0)

	_rc = Xsqlite3_exec(tls, _db, _zSql, fp9(_714sqlite3InitCallback), _initData, null)
	if _rc != int32(0) {
		goto _637
	}

	_rc = *(*int32)(unsafe.Pointer(_initData + 20))
_637:
	_376sqlite3DbFreeNN(tls, _db, _zSql)
	*(*uint8)(unsafe.Pointer((_db + 176) + 5)) = uint8(0)
_636:
	if _rc == 0 {
		goto _638
	}

	_157sqlite3ResetAllSchemasOfConnection(tls, _db)
	if _rc != int32(7) {
		goto _639
	}

	goto _no_mem

_639:
	goto _abort_due_to_error

_638:
	goto _8

_131:
	_rc = _715sqlite3AnalysisLoad(tls, _db, *(*int32)(unsafe.Pointer(_pOp + 4)))
	if _rc == 0 {
		goto _640
	}

	goto _abort_due_to_error

_640:
	goto _8

_132:
	_716sqlite3UnlinkAndDeleteTable(tls, _db, *(*int32)(unsafe.Pointer(_pOp + 4)), *(*uintptr)(unsafe.Pointer(_pOp + 16)))
	goto _8

_133:
	_717sqlite3UnlinkAndDeleteIndex(tls, _db, *(*int32)(unsafe.Pointer(_pOp + 4)), *(*uintptr)(unsafe.Pointer(_pOp + 16)))
	goto _8

_134:
	_718sqlite3UnlinkAndDeleteTrigger(tls, _db, *(*int32)(unsafe.Pointer(_pOp + 4)), *(*uintptr)(unsafe.Pointer(_pOp + 16)))
	goto _8

_135:
	_nRoot = *(*int32)(unsafe.Pointer(_pOp + 8))
	_aRoot = *(*uintptr)(unsafe.Pointer(_pOp + 16))

	_pnErr = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 12)))

	_pIn1 = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))

	_z = _719sqlite3BtreeIntegrityCheck(tls, *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(*(*uint16)(unsafe.Pointer(_pOp + 2)))) + 8)), _aRoot+4, _nRoot, int32(*(*int64)(unsafe.Pointer(_pnErr)))+int32(1), _nErr)
	_643sqlite3VdbeMemSetNull(tls, _pIn1)
	if (*(*int32)(unsafe.Pointer(_nErr))) != int32(0) {
		goto _641
	}

	goto _642

_641:
	if _z != 0 {
		goto _643
	}

	goto _no_mem

	goto _644

_643:
	{
		p := &(*(*int64)(unsafe.Pointer(_pnErr)))
		*p = int64(int64(*p) - int64((*(*int32)(unsafe.Pointer(_nErr)))-int32(1)))
	}
	_395sqlite3VdbeMemSetStr(tls, _pIn1, _z, int32(-1), uint8(1), fp18(Xsqlite3_free))
_644:
_642:
	_396sqlite3VdbeChangeEncoding(tls, _pIn1, int32(_encoding))
	goto _8

_136:
	_pIn1 = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))
	_pIn2 = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 8)))

	if (int32(*(*uint16)(unsafe.Pointer(_pIn1 + 8))) & int32(0x20)) != int32(0) {
		goto _645
	}

	_720sqlite3VdbeMemSetRowSet(tls, _pIn1)
	if (int32(*(*uint16)(unsafe.Pointer(_pIn1 + 8))) & int32(0x20)) != int32(0) {
		goto _646
	}

	goto _no_mem

_646:
_645:
	_721sqlite3RowSetInsert(tls, *(*uintptr)(unsafe.Pointer(_pIn1)), *(*int64)(unsafe.Pointer(_pIn2)))
	goto _8

_137:
	_pIn1 = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))
	if (int32(*(*uint16)(unsafe.Pointer(_pIn1 + 8)))&int32(0x20)) != int32(0) && _722sqlite3RowSetNext(tls, *(*uintptr)(unsafe.Pointer(_pIn1)), _val) != int32(0) {
		goto _647
	}

	_643sqlite3VdbeMemSetNull(tls, _pIn1)
	goto _jump_to_p2_and_check_for_interrupt

	goto _648

_647:
	_527sqlite3VdbeMemSetInt64(tls, _aMem+56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 12))), *(*int64)(unsafe.Pointer(_val)))
_648:
	goto _check_for_interrupt

_138:
	_pIn1 = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))
	_pIn3 = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 12)))
	_iSet = *(*int32)(unsafe.Pointer(_pOp + 16))

	if (int32(*(*uint16)(unsafe.Pointer(_pIn1 + 8))) & int32(0x20)) != int32(0) {
		goto _649
	}

	_720sqlite3VdbeMemSetRowSet(tls, _pIn1)
	if (int32(*(*uint16)(unsafe.Pointer(_pIn1 + 8))) & int32(0x20)) != int32(0) {
		goto _650
	}

	goto _no_mem

_650:
_649:
	if _iSet == 0 {
		goto _651
	}

	_exists = _723sqlite3RowSetTest(tls, *(*uintptr)(unsafe.Pointer(_pIn1)), _iSet, *(*int64)(unsafe.Pointer(_pIn3)))
	if _exists == 0 {
		goto _652
	}

	goto _jump_to_p2

_652:
_651:
	if _iSet < int32(0) {
		goto _653
	}

	_721sqlite3RowSetInsert(tls, *(*uintptr)(unsafe.Pointer(_pIn1)), *(*int64)(unsafe.Pointer(_pIn3)))
_653:
	goto _8

_139:
	_pProgram = *(*uintptr)(unsafe.Pointer(_pOp + 16))
	_pRt = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 12)))

	if (*(*uint16)(unsafe.Pointer(_pOp + 2))) == 0 {
		goto _654
	}

	_85t = *(*uintptr)(unsafe.Pointer(_pProgram + 32))
	_84pFrame = *(*uintptr)(unsafe.Pointer(_p + 248))
_655:
	if _84pFrame == 0 || (*(*uintptr)(unsafe.Pointer(_84pFrame + 56))) == _85t {
		goto _657
	}

	_84pFrame = *(*uintptr)(unsafe.Pointer(_84pFrame + 8))
	goto _655

_657:
	if _84pFrame == 0 {
		goto _658
	}

	goto _8

_658:
_654:
	if (*(*int32)(unsafe.Pointer(_p + 264))) < (*(*int32)(unsafe.Pointer((_db + 124) + 40))) {
		goto _659
	}

	_rc = int32(1)
	_625sqlite3VdbeError(tls, _p, ts+18657 /* "too many levels of trigger recur..." */)
	goto _abort_due_to_error

_659:
	if (int32(*(*uint16)(unsafe.Pointer(_pRt + 8))) & int32(0x40)) != int32(0) {
		goto _660
	}

	_nMem = (*(*int32)(unsafe.Pointer(_pProgram + 12))) + (*(*int32)(unsafe.Pointer(_pProgram + 16)))

	if (*(*int32)(unsafe.Pointer(_pProgram + 16))) != int32(0) {
		goto _662
	}

	_nMem++
_662:
	_82nByte = int32(((uint64(112) + (uint64(_nMem) * uint64(56))) + (uint64(*(*int32)(unsafe.Pointer(_pProgram + 16))) * uint64(8))) + uint64(((*(*int32)(unsafe.Pointer(_pProgram + 8)))+int32(7))/int32(8)))
	_84pFrame = _295sqlite3DbMallocZero(tls, _db, uint64(_82nByte))
	if _84pFrame != 0 {
		goto _663
	}

	goto _no_mem

_663:
	_397sqlite3VdbeMemRelease(tls, _pRt)
	*(*uint16)(unsafe.Pointer(_pRt + 8)) = uint16(0x40)
	*(*uintptr)(unsafe.Pointer(_pRt)) = _84pFrame
	*(*uintptr)(unsafe.Pointer(_84pFrame)) = _p
	*(*int32)(unsafe.Pointer(_84pFrame + 96)) = _nMem
	*(*int32)(unsafe.Pointer(_84pFrame + 100)) = *(*int32)(unsafe.Pointer(_pProgram + 16))
	*(*int32)(unsafe.Pointer(_84pFrame + 84)) = int32(int64((_pOp - _aOp) / 24))
	*(*uintptr)(unsafe.Pointer(_84pFrame + 32)) = *(*uintptr)(unsafe.Pointer(_p + 112))
	*(*int32)(unsafe.Pointer(_84pFrame + 92)) = *(*int32)(unsafe.Pointer(_p + 40))
	*(*uintptr)(unsafe.Pointer(_84pFrame + 40)) = *(*uintptr)(unsafe.Pointer(_p + 152))
	*(*int32)(unsafe.Pointer(_84pFrame + 80)) = *(*int32)(unsafe.Pointer(_p + 44))
	*(*uintptr)(unsafe.Pointer(_84pFrame + 16)) = *(*uintptr)(unsafe.Pointer(_p + 104))
	*(*int32)(unsafe.Pointer(_84pFrame + 88)) = *(*int32)(unsafe.Pointer(_p + 184))
	*(*uintptr)(unsafe.Pointer(_84pFrame + 56)) = *(*uintptr)(unsafe.Pointer(_pProgram + 32))
	_pEnd = _84pFrame + 112 + 56*uintptr(*(*int32)(unsafe.Pointer(_84pFrame + 96)))
	_83pMem = _84pFrame + 112
_664:
	if _83pMem == _pEnd {
		goto _666
	}

	*(*uint16)(unsafe.Pointer(_83pMem + 8)) = uint16(0x80)
	*(*uintptr)(unsafe.Pointer(_83pMem + 40)) = _db
	_83pMem += 56
	goto _664

_666:
	goto _661

_660:
	_84pFrame = *(*uintptr)(unsafe.Pointer(_pRt))

_661:
	(*(*int32)(unsafe.Pointer(_p + 264)))++
	*(*uintptr)(unsafe.Pointer(_84pFrame + 8)) = *(*uintptr)(unsafe.Pointer(_p + 248))
	*(*int64)(unsafe.Pointer(_84pFrame + 64)) = *(*int64)(unsafe.Pointer(_db + 56))
	*(*int32)(unsafe.Pointer(_84pFrame + 104)) = *(*int32)(unsafe.Pointer(_p + 60))
	*(*int32)(unsafe.Pointer(_84pFrame + 108)) = *(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p))) + 116))

	*(*uintptr)(unsafe.Pointer(_84pFrame + 72)) = *(*uintptr)(unsafe.Pointer(_p + 280))
	*(*uintptr)(unsafe.Pointer(_p + 280)) = null
	*(*int32)(unsafe.Pointer(_p + 60)) = int32(0)
	*(*uintptr)(unsafe.Pointer(_p + 248)) = _84pFrame
	*(*uintptr)(unsafe.Pointer(_p + 112)) = set4(&_aMem, _84pFrame+112)
	*(*int32)(unsafe.Pointer(_p + 40)) = *(*int32)(unsafe.Pointer(_84pFrame + 96))
	*(*int32)(unsafe.Pointer(_p + 44)) = int32(uint16(*(*int32)(unsafe.Pointer(_84pFrame + 100))))
	*(*uintptr)(unsafe.Pointer(_p + 152)) = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_p + 40)))
	*(*uintptr)(unsafe.Pointer(_84pFrame + 48)) = (*(*uintptr)(unsafe.Pointer(_p + 152))) + 8*uintptr(*(*int32)(unsafe.Pointer(_pProgram + 16)))
	crt.Xmemset(tls, *(*uintptr)(unsafe.Pointer(_84pFrame + 48)), int32(0), uint64(((*(*int32)(unsafe.Pointer(_pProgram + 8)))+int32(7))/int32(8)))
	*(*uintptr)(unsafe.Pointer(_p + 104)) = set4(&_aOp, *(*uintptr)(unsafe.Pointer(_pProgram)))
	*(*int32)(unsafe.Pointer(_p + 184)) = *(*int32)(unsafe.Pointer(_pProgram + 8))
	_pOp = _aOp - 24
	goto _8

_140:
	_pOut = _642out2Prerelease(tls, _p, _pOp)
	_86pFrame = *(*uintptr)(unsafe.Pointer(_p + 248))
	_pIn = (*(*uintptr)(unsafe.Pointer(_86pFrame + 32))) + 56*uintptr((*(*int32)(unsafe.Pointer(_pOp + 4)))+(*(*int32)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_86pFrame + 16))) + 24*uintptr(*(*int32)(unsafe.Pointer(_86pFrame + 84)))) + 4))))
	_645sqlite3VdbeMemShallowCopy(tls, _pOut, _pIn, int32(0x1000))
	goto _8

_141:
	if ((*(*uint32)(unsafe.Pointer(_db + 48))) & uint32(0x80000)) == 0 {
		goto _667
	}

	{
		p := &(*(*int64)(unsafe.Pointer(_db + 664)))
		*p = int64(int64(*p) + int64(*(*int32)(unsafe.Pointer(_pOp + 8))))
	}
	goto _668

_667:
	if (*(*int32)(unsafe.Pointer(_pOp + 4))) == 0 {
		goto _669
	}

	{
		p := &(*(*int64)(unsafe.Pointer(_db + 656)))
		*p = int64(int64(*p) + int64(*(*int32)(unsafe.Pointer(_pOp + 8))))
	}
	goto _670

_669:
	{
		p := &(*(*int64)(unsafe.Pointer(_p + 80)))
		*p = int64(int64(*p) + int64(*(*int32)(unsafe.Pointer(_pOp + 8))))
	}
_670:
_668:
	goto _8

_142:
	if (*(*int32)(unsafe.Pointer(_pOp + 4))) == 0 {
		goto _671
	}

	if (*(*int64)(unsafe.Pointer(_db + 656))) != int64(0) || (*(*int64)(unsafe.Pointer(_db + 664))) != int64(0) {
		goto _673
	}

	goto _jump_to_p2

_673:
	goto _672

_671:
	if (*(*int64)(unsafe.Pointer(_p + 80))) != int64(0) || (*(*int64)(unsafe.Pointer(_db + 664))) != int64(0) {
		goto _674
	}

	goto _jump_to_p2

_674:
_672:
	goto _8

_143:
	if (*(*uintptr)(unsafe.Pointer(_p + 248))) == 0 {
		goto _675
	}

	_87pFrame = *(*uintptr)(unsafe.Pointer(_p + 248))
_677:
	if (*(*uintptr)(unsafe.Pointer(_87pFrame + 8))) == 0 {
		goto _679
	}

	_87pFrame = *(*uintptr)(unsafe.Pointer(_87pFrame + 8))
	goto _677

_679:
	_pIn1 = (*(*uintptr)(unsafe.Pointer(_87pFrame + 32))) + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))
	goto _676

_675:
	_pIn1 = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))
_676:
	_656sqlite3VdbeMemIntegerify(tls, _pIn1)
	_pIn2 = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 8)))
	_656sqlite3VdbeMemIntegerify(tls, _pIn2)
	if (*(*int64)(unsafe.Pointer(_pIn1))) >= (*(*int64)(unsafe.Pointer(_pIn2))) {
		goto _680
	}

	*(*int64)(unsafe.Pointer(_pIn1)) = *(*int64)(unsafe.Pointer(_pIn2))
_680:
	goto _8

_144:
	_pIn1 = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))

	if (*(*int64)(unsafe.Pointer(_pIn1))) <= int64(0) {
		goto _681
	}

	{
		p := &(*(*int64)(unsafe.Pointer(_pIn1)))
		*p = int64(int64(*p) - int64(*(*int32)(unsafe.Pointer(_pOp + 12))))
	}
	goto _jump_to_p2

_681:
	goto _8

_145:
	_pIn1 = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))
	_pIn3 = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 12)))
	_pOut = _642out2Prerelease(tls, _p, _pOp)

	*(*int64)(unsafe.Pointer(_88x)) = *(*int64)(unsafe.Pointer(_pIn1))
	if (*(*int64)(unsafe.Pointer(_88x))) > int64(0) && _652sqlite3AddInt64(tls, _88x, func() int64 {
		if (*(*int64)(unsafe.Pointer(_pIn3))) > int64(0) {
			return *(*int64)(unsafe.Pointer(_pIn3))
		}
		return int64(0)
	}()) == 0 {
		goto _682
	}

	*(*int64)(unsafe.Pointer(_pOut)) = int64(-1)
	goto _683

_682:
	*(*int64)(unsafe.Pointer(_pOut)) = *(*int64)(unsafe.Pointer(_88x))
_683:
	goto _8

_146:
	_pIn1 = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))

	if (*(*int64)(unsafe.Pointer(_pIn1))) == 0 {
		goto _684
	}

	if (*(*int64)(unsafe.Pointer(_pIn1))) <= int64(0) {
		goto _685
	}

	(*(*int64)(unsafe.Pointer(_pIn1)))--
_685:
	goto _jump_to_p2

_684:
	goto _8

_147:
	_pIn1 = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))

	if (*(*int64)(unsafe.Pointer(_pIn1))) <= int64(-9223372036854775808) {
		goto _686
	}

	(*(*int64)(unsafe.Pointer(_pIn1)))--
_686:
	if (*(*int64)(unsafe.Pointer(_pIn1))) != int64(0) {
		goto _687
	}

	goto _jump_to_p2

_687:
	goto _8

_148:
	_89n = int32(*(*uint16)(unsafe.Pointer(_pOp + 2)))

	_pCtx = _373sqlite3DbMallocRawNN(tls, _db, uint64(uint64(56)+(uint64(_89n-int32(1))*uint64(8))))
	if _pCtx != 0 {
		goto _688
	}

	goto _no_mem

_688:
	*(*uintptr)(unsafe.Pointer(_pCtx + 16)) = null
	*(*uintptr)(unsafe.Pointer(_pCtx + 8)) = *(*uintptr)(unsafe.Pointer(_pOp + 16))
	*(*int32)(unsafe.Pointer(_pCtx + 32)) = int32(int64((_pOp - _aOp) / 24))
	*(*uintptr)(unsafe.Pointer(_pCtx + 24)) = _p
	*(*uint8)(unsafe.Pointer(_pCtx + 42)) = uint8(_89n)
	*(*int8)(unsafe.Pointer(_pOp + 1)) = int8(-16)
	*(*uintptr)(unsafe.Pointer(_pOp + 16)) = _pCtx
	*(*uint8)(unsafe.Pointer(_pOp)) = uint8(149)
_149:
	_91pCtx = *(*uintptr)(unsafe.Pointer(_pOp + 16))
	_92pMem = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 12)))
	if (*(*uintptr)(unsafe.Pointer(_91pCtx + 16))) == _92pMem {
		goto _689
	}

	*(*uintptr)(unsafe.Pointer(_91pCtx + 16)) = _92pMem
	_90i = int32(*(*uint8)(unsafe.Pointer(_91pCtx + 42))) - int32(1)
_690:
	if _90i < int32(0) {
		goto _692
	}

	*(*uintptr)(unsafe.Pointer((_91pCtx + 48) + 8*uintptr(_90i))) = _aMem + 56*uintptr((*(*int32)(unsafe.Pointer(_pOp + 8)))+_90i)
	_90i--
	goto _690

_692:
_689:
	(*(*int32)(unsafe.Pointer(_92pMem + 12)))++
	_724sqlite3VdbeMemInit(tls, _93t, _db, uint16(0x1))
	*(*uintptr)(unsafe.Pointer(_91pCtx)) = _93t
	*(*uint8)(unsafe.Pointer(_91pCtx + 41)) = uint8(0)
	*(*uint8)(unsafe.Pointer(_91pCtx + 40)) = uint8(0)
	fn68(*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_91pCtx + 8))) + 24)))(tls, _91pCtx, int32(*(*uint8)(unsafe.Pointer(_91pCtx + 42))), _91pCtx+48)
	if (*(*uint8)(unsafe.Pointer(_91pCtx + 41))) == 0 {
		goto _693
	}

	if (*(*int32)(unsafe.Pointer(_91pCtx + 36))) == 0 {
		goto _695
	}

	_625sqlite3VdbeError(tls, _p, ts+429 /* "%s" */, Xsqlite3_value_text(tls, _93t))
	_rc = *(*int32)(unsafe.Pointer(_91pCtx + 36))
_695:
	_397sqlite3VdbeMemRelease(tls, _93t)
	if _rc == 0 {
		goto _696
	}

	goto _abort_due_to_error

_696:
	goto _694

_693:
_694:
	if (*(*uint8)(unsafe.Pointer(_91pCtx + 40))) == 0 {
		goto _697
	}

	_90i = *(*int32)(unsafe.Pointer((_pOp - 24) + 4))
	if _90i == 0 {
		goto _698
	}

	_527sqlite3VdbeMemSetInt64(tls, _aMem+56*uintptr(_90i), int64(1))
_698:
_697:
	goto _8

_150:
	_94pMem = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))

	_rc = _725sqlite3VdbeMemFinalize(tls, _94pMem, *(*uintptr)(unsafe.Pointer(_pOp + 16)))
	if _rc == 0 {
		goto _699
	}

	_625sqlite3VdbeError(tls, _p, ts+429 /* "%s" */, Xsqlite3_value_text(tls, _94pMem))
	goto _abort_due_to_error

_699:
	_396sqlite3VdbeChangeEncoding(tls, _94pMem, int32(_encoding))
	if _644sqlite3VdbeMemTooBig(tls, _94pMem) == 0 {
		goto _700
	}

	goto _too_big

_700:
	goto _8

_151:
	*(*int32)(unsafe.Pointer(_aRes)) = int32(0)
	*(*int32)(unsafe.Pointer(_aRes + 4)) = set5(&(*(*int32)(unsafe.Pointer(_aRes + 8))), int32(-1))

	_rc = _726sqlite3Checkpoint(tls, _db, *(*int32)(unsafe.Pointer(_pOp + 4)), *(*int32)(unsafe.Pointer(_pOp + 8)), _aRes+4, _aRes+8)
	if _rc == 0 {
		goto _701
	}

	if _rc == int32(5) {
		goto _702
	}

	goto _abort_due_to_error

_702:
	_rc = int32(0)
	*(*int32)(unsafe.Pointer(_aRes)) = int32(1)
_701:
	_95i = int32(0)
	_96pMem = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 12)))
_703:
	if _95i >= int32(3) {
		goto _705
	}

	_527sqlite3VdbeMemSetInt64(tls, _96pMem, int64(*(*int32)(unsafe.Pointer(_aRes + 4*uintptr(_95i)))))
	_95i++
	_96pMem += 56
	goto _703

_705:
	goto _8

_152:
	_pOut = _642out2Prerelease(tls, _p, _pOp)
	_eNew = *(*int32)(unsafe.Pointer(_pOp + 12))

	_97pBt = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))) + 8))
	_pPager = _141sqlite3BtreePager(tls, _97pBt)
	_eOld = _147sqlite3PagerGetJournalMode(tls, _pPager)
	if _eNew != int32(-1) {
		goto _706
	}

	_eNew = _eOld
_706:
	if _727sqlite3PagerOkToChangeJournalMode(tls, _pPager) != 0 {
		goto _707
	}

	_eNew = _eOld
_707:
	_zFilename = _511sqlite3PagerFilename(tls, _pPager, int32(1))
	if _eNew != int32(5) || _211sqlite3Strlen30(tls, _zFilename) != int32(0) && _728sqlite3PagerWalSupported(tls, _pPager) != 0 {
		goto _708
	}

	_eNew = _eOld
_708:
	if _eNew == _eOld || _eOld != int32(5) && _eNew != int32(5) {
		goto _709
	}

	if (*(*uint8)(unsafe.Pointer(_db + 95))) != 0 && (*(*int32)(unsafe.Pointer(_db + 188))) <= int32(1) {
		goto _710
	}

	_rc = int32(1)
	_625sqlite3VdbeError(tls, _p, ts+18694 /* "cannot change %s wal mode from w..." */, func() uintptr {
		if _eNew == int32(5) {
			return ts + 18746 /* "into" */
		}
		return ts + 18751 /* "out of" */
	}())
	goto _abort_due_to_error

	goto _711

_710:
	if _eOld != int32(5) {
		goto _712
	}

	_rc = _729sqlite3PagerCloseWal(tls, _pPager, _db)
	if _rc != int32(0) {
		goto _714
	}

	_730sqlite3PagerSetJournalMode(tls, _pPager, _eNew)
_714:
	goto _713

_712:
	if _eOld != int32(4) {
		goto _715
	}

	_730sqlite3PagerSetJournalMode(tls, _pPager, int32(2))
_715:
_713:
	if _rc != int32(0) {
		goto _716
	}

	_rc = _158sqlite3BtreeSetVersion(tls, _97pBt, func() int32 {
		if _eNew == int32(5) {
			return int32(2)
		}
		return int32(1)
	}())
_716:
_711:
_709:
	if _rc == 0 {
		goto _717
	}

	_eNew = _eOld
_717:
	_eNew = _730sqlite3PagerSetJournalMode(tls, _pPager, _eNew)
	*(*uint16)(unsafe.Pointer(_pOut + 8)) = uint16(2562)
	*(*uintptr)(unsafe.Pointer(_pOut + 16)) = _731sqlite3JournalModename(tls, _eNew)
	*(*int32)(unsafe.Pointer(_pOut + 12)) = _211sqlite3Strlen30(tls, *(*uintptr)(unsafe.Pointer(_pOut + 16)))
	*(*uint8)(unsafe.Pointer(_pOut + 10)) = uint8(1)
	_396sqlite3VdbeChangeEncoding(tls, _pOut, int32(_encoding))
	if _rc == 0 {
		goto _718
	}

	goto _abort_due_to_error

_718:
	goto _8

_153:
	_rc = _732sqlite3RunVacuum(tls, _p+144, _db, *(*int32)(unsafe.Pointer(_pOp + 4)))
	if _rc == 0 {
		goto _719
	}

	goto _abort_due_to_error

_719:
	goto _8

_154:
	_98pBt = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))) + 8))
	_rc = _733sqlite3BtreeIncrVacuum(tls, _98pBt)
	if _rc == 0 {
		goto _720
	}

	if _rc == int32(101) {
		goto _721
	}

	goto _abort_due_to_error

_721:
	_rc = int32(0)
	goto _jump_to_p2

_720:
	goto _8

_155:
	if (*(*int32)(unsafe.Pointer(_pOp + 4))) != 0 {
		goto _722
	}

	_132sqlite3ExpirePreparedStatements(tls, _db)
	goto _723

_722:
	set42b(&(*(*uint16)(unsafe.Pointer(_p + 194))), uint32(1))
_723:
	goto _8

_156:
	_isWriteLock = uint8(*(*int32)(unsafe.Pointer(_pOp + 12)))
	if _isWriteLock == 0 && uint32(0) != ((*(*uint32)(unsafe.Pointer(_db + 48)))&uint32(0x400)) {
		goto _724
	}

	_99p1 = *(*int32)(unsafe.Pointer(_pOp + 4))

	_rc = _734sqlite3BtreeLockTable(tls, *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_99p1)) + 8)), *(*int32)(unsafe.Pointer(_pOp + 8)), _isWriteLock)
	if _rc == 0 {
		goto _725
	}

	if (_rc & int32(0xff)) != int32(6) {
		goto _726
	}

	_100z = *(*uintptr)(unsafe.Pointer(_pOp + 16))
	_625sqlite3VdbeError(tls, _p, ts+18758 /* "database table is locked: %s" */, _100z)
_726:
	goto _abort_due_to_error

_725:
_724:
	goto _8

_157:
	_pVTab = *(*uintptr)(unsafe.Pointer(_pOp + 16))
	_rc = _735sqlite3VtabBegin(tls, _db, _pVTab)
	if _pVTab == 0 {
		goto _727
	}

	_698sqlite3VtabImportErrmsg(tls, _p, *(*uintptr)(unsafe.Pointer(_pVTab + 16)))
_727:
	if _rc == 0 {
		goto _728
	}

	goto _abort_due_to_error

_728:
	goto _8

_158:
	crt.Xmemset(tls, _101sMem, int32(0), uint64(56))
	*(*uintptr)(unsafe.Pointer(_101sMem + 40)) = _db

	_rc = _298sqlite3VdbeMemCopy(tls, _101sMem, _aMem+56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 8))))

	_zTab = Xsqlite3_value_text(tls, _101sMem)

	if _zTab == 0 {
		goto _729
	}

	_rc = _736sqlite3VtabCallCreate(tls, _db, *(*int32)(unsafe.Pointer(_pOp + 4)), _zTab, _p+144)
_729:
	_397sqlite3VdbeMemRelease(tls, _101sMem)
	if _rc == 0 {
		goto _730
	}

	goto _abort_due_to_error

_730:
	goto _8

_159:
	(*(*int32)(unsafe.Pointer(_db + 200)))++
	_rc = _737sqlite3VtabCallDestroy(tls, _db, *(*int32)(unsafe.Pointer(_pOp + 4)), *(*uintptr)(unsafe.Pointer(_pOp + 16)))
	(*(*int32)(unsafe.Pointer(_db + 200)))--
	if _rc == 0 {
		goto _731
	}

	goto _abort_due_to_error

_731:
	goto _8

_160:
	_102pCur = null
	*(*uintptr)(unsafe.Pointer(_pVCur)) = null
	_103pVtab = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pOp + 16))) + 16))
	if _103pVtab != 0 && (*(*uintptr)(unsafe.Pointer(_103pVtab))) != 0 {
		goto _732
	}

	_rc = int32(6)
	goto _abort_due_to_error

_732:
	_104pModule = *(*uintptr)(unsafe.Pointer(_103pVtab))
	_rc = fn58(*(*uintptr)(unsafe.Pointer(_104pModule + 48)))(tls, _103pVtab, _pVCur)
	_698sqlite3VtabImportErrmsg(tls, _p, _103pVtab)
	if _rc == 0 {
		goto _733
	}

	goto _abort_due_to_error

_733:
	*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pVCur)))) = _103pVtab
	_102pCur = _678allocateCursor(tls, _p, *(*int32)(unsafe.Pointer(_pOp + 4)), int32(0), int32(-1), uint8(2))
	if _102pCur == 0 {
		goto _734
	}

	*(*uintptr)(unsafe.Pointer(_102pCur + 48)) = *(*uintptr)(unsafe.Pointer(_pVCur))
	(*(*int32)(unsafe.Pointer(_103pVtab + 8)))++
	goto _735

_734:
	fn12(*(*uintptr)(unsafe.Pointer(_104pModule + 56)))(tls, *(*uintptr)(unsafe.Pointer(_pVCur)))
	goto _no_mem

_735:
	goto _8

_161:
	_pQuery = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 12)))
	_pArgc = _pQuery + 56
	_108pCur = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 152))) + 8*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))))

	_106pVCur = *(*uintptr)(unsafe.Pointer(_108pCur + 48))
	_107pVtab = *(*uintptr)(unsafe.Pointer(_106pVCur))
	_105pModule = *(*uintptr)(unsafe.Pointer(_107pVtab))

	_nArg = int32(*(*int64)(unsafe.Pointer(_pArgc)))
	_iQuery = int32(*(*int64)(unsafe.Pointer(_pQuery)))
	_109res = int32(0)
	_apArg = *(*uintptr)(unsafe.Pointer(_p + 120))
	_110i = int32(0)
_736:
	if _110i >= _nArg {
		goto _738
	}

	*(*uintptr)(unsafe.Pointer(_apArg + 8*uintptr(_110i))) = _pArgc + 56*uintptr(_110i+int32(1))
	_110i++
	goto _736

_738:
	_rc = fn69(*(*uintptr)(unsafe.Pointer(_105pModule + 64)))(tls, _106pVCur, _iQuery, *(*uintptr)(unsafe.Pointer(_pOp + 16)), _nArg, _apArg)
	_698sqlite3VtabImportErrmsg(tls, _p, _107pVtab)
	if _rc == 0 {
		goto _739
	}

	goto _abort_due_to_error

_739:
	_109res = fn12(*(*uintptr)(unsafe.Pointer(_105pModule + 80)))(tls, _106pVCur)
	*(*uint8)(unsafe.Pointer(_108pCur + 2)) = uint8(0)
	if _109res == 0 {
		goto _740
	}

	goto _jump_to_p2

_740:
	goto _8

_162:
	_114pCur = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 152))) + 8*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))))

	_113pDest = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 12)))
	if (*(*uint8)(unsafe.Pointer(_114pCur + 2))) == 0 {
		goto _741
	}

	_643sqlite3VdbeMemSetNull(tls, _113pDest)
	goto _8

_741:
	_111pVtab = *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_114pCur + 48))))
	_112pModule = *(*uintptr)(unsafe.Pointer(_111pVtab))

	crt.Xmemset(tls, _sContext, int32(0), uint64(56))
	*(*uintptr)(unsafe.Pointer(_sContext)) = _113pDest
	*(*uint16)(unsafe.Pointer(_113pDest + 8)) = uint16((int32(*(*uint16)(unsafe.Pointer(_113pDest + 8))) & int32(-49664)) | int32(0x1))
	_rc = fn70(*(*uintptr)(unsafe.Pointer(_112pModule + 88)))(tls, *(*uintptr)(unsafe.Pointer(_114pCur + 48)), _sContext, *(*int32)(unsafe.Pointer(_pOp + 8)))
	_698sqlite3VtabImportErrmsg(tls, _p, _111pVtab)
	if (*(*int32)(unsafe.Pointer(_sContext + 36))) == 0 {
		goto _742
	}

	_rc = *(*int32)(unsafe.Pointer(_sContext + 36))
_742:
	_396sqlite3VdbeChangeEncoding(tls, _113pDest, int32(_encoding))
	if _644sqlite3VdbeMemTooBig(tls, _113pDest) == 0 {
		goto _743
	}

	goto _too_big

_743:
	if _rc == 0 {
		goto _744
	}

	goto _abort_due_to_error

_744:
	goto _8

_163:
	_117res = int32(0)
	_118pCur = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 152))) + 8*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))))

	if (*(*uint8)(unsafe.Pointer(_118pCur + 2))) == 0 {
		goto _745
	}

	goto _8

_745:
	_115pVtab = *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_118pCur + 48))))
	_116pModule = *(*uintptr)(unsafe.Pointer(_115pVtab))

	_rc = fn12(*(*uintptr)(unsafe.Pointer(_116pModule + 72)))(tls, *(*uintptr)(unsafe.Pointer(_118pCur + 48)))
	_698sqlite3VtabImportErrmsg(tls, _p, _115pVtab)
	if _rc == 0 {
		goto _746
	}

	goto _abort_due_to_error

_746:
	_117res = fn12(*(*uintptr)(unsafe.Pointer(_116pModule + 80)))(tls, *(*uintptr)(unsafe.Pointer(_118pCur + 48)))
	if _117res != 0 {
		goto _747
	}

	goto _jump_to_p2_and_check_for_interrupt

_747:
	goto _check_for_interrupt

_164:
	_119pVtab = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pOp + 16))) + 16))
	_pName = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))

	_rc = _396sqlite3VdbeChangeEncoding(tls, _pName, int32(1))
	if _rc == 0 {
		goto _748
	}

	goto _abort_due_to_error

_748:
	_rc = fn58(*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_119pVtab))) + 152)))(tls, _119pVtab, *(*uintptr)(unsafe.Pointer(_pName + 16)))
	_698sqlite3VtabImportErrmsg(tls, _p, _119pVtab)
	set42b(&(*(*uint16)(unsafe.Pointer(_p + 194))), uint32(0))
	if _rc == 0 {
		goto _749
	}

	goto _abort_due_to_error

_749:
	goto _8

_165:
	_120pVtab = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pOp + 16))) + 16))
	if _120pVtab != 0 && (*(*uintptr)(unsafe.Pointer(_120pVtab))) != 0 {
		goto _750
	}

	_rc = int32(6)
	goto _abort_due_to_error

_750:
	_121pModule = *(*uintptr)(unsafe.Pointer(_120pVtab))
	_122nArg = *(*int32)(unsafe.Pointer(_pOp + 8))

	if *(*uintptr)(unsafe.Pointer(_121pModule + 104)) == 0 {
		goto _751
	}

	_vtabOnConflict = *(*uint8)(unsafe.Pointer(_db + 102))
	_125apArg = *(*uintptr)(unsafe.Pointer(_p + 120))
	_126pX = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 12)))
	_123i = int32(0)
_752:
	if _123i >= _122nArg {
		goto _754
	}

	*(*uintptr)(unsafe.Pointer(_125apArg + 8*uintptr(_123i))) = _126pX
	_126pX += 56
	_123i++
	goto _752

_754:
	*(*uint8)(unsafe.Pointer(_db + 102)) = uint8(*(*uint16)(unsafe.Pointer(_pOp + 2)))
	_rc = fn21(*(*uintptr)(unsafe.Pointer(_121pModule + 104)))(tls, _120pVtab, _122nArg, _125apArg, _124rowid)
	*(*uint8)(unsafe.Pointer(_db + 102)) = _vtabOnConflict
	_698sqlite3VtabImportErrmsg(tls, _p, _120pVtab)
	if _rc != int32(0) || (*(*int32)(unsafe.Pointer(_pOp + 4))) == 0 {
		goto _755
	}

	*(*int64)(unsafe.Pointer(_db + 56)) = int64(*(*int64)(unsafe.Pointer(_124rowid)))
_755:
	if (_rc&int32(0xff)) != int32(19) || (*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pOp + 16))) + 28))) == 0 {
		goto _756
	}

	if int32(*(*uint16)(unsafe.Pointer(_pOp + 2))) != int32(4) {
		goto _758
	}

	_rc = int32(0)
	goto _759

_758:
	*(*uint8)(unsafe.Pointer(_p + 190)) = uint8(func() int32 {
		if int32(*(*uint16)(unsafe.Pointer(_pOp + 2))) == int32(5) {
			return int32(2)
		}
		return int32(*(*uint16)(unsafe.Pointer(_pOp + 2)))
	}())
_759:
	goto _757

_756:
	(*(*int32)(unsafe.Pointer(_p + 60)))++
_757:
	if _rc == 0 {
		goto _760
	}

	goto _abort_due_to_error

_760:
_751:
	goto _8

_166:
	_pOut = _642out2Prerelease(tls, _p, _pOp)
	*(*int64)(unsafe.Pointer(_pOut)) = int64(_148sqlite3BtreeLastPage(tls, *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))) + 8))))
	goto _8

_167:
	_pOut = _642out2Prerelease(tls, _p, _pOp)
	_127pBt = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(*(*int32)(unsafe.Pointer(_pOp + 4)))) + 8))
	_newMax = uint32(0)
	if (*(*int32)(unsafe.Pointer(_pOp + 12))) == 0 {
		goto _761
	}

	_newMax = _148sqlite3BtreeLastPage(tls, _127pBt)
	if _newMax >= uint32(*(*int32)(unsafe.Pointer(_pOp + 12))) {
		goto _762
	}

	_newMax = uint32(*(*int32)(unsafe.Pointer(_pOp + 12)))
_762:
_761:
	*(*int64)(unsafe.Pointer(_pOut)) = int64(_738sqlite3BtreeMaxPageCount(tls, _127pBt, int32(_newMax)))
	goto _8

_168:
_169:
	_128n = int32(*(*uint16)(unsafe.Pointer(_pOp + 2)))

	_129pCtx = _373sqlite3DbMallocRawNN(tls, _db, uint64(uint64(56)+(uint64(_128n-int32(1))*uint64(8))))
	if _129pCtx != 0 {
		goto _763
	}

	goto _no_mem

_763:
	*(*uintptr)(unsafe.Pointer(_129pCtx)) = null
	*(*uintptr)(unsafe.Pointer(_129pCtx + 8)) = *(*uintptr)(unsafe.Pointer(_pOp + 16))
	*(*int32)(unsafe.Pointer(_129pCtx + 32)) = int32(int64((_pOp - _aOp) / 24))
	*(*uintptr)(unsafe.Pointer(_129pCtx + 24)) = _p
	*(*uint8)(unsafe.Pointer(_129pCtx + 42)) = uint8(_128n)
	*(*int8)(unsafe.Pointer(_pOp + 1)) = int8(-16)
	*(*uintptr)(unsafe.Pointer(_pOp + 16)) = _129pCtx

	{
		p := &(*(*uint8)(unsafe.Pointer(_pOp)))
		*p = uint8(int32(*p) + int32(2))
	}
_170:
_171:
	_131pCtx = *(*uintptr)(unsafe.Pointer(_pOp + 16))
	_pOut = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 12)))
	if (*(*uintptr)(unsafe.Pointer(_131pCtx))) == _pOut {
		goto _764
	}

	*(*uintptr)(unsafe.Pointer(_131pCtx)) = _pOut
	_130i = int32(*(*uint8)(unsafe.Pointer(_131pCtx + 42))) - int32(1)
_765:
	if _130i < int32(0) {
		goto _767
	}

	*(*uintptr)(unsafe.Pointer((_131pCtx + 48) + 8*uintptr(_130i))) = _aMem + 56*uintptr((*(*int32)(unsafe.Pointer(_pOp + 8)))+_130i)
	_130i--
	goto _765

_767:
_764:
	*(*uint16)(unsafe.Pointer(_pOut + 8)) = uint16((int32(*(*uint16)(unsafe.Pointer(_pOut + 8))) & int32(-49664)) | int32(0x1))
	*(*uint8)(unsafe.Pointer(_131pCtx + 41)) = uint8(0)
	fn68(*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_131pCtx + 8))) + 24)))(tls, _131pCtx, int32(*(*uint8)(unsafe.Pointer(_131pCtx + 42))), _131pCtx+48)
	if (*(*uint8)(unsafe.Pointer(_131pCtx + 41))) == 0 {
		goto _768
	}

	if (*(*int32)(unsafe.Pointer(_131pCtx + 36))) == 0 {
		goto _769
	}

	_625sqlite3VdbeError(tls, _p, ts+429 /* "%s" */, Xsqlite3_value_text(tls, _pOut))
	_rc = *(*int32)(unsafe.Pointer(_131pCtx + 36))
_769:
	_739sqlite3VdbeDeleteAuxData(tls, _db, _p+280, *(*int32)(unsafe.Pointer(_131pCtx + 32)), *(*int32)(unsafe.Pointer(_pOp + 4)))
	if _rc == 0 {
		goto _770
	}

	goto _abort_due_to_error

_770:
_768:
	if (int32(*(*uint16)(unsafe.Pointer(_pOut + 8))) & int32(18)) == 0 {
		goto _771
	}

	_396sqlite3VdbeChangeEncoding(tls, _pOut, int32(_encoding))
	if _644sqlite3VdbeMemTooBig(tls, _pOut) == 0 {
		goto _772
	}

	goto _too_big

_772:
_771:
	goto _8

_172:
	if (int32(*(*uint8)(unsafe.Pointer(_db + 104)))&int32(129)) == int32(0) || (uint32((*(*uint16)(unsafe.Pointer(_p + 194)))>>1)<<31>>31) != 0 || set4(&_zTrace, func() uintptr {
		if (*(*uintptr)(unsafe.Pointer(_pOp + 16))) != 0 {
			return *(*uintptr)(unsafe.Pointer(_pOp + 16))
		}
		return *(*uintptr)(unsafe.Pointer(_p + 232))
	}()) == 0 {
		goto _773
	}

	if (int32(*(*uint8)(unsafe.Pointer(_db + 104))) & int32(0x80)) == 0 {
		goto _774
	}

	_133x = *(*uintptr)(unsafe.Pointer(_db + 216))
	_134z = _740sqlite3VdbeExpandSql(tls, _p, _zTrace)
	fn71(_133x)(tls, *(*uintptr)(unsafe.Pointer(_db + 224)), _134z)
	Xsqlite3_free(tls, _134z)
	goto _775

_774:
	if (*(*int32)(unsafe.Pointer(_db + 196))) <= int32(1) {
		goto _776
	}

	_135z = _226sqlite3MPrintf(tls, _db, ts+18787 /* "-- %s" */, _zTrace)
	fn28(*(*uintptr)(unsafe.Pointer(_db + 216)))(tls, uint32(0x1), *(*uintptr)(unsafe.Pointer(_db + 224)), _p, _135z)
	_181sqlite3DbFree(tls, _db, _135z)
	goto _777

_776:
	fn28(*(*uintptr)(unsafe.Pointer(_db + 216)))(tls, uint32(0x1), *(*uintptr)(unsafe.Pointer(_db + 224)), _p, _zTrace)
_777:
_775:
_773:
	if (*(*int32)(unsafe.Pointer(_pOp + 4))) < (*(*int32)(unsafe.Pointer(_28sqlite3Config + 420))) {
		goto _778
	}

	_132i = int32(1)
_779:
	if _132i >= (*(*int32)(unsafe.Pointer(_p + 184))) {
		goto _781
	}

	if int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 104))) + 24*uintptr(_132i)))) != int32(20) {
		goto _782
	}

	*(*int32)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_p + 104))) + 24*uintptr(_132i)) + 4)) = int32(0)
_782:
	_132i++
	goto _779

_781:
	*(*int32)(unsafe.Pointer(_pOp + 4)) = int32(0)
_778:
	(*(*int32)(unsafe.Pointer(_pOp + 4)))++
	(*(*uint32)(unsafe.Pointer((_p + 204) + 24)))++
	goto _jump_to_p2

_173:
	goto _8

_8:
	_pOp += 24
	goto _5

_7:
	goto _abort_due_to_error
_abort_due_to_error:
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _783
	}

	_rc = int32(7)
_783:
	if (*(*uintptr)(unsafe.Pointer(_p + 144))) != 0 || _rc == int32(3082) {
		goto _784
	}

	_625sqlite3VdbeError(tls, _p, ts+429 /* "%s" */, _123sqlite3ErrStr(tls, _rc))
_784:
	*(*int32)(unsafe.Pointer(_p + 56)) = _rc
	_313sqlite3SystemError(tls, _db, _rc)
	Xsqlite3_log(tls, _rc, ts+18793 /* "statement aborts at %d: [%s] %s" */, int32(int64((_pOp-_aOp)/24)), *(*uintptr)(unsafe.Pointer(_p + 232)), *(*uintptr)(unsafe.Pointer(_p + 144)))
	_398sqlite3VdbeHalt(tls, _p)
	if _rc != int32(3082) {
		goto _785
	}

	_178sqlite3OomFault(tls, _db)
_785:
	_rc = int32(1)
	if int32(_resetSchemaOnFault) <= int32(0) {
		goto _786
	}

	_382sqlite3ResetOneSchema(tls, _db, int32(_resetSchemaOnFault)-int32(1))
_786:
	goto _vdbe_return
_vdbe_return:
	{
		p := &(*(*uint32)(unsafe.Pointer((_p + 204) + 16)))
		*p = uint32(uint32(*p) + uint32(int32(_nVmStep)))
	}
	_741sqlite3VdbeLeave(tls, _p)

	return _rc

	goto _too_big
_too_big:
	_625sqlite3VdbeError(tls, _p, ts+17728 /* "string or blob too big" */)
	_rc = int32(18)
	goto _abort_due_to_error

	goto _no_mem
_no_mem:
	_178sqlite3OomFault(tls, _db)
	_625sqlite3VdbeError(tls, _p, ts+17500 /* "out of memory" */)
	_rc = int32(7)
	goto _abort_due_to_error

	goto _abort_due_to_interrupt
_abort_due_to_interrupt:
	_rc = func() int32 {
		if (*(*uint8)(unsafe.Pointer(_db + 97))) != 0 {
			return int32(7)
		}
		return int32(9)
	}()
	*(*int32)(unsafe.Pointer(_p + 56)) = _rc
	_625sqlite3VdbeError(tls, _p, ts+429 /* "%s" */, _123sqlite3ErrStr(tls, _rc))
	goto _abort_due_to_error
	return r
}

// _386doWalCallbacks is defined at sqlite3.c:77423:12
func _386doWalCallbacks(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */) (r int32) {
	var (
		_rc     int32
		_i      int32
		_pBt    uintptr // *TBtree = SBtree
		_nEntry int32
	)
	_rc = int32(0)
	_i = int32(0)
_1:
	if _i >= (*(*int32)(unsafe.Pointer(_db + 40))) {
		goto _3
	}

	_pBt = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_i)) + 8))
	if _pBt == 0 {
		goto _4
	}

	_139sqlite3BtreeEnter(tls, _pBt)
	_nEntry = _742sqlite3PagerWalCallback(tls, _141sqlite3BtreePager(tls, _pBt))
	_169sqlite3BtreeLeave(tls, _pBt)
	if _nEntry <= int32(0) || (*(*uintptr)(unsafe.Pointer(_db + 296))) == 0 || _rc != int32(0) {
		goto _5
	}

	_rc = fn72(*(*uintptr)(unsafe.Pointer(_db + 296)))(tls, *(*uintptr)(unsafe.Pointer(_db + 304)), _db, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_i))), _nEntry)
_5:
_4:
	_i++
	goto _1

_3:
	return _rc
}

// _387sqlite3VdbeTransferError is defined at sqlite3.c:75004:20
func _387sqlite3VdbeTransferError(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */) (r int32) {
	var (
		_db uintptr // *Tsqlite3 = Ssqlite3
		_rc int32
	)
	_db = *(*uintptr)(unsafe.Pointer(_p))
	_rc = *(*int32)(unsafe.Pointer(_p + 56))
	if (*(*uintptr)(unsafe.Pointer(_p + 144))) == 0 {
		goto _1
	}

	(*(*uint8)(unsafe.Pointer(_db + 98)))++
	_523sqlite3BeginBenignMalloc(tls)
	if (*(*uintptr)(unsafe.Pointer(_db + 336))) != 0 {
		goto _3
	}

	*(*uintptr)(unsafe.Pointer(_db + 336)) = _314sqlite3ValueNew(tls, _db)
_3:
	_316sqlite3ValueSetStr(tls, *(*uintptr)(unsafe.Pointer(_db + 336)), int32(-1), *(*uintptr)(unsafe.Pointer(_p + 144)), uint8(1), uintptr(18446744073709551615))
	_524sqlite3EndBenignMalloc(tls)
	(*(*uint8)(unsafe.Pointer(_db + 98)))--
	goto _2

_1:
	if (*(*uintptr)(unsafe.Pointer(_db + 336))) == 0 {
		goto _4
	}

	_548sqlite3ValueSetNull(tls, *(*uintptr)(unsafe.Pointer(_db + 336)))
_4:
_2:
	*(*int32)(unsafe.Pointer(_db + 80)) = _rc
	return _rc
}

// _388sqlite3VdbeDb is defined at sqlite3.c:76727:24
func _388sqlite3VdbeDb(tls crt.TLS, _v uintptr /* *TVdbe = SVdbe */) (r uintptr /* *Tsqlite3 = Ssqlite3 */) {
	return *(*uintptr)(unsafe.Pointer(_v))
}

// _389sqlite3VdbePrepareFlags is defined at sqlite3.c:76734:19
func _389sqlite3VdbePrepareFlags(tls crt.TLS, _v uintptr /* *TVdbe = SVdbe */) (r uint8) {
	return *(*uint8)(unsafe.Pointer(_v + 192))
}

// _390sqlite3VdbeSwap is defined at sqlite3.c:72255:21
func _390sqlite3VdbeSwap(tls crt.TLS, _pA uintptr /* *TVdbe = SVdbe */, _pB uintptr /* *TVdbe = SVdbe */) {
	var (
		_tmp  SVdbe
		_pTmp uintptr // *TVdbe = SVdbe
		_zTmp uintptr // *int8
	)

	_tmp = *(*SVdbe)(unsafe.Pointer(_pA))
	*(*SVdbe)(unsafe.Pointer(_pA)) = *(*SVdbe)(unsafe.Pointer(_pB))
	*(*SVdbe)(unsafe.Pointer(_pB)) = _tmp
	_pTmp = *(*uintptr)(unsafe.Pointer(_pA + 16))
	*(*uintptr)(unsafe.Pointer(_pA + 16)) = *(*uintptr)(unsafe.Pointer(_pB + 16))
	*(*uintptr)(unsafe.Pointer(_pB + 16)) = _pTmp
	_pTmp = *(*uintptr)(unsafe.Pointer(_pA + 8))
	*(*uintptr)(unsafe.Pointer(_pA + 8)) = *(*uintptr)(unsafe.Pointer(_pB + 8))
	*(*uintptr)(unsafe.Pointer(_pB + 8)) = _pTmp
	_zTmp = *(*uintptr)(unsafe.Pointer(_pA + 232))
	*(*uintptr)(unsafe.Pointer(_pA + 232)) = *(*uintptr)(unsafe.Pointer(_pB + 232))
	*(*uintptr)(unsafe.Pointer(_pB + 232)) = _zTmp
	*(*uint32)(unsafe.Pointer(_pB + 268)) = *(*uint32)(unsafe.Pointer(_pA + 268))
	*(*uint8)(unsafe.Pointer(_pB + 192)) = *(*uint8)(unsafe.Pointer(_pA + 192))
	crt.Xmemcpy(tls, _pB+204, _pA+204, uint64(28))
	(*(*uint32)(unsafe.Pointer((_pB + 204) + 20)))++
}

// _391sqlite3TransferBindings is defined at sqlite3.c:78460:20
func _391sqlite3TransferBindings(tls crt.TLS, _pFromStmt uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */, _pToStmt uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */) (r int32) {
	var (
		_pFrom uintptr // *TVdbe = SVdbe
		_pTo   uintptr // *TVdbe = SVdbe
		_i     int32
	)
	_pFrom = _pFromStmt
	_pTo = _pToStmt

	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTo))) + 24)))
	_i = int32(0)
_1:
	if _i >= int32(*(*int16)(unsafe.Pointer(_pFrom + 32))) {
		goto _3
	}

	_646sqlite3VdbeMemMove(tls, (*(*uintptr)(unsafe.Pointer(_pTo + 160)))+56*uintptr(_i), (*(*uintptr)(unsafe.Pointer(_pFrom + 160)))+56*uintptr(_i))
	_i++
	goto _1

_3:
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTo))) + 24)))
	return int32(0)
}

// _392sqlite3VdbeResetStepResult is defined at sqlite3.c:74992:21
func _392sqlite3VdbeResetStepResult(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */) {
	*(*int32)(unsafe.Pointer(_p + 56)) = int32(0)
}

type ScompareInfo struct {
	XmatchAll uint8
	XmatchOne uint8
	XmatchSet uint8
	XnoCase   uint8
}

// _393sqlite3Utf8Read is defined at sqlite3.c:27762:20
func _393sqlite3Utf8Read(tls crt.TLS, _pz uintptr /* **uint8 */) (r uint32) {
	var _c uint32

	_c = uint32(*(*uint8)(unsafe.Pointer(postinc19(&*(*uintptr)(unsafe.Pointer(_pz))))))
	if _c < uint32(0xc0) {
		goto _1
	}

	_c = uint32(*(*uint8)(unsafe.Pointer(_743sqlite3Utf8Trans1 + uintptr(_c-uint32(0xc0)))))
_2:
	if (int32(*(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pz))))) & int32(0xc0)) != int32(0x80) {
		goto _3
	}

	_c = (_c << (uint(6) % 32)) + uint32(int32(0x3f)&int32(*(*uint8)(unsafe.Pointer(postinc19(&*(*uintptr)(unsafe.Pointer(_pz)))))))
	goto _2

_3:
	if _c >= uint32(0x80) && (_c&uint32(0xfffff800)) != uint32(0xd800) && (_c&uint32(0xfffffffe)) != uint32(0xfffe) {
		goto _4
	}

	_c = uint32(0xfffd)
_4:
_1:
	return _c
}

// _394mallocWithAlarm is defined at sqlite3.c:25010:13
func _394mallocWithAlarm(tls crt.TLS, _n int32, _pp uintptr /* **void */) {
	var (
		_p     uintptr // *void
		_nFull int32
		_nUsed int64
	)

	_nFull = fn48(*(*uintptr)(unsafe.Pointer((_28sqlite3Config + 48) + 32)))(tls, _n)
	_434sqlite3StatusHighwater(tls, int32(5), _n)
	if (*(*int64)(unsafe.Pointer(_107mem0 + 8))) <= int64(0) {
		goto _1
	}

	_nUsed = _435sqlite3StatusValue(tls, int32(0))
	if _nUsed < ((*(*int64)(unsafe.Pointer(_107mem0 + 8))) - int64(_nFull)) {
		goto _2
	}

	*(*int32)(unsafe.Pointer(_107mem0 + 16)) = int32(1)
	_436sqlite3MallocAlarm(tls, _nFull)
	goto _3

_2:
	*(*int32)(unsafe.Pointer(_107mem0 + 16)) = int32(0)
_3:
_1:
	_p = fn17(*(*uintptr)(unsafe.Pointer(_28sqlite3Config + 48)))(tls, _nFull)
	if _p == 0 {
		goto _4
	}

	_nFull = _109sqlite3MallocSize(tls, _p)
	_437sqlite3StatusUp(tls, int32(0), _nFull)
	_437sqlite3StatusUp(tls, int32(9), int32(1))
_4:
	*(*uintptr)(unsafe.Pointer(_pp)) = _p
}

// _395sqlite3VdbeMemSetStr is defined at sqlite3.c:71327:20
func _395sqlite3VdbeMemSetStr(tls crt.TLS, _pMem uintptr /* *TMem = Ssqlite3_value */, _z uintptr /* *int8 */, _n int32, _enc uint8, _xDel uintptr /* *func(crt.TLS, uintptr) */) (r int32) {
	var (
		_nByte  int32
		_iLimit int32
		_flags  uint16
		_nAlloc int32
	)
	_nByte = _n
	_flags = uint16(0)

	if _z != 0 {
		goto _1
	}

	_643sqlite3VdbeMemSetNull(tls, _pMem)
	return int32(0)

_1:
	if (*(*uintptr)(unsafe.Pointer(_pMem + 40))) == 0 {
		goto _2
	}

	_iLimit = *(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pMem + 40))) + 124))
	goto _3

_2:
	_iLimit = int32(1000000000)
_3:
	_flags = uint16(func() int32 {
		if int32(_enc) == int32(0) {
			return int32(0x10)
		}
		return int32(0x2)
	}())
	if _nByte >= int32(0) {
		goto _4
	}

	if int32(_enc) != int32(1) {
		goto _5
	}

	_nByte = int32(0x7fffffff) & int32(crt.Xstrlen(tls, _z))
	if _nByte <= _iLimit {
		goto _7
	}

	_nByte = _iLimit + int32(1)
_7:
	goto _6

_5:
	_nByte = int32(0)
_8:
	if _nByte > _iLimit || int32(*(*int8)(unsafe.Pointer(_z + uintptr(_nByte))))|int32(*(*int8)(unsafe.Pointer(_z + uintptr(_nByte+int32(1))))) == 0 {
		goto _10
	}

	_nByte = int32(_nByte + int32(2))
	goto _8

_10:
_6:
	_flags = uint16(int32(_flags) | int32(0x200))
_4:
	if _xDel != uintptr(18446744073709551615) {
		goto _11
	}

	_nAlloc = _nByte
	if (int32(_flags) & int32(0x200)) == 0 {
		goto _13
	}

	_nAlloc = int32(_nAlloc + func() int32 {
		if int32(_enc) == int32(1) {
			return int32(1)
		}
		return int32(2)
	}())
_13:
	if _nByte <= _iLimit {
		goto _14
	}

	return int32(18)

_14:
	if _628sqlite3VdbeMemClearAndResize(tls, _pMem, func() int32 {
		if _nAlloc > int32(32) {
			return _nAlloc
		}
		return int32(32)
	}()) == 0 {
		goto _15
	}

	return int32(7)

_15:
	crt.Xmemcpy(tls, *(*uintptr)(unsafe.Pointer(_pMem + 16)), _z, uint64(_nAlloc))
	goto _12

_11:
	if _xDel != fp10(_109sqlite3MallocSize) {
		goto _16
	}

	_397sqlite3VdbeMemRelease(tls, _pMem)
	*(*uintptr)(unsafe.Pointer(_pMem + 24)) = set4(&(*(*uintptr)(unsafe.Pointer(_pMem + 16))), _z)
	*(*int32)(unsafe.Pointer(_pMem + 32)) = _744sqlite3DbMallocSize(tls, *(*uintptr)(unsafe.Pointer(_pMem + 40)), *(*uintptr)(unsafe.Pointer(_pMem + 24)))
	goto _17

_16:
	_397sqlite3VdbeMemRelease(tls, _pMem)
	*(*uintptr)(unsafe.Pointer(_pMem + 16)) = _z
	*(*uintptr)(unsafe.Pointer(_pMem + 48)) = _xDel
	_flags = uint16(int32(_flags) | func() int32 {
		if _xDel == null {
			return int32(0x800)
		}
		return int32(0x400)
	}())
_17:
_12:
	*(*int32)(unsafe.Pointer(_pMem + 12)) = _nByte
	*(*uint16)(unsafe.Pointer(_pMem + 8)) = _flags
	*(*uint8)(unsafe.Pointer(_pMem + 10)) = uint8(func() int32 {
		if int32(_enc) == int32(0) {
			return int32(1)
		}
		return int32(_enc)
	}())
	if int32(*(*uint8)(unsafe.Pointer(_pMem + 10))) == int32(1) || _745sqlite3VdbeMemHandleBom(tls, _pMem) == 0 {
		goto _18
	}

	return int32(7)

_18:
	if _nByte <= _iLimit {
		goto _19
	}

	return int32(18)

_19:
	return int32(0)
}

// _396sqlite3VdbeChangeEncoding is defined at sqlite3.c:70528:20
func _396sqlite3VdbeChangeEncoding(tls crt.TLS, _pMem uintptr /* *TMem = Ssqlite3_value */, _desiredEnc int32) (r int32) {
	var _rc int32

	if int32(*(*uint16)(unsafe.Pointer(_pMem + 8)))&int32(0x2) != 0 && int32(*(*uint8)(unsafe.Pointer(_pMem + 10))) != _desiredEnc {
		goto _1
	}

	return int32(0)

_1:
	_rc = _746sqlite3VdbeMemTranslate(tls, _pMem, uint8(_desiredEnc))

	return _rc
}

// _397sqlite3VdbeMemRelease is defined at sqlite3.c:70853:21
func _397sqlite3VdbeMemRelease(tls crt.TLS, _p uintptr /* *TMem = Ssqlite3_value */) {
	if (int32(*(*uint16)(unsafe.Pointer(_p + 8)))&int32(9312)) == int32(0) && (*(*int32)(unsafe.Pointer(_p + 32))) == 0 {
		goto _1
	}

	_747vdbeMemClear(tls, _p)
_1:
}

// _398sqlite3VdbeHalt is defined at sqlite3.c:74791:20
func _398sqlite3VdbeHalt(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */) (r int32) {
	var (
		_rc             int32
		_db             uintptr // *Tsqlite3 = Ssqlite3
		_mrc            int32
		_eStatementOp   int32
		_isSpecialError int32
	)
	_db = *(*uintptr)(unsafe.Pointer(_p))
	if (*(*uint32)(unsafe.Pointer(_p + 36))) == uint32(0x2df20da3) {
		goto _1
	}

	return int32(0)

_1:
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _2
	}

	*(*int32)(unsafe.Pointer(_p + 56)) = int32(7)
_2:
	_748closeAllCursors(tls, _p)
	if (*(*int32)(unsafe.Pointer(_p + 52))) < int32(0) || (uint32((*(*uint16)(unsafe.Pointer(_p + 194)))>>8)<<31>>31) == 0 {
		goto _3
	}

	_eStatementOp = int32(0)
	_639sqlite3VdbeEnter(tls, _p)
	_mrc = (*(*int32)(unsafe.Pointer(_p + 56))) & int32(0xff)
	_isSpecialError = bool2int((((_mrc == int32(7)) || (_mrc == int32(10))) || (_mrc == int32(9))) || (_mrc == int32(13)))
	if _isSpecialError == 0 {
		goto _4
	}

	if (uint32((*(*uint16)(unsafe.Pointer(_p + 194)))>>7)<<31>>31) != 0 && _mrc == int32(9) {
		goto _5
	}

	if _mrc != int32(7) && _mrc != int32(13) || (uint32((*(*uint16)(unsafe.Pointer(_p + 194)))>>6)<<31>>31) == 0 {
		goto _6
	}

	_eStatementOp = int32(2)
	goto _7

_6:
	_365sqlite3RollbackAll(tls, _db, int32(516))
	_366sqlite3CloseSavepoints(tls, _db)
	*(*uint8)(unsafe.Pointer(_db + 95)) = uint8(1)
	*(*int32)(unsafe.Pointer(_p + 60)) = int32(0)
_7:
_5:
_4:
	if (*(*int32)(unsafe.Pointer(_p + 56))) != int32(0) {
		goto _8
	}

	_647sqlite3VdbeCheckFk(tls, _p, int32(0))
_8:
	if (*(*int32)(unsafe.Pointer(_db + 444))) > int32(0) && (*(*uintptr)(unsafe.Pointer(_db + 480))) == 0 || (*(*uint8)(unsafe.Pointer(_db + 95))) == 0 || (*(*int32)(unsafe.Pointer(_db + 192))) != bool2int(int32(uint32((*(*uint16)(unsafe.Pointer(_p + 194)))>>7)<<31>>31) == int32(0)) {
		goto _9
	}

	if (*(*int32)(unsafe.Pointer(_p + 56))) != int32(0) && (int32(*(*uint8)(unsafe.Pointer(_p + 190))) != int32(3) || _isSpecialError != 0) {
		goto _11
	}

	_rc = _647sqlite3VdbeCheckFk(tls, _p, int32(1))
	if _rc == int32(0) {
		goto _13
	}

	if uint32((*(*uint16)(unsafe.Pointer(_p + 194)))>>7)<<31>>31 == 0 {
		goto _15
	}

	_741sqlite3VdbeLeave(tls, _p)
	return int32(1)

_15:
	_rc = int32(787)
	goto _14

_13:
	_rc = _749vdbeCommit(tls, _db, _p)
_14:
	if _rc != int32(5) || (uint32((*(*uint16)(unsafe.Pointer(_p + 194)))>>7)<<31>>31) == 0 {
		goto _16
	}

	_741sqlite3VdbeLeave(tls, _p)
	return int32(5)

	goto _17

_16:
	if _rc == int32(0) {
		goto _18
	}

	*(*int32)(unsafe.Pointer(_p + 56)) = _rc
	_365sqlite3RollbackAll(tls, _db, int32(0))
	*(*int32)(unsafe.Pointer(_p + 60)) = int32(0)
	goto _19

_18:
	*(*int64)(unsafe.Pointer(_db + 656)) = int64(0)
	*(*int64)(unsafe.Pointer(_db + 664)) = int64(0)
	{
		p := &(*(*uint32)(unsafe.Pointer(_db + 48)))
		*p = uint32(uint32(*p) & uint32(4294443007))
	}
	_423sqlite3CommitInternalChanges(tls, _db)
_19:
_17:
	goto _12

_11:
	_365sqlite3RollbackAll(tls, _db, int32(0))
	*(*int32)(unsafe.Pointer(_p + 60)) = int32(0)
_12:
	*(*int32)(unsafe.Pointer(_db + 648)) = int32(0)
	goto _10

_9:
	if _eStatementOp != int32(0) {
		goto _20
	}

	if (*(*int32)(unsafe.Pointer(_p + 56))) != int32(0) && int32(*(*uint8)(unsafe.Pointer(_p + 190))) != int32(3) {
		goto _21
	}

	_eStatementOp = int32(1)
	goto _22

_21:
	if int32(*(*uint8)(unsafe.Pointer(_p + 190))) != int32(2) {
		goto _23
	}

	_eStatementOp = int32(2)
	goto _24

_23:
	_365sqlite3RollbackAll(tls, _db, int32(516))
	_366sqlite3CloseSavepoints(tls, _db)
	*(*uint8)(unsafe.Pointer(_db + 95)) = uint8(1)
	*(*int32)(unsafe.Pointer(_p + 60)) = int32(0)
_24:
_22:
_20:
_10:
	if _eStatementOp == 0 {
		goto _25
	}

	_rc = _648sqlite3VdbeCloseStatement(tls, _p, _eStatementOp)
	if _rc == 0 {
		goto _26
	}

	if (*(*int32)(unsafe.Pointer(_p + 56))) != int32(0) && ((*(*int32)(unsafe.Pointer(_p + 56)))&int32(0xff)) != int32(19) {
		goto _27
	}

	*(*int32)(unsafe.Pointer(_p + 56)) = _rc
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 144)))
	*(*uintptr)(unsafe.Pointer(_p + 144)) = null
_27:
	_365sqlite3RollbackAll(tls, _db, int32(516))
	_366sqlite3CloseSavepoints(tls, _db)
	*(*uint8)(unsafe.Pointer(_db + 95)) = uint8(1)
	*(*int32)(unsafe.Pointer(_p + 60)) = int32(0)
_26:
_25:
	if (uint32((*(*uint16)(unsafe.Pointer(_p + 194)))>>4) << 31 >> 31) == 0 {
		goto _28
	}

	if _eStatementOp == int32(2) {
		goto _29
	}

	_640sqlite3VdbeSetChanges(tls, _db, *(*int32)(unsafe.Pointer(_p + 60)))
	goto _30

_29:
	_640sqlite3VdbeSetChanges(tls, _db, int32(0))
_30:
	*(*int32)(unsafe.Pointer(_p + 60)) = int32(0)
_28:
	_741sqlite3VdbeLeave(tls, _p)
_3:
	if (*(*int32)(unsafe.Pointer(_p + 52))) < int32(0) {
		goto _31
	}

	(*(*int32)(unsafe.Pointer(_db + 184)))--
	if (uint32((*(*uint16)(unsafe.Pointer(_p + 194)))>>7) << 31 >> 31) != 0 {
		goto _32
	}

	(*(*int32)(unsafe.Pointer(_db + 192)))--
_32:
	if (uint32((*(*uint16)(unsafe.Pointer(_p + 194)))>>8) << 31 >> 31) == 0 {
		goto _33
	}

	(*(*int32)(unsafe.Pointer(_db + 188)))--
_33:
_31:
	*(*uint32)(unsafe.Pointer(_p + 36)) = uint32(0x319c2973)
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _34
	}

	*(*int32)(unsafe.Pointer(_p + 56)) = int32(7)
_34:
	if (*(*uint8)(unsafe.Pointer(_db + 95))) == 0 {
		goto _35
	}

_35:
	return func() int32 {
		if (*(*int32)(unsafe.Pointer(_p + 56))) == int32(5) {
			return int32(5)
		}
		return int32(0)
	}()
}

// _399sqlite3VdbeIntValue is defined at sqlite3.c:70906:20
func _399sqlite3VdbeIntValue(tls crt.TLS, _pMem uintptr /* *TMem = Ssqlite3_value */) (r int64) {
	var _flags int32

	_flags = int32(*(*uint16)(unsafe.Pointer(_pMem + 8)))
	if (_flags & int32(0x4)) == 0 {
		goto _1
	}

	return *(*int64)(unsafe.Pointer(_pMem))

	goto _2

_1:
	if (_flags & int32(0x8)) == 0 {
		goto _3
	}

	return _750doubleToInt64(tls, *(*float64)(unsafe.Pointer(_pMem)))

	goto _4

_3:
	if (_flags & int32(18)) == 0 {
		goto _5
	}

	return _751memIntValue(tls, _pMem)

	goto _6

_5:
	return int64(0)

_6:
_4:
_2:
	return r
}

// _400columnNullValue is defined at sqlite3.c:77858:18
func _400columnNullValue(tls crt.TLS) (r uintptr /* *TMem = Ssqlite3_value */) {
	return _752nullMem
}

// _401sqlite3SavedPrng Ssqlite3PrngType, escapes: true, sqlite3.c:27301:42
var _401sqlite3SavedPrng = bss + 7232

// _402sqlite3Prng struct{XisInit uint8;Xi uint8;Xj uint8;Xs [256]uint8;}, escapes: true, sqlite3.c:27210:3
var _402sqlite3Prng = bss + 7491

// _403sqlite3OsRandomness is defined at sqlite3.c:20949:20
func _403sqlite3OsRandomness(tls crt.TLS, _pVfs uintptr /* *Tsqlite3_vfs = Ssqlite3_vfs */, _nByte int32, _zBufOut uintptr /* *int8 */) (r int32) {
	return fn52(*(*uintptr)(unsafe.Pointer(_pVfs + 104)))(tls, _pVfs, _nByte, _zBufOut)
}

// _404sqlite3BitvecCreate is defined at sqlite3.c:44391:23
func _404sqlite3BitvecCreate(tls crt.TLS, _iSize uint32) (r uintptr /* *TBitvec = SBitvec */) {
	var _p uintptr // *TBitvec = SBitvec

	_p = _135sqlite3MallocZero(tls, uint64(512))
	if _p == 0 {
		goto _1
	}

	*(*uint32)(unsafe.Pointer(_p)) = _iSize
_1:
	return _p
}

// _405sqlite3BitvecSet is defined at sqlite3.c:44445:20
func _405sqlite3BitvecSet(tls crt.TLS, _p uintptr /* *TBitvec = SBitvec */, _i uint32) (r int32) {
	var (
		_h        uint32
		_bin      uint32
		_j        uint32
		_rc       int32
		_aiValues uintptr // *Tu32 = uint32
	)
	if _p != 0 {
		goto _1
	}

	return int32(0)

_1:
	_i--
_2:
	if uint64(*(*uint32)(unsafe.Pointer(_p))) <= uint64(3968) || (*(*uint32)(unsafe.Pointer(_p + 8))) == 0 {
		goto _3
	}

	_bin = _i / (*(*uint32)(unsafe.Pointer(_p + 8)))
	_i = _i % (*(*uint32)(unsafe.Pointer(_p + 8)))
	if (*(*uintptr)(unsafe.Pointer(_p + 16 + 8*uintptr(_bin)))) != 0 {
		goto _4
	}

	*(*uintptr)(unsafe.Pointer(_p + 16 + 8*uintptr(_bin))) = _404sqlite3BitvecCreate(tls, *(*uint32)(unsafe.Pointer(_p + 8)))
	if (*(*uintptr)(unsafe.Pointer(_p + 16 + 8*uintptr(_bin)))) != 0 {
		goto _5
	}

	return int32(7)

_5:
_4:
	_p = *(*uintptr)(unsafe.Pointer(_p + 16 + 8*uintptr(_bin)))
	goto _2

_3:
	if uint64(*(*uint32)(unsafe.Pointer(_p))) > uint64(3968) {
		goto _6
	}

	{
		p := &(*(*uint8)(unsafe.Pointer(_p + 16 + uintptr(_i/uint32(8)))))
		*p = uint8(int32(*p) | (int32(1) << (uint(_i&uint32(7)) % 32)))
	}
	return int32(0)

_6:
	_h = uint32(uint64(postinc53(&_i)*uint32(1)) % uint64(124))
	if (*(*uint32)(unsafe.Pointer(_p + 16 + 4*uintptr(_h)))) != 0 {
		goto _7
	}

	if uint64(*(*uint32)(unsafe.Pointer(_p + 4))) >= uint64(123) {
		goto _8
	}

	goto _bitvec_set_end

	goto _9

_8:
	goto _bitvec_set_rehash

_9:
_7:
_10:
	if (*(*uint32)(unsafe.Pointer(_p + 16 + 4*uintptr(_h)))) != _i {
		goto _13
	}

	return int32(0)

_13:
	_h++
	if uint64(_h) < uint64(124) {
		goto _14
	}

	_h = uint32(0)
_14:
	if (*(*uint32)(unsafe.Pointer(_p + 16 + 4*uintptr(_h)))) != 0 {
		goto _10
	}

	goto _bitvec_set_rehash
_bitvec_set_rehash:
	if uint64(*(*uint32)(unsafe.Pointer(_p + 4))) < uint64(62) {
		goto _15
	}

	_aiValues = _177sqlite3DbMallocRaw(tls, null, uint64(496))
	if _aiValues != 0 {
		goto _16
	}

	return int32(7)

	goto _17

_16:
	crt.Xmemcpy(tls, _aiValues, _p+16, uint64(496))
	crt.Xmemset(tls, _p+16, int32(0), uint64(496))
	*(*uint32)(unsafe.Pointer(_p + 8)) = uint32(((uint64(*(*uint32)(unsafe.Pointer(_p))) + uint64(62)) - uint64(1)) / uint64(62))
	_rc = _405sqlite3BitvecSet(tls, _p, _i)
	_j = uint32(0)
_18:
	if uint64(_j) >= uint64(124) {
		goto _20
	}

	if (*(*uint32)(unsafe.Pointer(_aiValues + 4*uintptr(_j)))) == 0 {
		goto _21
	}

	_rc = int32(_rc | _405sqlite3BitvecSet(tls, _p, *(*uint32)(unsafe.Pointer(_aiValues + 4*uintptr(_j)))))
_21:
	_j++
	goto _18

_20:
	_181sqlite3DbFree(tls, null, _aiValues)
	return _rc

_17:
_15:
	goto _bitvec_set_end
_bitvec_set_end:
	(*(*uint32)(unsafe.Pointer(_p + 4)))++
	*(*uint32)(unsafe.Pointer(_p + 16 + 4*uintptr(_h))) = _i
	return int32(0)
}

// _406sqlite3BitvecClear is defined at sqlite3.c:44516:21
func _406sqlite3BitvecClear(tls crt.TLS, _p uintptr /* *TBitvec = SBitvec */, _i uint32, _pBuf uintptr /* *void */) {
	var (
		_bin      uint32
		_j        uint32
		_aiValues uintptr // *Tu32 = uint32
		_h        uint32
	)
	if _p != 0 {
		goto _1
	}

	return

_1:
	_i--
_2:
	if (*(*uint32)(unsafe.Pointer(_p + 8))) == 0 {
		goto _3
	}

	_bin = _i / (*(*uint32)(unsafe.Pointer(_p + 8)))
	_i = _i % (*(*uint32)(unsafe.Pointer(_p + 8)))
	_p = *(*uintptr)(unsafe.Pointer(_p + 16 + 8*uintptr(_bin)))
	if _p != 0 {
		goto _4
	}

	return

_4:
	goto _2

_3:
	if uint64(*(*uint32)(unsafe.Pointer(_p))) > uint64(3968) {
		goto _5
	}

	{
		p := &(*(*uint8)(unsafe.Pointer(_p + 16 + uintptr(_i/uint32(8)))))
		*p = uint8(int32(*p) & (^(int32(1) << (uint(_i&uint32(7)) % 32))))
	}
	goto _6

_5:
	_aiValues = _pBuf
	crt.Xmemcpy(tls, _aiValues, _p+16, uint64(496))
	crt.Xmemset(tls, _p+16, int32(0), uint64(496))
	*(*uint32)(unsafe.Pointer(_p + 4)) = uint32(0)
	_j = uint32(0)
_7:
	if uint64(_j) >= uint64(124) {
		goto _9
	}

	if (*(*uint32)(unsafe.Pointer(_aiValues + 4*uintptr(_j)))) == 0 || (*(*uint32)(unsafe.Pointer(_aiValues + 4*uintptr(_j)))) == (_i+uint32(1)) {
		goto _10
	}

	_h = uint32(uint64(((*(*uint32)(unsafe.Pointer(_aiValues + 4*uintptr(_j))))-uint32(1))*uint32(1)) % uint64(124))
	(*(*uint32)(unsafe.Pointer(_p + 4)))++
_11:
	if (*(*uint32)(unsafe.Pointer(_p + 16 + 4*uintptr(_h)))) == 0 {
		goto _12
	}

	_h++
	if uint64(_h) < uint64(124) {
		goto _13
	}

	_h = uint32(0)
_13:
	goto _11

_12:
	*(*uint32)(unsafe.Pointer(_p + 16 + 4*uintptr(_h))) = *(*uint32)(unsafe.Pointer(_aiValues + 4*uintptr(_j)))
_10:
	_j++
	goto _7

_9:
_6:
}

// _407sqlite3BitvecTest is defined at sqlite3.c:44429:20
func _407sqlite3BitvecTest(tls crt.TLS, _p uintptr /* *TBitvec = SBitvec */, _i uint32) (r int32) {
	return bool2int((_p != 0) && (_572sqlite3BitvecTestNotNull(tls, _p, _i) != 0))
}

// _408sqlite3BitvecSize is defined at sqlite3.c:44568:20
func _408sqlite3BitvecSize(tls crt.TLS, _p uintptr /* *TBitvec = SBitvec */) (r uint32) {
	return *(*uint32)(unsafe.Pointer(_p))
}

// _409sqlite3BitvecDestroy is defined at sqlite3.c:44553:21
func _409sqlite3BitvecDestroy(tls crt.TLS, _p uintptr /* *TBitvec = SBitvec */) {
	var _i uint32

	if _p != 0 {
		goto _1
	}

	return

_1:
	if (*(*uint32)(unsafe.Pointer(_p + 8))) == 0 {
		goto _2
	}

	_i = uint32(0)
_3:
	if uint64(_i) >= uint64(62) {
		goto _5
	}

	_409sqlite3BitvecDestroy(tls, *(*uintptr)(unsafe.Pointer(_p + 16 + 8*uintptr(_i))))
	_i++
	goto _3

_5:
_2:
	Xsqlite3_free(tls, _p)
}

// _410sqlite3Hooks struct{XxBenignBegin *func(crt.TLS);XxBenignEnd *func(crt.TLS);}, escapes: true, sqlite3.c:21150:3
var _410sqlite3Hooks = bss + 7752

// _411freeTempSpace is defined at sqlite3.c:62265:13
func _411freeTempSpace(tls crt.TLS, _pBt uintptr /* *TBtShared = SBtShared */) {
	if (*(*uintptr)(unsafe.Pointer(_pBt + 128))) == 0 {
		goto _1
	}

	*(*uintptr)(unsafe.Pointer(_pBt + 128)) -= uintptr(4)
	_753sqlite3PageFree(tls, *(*uintptr)(unsafe.Pointer(_pBt + 128)))
	*(*uintptr)(unsafe.Pointer(_pBt + 128)) = null
_1:
}

// _412sqlite3PagerSetPagesize is defined at sqlite3.c:51231:20
func _412sqlite3PagerSetPagesize(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _pPageSize uintptr /* *Tu32 = uint32 */, _nReserve int32) (r int32) {
	esc := crt.MustMalloc(8)
	var (
		_rc       int32
		_pageSize uint32
		_pNew     uintptr // *int8
		_nByte    = esc   // *Ti64 = Tsqlite_int64 = int64
	)
	defer crt.Free(esc)
	_rc = int32(0)
	_pageSize = *(*uint32)(unsafe.Pointer(_pPageSize))

	if int32(*(*uint8)(unsafe.Pointer(_pPager + 19))) != int32(0) && (*(*uint32)(unsafe.Pointer(_pPager + 28))) != uint32(0) || _754sqlite3PcacheRefCount(tls, *(*uintptr)(unsafe.Pointer(_pPager + 280))) != int32(0) || _pageSize == 0 || _pageSize == uint32(*(*int32)(unsafe.Pointer(_pPager + 188))) {
		goto _1
	}

	_pNew = 0
	*(*int64)(unsafe.Pointer(_nByte)) = int64(0)
	if int32(*(*uint8)(unsafe.Pointer(_pPager + 20))) <= int32(0) || (*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pPager + 72))))) == 0 {
		goto _2
	}

	_rc = _352sqlite3OsFileSize(tls, *(*uintptr)(unsafe.Pointer(_pPager + 72)), _nByte)
_2:
	if _rc != int32(0) {
		goto _3
	}

	_pNew = _755sqlite3PageMalloc(tls, int32(_pageSize))
	if _pNew != 0 {
		goto _4
	}

	_rc = int32(7)
_4:
_3:
	if _rc != int32(0) {
		goto _5
	}

	_756pager_reset(tls, _pPager)
	_rc = _757sqlite3PcacheSetPageSize(tls, *(*uintptr)(unsafe.Pointer(_pPager + 280)), int32(_pageSize))
_5:
	if _rc != int32(0) {
		goto _6
	}

	_753sqlite3PageFree(tls, *(*uintptr)(unsafe.Pointer(_pPager + 272)))
	*(*uintptr)(unsafe.Pointer(_pPager + 272)) = _pNew
	*(*uint32)(unsafe.Pointer(_pPager + 28)) = uint32((((*(*int64)(unsafe.Pointer(_nByte))) + int64(_pageSize)) - int64(1)) / int64(_pageSize))
	*(*int32)(unsafe.Pointer(_pPager + 188)) = int32(_pageSize)
	goto _7

_6:
	_753sqlite3PageFree(tls, _pNew)
_7:
_1:
	*(*uint32)(unsafe.Pointer(_pPageSize)) = uint32(*(*int32)(unsafe.Pointer(_pPager + 188)))
	if _rc != int32(0) {
		goto _8
	}

	if _nReserve >= int32(0) {
		goto _9
	}

	_nReserve = int32(*(*int16)(unsafe.Pointer(_pPager + 178)))
_9:
	*(*int16)(unsafe.Pointer(_pPager + 178)) = int16(_nReserve)
	_758pagerFixMaplimit(tls, _pPager)
_8:
	return _rc
}

// _413keywordCode is defined at sqlite3.c:140966:12
func _413keywordCode(tls crt.TLS, _z uintptr /* *int8 */, _n int32, _pType uintptr /* *int32 */) (r int32) {
	var (
		_i   int32
		_j   int32
		_zKW uintptr // *int8
	)
	if _n < int32(2) {
		goto _1
	}

	_i = (((int32(*(*uint8)(unsafe.Pointer(_215sqlite3UpperToLower + uintptr(uint8(*(*int8)(unsafe.Pointer(_z))))))) * int32(4)) ^ (int32(*(*uint8)(unsafe.Pointer(_215sqlite3UpperToLower + uintptr(uint8(*(*int8)(unsafe.Pointer(_z + uintptr(_n-int32(1))))))))) * int32(3))) ^ _n) % int32(127)
	_i = int32(*(*uint8)(unsafe.Pointer(_759aKWHash + uintptr(_i)))) - int32(1)
_2:
	if _i < int32(0) {
		goto _4
	}

	if int32(*(*uint8)(unsafe.Pointer(_760aKWLen + uintptr(_i)))) == _n {
		goto _5
	}

	goto _3

_5:
	_j = int32(0)
	_zKW = _761zKWText + uintptr(*(*uint16)(unsafe.Pointer(_762aKWOffset + 2*uintptr(_i))))
_6:
	if _j >= _n || (int32(*(*int8)(unsafe.Pointer(_z + uintptr(_j))))&int32(-33)) != int32(*(*int8)(unsafe.Pointer(_zKW + uintptr(_j)))) {
		goto _7
	}

	_j++
	goto _6

_7:
	if _j >= _n {
		goto _8
	}

	goto _3

_8:
	*(*int32)(unsafe.Pointer(_pType)) = int32(*(*uint8)(unsafe.Pointer(_763aKWCode + uintptr(_i))))
	goto _4

_3:
	_i = int32(*(*uint8)(unsafe.Pointer(_764aKWNext + uintptr(_i)))) - int32(1)
	goto _2

_4:
_1:
	return _n
}

// _414shellFkeyCollateClause is defined at shell.c:5187:13
func _414shellFkeyCollateClause(tls crt.TLS, _pCtx uintptr /* *Tsqlite3_context = Ssqlite3_context */, _nVal int32, _apVal uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	esc := crt.MustMalloc(24)
	var (
		_db         uintptr    // *Tsqlite3 = Ssqlite3
		_zParent    uintptr    // *int8
		_zParentCol uintptr    // *int8
		_zParentSeq = esc      // **int8
		_zChild     uintptr    // *int8
		_zChildCol  uintptr    // *int8
		_zChildSeq  = esc + 16 // **int8
		_rc         int32
		_z          uintptr // *int8
	)
	defer crt.Free(esc)
	_db = Xsqlite3_context_db_handle(tls, _pCtx)
	*(*uintptr)(unsafe.Pointer(_zChildSeq)) = 0
	if _nVal != int32(4) {
		crt.X__assert_fail(tls, ts+18825 /* "nVal==4" */, ts+161 /* "/home/jnml/src/github.com/cznic/..." */, uint32(5201), _765__func__)
	}
	_zParent = Xsqlite3_value_text(tls, *(*uintptr)(unsafe.Pointer(_apVal)))
	_zParentCol = Xsqlite3_value_text(tls, *(*uintptr)(unsafe.Pointer(_apVal + 8)))
	_zChild = Xsqlite3_value_text(tls, *(*uintptr)(unsafe.Pointer(_apVal + 16)))
	_zChildCol = Xsqlite3_value_text(tls, *(*uintptr)(unsafe.Pointer(_apVal + 24)))
	Xsqlite3_result_text(tls, _pCtx, ts+4553 /* "" */, int32(-1), null)
	_rc = Xsqlite3_table_column_metadata(tls, _db, ts+1432 /* "main" */, _zParent, _zParentCol, null, _zParentSeq, null, null, null)
	if _rc != int32(0) {
		goto _1
	}

	_rc = Xsqlite3_table_column_metadata(tls, _db, ts+1432 /* "main" */, _zChild, _zChildCol, null, _zChildSeq, null, null, null)
_1:
	if _rc != int32(0) || Xsqlite3_stricmp(tls, *(*uintptr)(unsafe.Pointer(_zParentSeq)), *(*uintptr)(unsafe.Pointer(_zChildSeq))) == 0 {
		goto _2
	}

	_z = Xsqlite3_mprintf(tls, ts+18833 /* " COLLATE %s" */, *(*uintptr)(unsafe.Pointer(_zParentSeq)))
	Xsqlite3_result_text(tls, _pCtx, _z, int32(-1), uintptr(18446744073709551615))
	Xsqlite3_free(tls, _z)
_2:
}

// Xsqlite3_bind_int is defined at sqlite3.c:78291:16
func Xsqlite3_bind_int(tls crt.TLS, _p uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */, _i int32, _iValue int32) (r int32) {
	return Xsqlite3_bind_int64(tls, _p, _i, int64(_iValue))
}

// _415azEndings [1]*int8, escapes: true, sqlite3.c:113311:21
var _415azEndings = bss + 7768 // array of 1 pointer to char

func init() { *(*[1]uintptr)(unsafe.Pointer(_415azEndings)) = [1]uintptr{0: ts + 18845 /* "so" */} }

// _416sqlite3OsDlOpen is defined at sqlite3.c:20936:21
func _416sqlite3OsDlOpen(tls crt.TLS, _pVfs uintptr /* *Tsqlite3_vfs = Ssqlite3_vfs */, _zPath uintptr /* *int8 */) (r uintptr /* *void */) {
	return fn73(*(*uintptr)(unsafe.Pointer(_pVfs + 72)))(tls, _pVfs, _zPath)
}

// _417sqlite3OsDlError is defined at sqlite3.c:20939:21
func _417sqlite3OsDlError(tls crt.TLS, _pVfs uintptr /* *Tsqlite3_vfs = Ssqlite3_vfs */, _nByte int32, _zBufOut uintptr /* *int8 */) {
	fn68(*(*uintptr)(unsafe.Pointer(_pVfs + 80)))(tls, _pVfs, _nByte, _zBufOut)
}

// _418sqlite3OsDlSym is defined at sqlite3.c:20942:21
func _418sqlite3OsDlSym(tls crt.TLS, _pVfs uintptr /* *Tsqlite3_vfs = Ssqlite3_vfs */, _pHdle uintptr /* *void */, _zSym uintptr /* *int8 */) (r uintptr /* *func(crt.TLS) */) {
	return fn74(*(*uintptr)(unsafe.Pointer(_pVfs + 88)))(tls, _pVfs, _pHdle, _zSym)
}

// _419sqlite3OsDlClose is defined at sqlite3.c:20945:21
func _419sqlite3OsDlClose(tls crt.TLS, _pVfs uintptr /* *Tsqlite3_vfs = Ssqlite3_vfs */, _pHandle uintptr /* *void */) {
	fn71(*(*uintptr)(unsafe.Pointer(_pVfs + 96)))(tls, _pVfs, _pHandle)
}

// _420sqlite3Apis Tsqlite3_api_routines = Ssqlite3_api_routines, escapes: true, sqlite3.c:112977:35
var _420sqlite3Apis = bss + 7776 // sqlite3_api_routines

func init() {
	*(*Ssqlite3_api_routines)(unsafe.Pointer(_420sqlite3Apis)) = Ssqlite3_api_routines{
		Xaggregate_context:    fp30(Xsqlite3_aggregate_context),
		Xaggregate_count:      fp10(Xsqlite3_aggregate_count),
		Xbind_blob:            fp39(Xsqlite3_bind_blob),
		Xbind_double:          fp75(Xsqlite3_bind_double),
		Xbind_int:             fp76(Xsqlite3_bind_int),
		Xbind_int64:           fp77(Xsqlite3_bind_int64),
		Xbind_null:            fp26(Xsqlite3_bind_null),
		Xbind_parameter_count: fp10(Xsqlite3_bind_parameter_count),
		Xbind_parameter_index: fp56(Xsqlite3_bind_parameter_index),
		Xbind_parameter_name:  fp30(Xsqlite3_bind_parameter_name),
		Xbind_text:            fp39(Xsqlite3_bind_text),
		Xbind_text16:          fp39(Xsqlite3_bind_text16),
		Xbind_value:           fp78(Xsqlite3_bind_value),
		Xbusy_handler:         fp79(Xsqlite3_busy_handler),
		Xbusy_timeout:         fp26(Xsqlite3_busy_timeout),
		Xchanges:              fp10(Xsqlite3_changes),
		Xclose:                fp10(Xsqlite3_close),
		Xcollation_needed:     fp79(Xsqlite3_collation_needed),
		Xcollation_needed16:   fp79(Xsqlite3_collation_needed16),
		Xcolumn_blob:          fp30(Xsqlite3_column_blob),
		Xcolumn_bytes:         fp26(Xsqlite3_column_bytes),
		Xcolumn_bytes16:       fp26(Xsqlite3_column_bytes16),
		Xcolumn_count:         fp10(Xsqlite3_column_count),
		Xcolumn_decltype:      fp30(Xsqlite3_column_decltype),
		Xcolumn_decltype16:    fp30(Xsqlite3_column_decltype16),
		Xcolumn_double:        fp80(Xsqlite3_column_double),
		Xcolumn_int:           fp26(Xsqlite3_column_int),
		Xcolumn_int64:         fp81(Xsqlite3_column_int64),
		Xcolumn_name:          fp30(Xsqlite3_column_name),
		Xcolumn_name16:        fp30(Xsqlite3_column_name16),
		Xcolumn_text:          fp30(Xsqlite3_column_text),
		Xcolumn_text16:        fp30(Xsqlite3_column_text16),
		Xcolumn_type:          fp26(Xsqlite3_column_type),
		Xcolumn_value:         fp30(Xsqlite3_column_value),
		Xcommit_hook:          fp82(Xsqlite3_commit_hook),
		Xcomplete:             fp10(Xsqlite3_complete),
		Xcomplete16:           fp10(Xsqlite3_complete16),
		Xcreate_collation:     fp83(Xsqlite3_create_collation),
		Xcreate_collation16:   fp83(Xsqlite3_create_collation16),
		Xcreate_function:      fp84(Xsqlite3_create_function),
		Xcreate_function16:    fp84(Xsqlite3_create_function16),
		Xcreate_module:        fp85(Xsqlite3_create_module),
		Xdata_count:           fp10(Xsqlite3_data_count),
		Xdb_handle:            fp11(Xsqlite3_db_handle),
		Xdeclare_vtab:         fp56(Xsqlite3_declare_vtab),
		Xenable_shared_cache:  fp31(Xsqlite3_enable_shared_cache),
		Xerrcode:              fp10(Xsqlite3_errcode),
		Xerrmsg:               fp11(Xsqlite3_errmsg),
		Xerrmsg16:             fp11(Xsqlite3_errmsg16),
		Xexec:                 fp86(Xsqlite3_exec),
		Xexpired:              fp10(Xsqlite3_expired),
		Xfinalize:             fp10(Xsqlite3_finalize),
		Xfree:                 fp18(Xsqlite3_free),
		Xfree_table:           fp18(Xsqlite3_free_table),
		Xget_autocommit:       fp10(Xsqlite3_get_autocommit),
		Xget_auxdata:          fp30(Xsqlite3_get_auxdata),
		Xget_table:            fp87(Xsqlite3_get_table),
		Xinterruptx:           fp18(Xsqlite3_interrupt),
		Xlast_insert_rowid:    fp88(Xsqlite3_last_insert_rowid),
		Xlibversion:           fp89(Xsqlite3_libversion),
		Xlibversion_number:    fp90(Xsqlite3_libversion_number),
		Xmalloc:               fp29(Xsqlite3_malloc),
		Xmprintf:              fp91(Xsqlite3_mprintf),
		Xopen64:               fp56(Xsqlite3_open),
		Xopen16:               fp56(Xsqlite3_open16),
		Xprepare:              fp83(Xsqlite3_prepare),
		Xprepare16:            fp83(Xsqlite3_prepare16),
		Xprofile:              fp82(Xsqlite3_profile),
		Xprogress_handler:     fp92(Xsqlite3_progress_handler),
		Xrealloc:              fp30(Xsqlite3_realloc),
		Xreset:                fp10(Xsqlite3_reset),
		Xresult_blob:          fp93(Xsqlite3_result_blob),
		Xresult_double:        fp94(Xsqlite3_result_double),
		Xresult_error:         fp35(Xsqlite3_result_error),
		Xresult_error16:       fp35(Xsqlite3_result_error16),
		Xresult_int:           fp33(Xsqlite3_result_int),
		Xresult_int64:         fp95(Xsqlite3_result_int64),
		Xresult_null:          fp18(Xsqlite3_result_null),
		Xresult_text:          fp93(Xsqlite3_result_text),
		Xresult_text16:        fp93(Xsqlite3_result_text16),
		Xresult_text16be:      fp93(Xsqlite3_result_text16be),
		Xresult_text16le:      fp93(Xsqlite3_result_text16le),
		Xresult_value:         fp96(Xsqlite3_result_value),
		Xrollback_hook:        fp82(Xsqlite3_rollback_hook),
		Xset_authorizer:       fp79(Xsqlite3_set_authorizer),
		Xset_auxdata:          fp92(Xsqlite3_set_auxdata),
		Xxsnprintf:            fp97(Xsqlite3_snprintf),
		Xstep:                 fp10(Xsqlite3_step),
		Xtable_column_metadata: fp98(Xsqlite3_table_column_metadata),
		Xthread_cleanup:        fp99(Xsqlite3_thread_cleanup),
		Xtotal_changes:         fp10(Xsqlite3_total_changes),
		Xtrace:                 fp82(Xsqlite3_trace),
		Xtransfer_bindings:     fp56(Xsqlite3_transfer_bindings),
		Xupdate_hook:           fp82(Xsqlite3_update_hook),
		Xuser_data:             fp11(Xsqlite3_user_data),
		Xvalue_blob:            fp11(Xsqlite3_value_blob),
		Xvalue_bytes:           fp10(Xsqlite3_value_bytes),
		Xvalue_bytes16:         fp10(Xsqlite3_value_bytes16),
		Xvalue_double:          fp100(Xsqlite3_value_double),
		Xvalue_int:             fp10(Xsqlite3_value_int),
		Xvalue_int64:           fp88(Xsqlite3_value_int64),
		Xvalue_numeric_type:    fp10(Xsqlite3_value_numeric_type),
		Xvalue_text:            fp11(Xsqlite3_value_text),
		Xvalue_text16:          fp11(Xsqlite3_value_text16),
		Xvalue_text16be:        fp11(Xsqlite3_value_text16be),
		Xvalue_text16le:        fp11(Xsqlite3_value_text16le),
		Xvalue_type:            fp10(Xsqlite3_value_type),
		Xvmprintf:              fp101(Xsqlite3_vmprintf),
		Xoverload_function:     fp57(Xsqlite3_overload_function),
		Xprepare_v2:            fp83(Xsqlite3_prepare_v2),
		Xprepare16_v2:          fp83(Xsqlite3_prepare16_v2),
		Xclear_bindings:        fp10(Xsqlite3_clear_bindings),
		Xcreate_module_v2:      fp86(Xsqlite3_create_module_v2),
		Xbind_zeroblob:         fp76(Xsqlite3_bind_zeroblob),
		Xblob_bytes:            fp10(Xsqlite3_blob_bytes),
		Xblob_close:            fp10(Xsqlite3_blob_close),
		Xblob_open:             fp102(Xsqlite3_blob_open),
		Xblob_read:             fp103(Xsqlite3_blob_read),
		Xblob_write:            fp103(Xsqlite3_blob_write),
		Xcreate_collation_v2:   fp55(Xsqlite3_create_collation_v2),
		Xfile_control:          fp104(Xsqlite3_file_control),
		Xmemory_highwater:      fp105(Xsqlite3_memory_highwater),
		Xmemory_used:           fp106(Xsqlite3_memory_used),
		Xmutex_alloc:           fp29(Xsqlite3_mutex_alloc),
		Xmutex_enter:           fp18(Xsqlite3_mutex_enter),
		Xmutex_free:            fp18(Xsqlite3_mutex_free),
		Xmutex_leave:           fp18(Xsqlite3_mutex_leave),
		Xmutex_try:             fp10(Xsqlite3_mutex_try),
		Xopen_v2:               fp104(Xsqlite3_open_v2),
		Xrelease_memory:        fp31(Xsqlite3_release_memory),
		Xresult_error_nomem:    fp18(Xsqlite3_result_error_nomem),
		Xresult_error_toobig:   fp18(Xsqlite3_result_error_toobig),
		Xsleep:                 fp31(Xsqlite3_sleep),
		Xsoft_heap_limit:       fp1(Xsqlite3_soft_heap_limit),
		Xvfs_find:              fp11(Xsqlite3_vfs_find),
		Xvfs_register:          fp26(Xsqlite3_vfs_register),
		Xvfs_unregister:        fp10(Xsqlite3_vfs_unregister),
		Xxthreadsafe:           fp90(Xsqlite3_threadsafe),
		Xresult_zeroblob:       fp33(Xsqlite3_result_zeroblob),
		Xresult_error_code:     fp33(Xsqlite3_result_error_code),
		Xtest_control:          fp107(Xsqlite3_test_control),
		Xrandomness:            fp108(Xsqlite3_randomness),
		Xcontext_db_handle:     fp11(Xsqlite3_context_db_handle),
		Xextended_result_codes: fp26(Xsqlite3_extended_result_codes),
		Xlimit:                 fp76(Xsqlite3_limit),
		Xnext_stmt:             fp109(Xsqlite3_next_stmt),
		Xsql:                   fp11(Xsqlite3_sql),
		Xstatus:                fp110(Xsqlite3_status),
		Xbackup_finish:         fp10(Xsqlite3_backup_finish),
		Xbackup_init:           fp111(Xsqlite3_backup_init),
		Xbackup_pagecount:      fp10(Xsqlite3_backup_pagecount),
		Xbackup_remaining:      fp10(Xsqlite3_backup_remaining),
		Xbackup_step:           fp26(Xsqlite3_backup_step),
		Xcompileoption_get:     fp29(Xsqlite3_compileoption_get),
		Xcompileoption_used:    fp10(Xsqlite3_compileoption_used),
		Xcreate_function_v2:    fp112(Xsqlite3_create_function_v2),
		Xdb_config:             fp113(Xsqlite3_db_config),
		Xdb_mutex:              fp11(Xsqlite3_db_mutex),
		Xdb_status:             fp114(Xsqlite3_db_status),
		Xextended_errcode:      fp10(Xsqlite3_extended_errcode),
		Xlog:                   fp115(Xsqlite3_log),
		Xsoft_heap_limit64:     fp116(Xsqlite3_soft_heap_limit64),
		Xsourceid:              fp89(Xsqlite3_sourceid),
		Xstmt_status:           fp76(Xsqlite3_stmt_status),
		Xstrnicmp:              fp57(Xsqlite3_strnicmp),
		Xwal_autocheckpoint:    fp26(Xsqlite3_wal_autocheckpoint),
		Xwal_checkpoint:        fp56(Xsqlite3_wal_checkpoint),
		Xwal_hook:              fp82(Xsqlite3_wal_hook),
		Xblob_reopen:           fp117(Xsqlite3_blob_reopen),
		Xvtab_config:           fp113(Xsqlite3_vtab_config),
		Xvtab_on_conflict:      fp10(Xsqlite3_vtab_on_conflict),
		Xclose_v2:              fp10(Xsqlite3_close_v2),
		Xdb_filename:           fp109(Xsqlite3_db_filename),
		Xdb_readonly:           fp56(Xsqlite3_db_readonly),
		Xdb_release_memory:     fp10(Xsqlite3_db_release_memory),
		Xerrstr:                fp29(Xsqlite3_errstr),
		Xstmt_busy:             fp10(Xsqlite3_stmt_busy),
		Xstmt_readonly:         fp10(Xsqlite3_stmt_readonly),
		Xstricmp:               fp56(Xsqlite3_stricmp),
		Xuri_boolean:           fp57(Xsqlite3_uri_boolean),
		Xuri_int64:             fp118(Xsqlite3_uri_int64),
		Xuri_parameter:         fp109(Xsqlite3_uri_parameter),
		Xxvsnprintf:            fp119(Xsqlite3_vsnprintf),
		Xwal_checkpoint_v2:     fp83(Xsqlite3_wal_checkpoint_v2),
		Xauto_extension:        fp10(Xsqlite3_auto_extension),
		Xbind_blob64:           fp120(Xsqlite3_bind_blob64),
		Xbind_text64:           fp121(Xsqlite3_bind_text64),
		Xcancel_auto_extension: fp10(Xsqlite3_cancel_auto_extension),
		Xload_extension:        fp85(Xsqlite3_load_extension),
		Xmalloc64:              fp122(Xsqlite3_malloc64),
		Xmsize:                 fp123(Xsqlite3_msize),
		Xrealloc64:             fp124(Xsqlite3_realloc64),
		Xreset_auto_extension:  fp99(Xsqlite3_reset_auto_extension),
		Xresult_blob64:         fp125(Xsqlite3_result_blob64),
		Xresult_text64:         fp126(Xsqlite3_result_text64),
		Xstrglob:               fp56(Xsqlite3_strglob),
		Xvalue_dup:             fp11(Xsqlite3_value_dup),
		Xvalue_free:            fp18(Xsqlite3_value_free),
		Xresult_zeroblob64:     fp127(Xsqlite3_result_zeroblob64),
		Xbind_zeroblob64:       fp128(Xsqlite3_bind_zeroblob64),
		Xvalue_subtype:         fp129(Xsqlite3_value_subtype),
		Xresult_subtype:        fp37(Xsqlite3_result_subtype),
		Xstatus64:              fp110(Xsqlite3_status64),
		Xstrlike:               fp130(Xsqlite3_strlike),
		Xdb_cacheflush:         fp10(Xsqlite3_db_cacheflush),
		Xsystem_errno:          fp10(Xsqlite3_system_errno),
		Xtrace_v2:              fp131(Xsqlite3_trace_v2),
		Xexpanded_sql:          fp11(Xsqlite3_expanded_sql),
		Xset_last_insert_rowid: fp95(Xsqlite3_set_last_insert_rowid),
		Xprepare_v3:            fp132(Xsqlite3_prepare_v3),
		Xprepare16_v3:          fp132(Xsqlite3_prepare16_v3),
		Xbind_pointer:          fp3(Xsqlite3_bind_pointer),
		Xresult_pointer:        fp133(Xsqlite3_result_pointer),
		Xvalue_pointer:         fp109(Xsqlite3_value_pointer),
	}
}

type SIndex struct {
	XzName         uintptr // *int8
	XaiColumn      uintptr // *int16
	XaiRowLogEst   uintptr // *int16
	XpTable        uintptr // *STable
	XzColAff       uintptr // *int8
	XpNext         uintptr // *SIndex
	XpSchema       uintptr // *SSchema
	XaSortOrder    uintptr // *uint8
	XazColl        uintptr // **int8
	XpPartIdxWhere uintptr // *SExpr
	XaColExpr      uintptr // *SExprList
	Xtnum          int32
	XszIdxRow      int16
	XnKeyCol       uint16
	XnColumn       uint16
	XonError       uint8
	F99            uint8
}

type SSelect struct {
	XpEList       uintptr // *SExprList
	Xop           uint8
	XnSelectRow   int16
	XselFlags     uint32
	XiLimit       int32
	XiOffset      int32
	XaddrOpenEphm [2]int32
	XpSrc         uintptr // *SSrcList
	XpWhere       uintptr // *SExpr
	XpGroupBy     uintptr // *SExprList
	XpHaving      uintptr // *SExpr
	XpOrderBy     uintptr // *SExprList
	XpPrior       uintptr // *SSelect
	XpNext        uintptr // *SSelect
	XpLimit       uintptr // *SExpr
	XpOffset      uintptr // *SExpr
	XpWith        uintptr // *SWith
}

type SFKey struct {
	XpFrom      uintptr // *STable
	XpNextFrom  uintptr // *SFKey
	XzTo        uintptr // *int8
	XpNextTo    uintptr // *SFKey
	XpPrevTo    uintptr // *SFKey
	XnCol       int32
	XisDeferred uint8
	XaAction    [2]uint8
	XapTrigger  [2]uintptr
	XaCol       [1]struct {
		XiFrom int32
		XzCol  uintptr
	}
}

type SExprList struct {
	XnExpr int32
	Xa     [1]struct {
		XpExpr     uintptr
		XzName     uintptr
		XzSpan     uintptr
		XsortOrder uint8
		F25        uint8
		Xu         struct{ X int32 }
	}
}

type STrigger struct {
	XzName      uintptr // *int8
	Xtable      uintptr // *int8
	Xop         uint8
	Xtr_tm      uint8
	XpWhen      uintptr // *SExpr
	XpColumns   uintptr // *SIdList
	XpSchema    uintptr // *SSchema
	XpTabSchema uintptr // *SSchema
	Xstep_list  uintptr // *STriggerStep
	XpNext      uintptr // *STrigger
}

type SSchema struct {
	Xschema_cookie int32
	XiGeneration   int32
	XtblHash       SHash
	XidxHash       SHash
	XtrigHash      SHash
	XfkeyHash      SHash
	XpSeqTab       uintptr // *STable
	Xfile_format   uint8
	Xenc           uint8
	XschemaFlags   uint16
	Xcache_size    int32
}

type SExpr struct {
	Xop              uint8
	Xaffinity        int8
	Xflags           uint32
	Xu               struct{ X int64 }
	XpLeft           uintptr // *SExpr
	XpRight          uintptr // *SExpr
	Xx               struct{ X int64 }
	XnHeight         int32
	XiTable          int32
	XiColumn         int16
	XiAgg            int16
	XiRightJoinTable int16
	Xop2             uint8
	XpAggInfo        uintptr // *SAggInfo
	XpTab            uintptr // *STable
}

// _421btreeEnterAll is defined at sqlite3.c:59548:29
func _421btreeEnterAll(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */) {
	var (
		_i      int32
		_skipOk int32
		_p      uintptr // *TBtree = SBtree
	)
	_skipOk = int32(1)

	_i = int32(0)
_1:
	if _i >= (*(*int32)(unsafe.Pointer(_db + 40))) {
		goto _3
	}

	_p = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_i)) + 8))
	if _p == 0 || (*(*uint8)(unsafe.Pointer(_p + 17))) == 0 {
		goto _4
	}

	_139sqlite3BtreeEnter(tls, _p)
	_skipOk = int32(0)
_4:
	_i++
	goto _1

_3:
	*(*uint8)(unsafe.Pointer(_db + 105)) = uint8(_skipOk)
}

// _422sqlite3InitOne is defined at sqlite3.c:116923:12
func _422sqlite3InitOne(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _iDb int32, _pzErrMsg uintptr /* **int8 */) (r int32) {
	esc := crt.MustMalloc(88)
	var (
		_rc                int32
		_i                 int32
		_size              int32
		_pDb               uintptr    // *TDb = SDb
		_azArg             = esc      // *[4]*int8
		_meta              = esc + 32 // *[5]int32
		_initData          = esc + 64 // *TInitData = struct{Xdb *Ssqlite3...sg **int8;XiDb int32;Xrc int32;}
		_zMasterName       uintptr    // *int8
		_openedTransaction int32
		_encoding          uint8
		_zSql              uintptr // *int8
		_xAuth             uintptr // Tsqlite3_xauth = *func(crt.TLS, ...uintptr, uintptr, uintptr) int32
	)
	defer crt.Free(esc)
	_openedTransaction = int32(0)

	*(*uint8)(unsafe.Pointer((_db + 176) + 5)) = uint8(1)
	*(*uintptr)(unsafe.Pointer(_azArg)) = set4(&_zMasterName, func() uintptr {
		if (1 != 0) && (_iDb == int32(1)) {
			return ts + 5250 /* "sqlite_temp_master" */
		}
		return ts + 5127 /* "sqlite_master" */
	}())
	*(*uintptr)(unsafe.Pointer(_azArg + 8)) = ts + 18848  /* "1" */
	*(*uintptr)(unsafe.Pointer(_azArg + 16)) = ts + 18850 /* "CREATE TABLE x(type text,name te..." */
	*(*uintptr)(unsafe.Pointer(_azArg + 24)) = null
	*(*uintptr)(unsafe.Pointer(_initData)) = _db
	*(*int32)(unsafe.Pointer(_initData + 16)) = _iDb
	*(*int32)(unsafe.Pointer(_initData + 20)) = int32(0)
	*(*uintptr)(unsafe.Pointer(_initData + 8)) = _pzErrMsg
	_714sqlite3InitCallback(tls, _initData, int32(3), _azArg, null)
	if (*(*int32)(unsafe.Pointer(_initData + 20))) == 0 {
		goto _1
	}

	_rc = *(*int32)(unsafe.Pointer(_initData + 20))
	goto _error_out

_1:
	_pDb = (*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)
	if (*(*uintptr)(unsafe.Pointer(_pDb + 8))) != 0 {
		goto _2
	}

	{
		p := &(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32) + 24))) + 114)))
		*p = uint16(int32(*p) | int32(0x1))
	}
	_rc = int32(0)
	goto _error_out

_2:
	_139sqlite3BtreeEnter(tls, *(*uintptr)(unsafe.Pointer(_pDb + 8)))
	if _142sqlite3BtreeIsInReadTrans(tls, *(*uintptr)(unsafe.Pointer(_pDb + 8))) != 0 {
		goto _3
	}

	_rc = _143sqlite3BtreeBeginTrans(tls, *(*uintptr)(unsafe.Pointer(_pDb + 8)), int32(0))
	if _rc == int32(0) {
		goto _4
	}

	_766sqlite3SetString(tls, _pzErrMsg, _db, _123sqlite3ErrStr(tls, _rc))
	goto _initone_error_out

_4:
	_openedTransaction = int32(1)
_3:
	_i = int32(0)
_5:
	if _i >= int32(5) {
		goto _7
	}

	_145sqlite3BtreeGetMeta(tls, *(*uintptr)(unsafe.Pointer(_pDb + 8)), _i+int32(1), _meta+4*uintptr(_i))
	_i++
	goto _5

_7:
	*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pDb + 24)))) = *(*int32)(unsafe.Pointer(_meta))
	if (*(*int32)(unsafe.Pointer(_meta + 16))) == 0 {
		goto _8
	}

	if _iDb != int32(0) {
		goto _10
	}

	_encoding = uint8(int32(uint8(*(*int32)(unsafe.Pointer(_meta + 16)))) & int32(3))
	if int32(_encoding) != int32(0) {
		goto _12
	}

	_encoding = uint8(1)
_12:
	*(*uint8)(unsafe.Pointer(_db + 94)) = _encoding
	goto _11

_10:
	if (*(*int32)(unsafe.Pointer(_meta + 16))) == int32(*(*uint8)(unsafe.Pointer(_db + 94))) {
		goto _13
	}

	_766sqlite3SetString(tls, _pzErrMsg, _db, ts+18922 /* "attached databases must use the ..." */)
	_rc = int32(1)
	goto _initone_error_out

_13:
_11:
	goto _9

_8:
	{
		p := &(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)) + 24))) + 114)))
		*p = uint16(int32(*p) | int32(0x4))
	}
_9:
	*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pDb + 24))) + 113)) = *(*uint8)(unsafe.Pointer(_db + 94))
	if (*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pDb + 24))) + 116))) != int32(0) {
		goto _14
	}

	_size = _767sqlite3AbsInt32(tls, *(*int32)(unsafe.Pointer(_meta + 8)))
	if _size != int32(0) {
		goto _15
	}

	_size = int32(-2000)
_15:
	*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pDb + 24))) + 116)) = _size
	_768sqlite3BtreeSetCacheSize(tls, *(*uintptr)(unsafe.Pointer(_pDb + 8)), *(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pDb + 24))) + 116)))
_14:
	*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pDb + 24))) + 112)) = uint8(*(*int32)(unsafe.Pointer(_meta + 4)))
	if int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pDb + 24))) + 112))) != int32(0) {
		goto _16
	}

	*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pDb + 24))) + 112)) = uint8(1)
_16:
	if int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pDb + 24))) + 112))) <= int32(4) {
		goto _17
	}

	_766sqlite3SetString(tls, _pzErrMsg, _db, ts+18990 /* "unsupported file format" */)
	_rc = int32(1)
	goto _initone_error_out

_17:
	if _iDb != int32(0) || (*(*int32)(unsafe.Pointer(_meta + 4))) < int32(4) {
		goto _18
	}

	{
		p := &(*(*uint32)(unsafe.Pointer(_db + 48)))
		*p = uint32(uint32(*p) & uint32(4294967293))
	}
_18:
	_zSql = _226sqlite3MPrintf(tls, _db, ts+19014 /* "SELECT name, rootpage, sql FROM ..." */, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb))), _zMasterName)
	_xAuth = *(*uintptr)(unsafe.Pointer(_db + 408))
	*(*uintptr)(unsafe.Pointer(_db + 408)) = null
	_rc = Xsqlite3_exec(tls, _db, _zSql, fp9(_714sqlite3InitCallback), _initData, null)
	*(*uintptr)(unsafe.Pointer(_db + 408)) = _xAuth
	if _rc != int32(0) {
		goto _19
	}

	_rc = *(*int32)(unsafe.Pointer(_initData + 20))
_19:
	_181sqlite3DbFree(tls, _db, _zSql)
	if _rc != int32(0) {
		goto _20
	}

	_715sqlite3AnalysisLoad(tls, _db, _iDb)
_20:
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _21
	}

	_rc = int32(7)
	_157sqlite3ResetAllSchemasOfConnection(tls, _db)
_21:
	if _rc != int32(0) && (*(*uint32)(unsafe.Pointer(_db + 48)))&uint32(0x1) == 0 {
		goto _22
	}

	{
		p := &(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)) + 24))) + 114)))
		*p = uint16(int32(*p) | int32(0x1))
	}
	_rc = int32(0)
_22:
	goto _initone_error_out
_initone_error_out:
	if _openedTransaction == 0 {
		goto _23
	}

	_769sqlite3BtreeCommit(tls, *(*uintptr)(unsafe.Pointer(_pDb + 8)))
_23:
	_169sqlite3BtreeLeave(tls, *(*uintptr)(unsafe.Pointer(_pDb + 8)))
	goto _error_out
_error_out:
	if _rc == 0 {
		goto _24
	}

	if _rc != int32(7) && _rc != int32(3082) {
		goto _25
	}

	_178sqlite3OomFault(tls, _db)
_25:
	_382sqlite3ResetOneSchema(tls, _db, _iDb)
_24:
	*(*uint8)(unsafe.Pointer((_db + 176) + 5)) = uint8(0)
	return _rc
}

// _423sqlite3CommitInternalChanges is defined at sqlite3.c:101260:21
func _423sqlite3CommitInternalChanges(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */) {
	{
		p := &(*(*uint32)(unsafe.Pointer(_db + 44)))
		*p = uint32(uint32(*p) & uint32(4294967294))
	}
}

// _424sqlite3HashFind is defined at sqlite3.c:29930:21
func _424sqlite3HashFind(tls crt.TLS, _pH uintptr /* *THash = SHash */, _pKey uintptr /* *int8 */) (r uintptr /* *void */) {
	return *(*uintptr)(unsafe.Pointer(_770findElementWithHash(tls, _pH, _pKey, null) + 16))
}

// _425btreeLeaveAll is defined at sqlite3.c:59565:29
func _425btreeLeaveAll(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */) {
	var (
		_i int32
		_p uintptr // *TBtree = SBtree
	)

	_i = int32(0)
_1:
	if _i >= (*(*int32)(unsafe.Pointer(_db + 40))) {
		goto _3
	}

	_p = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_i)) + 8))
	if _p == 0 {
		goto _4
	}

	_169sqlite3BtreeLeave(tls, _p)
_4:
	_i++
	goto _1

_3:
}

// Xsqlite3_status64 is defined at sqlite3.c:19194:16
func Xsqlite3_status64(tls crt.TLS, _op int32, _pCurrent uintptr /* *Tsqlite3_int64 = Tsqlite_int64 = int64 */, _pHighwater uintptr /* *Tsqlite3_int64 = Tsqlite_int64 = int64 */, _resetFlag int32) (r int32) {
	var _pMutex uintptr // *Tsqlite3_mutex = Ssqlite3_mutex

	if _op >= int32(0) && _op < int32(10) {
		goto _1
	}

	return _29sqlite3MisuseError(tls, int32(19203))

_1:
	_pMutex = func() uintptr {
		if (*(*int8)(unsafe.Pointer(_771statMutex + uintptr(_op)))) != 0 {
			return _772sqlite3Pcache1Mutex(tls)
		}
		return _773sqlite3MallocMutex(tls)
	}()
	Xsqlite3_mutex_enter(tls, _pMutex)
	*(*int64)(unsafe.Pointer(_pCurrent)) = int64(*(*int64)(unsafe.Pointer(_249sqlite3Stat + 8*uintptr(_op))))
	*(*int64)(unsafe.Pointer(_pHighwater)) = int64(*(*int64)(unsafe.Pointer((_249sqlite3Stat + 80) + 8*uintptr(_op))))
	if _resetFlag == 0 {
		goto _2
	}

	*(*int64)(unsafe.Pointer((_249sqlite3Stat + 80) + 8*uintptr(_op))) = *(*int64)(unsafe.Pointer(_249sqlite3Stat + 8*uintptr(_op)))
_2:
	Xsqlite3_mutex_leave(tls, _pMutex)

	return int32(0)
}

type SLookasideSlot struct {
	XpNext uintptr // *SLookasideSlot
}

// _426sqlite3LookasideUsed is defined at sqlite3.c:19248:20
func _426sqlite3LookasideUsed(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pHighwater uintptr /* *int32 */) (r int32) {
	var (
		_nInit uint32
		_nFree uint32
	)
	_nInit = _774countLookasideSlots(tls, *(*uintptr)(unsafe.Pointer((_db + 352) + 24)))
	_nFree = _774countLookasideSlots(tls, *(*uintptr)(unsafe.Pointer((_db + 352) + 32)))
	if _pHighwater == 0 {
		goto _1
	}

	*(*int32)(unsafe.Pointer(_pHighwater)) = int32((*(*uint32)(unsafe.Pointer((_db + 352) + 8))) - _nInit)
_1:
	return int32((*(*uint32)(unsafe.Pointer((_db + 352) + 8))) - (_nInit + _nFree))
}

// _427sqlite3PagerMemUsed is defined at sqlite3.c:54169:20
func _427sqlite3PagerMemUsed(tls crt.TLS, _pPager uintptr /* *TPager = SPager */) (r int32) {
	var _perPageSize int32

	_perPageSize = int32((uint64((*(*int32)(unsafe.Pointer(_pPager + 188)))+int32(*(*uint16)(unsafe.Pointer(_pPager + 176)))) + uint64(72)) + uint64(40))
	return ((_perPageSize * _775sqlite3PcachePagecount(tls, *(*uintptr)(unsafe.Pointer(_pPager + 280)))) + _109sqlite3MallocSize(tls, _pPager)) + (*(*int32)(unsafe.Pointer(_pPager + 188)))
}

// _428sqlite3BtreeConnectionCount is defined at sqlite3.c:69608:20
func _428sqlite3BtreeConnectionCount(tls crt.TLS, _p uintptr /* *TBtree = SBtree */) (r int32) {
	return *(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 8))) + 96))
}

// Xsqlite3_msize is defined at sqlite3.c:25134:27
func Xsqlite3_msize(tls crt.TLS, _p uintptr /* *void */) (r uint64) {
	if _p != 0 {
		return uint64(fn12(*(*uintptr)(unsafe.Pointer((_28sqlite3Config + 48) + 24)))(tls, _p))
	}

	return uint64(0)
}

// _429sqlite3DeleteTrigger is defined at sqlite3.c:124419:21
func _429sqlite3DeleteTrigger(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pTrigger uintptr /* *TTrigger = STrigger */) {
	if _pTrigger != 0 {
		goto _1
	}

	return

_1:
	_776sqlite3DeleteTriggerStep(tls, _db, *(*uintptr)(unsafe.Pointer(_pTrigger + 56)))
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_pTrigger)))
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_pTrigger + 8)))
	_777sqlite3ExprDelete(tls, _db, *(*uintptr)(unsafe.Pointer(_pTrigger + 24)))
	_778sqlite3IdListDelete(tls, _db, *(*uintptr)(unsafe.Pointer(_pTrigger + 32)))
	_181sqlite3DbFree(tls, _db, _pTrigger)
}

// _430sqlite3DeleteTable is defined at sqlite3.c:101344:21
func _430sqlite3DeleteTable(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pTable uintptr /* *TTable = STable */) {
	if _pTable != 0 {
		goto _1
	}

	return

_1:
	if _db != 0 && (*(*uintptr)(unsafe.Pointer(_db + 672))) != 0 || preinc134(&(*(*uint32)(unsafe.Pointer(_pTable + 60)))) <= uint32(0) {
		goto _2
	}

	return

_2:
	_779deleteTable(tls, _db, _pTable)
}

// _431sqlite3VdbeClearObject is defined at sqlite3.c:75195:21
func _431sqlite3VdbeClearObject(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _p uintptr /* *TVdbe = SVdbe */) {
	var (
		_pSub  uintptr // *TSubProgram = SSubProgram
		_pNext uintptr // *TSubProgram = SSubProgram
	)

	_624releaseMemArray(tls, *(*uintptr)(unsafe.Pointer(_p + 128)), int32(*(*uint16)(unsafe.Pointer(_p + 188)))*int32(2))
	_pSub = *(*uintptr)(unsafe.Pointer(_p + 272))
_1:
	if _pSub == 0 {
		goto _3
	}

	_pNext = *(*uintptr)(unsafe.Pointer(_pSub + 40))
	_780vdbeFreeOpArray(tls, _db, *(*uintptr)(unsafe.Pointer(_pSub)), *(*int32)(unsafe.Pointer(_pSub + 8)))
	_181sqlite3DbFree(tls, _db, _pSub)
	_pSub = _pNext
	goto _1

_3:
	if (*(*uint32)(unsafe.Pointer(_p + 36))) == uint32(0x16bceaa5) {
		goto _4
	}

	_624releaseMemArray(tls, *(*uintptr)(unsafe.Pointer(_p + 160)), int32(*(*int16)(unsafe.Pointer(_p + 32))))
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 168)))
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 240)))
_4:
	_780vdbeFreeOpArray(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 104)), *(*int32)(unsafe.Pointer(_p + 184)))
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 128)))
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 232)))
}

// _432sqlite3PagerCacheStat is defined at sqlite3.c:54212:21
func _432sqlite3PagerCacheStat(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _eStat int32, _reset int32, _pnVal uintptr /* *int32 */) {
	{
		p := &(*(*int32)(unsafe.Pointer(_pnVal)))
		*p = int32(int32(*p) + (*(*int32)(unsafe.Pointer((_pPager + 240) + 4*uintptr(_eStat-int32(7))))))
	}
	if _reset == 0 {
		goto _1
	}

	*(*int32)(unsafe.Pointer((_pPager + 240) + 4*uintptr(_eStat-int32(7)))) = int32(0)
_1:
}

// _433aTrans [7]struct{XzPattern *int8;XzDesc *int8;}, escapes: true, shell.c:3190:7
var _433aTrans = bss + 9552 // array of 7 struct{zPattern pointer to char; zDesc pointer to char}

func init() {
	*(*[7]struct {
		XzPattern uintptr // *int8
		XzDesc    uintptr // *int8
	})(unsafe.Pointer(_433aTrans)) = [7]struct {
		XzPattern uintptr // *int8
		XzDesc    uintptr // *int8
	}{
		0:
		// *int8
		// *int8
		{
			XzPattern: ts + 19069, /* "rchar: " */
			XzDesc:    ts + 19077, /* "Bytes received by read():" */
		},
		1:
		// *int8
		// *int8
		{
			XzPattern: ts + 19103, /* "wchar: " */
			XzDesc:    ts + 19111, /* "Bytes sent to write():" */
		},
		2:
		// *int8
		// *int8
		{
			XzPattern: ts + 19134, /* "syscr: " */
			XzDesc:    ts + 19142, /* "Read() system calls:" */
		},
		3:
		// *int8
		// *int8
		{
			XzPattern: ts + 19163, /* "syscw: " */
			XzDesc:    ts + 19171, /* "Write() system calls:" */
		},
		4:
		// *int8
		// *int8
		{
			XzPattern: ts + 19193, /* "read_bytes: " */
			XzDesc:    ts + 19206, /* "Bytes read from storage:" */
		},
		5:
		// *int8
		// *int8
		{
			XzPattern: ts + 19231, /* "write_bytes: " */
			XzDesc:    ts + 19245, /* "Bytes written to storage:" */
		},
		6:
		// *int8
		// *int8
		{
			XzPattern: ts + 19271, /* "cancelled_write_bytes: " */
			XzDesc:    ts + 19295, /* "Cancelled write bytes:" */
		},
	}
}

// _434sqlite3StatusHighwater is defined at sqlite3.c:19174:21
func _434sqlite3StatusHighwater(tls crt.TLS, _op int32, _X int32) {
	var _newValue int64

	_newValue = int64(_X)

	if _newValue <= (*(*int64)(unsafe.Pointer((_249sqlite3Stat + 80) + 8*uintptr(_op)))) {
		goto _1
	}

	*(*int64)(unsafe.Pointer((_249sqlite3Stat + 80) + 8*uintptr(_op))) = _newValue
_1:
}

// _435sqlite3StatusValue is defined at sqlite3.c:19129:30
func _435sqlite3StatusValue(tls crt.TLS, _op int32) (r int64) {
	return *(*int64)(unsafe.Pointer(_249sqlite3Stat + 8*uintptr(_op)))
}

// _436sqlite3MallocAlarm is defined at sqlite3.c:24999:13
func _436sqlite3MallocAlarm(tls crt.TLS, _nByte int32) {
	if (*(*int64)(unsafe.Pointer(_107mem0 + 8))) > int64(0) {
		goto _1
	}

	return

_1:
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_107mem0)))
	Xsqlite3_release_memory(tls, _nByte)
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_107mem0)))
}

// _437sqlite3StatusUp is defined at sqlite3.c:19149:21
func _437sqlite3StatusUp(tls crt.TLS, _op int32, _N int32) {
	{
		p := &(*(*int64)(unsafe.Pointer(_249sqlite3Stat + 8*uintptr(_op))))
		*p = int64(int64(*p) + int64(_N))
	}
	if (*(*int64)(unsafe.Pointer(_249sqlite3Stat + 8*uintptr(_op)))) <= (*(*int64)(unsafe.Pointer((_249sqlite3Stat + 80) + 8*uintptr(_op)))) {
		goto _1
	}

	*(*int64)(unsafe.Pointer((_249sqlite3Stat + 80) + 8*uintptr(_op))) = *(*int64)(unsafe.Pointer(_249sqlite3Stat + 8*uintptr(_op)))
_1:
}

// _438delays [12]uint8, escapes: true, sqlite3.c:143446:19
var _438delays = ds + 6973

// _439totals [12]uint8, escapes: true, sqlite3.c:143448:19
var _439totals = ds + 6985

// _440sqlite3WalFile is defined at sqlite3.c:58647:29
func _440sqlite3WalFile(tls crt.TLS, _pWal uintptr /* *TWal = SWal */) (r uintptr /* *Tsqlite3_file = Ssqlite3_file */) {
	return *(*uintptr)(unsafe.Pointer(_pWal + 16))
}

// _441sqlite3VdbeRealValue is defined at sqlite3.c:70935:23
func _441sqlite3VdbeRealValue(tls crt.TLS, _pMem uintptr /* *TMem = Ssqlite3_value */) (r float64) {
	if (int32(*(*uint16)(unsafe.Pointer(_pMem + 8))) & int32(0x8)) == 0 {
		goto _1
	}

	return *(*float64)(unsafe.Pointer(_pMem))

	goto _2

_1:
	if (int32(*(*uint16)(unsafe.Pointer(_pMem + 8))) & int32(0x4)) == 0 {
		goto _3
	}

	return float64(*(*int64)(unsafe.Pointer(_pMem)))

	goto _4

_3:
	if (int32(*(*uint16)(unsafe.Pointer(_pMem + 8))) & int32(18)) == 0 {
		goto _5
	}

	return _781memRealValue(tls, _pMem)

	goto _6

_5:
	return float64(0)

_6:
_4:
_2:
	return r
}

// _442sqlite3VdbeMemExpandBlob is defined at sqlite3.c:70674:20
func _442sqlite3VdbeMemExpandBlob(tls crt.TLS, _pMem uintptr /* *TMem = Ssqlite3_value */) (r int32) {
	var _nByte int32

	_nByte = (*(*int32)(unsafe.Pointer(_pMem + 12))) + (*(*int32)(unsafe.Pointer(_pMem)))
	if _nByte > int32(0) {
		goto _1
	}

	_nByte = int32(1)
_1:
	if _627sqlite3VdbeMemGrow(tls, _pMem, _nByte, int32(1)) == 0 {
		goto _2
	}

	return int32(7)

_2:
	crt.Xmemset(tls, (*(*uintptr)(unsafe.Pointer(_pMem + 16)))+uintptr(*(*int32)(unsafe.Pointer(_pMem + 12))), int32(0), uint64(*(*int32)(unsafe.Pointer(_pMem))))
	{
		p := &(*(*int32)(unsafe.Pointer(_pMem + 12)))
		*p = int32(int32(*p) + (*(*int32)(unsafe.Pointer(_pMem))))
	}
	{
		p := &(*(*uint16)(unsafe.Pointer(_pMem + 8)))
		*p = uint16(int32(*p) & int32(-16897))
	}
	return int32(0)
}

// _443sqlite3ValueBytes is defined at sqlite3.c:72165:20
func _443sqlite3ValueBytes(tls crt.TLS, _pVal uintptr /* *Tsqlite3_value = Ssqlite3_value */, _enc uint8) (r int32) {
	var _p uintptr // *TMem = Ssqlite3_value

	_p = _pVal

	if (int32(*(*uint16)(unsafe.Pointer(_p + 8)))&int32(0x2)) == int32(0) || int32(*(*uint8)(unsafe.Pointer(_pVal + 10))) != int32(_enc) {
		goto _1
	}

	return *(*int32)(unsafe.Pointer(_p + 12))

_1:
	if (int32(*(*uint16)(unsafe.Pointer(_p + 8))) & int32(0x10)) == int32(0) {
		goto _2
	}

	if (int32(*(*uint16)(unsafe.Pointer(_p + 8))) & int32(0x4000)) == 0 {
		goto _3
	}

	return (*(*int32)(unsafe.Pointer(_p + 12))) + (*(*int32)(unsafe.Pointer(_p)))

	goto _4

_3:
	return *(*int32)(unsafe.Pointer(_p + 12))

_4:
_2:
	if (int32(*(*uint16)(unsafe.Pointer(_p + 8))) & int32(0x1)) == 0 {
		goto _5
	}

	return int32(0)

_5:
	return _782valueBytes(tls, _pVal, _enc)
}

// _444sBegin Srusage, escapes: true, shell.c:234:22
var _444sBegin = bss + 9664

// _445iBegin Tsqlite3_int64 = Tsqlite_int64 = int64, escapes: false, shell.c:235:22
var _445iBegin int64

// _446timeOfDay is defined at shell.c:206:22
func _446timeOfDay(tls crt.TLS) (r int64) {
	esc := crt.MustMalloc(24)
	var (
		_t = esc      // *Tsqlite3_int64 = Tsqlite_int64 = int64
		_r = esc + 16 // *float64
	)
	defer crt.Free(esc)
	if _783clockVfs != 0 {
		goto _1
	}

	_783clockVfs = Xsqlite3_vfs_find(tls, null)
_1:
	if (*(*int32)(unsafe.Pointer(_783clockVfs))) < int32(2) || (*(*uintptr)(unsafe.Pointer(_783clockVfs + 136))) == 0 {
		goto _2
	}

	fn58(*(*uintptr)(unsafe.Pointer(_783clockVfs + 136)))(tls, _783clockVfs, _t)
	goto _3

_2:
	fn58(*(*uintptr)(unsafe.Pointer(_783clockVfs + 120)))(tls, _783clockVfs, _r)
	*(*int64)(unsafe.Pointer(_t)) = int64((*(*float64)(unsafe.Pointer(_r))) * float64(8.64e+07))
_3:
	return *(*int64)(unsafe.Pointer(_t))
}

type Srusage struct {
	Xru_utime Stimeval
	Xru_stime Stimeval
	_         struct{ X int64 }
	_         struct{ X int64 }
	_         struct{ X int64 }
	_         struct{ X int64 }
	_         struct{ X int64 }
	_         struct{ X int64 }
	_         struct{ X int64 }
	_         struct{ X int64 }
	_         struct{ X int64 }
	_         struct{ X int64 }
	_         struct{ X int64 }
	_         struct{ X int64 }
	_         struct{ X int64 }
	_         struct{ X int64 }
}

// _447timeDiff is defined at shell.c:248:15
func _447timeDiff(tls crt.TLS, _pStart uintptr /* *Stimeval */, _pEnd uintptr /* *Stimeval */) (r float64) {
	return (float64((*(*int64)(unsafe.Pointer(_pEnd + 8)))-(*(*int64)(unsafe.Pointer(_pStart + 8)))) * float64(1e-06)) + float64((*(*int64)(unsafe.Pointer(_pEnd)))-(*(*int64)(unsafe.Pointer(_pStart))))
}

type Ssqlite3_vtab struct {
	XpModule uintptr // *Ssqlite3_module
	XnRef    int32
	XzErrMsg uintptr // *int8
}

// _448sqlite3VtabDisconnect is defined at sqlite3.c:126531:21
func _448sqlite3VtabDisconnect(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _p uintptr /* *TTable = STable */) {
	var (
		_ppVTab uintptr // **TVTable = SVTable
		_pVTab  uintptr // *TVTable = SVTable
	)

	_ppVTab = _p + 96
_1:
	if (*(*uintptr)(unsafe.Pointer(_ppVTab))) == 0 {
		goto _3
	}

	if (*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_ppVTab))))) != _db {
		goto _4
	}

	_pVTab = *(*uintptr)(unsafe.Pointer(_ppVTab))
	*(*uintptr)(unsafe.Pointer(_ppVTab)) = *(*uintptr)(unsafe.Pointer(_pVTab + 40))
	_566sqlite3VtabUnlock(tls, _pVTab)
	goto _3

_4:
	_ppVTab = *(*uintptr)(unsafe.Pointer(_ppVTab)) + 40
	goto _1

_3:
}

// _449callFinaliser is defined at sqlite3.c:127173:13
func _449callFinaliser(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _offset int32) {
	var (
		_i       int32
		_aVTrans uintptr // **TVTable = SVTable
		_pVTab   uintptr // *TVTable = SVTable
		_p       uintptr // *Tsqlite3_vtab = Ssqlite3_vtab
		_x       uintptr // *func(crt.TLS, uintptr) int32
	)
	if (*(*uintptr)(unsafe.Pointer(_db + 480))) == 0 {
		goto _1
	}

	_aVTrans = *(*uintptr)(unsafe.Pointer(_db + 480))
	*(*uintptr)(unsafe.Pointer(_db + 480)) = null
	_i = int32(0)
_2:
	if _i >= (*(*int32)(unsafe.Pointer(_db + 444))) {
		goto _4
	}

	_pVTab = *(*uintptr)(unsafe.Pointer(_aVTrans + 8*uintptr(_i)))
	_p = *(*uintptr)(unsafe.Pointer(_pVTab + 16))
	if _p == 0 {
		goto _5
	}

	_x = *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_p)) + uintptr(_offset)))
	if _x == 0 {
		goto _6
	}

	fn12(_x)(tls, _p)
_6:
_5:
	*(*int32)(unsafe.Pointer(_pVTab + 32)) = int32(0)
	_566sqlite3VtabUnlock(tls, _pVTab)
	_i++
	goto _2

_4:
	_181sqlite3DbFree(tls, _db, _aVTrans)
	*(*int32)(unsafe.Pointer(_db + 444)) = int32(0)
_1:
}

// _450sqlite3BtreeIsInBackup is defined at sqlite3.c:69396:20
func _450sqlite3BtreeIsInBackup(tls crt.TLS, _p uintptr /* *TBtree = SBtree */) (r int32) {
	return bool2int((*(*int32)(unsafe.Pointer(_p + 24))) != int32(0))
}

// _451renderLogMsg is defined at sqlite3.c:26593:13
func _451renderLogMsg(tls crt.TLS, _iErrCode int32, _zFormat uintptr /* *int8 */, _ap *[]interface{}) {
	esc := crt.MustMalloc(242)
	var (
		_acc  = esc      // *TStrAccum = SStrAccum
		_zMsg = esc + 32 // *[210]int8
	)
	defer crt.Free(esc)
	_130sqlite3StrAccumInit(tls, _acc, null, _zMsg, int32(210), int32(0))
	_131sqlite3VXPrintf(tls, _acc, _zFormat, _ap)
	fn68(*(*uintptr)(unsafe.Pointer(_28sqlite3Config + 392)))(tls, *(*uintptr)(unsafe.Pointer(_28sqlite3Config + 400)), _iErrCode, _299sqlite3StrAccumFinish(tls, _acc))
}

// _452dummyCurrentPage uint32, escapes: true, sqlite3.c:46347:27
var _452dummyCurrentPage = bss + 9808

type SPCache1 struct {
	XpGroup      uintptr // *SPGroup
	XpnPurgeable uintptr // *uint32
	XszPage      int32
	XszExtra     int32
	XszAlloc     int32
	XbPurgeable  int32
	XnMin        uint32
	XnMax        uint32
	Xn90pct      uint32
	XiMaxKey     uint32
	XnRecyclable uint32
	XnPage       uint32
	XnHash       uint32
	XapHash      uintptr // **SPgHdr1
	XpFree       uintptr // *SPgHdr1
	XpBulk       uintptr // uintptr
}

type SPGroup struct {
	Xmutex      uintptr // *Ssqlite3_mutex
	XnMaxPage   uint32
	XnMinPage   uint32
	XmxPinned   uint32
	XnPurgeable uint32
	Xlru        SPgHdr1
}

// _453pcache1ResizeHash is defined at sqlite3.c:46087:13
func _453pcache1ResizeHash(tls crt.TLS, _p uintptr /* *TPCache1 = SPCache1 */) {
	var (
		_apNew uintptr // **TPgHdr1 = SPgHdr1
		_nNew  uint32
		_i     uint32
		_pPage uintptr // *TPgHdr1 = SPgHdr1
		_pNext uintptr // *TPgHdr1 = SPgHdr1
		_h     uint32
	)

	_nNew = (*(*uint32)(unsafe.Pointer(_p + 56))) * uint32(2)
	if _nNew >= uint32(256) {
		goto _1
	}

	_nNew = uint32(256)
_1:
	if (*(*uint32)(unsafe.Pointer(_p + 56))) == 0 {
		goto _2
	}

	_523sqlite3BeginBenignMalloc(tls)
_2:
	_apNew = _135sqlite3MallocZero(tls, uint64(uint64(8)*uint64(_nNew)))
	if (*(*uint32)(unsafe.Pointer(_p + 56))) == 0 {
		goto _3
	}

	_524sqlite3EndBenignMalloc(tls)
_3:
	if _apNew == 0 {
		goto _4
	}

	_i = uint32(0)
_5:
	if _i >= (*(*uint32)(unsafe.Pointer(_p + 56))) {
		goto _7
	}

	_pNext = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 64))) + 8*uintptr(_i)))
_8:
	if set4(&_pPage, _pNext) == 0 {
		goto _9
	}

	_h = (*(*uint32)(unsafe.Pointer(_pPage + 16))) % _nNew
	_pNext = *(*uintptr)(unsafe.Pointer(_pPage + 24))
	*(*uintptr)(unsafe.Pointer(_pPage + 24)) = *(*uintptr)(unsafe.Pointer(_apNew + 8*uintptr(_h)))
	*(*uintptr)(unsafe.Pointer(_apNew + 8*uintptr(_h))) = _pPage
	goto _8

_9:
	_i++
	goto _5

_7:
	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_p + 64)))
	*(*uintptr)(unsafe.Pointer(_p + 64)) = _apNew
	*(*uint32)(unsafe.Pointer(_p + 56)) = _nNew
_4:
}

// _454pcache1EnforceMaxPage is defined at sqlite3.c:46170:13
func _454pcache1EnforceMaxPage(tls crt.TLS, _pCache uintptr /* *TPCache1 = SPCache1 */) {
	var (
		_pGroup uintptr // *TPGroup = SPGroup
		_p      uintptr // *TPgHdr1 = SPgHdr1
	)
	_pGroup = *(*uintptr)(unsafe.Pointer(_pCache))

_1:
	if (*(*uint32)(unsafe.Pointer(_pGroup + 20))) <= (*(*uint32)(unsafe.Pointer(_pGroup + 8))) || int32(*(*uint8)(unsafe.Pointer(set4(&_p, *(*uintptr)(unsafe.Pointer((_pGroup + 24) + 48))) + 21))) != int32(0) {
		goto _2
	}

	_784pcache1PinPage(tls, _p)
	_456pcache1RemoveFromHash(tls, _p, int32(1))
	goto _1

_2:
	if (*(*uint32)(unsafe.Pointer(_pCache + 52))) != uint32(0) || (*(*uintptr)(unsafe.Pointer(_pCache + 80))) == 0 {
		goto _3
	}

	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_pCache + 80)))
	*(*uintptr)(unsafe.Pointer(_pCache + 80)) = set4(&(*(*uintptr)(unsafe.Pointer(_pCache + 72))), null)
_3:
}

// _455pcache1FetchNoMutex is defined at sqlite3.c:46545:15
func _455pcache1FetchNoMutex(tls crt.TLS, _p uintptr /* *Tsqlite3_pcache = Ssqlite3_pcache */, _iKey uint32, _createFlag int32) (r uintptr /* *TPgHdr1 = SPgHdr1 */) {
	var (
		_pCache uintptr // *TPCache1 = SPCache1
		_pPage  uintptr // *TPgHdr1 = SPgHdr1
	)
	_pCache = _p
	_pPage = 0
	_pPage = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pCache + 64))) + 8*uintptr(_iKey%(*(*uint32)(unsafe.Pointer(_pCache + 56))))))
_1:
	if _pPage == 0 || (*(*uint32)(unsafe.Pointer(_pPage + 16))) == _iKey {
		goto _2
	}

	_pPage = *(*uintptr)(unsafe.Pointer(_pPage + 24))
	goto _1

_2:
	if _pPage == 0 {
		goto _3
	}

	if (*(*uintptr)(unsafe.Pointer(_pPage + 40))) == 0 {
		goto _5
	}

	return _784pcache1PinPage(tls, _pPage)

	goto _6

_5:
	return _pPage

_6:
	goto _4

_3:
	if _createFlag == 0 {
		goto _7
	}

	return _785pcache1FetchStage2(tls, _pCache, _iKey, _createFlag)

	goto _8

_7:
	return null

_8:
_4:
	return r
}

type SPgHdr1 struct {
	Xpage        Ssqlite3_pcache_page
	XiKey        uint32
	XisBulkLocal uint8
	XisAnchor    uint8
	XpNext       uintptr // *SPgHdr1
	XpCache      uintptr // *SPCache1
	XpLruNext    uintptr // *SPgHdr1
	XpLruPrev    uintptr // *SPgHdr1
}

// _456pcache1RemoveFromHash is defined at sqlite3.c:46152:13
func _456pcache1RemoveFromHash(tls crt.TLS, _pPage uintptr /* *TPgHdr1 = SPgHdr1 */, _freeFlag int32) {
	var (
		_h      uint32
		_pCache uintptr // *TPCache1 = SPCache1
		_pp     uintptr // **TPgHdr1 = SPgHdr1
	)
	_pCache = *(*uintptr)(unsafe.Pointer(_pPage + 32))

	_h = (*(*uint32)(unsafe.Pointer(_pPage + 16))) % (*(*uint32)(unsafe.Pointer(_pCache + 56)))
	_pp = (*(*uintptr)(unsafe.Pointer(_pCache + 64))) + 8*uintptr(_h)
_1:
	if *(*uintptr)(unsafe.Pointer(_pp)) == _pPage {
		goto _3
	}

	_pp = *(*uintptr)(unsafe.Pointer(_pp)) + 24
	goto _1

_3:
	*(*uintptr)(unsafe.Pointer(_pp)) = *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pp)) + 24))
	(*(*uint32)(unsafe.Pointer(_pCache + 52)))--
	if _freeFlag == 0 {
		goto _4
	}

	_786pcache1FreePage(tls, _pPage)
_4:
}

// _457pcache1TruncateUnsafe is defined at sqlite3.c:46195:13
func _457pcache1TruncateUnsafe(tls crt.TLS, _pCache uintptr /* *TPCache1 = SPCache1 */, _iLimit uint32) {
	var (
		_h     uint32
		_iStop uint32
		_pp    uintptr // **TPgHdr1 = SPgHdr1
		_pPage uintptr // *TPgHdr1 = SPgHdr1
	)

	if ((*(*uint32)(unsafe.Pointer(_pCache + 44))) - _iLimit) >= (*(*uint32)(unsafe.Pointer(_pCache + 56))) {
		goto _1
	}

	_h = _iLimit % (*(*uint32)(unsafe.Pointer(_pCache + 56)))
	_iStop = (*(*uint32)(unsafe.Pointer(_pCache + 44))) % (*(*uint32)(unsafe.Pointer(_pCache + 56)))
	goto _2

_1:
	_h = (*(*uint32)(unsafe.Pointer(_pCache + 56))) / uint32(2)
	_iStop = _h - uint32(1)
_2:
_3:
	_pp = (*(*uintptr)(unsafe.Pointer(_pCache + 64))) + 8*uintptr(_h)
_6:
	if set4(&_pPage, *(*uintptr)(unsafe.Pointer(_pp))) == 0 {
		goto _7
	}

	if (*(*uint32)(unsafe.Pointer(_pPage + 16))) < _iLimit {
		goto _8
	}

	(*(*uint32)(unsafe.Pointer(_pCache + 52)))--
	*(*uintptr)(unsafe.Pointer(_pp)) = *(*uintptr)(unsafe.Pointer(_pPage + 24))
	if (*(*uintptr)(unsafe.Pointer(_pPage + 40))) == 0 {
		goto _10
	}

	_784pcache1PinPage(tls, _pPage)
_10:
	_786pcache1FreePage(tls, _pPage)
	goto _9

_8:
	_pp = _pPage + 24
_9:
	goto _6

_7:
	if _h != _iStop {
		goto _11
	}

	goto _5

_11:
	_h = (_h + uint32(1)) % (*(*uint32)(unsafe.Pointer(_pCache + 56)))
	goto _3

_5:
}

// _458sMutex Tsqlite3_mutex_methods = Ssqlite3_mutex_methods, escapes: true, sqlite3.c:24115:38
var _458sMutex = bss + 9816 // sqlite3_mutex_methods

func init() {
	*(*Ssqlite3_mutex_methods)(unsafe.Pointer(_458sMutex)) = Ssqlite3_mutex_methods{
		XxMutexInit:  fp90(_787pthreadMutexInit),
		XxMutexEnd:   fp90(_788pthreadMutexEnd),
		XxMutexAlloc: fp29(_789pthreadMutexAlloc),
		XxMutexFree:  fp18(_790pthreadMutexFree),
		XxMutexEnter: fp18(_791pthreadMutexEnter),
		XxMutexTry:   fp10(_792pthreadMutexTry),
		XxMutexLeave: fp18(_793pthreadMutexLeave),
	}
}

// _459sMutex Tsqlite3_mutex_methods = Ssqlite3_mutex_methods, escapes: true, sqlite3.c:23583:38
var _459sMutex = bss + 9888 // sqlite3_mutex_methods

func init() {
	*(*Ssqlite3_mutex_methods)(unsafe.Pointer(_459sMutex)) = Ssqlite3_mutex_methods{
		XxMutexInit:  fp90(_794noopMutexInit),
		XxMutexEnd:   fp90(_795noopMutexEnd),
		XxMutexAlloc: fp29(_796noopMutexAlloc),
		XxMutexFree:  fp18(_797noopMutexFree),
		XxMutexEnter: fp18(_798noopMutexEnter),
		XxMutexTry:   fp10(_799noopMutexTry),
		XxMutexLeave: fp18(_800noopMutexLeave),
	}
}

// _460loadExt is defined at sqlite3.c:107969:13
func _460loadExt(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _argc int32, _argv uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	esc := crt.MustMalloc(8)
	var (
		_zFile   uintptr // *int8
		_zProc   uintptr // *int8
		_db      uintptr // *Tsqlite3 = Ssqlite3
		_zErrMsg = esc   // **int8
	)
	defer crt.Free(esc)
	_zFile = Xsqlite3_value_text(tls, *(*uintptr)(unsafe.Pointer(_argv)))
	_db = Xsqlite3_context_db_handle(tls, _context)
	*(*uintptr)(unsafe.Pointer(_zErrMsg)) = 0
	if ((*(*uint32)(unsafe.Pointer(_db + 48))) & uint32(0x20000)) != uint32(0) {
		goto _1
	}

	Xsqlite3_result_error(tls, _context, ts+15695 /* "not authorized" */, int32(-1))
	return

_1:
	if _argc != int32(2) {
		goto _2
	}

	_zProc = Xsqlite3_value_text(tls, *(*uintptr)(unsafe.Pointer(_argv + 8)))
	goto _3

_2:
	_zProc = null
_3:
	if _zFile == 0 || Xsqlite3_load_extension(tls, _db, _zFile, _zProc, _zErrMsg) == 0 {
		goto _4
	}

	Xsqlite3_result_error(tls, _context, *(*uintptr)(unsafe.Pointer(_zErrMsg)), int32(-1))
	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_zErrMsg)))
_4:
}

// _461compileoptionusedFunc is defined at sqlite3.c:107483:13
func _461compileoptionusedFunc(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _argc int32, _argv uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	var _zOptName uintptr // *int8

	if set4(&_zOptName, Xsqlite3_value_text(tls, *(*uintptr)(unsafe.Pointer(_argv)))) == 0 {
		goto _1
	}

	Xsqlite3_result_int(tls, _context, Xsqlite3_compileoption_used(tls, _zOptName))
_1:
}

// _462compileoptiongetFunc is defined at sqlite3.c:107507:13
func _462compileoptiongetFunc(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _argc int32, _argv uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	var _n int32

	_n = Xsqlite3_value_int(tls, *(*uintptr)(unsafe.Pointer(_argv)))
	Xsqlite3_result_text(tls, _context, Xsqlite3_compileoption_get(tls, _n), int32(-1), null)
}

// _463versionFunc is defined at sqlite3.c:107435:13
func _463versionFunc(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _NotUsed int32, _NotUsed2 uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	Xsqlite3_result_text(tls, _context, Xsqlite3_libversion(tls), int32(-1), null)
}

// _464trimFunc is defined at sqlite3.c:107804:13
func _464trimFunc(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _argc int32, _argv uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	var (
		_zIn      uintptr // *uint8
		_zCharSet uintptr // *uint8
		_nIn      int32
		_flags    int32
		_i        int32
		_aLen     uintptr // *uint8
		_azChar   uintptr // **uint8
		_nChar    int32
		_z        uintptr // *uint8
		_len      int32
		_1len     int32
	)
	_aLen = 0
	_azChar = 0
	if Xsqlite3_value_type(tls, *(*uintptr)(unsafe.Pointer(_argv))) != int32(5) {
		goto _1
	}

	return

_1:
	_zIn = Xsqlite3_value_text(tls, *(*uintptr)(unsafe.Pointer(_argv)))
	if _zIn != 0 {
		goto _2
	}

	return

_2:
	_nIn = Xsqlite3_value_bytes(tls, *(*uintptr)(unsafe.Pointer(_argv)))

	if _argc != int32(1) {
		goto _3
	}

	_nChar = int32(1)
	_aLen = _801lenOne
	_azChar = _802azOne
	_zCharSet = null
	goto _4

_3:
	if set4(&_zCharSet, Xsqlite3_value_text(tls, *(*uintptr)(unsafe.Pointer(_argv + 8)))) != 0 {
		goto _5
	}

	return

	goto _6

_5:
	_z = _zCharSet
	_nChar = int32(0)
_7:
	if (*(*uint8)(unsafe.Pointer(_z))) == 0 {
		goto _9
	}

	if int32(*(*uint8)(unsafe.Pointer(postinc19(&_z)))) < int32(0xc0) {
		goto _10
	}

_11:
	if (int32(*(*uint8)(unsafe.Pointer(_z))) & int32(0xc0)) != int32(0x80) {
		goto _12
	}

	_z++
	goto _11

_12:
_10:
	_nChar++
	goto _7

_9:
	if _nChar <= int32(0) {
		goto _13
	}

	_azChar = _803contextMalloc(tls, _context, int64(uint64(int64(_nChar))*uint64(9)))
	if _azChar != 0 {
		goto _14
	}

	return

_14:
	_aLen = _azChar + 8*uintptr(_nChar)
	_z = _zCharSet
	_nChar = int32(0)
_15:
	if (*(*uint8)(unsafe.Pointer(_z))) == 0 {
		goto _17
	}

	*(*uintptr)(unsafe.Pointer(_azChar + 8*uintptr(_nChar))) = _z
	if int32(*(*uint8)(unsafe.Pointer(postinc19(&_z)))) < int32(0xc0) {
		goto _18
	}

_19:
	if (int32(*(*uint8)(unsafe.Pointer(_z))) & int32(0xc0)) != int32(0x80) {
		goto _20
	}

	_z++
	goto _19

_20:
_18:
	*(*uint8)(unsafe.Pointer(_aLen + uintptr(_nChar))) = uint8(int64(_z - (*(*uintptr)(unsafe.Pointer(_azChar + 8*uintptr(_nChar))))))
	_nChar++
	goto _15

_17:
_13:
_6:
_4:
	if _nChar <= int32(0) {
		goto _21
	}

	_flags = int32(int64(Xsqlite3_user_data(tls, _context)))
	if (_flags & int32(1)) == 0 {
		goto _22
	}

_23:
	if _nIn <= int32(0) {
		goto _24
	}

	_len = int32(0)
	_i = int32(0)
_25:
	if _i >= _nChar {
		goto _27
	}

	_len = int32(*(*uint8)(unsafe.Pointer(_aLen + uintptr(_i))))
	if _len > _nIn || crt.Xmemcmp(tls, _zIn, *(*uintptr)(unsafe.Pointer(_azChar + 8*uintptr(_i))), uint64(_len)) != int32(0) {
		goto _28
	}

	goto _27

_28:
	_i++
	goto _25

_27:
	if _i < _nChar {
		goto _29
	}

	goto _24

_29:
	_zIn += uintptr(_len)
	_nIn = int32(_nIn - _len)
	goto _23

_24:
_22:
	if (_flags & int32(2)) == 0 {
		goto _30
	}

_31:
	if _nIn <= int32(0) {
		goto _32
	}

	_1len = int32(0)
	_i = int32(0)
_33:
	if _i >= _nChar {
		goto _35
	}

	_1len = int32(*(*uint8)(unsafe.Pointer(_aLen + uintptr(_i))))
	if _1len > _nIn || crt.Xmemcmp(tls, _zIn+uintptr(_nIn-_1len), *(*uintptr)(unsafe.Pointer(_azChar + 8*uintptr(_i))), uint64(_1len)) != int32(0) {
		goto _36
	}

	goto _35

_36:
	_i++
	goto _33

_35:
	if _i < _nChar {
		goto _37
	}

	goto _32

_37:
	_nIn = int32(_nIn - _1len)
	goto _31

_32:
_30:
	if _zCharSet == 0 {
		goto _38
	}

	Xsqlite3_free(tls, _azChar)
_38:
_21:
	Xsqlite3_result_text(tls, _context, _zIn, _nIn, uintptr(18446744073709551615))
}

// _465minmaxFunc is defined at sqlite3.c:106585:13
func _465minmaxFunc(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _argc int32, _argv uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	var (
		_i     int32
		_mask  int32
		_iBest int32
		_pColl uintptr // *TCollSeq = SCollSeq
	)

	_mask = func() int32 {
		if Xsqlite3_user_data(tls, _context) == 0 {
			return int32(0)
		}
		return int32(-1)
	}()
	_pColl = _804sqlite3GetFuncCollSeq(tls, _context)

	_iBest = int32(0)
	if Xsqlite3_value_type(tls, *(*uintptr)(unsafe.Pointer(_argv))) != int32(5) {
		goto _1
	}

	return

_1:
	_i = int32(1)
_2:
	if _i >= _argc {
		goto _4
	}

	if Xsqlite3_value_type(tls, *(*uintptr)(unsafe.Pointer(_argv + 8*uintptr(_i)))) != int32(5) {
		goto _5
	}

	return

_5:
	if (_661sqlite3MemCompare(tls, *(*uintptr)(unsafe.Pointer(_argv + 8*uintptr(_iBest))), *(*uintptr)(unsafe.Pointer(_argv + 8*uintptr(_i))), _pColl) ^ _mask) < int32(0) {
		goto _6
	}

	_iBest = _i
_6:
	_i++
	goto _2

_4:
	Xsqlite3_result_value(tls, _context, *(*uintptr)(unsafe.Pointer(_argv + 8*uintptr(_iBest))))
}

// _466minmaxStep is defined at sqlite3.c:108104:13
func _466minmaxStep(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _NotUsed int32, _argv uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	var (
		_pArg  uintptr // *TMem = Ssqlite3_value
		_pBest uintptr // *TMem = Ssqlite3_value
		_max   int32
		_cmp   int32
		_pColl uintptr // *TCollSeq = SCollSeq
	)
	_pArg = *(*uintptr)(unsafe.Pointer(_argv))

	_pBest = Xsqlite3_aggregate_context(tls, _context, int32(56))
	if _pBest != 0 {
		goto _1
	}

	return

_1:
	if Xsqlite3_value_type(tls, *(*uintptr)(unsafe.Pointer(_argv))) != int32(5) {
		goto _2
	}

	if (*(*uint16)(unsafe.Pointer(_pBest + 8))) == 0 {
		goto _4
	}

	_805sqlite3SkipAccumulatorLoad(tls, _context)
_4:
	goto _3

_2:
	if (*(*uint16)(unsafe.Pointer(_pBest + 8))) == 0 {
		goto _5
	}

	_pColl = _804sqlite3GetFuncCollSeq(tls, _context)
	_max = bool2int(Xsqlite3_user_data(tls, _context) != 0)
	_cmp = _661sqlite3MemCompare(tls, _pBest, _pArg, _pColl)
	if (_max == 0 || _cmp >= int32(0)) && (_max != 0 || _cmp <= int32(0)) {
		goto _7
	}

	_298sqlite3VdbeMemCopy(tls, _pBest, _pArg)
	goto _8

_7:
	_805sqlite3SkipAccumulatorLoad(tls, _context)
_8:
	goto _6

_5:
	*(*uintptr)(unsafe.Pointer(_pBest + 40)) = Xsqlite3_context_db_handle(tls, _context)
	_298sqlite3VdbeMemCopy(tls, _pBest, _pArg)
_6:
_3:
}

// _467minMaxFinalize is defined at sqlite3.c:108142:13
func _467minMaxFinalize(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */) {
	var _pRes uintptr // *Tsqlite3_value = Ssqlite3_value

	_pRes = Xsqlite3_aggregate_context(tls, _context, int32(0))
	if _pRes == 0 {
		goto _1
	}

	if (*(*uint16)(unsafe.Pointer(_pRes + 8))) == 0 {
		goto _2
	}

	Xsqlite3_result_value(tls, _context, _pRes)
_2:
	_397sqlite3VdbeMemRelease(tls, _pRes)
_1:
}

// _468typeofFunc is defined at sqlite3.c:106615:13
func _468typeofFunc(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _NotUsed int32, _argv uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	var _i int32

	_i = Xsqlite3_value_type(tls, *(*uintptr)(unsafe.Pointer(_argv))) - int32(1)

	Xsqlite3_result_text(tls, _context, *(*uintptr)(unsafe.Pointer(_806azType + 8*uintptr(_i))), int32(-1), null)
}

// _469lengthFunc is defined at sqlite3.c:106640:13
func _469lengthFunc(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _argc int32, _argv uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	var (
		_len int32
		_z   uintptr // *uint8
	)

	switch Xsqlite3_value_type(tls, *(*uintptr)(unsafe.Pointer(_argv))) {
	case int32(4):
		goto _2
	case int32(1):
		goto _3
	case int32(2):
		goto _4
	case int32(3):
		goto _5
	default:
		goto _6
	}
_2:
_3:
_4:
	Xsqlite3_result_int(tls, _context, Xsqlite3_value_bytes(tls, *(*uintptr)(unsafe.Pointer(_argv))))
	goto _1

_5:
	_z = Xsqlite3_value_text(tls, *(*uintptr)(unsafe.Pointer(_argv)))
	if _z != 0 {
		goto _7
	}

	return

_7:
	_len = int32(0)
_8:
	if (*(*uint8)(unsafe.Pointer(_z))) == 0 {
		goto _9
	}

	_len++
	if int32(*(*uint8)(unsafe.Pointer(postinc19(&_z)))) < int32(0xc0) {
		goto _10
	}

_11:
	if (int32(*(*uint8)(unsafe.Pointer(_z))) & int32(0xc0)) != int32(0x80) {
		goto _12
	}

	_z++
	goto _11

_12:
_10:
	goto _8

_9:
	Xsqlite3_result_int(tls, _context, _len)
	goto _1

_6:
	Xsqlite3_result_null(tls, _context)
	goto _1

_1:
}

// _470instrFunc is defined at sqlite3.c:106729:13
func _470instrFunc(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _argc int32, _argv uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	var (
		_zHaystack    uintptr // *uint8
		_zNeedle      uintptr // *uint8
		_nHaystack    int32
		_nNeedle      int32
		_typeHaystack int32
		_typeNeedle   int32
		_N            int32
		_isText       int32
	)
	_N = int32(1)

	_typeHaystack = Xsqlite3_value_type(tls, *(*uintptr)(unsafe.Pointer(_argv)))
	_typeNeedle = Xsqlite3_value_type(tls, *(*uintptr)(unsafe.Pointer(_argv + 8)))
	if _typeHaystack != int32(5) && _typeNeedle != int32(5) {
		goto _1
	}

	return

_1:
	_nHaystack = Xsqlite3_value_bytes(tls, *(*uintptr)(unsafe.Pointer(_argv)))
	_nNeedle = Xsqlite3_value_bytes(tls, *(*uintptr)(unsafe.Pointer(_argv + 8)))
	if _nNeedle <= int32(0) {
		goto _2
	}

	if _typeHaystack != int32(4) || _typeNeedle != int32(4) {
		goto _3
	}

	_zHaystack = Xsqlite3_value_blob(tls, *(*uintptr)(unsafe.Pointer(_argv)))
	_zNeedle = Xsqlite3_value_blob(tls, *(*uintptr)(unsafe.Pointer(_argv + 8)))
	_isText = int32(0)
	goto _4

_3:
	_zHaystack = Xsqlite3_value_text(tls, *(*uintptr)(unsafe.Pointer(_argv)))
	_zNeedle = Xsqlite3_value_text(tls, *(*uintptr)(unsafe.Pointer(_argv + 8)))
	_isText = int32(1)
_4:
	if _zNeedle != 0 && (_nHaystack == 0 || _zHaystack != 0) {
		goto _5
	}

	return

_5:
_6:
	if _nNeedle > _nHaystack || crt.Xmemcmp(tls, _zHaystack, _zNeedle, uint64(_nNeedle)) == int32(0) {
		goto _7
	}

	_N++
_8:
	_nHaystack--
	_zHaystack++
	if (_isText != 0) && ((int32(*(*uint8)(unsafe.Pointer(_zHaystack))) & int32(0xc0)) == int32(0x80)) {
		goto _8
	}

	goto _6

_7:
	if _nNeedle <= _nHaystack {
		goto _11
	}

	_N = int32(0)
_11:
_2:
	Xsqlite3_result_int(tls, _context, _N)
}

// _471printfFunc is defined at sqlite3.c:106774:13
func _471printfFunc(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _argc int32, _argv uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	esc := crt.MustMalloc(48)
	var (
		_x       = esc      // *TPrintfArguments = SPrintfArguments
		_str     = esc + 16 // *TStrAccum = SStrAccum
		_zFormat uintptr    // *int8
		_n       int32
		_db      uintptr // *Tsqlite3 = Ssqlite3
	)
	defer crt.Free(esc)
	_db = Xsqlite3_context_db_handle(tls, _context)
	if _argc < int32(1) || set4(&_zFormat, Xsqlite3_value_text(tls, *(*uintptr)(unsafe.Pointer(_argv)))) == 0 {
		goto _1
	}

	*(*int32)(unsafe.Pointer(_x)) = _argc - int32(1)
	*(*int32)(unsafe.Pointer(_x + 4)) = int32(0)
	*(*uintptr)(unsafe.Pointer(_x + 8)) = _argv + 8*uintptr(1)
	_130sqlite3StrAccumInit(tls, _str, _db, null, int32(0), *(*int32)(unsafe.Pointer(_db + 124)))
	*(*uint8)(unsafe.Pointer(_str + 29)) = uint8(0x2)
	_807sqlite3XPrintf(tls, _str, _zFormat, _x)
	_n = int32(*(*uint32)(unsafe.Pointer(_str + 24)))
	Xsqlite3_result_text(tls, _context, _299sqlite3StrAccumFinish(tls, _str), _n, fp10(_109sqlite3MallocSize))
_1:
}

// _472unicodeFunc is defined at sqlite3.c:107613:13
func _472unicodeFunc(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _argc int32, _argv uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	esc := crt.MustMalloc(8)
	var _z = esc // **uint8
	defer crt.Free(esc)
	*(*uintptr)(unsafe.Pointer(_z)) = Xsqlite3_value_text(tls, *(*uintptr)(unsafe.Pointer(_argv)))

	if (*(*uintptr)(unsafe.Pointer(_z))) == 0 || (*(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_z))))) == 0 {
		goto _1
	}

	Xsqlite3_result_int(tls, _context, int32(_393sqlite3Utf8Read(tls, _z)))
_1:
}

// _473charFunc is defined at sqlite3.c:107628:13
func _473charFunc(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _argc int32, _argv uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	var (
		_z    uintptr // *uint8
		_zOut uintptr // *uint8
		_i    int32
		_x    int64
		_c    uint32
	)
	_zOut = set4(&_z, Xsqlite3_malloc64(tls, uint64((_argc*int32(4))+int32(1))))
	if _z != 0 {
		goto _1
	}

	Xsqlite3_result_error_nomem(tls, _context)
	return

_1:
	_i = int32(0)
_2:
	if _i >= _argc {
		goto _4
	}

	_x = int64(Xsqlite3_value_int64(tls, *(*uintptr)(unsafe.Pointer(_argv + 8*uintptr(_i)))))
	if _x >= int64(0) && _x <= int64(0x10ffff) {
		goto _5
	}

	_x = int64(0xfffd)
_5:
	_c = uint32(_x & int64(0x1fffff))
	if _c >= uint32(0x80) {
		goto _6
	}

	*(*uint8)(unsafe.Pointer(postinc19(&_zOut))) = uint8(_c & uint32(0xff))
	goto _7

_6:
	if _c >= uint32(0x800) {
		goto _8
	}

	*(*uint8)(unsafe.Pointer(postinc19(&_zOut))) = uint8(int32(0xc0) + int32(uint8((_c>>(uint(6)%32))&uint32(0x1f))))
	*(*uint8)(unsafe.Pointer(postinc19(&_zOut))) = uint8(int32(0x80) + int32(uint8(_c&uint32(0x3f))))
	goto _9

_8:
	if _c >= uint32(0x10000) {
		goto _10
	}

	*(*uint8)(unsafe.Pointer(postinc19(&_zOut))) = uint8(int32(0xe0) + int32(uint8((_c>>(uint(12)%32))&uint32(0xf))))
	*(*uint8)(unsafe.Pointer(postinc19(&_zOut))) = uint8(int32(0x80) + int32(uint8((_c>>(uint(6)%32))&uint32(0x3f))))
	*(*uint8)(unsafe.Pointer(postinc19(&_zOut))) = uint8(int32(0x80) + int32(uint8(_c&uint32(0x3f))))
	goto _11

_10:
	*(*uint8)(unsafe.Pointer(postinc19(&_zOut))) = uint8(int32(0xf0) + int32(uint8((_c>>(uint(18)%32))&uint32(0x7))))
	*(*uint8)(unsafe.Pointer(postinc19(&_zOut))) = uint8(int32(0x80) + int32(uint8((_c>>(uint(12)%32))&uint32(0x3f))))
	*(*uint8)(unsafe.Pointer(postinc19(&_zOut))) = uint8(int32(0x80) + int32(uint8((_c>>(uint(6)%32))&uint32(0x3f))))
	*(*uint8)(unsafe.Pointer(postinc19(&_zOut))) = uint8(int32(0x80) + int32(uint8(_c&uint32(0x3f))))
_11:
_9:
_7:
	_i++
	goto _2

_4:
	Xsqlite3_result_text64(tls, _context, _z, uint64(int64(_zOut-_z)), fp18(Xsqlite3_free), uint8(1))
}

// _474absFunc is defined at sqlite3.c:106680:13
func _474absFunc(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _argc int32, _argv uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	var (
		_iVal int64
		_rVal float64
	)

	switch Xsqlite3_value_type(tls, *(*uintptr)(unsafe.Pointer(_argv))) {
	case int32(1):
		goto _2
	case int32(5):
		goto _3
	default:
		goto _4
	}
_2:
	_iVal = int64(Xsqlite3_value_int64(tls, *(*uintptr)(unsafe.Pointer(_argv))))
	if _iVal >= int64(0) {
		goto _5
	}

	if _iVal != int64(-9223372036854775808) {
		goto _6
	}

	Xsqlite3_result_error(tls, _context, ts+19318 /* "integer overflow" */, int32(-1))
	return

_6:
	_iVal = -_iVal
_5:
	Xsqlite3_result_int64(tls, _context, _iVal)
	goto _1

_3:
	Xsqlite3_result_null(tls, _context)
	goto _1

_4:
	_rVal = Xsqlite3_value_double(tls, *(*uintptr)(unsafe.Pointer(_argv)))
	if _rVal >= float64(0) {
		goto _7
	}

	_rVal = -_rVal
_7:
	Xsqlite3_result_double(tls, _context, _rVal)
	goto _1

_1:
}

// _475roundFunc is defined at sqlite3.c:106905:13
func _475roundFunc(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _argc int32, _argv uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	esc := crt.MustMalloc(8)
	var (
		_n    int32
		_r    = esc   // *float64
		_zBuf uintptr // *int8
	)
	defer crt.Free(esc)
	_n = int32(0)

	if _argc != int32(2) {
		goto _1
	}

	if int32(5) != Xsqlite3_value_type(tls, *(*uintptr)(unsafe.Pointer(_argv + 8))) {
		goto _2
	}

	return

_2:
	_n = Xsqlite3_value_int(tls, *(*uintptr)(unsafe.Pointer(_argv + 8)))
	if _n <= int32(30) {
		goto _3
	}

	_n = int32(30)
_3:
	if _n >= int32(0) {
		goto _4
	}

	_n = int32(0)
_4:
_1:
	if Xsqlite3_value_type(tls, *(*uintptr)(unsafe.Pointer(_argv))) != int32(5) {
		goto _5
	}

	return

_5:
	*(*float64)(unsafe.Pointer(_r)) = Xsqlite3_value_double(tls, *(*uintptr)(unsafe.Pointer(_argv)))
	if _n != int32(0) || (*(*float64)(unsafe.Pointer(_r))) < float64(0) || (*(*float64)(unsafe.Pointer(_r))) >= float64(9223372036854775806) {
		goto _6
	}

	*(*float64)(unsafe.Pointer(_r)) = float64(int64((*(*float64)(unsafe.Pointer(_r))) + float64(0.5)))
	goto _7

_6:
	if _n != int32(0) || (*(*float64)(unsafe.Pointer(_r))) >= float64(0) || (-(*(*float64)(unsafe.Pointer(_r)))) >= float64(9223372036854775806) {
		goto _8
	}

	*(*float64)(unsafe.Pointer(_r)) = -float64(int64((-(*(*float64)(unsafe.Pointer(_r)))) + float64(0.5)))
	goto _9

_8:
	_zBuf = Xsqlite3_mprintf(tls, ts+19335 /* "%.*f" */, _n, *(*float64)(unsafe.Pointer(_r)))
	if _zBuf != 0 {
		goto _10
	}

	Xsqlite3_result_error_nomem(tls, _context)
	return

_10:
	_808sqlite3AtoF(tls, _zBuf, _r, _211sqlite3Strlen30(tls, _zBuf), uint8(1))
	Xsqlite3_free(tls, _zBuf)
_9:
_7:
	Xsqlite3_result_double(tls, _context, *(*float64)(unsafe.Pointer(_r)))
}

// _476upperFunc is defined at sqlite3.c:106967:13
func _476upperFunc(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _argc int32, _argv uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	var (
		_z1 uintptr // *int8
		_z2 uintptr // *int8
		_i  int32
		_n  int32
	)

	_z2 = Xsqlite3_value_text(tls, *(*uintptr)(unsafe.Pointer(_argv)))
	_n = Xsqlite3_value_bytes(tls, *(*uintptr)(unsafe.Pointer(_argv)))

	if _z2 == 0 {
		goto _1
	}

	_z1 = _803contextMalloc(tls, _context, int64(_n)+int64(1))
	if _z1 == 0 {
		goto _2
	}

	_i = int32(0)
_3:
	if _i >= _n {
		goto _5
	}

	*(*int8)(unsafe.Pointer(_z1 + uintptr(_i))) = int8(int32(*(*int8)(unsafe.Pointer(_z2 + uintptr(_i)))) & (^(int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(uint8(*(*int8)(unsafe.Pointer(_z2 + uintptr(_i)))))))) & int32(0x20))))
	_i++
	goto _3

_5:
	Xsqlite3_result_text(tls, _context, _z1, _n, fp18(Xsqlite3_free))
_2:
_1:
}

// _477lowerFunc is defined at sqlite3.c:106986:13
func _477lowerFunc(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _argc int32, _argv uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	var (
		_z1 uintptr // *int8
		_z2 uintptr // *int8
		_i  int32
		_n  int32
	)

	_z2 = Xsqlite3_value_text(tls, *(*uintptr)(unsafe.Pointer(_argv)))
	_n = Xsqlite3_value_bytes(tls, *(*uintptr)(unsafe.Pointer(_argv)))

	if _z2 == 0 {
		goto _1
	}

	_z1 = _803contextMalloc(tls, _context, int64(_n)+int64(1))
	if _z1 == 0 {
		goto _2
	}

	_i = int32(0)
_3:
	if _i >= _n {
		goto _5
	}

	*(*int8)(unsafe.Pointer(_z1 + uintptr(_i))) = int8(*(*uint8)(unsafe.Pointer(_215sqlite3UpperToLower + uintptr(uint8(*(*int8)(unsafe.Pointer(_z2 + uintptr(_i))))))))
	_i++
	goto _3

_5:
	Xsqlite3_result_text(tls, _context, _z1, _n, fp18(Xsqlite3_free))
_2:
_1:
}

// _478hexFunc is defined at sqlite3.c:107669:13
func _478hexFunc(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _argc int32, _argv uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	var (
		_i     int32
		_n     int32
		_pBlob uintptr // *uint8
		_zHex  uintptr // *int8
		_z     uintptr // *int8
		_c     uint8
	)

	_pBlob = Xsqlite3_value_blob(tls, *(*uintptr)(unsafe.Pointer(_argv)))
	_n = Xsqlite3_value_bytes(tls, *(*uintptr)(unsafe.Pointer(_argv)))

	_z = set4(&_zHex, _803contextMalloc(tls, _context, (int64(_n)*int64(2))+int64(1)))
	if _zHex == 0 {
		goto _1
	}

	_i = int32(0)
_2:
	if _i >= _n {
		goto _4
	}

	_c = *(*uint8)(unsafe.Pointer(_pBlob))
	*(*int8)(unsafe.Pointer(postinc19(&_z))) = *(*int8)(unsafe.Pointer(_809hexdigits + uintptr((int32(_c)>>(uint(4)%32))&int32(0xf))))
	*(*int8)(unsafe.Pointer(postinc19(&_z))) = *(*int8)(unsafe.Pointer(_809hexdigits + uintptr(int32(_c)&int32(0xf))))
	_i++
	_pBlob++
	goto _2

_4:
	*(*int8)(unsafe.Pointer(_z)) = int8(0)
	Xsqlite3_result_text(tls, _context, _zHex, _n*int32(2), fp18(Xsqlite3_free))
_1:
}

// _479randomFunc is defined at sqlite3.c:107019:13
func _479randomFunc(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _NotUsed int32, _NotUsed2 uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	esc := crt.MustMalloc(8)
	var _r = esc // *Tsqlite_int64 = int64
	defer crt.Free(esc)

	Xsqlite3_randomness(tls, int32(8), _r)
	if (*(*int64)(unsafe.Pointer(_r))) >= int64(0) {
		goto _1
	}

	*(*int64)(unsafe.Pointer(_r)) = -((*(*int64)(unsafe.Pointer(_r))) & int64(9223372036854775807))
_1:
	Xsqlite3_result_int64(tls, _context, *(*int64)(unsafe.Pointer(_r)))
}

// _480randomBlob is defined at sqlite3.c:107045:13
func _480randomBlob(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _argc int32, _argv uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	var (
		_n int32
		_p uintptr // *uint8
	)

	_n = Xsqlite3_value_int(tls, *(*uintptr)(unsafe.Pointer(_argv)))
	if _n >= int32(1) {
		goto _1
	}

	_n = int32(1)
_1:
	_p = _803contextMalloc(tls, _context, int64(_n))
	if _p == 0 {
		goto _2
	}

	Xsqlite3_randomness(tls, _n, _p)
	Xsqlite3_result_blob(tls, _context, _p, _n, fp18(Xsqlite3_free))
_2:
}

// _481nullifFunc is defined at sqlite3.c:107419:13
func _481nullifFunc(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _NotUsed int32, _argv uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	var _pColl uintptr // *TCollSeq = SCollSeq

	_pColl = _804sqlite3GetFuncCollSeq(tls, _context)

	if _661sqlite3MemCompare(tls, *(*uintptr)(unsafe.Pointer(_argv)), *(*uintptr)(unsafe.Pointer(_argv + 8)), _pColl) == int32(0) {
		goto _1
	}

	Xsqlite3_result_value(tls, _context, *(*uintptr)(unsafe.Pointer(_argv)))
_1:
}

// _482sourceidFunc is defined at sqlite3.c:107451:13
func _482sourceidFunc(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _NotUsed int32, _NotUsed2 uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	Xsqlite3_result_text(tls, _context, Xsqlite3_sourceid(tls), int32(-1), null)
}

// _483errlogFunc is defined at sqlite3.c:107467:13
func _483errlogFunc(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _argc int32, _argv uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	Xsqlite3_log(tls, Xsqlite3_value_int(tls, *(*uintptr)(unsafe.Pointer(_argv))), ts+429 /* "%s" */, Xsqlite3_value_text(tls, *(*uintptr)(unsafe.Pointer(_argv + 8))))
}

// _484quoteFunc is defined at sqlite3.c:107537:13
func _484quoteFunc(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _argc int32, _argv uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	esc := crt.MustMalloc(66)
	var (
		_r1    float64
		_r2    = esc      // *float64
		_zBuf  = esc + 16 // *[50]int8
		_zText uintptr    // *int8
		_zBlob uintptr    // *int8
		_nBlob int32
		_i     int32
		_1i    int32
		_j     int32
		_n     uint64
		_zArg  uintptr // *uint8
		_z     uintptr // *int8
	)
	defer crt.Free(esc)

	switch Xsqlite3_value_type(tls, *(*uintptr)(unsafe.Pointer(_argv))) {
	case int32(2):
		goto _2
	case int32(1):
		goto _3
	case int32(4):
		goto _4
	case int32(3):
		goto _5
	default:
		goto _6
	}
_2:
	_r1 = Xsqlite3_value_double(tls, *(*uintptr)(unsafe.Pointer(_argv)))
	Xsqlite3_snprintf(tls, int32(50), _zBuf, ts+19340 /* "%!.15g" */, _r1)
	_808sqlite3AtoF(tls, _zBuf, _r2, int32(20), uint8(1))
	if _r1 == (*(*float64)(unsafe.Pointer(_r2))) {
		goto _7
	}

	Xsqlite3_snprintf(tls, int32(50), _zBuf, ts+19347 /* "%!.20e" */, _r1)
_7:
	Xsqlite3_result_text(tls, _context, _zBuf, int32(-1), uintptr(18446744073709551615))
	goto _1

_3:
	Xsqlite3_result_value(tls, _context, *(*uintptr)(unsafe.Pointer(_argv)))
	goto _1

_4:
	_zText = 0
	_zBlob = Xsqlite3_value_blob(tls, *(*uintptr)(unsafe.Pointer(_argv)))
	_nBlob = Xsqlite3_value_bytes(tls, *(*uintptr)(unsafe.Pointer(_argv)))

	_zText = _803contextMalloc(tls, _context, (int64(2)*int64(_nBlob))+int64(4))
	if _zText == 0 {
		goto _8
	}

	_i = int32(0)
_9:
	if _i >= _nBlob {
		goto _11
	}

	*(*int8)(unsafe.Pointer(_zText + uintptr((_i*int32(2))+int32(2)))) = *(*int8)(unsafe.Pointer(_809hexdigits + uintptr((int32(*(*int8)(unsafe.Pointer(_zBlob + uintptr(_i))))>>(uint(4)%32))&int32(0xf))))
	*(*int8)(unsafe.Pointer(_zText + uintptr((_i*int32(2))+int32(3)))) = *(*int8)(unsafe.Pointer(_809hexdigits + uintptr(int32(*(*int8)(unsafe.Pointer(_zBlob + uintptr(_i))))&int32(0xf))))
	_i++
	goto _9

_11:
	*(*int8)(unsafe.Pointer(_zText + uintptr((_nBlob*int32(2))+int32(2)))) = int8('\'')
	*(*int8)(unsafe.Pointer(_zText + uintptr((_nBlob*int32(2))+int32(3)))) = int8('\x00')
	*(*int8)(unsafe.Pointer(_zText)) = int8('X')
	*(*int8)(unsafe.Pointer(_zText + 1)) = int8('\'')
	Xsqlite3_result_text(tls, _context, _zText, int32(-1), uintptr(18446744073709551615))
	Xsqlite3_free(tls, _zText)
_8:
	goto _1

_5:
	_zArg = Xsqlite3_value_text(tls, *(*uintptr)(unsafe.Pointer(_argv)))
	if _zArg != 0 {
		goto _12
	}

	return

_12:
	_1i = int32(0)
	_n = uint64(0)
_13:
	if (*(*uint8)(unsafe.Pointer(_zArg + uintptr(_1i)))) == 0 {
		goto _15
	}

	if int32(*(*uint8)(unsafe.Pointer(_zArg + uintptr(_1i)))) != int32('\'') {
		goto _16
	}

	_n++
_16:
	_1i++
	goto _13

_15:
	_z = _803contextMalloc(tls, _context, (int64(_1i)+int64(_n))+int64(3))
	if _z == 0 {
		goto _17
	}

	*(*int8)(unsafe.Pointer(_z)) = int8('\'')
	_1i = int32(0)
	_j = int32(1)
_18:
	if (*(*uint8)(unsafe.Pointer(_zArg + uintptr(_1i)))) == 0 {
		goto _20
	}

	*(*int8)(unsafe.Pointer(_z + uintptr(postinc7(&_j)))) = int8(*(*uint8)(unsafe.Pointer(_zArg + uintptr(_1i))))
	if int32(*(*uint8)(unsafe.Pointer(_zArg + uintptr(_1i)))) != int32('\'') {
		goto _21
	}

	*(*int8)(unsafe.Pointer(_z + uintptr(postinc7(&_j)))) = int8('\'')
_21:
	_1i++
	goto _18

_20:
	*(*int8)(unsafe.Pointer(_z + uintptr(postinc7(&_j)))) = int8('\'')
	*(*int8)(unsafe.Pointer(_z + uintptr(_j))) = int8(0)
	Xsqlite3_result_text(tls, _context, _z, _j, fp18(Xsqlite3_free))
_17:
	goto _1

_6:
	Xsqlite3_result_text(tls, _context, ts+8837 /* "NULL" */, int32(4), null)
	goto _1

_1:
}

// _485last_insert_rowid is defined at sqlite3.c:107069:13
func _485last_insert_rowid(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _NotUsed int32, _NotUsed2 uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	var _db uintptr // *Tsqlite3 = Ssqlite3

	_db = Xsqlite3_context_db_handle(tls, _context)

	Xsqlite3_result_int64(tls, _context, Xsqlite3_last_insert_rowid(tls, _db))
}

// _486changes is defined at sqlite3.c:107089:13
func _486changes(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _NotUsed int32, _NotUsed2 uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	var _db uintptr // *Tsqlite3 = Ssqlite3

	_db = Xsqlite3_context_db_handle(tls, _context)

	Xsqlite3_result_int(tls, _context, Xsqlite3_changes(tls, _db))
}

// _487total_changes is defined at sqlite3.c:107103:13
func _487total_changes(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _NotUsed int32, _NotUsed2 uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	var _db uintptr // *Tsqlite3 = Ssqlite3

	_db = Xsqlite3_context_db_handle(tls, _context)

	Xsqlite3_result_int(tls, _context, Xsqlite3_total_changes(tls, _db))
}

// _488replaceFunc is defined at sqlite3.c:107720:13
func _488replaceFunc(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _argc int32, _argv uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	var (
		_zStr      uintptr // *uint8
		_zPattern  uintptr // *uint8
		_zRep      uintptr // *uint8
		_zOut      uintptr // *uint8
		_nStr      int32
		_nPattern  int32
		_nRep      int32
		_nOut      int64
		_loopLimit int32
		_i         int32
		_j         int32
		_zOld      uintptr // *Tu8 = uint8
		_db        uintptr // *Tsqlite3 = Ssqlite3
	)

	_zStr = Xsqlite3_value_text(tls, *(*uintptr)(unsafe.Pointer(_argv)))
	if _zStr != 0 {
		goto _1
	}

	return

_1:
	_nStr = Xsqlite3_value_bytes(tls, *(*uintptr)(unsafe.Pointer(_argv)))

	_zPattern = Xsqlite3_value_text(tls, *(*uintptr)(unsafe.Pointer(_argv + 8)))
	if _zPattern != 0 {
		goto _2
	}

	return

_2:
	if int32(*(*uint8)(unsafe.Pointer(_zPattern))) != int32(0) {
		goto _3
	}

	Xsqlite3_result_value(tls, _context, *(*uintptr)(unsafe.Pointer(_argv)))
	return

_3:
	_nPattern = Xsqlite3_value_bytes(tls, *(*uintptr)(unsafe.Pointer(_argv + 8)))

	_zRep = Xsqlite3_value_text(tls, *(*uintptr)(unsafe.Pointer(_argv + 16)))
	if _zRep != 0 {
		goto _4
	}

	return

_4:
	_nRep = Xsqlite3_value_bytes(tls, *(*uintptr)(unsafe.Pointer(_argv + 16)))

	_nOut = int64(_nStr + int32(1))

	_zOut = _803contextMalloc(tls, _context, _nOut)
	if _zOut != 0 {
		goto _5
	}

	return

_5:
	_loopLimit = _nStr - _nPattern
	_i = set5(&_j, int32(0))
_6:
	if _i > _loopLimit {
		goto _8
	}

	if int32(*(*uint8)(unsafe.Pointer(_zStr + uintptr(_i)))) == int32(*(*uint8)(unsafe.Pointer(_zPattern))) && crt.Xmemcmp(tls, _zStr+uintptr(_i), _zPattern, uint64(_nPattern)) == 0 {
		goto _9
	}

	*(*uint8)(unsafe.Pointer(_zOut + uintptr(postinc7(&_j)))) = *(*uint8)(unsafe.Pointer(_zStr + uintptr(_i)))
	goto _10

_9:
	_db = Xsqlite3_context_db_handle(tls, _context)
	_nOut = int64(_nOut + int64(_nRep-_nPattern))
	if (_nOut - int64(1)) <= int64(*(*int32)(unsafe.Pointer(_db + 124))) {
		goto _11
	}

	Xsqlite3_result_error_toobig(tls, _context)
	Xsqlite3_free(tls, _zOut)
	return

_11:
	_zOld = _zOut
	_zOut = Xsqlite3_realloc64(tls, _zOut, uint64(int32(_nOut)))
	if _zOut != 0 {
		goto _12
	}

	Xsqlite3_result_error_nomem(tls, _context)
	Xsqlite3_free(tls, _zOld)
	return

_12:
	crt.Xmemcpy(tls, _zOut+uintptr(_j), _zRep, uint64(_nRep))
	_j = int32(_j + _nRep)
	_i = int32(_i + (_nPattern - int32(1)))
_10:
	_i++
	goto _6

_8:
	crt.Xmemcpy(tls, _zOut+uintptr(_j), _zStr+uintptr(_i), uint64(_nStr-_i))
	_j = int32(_j + (_nStr - _i))

	*(*uint8)(unsafe.Pointer(_zOut + uintptr(_j))) = uint8(0)
	Xsqlite3_result_text(tls, _context, _zOut, _j, fp18(Xsqlite3_free))
}

// _489zeroblobFunc is defined at sqlite3.c:107697:13
func _489zeroblobFunc(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _argc int32, _argv uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	var (
		_n  int64
		_rc int32
	)

	_n = int64(Xsqlite3_value_int64(tls, *(*uintptr)(unsafe.Pointer(_argv))))
	if _n >= int64(0) {
		goto _1
	}

	_n = int64(0)
_1:
	_rc = Xsqlite3_result_zeroblob64(tls, _context, uint64(_n))
	if _rc == 0 {
		goto _2
	}

	Xsqlite3_result_error_code(tls, _context, _rc)
_2:
}

// _490substrFunc is defined at sqlite3.c:106810:13
func _490substrFunc(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _argc int32, _argv uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	var (
		_z      uintptr // *uint8
		_z2     uintptr // *uint8
		_len    int32
		_p0type int32
		_p1     int64
		_p2     int64
		_negP2  int32
	)
	_negP2 = int32(0)

	if Xsqlite3_value_type(tls, *(*uintptr)(unsafe.Pointer(_argv + 8))) != int32(5) && (_argc != int32(3) || Xsqlite3_value_type(tls, *(*uintptr)(unsafe.Pointer(_argv + 16))) != int32(5)) {
		goto _1
	}

	return

_1:
	_p0type = Xsqlite3_value_type(tls, *(*uintptr)(unsafe.Pointer(_argv)))
	_p1 = int64(Xsqlite3_value_int(tls, *(*uintptr)(unsafe.Pointer(_argv + 8))))
	if _p0type != int32(4) {
		goto _2
	}

	_len = Xsqlite3_value_bytes(tls, *(*uintptr)(unsafe.Pointer(_argv)))
	_z = Xsqlite3_value_blob(tls, *(*uintptr)(unsafe.Pointer(_argv)))
	if _z != 0 {
		goto _4
	}

	return

_4:
	goto _3

_2:
	_z = Xsqlite3_value_text(tls, *(*uintptr)(unsafe.Pointer(_argv)))
	if _z != 0 {
		goto _5
	}

	return

_5:
	_len = int32(0)
	if _p1 >= int64(0) {
		goto _6
	}

	_z2 = _z
_7:
	if (*(*uint8)(unsafe.Pointer(_z2))) == 0 {
		goto _9
	}

	if int32(*(*uint8)(unsafe.Pointer(postinc19(&_z2)))) < int32(0xc0) {
		goto _10
	}

_11:
	if (int32(*(*uint8)(unsafe.Pointer(_z2))) & int32(0xc0)) != int32(0x80) {
		goto _12
	}

	_z2++
	goto _11

_12:
_10:
	_len++
	goto _7

_9:
_6:
_3:
	if _argc != int32(3) {
		goto _13
	}

	_p2 = int64(Xsqlite3_value_int(tls, *(*uintptr)(unsafe.Pointer(_argv + 16))))
	if _p2 >= int64(0) {
		goto _15
	}

	_p2 = -_p2
	_negP2 = int32(1)
_15:
	goto _14

_13:
	_p2 = int64(*(*int32)(unsafe.Pointer(Xsqlite3_context_db_handle(tls, _context) + 124)))
_14:
	if _p1 >= int64(0) {
		goto _16
	}

	_p1 = int64(_p1 + int64(_len))
	if _p1 >= int64(0) {
		goto _18
	}

	_p2 = int64(_p2 + _p1)
	if _p2 >= int64(0) {
		goto _19
	}

	_p2 = int64(0)
_19:
	_p1 = int64(0)
_18:
	goto _17

_16:
	if _p1 <= int64(0) {
		goto _20
	}

	_p1--
	goto _21

_20:
	if _p2 <= int64(0) {
		goto _22
	}

	_p2--
_22:
_21:
_17:
	if _negP2 == 0 {
		goto _23
	}

	_p1 = int64(_p1 - _p2)
	if _p1 >= int64(0) {
		goto _24
	}

	_p2 = int64(_p2 + _p1)
	_p1 = int64(0)
_24:
_23:
	if _p0type == int32(4) {
		goto _25
	}

_27:
	if (*(*uint8)(unsafe.Pointer(_z))) == 0 || _p1 == 0 {
		goto _28
	}

	if int32(*(*uint8)(unsafe.Pointer(postinc19(&_z)))) < int32(0xc0) {
		goto _29
	}

_30:
	if (int32(*(*uint8)(unsafe.Pointer(_z))) & int32(0xc0)) != int32(0x80) {
		goto _31
	}

	_z++
	goto _30

_31:
_29:
	_p1--
	goto _27

_28:
	_z2 = _z
_32:
	if (*(*uint8)(unsafe.Pointer(_z2))) == 0 || _p2 == 0 {
		goto _34
	}

	if int32(*(*uint8)(unsafe.Pointer(postinc19(&_z2)))) < int32(0xc0) {
		goto _35
	}

_36:
	if (int32(*(*uint8)(unsafe.Pointer(_z2))) & int32(0xc0)) != int32(0x80) {
		goto _37
	}

	_z2++
	goto _36

_37:
_35:
	_p2--
	goto _32

_34:
	Xsqlite3_result_text64(tls, _context, _z, uint64(int64(_z2-_z)), uintptr(18446744073709551615), uint8(1))
	goto _26

_25:
	if (_p1 + _p2) <= int64(_len) {
		goto _38
	}

	_p2 = int64(_len) - _p1
	if _p2 >= int64(0) {
		goto _39
	}

	_p2 = int64(0)
_39:
_38:
	Xsqlite3_result_blob64(tls, _context, _z+uintptr(_p1), uint64(_p2), uintptr(18446744073709551615))
_26:
}

// _491sumStep is defined at sqlite3.c:108019:13
func _491sumStep(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _argc int32, _argv uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	var (
		_p    uintptr // *TSumCtx = SSumCtx
		_type int32
		_v    int64
	)

	_p = Xsqlite3_aggregate_context(tls, _context, int32(32))
	_type = Xsqlite3_value_numeric_type(tls, *(*uintptr)(unsafe.Pointer(_argv)))
	if _p == 0 || _type == int32(5) {
		goto _1
	}

	(*(*int64)(unsafe.Pointer(_p + 16)))++
	if _type != int32(1) {
		goto _2
	}

	_v = int64(Xsqlite3_value_int64(tls, *(*uintptr)(unsafe.Pointer(_argv))))
	{
		p := &(*(*float64)(unsafe.Pointer(_p)))
		*p = float64(float64(*p) + float64(_v))
	}
	if (int32(*(*uint8)(unsafe.Pointer(_p + 25)))|int32(*(*uint8)(unsafe.Pointer(_p + 24)))) != int32(0) || _652sqlite3AddInt64(tls, _p+8, _v) == 0 {
		goto _4
	}

	*(*uint8)(unsafe.Pointer(_p + 24)) = uint8(1)
_4:
	goto _3

_2:
	{
		p := &(*(*float64)(unsafe.Pointer(_p)))
		*p = float64(float64(*p) + Xsqlite3_value_double(tls, *(*uintptr)(unsafe.Pointer(_argv))))
	}
	*(*uint8)(unsafe.Pointer(_p + 25)) = uint8(1)
_3:
_1:
}

// _492sumFinalize is defined at sqlite3.c:108040:13
func _492sumFinalize(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */) {
	var _p uintptr // *TSumCtx = SSumCtx

	_p = Xsqlite3_aggregate_context(tls, _context, int32(0))
	if _p == 0 || (*(*int64)(unsafe.Pointer(_p + 16))) <= int64(0) {
		goto _1
	}

	if (*(*uint8)(unsafe.Pointer(_p + 24))) == 0 {
		goto _2
	}

	Xsqlite3_result_error(tls, _context, ts+19318 /* "integer overflow" */, int32(-1))
	goto _3

_2:
	if (*(*uint8)(unsafe.Pointer(_p + 25))) == 0 {
		goto _4
	}

	Xsqlite3_result_double(tls, _context, *(*float64)(unsafe.Pointer(_p)))
	goto _5

_4:
	Xsqlite3_result_int64(tls, _context, *(*int64)(unsafe.Pointer(_p + 8)))
_5:
_3:
_1:
}

// _493totalFinalize is defined at sqlite3.c:108060:13
func _493totalFinalize(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */) {
	var _p uintptr // *TSumCtx = SSumCtx

	_p = Xsqlite3_aggregate_context(tls, _context, int32(0))
	Xsqlite3_result_double(tls, _context, func() float64 {
		if _p != 0 {
			return *(*float64)(unsafe.Pointer(_p))
		}
		return float64(0)
	}())
}

// _494avgFinalize is defined at sqlite3.c:108053:13
func _494avgFinalize(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */) {
	var _p uintptr // *TSumCtx = SSumCtx

	_p = Xsqlite3_aggregate_context(tls, _context, int32(0))
	if _p == 0 || (*(*int64)(unsafe.Pointer(_p + 16))) <= int64(0) {
		goto _1
	}

	Xsqlite3_result_double(tls, _context, (*(*float64)(unsafe.Pointer(_p)))/float64(*(*int64)(unsafe.Pointer(_p + 16))))
_1:
}

// _495countStep is defined at sqlite3.c:108079:13
func _495countStep(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _argc int32, _argv uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	var _p uintptr // *TCountCtx = SCountCtx

	_p = Xsqlite3_aggregate_context(tls, _context, int32(8))
	if _argc != int32(0) && int32(5) == Xsqlite3_value_type(tls, *(*uintptr)(unsafe.Pointer(_argv))) || _p == 0 {
		goto _1
	}

	(*(*int64)(unsafe.Pointer(_p)))++
_1:
}

// _496countFinalize is defined at sqlite3.c:108095:13
func _496countFinalize(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */) {
	var _p uintptr // *TCountCtx = SCountCtx

	_p = Xsqlite3_aggregate_context(tls, _context, int32(0))
	Xsqlite3_result_int64(tls, _context, func() int64 {
		if _p != 0 {
			return *(*int64)(unsafe.Pointer(_p))
		}
		return int64(0)
	}())
}

// _497groupConcatStep is defined at sqlite3.c:108156:13
func _497groupConcatStep(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _argc int32, _argv uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	var (
		_zVal      uintptr // *int8
		_pAccum    uintptr // *TStrAccum = SStrAccum
		_zSep      uintptr // *int8
		_nVal      int32
		_nSep      int32
		_db        uintptr // *Tsqlite3 = Ssqlite3
		_firstTerm int32
	)

	if Xsqlite3_value_type(tls, *(*uintptr)(unsafe.Pointer(_argv))) != int32(5) {
		goto _1
	}

	return

_1:
	_pAccum = Xsqlite3_aggregate_context(tls, _context, int32(32))
	if _pAccum == 0 {
		goto _2
	}

	_db = Xsqlite3_context_db_handle(tls, _context)
	_firstTerm = bool2int((*(*uint32)(unsafe.Pointer(_pAccum + 20))) == uint32(0))
	*(*uint32)(unsafe.Pointer(_pAccum + 20)) = uint32(*(*int32)(unsafe.Pointer(_db + 124)))
	if _firstTerm != 0 {
		goto _3
	}

	if _argc != int32(2) {
		goto _4
	}

	_zSep = Xsqlite3_value_text(tls, *(*uintptr)(unsafe.Pointer(_argv + 8)))
	_nSep = Xsqlite3_value_bytes(tls, *(*uintptr)(unsafe.Pointer(_argv + 8)))
	goto _5

_4:
	_zSep = ts + 416 /* "," */
	_nSep = int32(1)
_5:
	if _zSep == 0 {
		goto _6
	}

	_301sqlite3StrAccumAppend(tls, _pAccum, _zSep, _nSep)
_6:
_3:
	_zVal = Xsqlite3_value_text(tls, *(*uintptr)(unsafe.Pointer(_argv)))
	_nVal = Xsqlite3_value_bytes(tls, *(*uintptr)(unsafe.Pointer(_argv)))
	if _zVal == 0 {
		goto _7
	}

	_301sqlite3StrAccumAppend(tls, _pAccum, _zVal, _nVal)
_7:
_2:
}

// _498groupConcatFinalize is defined at sqlite3.c:108188:13
func _498groupConcatFinalize(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */) {
	var _pAccum uintptr // *TStrAccum = SStrAccum

	_pAccum = Xsqlite3_aggregate_context(tls, _context, int32(0))
	if _pAccum == 0 {
		goto _1
	}

	if int32(*(*uint8)(unsafe.Pointer(_pAccum + 28))) != int32(2) {
		goto _2
	}

	Xsqlite3_result_error_toobig(tls, _context)
	goto _3

_2:
	if int32(*(*uint8)(unsafe.Pointer(_pAccum + 28))) != int32(1) {
		goto _4
	}

	Xsqlite3_result_error_nomem(tls, _context)
	goto _5

_4:
	Xsqlite3_result_text(tls, _context, _299sqlite3StrAccumFinish(tls, _pAccum), int32(-1), fp18(Xsqlite3_free))
_5:
_3:
_1:
}

// _499likeFunc is defined at sqlite3.c:107353:13
func _499likeFunc(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _argc int32, _argv uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	esc := crt.MustMalloc(8)
	var (
		_zA     uintptr // *uint8
		_zB     uintptr // *uint8
		_escape uint32
		_nPat   int32
		_db     uintptr // *Tsqlite3 = Ssqlite3
		_pInfo  uintptr // *ScompareInfo
		_zEsc   = esc   // **uint8
	)
	defer crt.Free(esc)
	_db = Xsqlite3_context_db_handle(tls, _context)
	_pInfo = Xsqlite3_user_data(tls, _context)
	_zB = Xsqlite3_value_text(tls, *(*uintptr)(unsafe.Pointer(_argv)))
	_zA = Xsqlite3_value_text(tls, *(*uintptr)(unsafe.Pointer(_argv + 8)))
	_nPat = Xsqlite3_value_bytes(tls, *(*uintptr)(unsafe.Pointer(_argv)))
	if _nPat <= (*(*int32)(unsafe.Pointer((_db + 124) + 32))) {
		goto _1
	}

	Xsqlite3_result_error(tls, _context, ts+19354 /* "LIKE or GLOB pattern too complex" */, int32(-1))
	return

_1:
	if _argc != int32(3) {
		goto _2
	}

	*(*uintptr)(unsafe.Pointer(_zEsc)) = Xsqlite3_value_text(tls, *(*uintptr)(unsafe.Pointer(_argv + 16)))
	if (*(*uintptr)(unsafe.Pointer(_zEsc))) != 0 {
		goto _4
	}

	return

_4:
	if _810sqlite3Utf8CharLen(tls, *(*uintptr)(unsafe.Pointer(_zEsc)), int32(-1)) == int32(1) {
		goto _5
	}

	Xsqlite3_result_error(tls, _context, ts+19387 /* "ESCAPE expression must be a sing..." */, int32(-1))
	return

_5:
	_escape = _393sqlite3Utf8Read(tls, _zEsc)
	goto _3

_2:
	_escape = uint32(*(*uint8)(unsafe.Pointer(_pInfo + 2)))
_3:
	if _zA == 0 || _zB == 0 {
		goto _6
	}

	Xsqlite3_result_int(tls, _context, bool2int(_196patternCompare(tls, _zB, _zA, _pInfo, _escape) == int32(0)))
_6:
}

// _500aAlterTableFuncs [3]SFuncDef, escapes: true, sqlite3.c:97353:18
var _500aAlterTableFuncs = bss + 9960 // array of 3 FuncDef

func init() {
	*(*[3]SFuncDef)(unsafe.Pointer(_500aAlterTableFuncs)) = [3]SFuncDef{
		0: {
			XnArg:      int8(2),
			XfuncFlags: uint16(2049),
			XxSFunc:    fp6(_811renameTableFunc),
			XzName:     ts + 19432, /* "sqlite_rename_table" */
		},
		1: {
			XnArg:      int8(2),
			XfuncFlags: uint16(2049),
			XxSFunc:    fp6(_812renameTriggerFunc),
			XzName:     ts + 19452, /* "sqlite_rename_trigger" */
		},
		2: {
			XnArg:      int8(3),
			XfuncFlags: uint16(2049),
			XxSFunc:    fp6(_813renameParentFunc),
			XzName:     ts + 19474, /* "sqlite_rename_parent" */
		},
	}
}

// _501aDateTimeFuncs [8]SFuncDef, escapes: true, sqlite3.c:20672:18
var _501aDateTimeFuncs = bss + 10128 // array of 8 FuncDef

func init() {
	*(*[8]SFuncDef)(unsafe.Pointer(_501aDateTimeFuncs)) = [8]SFuncDef{
		0: {
			XnArg:      int8(-1),
			XfuncFlags: uint16(10241),
			XpUserData: _28sqlite3Config,
			XxSFunc:    fp6(_814juliandayFunc),
			XzName:     ts + 19495, /* "julianday" */
		},
		1: {
			XnArg:      int8(-1),
			XfuncFlags: uint16(10241),
			XpUserData: _28sqlite3Config,
			XxSFunc:    fp6(_815dateFunc),
			XzName:     ts + 19505, /* "date" */
		},
		2: {
			XnArg:      int8(-1),
			XfuncFlags: uint16(10241),
			XpUserData: _28sqlite3Config,
			XxSFunc:    fp6(_816timeFunc),
			XzName:     ts + 19510, /* "time" */
		},
		3: {
			XnArg:      int8(-1),
			XfuncFlags: uint16(10241),
			XpUserData: _28sqlite3Config,
			XxSFunc:    fp6(_817datetimeFunc),
			XzName:     ts + 19515, /* "datetime" */
		},
		4: {
			XnArg:      int8(-1),
			XfuncFlags: uint16(10241),
			XpUserData: _28sqlite3Config,
			XxSFunc:    fp6(_818strftimeFunc),
			XzName:     ts + 19524, /* "strftime" */
		},
		5: {
			XfuncFlags: uint16(8193),
			XxSFunc:    fp6(_819ctimeFunc),
			XzName:     ts + 19533, /* "current_time" */
		},
		6: {
			XfuncFlags: uint16(8193),
			XxSFunc:    fp6(_820ctimestampFunc),
			XzName:     ts + 19546, /* "current_timestamp" */
		},
		7: {
			XfuncFlags: uint16(8193),
			XxSFunc:    fp6(_821cdateFunc),
			XzName:     ts + 19564, /* "current_date" */
		},
	}
}

// _502functionSearch is defined at sqlite3.c:105426:16
func _502functionSearch(tls crt.TLS, _h int32, _zFunc uintptr /* *int8 */) (r uintptr /* *TFuncDef = SFuncDef */) {
	var _p uintptr // *TFuncDef = SFuncDef

	_p = *(*uintptr)(unsafe.Pointer(_116sqlite3BuiltinFunctions + 8*uintptr(_h)))
_1:
	if _p == 0 {
		goto _3
	}

	if _110sqlite3StrICmp(tls, *(*uintptr)(unsafe.Pointer(_p + 40)), _zFunc) != int32(0) {
		goto _4
	}

	return _p

_4:
	_p = *(*uintptr)(unsafe.Pointer(_p + 48))
	goto _1

_3:
	return null
}

// _503aVfs [4]Ssqlite3_vfs, escapes: true, sqlite3.c:37993:22
var _503aVfs = bss + 10576 // array of 4 sqlite3_vfs

func init() {
	*(*[4]Ssqlite3_vfs)(unsafe.Pointer(_503aVfs)) = [4]Ssqlite3_vfs{
		0: {
			XiVersion:          int32(3),
			XszOsFile:          int32(120),
			XmxPathname:        int32(512),
			XzName:             ts + 19577, /* "unix" */
			XpAppData:          _822posixIoFinder,
			XxOpen:             fp135(_823unixOpen),
			XxDelete:           fp57(_824unixDelete),
			XxAccess:           fp104(_825unixAccess),
			XxFullPathname:     fp104(_826unixFullPathname),
			XxDlOpen:           fp109(_827unixDlOpen),
			XxDlError:          fp6(_828unixDlError),
			XxDlSym:            fp82(_829unixDlSym),
			XxDlClose:          fp96(_830unixDlClose),
			XxRandomness:       fp78(_831unixRandomness),
			XxSleep:            fp26(_832unixSleep),
			XxCurrentTime:      fp56(_833unixCurrentTime),
			XxGetLastError:     fp78(_834unixGetLastError),
			XxCurrentTimeInt64: fp56(_835unixCurrentTimeInt64),
			XxSetSystemCall:    fp79(_836unixSetSystemCall),
			XxGetSystemCall:    fp109(_837unixGetSystemCall),
			XxNextSystemCall:   fp109(_838unixNextSystemCall),
		},
		1: {
			XiVersion:          int32(3),
			XszOsFile:          int32(120),
			XmxPathname:        int32(512),
			XzName:             ts + 19582, /* "unix-none" */
			XpAppData:          _839nolockIoFinder,
			XxOpen:             fp135(_823unixOpen),
			XxDelete:           fp57(_824unixDelete),
			XxAccess:           fp104(_825unixAccess),
			XxFullPathname:     fp104(_826unixFullPathname),
			XxDlOpen:           fp109(_827unixDlOpen),
			XxDlError:          fp6(_828unixDlError),
			XxDlSym:            fp82(_829unixDlSym),
			XxDlClose:          fp96(_830unixDlClose),
			XxRandomness:       fp78(_831unixRandomness),
			XxSleep:            fp26(_832unixSleep),
			XxCurrentTime:      fp56(_833unixCurrentTime),
			XxGetLastError:     fp78(_834unixGetLastError),
			XxCurrentTimeInt64: fp56(_835unixCurrentTimeInt64),
			XxSetSystemCall:    fp79(_836unixSetSystemCall),
			XxGetSystemCall:    fp109(_837unixGetSystemCall),
			XxNextSystemCall:   fp109(_838unixNextSystemCall),
		},
		2: {
			XiVersion:          int32(3),
			XszOsFile:          int32(120),
			XmxPathname:        int32(512),
			XzName:             ts + 19592, /* "unix-dotfile" */
			XpAppData:          _840dotlockIoFinder,
			XxOpen:             fp135(_823unixOpen),
			XxDelete:           fp57(_824unixDelete),
			XxAccess:           fp104(_825unixAccess),
			XxFullPathname:     fp104(_826unixFullPathname),
			XxDlOpen:           fp109(_827unixDlOpen),
			XxDlError:          fp6(_828unixDlError),
			XxDlSym:            fp82(_829unixDlSym),
			XxDlClose:          fp96(_830unixDlClose),
			XxRandomness:       fp78(_831unixRandomness),
			XxSleep:            fp26(_832unixSleep),
			XxCurrentTime:      fp56(_833unixCurrentTime),
			XxGetLastError:     fp78(_834unixGetLastError),
			XxCurrentTimeInt64: fp56(_835unixCurrentTimeInt64),
			XxSetSystemCall:    fp79(_836unixSetSystemCall),
			XxGetSystemCall:    fp109(_837unixGetSystemCall),
			XxNextSystemCall:   fp109(_838unixNextSystemCall),
		},
		3: {
			XiVersion:          int32(3),
			XszOsFile:          int32(120),
			XmxPathname:        int32(512),
			XzName:             ts + 19605, /* "unix-excl" */
			XpAppData:          _822posixIoFinder,
			XxOpen:             fp135(_823unixOpen),
			XxDelete:           fp57(_824unixDelete),
			XxAccess:           fp104(_825unixAccess),
			XxFullPathname:     fp104(_826unixFullPathname),
			XxDlOpen:           fp109(_827unixDlOpen),
			XxDlError:          fp6(_828unixDlError),
			XxDlSym:            fp82(_829unixDlSym),
			XxDlClose:          fp96(_830unixDlClose),
			XxRandomness:       fp78(_831unixRandomness),
			XxSleep:            fp26(_832unixSleep),
			XxCurrentTime:      fp56(_833unixCurrentTime),
			XxGetLastError:     fp78(_834unixGetLastError),
			XxCurrentTimeInt64: fp56(_835unixCurrentTimeInt64),
			XxSetSystemCall:    fp79(_836unixSetSystemCall),
			XxGetSystemCall:    fp109(_837unixGetSystemCall),
			XxNextSystemCall:   fp109(_838unixNextSystemCall),
		},
	}
}

// _504allSpaces is defined at sqlite3.c:142832:12
func _504allSpaces(tls crt.TLS, _z uintptr /* *int8 */, _n int32) (r int32) {
_1:
	if _n <= int32(0) || int32(*(*int8)(unsafe.Pointer(_z + uintptr(_n-int32(1))))) != int32(' ') {
		goto _2
	}

	_n--
	goto _1

_2:
	return bool2int(_n == int32(0))
}

// _505findCollSeqEntry is defined at sqlite3.c:105292:16
func _505findCollSeqEntry(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _zName uintptr /* *int8 */, _create int32) (r uintptr /* *TCollSeq = SCollSeq */) {
	var (
		_pColl uintptr // *TCollSeq = SCollSeq
		_nName int32
		_pDel  uintptr // *TCollSeq = SCollSeq
	)
	_pColl = _424sqlite3HashFind(tls, _db+520, _zName)
	if 0 != _pColl || _create == 0 {
		goto _1
	}

	_nName = _211sqlite3Strlen30(tls, _zName) + int32(1)
	_pColl = _295sqlite3DbMallocZero(tls, _db, uint64(uint64(120)+uint64(_nName)))
	if _pColl == 0 {
		goto _2
	}

	_pDel = 0
	*(*uintptr)(unsafe.Pointer(_pColl)) = _pColl + 120
	*(*uint8)(unsafe.Pointer(_pColl + 8)) = uint8(1)
	*(*uintptr)(unsafe.Pointer(_pColl + 40)) = _pColl + 120
	*(*uint8)(unsafe.Pointer((_pColl + 40) + 8)) = uint8(2)
	*(*uintptr)(unsafe.Pointer(_pColl + 80)) = _pColl + 120
	*(*uint8)(unsafe.Pointer((_pColl + 80) + 8)) = uint8(3)
	crt.Xmemcpy(tls, *(*uintptr)(unsafe.Pointer(_pColl)), _zName, uint64(_nName))
	_pDel = _841sqlite3HashInsert(tls, _db+520, *(*uintptr)(unsafe.Pointer(_pColl)), _pColl)

	if _pDel == 0 {
		goto _3
	}

	_178sqlite3OomFault(tls, _db)
	_181sqlite3DbFree(tls, _db, _pDel)
	_pColl = null
_3:
_2:
_1:
	return _pColl
}

// _506aCacheMode [3]SOpenMode, escapes: true, sqlite3.c:144686:34
var _506aCacheMode = bss + 11248 // array of 3 struct OpenMode

func init() {
	*(*[3]SOpenMode)(unsafe.Pointer(_506aCacheMode)) = [3]SOpenMode{
		0: {
			Xz:    ts + 19615, /* "shared" */
			Xmode: int32(0x20000),
		},
		1: {
			Xz:    ts + 19622, /* "private" */
			Xmode: int32(0x40000),
		},
	}
}

// _507aOpenMode [5]SOpenMode, escapes: true, sqlite3.c:144698:34
var _507aOpenMode = bss + 11296 // array of 5 struct OpenMode

func init() {
	*(*[5]SOpenMode)(unsafe.Pointer(_507aOpenMode)) = [5]SOpenMode{
		0: {
			Xz:    ts + 19630, /* "ro" */
			Xmode: int32(0x1),
		},
		1: {
			Xz:    ts + 19633, /* "rw" */
			Xmode: int32(0x2),
		},
		2: {
			Xz:    ts + 19636, /* "rwc" */
			Xmode: int32(6),
		},
		3: {
			Xz:    ts + 19640, /* "memory" */
			Xmode: int32(0x80),
		},
	}
}

// _508sqlite3HexToInt is defined at sqlite3.c:29318:19
func _508sqlite3HexToInt(tls crt.TLS, _h int32) (r uint8) {
	_h = int32(_h + (int32(9) * (int32(1) & (_h >> (uint(6) % 32)))))
	return uint8(_h & int32(0xf))
}

// _509sqlite3OsFullPathname is defined at sqlite3.c:20925:20
func _509sqlite3OsFullPathname(tls crt.TLS, _pVfs uintptr /* *Tsqlite3_vfs = Ssqlite3_vfs */, _zPath uintptr /* *int8 */, _nPathOut int32, _zPathOut uintptr /* *int8 */) (r int32) {
	*(*int8)(unsafe.Pointer(_zPathOut)) = int8(0)
	return fn136(*(*uintptr)(unsafe.Pointer(_pVfs + 64)))(tls, _pVfs, _zPath, _nPathOut, _zPathOut)
}

// _510sqlite3SharedCacheList *TBtShared = SBtShared, escapes: false, sqlite3.c:59750:17
var _510sqlite3SharedCacheList uintptr

// _511sqlite3PagerFilename is defined at sqlite3.c:54409:27
func _511sqlite3PagerFilename(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _nullIfMemDb int32) (r uintptr /* *int8 */) {
	if (_nullIfMemDb != 0) && ((*(*uint8)(unsafe.Pointer(_pPager + 19))) != 0) {
		return ts + 4553 /* "" */
	}

	return *(*uintptr)(unsafe.Pointer(_pPager + 208))
}

// _512sqlite3PagerOpen is defined at sqlite3.c:52162:20
func _512sqlite3PagerOpen(tls crt.TLS, _pVfs uintptr /* *Tsqlite3_vfs = Ssqlite3_vfs */, _ppPager uintptr /* **TPager = SPager */, _zFilename uintptr /* *int8 */, _nExtra int32, _flags int32, _vfsFlags int32, _xReinit uintptr /* *func(crt.TLS, uintptr) */) (r int32) {
	esc := crt.MustMalloc(20)
	var (
		_pPtr            uintptr // *Tu8 = uint8
		_pPager          uintptr // *TPager = SPager
		_rc              int32
		_tempFile        int32
		_memDb           int32
		_readOnly        int32
		_journalFileSize int32
		_zPathname       uintptr // *int8
		_nPathname       int32
		_useJournal      int32
		_pcacheSize      int32
		_szPageDflt      = esc   // *Tu32 = uint32
		_zUri            uintptr // *int8
		_nUri            int32
		_z               uintptr    // *int8
		_fout            = esc + 16 // *int32
		_iDc             int32
	)
	defer crt.Free(esc)
	_pPager = 0
	_rc = int32(0)
	_tempFile = int32(0)
	_memDb = int32(0)
	_readOnly = int32(0)
	_zPathname = 0
	_nPathname = int32(0)
	_useJournal = bool2int((_flags & int32(0x1)) == int32(0))
	_pcacheSize = _842sqlite3PcacheSize(tls)
	*(*uint32)(unsafe.Pointer(_szPageDflt)) = uint32(4096)
	_zUri = 0
	_nUri = int32(0)
	_journalFileSize = (_843sqlite3JournalSize(tls, _pVfs) + int32(7)) & int32(-8)
	*(*uintptr)(unsafe.Pointer(_ppPager)) = null
	if (_flags & int32(0x2)) == 0 {
		goto _1
	}

	_memDb = int32(1)
	if _zFilename == 0 || (*(*int8)(unsafe.Pointer(_zFilename))) == 0 {
		goto _2
	}

	_zPathname = _183sqlite3DbStrDup(tls, null, _zFilename)
	if _zPathname != 0 {
		goto _3
	}

	return int32(7)

_3:
	_nPathname = _211sqlite3Strlen30(tls, _zPathname)
	_zFilename = null
_2:
_1:
	if _zFilename == 0 || (*(*int8)(unsafe.Pointer(_zFilename))) == 0 {
		goto _4
	}

	_nPathname = (*(*int32)(unsafe.Pointer(_pVfs + 8))) + int32(1)
	_zPathname = _177sqlite3DbMallocRaw(tls, null, uint64(_nPathname*int32(2)))
	if _zPathname != 0 {
		goto _5
	}

	return int32(7)

_5:
	*(*int8)(unsafe.Pointer(_zPathname)) = int8(0)
	_rc = _509sqlite3OsFullPathname(tls, _pVfs, _zFilename, _nPathname, _zPathname)
	_nPathname = _211sqlite3Strlen30(tls, _zPathname)
	_z = set4(&_zUri, _zFilename+uintptr(_211sqlite3Strlen30(tls, _zFilename)+int32(1)))
_6:
	if (*(*int8)(unsafe.Pointer(_z))) == 0 {
		goto _7
	}

	_z += uintptr(_211sqlite3Strlen30(tls, _z) + int32(1))
	_z += uintptr(_211sqlite3Strlen30(tls, _z) + int32(1))
	goto _6

_7:
	_nUri = int32(int64(_z + 1 - _zUri))

	if _rc != int32(0) || (_nPathname+int32(8)) <= (*(*int32)(unsafe.Pointer(_pVfs + 8))) {
		goto _8
	}

	_rc = _844sqlite3CantopenError(tls, int32(52233))
_8:
	if _rc == int32(0) {
		goto _9
	}

	_181sqlite3DbFree(tls, null, _zPathname)
	return _rc

_9:
_4:
	_pPtr = _135sqlite3MallocZero(tls, uint64((((((((((((uint64(304)+uint64((_pcacheSize+int32(7))&int32(-8)))+uint64(((*(*int32)(unsafe.Pointer(_pVfs + 4)))+int32(7))&int32(-8)))+uint64(_journalFileSize*int32(2)))+uint64(_nPathname))+uint64(1))+uint64(_nUri))+uint64(_nPathname))+uint64(8))+uint64(2))+uint64(_nPathname))+uint64(4))+uint64(2)))

	if _pPtr != 0 {
		goto _10
	}

	_181sqlite3DbFree(tls, null, _zPathname)
	return int32(7)

_10:
	_pPager = _pPtr
	*(*uintptr)(unsafe.Pointer(_pPager + 280)) = preinc(&_pPtr, uintptr(304))
	*(*uintptr)(unsafe.Pointer(_pPager + 72)) = preinc(&_pPtr, uintptr((_pcacheSize+int32(7))&int32(-8)))
	*(*uintptr)(unsafe.Pointer(_pPager + 88)) = preinc(&_pPtr, uintptr(((*(*int32)(unsafe.Pointer(_pVfs + 4)))+int32(7))&int32(-8)))
	*(*uintptr)(unsafe.Pointer(_pPager + 80)) = preinc(&_pPtr, uintptr(_journalFileSize))
	*(*uintptr)(unsafe.Pointer(_pPager + 208)) = preinc(&_pPtr, uintptr(_journalFileSize))

	if _zPathname == 0 {
		goto _11
	}

	*(*uintptr)(unsafe.Pointer(_pPager + 216)) = preinc(&_pPtr, uintptr((_nPathname+int32(1))+_nUri))
	crt.Xmemcpy(tls, *(*uintptr)(unsafe.Pointer(_pPager + 208)), _zPathname, uint64(_nPathname))
	if _nUri == 0 {
		goto _12
	}

	crt.Xmemcpy(tls, (*(*uintptr)(unsafe.Pointer(_pPager + 208)))+uintptr(_nPathname+int32(1)), _zUri, uint64(_nUri))
_12:
	crt.Xmemcpy(tls, *(*uintptr)(unsafe.Pointer(_pPager + 216)), _zPathname, uint64(_nPathname))
	crt.Xmemcpy(tls, (*(*uintptr)(unsafe.Pointer(_pPager + 216)))+uintptr(_nPathname), ts+19647 /* "-journal\x00" */, uint64(10))
	*(*uintptr)(unsafe.Pointer(_pPager + 296)) = (*(*uintptr)(unsafe.Pointer(_pPager + 216))) + uintptr((_nPathname+int32(8))+int32(1))
	crt.Xmemcpy(tls, *(*uintptr)(unsafe.Pointer(_pPager + 296)), _zPathname, uint64(_nPathname))
	crt.Xmemcpy(tls, (*(*uintptr)(unsafe.Pointer(_pPager + 296)))+uintptr(_nPathname), ts+19657 /* "-wal\x00" */, uint64(5))
	_181sqlite3DbFree(tls, null, _zPathname)
_11:
	*(*uintptr)(unsafe.Pointer(_pPager)) = _pVfs
	*(*uint32)(unsafe.Pointer(_pPager + 180)) = uint32(_vfsFlags)
	if _zFilename == 0 || (*(*int8)(unsafe.Pointer(_zFilename))) == 0 {
		goto _13
	}

	*(*int32)(unsafe.Pointer(_fout)) = int32(0)
	_rc = _845sqlite3OsOpen(tls, _pVfs, *(*uintptr)(unsafe.Pointer(_pPager + 208)), *(*uintptr)(unsafe.Pointer(_pPager + 72)), _vfsFlags, _fout)

	_readOnly = (*(*int32)(unsafe.Pointer(_fout))) & int32(0x1)
	if _rc != int32(0) {
		goto _15
	}

	_iDc = _585sqlite3OsDeviceCharacteristics(tls, *(*uintptr)(unsafe.Pointer(_pPager + 72)))
	if _readOnly != 0 {
		goto _16
	}

	_846setSectorSize(tls, _pPager)

	if (*(*uint32)(unsafe.Pointer(_szPageDflt))) >= (*(*uint32)(unsafe.Pointer(_pPager + 184))) {
		goto _17
	}

	if (*(*uint32)(unsafe.Pointer(_pPager + 184))) <= uint32(8192) {
		goto _18
	}

	*(*uint32)(unsafe.Pointer(_szPageDflt)) = uint32(8192)
	goto _19

_18:
	*(*uint32)(unsafe.Pointer(_szPageDflt)) = *(*uint32)(unsafe.Pointer(_pPager + 184))
_19:
_17:
_16:
	*(*uint8)(unsafe.Pointer(_pPager + 17)) = uint8(Xsqlite3_uri_boolean(tls, _zFilename, ts+19663 /* "nolock" */, int32(0)))
	if (_iDc&int32(0x2000)) == int32(0) && Xsqlite3_uri_boolean(tls, _zFilename, ts+19670 /* "immutable" */, int32(0)) == 0 {
		goto _20
	}

	_vfsFlags = int32(_vfsFlags | int32(0x1))
	goto _act_like_temp_file

_20:
_15:
	goto _14

_13:
	goto _act_like_temp_file
_act_like_temp_file:
	_tempFile = int32(1)
	*(*uint8)(unsafe.Pointer(_pPager + 20)) = uint8(1)
	*(*uint8)(unsafe.Pointer(_pPager + 21)) = uint8(4)
	*(*uint8)(unsafe.Pointer(_pPager + 17)) = uint8(1)
	_readOnly = _vfsFlags & int32(0x1)
_14:
	if _rc != int32(0) {
		goto _21
	}

	_rc = _412sqlite3PagerSetPagesize(tls, _pPager, _szPageDflt, int32(-1))
_21:
	if _rc != int32(0) {
		goto _22
	}

	_nExtra = (_nExtra + int32(7)) & int32(-8)

	_rc = _847sqlite3PcacheOpen(tls, int32(*(*uint32)(unsafe.Pointer(_szPageDflt))), _nExtra, bool2int(_memDb == 0), func() uintptr {
		if _memDb == 0 {
			return fp56(_848pagerStress)
		}
		return null
	}(), _pPager, *(*uintptr)(unsafe.Pointer(_pPager + 280)))
_22:
	if _rc == int32(0) {
		goto _23
	}

	_849sqlite3OsClose(tls, *(*uintptr)(unsafe.Pointer(_pPager + 72)))
	_753sqlite3PageFree(tls, *(*uintptr)(unsafe.Pointer(_pPager + 272)))
	Xsqlite3_free(tls, _pPager)
	return _rc

_23:
	*(*uint8)(unsafe.Pointer(_pPager + 10)) = uint8(_useJournal)
	*(*uint32)(unsafe.Pointer(_pPager + 192)) = uint32(1073741823)
	*(*uint8)(unsafe.Pointer(_pPager + 16)) = uint8(_tempFile)

	*(*uint8)(unsafe.Pointer(_pPager + 8)) = uint8(_tempFile)
	*(*uint8)(unsafe.Pointer(_pPager + 22)) = *(*uint8)(unsafe.Pointer(_pPager + 16))
	*(*uint8)(unsafe.Pointer(_pPager + 19)) = uint8(_memDb)
	*(*uint8)(unsafe.Pointer(_pPager + 18)) = uint8(_readOnly)

	*(*uint8)(unsafe.Pointer(_pPager + 11)) = *(*uint8)(unsafe.Pointer(_pPager + 16))
	if (*(*uint8)(unsafe.Pointer(_pPager + 11))) == 0 {
		goto _24
	}

	goto _25

_24:
	*(*uint8)(unsafe.Pointer(_pPager + 12)) = uint8(1)
	*(*uint8)(unsafe.Pointer(_pPager + 13)) = uint8(0)
	*(*uint8)(unsafe.Pointer(_pPager + 14)) = uint8(0x2)
	*(*uint8)(unsafe.Pointer(_pPager + 15)) = uint8(10)
_25:
	*(*uint16)(unsafe.Pointer(_pPager + 176)) = uint16(_nExtra)
	*(*int64)(unsafe.Pointer(_pPager + 200)) = int64(-1)

	_846setSectorSize(tls, _pPager)
	if _useJournal != 0 {
		goto _26
	}

	*(*uint8)(unsafe.Pointer(_pPager + 9)) = uint8(2)
	goto _27

_26:
	if _memDb == 0 {
		goto _28
	}

	*(*uint8)(unsafe.Pointer(_pPager + 9)) = uint8(4)
_28:
_27:
	*(*uintptr)(unsafe.Pointer(_pPager + 256)) = _xReinit
	_603setGetterMethod(tls, _pPager)
	*(*uintptr)(unsafe.Pointer(_ppPager)) = _pPager
	return int32(0)
}

// _513pageReinit is defined at sqlite3.c:61853:13
func _513pageReinit(tls crt.TLS, _pData uintptr /* *TDbPage = SPgHdr */) {
	var _pPage uintptr // *TMemPage = SMemPage

	_pPage = _334sqlite3PagerGetExtra(tls, _pData)

	if (*(*uint8)(unsafe.Pointer(_pPage))) == 0 {
		goto _1
	}

	*(*uint8)(unsafe.Pointer(_pPage)) = uint8(0)
	if _850sqlite3PagerPageRefcount(tls, _pData) <= int32(1) {
		goto _2
	}

	_851btreeInitPage(tls, _pPage)
_2:
_1:
}

// _514sqlite3PagerSetMmapLimit is defined at sqlite3.c:51022:21
func _514sqlite3PagerSetMmapLimit(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _szMmap int64) {
	*(*int64)(unsafe.Pointer(_pPager + 160)) = _szMmap
	_758pagerFixMaplimit(tls, _pPager)
}

// _515sqlite3PagerReadFileheader is defined at sqlite3.c:51352:20
func _515sqlite3PagerReadFileheader(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _N int32, _pDest uintptr /* *uint8 */) (r int32) {
	var _rc int32

	_rc = int32(0)
	crt.Xmemset(tls, _pDest, int32(0), uint64(_N))

	if (*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pPager + 72))))) == 0 {
		goto _1
	}

	_rc = _586sqlite3OsRead(tls, *(*uintptr)(unsafe.Pointer(_pPager + 72)), _pDest, _N, int64(0))
	if _rc != int32(522) {
		goto _2
	}

	_rc = int32(0)
_2:
_1:
	return _rc
}

// _516sqlite3PagerSetBusyhandler is defined at sqlite3.c:51185:21
func _516sqlite3PagerSetBusyhandler(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _xBusyHandler uintptr /* *func(crt.TLS, uintptr) int32 */, _pBusyHandlerArg uintptr /* *void */) {
	var _ap uintptr // **void

	*(*uintptr)(unsafe.Pointer(_pPager + 224)) = _xBusyHandler
	*(*uintptr)(unsafe.Pointer(_pPager + 232)) = _pBusyHandlerArg
	if (*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pPager + 72))))) == 0 {
		goto _1
	}

	_ap = _pPager + 224

	_521sqlite3OsFileControlHint(tls, *(*uintptr)(unsafe.Pointer(_pPager + 72)), int32(15), _ap)
_1:
}

// _517sqlite3PagerIsreadonly is defined at sqlite3.c:54152:19
func _517sqlite3PagerIsreadonly(tls crt.TLS, _pPager uintptr /* *TPager = SPager */) (r uint8) {
	return *(*uint8)(unsafe.Pointer(_pPager + 18))
}

// _518sqlite3PagerClose is defined at sqlite3.c:51599:20
func _518sqlite3PagerClose(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _db uintptr /* *Tsqlite3 = Ssqlite3 */) (r int32) {
	var _pTmp uintptr // *Tu8 = uint8

	_pTmp = *(*uintptr)(unsafe.Pointer(_pPager + 272))

	_523sqlite3BeginBenignMalloc(tls)
	_852pagerFreeMapHdrs(tls, _pPager)
	*(*uint8)(unsafe.Pointer(_pPager + 8)) = uint8(0)

	_853sqlite3WalClose(tls, *(*uintptr)(unsafe.Pointer(_pPager + 288)), _db, int32(*(*uint8)(unsafe.Pointer(_pPager + 15))), *(*int32)(unsafe.Pointer(_pPager + 188)), func() uintptr {
		if (_db != 0) && ((*(*uint32)(unsafe.Pointer(_db + 48)))&uint32(0x800) != 0) {
			return null
		}
		return _pTmp
	}())
	*(*uintptr)(unsafe.Pointer(_pPager + 288)) = null
	_756pager_reset(tls, _pPager)
	if (*(*uint8)(unsafe.Pointer(_pPager + 19))) == 0 {
		goto _1
	}

	_854pager_unlock(tls, _pPager)
	goto _2

_1:
	if (*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pPager + 80))))) == 0 {
		goto _3
	}

	_591pager_error(tls, _pPager, _855pagerSyncHotJournal(tls, _pPager))
_3:
	_856pagerUnlockAndRollback(tls, _pPager)
_2:
	_524sqlite3EndBenignMalloc(tls)
	_849sqlite3OsClose(tls, *(*uintptr)(unsafe.Pointer(_pPager + 80)))
	_849sqlite3OsClose(tls, *(*uintptr)(unsafe.Pointer(_pPager + 72)))
	_753sqlite3PageFree(tls, _pTmp)
	_857sqlite3PcacheClose(tls, *(*uintptr)(unsafe.Pointer(_pPager + 280)))

	Xsqlite3_free(tls, _pPager)
	return int32(0)
}

// _519sqlite3BtreeSchema is defined at sqlite3.c:69422:21
func _519sqlite3BtreeSchema(tls crt.TLS, _p uintptr /* *TBtree = SBtree */, _nBytes int32, _xFree uintptr /* *func(crt.TLS, uintptr) */) (r uintptr /* *void */) {
	var _pBt uintptr // *TBtShared = SBtShared

	_pBt = *(*uintptr)(unsafe.Pointer(_p + 8))
	_139sqlite3BtreeEnter(tls, _p)
	if (*(*uintptr)(unsafe.Pointer(_pBt + 64))) != 0 || _nBytes == 0 {
		goto _1
	}

	*(*uintptr)(unsafe.Pointer(_pBt + 64)) = _295sqlite3DbMallocZero(tls, null, uint64(_nBytes))
	*(*uintptr)(unsafe.Pointer(_pBt + 72)) = _xFree
_1:
	_169sqlite3BtreeLeave(tls, _p)
	return *(*uintptr)(unsafe.Pointer(_pBt + 64))
}

// _520sqlite3PagerSetCachesize is defined at sqlite3.c:50991:21
func _520sqlite3PagerSetCachesize(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _mxPage int32) {
	_858sqlite3PcacheSetCachesize(tls, *(*uintptr)(unsafe.Pointer(_pPager + 280)), _mxPage)
}

// _521sqlite3OsFileControlHint is defined at sqlite3.c:20837:21
func _521sqlite3OsFileControlHint(tls crt.TLS, _id uintptr /* *Tsqlite3_file = Ssqlite3_file */, _op int32, _pArg uintptr /* *void */) {
	fn52(*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_id))) + 80)))(tls, _id, _op, _pArg)
}

// Xsqlite3_overload_function is defined at sqlite3.c:143786:16
func Xsqlite3_overload_function(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _zName uintptr /* *int8 */, _nArg int32) (r int32) {
	var _rc int32

	_rc = int32(0)
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	if _541sqlite3FindFunction(tls, _db, _zName, _nArg, uint8(1), uint8(0)) != 0 {
		goto _1
	}

	_rc = _296sqlite3CreateFunc(tls, _db, _zName, _nArg, int32(1), null, fp6(_859sqlite3InvalidFunction), null, null, null)
_1:
	_rc = _182sqlite3ApiExit(tls, _db, _rc)
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	return _rc
}

type Ssqlite3_api_routines struct {
	Xaggregate_context      uintptr // *func(crt.TLS, uintptr, int32) uintptr
	Xaggregate_count        uintptr // *func(crt.TLS, uintptr) int32
	Xbind_blob              uintptr // *func(crt.TLS, uintptr, int32, uintptr, int32, uintptr) int32
	Xbind_double            uintptr // *func(crt.TLS, uintptr, int32, float64) int32
	Xbind_int               uintptr // *func(crt.TLS, uintptr, int32, int32) int32
	Xbind_int64             uintptr // *func(crt.TLS, uintptr, int32, int64) int32
	Xbind_null              uintptr // *func(crt.TLS, uintptr, int32) int32
	Xbind_parameter_count   uintptr // *func(crt.TLS, uintptr) int32
	Xbind_parameter_index   uintptr // *func(crt.TLS, uintptr, uintptr) int32
	Xbind_parameter_name    uintptr // *func(crt.TLS, uintptr, int32) uintptr
	Xbind_text              uintptr // *func(crt.TLS, uintptr, int32, uintptr, int32, uintptr) int32
	Xbind_text16            uintptr // *func(crt.TLS, uintptr, int32, uintptr, int32, uintptr) int32
	Xbind_value             uintptr // *func(crt.TLS, uintptr, int32, uintptr) int32
	Xbusy_handler           uintptr // *func(crt.TLS, uintptr, uintptr, uintptr) int32
	Xbusy_timeout           uintptr // *func(crt.TLS, uintptr, int32) int32
	Xchanges                uintptr // *func(crt.TLS, uintptr) int32
	Xclose                  uintptr // *func(crt.TLS, uintptr) int32
	Xcollation_needed       uintptr // *func(crt.TLS, uintptr, uintptr, uintptr) int32
	Xcollation_needed16     uintptr // *func(crt.TLS, uintptr, uintptr, uintptr) int32
	Xcolumn_blob            uintptr // *func(crt.TLS, uintptr, int32) uintptr
	Xcolumn_bytes           uintptr // *func(crt.TLS, uintptr, int32) int32
	Xcolumn_bytes16         uintptr // *func(crt.TLS, uintptr, int32) int32
	Xcolumn_count           uintptr // *func(crt.TLS, uintptr) int32
	Xcolumn_database_name   uintptr // *func(crt.TLS, uintptr, int32) uintptr
	Xcolumn_database_name16 uintptr // *func(crt.TLS, uintptr, int32) uintptr
	Xcolumn_decltype        uintptr // *func(crt.TLS, uintptr, int32) uintptr
	Xcolumn_decltype16      uintptr // *func(crt.TLS, uintptr, int32) uintptr
	Xcolumn_double          uintptr // *func(crt.TLS, uintptr, int32) float64
	Xcolumn_int             uintptr // *func(crt.TLS, uintptr, int32) int32
	Xcolumn_int64           uintptr // *func(crt.TLS, uintptr, int32) int64
	Xcolumn_name            uintptr // *func(crt.TLS, uintptr, int32) uintptr
	Xcolumn_name16          uintptr // *func(crt.TLS, uintptr, int32) uintptr
	Xcolumn_origin_name     uintptr // *func(crt.TLS, uintptr, int32) uintptr
	Xcolumn_origin_name16   uintptr // *func(crt.TLS, uintptr, int32) uintptr
	Xcolumn_table_name      uintptr // *func(crt.TLS, uintptr, int32) uintptr
	Xcolumn_table_name16    uintptr // *func(crt.TLS, uintptr, int32) uintptr
	Xcolumn_text            uintptr // *func(crt.TLS, uintptr, int32) uintptr
	Xcolumn_text16          uintptr // *func(crt.TLS, uintptr, int32) uintptr
	Xcolumn_type            uintptr // *func(crt.TLS, uintptr, int32) int32
	Xcolumn_value           uintptr // *func(crt.TLS, uintptr, int32) uintptr
	Xcommit_hook            uintptr // *func(crt.TLS, uintptr, uintptr, uintptr) uintptr
	Xcomplete               uintptr // *func(crt.TLS, uintptr) int32
	Xcomplete16             uintptr // *func(crt.TLS, uintptr) int32
	Xcreate_collation       uintptr // *func(crt.TLS, uintptr, uintptr, int32, uintptr, uintptr) int32
	Xcreate_collation16     uintptr // *func(crt.TLS, uintptr, uintptr, int32, uintptr, uintptr) int32
	Xcreate_function        uintptr // *func(crt.TLS, uintptr, uintptr, int32, int32, uintptr, uintptr, uintptr, uintptr) int32
	Xcreate_function16      uintptr // *func(crt.TLS, uintptr, uintptr, int32, int32, uintptr, uintptr, uintptr, uintptr) int32
	Xcreate_module          uintptr // *func(crt.TLS, uintptr, uintptr, uintptr, uintptr) int32
	Xdata_count             uintptr // *func(crt.TLS, uintptr) int32
	Xdb_handle              uintptr // *func(crt.TLS, uintptr) uintptr
	Xdeclare_vtab           uintptr // *func(crt.TLS, uintptr, uintptr) int32
	Xenable_shared_cache    uintptr // *func(crt.TLS, int32) int32
	Xerrcode                uintptr // *func(crt.TLS, uintptr) int32
	Xerrmsg                 uintptr // *func(crt.TLS, uintptr) uintptr
	Xerrmsg16               uintptr // *func(crt.TLS, uintptr) uintptr
	Xexec                   uintptr // *func(crt.TLS, uintptr, uintptr, uintptr, uintptr, uintptr) int32
	Xexpired                uintptr // *func(crt.TLS, uintptr) int32
	Xfinalize               uintptr // *func(crt.TLS, uintptr) int32
	Xfree                   uintptr // *func(crt.TLS, uintptr)
	Xfree_table             uintptr // *func(crt.TLS, uintptr)
	Xget_autocommit         uintptr // *func(crt.TLS, uintptr) int32
	Xget_auxdata            uintptr // *func(crt.TLS, uintptr, int32) uintptr
	Xget_table              uintptr // *func(crt.TLS, uintptr, uintptr, uintptr, uintptr, uintptr, uintptr) int32
	Xglobal_recover         uintptr // *func(crt.TLS) int32
	Xinterruptx             uintptr // *func(crt.TLS, uintptr)
	Xlast_insert_rowid      uintptr // *func(crt.TLS, uintptr) int64
	Xlibversion             uintptr // *func(crt.TLS) uintptr
	Xlibversion_number      uintptr // *func(crt.TLS) int32
	Xmalloc                 uintptr // *func(crt.TLS, int32) uintptr
	Xmprintf                uintptr // *func(crt.TLS, uintptr, ...interface{}) uintptr
	Xopen64                 uintptr // *func(crt.TLS, uintptr, uintptr) int32
	Xopen16                 uintptr // *func(crt.TLS, uintptr, uintptr) int32
	Xprepare                uintptr // *func(crt.TLS, uintptr, uintptr, int32, uintptr, uintptr) int32
	Xprepare16              uintptr // *func(crt.TLS, uintptr, uintptr, int32, uintptr, uintptr) int32
	Xprofile                uintptr // *func(crt.TLS, uintptr, uintptr, uintptr) uintptr
	Xprogress_handler       uintptr // *func(crt.TLS, uintptr, int32, uintptr, uintptr)
	Xrealloc                uintptr // *func(crt.TLS, uintptr, int32) uintptr
	Xreset                  uintptr // *func(crt.TLS, uintptr) int32
	Xresult_blob            uintptr // *func(crt.TLS, uintptr, uintptr, int32, uintptr)
	Xresult_double          uintptr // *func(crt.TLS, uintptr, float64)
	Xresult_error           uintptr // *func(crt.TLS, uintptr, uintptr, int32)
	Xresult_error16         uintptr // *func(crt.TLS, uintptr, uintptr, int32)
	Xresult_int             uintptr // *func(crt.TLS, uintptr, int32)
	Xresult_int64           uintptr // *func(crt.TLS, uintptr, int64)
	Xresult_null            uintptr // *func(crt.TLS, uintptr)
	Xresult_text            uintptr // *func(crt.TLS, uintptr, uintptr, int32, uintptr)
	Xresult_text16          uintptr // *func(crt.TLS, uintptr, uintptr, int32, uintptr)
	Xresult_text16be        uintptr // *func(crt.TLS, uintptr, uintptr, int32, uintptr)
	Xresult_text16le        uintptr // *func(crt.TLS, uintptr, uintptr, int32, uintptr)
	Xresult_value           uintptr // *func(crt.TLS, uintptr, uintptr)
	Xrollback_hook          uintptr // *func(crt.TLS, uintptr, uintptr, uintptr) uintptr
	Xset_authorizer         uintptr // *func(crt.TLS, uintptr, uintptr, uintptr) int32
	Xset_auxdata            uintptr // *func(crt.TLS, uintptr, int32, uintptr, uintptr)
	Xxsnprintf              uintptr // *func(crt.TLS, int32, uintptr, uintptr, ...interface{}) uintptr
	Xstep                   uintptr // *func(crt.TLS, uintptr) int32
	Xtable_column_metadata  uintptr // *func(crt.TLS, uintptr, uintptr, uintptr, uintptr, uintptr, uintptr, uintptr, uintptr, uintptr) int32
	Xthread_cleanup         uintptr // *func(crt.TLS)
	Xtotal_changes          uintptr // *func(crt.TLS, uintptr) int32
	Xtrace                  uintptr // *func(crt.TLS, uintptr, uintptr, uintptr) uintptr
	Xtransfer_bindings      uintptr // *func(crt.TLS, uintptr, uintptr) int32
	Xupdate_hook            uintptr // *func(crt.TLS, uintptr, uintptr, uintptr) uintptr
	Xuser_data              uintptr // *func(crt.TLS, uintptr) uintptr
	Xvalue_blob             uintptr // *func(crt.TLS, uintptr) uintptr
	Xvalue_bytes            uintptr // *func(crt.TLS, uintptr) int32
	Xvalue_bytes16          uintptr // *func(crt.TLS, uintptr) int32
	Xvalue_double           uintptr // *func(crt.TLS, uintptr) float64
	Xvalue_int              uintptr // *func(crt.TLS, uintptr) int32
	Xvalue_int64            uintptr // *func(crt.TLS, uintptr) int64
	Xvalue_numeric_type     uintptr // *func(crt.TLS, uintptr) int32
	Xvalue_text             uintptr // *func(crt.TLS, uintptr) uintptr
	Xvalue_text16           uintptr // *func(crt.TLS, uintptr) uintptr
	Xvalue_text16be         uintptr // *func(crt.TLS, uintptr) uintptr
	Xvalue_text16le         uintptr // *func(crt.TLS, uintptr) uintptr
	Xvalue_type             uintptr // *func(crt.TLS, uintptr) int32
	Xvmprintf               uintptr // *func(crt.TLS, uintptr, *[]interface{}) uintptr
	Xoverload_function      uintptr // *func(crt.TLS, uintptr, uintptr, int32) int32
	Xprepare_v2             uintptr // *func(crt.TLS, uintptr, uintptr, int32, uintptr, uintptr) int32
	Xprepare16_v2           uintptr // *func(crt.TLS, uintptr, uintptr, int32, uintptr, uintptr) int32
	Xclear_bindings         uintptr // *func(crt.TLS, uintptr) int32
	Xcreate_module_v2       uintptr // *func(crt.TLS, uintptr, uintptr, uintptr, uintptr, uintptr) int32
	Xbind_zeroblob          uintptr // *func(crt.TLS, uintptr, int32, int32) int32
	Xblob_bytes             uintptr // *func(crt.TLS, uintptr) int32
	Xblob_close             uintptr // *func(crt.TLS, uintptr) int32
	Xblob_open              uintptr // *func(crt.TLS, uintptr, uintptr, uintptr, uintptr, int64, int32, uintptr) int32
	Xblob_read              uintptr // *func(crt.TLS, uintptr, uintptr, int32, int32) int32
	Xblob_write             uintptr // *func(crt.TLS, uintptr, uintptr, int32, int32) int32
	Xcreate_collation_v2    uintptr // *func(crt.TLS, uintptr, uintptr, int32, uintptr, uintptr, uintptr) int32
	Xfile_control           uintptr // *func(crt.TLS, uintptr, uintptr, int32, uintptr) int32
	Xmemory_highwater       uintptr // *func(crt.TLS, int32) int64
	Xmemory_used            uintptr // *func(crt.TLS) int64
	Xmutex_alloc            uintptr // *func(crt.TLS, int32) uintptr
	Xmutex_enter            uintptr // *func(crt.TLS, uintptr)
	Xmutex_free             uintptr // *func(crt.TLS, uintptr)
	Xmutex_leave            uintptr // *func(crt.TLS, uintptr)
	Xmutex_try              uintptr // *func(crt.TLS, uintptr) int32
	Xopen_v2                uintptr // *func(crt.TLS, uintptr, uintptr, int32, uintptr) int32
	Xrelease_memory         uintptr // *func(crt.TLS, int32) int32
	Xresult_error_nomem     uintptr // *func(crt.TLS, uintptr)
	Xresult_error_toobig    uintptr // *func(crt.TLS, uintptr)
	Xsleep                  uintptr // *func(crt.TLS, int32) int32
	Xsoft_heap_limit        uintptr // *func(crt.TLS, int32)
	Xvfs_find               uintptr // *func(crt.TLS, uintptr) uintptr
	Xvfs_register           uintptr // *func(crt.TLS, uintptr, int32) int32
	Xvfs_unregister         uintptr // *func(crt.TLS, uintptr) int32
	Xxthreadsafe            uintptr // *func(crt.TLS) int32
	Xresult_zeroblob        uintptr // *func(crt.TLS, uintptr, int32)
	Xresult_error_code      uintptr // *func(crt.TLS, uintptr, int32)
	Xtest_control           uintptr // *func(crt.TLS, int32, ...interface{}) int32
	Xrandomness             uintptr // *func(crt.TLS, int32, uintptr)
	Xcontext_db_handle      uintptr // *func(crt.TLS, uintptr) uintptr
	Xextended_result_codes  uintptr // *func(crt.TLS, uintptr, int32) int32
	Xlimit                  uintptr // *func(crt.TLS, uintptr, int32, int32) int32
	Xnext_stmt              uintptr // *func(crt.TLS, uintptr, uintptr) uintptr
	Xsql                    uintptr // *func(crt.TLS, uintptr) uintptr
	Xstatus                 uintptr // *func(crt.TLS, int32, uintptr, uintptr, int32) int32
	Xbackup_finish          uintptr // *func(crt.TLS, uintptr) int32
	Xbackup_init            uintptr // *func(crt.TLS, uintptr, uintptr, uintptr, uintptr) uintptr
	Xbackup_pagecount       uintptr // *func(crt.TLS, uintptr) int32
	Xbackup_remaining       uintptr // *func(crt.TLS, uintptr) int32
	Xbackup_step            uintptr // *func(crt.TLS, uintptr, int32) int32
	Xcompileoption_get      uintptr // *func(crt.TLS, int32) uintptr
	Xcompileoption_used     uintptr // *func(crt.TLS, uintptr) int32
	Xcreate_function_v2     uintptr // *func(crt.TLS, uintptr, uintptr, int32, int32, uintptr, uintptr, uintptr, uintptr, uintptr) int32
	Xdb_config              uintptr // *func(crt.TLS, uintptr, int32, ...interface{}) int32
	Xdb_mutex               uintptr // *func(crt.TLS, uintptr) uintptr
	Xdb_status              uintptr // *func(crt.TLS, uintptr, int32, uintptr, uintptr, int32) int32
	Xextended_errcode       uintptr // *func(crt.TLS, uintptr) int32
	Xlog                    uintptr // *func(crt.TLS, int32, uintptr, ...interface{})
	Xsoft_heap_limit64      uintptr // *func(crt.TLS, int64) int64
	Xsourceid               uintptr // *func(crt.TLS) uintptr
	Xstmt_status            uintptr // *func(crt.TLS, uintptr, int32, int32) int32
	Xstrnicmp               uintptr // *func(crt.TLS, uintptr, uintptr, int32) int32
	Xunlock_notify          uintptr // *func(crt.TLS, uintptr, uintptr, uintptr) int32
	Xwal_autocheckpoint     uintptr // *func(crt.TLS, uintptr, int32) int32
	Xwal_checkpoint         uintptr // *func(crt.TLS, uintptr, uintptr) int32
	Xwal_hook               uintptr // *func(crt.TLS, uintptr, uintptr, uintptr) uintptr
	Xblob_reopen            uintptr // *func(crt.TLS, uintptr, int64) int32
	Xvtab_config            uintptr // *func(crt.TLS, uintptr, int32, ...interface{}) int32
	Xvtab_on_conflict       uintptr // *func(crt.TLS, uintptr) int32
	Xclose_v2               uintptr // *func(crt.TLS, uintptr) int32
	Xdb_filename            uintptr // *func(crt.TLS, uintptr, uintptr) uintptr
	Xdb_readonly            uintptr // *func(crt.TLS, uintptr, uintptr) int32
	Xdb_release_memory      uintptr // *func(crt.TLS, uintptr) int32
	Xerrstr                 uintptr // *func(crt.TLS, int32) uintptr
	Xstmt_busy              uintptr // *func(crt.TLS, uintptr) int32
	Xstmt_readonly          uintptr // *func(crt.TLS, uintptr) int32
	Xstricmp                uintptr // *func(crt.TLS, uintptr, uintptr) int32
	Xuri_boolean            uintptr // *func(crt.TLS, uintptr, uintptr, int32) int32
	Xuri_int64              uintptr // *func(crt.TLS, uintptr, uintptr, int64) int64
	Xuri_parameter          uintptr // *func(crt.TLS, uintptr, uintptr) uintptr
	Xxvsnprintf             uintptr // *func(crt.TLS, int32, uintptr, uintptr, *[]interface{}) uintptr
	Xwal_checkpoint_v2      uintptr // *func(crt.TLS, uintptr, uintptr, int32, uintptr, uintptr) int32
	Xauto_extension         uintptr // *func(crt.TLS, uintptr) int32
	Xbind_blob64            uintptr // *func(crt.TLS, uintptr, int32, uintptr, uint64, uintptr) int32
	Xbind_text64            uintptr // *func(crt.TLS, uintptr, int32, uintptr, uint64, uintptr, uint8) int32
	Xcancel_auto_extension  uintptr // *func(crt.TLS, uintptr) int32
	Xload_extension         uintptr // *func(crt.TLS, uintptr, uintptr, uintptr, uintptr) int32
	Xmalloc64               uintptr // *func(crt.TLS, uint64) uintptr
	Xmsize                  uintptr // *func(crt.TLS, uintptr) uint64
	Xrealloc64              uintptr // *func(crt.TLS, uintptr, uint64) uintptr
	Xreset_auto_extension   uintptr // *func(crt.TLS)
	Xresult_blob64          uintptr // *func(crt.TLS, uintptr, uintptr, uint64, uintptr)
	Xresult_text64          uintptr // *func(crt.TLS, uintptr, uintptr, uint64, uintptr, uint8)
	Xstrglob                uintptr // *func(crt.TLS, uintptr, uintptr) int32
	Xvalue_dup              uintptr // *func(crt.TLS, uintptr) uintptr
	Xvalue_free             uintptr // *func(crt.TLS, uintptr)
	Xresult_zeroblob64      uintptr // *func(crt.TLS, uintptr, uint64) int32
	Xbind_zeroblob64        uintptr // *func(crt.TLS, uintptr, int32, uint64) int32
	Xvalue_subtype          uintptr // *func(crt.TLS, uintptr) uint32
	Xresult_subtype         uintptr // *func(crt.TLS, uintptr, uint32)
	Xstatus64               uintptr // *func(crt.TLS, int32, uintptr, uintptr, int32) int32
	Xstrlike                uintptr // *func(crt.TLS, uintptr, uintptr, uint32) int32
	Xdb_cacheflush          uintptr // *func(crt.TLS, uintptr) int32
	Xsystem_errno           uintptr // *func(crt.TLS, uintptr) int32
	Xtrace_v2               uintptr // *func(crt.TLS, uintptr, uint32, uintptr, uintptr) int32
	Xexpanded_sql           uintptr // *func(crt.TLS, uintptr) uintptr
	Xset_last_insert_rowid  uintptr // *func(crt.TLS, uintptr, int64)
	Xprepare_v3             uintptr // *func(crt.TLS, uintptr, uintptr, int32, uint32, uintptr, uintptr) int32
	Xprepare16_v3           uintptr // *func(crt.TLS, uintptr, uintptr, int32, uint32, uintptr, uintptr) int32
	Xbind_pointer           uintptr // *func(crt.TLS, uintptr, int32, uintptr, uintptr, uintptr) int32
	Xresult_pointer         uintptr // *func(crt.TLS, uintptr, uintptr, uintptr, uintptr)
	Xvalue_pointer          uintptr // *func(crt.TLS, uintptr, uintptr) uintptr
}

// _522sqlite3Autoext struct{XnExt uint32;XaExt **func(crt.TLS);}, escapes: true, sqlite3.c:113489:3
var _522sqlite3Autoext = bss + 11376

// _523sqlite3BeginBenignMalloc is defined at sqlite3.c:21186:21
func _523sqlite3BeginBenignMalloc(tls crt.TLS) {
	if (*(*uintptr)(unsafe.Pointer(_410sqlite3Hooks))) == 0 {
		goto _1
	}

	fn137(*(*uintptr)(unsafe.Pointer(_410sqlite3Hooks)))(tls)
_1:
}

// _524sqlite3EndBenignMalloc is defined at sqlite3.c:21192:21
func _524sqlite3EndBenignMalloc(tls crt.TLS) {
	if (*(*uintptr)(unsafe.Pointer(_410sqlite3Hooks + 8))) == 0 {
		goto _1
	}

	fn137(*(*uintptr)(unsafe.Pointer(_410sqlite3Hooks + 8)))(tls)
_1:
}

// Xsqlite3_wal_hook is defined at sqlite3.c:144043:17
func Xsqlite3_wal_hook(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _xCallback uintptr /* *func(crt.TLS, uintptr, uintptr, uintptr, int32) int32 */, _pArg uintptr /* *void */) (r uintptr /* *void */) {
	var _pRet uintptr // *void

	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	_pRet = *(*uintptr)(unsafe.Pointer(_db + 304))
	*(*uintptr)(unsafe.Pointer(_db + 296)) = _xCallback
	*(*uintptr)(unsafe.Pointer(_db + 304)) = _pArg
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	return _pRet
}

// _525sqlite3WalDefaultHook is defined at sqlite3.c:143996:20
func _525sqlite3WalDefaultHook(tls crt.TLS, _pClientData uintptr /* *void */, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _zDb uintptr /* *int8 */, _nFrame int32) (r int32) {
	if _nFrame < int32(int64(_pClientData)) {
		goto _1
	}

	_523sqlite3BeginBenignMalloc(tls)
	Xsqlite3_wal_checkpoint(tls, _db, _zDb)
	_524sqlite3EndBenignMalloc(tls)
_1:
	return int32(0)
}

// _526valueToText is defined at sqlite3.c:71481:35
func _526valueToText(tls crt.TLS, _pVal uintptr /* *Tsqlite3_value = Ssqlite3_value */, _enc uint8) (r uintptr /* *void */) {
	if (int32(*(*uint16)(unsafe.Pointer(_pVal + 8))) & int32(18)) == 0 {
		goto _1
	}

	if func() int32 {
		if int32(*(*uint16)(unsafe.Pointer(_pVal + 8)))&int32(0x4000) != 0 {
			return _442sqlite3VdbeMemExpandBlob(tls, _pVal)
		}
		return int32(0)
	}() == 0 {
		goto _3
	}

	return null

_3:
	{
		p := &(*(*uint16)(unsafe.Pointer(_pVal + 8)))
		*p = uint16(int32(*p) | int32(0x2))
	}
	if int32(*(*uint8)(unsafe.Pointer(_pVal + 10))) == (int32(_enc) & int32(-9)) {
		goto _4
	}

	_396sqlite3VdbeChangeEncoding(tls, _pVal, int32(_enc)&int32(-9))
_4:
	if (int32(_enc)&int32(8)) == int32(0) || int32(1) != (int32(1)&int32(int64(*(*uintptr)(unsafe.Pointer(_pVal + 16))))) {
		goto _5
	}

	if _543sqlite3VdbeMemMakeWriteable(tls, _pVal) == int32(0) {
		goto _6
	}

	return null

_6:
_5:
	_649sqlite3VdbeMemNulTerminate(tls, _pVal)
	goto _2

_1:
	_650sqlite3VdbeMemStringify(tls, _pVal, _enc, uint8(0))

_2:
	if int32(*(*uint8)(unsafe.Pointer(_pVal + 10))) != (int32(_enc) & int32(-9)) {
		goto _7
	}

	return *(*uintptr)(unsafe.Pointer(_pVal + 16))

	goto _8

_7:
	return null

_8:
	return r
}

// _527sqlite3VdbeMemSetInt64 is defined at sqlite3.c:71146:21
func _527sqlite3VdbeMemSetInt64(tls crt.TLS, _pMem uintptr /* *TMem = Ssqlite3_value */, _val int64) {
	if (int32(*(*uint16)(unsafe.Pointer(_pMem + 8))) & int32(9312)) == int32(0) {
		goto _1
	}

	_860vdbeReleaseAndSetInt64(tls, _pMem, _val)
	goto _2

_1:
	*(*int64)(unsafe.Pointer(_pMem)) = _val
	*(*uint16)(unsafe.Pointer(_pMem + 8)) = uint16(0x4)
_2:
}

// _528aType [32]uint8, escapes: true, sqlite3.c:77141:19
var _528aType = ds + 6997

// _529KeccakF1600Step is defined at shell.c:892:13
func _529KeccakF1600Step(tls crt.TLS, _p uintptr /* *TSHA3Context = SSHA3Context */) {
	var (
		_i  int32
		_B0 uint64
		_B1 uint64
		_B2 uint64
		_B3 uint64
		_B4 uint64
		_C0 uint64
		_C1 uint64
		_C2 uint64
		_C3 uint64
		_C4 uint64
		_D0 uint64
		_D1 uint64
		_D2 uint64
		_D3 uint64
		_D4 uint64
	)
	_i = int32(0)
_1:
	if _i >= int32(24) {
		goto _3
	}

	_C0 = ((((*(*uint64)(unsafe.Pointer(_p))) ^ (*(*uint64)(unsafe.Pointer(_p + 40)))) ^ (*(*uint64)(unsafe.Pointer(_p + 80)))) ^ (*(*uint64)(unsafe.Pointer(_p + 120)))) ^ (*(*uint64)(unsafe.Pointer(_p + 160)))
	_C1 = ((((*(*uint64)(unsafe.Pointer(_p + 8))) ^ (*(*uint64)(unsafe.Pointer(_p + 48)))) ^ (*(*uint64)(unsafe.Pointer(_p + 88)))) ^ (*(*uint64)(unsafe.Pointer(_p + 128)))) ^ (*(*uint64)(unsafe.Pointer(_p + 168)))
	_C2 = ((((*(*uint64)(unsafe.Pointer(_p + 16))) ^ (*(*uint64)(unsafe.Pointer(_p + 56)))) ^ (*(*uint64)(unsafe.Pointer(_p + 96)))) ^ (*(*uint64)(unsafe.Pointer(_p + 136)))) ^ (*(*uint64)(unsafe.Pointer(_p + 176)))
	_C3 = ((((*(*uint64)(unsafe.Pointer(_p + 24))) ^ (*(*uint64)(unsafe.Pointer(_p + 64)))) ^ (*(*uint64)(unsafe.Pointer(_p + 104)))) ^ (*(*uint64)(unsafe.Pointer(_p + 144)))) ^ (*(*uint64)(unsafe.Pointer(_p + 184)))
	_C4 = ((((*(*uint64)(unsafe.Pointer(_p + 32))) ^ (*(*uint64)(unsafe.Pointer(_p + 72)))) ^ (*(*uint64)(unsafe.Pointer(_p + 112)))) ^ (*(*uint64)(unsafe.Pointer(_p + 152)))) ^ (*(*uint64)(unsafe.Pointer(_p + 192)))
	_D0 = _C4 ^ ((_C1 << (uint(1) % 64)) | (_C1 >> (uint(63) % 64)))
	_D1 = _C0 ^ ((_C2 << (uint(1) % 64)) | (_C2 >> (uint(63) % 64)))
	_D2 = _C1 ^ ((_C3 << (uint(1) % 64)) | (_C3 >> (uint(63) % 64)))
	_D3 = _C2 ^ ((_C4 << (uint(1) % 64)) | (_C4 >> (uint(63) % 64)))
	_D4 = _C3 ^ ((_C0 << (uint(1) % 64)) | (_C0 >> (uint(63) % 64)))
	_B0 = (*(*uint64)(unsafe.Pointer(_p))) ^ _D0
	_B1 = (((*(*uint64)(unsafe.Pointer(_p + 48))) ^ _D1) << (uint(44) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 48))) ^ _D1) >> (uint(20) % 64))
	_B2 = (((*(*uint64)(unsafe.Pointer(_p + 96))) ^ _D2) << (uint(43) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 96))) ^ _D2) >> (uint(21) % 64))
	_B3 = (((*(*uint64)(unsafe.Pointer(_p + 144))) ^ _D3) << (uint(21) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 144))) ^ _D3) >> (uint(43) % 64))
	_B4 = (((*(*uint64)(unsafe.Pointer(_p + 192))) ^ _D4) << (uint(14) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 192))) ^ _D4) >> (uint(50) % 64))
	*(*uint64)(unsafe.Pointer(_p)) = _B0 ^ ((^_B1) & _B2)
	{
		p := &*(*uint64)(unsafe.Pointer(_p))
		*p = uint64(uint64(*p) ^ (*(*uint64)(unsafe.Pointer(_861RC + 8*uintptr(_i)))))
	}
	*(*uint64)(unsafe.Pointer(_p + 48)) = _B1 ^ ((^_B2) & _B3)
	*(*uint64)(unsafe.Pointer(_p + 96)) = _B2 ^ ((^_B3) & _B4)
	*(*uint64)(unsafe.Pointer(_p + 144)) = _B3 ^ ((^_B4) & _B0)
	*(*uint64)(unsafe.Pointer(_p + 192)) = _B4 ^ ((^_B0) & _B1)
	_B2 = (((*(*uint64)(unsafe.Pointer(_p + 80))) ^ _D0) << (uint(3) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 80))) ^ _D0) >> (uint(61) % 64))
	_B3 = (((*(*uint64)(unsafe.Pointer(_p + 128))) ^ _D1) << (uint(45) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 128))) ^ _D1) >> (uint(19) % 64))
	_B4 = (((*(*uint64)(unsafe.Pointer(_p + 176))) ^ _D2) << (uint(61) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 176))) ^ _D2) >> (uint(3) % 64))
	_B0 = (((*(*uint64)(unsafe.Pointer(_p + 24))) ^ _D3) << (uint(28) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 24))) ^ _D3) >> (uint(36) % 64))
	_B1 = (((*(*uint64)(unsafe.Pointer(_p + 72))) ^ _D4) << (uint(20) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 72))) ^ _D4) >> (uint(44) % 64))
	*(*uint64)(unsafe.Pointer(_p + 80)) = _B0 ^ ((^_B1) & _B2)
	*(*uint64)(unsafe.Pointer(_p + 128)) = _B1 ^ ((^_B2) & _B3)
	*(*uint64)(unsafe.Pointer(_p + 176)) = _B2 ^ ((^_B3) & _B4)
	*(*uint64)(unsafe.Pointer(_p + 24)) = _B3 ^ ((^_B4) & _B0)
	*(*uint64)(unsafe.Pointer(_p + 72)) = _B4 ^ ((^_B0) & _B1)
	_B4 = (((*(*uint64)(unsafe.Pointer(_p + 160))) ^ _D0) << (uint(18) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 160))) ^ _D0) >> (uint(46) % 64))
	_B0 = (((*(*uint64)(unsafe.Pointer(_p + 8))) ^ _D1) << (uint(1) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 8))) ^ _D1) >> (uint(63) % 64))
	_B1 = (((*(*uint64)(unsafe.Pointer(_p + 56))) ^ _D2) << (uint(6) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 56))) ^ _D2) >> (uint(58) % 64))
	_B2 = (((*(*uint64)(unsafe.Pointer(_p + 104))) ^ _D3) << (uint(25) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 104))) ^ _D3) >> (uint(39) % 64))
	_B3 = (((*(*uint64)(unsafe.Pointer(_p + 152))) ^ _D4) << (uint(8) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 152))) ^ _D4) >> (uint(56) % 64))
	*(*uint64)(unsafe.Pointer(_p + 160)) = _B0 ^ ((^_B1) & _B2)
	*(*uint64)(unsafe.Pointer(_p + 8)) = _B1 ^ ((^_B2) & _B3)
	*(*uint64)(unsafe.Pointer(_p + 56)) = _B2 ^ ((^_B3) & _B4)
	*(*uint64)(unsafe.Pointer(_p + 104)) = _B3 ^ ((^_B4) & _B0)
	*(*uint64)(unsafe.Pointer(_p + 152)) = _B4 ^ ((^_B0) & _B1)
	_B1 = (((*(*uint64)(unsafe.Pointer(_p + 40))) ^ _D0) << (uint(36) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 40))) ^ _D0) >> (uint(28) % 64))
	_B2 = (((*(*uint64)(unsafe.Pointer(_p + 88))) ^ _D1) << (uint(10) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 88))) ^ _D1) >> (uint(54) % 64))
	_B3 = (((*(*uint64)(unsafe.Pointer(_p + 136))) ^ _D2) << (uint(15) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 136))) ^ _D2) >> (uint(49) % 64))
	_B4 = (((*(*uint64)(unsafe.Pointer(_p + 184))) ^ _D3) << (uint(56) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 184))) ^ _D3) >> (uint(8) % 64))
	_B0 = (((*(*uint64)(unsafe.Pointer(_p + 32))) ^ _D4) << (uint(27) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 32))) ^ _D4) >> (uint(37) % 64))
	*(*uint64)(unsafe.Pointer(_p + 40)) = _B0 ^ ((^_B1) & _B2)
	*(*uint64)(unsafe.Pointer(_p + 88)) = _B1 ^ ((^_B2) & _B3)
	*(*uint64)(unsafe.Pointer(_p + 136)) = _B2 ^ ((^_B3) & _B4)
	*(*uint64)(unsafe.Pointer(_p + 184)) = _B3 ^ ((^_B4) & _B0)
	*(*uint64)(unsafe.Pointer(_p + 32)) = _B4 ^ ((^_B0) & _B1)
	_B3 = (((*(*uint64)(unsafe.Pointer(_p + 120))) ^ _D0) << (uint(41) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 120))) ^ _D0) >> (uint(23) % 64))
	_B4 = (((*(*uint64)(unsafe.Pointer(_p + 168))) ^ _D1) << (uint(2) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 168))) ^ _D1) >> (uint(62) % 64))
	_B0 = (((*(*uint64)(unsafe.Pointer(_p + 16))) ^ _D2) << (uint(62) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 16))) ^ _D2) >> (uint(2) % 64))
	_B1 = (((*(*uint64)(unsafe.Pointer(_p + 64))) ^ _D3) << (uint(55) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 64))) ^ _D3) >> (uint(9) % 64))
	_B2 = (((*(*uint64)(unsafe.Pointer(_p + 112))) ^ _D4) << (uint(39) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 112))) ^ _D4) >> (uint(25) % 64))
	*(*uint64)(unsafe.Pointer(_p + 120)) = _B0 ^ ((^_B1) & _B2)
	*(*uint64)(unsafe.Pointer(_p + 168)) = _B1 ^ ((^_B2) & _B3)
	*(*uint64)(unsafe.Pointer(_p + 16)) = _B2 ^ ((^_B3) & _B4)
	*(*uint64)(unsafe.Pointer(_p + 64)) = _B3 ^ ((^_B4) & _B0)
	*(*uint64)(unsafe.Pointer(_p + 112)) = _B4 ^ ((^_B0) & _B1)
	_C0 = ((((*(*uint64)(unsafe.Pointer(_p))) ^ (*(*uint64)(unsafe.Pointer(_p + 80)))) ^ (*(*uint64)(unsafe.Pointer(_p + 160)))) ^ (*(*uint64)(unsafe.Pointer(_p + 40)))) ^ (*(*uint64)(unsafe.Pointer(_p + 120)))
	_C1 = ((((*(*uint64)(unsafe.Pointer(_p + 48))) ^ (*(*uint64)(unsafe.Pointer(_p + 128)))) ^ (*(*uint64)(unsafe.Pointer(_p + 8)))) ^ (*(*uint64)(unsafe.Pointer(_p + 88)))) ^ (*(*uint64)(unsafe.Pointer(_p + 168)))
	_C2 = ((((*(*uint64)(unsafe.Pointer(_p + 96))) ^ (*(*uint64)(unsafe.Pointer(_p + 176)))) ^ (*(*uint64)(unsafe.Pointer(_p + 56)))) ^ (*(*uint64)(unsafe.Pointer(_p + 136)))) ^ (*(*uint64)(unsafe.Pointer(_p + 16)))
	_C3 = ((((*(*uint64)(unsafe.Pointer(_p + 144))) ^ (*(*uint64)(unsafe.Pointer(_p + 24)))) ^ (*(*uint64)(unsafe.Pointer(_p + 104)))) ^ (*(*uint64)(unsafe.Pointer(_p + 184)))) ^ (*(*uint64)(unsafe.Pointer(_p + 64)))
	_C4 = ((((*(*uint64)(unsafe.Pointer(_p + 192))) ^ (*(*uint64)(unsafe.Pointer(_p + 72)))) ^ (*(*uint64)(unsafe.Pointer(_p + 152)))) ^ (*(*uint64)(unsafe.Pointer(_p + 32)))) ^ (*(*uint64)(unsafe.Pointer(_p + 112)))
	_D0 = _C4 ^ ((_C1 << (uint(1) % 64)) | (_C1 >> (uint(63) % 64)))
	_D1 = _C0 ^ ((_C2 << (uint(1) % 64)) | (_C2 >> (uint(63) % 64)))
	_D2 = _C1 ^ ((_C3 << (uint(1) % 64)) | (_C3 >> (uint(63) % 64)))
	_D3 = _C2 ^ ((_C4 << (uint(1) % 64)) | (_C4 >> (uint(63) % 64)))
	_D4 = _C3 ^ ((_C0 << (uint(1) % 64)) | (_C0 >> (uint(63) % 64)))
	_B0 = (*(*uint64)(unsafe.Pointer(_p))) ^ _D0
	_B1 = (((*(*uint64)(unsafe.Pointer(_p + 128))) ^ _D1) << (uint(44) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 128))) ^ _D1) >> (uint(20) % 64))
	_B2 = (((*(*uint64)(unsafe.Pointer(_p + 56))) ^ _D2) << (uint(43) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 56))) ^ _D2) >> (uint(21) % 64))
	_B3 = (((*(*uint64)(unsafe.Pointer(_p + 184))) ^ _D3) << (uint(21) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 184))) ^ _D3) >> (uint(43) % 64))
	_B4 = (((*(*uint64)(unsafe.Pointer(_p + 112))) ^ _D4) << (uint(14) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 112))) ^ _D4) >> (uint(50) % 64))
	*(*uint64)(unsafe.Pointer(_p)) = _B0 ^ ((^_B1) & _B2)
	{
		p := &*(*uint64)(unsafe.Pointer(_p))
		*p = uint64(uint64(*p) ^ (*(*uint64)(unsafe.Pointer(_861RC + 8*uintptr(_i+int32(1))))))
	}
	*(*uint64)(unsafe.Pointer(_p + 128)) = _B1 ^ ((^_B2) & _B3)
	*(*uint64)(unsafe.Pointer(_p + 56)) = _B2 ^ ((^_B3) & _B4)
	*(*uint64)(unsafe.Pointer(_p + 184)) = _B3 ^ ((^_B4) & _B0)
	*(*uint64)(unsafe.Pointer(_p + 112)) = _B4 ^ ((^_B0) & _B1)
	_B2 = (((*(*uint64)(unsafe.Pointer(_p + 160))) ^ _D0) << (uint(3) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 160))) ^ _D0) >> (uint(61) % 64))
	_B3 = (((*(*uint64)(unsafe.Pointer(_p + 88))) ^ _D1) << (uint(45) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 88))) ^ _D1) >> (uint(19) % 64))
	_B4 = (((*(*uint64)(unsafe.Pointer(_p + 16))) ^ _D2) << (uint(61) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 16))) ^ _D2) >> (uint(3) % 64))
	_B0 = (((*(*uint64)(unsafe.Pointer(_p + 144))) ^ _D3) << (uint(28) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 144))) ^ _D3) >> (uint(36) % 64))
	_B1 = (((*(*uint64)(unsafe.Pointer(_p + 72))) ^ _D4) << (uint(20) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 72))) ^ _D4) >> (uint(44) % 64))
	*(*uint64)(unsafe.Pointer(_p + 160)) = _B0 ^ ((^_B1) & _B2)
	*(*uint64)(unsafe.Pointer(_p + 88)) = _B1 ^ ((^_B2) & _B3)
	*(*uint64)(unsafe.Pointer(_p + 16)) = _B2 ^ ((^_B3) & _B4)
	*(*uint64)(unsafe.Pointer(_p + 144)) = _B3 ^ ((^_B4) & _B0)
	*(*uint64)(unsafe.Pointer(_p + 72)) = _B4 ^ ((^_B0) & _B1)
	_B4 = (((*(*uint64)(unsafe.Pointer(_p + 120))) ^ _D0) << (uint(18) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 120))) ^ _D0) >> (uint(46) % 64))
	_B0 = (((*(*uint64)(unsafe.Pointer(_p + 48))) ^ _D1) << (uint(1) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 48))) ^ _D1) >> (uint(63) % 64))
	_B1 = (((*(*uint64)(unsafe.Pointer(_p + 176))) ^ _D2) << (uint(6) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 176))) ^ _D2) >> (uint(58) % 64))
	_B2 = (((*(*uint64)(unsafe.Pointer(_p + 104))) ^ _D3) << (uint(25) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 104))) ^ _D3) >> (uint(39) % 64))
	_B3 = (((*(*uint64)(unsafe.Pointer(_p + 32))) ^ _D4) << (uint(8) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 32))) ^ _D4) >> (uint(56) % 64))
	*(*uint64)(unsafe.Pointer(_p + 120)) = _B0 ^ ((^_B1) & _B2)
	*(*uint64)(unsafe.Pointer(_p + 48)) = _B1 ^ ((^_B2) & _B3)
	*(*uint64)(unsafe.Pointer(_p + 176)) = _B2 ^ ((^_B3) & _B4)
	*(*uint64)(unsafe.Pointer(_p + 104)) = _B3 ^ ((^_B4) & _B0)
	*(*uint64)(unsafe.Pointer(_p + 32)) = _B4 ^ ((^_B0) & _B1)
	_B1 = (((*(*uint64)(unsafe.Pointer(_p + 80))) ^ _D0) << (uint(36) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 80))) ^ _D0) >> (uint(28) % 64))
	_B2 = (((*(*uint64)(unsafe.Pointer(_p + 8))) ^ _D1) << (uint(10) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 8))) ^ _D1) >> (uint(54) % 64))
	_B3 = (((*(*uint64)(unsafe.Pointer(_p + 136))) ^ _D2) << (uint(15) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 136))) ^ _D2) >> (uint(49) % 64))
	_B4 = (((*(*uint64)(unsafe.Pointer(_p + 64))) ^ _D3) << (uint(56) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 64))) ^ _D3) >> (uint(8) % 64))
	_B0 = (((*(*uint64)(unsafe.Pointer(_p + 192))) ^ _D4) << (uint(27) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 192))) ^ _D4) >> (uint(37) % 64))
	*(*uint64)(unsafe.Pointer(_p + 80)) = _B0 ^ ((^_B1) & _B2)
	*(*uint64)(unsafe.Pointer(_p + 8)) = _B1 ^ ((^_B2) & _B3)
	*(*uint64)(unsafe.Pointer(_p + 136)) = _B2 ^ ((^_B3) & _B4)
	*(*uint64)(unsafe.Pointer(_p + 64)) = _B3 ^ ((^_B4) & _B0)
	*(*uint64)(unsafe.Pointer(_p + 192)) = _B4 ^ ((^_B0) & _B1)
	_B3 = (((*(*uint64)(unsafe.Pointer(_p + 40))) ^ _D0) << (uint(41) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 40))) ^ _D0) >> (uint(23) % 64))
	_B4 = (((*(*uint64)(unsafe.Pointer(_p + 168))) ^ _D1) << (uint(2) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 168))) ^ _D1) >> (uint(62) % 64))
	_B0 = (((*(*uint64)(unsafe.Pointer(_p + 96))) ^ _D2) << (uint(62) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 96))) ^ _D2) >> (uint(2) % 64))
	_B1 = (((*(*uint64)(unsafe.Pointer(_p + 24))) ^ _D3) << (uint(55) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 24))) ^ _D3) >> (uint(9) % 64))
	_B2 = (((*(*uint64)(unsafe.Pointer(_p + 152))) ^ _D4) << (uint(39) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 152))) ^ _D4) >> (uint(25) % 64))
	*(*uint64)(unsafe.Pointer(_p + 40)) = _B0 ^ ((^_B1) & _B2)
	*(*uint64)(unsafe.Pointer(_p + 168)) = _B1 ^ ((^_B2) & _B3)
	*(*uint64)(unsafe.Pointer(_p + 96)) = _B2 ^ ((^_B3) & _B4)
	*(*uint64)(unsafe.Pointer(_p + 24)) = _B3 ^ ((^_B4) & _B0)
	*(*uint64)(unsafe.Pointer(_p + 152)) = _B4 ^ ((^_B0) & _B1)
	_C0 = ((((*(*uint64)(unsafe.Pointer(_p))) ^ (*(*uint64)(unsafe.Pointer(_p + 160)))) ^ (*(*uint64)(unsafe.Pointer(_p + 120)))) ^ (*(*uint64)(unsafe.Pointer(_p + 80)))) ^ (*(*uint64)(unsafe.Pointer(_p + 40)))
	_C1 = ((((*(*uint64)(unsafe.Pointer(_p + 128))) ^ (*(*uint64)(unsafe.Pointer(_p + 88)))) ^ (*(*uint64)(unsafe.Pointer(_p + 48)))) ^ (*(*uint64)(unsafe.Pointer(_p + 8)))) ^ (*(*uint64)(unsafe.Pointer(_p + 168)))
	_C2 = ((((*(*uint64)(unsafe.Pointer(_p + 56))) ^ (*(*uint64)(unsafe.Pointer(_p + 16)))) ^ (*(*uint64)(unsafe.Pointer(_p + 176)))) ^ (*(*uint64)(unsafe.Pointer(_p + 136)))) ^ (*(*uint64)(unsafe.Pointer(_p + 96)))
	_C3 = ((((*(*uint64)(unsafe.Pointer(_p + 184))) ^ (*(*uint64)(unsafe.Pointer(_p + 144)))) ^ (*(*uint64)(unsafe.Pointer(_p + 104)))) ^ (*(*uint64)(unsafe.Pointer(_p + 64)))) ^ (*(*uint64)(unsafe.Pointer(_p + 24)))
	_C4 = ((((*(*uint64)(unsafe.Pointer(_p + 112))) ^ (*(*uint64)(unsafe.Pointer(_p + 72)))) ^ (*(*uint64)(unsafe.Pointer(_p + 32)))) ^ (*(*uint64)(unsafe.Pointer(_p + 192)))) ^ (*(*uint64)(unsafe.Pointer(_p + 152)))
	_D0 = _C4 ^ ((_C1 << (uint(1) % 64)) | (_C1 >> (uint(63) % 64)))
	_D1 = _C0 ^ ((_C2 << (uint(1) % 64)) | (_C2 >> (uint(63) % 64)))
	_D2 = _C1 ^ ((_C3 << (uint(1) % 64)) | (_C3 >> (uint(63) % 64)))
	_D3 = _C2 ^ ((_C4 << (uint(1) % 64)) | (_C4 >> (uint(63) % 64)))
	_D4 = _C3 ^ ((_C0 << (uint(1) % 64)) | (_C0 >> (uint(63) % 64)))
	_B0 = (*(*uint64)(unsafe.Pointer(_p))) ^ _D0
	_B1 = (((*(*uint64)(unsafe.Pointer(_p + 88))) ^ _D1) << (uint(44) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 88))) ^ _D1) >> (uint(20) % 64))
	_B2 = (((*(*uint64)(unsafe.Pointer(_p + 176))) ^ _D2) << (uint(43) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 176))) ^ _D2) >> (uint(21) % 64))
	_B3 = (((*(*uint64)(unsafe.Pointer(_p + 64))) ^ _D3) << (uint(21) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 64))) ^ _D3) >> (uint(43) % 64))
	_B4 = (((*(*uint64)(unsafe.Pointer(_p + 152))) ^ _D4) << (uint(14) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 152))) ^ _D4) >> (uint(50) % 64))
	*(*uint64)(unsafe.Pointer(_p)) = _B0 ^ ((^_B1) & _B2)
	{
		p := &*(*uint64)(unsafe.Pointer(_p))
		*p = uint64(uint64(*p) ^ (*(*uint64)(unsafe.Pointer(_861RC + 8*uintptr(_i+int32(2))))))
	}
	*(*uint64)(unsafe.Pointer(_p + 88)) = _B1 ^ ((^_B2) & _B3)
	*(*uint64)(unsafe.Pointer(_p + 176)) = _B2 ^ ((^_B3) & _B4)
	*(*uint64)(unsafe.Pointer(_p + 64)) = _B3 ^ ((^_B4) & _B0)
	*(*uint64)(unsafe.Pointer(_p + 152)) = _B4 ^ ((^_B0) & _B1)
	_B2 = (((*(*uint64)(unsafe.Pointer(_p + 120))) ^ _D0) << (uint(3) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 120))) ^ _D0) >> (uint(61) % 64))
	_B3 = (((*(*uint64)(unsafe.Pointer(_p + 8))) ^ _D1) << (uint(45) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 8))) ^ _D1) >> (uint(19) % 64))
	_B4 = (((*(*uint64)(unsafe.Pointer(_p + 96))) ^ _D2) << (uint(61) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 96))) ^ _D2) >> (uint(3) % 64))
	_B0 = (((*(*uint64)(unsafe.Pointer(_p + 184))) ^ _D3) << (uint(28) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 184))) ^ _D3) >> (uint(36) % 64))
	_B1 = (((*(*uint64)(unsafe.Pointer(_p + 72))) ^ _D4) << (uint(20) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 72))) ^ _D4) >> (uint(44) % 64))
	*(*uint64)(unsafe.Pointer(_p + 120)) = _B0 ^ ((^_B1) & _B2)
	*(*uint64)(unsafe.Pointer(_p + 8)) = _B1 ^ ((^_B2) & _B3)
	*(*uint64)(unsafe.Pointer(_p + 96)) = _B2 ^ ((^_B3) & _B4)
	*(*uint64)(unsafe.Pointer(_p + 184)) = _B3 ^ ((^_B4) & _B0)
	*(*uint64)(unsafe.Pointer(_p + 72)) = _B4 ^ ((^_B0) & _B1)
	_B4 = (((*(*uint64)(unsafe.Pointer(_p + 40))) ^ _D0) << (uint(18) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 40))) ^ _D0) >> (uint(46) % 64))
	_B0 = (((*(*uint64)(unsafe.Pointer(_p + 128))) ^ _D1) << (uint(1) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 128))) ^ _D1) >> (uint(63) % 64))
	_B1 = (((*(*uint64)(unsafe.Pointer(_p + 16))) ^ _D2) << (uint(6) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 16))) ^ _D2) >> (uint(58) % 64))
	_B2 = (((*(*uint64)(unsafe.Pointer(_p + 104))) ^ _D3) << (uint(25) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 104))) ^ _D3) >> (uint(39) % 64))
	_B3 = (((*(*uint64)(unsafe.Pointer(_p + 192))) ^ _D4) << (uint(8) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 192))) ^ _D4) >> (uint(56) % 64))
	*(*uint64)(unsafe.Pointer(_p + 40)) = _B0 ^ ((^_B1) & _B2)
	*(*uint64)(unsafe.Pointer(_p + 128)) = _B1 ^ ((^_B2) & _B3)
	*(*uint64)(unsafe.Pointer(_p + 16)) = _B2 ^ ((^_B3) & _B4)
	*(*uint64)(unsafe.Pointer(_p + 104)) = _B3 ^ ((^_B4) & _B0)
	*(*uint64)(unsafe.Pointer(_p + 192)) = _B4 ^ ((^_B0) & _B1)
	_B1 = (((*(*uint64)(unsafe.Pointer(_p + 160))) ^ _D0) << (uint(36) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 160))) ^ _D0) >> (uint(28) % 64))
	_B2 = (((*(*uint64)(unsafe.Pointer(_p + 48))) ^ _D1) << (uint(10) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 48))) ^ _D1) >> (uint(54) % 64))
	_B3 = (((*(*uint64)(unsafe.Pointer(_p + 136))) ^ _D2) << (uint(15) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 136))) ^ _D2) >> (uint(49) % 64))
	_B4 = (((*(*uint64)(unsafe.Pointer(_p + 24))) ^ _D3) << (uint(56) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 24))) ^ _D3) >> (uint(8) % 64))
	_B0 = (((*(*uint64)(unsafe.Pointer(_p + 112))) ^ _D4) << (uint(27) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 112))) ^ _D4) >> (uint(37) % 64))
	*(*uint64)(unsafe.Pointer(_p + 160)) = _B0 ^ ((^_B1) & _B2)
	*(*uint64)(unsafe.Pointer(_p + 48)) = _B1 ^ ((^_B2) & _B3)
	*(*uint64)(unsafe.Pointer(_p + 136)) = _B2 ^ ((^_B3) & _B4)
	*(*uint64)(unsafe.Pointer(_p + 24)) = _B3 ^ ((^_B4) & _B0)
	*(*uint64)(unsafe.Pointer(_p + 112)) = _B4 ^ ((^_B0) & _B1)
	_B3 = (((*(*uint64)(unsafe.Pointer(_p + 80))) ^ _D0) << (uint(41) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 80))) ^ _D0) >> (uint(23) % 64))
	_B4 = (((*(*uint64)(unsafe.Pointer(_p + 168))) ^ _D1) << (uint(2) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 168))) ^ _D1) >> (uint(62) % 64))
	_B0 = (((*(*uint64)(unsafe.Pointer(_p + 56))) ^ _D2) << (uint(62) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 56))) ^ _D2) >> (uint(2) % 64))
	_B1 = (((*(*uint64)(unsafe.Pointer(_p + 144))) ^ _D3) << (uint(55) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 144))) ^ _D3) >> (uint(9) % 64))
	_B2 = (((*(*uint64)(unsafe.Pointer(_p + 32))) ^ _D4) << (uint(39) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 32))) ^ _D4) >> (uint(25) % 64))
	*(*uint64)(unsafe.Pointer(_p + 80)) = _B0 ^ ((^_B1) & _B2)
	*(*uint64)(unsafe.Pointer(_p + 168)) = _B1 ^ ((^_B2) & _B3)
	*(*uint64)(unsafe.Pointer(_p + 56)) = _B2 ^ ((^_B3) & _B4)
	*(*uint64)(unsafe.Pointer(_p + 144)) = _B3 ^ ((^_B4) & _B0)
	*(*uint64)(unsafe.Pointer(_p + 32)) = _B4 ^ ((^_B0) & _B1)
	_C0 = ((((*(*uint64)(unsafe.Pointer(_p))) ^ (*(*uint64)(unsafe.Pointer(_p + 120)))) ^ (*(*uint64)(unsafe.Pointer(_p + 40)))) ^ (*(*uint64)(unsafe.Pointer(_p + 160)))) ^ (*(*uint64)(unsafe.Pointer(_p + 80)))
	_C1 = ((((*(*uint64)(unsafe.Pointer(_p + 88))) ^ (*(*uint64)(unsafe.Pointer(_p + 8)))) ^ (*(*uint64)(unsafe.Pointer(_p + 128)))) ^ (*(*uint64)(unsafe.Pointer(_p + 48)))) ^ (*(*uint64)(unsafe.Pointer(_p + 168)))
	_C2 = ((((*(*uint64)(unsafe.Pointer(_p + 176))) ^ (*(*uint64)(unsafe.Pointer(_p + 96)))) ^ (*(*uint64)(unsafe.Pointer(_p + 16)))) ^ (*(*uint64)(unsafe.Pointer(_p + 136)))) ^ (*(*uint64)(unsafe.Pointer(_p + 56)))
	_C3 = ((((*(*uint64)(unsafe.Pointer(_p + 64))) ^ (*(*uint64)(unsafe.Pointer(_p + 184)))) ^ (*(*uint64)(unsafe.Pointer(_p + 104)))) ^ (*(*uint64)(unsafe.Pointer(_p + 24)))) ^ (*(*uint64)(unsafe.Pointer(_p + 144)))
	_C4 = ((((*(*uint64)(unsafe.Pointer(_p + 152))) ^ (*(*uint64)(unsafe.Pointer(_p + 72)))) ^ (*(*uint64)(unsafe.Pointer(_p + 192)))) ^ (*(*uint64)(unsafe.Pointer(_p + 112)))) ^ (*(*uint64)(unsafe.Pointer(_p + 32)))
	_D0 = _C4 ^ ((_C1 << (uint(1) % 64)) | (_C1 >> (uint(63) % 64)))
	_D1 = _C0 ^ ((_C2 << (uint(1) % 64)) | (_C2 >> (uint(63) % 64)))
	_D2 = _C1 ^ ((_C3 << (uint(1) % 64)) | (_C3 >> (uint(63) % 64)))
	_D3 = _C2 ^ ((_C4 << (uint(1) % 64)) | (_C4 >> (uint(63) % 64)))
	_D4 = _C3 ^ ((_C0 << (uint(1) % 64)) | (_C0 >> (uint(63) % 64)))
	_B0 = (*(*uint64)(unsafe.Pointer(_p))) ^ _D0
	_B1 = (((*(*uint64)(unsafe.Pointer(_p + 8))) ^ _D1) << (uint(44) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 8))) ^ _D1) >> (uint(20) % 64))
	_B2 = (((*(*uint64)(unsafe.Pointer(_p + 16))) ^ _D2) << (uint(43) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 16))) ^ _D2) >> (uint(21) % 64))
	_B3 = (((*(*uint64)(unsafe.Pointer(_p + 24))) ^ _D3) << (uint(21) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 24))) ^ _D3) >> (uint(43) % 64))
	_B4 = (((*(*uint64)(unsafe.Pointer(_p + 32))) ^ _D4) << (uint(14) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 32))) ^ _D4) >> (uint(50) % 64))
	*(*uint64)(unsafe.Pointer(_p)) = _B0 ^ ((^_B1) & _B2)
	{
		p := &*(*uint64)(unsafe.Pointer(_p))
		*p = uint64(uint64(*p) ^ (*(*uint64)(unsafe.Pointer(_861RC + 8*uintptr(_i+int32(3))))))
	}
	*(*uint64)(unsafe.Pointer(_p + 8)) = _B1 ^ ((^_B2) & _B3)
	*(*uint64)(unsafe.Pointer(_p + 16)) = _B2 ^ ((^_B3) & _B4)
	*(*uint64)(unsafe.Pointer(_p + 24)) = _B3 ^ ((^_B4) & _B0)
	*(*uint64)(unsafe.Pointer(_p + 32)) = _B4 ^ ((^_B0) & _B1)
	_B2 = (((*(*uint64)(unsafe.Pointer(_p + 40))) ^ _D0) << (uint(3) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 40))) ^ _D0) >> (uint(61) % 64))
	_B3 = (((*(*uint64)(unsafe.Pointer(_p + 48))) ^ _D1) << (uint(45) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 48))) ^ _D1) >> (uint(19) % 64))
	_B4 = (((*(*uint64)(unsafe.Pointer(_p + 56))) ^ _D2) << (uint(61) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 56))) ^ _D2) >> (uint(3) % 64))
	_B0 = (((*(*uint64)(unsafe.Pointer(_p + 64))) ^ _D3) << (uint(28) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 64))) ^ _D3) >> (uint(36) % 64))
	_B1 = (((*(*uint64)(unsafe.Pointer(_p + 72))) ^ _D4) << (uint(20) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 72))) ^ _D4) >> (uint(44) % 64))
	*(*uint64)(unsafe.Pointer(_p + 40)) = _B0 ^ ((^_B1) & _B2)
	*(*uint64)(unsafe.Pointer(_p + 48)) = _B1 ^ ((^_B2) & _B3)
	*(*uint64)(unsafe.Pointer(_p + 56)) = _B2 ^ ((^_B3) & _B4)
	*(*uint64)(unsafe.Pointer(_p + 64)) = _B3 ^ ((^_B4) & _B0)
	*(*uint64)(unsafe.Pointer(_p + 72)) = _B4 ^ ((^_B0) & _B1)
	_B4 = (((*(*uint64)(unsafe.Pointer(_p + 80))) ^ _D0) << (uint(18) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 80))) ^ _D0) >> (uint(46) % 64))
	_B0 = (((*(*uint64)(unsafe.Pointer(_p + 88))) ^ _D1) << (uint(1) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 88))) ^ _D1) >> (uint(63) % 64))
	_B1 = (((*(*uint64)(unsafe.Pointer(_p + 96))) ^ _D2) << (uint(6) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 96))) ^ _D2) >> (uint(58) % 64))
	_B2 = (((*(*uint64)(unsafe.Pointer(_p + 104))) ^ _D3) << (uint(25) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 104))) ^ _D3) >> (uint(39) % 64))
	_B3 = (((*(*uint64)(unsafe.Pointer(_p + 112))) ^ _D4) << (uint(8) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 112))) ^ _D4) >> (uint(56) % 64))
	*(*uint64)(unsafe.Pointer(_p + 80)) = _B0 ^ ((^_B1) & _B2)
	*(*uint64)(unsafe.Pointer(_p + 88)) = _B1 ^ ((^_B2) & _B3)
	*(*uint64)(unsafe.Pointer(_p + 96)) = _B2 ^ ((^_B3) & _B4)
	*(*uint64)(unsafe.Pointer(_p + 104)) = _B3 ^ ((^_B4) & _B0)
	*(*uint64)(unsafe.Pointer(_p + 112)) = _B4 ^ ((^_B0) & _B1)
	_B1 = (((*(*uint64)(unsafe.Pointer(_p + 120))) ^ _D0) << (uint(36) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 120))) ^ _D0) >> (uint(28) % 64))
	_B2 = (((*(*uint64)(unsafe.Pointer(_p + 128))) ^ _D1) << (uint(10) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 128))) ^ _D1) >> (uint(54) % 64))
	_B3 = (((*(*uint64)(unsafe.Pointer(_p + 136))) ^ _D2) << (uint(15) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 136))) ^ _D2) >> (uint(49) % 64))
	_B4 = (((*(*uint64)(unsafe.Pointer(_p + 144))) ^ _D3) << (uint(56) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 144))) ^ _D3) >> (uint(8) % 64))
	_B0 = (((*(*uint64)(unsafe.Pointer(_p + 152))) ^ _D4) << (uint(27) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 152))) ^ _D4) >> (uint(37) % 64))
	*(*uint64)(unsafe.Pointer(_p + 120)) = _B0 ^ ((^_B1) & _B2)
	*(*uint64)(unsafe.Pointer(_p + 128)) = _B1 ^ ((^_B2) & _B3)
	*(*uint64)(unsafe.Pointer(_p + 136)) = _B2 ^ ((^_B3) & _B4)
	*(*uint64)(unsafe.Pointer(_p + 144)) = _B3 ^ ((^_B4) & _B0)
	*(*uint64)(unsafe.Pointer(_p + 152)) = _B4 ^ ((^_B0) & _B1)
	_B3 = (((*(*uint64)(unsafe.Pointer(_p + 160))) ^ _D0) << (uint(41) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 160))) ^ _D0) >> (uint(23) % 64))
	_B4 = (((*(*uint64)(unsafe.Pointer(_p + 168))) ^ _D1) << (uint(2) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 168))) ^ _D1) >> (uint(62) % 64))
	_B0 = (((*(*uint64)(unsafe.Pointer(_p + 176))) ^ _D2) << (uint(62) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 176))) ^ _D2) >> (uint(2) % 64))
	_B1 = (((*(*uint64)(unsafe.Pointer(_p + 184))) ^ _D3) << (uint(55) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 184))) ^ _D3) >> (uint(9) % 64))
	_B2 = (((*(*uint64)(unsafe.Pointer(_p + 192))) ^ _D4) << (uint(39) % 64)) | (((*(*uint64)(unsafe.Pointer(_p + 192))) ^ _D4) >> (uint(25) % 64))
	*(*uint64)(unsafe.Pointer(_p + 160)) = _B0 ^ ((^_B1) & _B2)
	*(*uint64)(unsafe.Pointer(_p + 168)) = _B1 ^ ((^_B2) & _B3)
	*(*uint64)(unsafe.Pointer(_p + 176)) = _B2 ^ ((^_B3) & _B4)
	*(*uint64)(unsafe.Pointer(_p + 184)) = _B3 ^ ((^_B4) & _B0)
	*(*uint64)(unsafe.Pointer(_p + 192)) = _B4 ^ ((^_B0) & _B1)
	_i = int32(_i + int32(4))
	goto _1

_3:
}

// Xsqlite3_value_int64 is defined at sqlite3.c:77102:25
func Xsqlite3_value_int64(tls crt.TLS, _pVal uintptr /* *Tsqlite3_value = Ssqlite3_value */) (r int64) {
	return _399sqlite3VdbeIntValue(tls, _pVal)
}

type Ssqlite3_module struct {
	XiVersion      int32
	XxCreate       uintptr // *func(crt.TLS, uintptr, uintptr, int32, uintptr, uintptr, uintptr) int32
	XxConnect      uintptr // *func(crt.TLS, uintptr, uintptr, int32, uintptr, uintptr, uintptr) int32
	XxBestIndex    uintptr // *func(crt.TLS, uintptr, uintptr) int32
	XxDisconnect   uintptr // *func(crt.TLS, uintptr) int32
	XxDestroy      uintptr // *func(crt.TLS, uintptr) int32
	XxOpen         uintptr // *func(crt.TLS, uintptr, uintptr) int32
	XxClose        uintptr // *func(crt.TLS, uintptr) int32
	XxFilter       uintptr // *func(crt.TLS, uintptr, int32, uintptr, int32, uintptr) int32
	XxNext         uintptr // *func(crt.TLS, uintptr) int32
	XxEof          uintptr // *func(crt.TLS, uintptr) int32
	XxColumn       uintptr // *func(crt.TLS, uintptr, uintptr, int32) int32
	XxRowid        uintptr // *func(crt.TLS, uintptr, uintptr) int32
	XxUpdate       uintptr // *func(crt.TLS, uintptr, int32, uintptr, uintptr) int32
	XxBegin        uintptr // *func(crt.TLS, uintptr) int32
	XxSync         uintptr // *func(crt.TLS, uintptr) int32
	XxCommit       uintptr // *func(crt.TLS, uintptr) int32
	XxRollback     uintptr // *func(crt.TLS, uintptr) int32
	XxFindFunction uintptr // *func(crt.TLS, uintptr, int32, uintptr, uintptr, uintptr) int32
	XxRename       uintptr // *func(crt.TLS, uintptr, uintptr) int32
	XxSavepoint    uintptr // *func(crt.TLS, uintptr, int32) int32
	XxRelease      uintptr // *func(crt.TLS, uintptr, int32) int32
	XxRollbackTo   uintptr // *func(crt.TLS, uintptr, int32) int32
}

// _530createModule is defined at sqlite3.c:126385:12
func _530createModule(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _zName uintptr /* *int8 */, _pModule uintptr /* *Tsqlite3_module = Ssqlite3_module */, _pAux uintptr /* *void */, _xDestroy uintptr /* *func(crt.TLS, uintptr) */) (r int32) {
	var _rc int32

	_rc = int32(0)
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	if _424sqlite3HashFind(tls, _db+448, _zName) == 0 {
		goto _1
	}

	_rc = _29sqlite3MisuseError(tls, int32(126396))
	goto _2

_1:
	_862sqlite3VtabCreateModule(tls, _db, _zName, _pModule, _pAux, _xDestroy)
_2:
	_rc = _182sqlite3ApiExit(tls, _db, _rc)
	if _rc == int32(0) || _xDestroy == 0 {
		goto _3
	}

	fn16(_xDestroy)(tls, _pAux)
_3:
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	return _rc
}

// _531completionConnect is defined at shell.c:1732:12
func _531completionConnect(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pAux uintptr /* *void */, _argc int32, _argv uintptr /* **int8 */, _ppVtab uintptr /* **Tsqlite3_vtab = Ssqlite3_vtab */, _pzErr uintptr /* **int8 */) (r int32) {
	var (
		_pNew uintptr // *Tcompletion_vtab = Scompletion_vtab
		_rc   int32
	)

	_rc = Xsqlite3_declare_vtab(tls, _db, ts+19680 /* "CREATE TABLE x(  candidate TEXT,..." */)
	if _rc != int32(0) {
		goto _1
	}

	_pNew = Xsqlite3_malloc(tls, int32(32))
	*(*uintptr)(unsafe.Pointer(_ppVtab)) = _pNew
	if _pNew != 0 {
		goto _2
	}

	return int32(7)

_2:
	crt.Xmemset(tls, _pNew, int32(0), uint64(32))
	*(*uintptr)(unsafe.Pointer(_pNew + 24)) = _db
_1:
	return _rc
}

// _532completionBestIndex is defined at shell.c:2060:12
func _532completionBestIndex(tls crt.TLS, _tab uintptr /* *Tsqlite3_vtab = Ssqlite3_vtab */, _pIdxInfo uintptr /* *Tsqlite3_index_info = Ssqlite3_index_info */) (r int32) {
	var (
		_i            int32
		_idxNum       int32
		_prefixIdx    int32
		_wholelineIdx int32
		_nArg         int32
		_pConstraint  uintptr // *Ssqlite3_index_constraint
	)
	_idxNum = int32(0)
	_prefixIdx = int32(-1)
	_wholelineIdx = int32(-1)
	_nArg = int32(0)

	_pConstraint = *(*uintptr)(unsafe.Pointer(_pIdxInfo + 8))
	_i = int32(0)
_1:
	if _i >= (*(*int32)(unsafe.Pointer(_pIdxInfo))) {
		goto _3
	}

	if int32(*(*uint8)(unsafe.Pointer(_pConstraint + 5))) != int32(0) {
		goto _4
	}

	goto _2

_4:
	if int32(*(*uint8)(unsafe.Pointer(_pConstraint + 4))) == int32(2) {
		goto _5
	}

	goto _2

_5:
	switch *(*int32)(unsafe.Pointer(_pConstraint)) {
	case int32(1):
		goto _7
	case int32(2):
		goto _8
	}
	goto _6

_7:
	_prefixIdx = _i
	_idxNum = int32(_idxNum | int32(1))
	goto _6

_8:
	_wholelineIdx = _i
	_idxNum = int32(_idxNum | int32(2))
	goto _6

_6:
_2:
	_i++
	_pConstraint += 12
	goto _1

_3:
	if _prefixIdx < int32(0) {
		goto _9
	}

	*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdxInfo + 32))) + 8*uintptr(_prefixIdx))) = preinc2(&_nArg)
	*(*uint8)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pIdxInfo + 32))) + 8*uintptr(_prefixIdx)) + 4)) = uint8(1)
_9:
	if _wholelineIdx < int32(0) {
		goto _10
	}

	*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdxInfo + 32))) + 8*uintptr(_wholelineIdx))) = preinc2(&_nArg)
	*(*uint8)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pIdxInfo + 32))) + 8*uintptr(_wholelineIdx)) + 4)) = uint8(1)
_10:
	*(*int32)(unsafe.Pointer(_pIdxInfo + 40)) = _idxNum
	*(*float64)(unsafe.Pointer(_pIdxInfo + 64)) = float64(5000) - float64(int32(1000)*_nArg)
	*(*int64)(unsafe.Pointer(_pIdxInfo + 72)) = int64(int32(500) - (int32(100) * _nArg))
	return int32(0)
}

// _533completionDisconnect is defined at shell.c:1773:12
func _533completionDisconnect(tls crt.TLS, _pVtab uintptr /* *Tsqlite3_vtab = Ssqlite3_vtab */) (r int32) {
	Xsqlite3_free(tls, _pVtab)
	return int32(0)
}

// _534completionOpen is defined at shell.c:1781:12
func _534completionOpen(tls crt.TLS, _p uintptr /* *Tsqlite3_vtab = Ssqlite3_vtab */, _ppCursor uintptr /* **Tsqlite3_vtab_cursor = Ssqlite3_vtab_cursor */) (r int32) {
	var _pCur uintptr // *Tcompletion_cursor = Scompletion_cursor

	_pCur = Xsqlite3_malloc(tls, int32(72))
	if _pCur != 0 {
		goto _1
	}

	return int32(7)

_1:
	crt.Xmemset(tls, _pCur, int32(0), uint64(72))
	*(*uintptr)(unsafe.Pointer(_pCur + 8)) = *(*uintptr)(unsafe.Pointer(_p + 24))
	*(*uintptr)(unsafe.Pointer(_ppCursor)) = _pCur
	return int32(0)
}

// _535completionClose is defined at shell.c:1804:12
func _535completionClose(tls crt.TLS, _cur uintptr /* *Tsqlite3_vtab_cursor = Ssqlite3_vtab_cursor */) (r int32) {
	_863completionCursorReset(tls, _cur)
	Xsqlite3_free(tls, _cur)
	return int32(0)
}

// _536completionFilter is defined at shell.c:2008:12
func _536completionFilter(tls crt.TLS, _pVtabCursor uintptr /* *Tsqlite3_vtab_cursor = Ssqlite3_vtab_cursor */, _idxNum int32, _idxStr uintptr /* *int8 */, _argc int32, _argv uintptr /* **Tsqlite3_value = Ssqlite3_value */) (r int32) {
	var (
		_pCur uintptr // *Tcompletion_cursor = Scompletion_cursor
		_iArg int32
		_i    int32
	)
	_pCur = _pVtabCursor
	_iArg = int32(0)

	_863completionCursorReset(tls, _pCur)
	if (_idxNum & int32(1)) == 0 {
		goto _1
	}

	*(*int32)(unsafe.Pointer(_pCur + 16)) = Xsqlite3_value_bytes(tls, *(*uintptr)(unsafe.Pointer(_argv + 8*uintptr(_iArg))))
	if (*(*int32)(unsafe.Pointer(_pCur + 16))) <= int32(0) {
		goto _2
	}

	*(*uintptr)(unsafe.Pointer(_pCur + 24)) = Xsqlite3_mprintf(tls, ts+429 /* "%s" */, Xsqlite3_value_text(tls, *(*uintptr)(unsafe.Pointer(_argv + 8*uintptr(_iArg)))))
	if (*(*uintptr)(unsafe.Pointer(_pCur + 24))) != 0 {
		goto _3
	}

	return int32(7)

_3:
_2:
	_iArg++
_1:
	if (_idxNum & int32(2)) == 0 {
		goto _4
	}

	*(*int32)(unsafe.Pointer(_pCur + 20)) = Xsqlite3_value_bytes(tls, *(*uintptr)(unsafe.Pointer(_argv + 8*uintptr(_iArg))))
	if (*(*int32)(unsafe.Pointer(_pCur + 20))) <= int32(0) {
		goto _5
	}

	*(*uintptr)(unsafe.Pointer(_pCur + 32)) = Xsqlite3_mprintf(tls, ts+429 /* "%s" */, Xsqlite3_value_text(tls, *(*uintptr)(unsafe.Pointer(_argv + 8*uintptr(_iArg)))))
	if (*(*uintptr)(unsafe.Pointer(_pCur + 32))) != 0 {
		goto _6
	}

	return int32(7)

_6:
_5:
	_iArg++
_4:
	if (*(*uintptr)(unsafe.Pointer(_pCur + 32))) == 0 || (*(*uintptr)(unsafe.Pointer(_pCur + 24))) != 0 {
		goto _7
	}

	_i = *(*int32)(unsafe.Pointer(_pCur + 20))
_8:
	if _i <= int32(0) || int32(*(*uint16)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(crt.X__ctype_b_loc(tls))) + 2*uintptr(int32(*(*int8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pCur + 32))) + uintptr(_i-int32(1)))))))))&int32(8) == 0 && int32(*(*int8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pCur + 32))) + uintptr(_i-int32(1))))) != int32('_') {
		goto _9
	}

	_i--
	goto _8

_9:
	*(*int32)(unsafe.Pointer(_pCur + 16)) = (*(*int32)(unsafe.Pointer(_pCur + 20))) - _i
	if (*(*int32)(unsafe.Pointer(_pCur + 16))) <= int32(0) {
		goto _10
	}

	*(*uintptr)(unsafe.Pointer(_pCur + 24)) = Xsqlite3_mprintf(tls, ts+4740 /* "%.*s" */, *(*int32)(unsafe.Pointer(_pCur + 16)), (*(*uintptr)(unsafe.Pointer(_pCur + 32)))+uintptr(_i))
	if (*(*uintptr)(unsafe.Pointer(_pCur + 24))) != 0 {
		goto _11
	}

	return int32(7)

_11:
_10:
_7:
	*(*int64)(unsafe.Pointer(_pCur + 56)) = int64(0)
	*(*int32)(unsafe.Pointer(_pCur + 64)) = int32(1)
	return _537completionNext(tls, _pVtabCursor)
}

// _537completionNext is defined at shell.c:1850:12
func _537completionNext(tls crt.TLS, _cur uintptr /* *Tsqlite3_vtab_cursor = Ssqlite3_vtab_cursor */) (r int32) {
	esc := crt.MustMalloc(24)
	var (
		_pCur       uintptr // *Tcompletion_cursor = Scompletion_cursor
		_eNextPhase int32
		_iCol       int32
		_pS2        = esc      // **Tsqlite3_stmt = Ssqlite3_stmt
		_zSql       uintptr    // *int8
		_zSep       uintptr    // *int8
		_zDb        uintptr    // *int8
		_1pS2       = esc + 16 // **Tsqlite3_stmt = Ssqlite3_stmt
		_2zSql      uintptr    // *int8
		_3zSep      uintptr    // *int8
		_4zDb       uintptr    // *int8
	)
	defer crt.Free(esc)
	_pCur = _cur
	_eNextPhase = int32(0)
	_iCol = int32(-1)
	(*(*int64)(unsafe.Pointer(_pCur + 56)))++
_1:
	if (*(*int32)(unsafe.Pointer(_pCur + 64))) == int32(11) {
		goto _2
	}

	switch *(*int32)(unsafe.Pointer(_pCur + 64)) {
	case int32(1):
		goto _4
	case int32(7):
		goto _5
	case int32(8):
		goto _6
	case int32(9):
		goto _7
	}
	goto _3

_4:
	if (*(*int32)(unsafe.Pointer(_pCur + 68))) < int32(124) {
		goto _8
	}

	*(*uintptr)(unsafe.Pointer(_pCur + 40)) = null
	*(*int32)(unsafe.Pointer(_pCur + 64)) = int32(7)
	goto _9

_8:
	*(*uintptr)(unsafe.Pointer(_pCur + 40)) = *(*uintptr)(unsafe.Pointer(_864completionKwrds + 8*uintptr(postinc7(&(*(*int32)(unsafe.Pointer(_pCur + 68)))))))
_9:
	_iCol = int32(-1)
	goto _3

_5:
	if (*(*uintptr)(unsafe.Pointer(_pCur + 48))) != 0 {
		goto _10
	}

	Xsqlite3_prepare_v2(tls, *(*uintptr)(unsafe.Pointer(_pCur + 8)), ts+7500 /* "PRAGMA database_list" */, int32(-1), _pCur+48, null)
_10:
	_iCol = int32(1)
	_eNextPhase = int32(8)
	goto _3

_6:
	if (*(*uintptr)(unsafe.Pointer(_pCur + 48))) != 0 {
		goto _11
	}

	_zSql = 0
	_zSep = ts + 4553 /* "" */
	Xsqlite3_prepare_v2(tls, *(*uintptr)(unsafe.Pointer(_pCur + 8)), ts+7500 /* "PRAGMA database_list" */, int32(-1), _pS2, null)
_12:
	if Xsqlite3_step(tls, *(*uintptr)(unsafe.Pointer(_pS2))) != int32(100) {
		goto _13
	}

	_zDb = Xsqlite3_column_text(tls, *(*uintptr)(unsafe.Pointer(_pS2)), int32(1))
	_zSql = Xsqlite3_mprintf(tls, ts+19777 /* "%z%sSELECT name FROM \"%w\".sqlite..." */, _zSql, _zSep, _zDb)
	if _zSql != 0 {
		goto _14
	}

	return int32(7)

_14:
	_zSep = ts + 19836 /* " UNION " */
	goto _12

_13:
	Xsqlite3_finalize(tls, *(*uintptr)(unsafe.Pointer(_pS2)))
	Xsqlite3_prepare_v2(tls, *(*uintptr)(unsafe.Pointer(_pCur + 8)), _zSql, int32(-1), _pCur+48, null)
	Xsqlite3_free(tls, _zSql)
_11:
	_iCol = int32(0)
	_eNextPhase = int32(9)
	goto _3

_7:
	if (*(*uintptr)(unsafe.Pointer(_pCur + 48))) != 0 {
		goto _15
	}

	_2zSql = 0
	_3zSep = ts + 4553 /* "" */
	Xsqlite3_prepare_v2(tls, *(*uintptr)(unsafe.Pointer(_pCur + 8)), ts+7500 /* "PRAGMA database_list" */, int32(-1), _1pS2, null)
_16:
	if Xsqlite3_step(tls, *(*uintptr)(unsafe.Pointer(_1pS2))) != int32(100) {
		goto _17
	}

	_4zDb = Xsqlite3_column_text(tls, *(*uintptr)(unsafe.Pointer(_1pS2)), int32(1))
	_2zSql = Xsqlite3_mprintf(tls, ts+19844 /* "%z%sSELECT pti.name FROM \"%w\".sq..." */, _2zSql, _3zSep, _4zDb, _4zDb)
	if _2zSql != 0 {
		goto _18
	}

	return int32(7)

_18:
	_3zSep = ts + 19836 /* " UNION " */
	goto _16

_17:
	Xsqlite3_finalize(tls, *(*uintptr)(unsafe.Pointer(_1pS2)))
	Xsqlite3_prepare_v2(tls, *(*uintptr)(unsafe.Pointer(_pCur + 8)), _2zSql, int32(-1), _pCur+48, null)
	Xsqlite3_free(tls, _2zSql)
_15:
	_iCol = int32(0)
	_eNextPhase = int32(11)
	goto _3

_3:
	if _iCol >= int32(0) {
		goto _19
	}

	if (*(*uintptr)(unsafe.Pointer(_pCur + 40))) != 0 {
		goto _21
	}

	goto _1

_21:
	goto _20

_19:
	if Xsqlite3_step(tls, *(*uintptr)(unsafe.Pointer(_pCur + 48))) != int32(100) {
		goto _22
	}

	*(*uintptr)(unsafe.Pointer(_pCur + 40)) = Xsqlite3_column_text(tls, *(*uintptr)(unsafe.Pointer(_pCur + 48)), _iCol)
	goto _23

_22:
	Xsqlite3_finalize(tls, *(*uintptr)(unsafe.Pointer(_pCur + 48)))
	*(*uintptr)(unsafe.Pointer(_pCur + 48)) = null
	*(*int32)(unsafe.Pointer(_pCur + 64)) = _eNextPhase
	goto _1

_23:
_20:
	if (*(*int32)(unsafe.Pointer(_pCur + 16))) != int32(0) {
		goto _24
	}

	goto _2

_24:
	if Xsqlite3_strnicmp(tls, *(*uintptr)(unsafe.Pointer(_pCur + 24)), *(*uintptr)(unsafe.Pointer(_pCur + 40)), *(*int32)(unsafe.Pointer(_pCur + 16))) != int32(0) {
		goto _25
	}

	goto _2

_25:
	goto _1

_2:
	return int32(0)
}

// _538completionEof is defined at shell.c:1997:12
func _538completionEof(tls crt.TLS, _cur uintptr /* *Tsqlite3_vtab_cursor = Ssqlite3_vtab_cursor */) (r int32) {
	var _pCur uintptr // *Tcompletion_cursor = Scompletion_cursor

	_pCur = _cur
	return bool2int((*(*int32)(unsafe.Pointer(_pCur + 64))) >= int32(11))
}

// _539completionColumn is defined at shell.c:1956:12
func _539completionColumn(tls crt.TLS, _cur uintptr /* *Tsqlite3_vtab_cursor = Ssqlite3_vtab_cursor */, _ctx uintptr /* *Tsqlite3_context = Ssqlite3_context */, _i int32) (r int32) {
	var _pCur uintptr // *Tcompletion_cursor = Scompletion_cursor

	_pCur = _cur
	switch _i {
	case int32(0):
		goto _2
	case int32(1):
		goto _3
	case int32(2):
		goto _4
	case int32(3):
		goto _5
	}
	goto _1

_2:
	Xsqlite3_result_text(tls, _ctx, *(*uintptr)(unsafe.Pointer(_pCur + 40)), int32(-1), uintptr(18446744073709551615))
	goto _1

_3:
	Xsqlite3_result_text(tls, _ctx, *(*uintptr)(unsafe.Pointer(_pCur + 24)), int32(-1), uintptr(18446744073709551615))
	goto _1

_4:
	Xsqlite3_result_text(tls, _ctx, *(*uintptr)(unsafe.Pointer(_pCur + 32)), int32(-1), uintptr(18446744073709551615))
	goto _1

_5:
	Xsqlite3_result_int(tls, _ctx, *(*int32)(unsafe.Pointer(_pCur + 64)))
	goto _1

_1:
	return int32(0)
}

// _540completionRowid is defined at shell.c:1987:12
func _540completionRowid(tls crt.TLS, _cur uintptr /* *Tsqlite3_vtab_cursor = Ssqlite3_vtab_cursor */, _pRowid uintptr /* *Tsqlite_int64 = int64 */) (r int32) {
	var _pCur uintptr // *Tcompletion_cursor = Scompletion_cursor

	_pCur = _cur
	*(*int64)(unsafe.Pointer(_pRowid)) = int64(*(*int64)(unsafe.Pointer(_pCur + 56)))
	return int32(0)
}

// _541sqlite3FindFunction is defined at sqlite3.c:105487:24
func _541sqlite3FindFunction(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _zName uintptr /* *int8 */, _nArg int32, _enc uint8, _createFlag uint8) (r uintptr /* *TFuncDef = SFuncDef */) {
	var (
		_p         uintptr // *TFuncDef = SFuncDef
		_pBest     uintptr // *TFuncDef = SFuncDef
		_bestScore int32
		_h         int32
		_nName     int32
		_score     int32
		_1score    int32
		_pOther    uintptr // *TFuncDef = SFuncDef
	)
	_pBest = 0
	_bestScore = int32(0)

	_nName = _211sqlite3Strlen30(tls, _zName)
	_p = _424sqlite3HashFind(tls, _db+496, _zName)
_1:
	if _p == 0 {
		goto _2
	}

	_score = _865matchQuality(tls, _p, _nArg, _enc)
	if _score <= _bestScore {
		goto _3
	}

	_pBest = _p
	_bestScore = _score
_3:
	_p = *(*uintptr)(unsafe.Pointer(_p + 16))
	goto _1

_2:
	if _createFlag != 0 || _pBest != 0 && ((*(*uint32)(unsafe.Pointer(_db + 44)))&uint32(0x2)) == uint32(0) {
		goto _4
	}

	_bestScore = int32(0)
	_h = (int32(*(*uint8)(unsafe.Pointer(_215sqlite3UpperToLower + uintptr(uint8(*(*int8)(unsafe.Pointer(_zName))))))) + _nName) % int32(23)
	_p = _502functionSearch(tls, _h, _zName)
_5:
	if _p == 0 {
		goto _6
	}

	_1score = _865matchQuality(tls, _p, _nArg, _enc)
	if _1score <= _bestScore {
		goto _7
	}

	_pBest = _p
	_bestScore = _1score
_7:
	_p = *(*uintptr)(unsafe.Pointer(_p + 16))
	goto _5

_6:
_4:
	if _createFlag == 0 || _bestScore >= int32(6) || set4(&_pBest, _295sqlite3DbMallocZero(tls, _db, uint64((uint64(56)+uint64(_nName))+uint64(1)))) == 0 {
		goto _8
	}

	*(*uintptr)(unsafe.Pointer(_pBest + 40)) = _pBest + 56
	*(*int8)(unsafe.Pointer(_pBest)) = int8(uint16(_nArg))
	*(*uint16)(unsafe.Pointer(_pBest + 2)) = uint16(_enc)
	crt.Xmemcpy(tls, _pBest+56, _zName, uint64(_nName+int32(1)))
	_pOther = _841sqlite3HashInsert(tls, _db+496, *(*uintptr)(unsafe.Pointer(_pBest + 40)), _pBest)
	if _pOther != _pBest {
		goto _9
	}

	_181sqlite3DbFree(tls, _db, _pBest)
	_178sqlite3OomFault(tls, _db)
	return null

	goto _10

_9:
	*(*uintptr)(unsafe.Pointer(_pBest + 16)) = _pOther
_10:
_8:
	if _pBest == 0 || (*(*uintptr)(unsafe.Pointer(_pBest + 24))) == 0 && _createFlag == 0 {
		goto _11
	}

	return _pBest

_11:
	return null
}

// Xsqlite3_result_error_toobig is defined at sqlite3.c:77402:17
func Xsqlite3_result_error_toobig(tls crt.TLS, _pCtx uintptr /* *Tsqlite3_context = Ssqlite3_context */) {
	*(*int32)(unsafe.Pointer(_pCtx + 36)) = int32(18)
	*(*uint8)(unsafe.Pointer(_pCtx + 41)) = uint8(1)
	_395sqlite3VdbeMemSetStr(tls, *(*uintptr)(unsafe.Pointer(_pCtx)), ts+17728 /* "string or blob too big" */, int32(-1), uint8(1), null)
}

// _542vdbeMemClearExternAndSetNull is defined at sqlite3.c:70802:29
func _542vdbeMemClearExternAndSetNull(tls crt.TLS, _p uintptr /* *TMem = Ssqlite3_value */) {
	var _pFrame uintptr // *TVdbeFrame = SVdbeFrame

	if (int32(*(*uint16)(unsafe.Pointer(_p + 8))) & int32(0x2000)) == 0 {
		goto _1
	}

	_725sqlite3VdbeMemFinalize(tls, _p, *(*uintptr)(unsafe.Pointer(_p)))

_1:
	if (int32(*(*uint16)(unsafe.Pointer(_p + 8))) & int32(0x400)) == 0 {
		goto _2
	}

	fn16(*(*uintptr)(unsafe.Pointer(_p + 48)))(tls, *(*uintptr)(unsafe.Pointer(_p + 16)))
	goto _3

_2:
	if (int32(*(*uint16)(unsafe.Pointer(_p + 8))) & int32(0x20)) == 0 {
		goto _4
	}

	_866sqlite3RowSetClear(tls, *(*uintptr)(unsafe.Pointer(_p)))
	goto _5

_4:
	if (int32(*(*uint16)(unsafe.Pointer(_p + 8))) & int32(0x40)) == 0 {
		goto _6
	}

	_pFrame = *(*uintptr)(unsafe.Pointer(_p))
	*(*uintptr)(unsafe.Pointer(_pFrame + 8)) = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pFrame))) + 256))
	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pFrame))) + 256)) = _pFrame
_6:
_5:
_3:
	*(*uint16)(unsafe.Pointer(_p + 8)) = uint16(0x1)
}

// _543sqlite3VdbeMemMakeWriteable is defined at sqlite3.c:70651:20
func _543sqlite3VdbeMemMakeWriteable(tls crt.TLS, _pMem uintptr /* *TMem = Ssqlite3_value */) (r int32) {
	var _rc int32

	if (int32(*(*uint16)(unsafe.Pointer(_pMem + 8))) & int32(18)) == int32(0) {
		goto _1
	}

	if func() int32 {
		if int32(*(*uint16)(unsafe.Pointer(_pMem + 8)))&int32(0x4000) != 0 {
			return _442sqlite3VdbeMemExpandBlob(tls, _pMem)
		}
		return int32(0)
	}() == 0 {
		goto _2
	}

	return int32(7)

_2:
	if (*(*int32)(unsafe.Pointer(_pMem + 32))) != int32(0) && (*(*uintptr)(unsafe.Pointer(_pMem + 16))) == (*(*uintptr)(unsafe.Pointer(_pMem + 24))) {
		goto _3
	}

	_rc = _867vdbeMemAddTerminator(tls, _pMem)
	if _rc == 0 {
		goto _4
	}

	return _rc

_4:
_3:
_1:
	{
		p := &(*(*uint16)(unsafe.Pointer(_pMem + 8)))
		*p = uint16(int32(*p) & int32(-4097))
	}
	return int32(0)
}

// _544strAccumFinishRealloc is defined at sqlite3.c:26411:29
func _544strAccumFinishRealloc(tls crt.TLS, _p uintptr /* *TStrAccum = SStrAccum */) (r uintptr /* *int8 */) {
	var _zText uintptr // *int8

	_zText = _177sqlite3DbMallocRaw(tls, *(*uintptr)(unsafe.Pointer(_p)), uint64((*(*uint32)(unsafe.Pointer(_p + 24)))+uint32(1)))
	if _zText == 0 {
		goto _1
	}

	crt.Xmemcpy(tls, _zText, *(*uintptr)(unsafe.Pointer(_p + 8)), uint64((*(*uint32)(unsafe.Pointer(_p + 24)))+uint32(1)))
	{
		p := &(*(*uint8)(unsafe.Pointer(_p + 29)))
		*p = uint8(int32(*p) | int32(0x4))
	}
	goto _2

_1:
	_304setStrAccumError(tls, _p, uint8(1))
_2:
	*(*uintptr)(unsafe.Pointer(_p + 8)) = _zText
	return _zText
}

// _545enlargeAndAppend is defined at sqlite3.c:26372:29
func _545enlargeAndAppend(tls crt.TLS, _p uintptr /* *TStrAccum = SStrAccum */, _z uintptr /* *int8 */, _N int32) {
	_N = _546sqlite3StrAccumEnlarge(tls, _p, _N)
	if _N <= int32(0) {
		goto _1
	}

	crt.Xmemcpy(tls, (*(*uintptr)(unsafe.Pointer(_p + 8)))+uintptr(*(*uint32)(unsafe.Pointer(_p + 24))), _z, uint64(_N))
	{
		p := &(*(*uint32)(unsafe.Pointer(_p + 24)))
		*p = uint32(uint32(*p) + uint32(_N))
	}
_1:
}

// _546sqlite3StrAccumEnlarge is defined at sqlite3.c:26305:12
func _546sqlite3StrAccumEnlarge(tls crt.TLS, _p uintptr /* *TStrAccum = SStrAccum */, _N int32) (r int32) {
	var (
		_zNew  uintptr // *int8
		_zOld  uintptr // *int8
		_szNew int64
	)

	if (*(*uint8)(unsafe.Pointer(_p + 28))) == 0 {
		goto _1
	}

	return int32(0)

_1:
	if (*(*uint32)(unsafe.Pointer(_p + 20))) != uint32(0) {
		goto _2
	}

	_N = int32(((*(*uint32)(unsafe.Pointer(_p + 16))) - (*(*uint32)(unsafe.Pointer(_p + 24)))) - uint32(1))
	_304setStrAccumError(tls, _p, uint8(2))
	return _N

	goto _3

_2:
	_zOld = func() uintptr {
		if (int32(*(*uint8)(unsafe.Pointer(_p + 29))) & int32(0x4)) != int32(0) {
			return *(*uintptr)(unsafe.Pointer(_p + 8))
		}
		return null
	}()
	_szNew = int64(*(*uint32)(unsafe.Pointer(_p + 24)))
	_szNew = int64(_szNew + int64(_N+int32(1)))
	if (_szNew + int64(*(*uint32)(unsafe.Pointer(_p + 24)))) > int64(*(*uint32)(unsafe.Pointer(_p + 20))) {
		goto _4
	}

	_szNew = int64(_szNew + int64(*(*uint32)(unsafe.Pointer(_p + 24))))
_4:
	if _szNew <= int64(*(*uint32)(unsafe.Pointer(_p + 20))) {
		goto _5
	}

	_868sqlite3StrAccumReset(tls, _p)
	_304setStrAccumError(tls, _p, uint8(2))
	return int32(0)

	goto _6

_5:
	*(*uint32)(unsafe.Pointer(_p + 16)) = uint32(int32(_szNew))
_6:
	if (*(*uintptr)(unsafe.Pointer(_p))) == 0 {
		goto _7
	}

	_zNew = _869sqlite3DbRealloc(tls, *(*uintptr)(unsafe.Pointer(_p)), _zOld, uint64(*(*uint32)(unsafe.Pointer(_p + 16))))
	goto _8

_7:
	_zNew = Xsqlite3_realloc64(tls, _zOld, uint64(*(*uint32)(unsafe.Pointer(_p + 16))))
_8:
	if _zNew == 0 {
		goto _9
	}

	if (int32(*(*uint8)(unsafe.Pointer(_p + 29)))&int32(0x4)) != int32(0) || (*(*uint32)(unsafe.Pointer(_p + 24))) <= uint32(0) {
		goto _11
	}

	crt.Xmemcpy(tls, _zNew, *(*uintptr)(unsafe.Pointer(_p + 8)), uint64(*(*uint32)(unsafe.Pointer(_p + 24))))
_11:
	*(*uintptr)(unsafe.Pointer(_p + 8)) = _zNew
	*(*uint32)(unsafe.Pointer(_p + 16)) = uint32(_744sqlite3DbMallocSize(tls, *(*uintptr)(unsafe.Pointer(_p)), _zNew))
	{
		p := &(*(*uint8)(unsafe.Pointer(_p + 29)))
		*p = uint8(int32(*p) | int32(0x4))
	}
	goto _10

_9:
	_868sqlite3StrAccumReset(tls, _p)
	_304setStrAccumError(tls, _p, uint8(1))
	return int32(0)

_10:
_3:
	return _N
}

// _547sqlite3OsGetLastError is defined at sqlite3.c:20955:20
func _547sqlite3OsGetLastError(tls crt.TLS, _pVfs uintptr /* *Tsqlite3_vfs = Ssqlite3_vfs */) (r int32) {
	if (*(*uintptr)(unsafe.Pointer(_pVfs + 128))) != 0 {
		return fn52(*(*uintptr)(unsafe.Pointer(_pVfs + 128)))(tls, _pVfs, int32(0), null)
	}

	return int32(0)
}

// _548sqlite3ValueSetNull is defined at sqlite3.c:71113:21
func _548sqlite3ValueSetNull(tls crt.TLS, _p uintptr /* *Tsqlite3_value = Ssqlite3_value */) {
	_643sqlite3VdbeMemSetNull(tls, _p)
}

type STableLock struct {
	XiDb         int32
	XiTab        int32
	XisWriteLock uint8
	XzLockName   uintptr // *int8
}

type SAutoincInfo struct {
	XpNext  uintptr // *SAutoincInfo
	XpTab   uintptr // *STable
	XiDb    int32
	XregCtr int32
}

type STriggerPrg struct {
	XpTrigger uintptr // *STrigger
	XpNext    uintptr // *STriggerPrg
	XpProgram uintptr // *SSubProgram
	Xorconf   int32
	XaColmask [2]uint32
}

type SWith struct {
	XnCte   int32
	XpOuter uintptr // *SWith
	Xa      [1]struct {
		XzName   uintptr
		XpCols   uintptr
		XpSelect uintptr
		XzCteErr uintptr
	}
}

// _549flags int32, escapes: false, sqlite3.c:104717:22
var _549flags = int32(542)

// _550sqlite3ErrorMsg is defined at sqlite3.c:28342:21
func _550sqlite3ErrorMsg(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _zFormat uintptr /* *int8 */, ap ...interface{}) {
	var (
		_zMsg uintptr        // *int8
		_ap   *[]interface{} // Tva_list = T__gnuc_va_list = T__...a_list = *struct{X_ [2]uintptr;}
		_db   uintptr        // *Tsqlite3 = Ssqlite3
	)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	{
		x := ap
		_ap = &x
	}
	_zMsg = _315sqlite3VMPrintf(tls, _db, _zFormat, _ap)
	_ap = nil
	if (*(*uint8)(unsafe.Pointer(_db + 101))) == 0 {
		goto _1
	}

	_181sqlite3DbFree(tls, _db, _zMsg)
	goto _2

_1:
	(*(*int32)(unsafe.Pointer(_pParse + 48)))++
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_pParse + 8)))
	*(*uintptr)(unsafe.Pointer(_pParse + 8)) = _zMsg
	*(*int32)(unsafe.Pointer(_pParse + 24)) = int32(1)
_2:
}

// _551sqlite3ExprListDelete is defined at sqlite3.c:93505:21
func _551sqlite3ExprListDelete(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pList uintptr /* *TExprList = SExprList */) {
	if _pList == 0 {
		goto _1
	}

	_870exprListDeleteNN(tls, _db, _pList)
_1:
}

type SWalIndexHdr struct {
	XiVersion    uint32
	Xunused      uint32
	XiChange     uint32
	XisInit      uint8
	XbigEndCksum uint8
	XszPage      uint16
	XmxFrame     uint32
	XnPage       uint32
	XaFrameCksum [2]uint32
	XaSalt       [2]uint32
	XaCksum      [2]uint32
}

// Xsqlite3_mutex_try is defined at sqlite3.c:23490:16
func Xsqlite3_mutex_try(tls crt.TLS, _p uintptr /* *Tsqlite3_mutex = Ssqlite3_mutex */) (r int32) {
	var _rc int32

	_rc = int32(0)
	if _p == 0 {
		goto _1
	}

	return fn12(*(*uintptr)(unsafe.Pointer((_28sqlite3Config + 112) + 40)))(tls, _p)

_1:
	return _rc
}

// _552lockBtreeMutex is defined at sqlite3.c:59389:13
func _552lockBtreeMutex(tls crt.TLS, _p uintptr /* *TBtree = SBtree */) {
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 8))) + 80)))
	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 8))) + 8)) = *(*uintptr)(unsafe.Pointer(_p))
	*(*uint8)(unsafe.Pointer(_p + 18)) = uint8(1)
}

type SBtCursor struct {
	XeState        uint8
	XcurFlags      uint8
	XcurPagerFlags uint8
	Xhints         uint8
	XnOvflAlloc    int32
	XpBtree        uintptr // *SBtree
	XpBt           uintptr // *SBtShared
	XpNext         uintptr // *SBtCursor
	XaOverflow     uintptr // *uint32
	Xinfo          SCellInfo
	XnKey          int64
	XpKey          uintptr // uintptr
	XpgnoRoot      uint32
	XskipNext      int32
	XiPage         int8
	XcurIntKey     uint8
	Xix            uint16
	XaiIdx         [19]uint16
	XpKeyInfo      uintptr // *SKeyInfo
	XpPage         uintptr // *SMemPage
	XapPage        [19]uintptr
}

// _553sqlite3PagerSharedLock is defined at sqlite3.c:52625:20
func _553sqlite3PagerSharedLock(tls crt.TLS, _pPager uintptr /* *TPager = SPager */) (r int32) {
	esc := crt.MustMalloc(64)
	var (
		_rc          int32
		_bHotJournal = esc      // *int32
		_pVfs        uintptr    // *Tsqlite3_vfs = Ssqlite3_vfs
		_bExists     = esc + 16 // *int32
		_fout        = esc + 32 // *int32
		_f           int32
		_dbFileVers  = esc + 48 // *[16]int8
	)
	defer crt.Free(esc)
	_rc = int32(0)

	if (*(*uintptr)(unsafe.Pointer(_pPager + 288))) != 0 || int32(*(*uint8)(unsafe.Pointer(_pPager + 20))) != int32(0) {
		goto _1
	}

	*(*int32)(unsafe.Pointer(_bHotJournal)) = int32(1)

	_rc = _560pager_wait_on_lock(tls, _pPager, int32(1))
	if _rc == int32(0) {
		goto _2
	}

	goto _failed

_2:
	if int32(*(*uint8)(unsafe.Pointer(_pPager + 21))) > int32(1) {
		goto _3
	}

	_rc = _871hasHotJournal(tls, _pPager, _bHotJournal)
_3:
	if _rc == int32(0) {
		goto _4
	}

	goto _failed

_4:
	if (*(*int32)(unsafe.Pointer(_bHotJournal))) == 0 {
		goto _5
	}

	if (*(*uint8)(unsafe.Pointer(_pPager + 18))) == 0 {
		goto _6
	}

	_rc = int32(776)
	goto _failed

_6:
	_rc = _558pagerLockDb(tls, _pPager, int32(4))
	if _rc == int32(0) {
		goto _7
	}

	goto _failed

_7:
	if (*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pPager + 80))))) != 0 {
		goto _8
	}

	_pVfs = *(*uintptr)(unsafe.Pointer(_pPager))
	_rc = _872sqlite3OsAccess(tls, _pVfs, *(*uintptr)(unsafe.Pointer(_pPager + 216)), int32(0), _bExists)
	if _rc != int32(0) || (*(*int32)(unsafe.Pointer(_bExists))) == 0 {
		goto _9
	}

	*(*int32)(unsafe.Pointer(_fout)) = int32(0)
	_f = int32(2050)

	_rc = _845sqlite3OsOpen(tls, _pVfs, *(*uintptr)(unsafe.Pointer(_pPager + 216)), *(*uintptr)(unsafe.Pointer(_pPager + 80)), _f, _fout)

	if _rc != int32(0) || ((*(*int32)(unsafe.Pointer(_fout)))&int32(0x1)) == 0 {
		goto _10
	}

	_rc = _844sqlite3CantopenError(tls, int32(52709))
	_849sqlite3OsClose(tls, *(*uintptr)(unsafe.Pointer(_pPager + 80)))
_10:
_9:
_8:
	if (*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pPager + 80))))) == 0 {
		goto _11
	}

	_rc = _855pagerSyncHotJournal(tls, _pPager)
	if _rc != int32(0) {
		goto _13
	}

	_rc = _604pager_playback(tls, _pPager, bool2int((*(*uint8)(unsafe.Pointer(_pPager + 16))) == 0))
	*(*uint8)(unsafe.Pointer(_pPager + 20)) = uint8(0)
_13:
	goto _12

_11:
	if (*(*uint8)(unsafe.Pointer(_pPager + 8))) != 0 {
		goto _14
	}

	_873pagerUnlockDb(tls, _pPager, int32(1))
_14:
_12:
	if _rc == int32(0) {
		goto _15
	}

	_591pager_error(tls, _pPager, _rc)
	goto _failed

_15:
_5:
	if (*(*uint8)(unsafe.Pointer(_pPager + 16))) != 0 || (*(*uint8)(unsafe.Pointer(_pPager + 27))) == 0 {
		goto _16
	}

	_rc = _586sqlite3OsRead(tls, *(*uintptr)(unsafe.Pointer(_pPager + 72)), _dbFileVers, int32(16), int64(24))
	if _rc == int32(0) {
		goto _17
	}

	if _rc == int32(522) {
		goto _18
	}

	goto _failed

_18:
	crt.Xmemset(tls, _dbFileVers, int32(0), uint64(16))
_17:
	if crt.Xmemcmp(tls, _pPager+136, _dbFileVers, uint64(16)) == int32(0) {
		goto _19
	}

	_756pager_reset(tls, _pPager)
	if *(*uint8)(unsafe.Pointer(_pPager + 26)) == 0 {
		goto _20
	}

	_874sqlite3OsUnfetch(tls, *(*uintptr)(unsafe.Pointer(_pPager + 72)), int64(0), null)
_20:
_19:
_16:
	_rc = _875pagerOpenWalIfPresent(tls, _pPager)

_1:
	if (*(*uintptr)(unsafe.Pointer(_pPager + 288))) == 0 {
		goto _21
	}

	_rc = _876pagerBeginReadTransaction(tls, _pPager)
_21:
	if int32(*(*uint8)(unsafe.Pointer(_pPager + 16))) != int32(0) || int32(*(*uint8)(unsafe.Pointer(_pPager + 20))) != int32(0) || _rc != int32(0) {
		goto _22
	}

	_rc = _877pagerPagecount(tls, _pPager, _pPager+28)
_22:
	goto _failed
_failed:
	if _rc == int32(0) {
		goto _23
	}

	_854pager_unlock(tls, _pPager)

	goto _24

_23:
	*(*uint8)(unsafe.Pointer(_pPager + 20)) = uint8(1)
	*(*uint8)(unsafe.Pointer(_pPager + 27)) = uint8(1)
_24:
	return _rc
}

// _554zMagicHeader [16]int8, escapes: true, sqlite3.c:59695:19
var _554zMagicHeader = ds + 7029

// _555sqlite3PagerOpenWal is defined at sqlite3.c:54976:20
func _555sqlite3PagerOpenWal(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _pbOpen uintptr /* *int32 */) (r int32) {
	var _rc int32

	_rc = int32(0)

	if (*(*uint8)(unsafe.Pointer(_pPager + 16))) != 0 || (*(*uintptr)(unsafe.Pointer(_pPager + 288))) != 0 {
		goto _1
	}

	if _728sqlite3PagerWalSupported(tls, _pPager) != 0 {
		goto _3
	}

	return int32(14)

_3:
	_849sqlite3OsClose(tls, *(*uintptr)(unsafe.Pointer(_pPager + 80)))
	_rc = _878pagerOpenWal(tls, _pPager)
	if _rc != int32(0) {
		goto _4
	}

	*(*uint8)(unsafe.Pointer(_pPager + 9)) = uint8(5)
	*(*uint8)(unsafe.Pointer(_pPager + 20)) = uint8(0)
_4:
	goto _2

_1:
	*(*int32)(unsafe.Pointer(_pbOpen)) = int32(1)
_2:
	return _rc
}

// _556sqlite3CorruptError is defined at sqlite3.c:145330:20
func _556sqlite3CorruptError(tls crt.TLS, _lineno int32) (r int32) {
	return _111reportError(tls, int32(11), _lineno, ts+19958 /* "database corruption" */)
}

// _557sqlite3WalExclusiveMode is defined at sqlite3.c:58536:20
func _557sqlite3WalExclusiveMode(tls crt.TLS, _pWal uintptr /* *TWal = SWal */, _op int32) (r int32) {
	var _rc int32

	if _op != int32(0) {
		goto _1
	}

	if (*(*uint8)(unsafe.Pointer(_pWal + 63))) == 0 {
		goto _3
	}

	*(*uint8)(unsafe.Pointer(_pWal + 63)) = uint8(0)
	if _879walLockShared(tls, _pWal, int32(3)+int32(*(*int16)(unsafe.Pointer(_pWal + 60)))) == int32(0) {
		goto _5
	}

	*(*uint8)(unsafe.Pointer(_pWal + 63)) = uint8(1)
_5:
	_rc = bool2int(int32(*(*uint8)(unsafe.Pointer(_pWal + 63))) == int32(0))
	goto _4

_3:
	_rc = int32(0)
_4:
	goto _2

_1:
	if _op <= int32(0) {
		goto _6
	}

	_880walUnlockShared(tls, _pWal, int32(3)+int32(*(*int16)(unsafe.Pointer(_pWal + 60))))
	*(*uint8)(unsafe.Pointer(_pWal + 63)) = uint8(1)
	_rc = int32(1)
	goto _7

_6:
	_rc = bool2int(int32(*(*uint8)(unsafe.Pointer(_pWal + 63))) == int32(0))
_7:
_2:
	return _rc
}

// _558pagerLockDb is defined at sqlite3.c:48648:12
func _558pagerLockDb(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _eLock int32) (r int32) {
	var _rc int32

	_rc = int32(0)

	if int32(*(*uint8)(unsafe.Pointer(_pPager + 21))) >= _eLock && int32(*(*uint8)(unsafe.Pointer(_pPager + 21))) != int32(5) {
		goto _1
	}

	_rc = func() int32 {
		if (*(*uint8)(unsafe.Pointer(_pPager + 17))) != 0 {
			return int32(0)
		}
		return _881sqlite3OsLock(tls, *(*uintptr)(unsafe.Pointer(_pPager + 72)), _eLock)
	}()
	if _rc != int32(0) || int32(*(*uint8)(unsafe.Pointer(_pPager + 21))) == int32(5) && _eLock != int32(4) {
		goto _2
	}

	*(*uint8)(unsafe.Pointer(_pPager + 21)) = uint8(_eLock)
_2:
_1:
	return _rc
}

// _559sqlite3WalBeginWriteTransaction is defined at sqlite3.c:57835:20
func _559sqlite3WalBeginWriteTransaction(tls crt.TLS, _pWal uintptr /* *TWal = SWal */) (r int32) {
	var _rc int32

	if (*(*uint8)(unsafe.Pointer(_pWal + 66))) == 0 {
		goto _1
	}

	return int32(8)

_1:
	_rc = _882walLockExclusive(tls, _pWal, int32(0), int32(1))
	if _rc == 0 {
		goto _2
	}

	return _rc

_2:
	*(*uint8)(unsafe.Pointer(_pWal + 64)) = uint8(1)
	if crt.Xmemcmp(tls, _pWal+72, _883walIndexHdr(tls, _pWal), uint64(48)) == int32(0) {
		goto _3
	}

	_884walUnlockExclusive(tls, _pWal, int32(0), int32(1))
	*(*uint8)(unsafe.Pointer(_pWal + 64)) = uint8(0)
	_rc = int32(517)
_3:
	return _rc
}

// _560pager_wait_on_lock is defined at sqlite3.c:51401:12
func _560pager_wait_on_lock(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _locktype int32) (r int32) {
	var _rc int32

_1:
	_rc = _558pagerLockDb(tls, _pPager, _locktype)
	if (_rc == int32(5)) && (fn12(*(*uintptr)(unsafe.Pointer(_pPager + 224)))(tls, *(*uintptr)(unsafe.Pointer(_pPager + 232))) != 0) {
		goto _1
	}

	return _rc
}

// _561zeroPage is defined at sqlite3.c:61614:13
func _561zeroPage(tls crt.TLS, _pPage uintptr /* *TMemPage = SMemPage */, _flags int32) {
	var (
		_data  uintptr // *uint8
		_pBt   uintptr // *TBtShared = SBtShared
		_hdr   uint8
		_first uint16
	)
	_data = *(*uintptr)(unsafe.Pointer(_pPage + 80))
	_pBt = *(*uintptr)(unsafe.Pointer(_pPage + 72))
	_hdr = *(*uint8)(unsafe.Pointer(_pPage + 9))

	if (int32(*(*uint16)(unsafe.Pointer(_pBt + 38))) & int32(0xc)) == 0 {
		goto _1
	}

	crt.Xmemset(tls, _data+uintptr(_hdr), int32(0), uint64((*(*uint32)(unsafe.Pointer(_pBt + 52)))-uint32(_hdr)))
_1:
	*(*uint8)(unsafe.Pointer(_data + uintptr(_hdr))) = uint8(int8(_flags))
	_first = uint16(int32(_hdr) + func() int32 {
		if (_flags & int32(0x8)) == int32(0) {
			return int32(12)
		}
		return int32(8)
	}())
	crt.Xmemset(tls, _data+uintptr(int32(_hdr)+int32(1)), int32(0), uint64(4))
	*(*uint8)(unsafe.Pointer(_data + uintptr(int32(_hdr)+int32(7)))) = uint8(0)
	*(*uint8)(unsafe.Pointer(_data + uintptr(int32(_hdr)+int32(5)))) = uint8((*(*uint32)(unsafe.Pointer(_pBt + 52))) >> (uint(8) % 32))
	*(*uint8)(unsafe.Pointer((_data + uintptr(int32(_hdr)+int32(5))) + 1)) = uint8(*(*uint32)(unsafe.Pointer(_pBt + 52)))
	*(*uint16)(unsafe.Pointer(_pPage + 20)) = uint16((*(*uint32)(unsafe.Pointer(_pBt + 52))) - uint32(_first))
	_885decodeFlags(tls, _pPage, _flags)
	*(*uint16)(unsafe.Pointer(_pPage + 18)) = _first
	*(*uintptr)(unsafe.Pointer(_pPage + 88)) = _data + uintptr(*(*uint32)(unsafe.Pointer(_pBt + 52)))
	*(*uintptr)(unsafe.Pointer(_pPage + 96)) = _data + uintptr(_first)
	*(*uintptr)(unsafe.Pointer(_pPage + 104)) = _data + uintptr(*(*uint8)(unsafe.Pointer(_pPage + 10)))
	*(*uint8)(unsafe.Pointer(_pPage + 12)) = uint8(0)

	*(*uint16)(unsafe.Pointer(_pPage + 24)) = uint16((*(*uint32)(unsafe.Pointer(_pBt + 48))) - uint32(1))
	*(*uint16)(unsafe.Pointer(_pPage + 22)) = uint16(0)
	*(*uint8)(unsafe.Pointer(_pPage)) = uint8(1)
}

// _562sqlite3InvokeBusyHandler is defined at sqlite3.c:143487:20
func _562sqlite3InvokeBusyHandler(tls crt.TLS, _p uintptr /* *TBusyHandler = SBusyHandler */) (r int32) {
	var _rc int32

	if _p != 0 && (*(*uintptr)(unsafe.Pointer(_p))) != 0 && (*(*int32)(unsafe.Pointer(_p + 16))) >= int32(0) {
		goto _1
	}

	return int32(0)

_1:
	_rc = fn50(*(*uintptr)(unsafe.Pointer(_p)))(tls, *(*uintptr)(unsafe.Pointer(_p + 8)), *(*int32)(unsafe.Pointer(_p + 16)))
	if _rc != int32(0) {
		goto _2
	}

	*(*int32)(unsafe.Pointer(_p + 16)) = int32(-1)
	goto _3

_2:
	(*(*int32)(unsafe.Pointer(_p + 16)))++
_3:
	return _rc
}

// _563pagerOpenSavepoint is defined at sqlite3.c:54246:28
func _563pagerOpenSavepoint(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _nSavepoint int32) (r int32) {
	var (
		_rc       int32
		_nCurrent int32
		_ii       int32
		_aNew     uintptr // *TPagerSavepoint = SPagerSavepoint
	)
	_rc = int32(0)
	_nCurrent = *(*int32)(unsafe.Pointer(_pPager + 128))

	_aNew = _230sqlite3Realloc(tls, *(*uintptr)(unsafe.Pointer(_pPager + 120)), uint64(uint64(48)*uint64(_nSavepoint)))
	if _aNew != 0 {
		goto _1
	}

	return int32(7)

_1:
	crt.Xmemset(tls, _aNew+48*uintptr(_nCurrent), int32(0), uint64(_nSavepoint-_nCurrent)*uint64(48))
	*(*uintptr)(unsafe.Pointer(_pPager + 120)) = _aNew
	_ii = _nCurrent
_2:
	if _ii >= _nSavepoint {
		goto _4
	}

	*(*uint32)(unsafe.Pointer((_aNew + 48*uintptr(_ii)) + 24)) = *(*uint32)(unsafe.Pointer(_pPager + 28))
	if (*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pPager + 80))))) == 0 || (*(*int64)(unsafe.Pointer(_pPager + 96))) <= int64(0) {
		goto _5
	}

	*(*int64)(unsafe.Pointer(_aNew + 48*uintptr(_ii))) = *(*int64)(unsafe.Pointer(_pPager + 96))
	goto _6

_5:
	*(*int64)(unsafe.Pointer(_aNew + 48*uintptr(_ii))) = int64(*(*uint32)(unsafe.Pointer(_pPager + 184)))
_6:
	*(*uint32)(unsafe.Pointer((_aNew + 48*uintptr(_ii)) + 28)) = uint32(*(*uint32)(unsafe.Pointer(_pPager + 56)))
	*(*uintptr)(unsafe.Pointer((_aNew + 48*uintptr(_ii)) + 16)) = _404sqlite3BitvecCreate(tls, *(*uint32)(unsafe.Pointer(_pPager + 28)))
	if (*(*uintptr)(unsafe.Pointer((_aNew + 48*uintptr(_ii)) + 16))) != 0 {
		goto _7
	}

	return int32(7)

_7:
	if (*(*uintptr)(unsafe.Pointer(_pPager + 288))) == 0 {
		goto _8
	}

	_886sqlite3WalSavepoint(tls, *(*uintptr)(unsafe.Pointer(_pPager + 288)), (_aNew+48*uintptr(_ii))+32)
_8:
	*(*int32)(unsafe.Pointer(_pPager + 128)) = _ii + int32(1)
	_ii++
	goto _2

_4:
	return _rc
}

// _564pagerReleaseMapPage is defined at sqlite3.c:51562:13
func _564pagerReleaseMapPage(tls crt.TLS, _pPg uintptr /* *TPgHdr = SPgHdr */) {
	var _pPager uintptr // *TPager = SPager

	_pPager = *(*uintptr)(unsafe.Pointer(_pPg + 40))
	(*(*int32)(unsafe.Pointer(_pPager + 152)))--
	*(*uintptr)(unsafe.Pointer(_pPg + 32)) = *(*uintptr)(unsafe.Pointer(_pPager + 168))
	*(*uintptr)(unsafe.Pointer(_pPager + 168)) = _pPg

	_874sqlite3OsUnfetch(tls, *(*uintptr)(unsafe.Pointer(_pPager + 72)), int64((*(*uint32)(unsafe.Pointer(_pPg + 48)))-uint32(1))*int64(*(*int32)(unsafe.Pointer(_pPager + 188))), *(*uintptr)(unsafe.Pointer(_pPg + 8)))
}

// _565sqlite3PcacheRelease is defined at sqlite3.c:45197:37
func _565sqlite3PcacheRelease(tls crt.TLS, _p uintptr /* *TPgHdr = SPgHdr */) {
	(*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 24))) + 24)))--
	if int32(preinc138(&(*(*int16)(unsafe.Pointer(_p + 54))))) != int32(0) {
		goto _1
	}

	if (int32(*(*uint16)(unsafe.Pointer(_p + 52))) & int32(0x1)) == 0 {
		goto _2
	}

	_887pcacheUnpin(tls, _p)
	goto _3

_2:
	_888pcacheManageDirtyList(tls, _p, uint8(3))
_3:
_1:
}

// _566sqlite3VtabUnlock is defined at sqlite3.c:126467:21
func _566sqlite3VtabUnlock(tls crt.TLS, _pVTab uintptr /* *TVTable = SVTable */) {
	var (
		_db uintptr // *Tsqlite3 = Ssqlite3
		_p  uintptr // *Tsqlite3_vtab = Ssqlite3_vtab
	)
	_db = *(*uintptr)(unsafe.Pointer(_pVTab))

	(*(*int32)(unsafe.Pointer(_pVTab + 24)))--
	if (*(*int32)(unsafe.Pointer(_pVTab + 24))) != int32(0) {
		goto _1
	}

	_p = *(*uintptr)(unsafe.Pointer(_pVTab + 16))
	if _p == 0 {
		goto _2
	}

	fn12(*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p))) + 32)))(tls, _p)
_2:
	_181sqlite3DbFree(tls, _db, _pVTab)
_1:
}

// _567subjRequiresPage is defined at sqlite3.c:48557:12
func _567subjRequiresPage(tls crt.TLS, _pPg uintptr /* *TPgHdr = SPgHdr */) (r int32) {
	var (
		_pPager uintptr // *TPager = SPager
		_p      uintptr // *TPagerSavepoint = SPagerSavepoint
		_pgno   uint32
		_i      int32
	)
	_pPager = *(*uintptr)(unsafe.Pointer(_pPg + 40))
	_pgno = *(*uint32)(unsafe.Pointer(_pPg + 48))
	_i = int32(0)
_1:
	if _i >= (*(*int32)(unsafe.Pointer(_pPager + 128))) {
		goto _3
	}

	_p = (*(*uintptr)(unsafe.Pointer(_pPager + 120))) + 48*uintptr(_i)
	if (*(*uint32)(unsafe.Pointer(_p + 24))) < _pgno || int32(0) != _572sqlite3BitvecTestNotNull(tls, *(*uintptr)(unsafe.Pointer(_p + 16)), _pgno) {
		goto _4
	}

	return int32(1)

_4:
	_i++
	goto _1

_3:
	return int32(0)
}

// _568subjournalPage is defined at sqlite3.c:51968:12
func _568subjournalPage(tls crt.TLS, _pPg uintptr /* *TPgHdr = SPgHdr */) (r int32) {
	var (
		_rc     int32
		_pPager uintptr // *TPager = SPager
		_pData  uintptr // *void
		_offset int64
		_pData2 uintptr // *int8
	)
	_rc = int32(0)
	_pPager = *(*uintptr)(unsafe.Pointer(_pPg + 40))
	if int32(*(*uint8)(unsafe.Pointer(_pPager + 9))) == int32(2) {
		goto _1
	}

	_rc = _889openSubJournal(tls, _pPager)
	if _rc != int32(0) {
		goto _2
	}

	_pData = *(*uintptr)(unsafe.Pointer(_pPg + 8))
	_offset = int64(*(*uint32)(unsafe.Pointer(_pPager + 56))) * int64(int32(4)+(*(*int32)(unsafe.Pointer(_pPager + 188))))
	_pData2 = _pData
	_rc = _581write32bits(tls, *(*uintptr)(unsafe.Pointer(_pPager + 88)), _offset, *(*uint32)(unsafe.Pointer(_pPg + 48)))
	if _rc != int32(0) {
		goto _3
	}

	_rc = _163sqlite3OsWrite(tls, *(*uintptr)(unsafe.Pointer(_pPager + 88)), _pData2, *(*int32)(unsafe.Pointer(_pPager + 188)), _offset+int64(4))
_3:
_2:
_1:
	if _rc != int32(0) {
		goto _4
	}

	(*(*uint32)(unsafe.Pointer(_pPager + 56)))++

	_rc = _890addToSavepointBitvecs(tls, _pPager, *(*uint32)(unsafe.Pointer(_pPg + 48)))
_4:
	return _rc
}

// _569sqlite3PagerLookup is defined at sqlite3.c:53116:23
func _569sqlite3PagerLookup(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _pgno uint32) (r uintptr /* *TDbPage = SPgHdr */) {
	var _pPage uintptr // *Tsqlite3_pcache_page = Ssqlite3_pcache_page

	_pPage = _891sqlite3PcacheFetch(tls, *(*uintptr)(unsafe.Pointer(_pPager + 280)), _pgno, int32(0))

	if _pPage != 0 {
		goto _1
	}

	return null

_1:
	return _892sqlite3PcacheFetchFinish(tls, *(*uintptr)(unsafe.Pointer(_pPager + 280)), _pgno, _pPage)
}

// _570pager_open_journal is defined at sqlite3.c:53186:12
func _570pager_open_journal(tls crt.TLS, _pPager uintptr /* *TPager = SPager */) (r int32) {
	var (
		_rc     int32
		_pVfs   uintptr // *Tsqlite3_vfs = Ssqlite3_vfs
		_flags  int32
		_nSpill int32
	)
	_rc = int32(0)
	_pVfs = *(*uintptr)(unsafe.Pointer(_pPager))

	if *(*int32)(unsafe.Pointer(_pPager + 44)) == 0 {
		goto _1
	}

	return *(*int32)(unsafe.Pointer(_pPager + 44))

_1:
	if (*(*uintptr)(unsafe.Pointer(_pPager + 288))) != 0 || int32(*(*uint8)(unsafe.Pointer(_pPager + 9))) == int32(2) {
		goto _2
	}

	*(*uintptr)(unsafe.Pointer(_pPager + 64)) = _404sqlite3BitvecCreate(tls, *(*uint32)(unsafe.Pointer(_pPager + 28)))
	if (*(*uintptr)(unsafe.Pointer(_pPager + 64))) != 0 {
		goto _3
	}

	return int32(7)

_3:
	if (*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pPager + 80))))) != 0 {
		goto _4
	}

	if int32(*(*uint8)(unsafe.Pointer(_pPager + 9))) != int32(4) {
		goto _5
	}

	_893sqlite3MemJournalOpen(tls, *(*uintptr)(unsafe.Pointer(_pPager + 80)))
	goto _6

_5:
	_flags = int32(6)
	if (*(*uint8)(unsafe.Pointer(_pPager + 16))) == 0 {
		goto _7
	}

	_flags = int32(_flags | int32(4104))
	_nSpill = *(*int32)(unsafe.Pointer(_28sqlite3Config + 40))
	goto _8

_7:
	_flags = int32(_flags | int32(0x800))
	_nSpill = _894jrnlBufferSize(tls, _pPager)
_8:
	_rc = _895databaseIsUnmoved(tls, _pPager)
	if _rc != int32(0) {
		goto _9
	}

	_rc = _896sqlite3JournalOpen(tls, _pVfs, *(*uintptr)(unsafe.Pointer(_pPager + 216)), *(*uintptr)(unsafe.Pointer(_pPager + 80)), _flags, _nSpill)
_9:
_6:
_4:
	if _rc != int32(0) {
		goto _10
	}

	*(*int32)(unsafe.Pointer(_pPager + 48)) = int32(0)
	*(*int64)(unsafe.Pointer(_pPager + 96)) = int64(0)
	*(*uint8)(unsafe.Pointer(_pPager + 23)) = uint8(0)
	*(*int64)(unsafe.Pointer(_pPager + 104)) = int64(0)
	_rc = _587writeJournalHdr(tls, _pPager)
_10:
_2:
	if _rc == int32(0) {
		goto _11
	}

	_409sqlite3BitvecDestroy(tls, *(*uintptr)(unsafe.Pointer(_pPager + 64)))
	*(*uintptr)(unsafe.Pointer(_pPager + 64)) = null
	goto _12

_11:
	*(*uint8)(unsafe.Pointer(_pPager + 20)) = uint8(3)
_12:
	return _rc
}

// _571sqlite3PcacheMakeDirty is defined at sqlite3.c:45238:21
func _571sqlite3PcacheMakeDirty(tls crt.TLS, _p uintptr /* *TPgHdr = SPgHdr */) {
	if (int32(*(*uint16)(unsafe.Pointer(_p + 52))) & int32(17)) == 0 {
		goto _1
	}

	{
		p := &(*(*uint16)(unsafe.Pointer(_p + 52)))
		*p = uint16(int32(*p) & int32(-17))
	}
	if (int32(*(*uint16)(unsafe.Pointer(_p + 52))) & int32(0x1)) == 0 {
		goto _2
	}

	{
		p := &(*(*uint16)(unsafe.Pointer(_p + 52)))
		*p = uint16(int32(*p) ^ int32(3))
	}

	_888pcacheManageDirtyList(tls, _p, uint8(2))
_2:
_1:
}

// _572sqlite3BitvecTestNotNull is defined at sqlite3.c:44406:20
func _572sqlite3BitvecTestNotNull(tls crt.TLS, _p uintptr /* *TBitvec = SBitvec */, _i uint32) (r int32) {
	var (
		_bin uint32
		_h   uint32
	)

	_i--
	if _i < (*(*uint32)(unsafe.Pointer(_p))) {
		goto _1
	}

	return int32(0)

_1:
_2:
	if (*(*uint32)(unsafe.Pointer(_p + 8))) == 0 {
		goto _3
	}

	_bin = _i / (*(*uint32)(unsafe.Pointer(_p + 8)))
	_i = _i % (*(*uint32)(unsafe.Pointer(_p + 8)))
	_p = *(*uintptr)(unsafe.Pointer(_p + 16 + 8*uintptr(_bin)))
	if _p != 0 {
		goto _4
	}

	return int32(0)

_4:
	goto _2

_3:
	if uint64(*(*uint32)(unsafe.Pointer(_p))) > uint64(3968) {
		goto _5
	}

	return bool2int((int32(*(*uint8)(unsafe.Pointer(_p + 16 + uintptr(_i/uint32(8))))) & (int32(1) << (uint(_i&uint32(7)) % 32))) != int32(0))

	goto _6

_5:
	_h = uint32(uint64(postinc53(&_i)*uint32(1)) % uint64(124))
_7:
	if (*(*uint32)(unsafe.Pointer(_p + 16 + 4*uintptr(_h)))) == 0 {
		goto _8
	}

	if (*(*uint32)(unsafe.Pointer(_p + 16 + 4*uintptr(_h)))) != _i {
		goto _9
	}

	return int32(1)

_9:
	_h = uint32(uint64(_h+uint32(1)) % uint64(124))
	goto _7

_8:
	return int32(0)

_6:
	return r
}

// _573pagerAddPageToRollbackJournal is defined at sqlite3.c:53344:28
func _573pagerAddPageToRollbackJournal(tls crt.TLS, _pPg uintptr /* *TPgHdr = SPgHdr */) (r int32) {
	var (
		_pPager uintptr // *TPager = SPager
		_rc     int32
		_cksum  uint32
		_pData2 uintptr // *int8
		_iOff   int64
	)
	_pPager = *(*uintptr)(unsafe.Pointer(_pPg + 40))
	_iOff = *(*int64)(unsafe.Pointer(_pPager + 96))

	_pData2 = *(*uintptr)(unsafe.Pointer(_pPg + 8))
	_cksum = _897pager_cksum(tls, _pPager, _pData2)
	{
		p := &(*(*uint16)(unsafe.Pointer(_pPg + 52)))
		*p = uint16(int32(*p) | int32(0x8))
	}
	_rc = _581write32bits(tls, *(*uintptr)(unsafe.Pointer(_pPager + 80)), _iOff, *(*uint32)(unsafe.Pointer(_pPg + 48)))
	if _rc == int32(0) {
		goto _1
	}

	return _rc

_1:
	_rc = _163sqlite3OsWrite(tls, *(*uintptr)(unsafe.Pointer(_pPager + 80)), _pData2, *(*int32)(unsafe.Pointer(_pPager + 188)), _iOff+int64(4))
	if _rc == int32(0) {
		goto _2
	}

	return _rc

_2:
	_rc = _581write32bits(tls, *(*uintptr)(unsafe.Pointer(_pPager + 80)), (_iOff+int64(*(*int32)(unsafe.Pointer(_pPager + 188))))+int64(4), _cksum)
	if _rc == int32(0) {
		goto _3
	}

	return _rc

_3:
	{
		p := &(*(*int64)(unsafe.Pointer(_pPager + 96)))
		*p = int64(int64(*p) + int64(int32(8)+(*(*int32)(unsafe.Pointer(_pPager + 188)))))
	}
	(*(*int32)(unsafe.Pointer(_pPager + 48)))++

	_rc = _405sqlite3BitvecSet(tls, *(*uintptr)(unsafe.Pointer(_pPager + 64)), *(*uint32)(unsafe.Pointer(_pPg + 48)))

	_rc = int32(_rc | _890addToSavepointBitvecs(tls, _pPager, *(*uint32)(unsafe.Pointer(_pPg + 48))))

	return _rc
}

// _574sqlite3PCachePercentDirty is defined at sqlite3.c:45542:20
func _574sqlite3PCachePercentDirty(tls crt.TLS, _pCache uintptr /* *TPCache = SPCache */) (r int32) {
	var (
		_pDirty uintptr // *TPgHdr = SPgHdr
		_nDirty int32
		_nCache int32
	)
	_nDirty = int32(0)
	_nCache = _898numberOfCachePages(tls, _pCache)
	_pDirty = *(*uintptr)(unsafe.Pointer(_pCache))
_1:
	if _pDirty == 0 {
		goto _3
	}

	_nDirty++
	_pDirty = *(*uintptr)(unsafe.Pointer(_pDirty + 56))
	goto _1

_3:
	if _nCache != 0 {
		return int32((int64(_nDirty) * int64(100)) / int64(_nCache))
	}

	return int32(0)
}

// _575pcacheSortDirtyList is defined at sqlite3.c:45418:14
func _575pcacheSortDirtyList(tls crt.TLS, _pIn uintptr /* *TPgHdr = SPgHdr */) (r uintptr /* *TPgHdr = SPgHdr */) {
	esc := crt.MustMalloc(256)
	var (
		_a = esc   // *[32]*SPgHdr
		_p uintptr // *TPgHdr = SPgHdr
		_i int32
	)
	defer crt.Free(esc)
	crt.Xmemset(tls, _a, int32(0), uint64(256))
_1:
	if _pIn == 0 {
		goto _2
	}

	_p = _pIn
	_pIn = *(*uintptr)(unsafe.Pointer(_p + 32))
	*(*uintptr)(unsafe.Pointer(_p + 32)) = null
	_i = int32(0)
_3:
	if _i >= int32(31) {
		goto _5
	}

	if (*(*uintptr)(unsafe.Pointer(_a + 8*uintptr(_i)))) != 0 {
		goto _6
	}

	*(*uintptr)(unsafe.Pointer(_a + 8*uintptr(_i))) = _p
	goto _5

	goto _7

_6:
	_p = _899pcacheMergeDirtyList(tls, *(*uintptr)(unsafe.Pointer(_a + 8*uintptr(_i))), _p)
	*(*uintptr)(unsafe.Pointer(_a + 8*uintptr(_i))) = null
_7:
	_i++
	goto _3

_5:
	if _i != int32(31) {
		goto _8
	}

	*(*uintptr)(unsafe.Pointer(_a + 8*uintptr(_i))) = _899pcacheMergeDirtyList(tls, *(*uintptr)(unsafe.Pointer(_a + 8*uintptr(_i))), _p)
_8:
	goto _1

_2:
	_p = *(*uintptr)(unsafe.Pointer(_a))
	_i = int32(1)
_9:
	if _i >= int32(32) {
		goto _11
	}

	if (*(*uintptr)(unsafe.Pointer(_a + 8*uintptr(_i)))) != 0 {
		goto _12
	}

	goto _10

_12:
	_p = func() uintptr {
		if _p != 0 {
			return _899pcacheMergeDirtyList(tls, _p, *(*uintptr)(unsafe.Pointer(_a + 8*uintptr(_i))))
		}
		return *(*uintptr)(unsafe.Pointer(_a + 8*uintptr(_i)))
	}()

_10:
	_i++
	goto _9

_11:
	return _p
}

// _576pager_write_changecounter is defined at sqlite3.c:50558:13
func _576pager_write_changecounter(tls crt.TLS, _pPg uintptr /* *TPgHdr = SPgHdr */) {
	var _change_counter uint32

	_change_counter = _328sqlite3Get4byte(tls, (*(*uintptr)(unsafe.Pointer(_pPg + 40)))+136) + uint32(1)
	_329sqlite3Put4byte(tls, (*(*uintptr)(unsafe.Pointer(_pPg + 8)))+uintptr(24), _change_counter)
	_329sqlite3Put4byte(tls, (*(*uintptr)(unsafe.Pointer(_pPg + 8)))+uintptr(92), _change_counter)
	_329sqlite3Put4byte(tls, (*(*uintptr)(unsafe.Pointer(_pPg + 8)))+uintptr(96), uint32(3021000))
}

// _577sqlite3WalFrames is defined at sqlite3.c:58153:20
func _577sqlite3WalFrames(tls crt.TLS, _pWal uintptr /* *TWal = SWal */, _szPage int32, _pList uintptr /* *TPgHdr = SPgHdr */, _nTruncate uint32, _isCommit int32, _sync_flags int32) (r int32) {
	esc := crt.MustMalloc(84)
	var (
		_rc         int32
		_iFrame     uint32
		_p          uintptr // *TPgHdr = SPgHdr
		_pLast      uintptr // *TPgHdr = SPgHdr
		_nExtra     int32
		_szFrame    int32
		_iOffset    int64
		_w          = esc // *TWalWriter = struct{XpWal *SWal;...XsyncFlags int32;XszPage int32;}
		_iFirst     uint32
		_pLive      uintptr    // *TWalIndexHdr = SWalIndexHdr
		_aWalHdr    = esc + 32 // *[32]uint8
		_aCksum     = esc + 64 // *[2]uint32
		_nDbSize    int32
		_iWrite     = esc + 80 // *Tu32 = uint32
		_iOff       int64
		_pData      uintptr // *void
		_bSync      int32
		_sectorSize int32
		_sz         int64
	)
	defer crt.Free(esc)
	_pLast = 0
	_nExtra = int32(0)
	_iFirst = uint32(0)

	_pLive = _883walIndexHdr(tls, _pWal)
	if crt.Xmemcmp(tls, _pWal+72, _pLive, uint64(48)) == int32(0) {
		goto _1
	}

	_iFirst = (*(*uint32)(unsafe.Pointer(_pLive + 16))) + uint32(1)
_1:
	if int32(0) == set5(&_rc, _900walRestartLog(tls, _pWal)) {
		goto _2
	}

	return _rc

_2:
	_iFrame = *(*uint32)(unsafe.Pointer((_pWal + 72) + 16))
	if _iFrame != uint32(0) {
		goto _3
	}

	_329sqlite3Put4byte(tls, _aWalHdr, uint32(931071618))
	_329sqlite3Put4byte(tls, _aWalHdr+4, uint32(3007000))
	_329sqlite3Put4byte(tls, _aWalHdr+8, uint32(_szPage))
	_329sqlite3Put4byte(tls, _aWalHdr+12, *(*uint32)(unsafe.Pointer(_pWal + 136)))
	if (*(*uint32)(unsafe.Pointer(_pWal + 136))) != uint32(0) {
		goto _4
	}

	Xsqlite3_randomness(tls, int32(8), (_pWal+72)+32)
_4:
	crt.Xmemcpy(tls, _aWalHdr+16, (_pWal+72)+32, uint64(8))
	_901walChecksumBytes(tls, int32(1), _aWalHdr, int32(24), null, _aCksum)
	_329sqlite3Put4byte(tls, _aWalHdr+24, *(*uint32)(unsafe.Pointer(_aCksum)))
	_329sqlite3Put4byte(tls, _aWalHdr+28, *(*uint32)(unsafe.Pointer(_aCksum + 4)))
	*(*uint32)(unsafe.Pointer(_pWal + 56)) = uint32(_szPage)
	*(*uint8)(unsafe.Pointer((_pWal + 72) + 13)) = uint8(0)
	*(*uint32)(unsafe.Pointer((_pWal + 72) + 24)) = *(*uint32)(unsafe.Pointer(_aCksum))
	*(*uint32)(unsafe.Pointer(((_pWal + 72) + 24) + 4)) = *(*uint32)(unsafe.Pointer(_aCksum + 4))
	*(*uint8)(unsafe.Pointer(_pWal + 67)) = uint8(1)
	_rc = _163sqlite3OsWrite(tls, *(*uintptr)(unsafe.Pointer(_pWal + 16)), _aWalHdr, int32(32), int64(0))
	if _rc == int32(0) {
		goto _5
	}

	return _rc

_5:
	if (*(*uint8)(unsafe.Pointer(_pWal + 68))) == 0 {
		goto _6
	}

	_rc = _354sqlite3OsSync(tls, *(*uintptr)(unsafe.Pointer(_pWal + 16)), (_sync_flags>>(uint(2)%32))&int32(0x3))
	if _rc == 0 {
		goto _7
	}

	return _rc

_7:
_6:
_3:
	*(*uintptr)(unsafe.Pointer(_w)) = _pWal
	*(*uintptr)(unsafe.Pointer(_w + 8)) = *(*uintptr)(unsafe.Pointer(_pWal + 16))
	*(*int64)(unsafe.Pointer(_w + 16)) = int64(0)
	*(*int32)(unsafe.Pointer(_w + 24)) = _sync_flags
	*(*int32)(unsafe.Pointer(_w + 28)) = _szPage
	_iOffset = int64(32) + (int64((_iFrame+uint32(1))-uint32(1)) * int64(_szPage+int32(24)))
	_szFrame = _szPage + int32(24)
	_p = _pList
_8:
	if _p == 0 {
		goto _10
	}

	if _iFirst == 0 || (*(*uintptr)(unsafe.Pointer(_p + 32))) == 0 && _isCommit != int32(0) {
		goto _11
	}

	*(*uint32)(unsafe.Pointer(_iWrite)) = uint32(0)
	_902sqlite3WalFindFrame(tls, _pWal, *(*uint32)(unsafe.Pointer(_p + 48)), _iWrite)

	if (*(*uint32)(unsafe.Pointer(_iWrite))) < _iFirst {
		goto _12
	}

	_iOff = (int64(32) + (int64((*(*uint32)(unsafe.Pointer(_iWrite)))-uint32(1)) * int64(_szPage+int32(24)))) + int64(24)
	if (*(*uint32)(unsafe.Pointer(_pWal + 124))) != uint32(0) && (*(*uint32)(unsafe.Pointer(_iWrite))) >= (*(*uint32)(unsafe.Pointer(_pWal + 124))) {
		goto _13
	}

	*(*uint32)(unsafe.Pointer(_pWal + 124)) = *(*uint32)(unsafe.Pointer(_iWrite))
_13:
	_pData = *(*uintptr)(unsafe.Pointer(_p + 8))
	_rc = _163sqlite3OsWrite(tls, *(*uintptr)(unsafe.Pointer(_pWal + 16)), _pData, _szPage, _iOff)
	if _rc == 0 {
		goto _14
	}

	return _rc

_14:
	{
		p := &(*(*uint16)(unsafe.Pointer(_p + 52)))
		*p = uint16(int32(*p) & int32(-65))
	}
	goto _9

_12:
_11:
	_iFrame++

	_nDbSize = int32(func() uint32 {
		if (_isCommit != 0) && ((*(*uintptr)(unsafe.Pointer(_p + 32))) == 0) {
			return _nTruncate
		}
		return uint32(0)
	}())
	_rc = _903walWriteOneFrame(tls, _w, _p, _nDbSize, _iOffset)
	if _rc == 0 {
		goto _15
	}

	return _rc

_15:
	_pLast = _p
	_iOffset = int64(_iOffset + int64(_szFrame))
	{
		p := &(*(*uint16)(unsafe.Pointer(_p + 52)))
		*p = uint16(int32(*p) | int32(0x40))
	}

_9:
	_p = *(*uintptr)(unsafe.Pointer(_p + 32))
	goto _8

_10:
	if _isCommit == 0 || (*(*uint32)(unsafe.Pointer(_pWal + 124))) == 0 {
		goto _16
	}

	_rc = _904walRewriteChecksums(tls, _pWal, _iFrame)
	if _rc == 0 {
		goto _17
	}

	return _rc

_17:
_16:
	if _isCommit == 0 || (_sync_flags&int32(0x3)) == int32(0) {
		goto _18
	}

	_bSync = int32(1)
	if (*(*uint8)(unsafe.Pointer(_pWal + 69))) == 0 {
		goto _19
	}

	_sectorSize = _905sqlite3SectorSize(tls, *(*uintptr)(unsafe.Pointer(_pWal + 16)))
	*(*int64)(unsafe.Pointer(_w + 16)) = int64((((_iOffset + int64(_sectorSize)) - int64(1)) / int64(_sectorSize)) * int64(_sectorSize))
	_bSync = bool2int((*(*int64)(unsafe.Pointer(_w + 16))) == int64(_iOffset))
_20:
	if _iOffset >= int64(*(*int64)(unsafe.Pointer(_w + 16))) {
		goto _21
	}

	_rc = _903walWriteOneFrame(tls, _w, _pLast, int32(_nTruncate), _iOffset)
	if _rc == 0 {
		goto _22
	}

	return _rc

_22:
	_iOffset = int64(_iOffset + int64(_szFrame))
	_nExtra++
	goto _20

_21:
_19:
	if _bSync == 0 {
		goto _23
	}

	_rc = _354sqlite3OsSync(tls, *(*uintptr)(unsafe.Pointer(_w + 8)), _sync_flags&int32(0x3))
_23:
_18:
	if _isCommit == 0 || (*(*uint8)(unsafe.Pointer(_pWal + 67))) == 0 || (*(*int64)(unsafe.Pointer(_pWal + 32))) < int64(0) {
		goto _24
	}

	_sz = *(*int64)(unsafe.Pointer(_pWal + 32))
	if (int64(32) + (int64(((_iFrame+uint32(_nExtra))+uint32(1))-uint32(1)) * int64(_szPage+int32(24)))) <= (*(*int64)(unsafe.Pointer(_pWal + 32))) {
		goto _25
	}

	_sz = int64(32) + (int64(((_iFrame+uint32(_nExtra))+uint32(1))-uint32(1)) * int64(_szPage+int32(24)))
_25:
	_906walLimitSize(tls, _pWal, _sz)
	*(*uint8)(unsafe.Pointer(_pWal + 67)) = uint8(0)
_24:
	_iFrame = *(*uint32)(unsafe.Pointer((_pWal + 72) + 16))
	_p = _pList
_26:
	if _p == 0 || _rc != int32(0) {
		goto _28
	}

	if (int32(*(*uint16)(unsafe.Pointer(_p + 52))) & int32(0x40)) != int32(0) {
		goto _29
	}

	goto _27

_29:
	_iFrame++
	_rc = _907walIndexAppend(tls, _pWal, _iFrame, *(*uint32)(unsafe.Pointer(_p + 48)))

_27:
	_p = *(*uintptr)(unsafe.Pointer(_p + 32))
	goto _26

_28:
_30:
	if _rc != int32(0) || _nExtra <= int32(0) {
		goto _31
	}

	_iFrame++
	_nExtra--
	_rc = _907walIndexAppend(tls, _pWal, _iFrame, *(*uint32)(unsafe.Pointer(_pLast + 48)))
	goto _30

_31:
	if _rc != int32(0) {
		goto _32
	}

	*(*uint16)(unsafe.Pointer((_pWal + 72) + 14)) = uint16((_szPage & int32(0xff00)) | (_szPage >> (uint(16) % 32)))
	*(*uint32)(unsafe.Pointer((_pWal + 72) + 16)) = _iFrame
	if _isCommit == 0 {
		goto _33
	}

	(*(*uint32)(unsafe.Pointer((_pWal + 72) + 8)))++
	*(*uint32)(unsafe.Pointer((_pWal + 72) + 20)) = uint32(_nTruncate)
_33:
	if _isCommit == 0 {
		goto _34
	}

	_908walIndexWriteHdr(tls, _pWal)
	*(*uint32)(unsafe.Pointer(_pWal + 24)) = _iFrame
_34:
_32:
	return _rc
}

// _578sqlite3BackupUpdate is defined at sqlite3.c:70330:21
func _578sqlite3BackupUpdate(tls crt.TLS, _pBackup uintptr /* *Tsqlite3_backup = Ssqlite3_backup */, _iPage uint32, _aData uintptr /* *Tu8 = uint8 */) {
	if _pBackup == 0 {
		goto _1
	}

	_909backupUpdate(tls, _pBackup, _iPage, _aData)
_1:
}

// _579sqlite3PcacheMakeClean is defined at sqlite3.c:45257:21
func _579sqlite3PcacheMakeClean(tls crt.TLS, _p uintptr /* *TPgHdr = SPgHdr */) {
	if (int32(*(*uint16)(unsafe.Pointer(_p + 52))) & int32(0x2)) == int32(0) {
		goto _1
	}

	_888pcacheManageDirtyList(tls, _p, uint8(1))
	{
		p := &(*(*uint16)(unsafe.Pointer(_p + 52)))
		*p = uint16(int32(*p) & int32(-15))
	}
	{
		p := &(*(*uint16)(unsafe.Pointer(_p + 52)))
		*p = uint16(int32(*p) | int32(0x1))
	}

	if int32(*(*int16)(unsafe.Pointer(_p + 54))) != int32(0) {
		goto _2
	}

	_887pcacheUnpin(tls, _p)
_2:
_1:
}

// _580journalHdrOffset is defined at sqlite3.c:48841:12
func _580journalHdrOffset(tls crt.TLS, _pPager uintptr /* *TPager = SPager */) (r int64) {
	var (
		_offset int64
		_c      int64
	)
	_offset = int64(0)
	_c = *(*int64)(unsafe.Pointer(_pPager + 96))
	if _c == 0 {
		goto _1
	}

	_offset = (((_c - int64(1)) / int64(*(*uint32)(unsafe.Pointer(_pPager + 184)))) + int64(1)) * int64(*(*uint32)(unsafe.Pointer(_pPager + 184)))
_1:
	return _offset
}

// _581write32bits is defined at sqlite3.c:48606:12
func _581write32bits(tls crt.TLS, _fd uintptr /* *Tsqlite3_file = Ssqlite3_file */, _offset int64, _val uint32) (r int32) {
	esc := crt.MustMalloc(4)
	var _ac = esc // *[4]int8
	defer crt.Free(esc)
	_329sqlite3Put4byte(tls, _ac, _val)
	return _163sqlite3OsWrite(tls, _fd, _ac, int32(4), _offset)
}

// _582aJournalMagic [8]uint8, escapes: true, sqlite3.c:48249:28
var _582aJournalMagic = ds + 7045

// _583zerobyte Tu8 = uint8, escapes: true, sqlite3.c:51758:27
var _583zerobyte = bss + 11392

// _584sqlite3PagerExclusiveLock is defined at sqlite3.c:53779:20
func _584sqlite3PagerExclusiveLock(tls crt.TLS, _pPager uintptr /* *TPager = SPager */) (r int32) {
	var _rc int32

	_rc = *(*int32)(unsafe.Pointer(_pPager + 44))

	if _rc != int32(0) {
		goto _1
	}

	if int32(0) != bool2int((*(*uintptr)(unsafe.Pointer(_pPager + 288))) != 0) {
		goto _2
	}

	_rc = _560pager_wait_on_lock(tls, _pPager, int32(4))
_2:
_1:
	return _rc
}

// _585sqlite3OsDeviceCharacteristics is defined at sqlite3.c:20845:20
func _585sqlite3OsDeviceCharacteristics(tls crt.TLS, _id uintptr /* *Tsqlite3_file = Ssqlite3_file */) (r int32) {
	return fn12(*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_id))) + 96)))(tls, _id)
}

// _586sqlite3OsRead is defined at sqlite3.c:20780:20
func _586sqlite3OsRead(tls crt.TLS, _id uintptr /* *Tsqlite3_file = Ssqlite3_file */, _pBuf uintptr /* *void */, _amt int32, _offset int64) (r int32) {
	return fn44(*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_id))) + 16)))(tls, _id, _pBuf, _amt, _offset)
}

// _587writeJournalHdr is defined at sqlite3.c:48924:12
func _587writeJournalHdr(tls crt.TLS, _pPager uintptr /* *TPager = SPager */) (r int32) {
	var (
		_rc      int32
		_zHeader uintptr // *int8
		_nHeader uint32
		_nWrite  uint32
		_ii      int32
	)
	_rc = int32(0)
	_zHeader = *(*uintptr)(unsafe.Pointer(_pPager + 272))
	_nHeader = uint32(*(*int32)(unsafe.Pointer(_pPager + 188)))

	if _nHeader <= (*(*uint32)(unsafe.Pointer(_pPager + 184))) {
		goto _1
	}

	_nHeader = *(*uint32)(unsafe.Pointer(_pPager + 184))
_1:
	_ii = int32(0)
_2:
	if _ii >= (*(*int32)(unsafe.Pointer(_pPager + 128))) {
		goto _4
	}

	if (*(*int64)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pPager + 120))) + 48*uintptr(_ii)) + 8))) != int64(0) {
		goto _5
	}

	*(*int64)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pPager + 120))) + 48*uintptr(_ii)) + 8)) = *(*int64)(unsafe.Pointer(_pPager + 96))
_5:
	_ii++
	goto _2

_4:
	*(*int64)(unsafe.Pointer(_pPager + 104)) = set139(&(*(*int64)(unsafe.Pointer(_pPager + 96))), _580journalHdrOffset(tls, _pPager))

	if (*(*uint8)(unsafe.Pointer(_pPager + 11))) == 0 && int32(*(*uint8)(unsafe.Pointer(_pPager + 9))) != int32(4) && _585sqlite3OsDeviceCharacteristics(tls, *(*uintptr)(unsafe.Pointer(_pPager + 72)))&int32(0x200) == 0 {
		goto _6
	}

	crt.Xmemcpy(tls, _zHeader, _582aJournalMagic, uint64(8))
	_329sqlite3Put4byte(tls, _zHeader+8, uint32(0xffffffff))
	goto _7

_6:
	crt.Xmemset(tls, _zHeader, int32(0), uint64(12))
_7:
	Xsqlite3_randomness(tls, int32(4), _pPager+52)
	_329sqlite3Put4byte(tls, _zHeader+12, *(*uint32)(unsafe.Pointer(_pPager + 52)))
	_329sqlite3Put4byte(tls, _zHeader+16, *(*uint32)(unsafe.Pointer(_pPager + 32)))
	_329sqlite3Put4byte(tls, _zHeader+20, *(*uint32)(unsafe.Pointer(_pPager + 184)))
	_329sqlite3Put4byte(tls, _zHeader+24, uint32(*(*int32)(unsafe.Pointer(_pPager + 188))))
	crt.Xmemset(tls, _zHeader+28, int32(0), uint64(_nHeader)-uint64(28))
	_nWrite = uint32(0)
_8:
	if _rc != int32(0) || _nWrite >= (*(*uint32)(unsafe.Pointer(_pPager + 184))) {
		goto _10
	}

	_rc = _163sqlite3OsWrite(tls, *(*uintptr)(unsafe.Pointer(_pPager + 80)), _zHeader, int32(_nHeader), *(*int64)(unsafe.Pointer(_pPager + 96)))

	{
		p := &(*(*int64)(unsafe.Pointer(_pPager + 96)))
		*p = int64(int64(*p) + int64(_nHeader))
	}
	_nWrite = uint32(_nWrite + _nHeader)
	goto _8

_10:
	return _rc
}

// _588sqlite3PcacheClearSyncFlags is defined at sqlite3.c:45298:21
func _588sqlite3PcacheClearSyncFlags(tls crt.TLS, _pCache uintptr /* *TPCache = SPCache */) {
	var _p uintptr // *TPgHdr = SPgHdr

	_p = *(*uintptr)(unsafe.Pointer(_pCache))
_1:
	if _p == 0 {
		goto _3
	}

	{
		p := &(*(*uint16)(unsafe.Pointer(_p + 52)))
		*p = uint16(int32(*p) & int32(-9))
	}
	_p = *(*uintptr)(unsafe.Pointer(_p + 56))
	goto _1

_3:
	*(*uintptr)(unsafe.Pointer(_pCache + 16)) = *(*uintptr)(unsafe.Pointer(_pCache + 8))
}

// _589pagerOpentemp is defined at sqlite3.c:51146:12
func _589pagerOpentemp(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _pFile uintptr /* *Tsqlite3_file = Ssqlite3_file */, _vfsFlags int32) (r int32) {
	var _rc int32

	_vfsFlags = int32(_vfsFlags | int32(30))
	_rc = _845sqlite3OsOpen(tls, *(*uintptr)(unsafe.Pointer(_pPager)), null, _pFile, _vfsFlags, null)

	return _rc
}

// _590pager_end_transaction is defined at sqlite3.c:49497:12
func _590pager_end_transaction(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _hasMaster int32, _bCommit int32) (r int32) {
	var (
		_rc      int32
		_rc2     int32
		_bDelete int32
	)
	_rc = int32(0)
	_rc2 = int32(0)

	if int32(*(*uint8)(unsafe.Pointer(_pPager + 20))) >= int32(2) || int32(*(*uint8)(unsafe.Pointer(_pPager + 21))) >= int32(2) {
		goto _1
	}

	return int32(0)

_1:
	_910releaseAllSavepoints(tls, _pPager)

	if (*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pPager + 80))))) == 0 {
		goto _2
	}

	if _911sqlite3JournalIsInMemory(tls, *(*uintptr)(unsafe.Pointer(_pPager + 80))) == 0 {
		goto _3
	}

	_849sqlite3OsClose(tls, *(*uintptr)(unsafe.Pointer(_pPager + 80)))
	goto _4

_3:
	if int32(*(*uint8)(unsafe.Pointer(_pPager + 9))) != int32(3) {
		goto _5
	}

	if (*(*int64)(unsafe.Pointer(_pPager + 96))) != int64(0) {
		goto _7
	}

	_rc = int32(0)
	goto _8

_7:
	_rc = _353sqlite3OsTruncate(tls, *(*uintptr)(unsafe.Pointer(_pPager + 80)), int64(0))
	if _rc != int32(0) || (*(*uint8)(unsafe.Pointer(_pPager + 12))) == 0 {
		goto _9
	}

	_rc = _354sqlite3OsSync(tls, *(*uintptr)(unsafe.Pointer(_pPager + 80)), int32(*(*uint8)(unsafe.Pointer(_pPager + 14))))
_9:
_8:
	*(*int64)(unsafe.Pointer(_pPager + 96)) = int64(0)
	goto _6

_5:
	if int32(*(*uint8)(unsafe.Pointer(_pPager + 9))) != int32(1) && ((*(*uint8)(unsafe.Pointer(_pPager + 8))) == 0 || int32(*(*uint8)(unsafe.Pointer(_pPager + 9))) == int32(5)) {
		goto _10
	}

	_rc = _912zeroJournalHdr(tls, _pPager, bool2int((_hasMaster != 0) || ((*(*uint8)(unsafe.Pointer(_pPager + 16))) != 0)))
	*(*int64)(unsafe.Pointer(_pPager + 96)) = int64(0)
	goto _11

_10:
	_bDelete = bool2int((*(*uint8)(unsafe.Pointer(_pPager + 16))) == 0)

	_849sqlite3OsClose(tls, *(*uintptr)(unsafe.Pointer(_pPager + 80)))
	if _bDelete == 0 {
		goto _12
	}

	_rc = _913sqlite3OsDelete(tls, *(*uintptr)(unsafe.Pointer(_pPager)), *(*uintptr)(unsafe.Pointer(_pPager + 216)), int32(*(*uint8)(unsafe.Pointer(_pPager + 13))))
_12:
_11:
_6:
_4:
_2:
	_409sqlite3BitvecDestroy(tls, *(*uintptr)(unsafe.Pointer(_pPager + 64)))
	*(*uintptr)(unsafe.Pointer(_pPager + 64)) = null
	*(*int32)(unsafe.Pointer(_pPager + 48)) = int32(0)
	if _rc != int32(0) {
		goto _13
	}

	if (*(*uint8)(unsafe.Pointer(_pPager + 19))) == 0 && _342pagerFlushOnCommit(tls, _pPager, _bCommit) == 0 {
		goto _14
	}

	_346sqlite3PcacheCleanAll(tls, *(*uintptr)(unsafe.Pointer(_pPager + 280)))
	goto _15

_14:
	_914sqlite3PcacheClearWritable(tls, *(*uintptr)(unsafe.Pointer(_pPager + 280)))
_15:
	_915sqlite3PcacheTruncate(tls, *(*uintptr)(unsafe.Pointer(_pPager + 280)), *(*uint32)(unsafe.Pointer(_pPager + 28)))
_13:
	if (*(*uintptr)(unsafe.Pointer(_pPager + 288))) == 0 {
		goto _16
	}

	_rc2 = _916sqlite3WalEndWriteTransaction(tls, *(*uintptr)(unsafe.Pointer(_pPager + 288)))

	goto _17

_16:
	if _rc != int32(0) || _bCommit == 0 || (*(*uint32)(unsafe.Pointer(_pPager + 36))) <= (*(*uint32)(unsafe.Pointer(_pPager + 28))) {
		goto _18
	}

	_rc = _351pager_truncate(tls, _pPager, *(*uint32)(unsafe.Pointer(_pPager + 28)))
_18:
_17:
	if _rc != int32(0) || _bCommit == 0 || (*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pPager + 72))))) == 0 {
		goto _19
	}

	_rc = _235sqlite3OsFileControl(tls, *(*uintptr)(unsafe.Pointer(_pPager + 72)), int32(22), null)
	if _rc != int32(12) {
		goto _20
	}

	_rc = int32(0)
_20:
_19:
	if (*(*uint8)(unsafe.Pointer(_pPager + 8))) != 0 || (*(*uintptr)(unsafe.Pointer(_pPager + 288))) != 0 && _557sqlite3WalExclusiveMode(tls, *(*uintptr)(unsafe.Pointer(_pPager + 288)), int32(0)) == 0 {
		goto _21
	}

	_rc2 = _873pagerUnlockDb(tls, _pPager, int32(1))
	*(*uint8)(unsafe.Pointer(_pPager + 22)) = uint8(0)
_21:
	*(*uint8)(unsafe.Pointer(_pPager + 20)) = uint8(1)
	*(*uint8)(unsafe.Pointer(_pPager + 23)) = uint8(0)
	return func() int32 {
		if _rc == int32(0) {
			return _rc2
		}
		return _rc
	}()
}

// _591pager_error is defined at sqlite3.c:49403:12
func _591pager_error(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _rc int32) (r int32) {
	var _rc2 int32

	_rc2 = _rc & int32(0xff)

	if _rc2 != int32(13) && _rc2 != int32(10) {
		goto _1
	}

	*(*int32)(unsafe.Pointer(_pPager + 44)) = _rc
	*(*uint8)(unsafe.Pointer(_pPager + 20)) = uint8(6)
	_603setGetterMethod(tls, _pPager)
_1:
	return _rc
}

// _592downgradeAllSharedCacheTableLocks is defined at sqlite3.c:60100:13
func _592downgradeAllSharedCacheTableLocks(tls crt.TLS, _p uintptr /* *TBtree = SBtree */) {
	var (
		_pBt   uintptr // *TBtShared = SBtShared
		_pLock uintptr // *TBtLock = SBtLock
	)
	_pBt = *(*uintptr)(unsafe.Pointer(_p + 8))
	if (*(*uintptr)(unsafe.Pointer(_pBt + 120))) != _p {
		goto _1
	}

	*(*uintptr)(unsafe.Pointer(_pBt + 120)) = null
	{
		p := &(*(*uint16)(unsafe.Pointer(_pBt + 38)))
		*p = uint16(int32(*p) & int32(-193))
	}
	_pLock = *(*uintptr)(unsafe.Pointer(_pBt + 112))
_2:
	if _pLock == 0 {
		goto _4
	}

	*(*uint8)(unsafe.Pointer(_pLock + 12)) = uint8(1)
	_pLock = *(*uintptr)(unsafe.Pointer(_pLock + 16))
	goto _2

_4:
_1:
}

// _593clearAllSharedCacheTableLocks is defined at sqlite3.c:60056:13
func _593clearAllSharedCacheTableLocks(tls crt.TLS, _p uintptr /* *TBtree = SBtree */) {
	var (
		_pBt    uintptr // *TBtShared = SBtShared
		_ppIter uintptr // **TBtLock = SBtLock
		_pLock  uintptr // *TBtLock = SBtLock
	)
	_pBt = *(*uintptr)(unsafe.Pointer(_p + 8))
	_ppIter = _pBt + 112

_1:
	if (*(*uintptr)(unsafe.Pointer(_ppIter))) == 0 {
		goto _2
	}

	_pLock = *(*uintptr)(unsafe.Pointer(_ppIter))

	if (*(*uintptr)(unsafe.Pointer(_pLock))) != _p {
		goto _3
	}

	*(*uintptr)(unsafe.Pointer(_ppIter)) = *(*uintptr)(unsafe.Pointer(_pLock + 16))

	if (*(*uint32)(unsafe.Pointer(_pLock + 8))) == uint32(1) {
		goto _5
	}

	Xsqlite3_free(tls, _pLock)
_5:
	goto _4

_3:
	_ppIter = _pLock + 16
_4:
	goto _1

_2:
	if (*(*uintptr)(unsafe.Pointer(_pBt + 120))) != _p {
		goto _6
	}

	*(*uintptr)(unsafe.Pointer(_pBt + 120)) = null
	{
		p := &(*(*uint16)(unsafe.Pointer(_pBt + 38)))
		*p = uint16(int32(*p) & int32(-193))
	}
	goto _7

_6:
	if (*(*int32)(unsafe.Pointer(_pBt + 56))) != int32(2) {
		goto _8
	}

	{
		p := &(*(*uint16)(unsafe.Pointer(_pBt + 38)))
		*p = uint16(int32(*p) & int32(-129))
	}
_8:
_7:
}

// _594invalidateAllOverflowCache is defined at sqlite3.c:60153:13
func _594invalidateAllOverflowCache(tls crt.TLS, _pBt uintptr /* *TBtShared = SBtShared */) {
	var _p uintptr // *TBtCursor = SBtCursor

	_p = *(*uintptr)(unsafe.Pointer(_pBt + 16))
_1:
	if _p == 0 {
		goto _3
	}

	{
		p := &(*(*uint8)(unsafe.Pointer(_p + 1)))
		*p = uint8(int32(*p) & int32(-5))
	}
	_p = *(*uintptr)(unsafe.Pointer(_p + 24))
	goto _1

_3:
}

// _595ptrmapPageno is defined at sqlite3.c:60588:13
func _595ptrmapPageno(tls crt.TLS, _pBt uintptr /* *TBtShared = SBtShared */, _pgno uint32) (r uint32) {
	var (
		_nPagesPerMapPage int32
		_iPtrMap          uint32
		_ret              uint32
	)

	if _pgno >= uint32(2) {
		goto _1
	}

	return uint32(0)

_1:
	_nPagesPerMapPage = int32(((*(*uint32)(unsafe.Pointer(_pBt + 52))) / uint32(5)) + uint32(1))
	_iPtrMap = (_pgno - uint32(2)) / uint32(_nPagesPerMapPage)
	_ret = (_iPtrMap * uint32(_nPagesPerMapPage)) + uint32(2)
	if _ret != (uint32(_149sqlite3PendingByte)/(*(*uint32)(unsafe.Pointer(_pBt + 48))))+uint32(1) {
		goto _2
	}

	_ret++
_2:
	return _ret
}

// _596finalDbSize is defined at sqlite3.c:63378:13
func _596finalDbSize(tls crt.TLS, _pBt uintptr /* *TBtShared = SBtShared */, _nOrig uint32, _nFree uint32) (r uint32) {
	var (
		_nEntry  int32
		_nPtrmap uint32
		_nFin    uint32
	)
	_nEntry = int32((*(*uint32)(unsafe.Pointer(_pBt + 52))) / uint32(5))
	_nPtrmap = (((_nFree - _nOrig) + _595ptrmapPageno(tls, _pBt, _nOrig)) + uint32(_nEntry)) / uint32(_nEntry)
	_nFin = (_nOrig - _nFree) - _nPtrmap
	if _nOrig <= (uint32(_149sqlite3PendingByte)/(*(*uint32)(unsafe.Pointer(_pBt + 48))))+uint32(1) || _nFin >= (uint32(_149sqlite3PendingByte)/(*(*uint32)(unsafe.Pointer(_pBt + 48))))+uint32(1) {
		goto _1
	}

	_nFin--
_1:
_2:
	if _595ptrmapPageno(tls, _pBt, _nFin) != _nFin && _nFin != (uint32(_149sqlite3PendingByte)/(*(*uint32)(unsafe.Pointer(_pBt + 48))))+uint32(1) {
		goto _3
	}

	_nFin--
	goto _2

_3:
	return _nFin
}

// _597incrVacuumStep is defined at sqlite3.c:63282:12
func _597incrVacuumStep(tls crt.TLS, _pBt uintptr /* *TBtShared = SBtShared */, _nFin uint32, _iLastPg uint32, _bCommit int32) (r int32) {
	esc := crt.MustMalloc(104)
	var (
		_nFreeList uint32
		_rc        int32
		_eType     = esc      // *Tu8 = uint8
		_iPtrPage  = esc + 16 // *TPgno = Tu32 = uint32
		_iFreePg   = esc + 32 // *TPgno = Tu32 = uint32
		_pFreePg   = esc + 48 // **TMemPage = SMemPage
		_1iFreePg  = esc + 64 // *TPgno = Tu32 = uint32
		_pLastPg   = esc + 80 // **TMemPage = SMemPage
		_eMode     uint8
		_iNear     uint32
		_2pFreePg  = esc + 96 // **TMemPage = SMemPage
	)
	defer crt.Free(esc)

	if _595ptrmapPageno(tls, _pBt, _iLastPg) == _iLastPg || _iLastPg == (uint32(_149sqlite3PendingByte)/(*(*uint32)(unsafe.Pointer(_pBt + 48))))+uint32(1) {
		goto _1
	}

	_nFreeList = uint32(_328sqlite3Get4byte(tls, (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pBt + 24))) + 80)))+36))
	if _nFreeList != uint32(0) {
		goto _2
	}

	return int32(101)

_2:
	_rc = _917ptrmapGet(tls, _pBt, _iLastPg, _eType, _iPtrPage)
	if _rc == int32(0) {
		goto _3
	}

	return _rc

_3:
	if int32(*(*uint8)(unsafe.Pointer(_eType))) != int32(1) {
		goto _4
	}

	return _556sqlite3CorruptError(tls, int32(63303))

_4:
	if int32(*(*uint8)(unsafe.Pointer(_eType))) != int32(2) {
		goto _5
	}

	if _bCommit != int32(0) {
		goto _7
	}

	_rc = _918allocateBtreePage(tls, _pBt, _pFreePg, _iFreePg, _iLastPg, uint8(1))
	if _rc == int32(0) {
		goto _8
	}

	return _rc

_8:
	_919releasePage(tls, *(*uintptr)(unsafe.Pointer(_pFreePg)))
_7:
	goto _6

_5:
	_eMode = uint8(0)
	_iNear = uint32(0)
	_rc = _363btreeGetPage(tls, _pBt, _iLastPg, _pLastPg, int32(0))
	if _rc == int32(0) {
		goto _9
	}

	return _rc

_9:
	if _bCommit != int32(0) {
		goto _10
	}

	_eMode = uint8(2)
	_iNear = _nFin
_10:
_11:
	_rc = _918allocateBtreePage(tls, _pBt, _2pFreePg, _1iFreePg, _iNear, _eMode)
	if _rc == int32(0) {
		goto _14
	}

	_919releasePage(tls, *(*uintptr)(unsafe.Pointer(_pLastPg)))
	return _rc

_14:
	_919releasePage(tls, *(*uintptr)(unsafe.Pointer(_2pFreePg)))
	if (_bCommit != 0) && ((*(*uint32)(unsafe.Pointer(_1iFreePg))) > _nFin) {
		goto _11
	}

	_rc = _920relocatePage(tls, _pBt, *(*uintptr)(unsafe.Pointer(_pLastPg)), *(*uint8)(unsafe.Pointer(_eType)), *(*uint32)(unsafe.Pointer(_iPtrPage)), *(*uint32)(unsafe.Pointer(_1iFreePg)), _bCommit)
	_919releasePage(tls, *(*uintptr)(unsafe.Pointer(_pLastPg)))
	if _rc == int32(0) {
		goto _15
	}

	return _rc

_15:
_6:
_1:
	if _bCommit != int32(0) {
		goto _16
	}

_17:
	_iLastPg--
	if (_iLastPg == (uint32(_149sqlite3PendingByte)/(*(*uint32)(unsafe.Pointer(_pBt + 48))))+uint32(1)) || (_595ptrmapPageno(tls, _pBt, _iLastPg) == _iLastPg) {
		goto _17
	}

	*(*uint8)(unsafe.Pointer(_pBt + 35)) = uint8(1)
	*(*uint32)(unsafe.Pointer(_pBt + 60)) = uint32(_iLastPg)
_16:
	return int32(0)
}

// _598saveCursorsOnList is defined at sqlite3.c:60398:28
func _598saveCursorsOnList(tls crt.TLS, _p uintptr /* *TBtCursor = SBtCursor */, _iRoot uint32, _pExcept uintptr /* *TBtCursor = SBtCursor */) (r int32) {
	var _rc int32

_1:
	if _p == _pExcept || uint32(0) != _iRoot && (*(*uint32)(unsafe.Pointer(_p + 80))) != _iRoot {
		goto _4
	}

	if int32(*(*uint8)(unsafe.Pointer(_p))) != int32(1) && int32(*(*uint8)(unsafe.Pointer(_p))) != int32(2) {
		goto _5
	}

	_rc = _599saveCursorPosition(tls, _p)
	if int32(0) == _rc {
		goto _7
	}

	return _rc

_7:
	goto _6

_5:
	_601btreeReleaseAllCursorPages(tls, _p)
_6:
_4:
	_p = *(*uintptr)(unsafe.Pointer(_p + 24))
	if _p != 0 {
		goto _1
	}

	return int32(0)
}

// _599saveCursorPosition is defined at sqlite3.c:60334:12
func _599saveCursorPosition(tls crt.TLS, _pCur uintptr /* *TBtCursor = SBtCursor */) (r int32) {
	var _rc int32

	if int32(*(*uint8)(unsafe.Pointer(_pCur))) != int32(2) {
		goto _1
	}

	*(*uint8)(unsafe.Pointer(_pCur)) = uint8(1)
	goto _2

_1:
	*(*int32)(unsafe.Pointer(_pCur + 84)) = int32(0)
_2:
	_rc = _921saveCursorKey(tls, _pCur)
	if _rc != int32(0) {
		goto _3
	}

	_601btreeReleaseAllCursorPages(tls, _pCur)
	*(*uint8)(unsafe.Pointer(_pCur)) = uint8(3)
_3:
	{
		p := &(*(*uint8)(unsafe.Pointer(_pCur + 1)))
		*p = uint8(int32(*p) & int32(-15))
	}
	return _rc
}

// _600sqlite3BtreeClearCursor is defined at sqlite3.c:60423:21
func _600sqlite3BtreeClearCursor(tls crt.TLS, _pCur uintptr /* *TBtCursor = SBtCursor */) {
	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_pCur + 72)))
	*(*uintptr)(unsafe.Pointer(_pCur + 72)) = null
	*(*uint8)(unsafe.Pointer(_pCur)) = uint8(0)
}

// _601btreeReleaseAllCursorPages is defined at sqlite3.c:60274:13
func _601btreeReleaseAllCursorPages(tls crt.TLS, _pCur uintptr /* *TBtCursor = SBtCursor */) {
	var _i int32

	if int32(*(*int8)(unsafe.Pointer(_pCur + 88))) < int32(0) {
		goto _1
	}

	_i = int32(0)
_2:
	if _i >= int32(*(*int8)(unsafe.Pointer(_pCur + 88))) {
		goto _4
	}

	_922releasePageNotNull(tls, *(*uintptr)(unsafe.Pointer((_pCur + 152) + 8*uintptr(_i))))
	_i++
	goto _2

_4:
	_922releasePageNotNull(tls, *(*uintptr)(unsafe.Pointer(_pCur + 144)))
	*(*int8)(unsafe.Pointer(_pCur + 88)) = int8(-1)
_1:
}

// _602sqlite3PagerSavepoint is defined at sqlite3.c:54333:20
func _602sqlite3PagerSavepoint(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _op int32, _iSavepoint int32) (r int32) {
	var (
		_rc         int32
		_ii         int32
		_nNew       int32
		_pSavepoint uintptr // *TPagerSavepoint = SPagerSavepoint
	)
	_rc = *(*int32)(unsafe.Pointer(_pPager + 44))

	if _rc != int32(0) || _iSavepoint >= (*(*int32)(unsafe.Pointer(_pPager + 128))) {
		goto _1
	}

	_nNew = _iSavepoint + func() int32 {
		if _op == int32(1) {
			return int32(0)
		}
		return int32(1)
	}()
	_ii = _nNew
_2:
	if _ii >= (*(*int32)(unsafe.Pointer(_pPager + 128))) {
		goto _4
	}

	_409sqlite3BitvecDestroy(tls, *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pPager + 120))) + 48*uintptr(_ii)) + 16)))
	_ii++
	goto _2

_4:
	*(*int32)(unsafe.Pointer(_pPager + 128)) = _nNew
	if _op != int32(1) {
		goto _5
	}

	if _nNew != int32(0) || (*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pPager + 88))))) == 0 {
		goto _7
	}

	if _911sqlite3JournalIsInMemory(tls, *(*uintptr)(unsafe.Pointer(_pPager + 88))) == 0 {
		goto _8
	}

	_rc = _353sqlite3OsTruncate(tls, *(*uintptr)(unsafe.Pointer(_pPager + 88)), int64(0))

_8:
	*(*uint32)(unsafe.Pointer(_pPager + 56)) = uint32(0)
_7:
	goto _6

_5:
	if (*(*uintptr)(unsafe.Pointer(_pPager + 288))) == 0 && (*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pPager + 80))))) == 0 {
		goto _9
	}

	_pSavepoint = func() uintptr {
		if _nNew == int32(0) {
			return null
		}
		return (*(*uintptr)(unsafe.Pointer(_pPager + 120))) + 48*uintptr(_nNew-int32(1))
	}()
	_rc = _923pagerPlaybackSavepoint(tls, _pPager, _pSavepoint)

_9:
_6:
_1:
	return _rc
}

// _603setGetterMethod is defined at sqlite3.c:48532:13
func _603setGetterMethod(tls crt.TLS, _pPager uintptr /* *TPager = SPager */) {
	if (*(*int32)(unsafe.Pointer(_pPager + 44))) == 0 {
		goto _1
	}

	*(*uintptr)(unsafe.Pointer(_pPager + 264)) = fp140(_924getPageError)
	goto _2

_1:
	if *(*uint8)(unsafe.Pointer(_pPager + 26)) == 0 {
		goto _3
	}

	*(*uintptr)(unsafe.Pointer(_pPager + 264)) = fp140(_925getPageMMap)
	goto _4

_3:
	*(*uintptr)(unsafe.Pointer(_pPager + 264)) = fp140(_926getPageNormal)
_4:
_2:
}

// _604pager_playback is defined at sqlite3.c:50280:12
func _604pager_playback(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _isHot int32) (r int32) {
	esc := crt.MustMalloc(68)
	var (
		_pVfs           uintptr    // *Tsqlite3_vfs = Ssqlite3_vfs
		_szJ            = esc      // *Ti64 = Tsqlite_int64 = int64
		_nRec           = esc + 16 // *Tu32 = uint32
		_u              uint32
		_mxPg           = esc + 32 // *TPgno = Tu32 = uint32
		_rc             int32
		_res            = esc + 48 // *int32
		_zMaster        uintptr    // *int8
		_needPagerReset int32
		_nPlayback      int32
		_savedPageSize  = esc + 64 // *Tu32 = uint32
	)
	defer crt.Free(esc)
	_pVfs = *(*uintptr)(unsafe.Pointer(_pPager))
	*(*uint32)(unsafe.Pointer(_mxPg)) = uint32(0)
	*(*int32)(unsafe.Pointer(_res)) = int32(1)
	_zMaster = 0
	_nPlayback = int32(0)
	*(*uint32)(unsafe.Pointer(_savedPageSize)) = uint32(*(*int32)(unsafe.Pointer(_pPager + 188)))

	_rc = _352sqlite3OsFileSize(tls, *(*uintptr)(unsafe.Pointer(_pPager + 80)), _szJ)
	if _rc == int32(0) {
		goto _1
	}

	goto _end_playback

_1:
	_zMaster = *(*uintptr)(unsafe.Pointer(_pPager + 272))
	_rc = _927readMasterJournal(tls, *(*uintptr)(unsafe.Pointer(_pPager + 80)), _zMaster, uint32((*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPager))) + 8)))+int32(1)))
	if _rc != int32(0) || (*(*int8)(unsafe.Pointer(_zMaster))) == 0 {
		goto _2
	}

	_rc = _872sqlite3OsAccess(tls, _pVfs, _zMaster, int32(0), _res)
_2:
	_zMaster = null
	if _rc == int32(0) && (*(*int32)(unsafe.Pointer(_res))) != 0 {
		goto _3
	}

	goto _end_playback

_3:
	*(*int64)(unsafe.Pointer(_pPager + 96)) = int64(0)
	_needPagerReset = _isHot
_4:
	_rc = _928readJournalHdr(tls, _pPager, _isHot, *(*int64)(unsafe.Pointer(_szJ)), _nRec, _mxPg)
	if _rc == int32(0) {
		goto _6
	}

	if _rc != int32(101) {
		goto _7
	}

	_rc = int32(0)
_7:
	goto _end_playback

_6:
	if (*(*uint32)(unsafe.Pointer(_nRec))) != uint32(0xffffffff) {
		goto _8
	}

	*(*uint32)(unsafe.Pointer(_nRec)) = uint32(int32(((*(*int64)(unsafe.Pointer(_szJ))) - int64(*(*uint32)(unsafe.Pointer(_pPager + 184)))) / int64((*(*int32)(unsafe.Pointer(_pPager + 188)))+int32(8))))
_8:
	if (*(*uint32)(unsafe.Pointer(_nRec))) != uint32(0) || _isHot != 0 || ((*(*int64)(unsafe.Pointer(_pPager + 104)))+int64(*(*uint32)(unsafe.Pointer(_pPager + 184)))) != (*(*int64)(unsafe.Pointer(_pPager + 96))) {
		goto _9
	}

	*(*uint32)(unsafe.Pointer(_nRec)) = uint32(int32(((*(*int64)(unsafe.Pointer(_szJ))) - (*(*int64)(unsafe.Pointer(_pPager + 96)))) / int64((*(*int32)(unsafe.Pointer(_pPager + 188)))+int32(8))))
_9:
	if (*(*int64)(unsafe.Pointer(_pPager + 96))) != int64(*(*uint32)(unsafe.Pointer(_pPager + 184))) {
		goto _10
	}

	_rc = _351pager_truncate(tls, _pPager, *(*uint32)(unsafe.Pointer(_mxPg)))
	if _rc == int32(0) {
		goto _11
	}

	goto _end_playback

_11:
	*(*uint32)(unsafe.Pointer(_pPager + 28)) = *(*uint32)(unsafe.Pointer(_mxPg))
_10:
	_u = uint32(0)
_12:
	if _u >= (*(*uint32)(unsafe.Pointer(_nRec))) {
		goto _14
	}

	if _needPagerReset == 0 {
		goto _15
	}

	_756pager_reset(tls, _pPager)
	_needPagerReset = int32(0)
_15:
	_rc = _929pager_playback_one_page(tls, _pPager, _pPager+96, null, int32(1), int32(0))
	if _rc != int32(0) {
		goto _16
	}

	_nPlayback++
	goto _17

_16:
	if _rc != int32(101) {
		goto _18
	}

	*(*int64)(unsafe.Pointer(_pPager + 96)) = *(*int64)(unsafe.Pointer(_szJ))
	goto _14

	goto _19

_18:
	if _rc != int32(522) {
		goto _20
	}

	_rc = int32(0)
	goto _end_playback

	goto _21

_20:
	goto _end_playback

_21:
_19:
_17:
	_u++
	goto _12

_14:
	goto _4

	goto _end_playback
_end_playback:
	if _rc != int32(0) {
		goto _22
	}

	_rc = _412sqlite3PagerSetPagesize(tls, _pPager, _savedPageSize, int32(-1))
_22:
	*(*uint8)(unsafe.Pointer(_pPager + 22)) = *(*uint8)(unsafe.Pointer(_pPager + 16))
	if _rc != int32(0) {
		goto _23
	}

	_zMaster = *(*uintptr)(unsafe.Pointer(_pPager + 272))
	_rc = _927readMasterJournal(tls, *(*uintptr)(unsafe.Pointer(_pPager + 80)), _zMaster, uint32((*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPager))) + 8)))+int32(1)))
_23:
	if _rc != int32(0) || int32(*(*uint8)(unsafe.Pointer(_pPager + 20))) < int32(4) && int32(*(*uint8)(unsafe.Pointer(_pPager + 20))) != int32(0) {
		goto _24
	}

	_rc = _165sqlite3PagerSync(tls, _pPager, null)
_24:
	if _rc != int32(0) {
		goto _25
	}

	_rc = _590pager_end_transaction(tls, _pPager, bool2int(int32(*(*int8)(unsafe.Pointer(_zMaster))) != int32('\x00')), int32(0))
_25:
	if _rc != int32(0) || (*(*int8)(unsafe.Pointer(_zMaster))) == 0 || (*(*int32)(unsafe.Pointer(_res))) == 0 {
		goto _26
	}

	_rc = _930pager_delmaster(tls, _pPager, _zMaster)
_26:
	if _isHot == 0 || _nPlayback == 0 {
		goto _27
	}

	Xsqlite3_log(tls, int32(539), ts+19978 /* "recovered %d pages from %s" */, _nPlayback, *(*uintptr)(unsafe.Pointer(_pPager + 216)))
_27:
	_846setSectorSize(tls, _pPager)
	return _rc
}

// _605btreePageFromDbPage is defined at sqlite3.c:61651:16
func _605btreePageFromDbPage(tls crt.TLS, _pDbPage uintptr /* *TDbPage = SPgHdr */, _pgno uint32, _pBt uintptr /* *TBtShared = SBtShared */) (r uintptr /* *TMemPage = SMemPage */) {
	var _pPage uintptr // *TMemPage = SMemPage

	_pPage = _334sqlite3PagerGetExtra(tls, _pDbPage)
	if _pgno == (*(*uint32)(unsafe.Pointer(_pPage + 4))) {
		goto _1
	}

	*(*uintptr)(unsafe.Pointer(_pPage + 80)) = _152sqlite3PagerGetData(tls, _pDbPage)
	*(*uintptr)(unsafe.Pointer(_pPage + 112)) = _pDbPage
	*(*uintptr)(unsafe.Pointer(_pPage + 72)) = _pBt
	*(*uint32)(unsafe.Pointer(_pPage + 4)) = _pgno
	*(*uint8)(unsafe.Pointer(_pPage + 9)) = uint8(func() int32 {
		if _pgno == uint32(1) {
			return int32(100)
		}
		return int32(0)
	}())
_1:
	return _pPage
}

// _606sqlite3PagerUnrefPageOne is defined at sqlite3.c:53154:21
func _606sqlite3PagerUnrefPageOne(tls crt.TLS, _pPg uintptr /* *TDbPage = SPgHdr */) {
	var _pPager uintptr // *TPager = SPager

	_pPager = *(*uintptr)(unsafe.Pointer(_pPg + 40))
	_565sqlite3PcacheRelease(tls, _pPg)
	_931pagerUnlockIfUnused(tls, _pPager)
}

// _607sqlite3BtreeIsInTrans is defined at sqlite3.c:69357:20
func _607sqlite3BtreeIsInTrans(tls crt.TLS, _p uintptr /* *TBtree = SBtree */) (r int32) {
	return bool2int((_p != 0) && (int32(*(*uint8)(unsafe.Pointer(_p + 16))) == int32(2)))
}

// _608sqlite3BtreeCloseCursor is defined at sqlite3.c:64000:20
func _608sqlite3BtreeCloseCursor(tls crt.TLS, _pCur uintptr /* *TBtCursor = SBtCursor */) (r int32) {
	var (
		_pBtree uintptr // *TBtree = SBtree
		_pBt    uintptr // *TBtShared = SBtShared
		_pPrev  uintptr // *TBtCursor = SBtCursor
	)
	_pBtree = *(*uintptr)(unsafe.Pointer(_pCur + 8))
	if _pBtree == 0 {
		goto _1
	}

	_pBt = *(*uintptr)(unsafe.Pointer(_pCur + 16))
	_139sqlite3BtreeEnter(tls, _pBtree)

	if (*(*uintptr)(unsafe.Pointer(_pBt + 16))) != _pCur {
		goto _2
	}

	*(*uintptr)(unsafe.Pointer(_pBt + 16)) = *(*uintptr)(unsafe.Pointer(_pCur + 24))
	goto _3

_2:
	_pPrev = *(*uintptr)(unsafe.Pointer(_pBt + 16))
_4:
	if (*(*uintptr)(unsafe.Pointer(_pPrev + 24))) != _pCur {
		goto _7
	}

	*(*uintptr)(unsafe.Pointer(_pPrev + 24)) = *(*uintptr)(unsafe.Pointer(_pCur + 24))
	goto _6

_7:
	_pPrev = *(*uintptr)(unsafe.Pointer(_pPrev + 24))
	if _pPrev != 0 {
		goto _4
	}

	goto _6

_6:
_3:
	_601btreeReleaseAllCursorPages(tls, _pCur)
	_326unlockBtreeIfUnused(tls, _pBt)
	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_pCur + 32)))
	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_pCur + 72)))
	_169sqlite3BtreeLeave(tls, _pBtree)
_1:
	return int32(0)
}

// _609removeFromSharingList is defined at sqlite3.c:62197:12
func _609removeFromSharingList(tls crt.TLS, _pBt uintptr /* *TBtShared = SBtShared */) (r int32) {
	var (
		_pMaster uintptr // *Tsqlite3_mutex = Ssqlite3_mutex
		_pList   uintptr // *TBtShared = SBtShared
		_removed int32
	)
	_removed = int32(0)

	_pMaster = _35sqlite3MutexAlloc(tls, int32(2))
	Xsqlite3_mutex_enter(tls, _pMaster)
	(*(*int32)(unsafe.Pointer(_pBt + 96)))--
	if (*(*int32)(unsafe.Pointer(_pBt + 96))) > int32(0) {
		goto _1
	}

	if _510sqlite3SharedCacheList != _pBt {
		goto _2
	}

	_510sqlite3SharedCacheList = *(*uintptr)(unsafe.Pointer(_pBt + 104))
	goto _3

_2:
	_pList = _510sqlite3SharedCacheList
_4:
	if _pList == 0 || (*(*uintptr)(unsafe.Pointer(_pList + 104))) == _pBt {
		goto _5
	}

	_pList = *(*uintptr)(unsafe.Pointer(_pList + 104))
	goto _4

_5:
	if _pList == 0 {
		goto _6
	}

	*(*uintptr)(unsafe.Pointer(_pList + 104)) = *(*uintptr)(unsafe.Pointer(_pBt + 104))
_6:
_3:
	Xsqlite3_mutex_free(tls, *(*uintptr)(unsafe.Pointer(_pBt + 80)))
	_removed = int32(1)
_1:
	Xsqlite3_mutex_leave(tls, _pMaster)
	return _removed
}

// _610sqlite3VdbeMemSetDouble is defined at sqlite3.c:71181:21
func _610sqlite3VdbeMemSetDouble(tls crt.TLS, _pMem uintptr /* *TMem = Ssqlite3_value */, _val float64) {
	_643sqlite3VdbeMemSetNull(tls, _pMem)
	if _308sqlite3IsNaN(tls, _val) != 0 {
		goto _1
	}

	*(*float64)(unsafe.Pointer(_pMem)) = _val
	*(*uint16)(unsafe.Pointer(_pMem + 8)) = uint16(0x8)
_1:
}

// _611dbMallocRawFinish is defined at sqlite3.c:25298:29
func _611dbMallocRawFinish(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _n uint64) (r uintptr /* *void */) {
	var _p uintptr // *void

	_p = _198sqlite3Malloc(tls, _n)
	if _p != 0 {
		goto _1
	}

	_178sqlite3OomFault(tls, _db)
_1:
	return _p
}

// _612sqlite3OomClear is defined at sqlite3.c:25491:21
func _612sqlite3OomClear(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */) {
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 || (*(*int32)(unsafe.Pointer(_db + 196))) != int32(0) {
		goto _1
	}

	*(*uint8)(unsafe.Pointer(_db + 97)) = uint8(0)
	*(*int32)(unsafe.Pointer(_db + 344)) = int32(0)

	(*(*uint32)(unsafe.Pointer(_db + 352)))--
_1:
}

// _613measureAllocationSize is defined at sqlite3.c:25162:29
func _613measureAllocationSize(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _p uintptr /* *void */) {
	{
		p := &(*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_db + 672)))))
		*p = int32(int32(*p) + _744sqlite3DbMallocSize(tls, _db, _p))
	}
}

// _614isLookaside is defined at sqlite3.c:25101:12
func _614isLookaside(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _p uintptr /* *void */) (r int32) {
	return bool2int((uint64(_p) >= uint64(*(*uintptr)(unsafe.Pointer((_db + 352) + 40)))) && (uint64(_p) < uint64(*(*uintptr)(unsafe.Pointer((_db + 352) + 48)))))
}

// _615azRowid [3]*int8, escapes: true, shell.c:3837:17
var _615azRowid = bss + 11400 // array of 3 pointer to char

func init() {
	*(*[3]uintptr)(unsafe.Pointer(_615azRowid)) = [3]uintptr{
		0: ts + 20005, /* "rowid" */
		1: ts + 20011, /* "_rowid_" */
		2: ts + 20019, /* "oid" */
	}
}

// Xsqlite3_realloc is defined at sqlite3.c:25256:17
func Xsqlite3_realloc(tls crt.TLS, _pOld uintptr /* *void */, _n int32) (r uintptr /* *void */) {
	if Xsqlite3_initialize(tls) == 0 {
		goto _1
	}

	return null

_1:
	if _n >= int32(0) {
		goto _2
	}

	_n = int32(0)
_2:
	return _230sqlite3Realloc(tls, _pOld, uint64(_n))
}

// _616azColName [12]*int8, escapes: true, sqlite3.c:117397:23
var _616azColName = bss + 11424 // array of 12 pointer to char

func init() {
	*(*[12]uintptr)(unsafe.Pointer(_616azColName)) = [12]uintptr{
		0:  ts + 15909, /* "addr" */
		1:  ts + 15914, /* "opcode" */
		2:  ts + 15921, /* "p1" */
		3:  ts + 15924, /* "p2" */
		4:  ts + 15927, /* "p3" */
		5:  ts + 15930, /* "p4" */
		6:  ts + 15933, /* "p5" */
		7:  ts + 15936, /* "comment" */
		8:  ts + 20023, /* "selectid" */
		9:  ts + 20032, /* "order" */
		10: ts + 20038, /* "from" */
		11: ts + 20043, /* "detail" */
	}
}

// _617sqlite3BtreeSchemaLocked is defined at sqlite3.c:69438:20
func _617sqlite3BtreeSchemaLocked(tls crt.TLS, _p uintptr /* *TBtree = SBtree */) (r int32) {
	var _rc int32

	_139sqlite3BtreeEnter(tls, _p)
	_rc = _321querySharedCacheTableLock(tls, _p, uint32(1), uint8(1))

	_169sqlite3BtreeLeave(tls, _p)
	return _rc
}

// _618sqlite3DbStrNDup is defined at sqlite3.c:25445:21
func _618sqlite3DbStrNDup(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _z uintptr /* *int8 */, _n uint64) (r uintptr /* *int8 */) {
	var _zNew uintptr // *int8

	if _z != 0 {
		goto _1
	}

	return null

_1:
	_zNew = _373sqlite3DbMallocRawNN(tls, _db, _n+uint64(1))
	if _zNew == 0 {
		goto _2
	}

	crt.Xmemcpy(tls, _zNew, _z, uint64(_n))
	*(*int8)(unsafe.Pointer(_zNew + uintptr(_n))) = int8(0)
_2:
	return _zNew
}

// _619sqlite3RunParser is defined at sqlite3.c:141451:20
func _619sqlite3RunParser(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _zSql uintptr /* *int8 */, _pzErrMsg uintptr /* **int8 */) (r int32) {
	esc := crt.MustMalloc(3240)
	var (
		_nErr            int32
		_pEngine         uintptr // *void
		_n               int32
		_tokenType       = esc // *int32
		_lastTokenParsed int32
		_db              uintptr // *Tsqlite3 = Ssqlite3
		_mxSqlLen        int32
		_sEngine         = esc + 16 // *TyyParser = SyyParser
		_p               uintptr    // *TAutoincInfo = SAutoincInfo
		_1p              uintptr    // *TTable = STable
	)
	defer crt.Free(esc)
	_nErr = int32(0)
	_n = int32(0)
	_lastTokenParsed = int32(-1)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))

	_mxSqlLen = *(*int32)(unsafe.Pointer((_db + 124) + 4))
	if (*(*int32)(unsafe.Pointer(_db + 184))) != int32(0) {
		goto _1
	}

	*(*int32)(unsafe.Pointer(_db + 344)) = int32(0)
_1:
	*(*int32)(unsafe.Pointer(_pParse + 24)) = int32(0)
	*(*uintptr)(unsafe.Pointer(_pParse + 504)) = _zSql

	_pEngine = _sEngine
	_932sqlite3ParserInit(tls, _pEngine)

_2:
	if int32(*(*int8)(unsafe.Pointer(_zSql))) == int32(0) {
		goto _4
	}

	_n = _933sqlite3GetToken(tls, _zSql, _tokenType)
	_mxSqlLen = int32(_mxSqlLen - _n)
	if _mxSqlLen >= int32(0) {
		goto _6
	}

	*(*int32)(unsafe.Pointer(_pParse + 24)) = int32(18)
	goto _3

_6:
	goto _5

_4:
	if _lastTokenParsed != int32(1) {
		goto _7
	}

	*(*int32)(unsafe.Pointer(_tokenType)) = int32(0)
	goto _8

_7:
	if _lastTokenParsed != int32(0) {
		goto _9
	}

	goto _3

	goto _10

_9:
	*(*int32)(unsafe.Pointer(_tokenType)) = int32(1)
_10:
_8:
	_zSql -= uintptr(_n)
_5:
	if (*(*int32)(unsafe.Pointer(_tokenType))) < int32(158) {
		goto _11
	}

	if (*(*int32)(unsafe.Pointer(_db + 344))) == 0 {
		goto _13
	}

	*(*int32)(unsafe.Pointer(_pParse + 24)) = int32(9)
	goto _3

_13:
	if (*(*int32)(unsafe.Pointer(_tokenType))) != int32(159) {
		goto _14
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+20050 /* "unrecognized token: \"%.*s\"" */, _n, _zSql)
	goto _3

_14:
	_zSql += uintptr(_n)
	goto _12

_11:
	*(*uintptr)(unsafe.Pointer(_pParse + 448)) = _zSql
	*(*uint32)(unsafe.Pointer((_pParse + 448) + 8)) = uint32(_n)
	_934sqlite3Parser(tls, _pEngine, *(*int32)(unsafe.Pointer(_tokenType)), *(*SToken)(unsafe.Pointer(_pParse + 448)), _pParse)
	_lastTokenParsed = *(*int32)(unsafe.Pointer(_tokenType))
	_zSql += uintptr(_n)
	if (*(*int32)(unsafe.Pointer(_pParse + 24))) == int32(0) && (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _15
	}

	goto _3

_15:
_12:
	goto _2

_3:
	*(*uintptr)(unsafe.Pointer(_pParse + 504)) = _zSql
	_935sqlite3ParserFinalize(tls, _pEngine)
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _16
	}

	*(*int32)(unsafe.Pointer(_pParse + 24)) = int32(7)
_16:
	if (*(*int32)(unsafe.Pointer(_pParse + 24))) == int32(0) || (*(*int32)(unsafe.Pointer(_pParse + 24))) == int32(101) || (*(*uintptr)(unsafe.Pointer(_pParse + 8))) != 0 {
		goto _17
	}

	*(*uintptr)(unsafe.Pointer(_pParse + 8)) = _226sqlite3MPrintf(tls, _db, ts+429 /* "%s" */, _123sqlite3ErrStr(tls, *(*int32)(unsafe.Pointer(_pParse + 24))))
_17:
	if (*(*uintptr)(unsafe.Pointer(_pParse + 8))) == 0 {
		goto _18
	}

	*(*uintptr)(unsafe.Pointer(_pzErrMsg)) = *(*uintptr)(unsafe.Pointer(_pParse + 8))
	Xsqlite3_log(tls, *(*int32)(unsafe.Pointer(_pParse + 24)), ts+429 /* "%s" */, *(*uintptr)(unsafe.Pointer(_pzErrMsg)))
	*(*uintptr)(unsafe.Pointer(_pParse + 8)) = null
	_nErr++
_18:
	if (*(*uintptr)(unsafe.Pointer(_pParse + 16))) == 0 || (*(*int32)(unsafe.Pointer(_pParse + 48))) <= int32(0) || int32(*(*uint8)(unsafe.Pointer(_pParse + 30))) != int32(0) {
		goto _19
	}

	_375sqlite3VdbeDelete(tls, *(*uintptr)(unsafe.Pointer(_pParse + 16)))
	*(*uintptr)(unsafe.Pointer(_pParse + 16)) = null
_19:
	if int32(*(*uint8)(unsafe.Pointer(_pParse + 30))) != int32(0) {
		goto _20
	}

	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_pParse + 144)))
	*(*uintptr)(unsafe.Pointer(_pParse + 144)) = null
	*(*int32)(unsafe.Pointer(_pParse + 140)) = int32(0)
_20:
	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_pParse + 552)))
	if *(*uint8)(unsafe.Pointer(_pParse + 468)) != 0 {
		goto _21
	}

	_430sqlite3DeleteTable(tls, _db, *(*uintptr)(unsafe.Pointer(_pParse + 512)))
_21:
	if (*(*uintptr)(unsafe.Pointer(_pParse + 584))) == 0 {
		goto _22
	}

	_936sqlite3WithDelete(tls, _db, *(*uintptr)(unsafe.Pointer(_pParse + 584)))
_22:
	_429sqlite3DeleteTrigger(tls, _db, *(*uintptr)(unsafe.Pointer(_pParse + 520)))
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_pParse + 488)))
_23:
	if (*(*uintptr)(unsafe.Pointer(_pParse + 152))) == 0 {
		goto _24
	}

	_p = *(*uintptr)(unsafe.Pointer(_pParse + 152))
	*(*uintptr)(unsafe.Pointer(_pParse + 152)) = *(*uintptr)(unsafe.Pointer(_p))
	_376sqlite3DbFreeNN(tls, _db, _p)
	goto _23

_24:
_25:
	if (*(*uintptr)(unsafe.Pointer(_pParse + 560))) == 0 {
		goto _26
	}

	_1p = *(*uintptr)(unsafe.Pointer(_pParse + 560))
	*(*uintptr)(unsafe.Pointer(_pParse + 560)) = *(*uintptr)(unsafe.Pointer(_1p + 120))
	_430sqlite3DeleteTable(tls, _db, _1p)
	goto _25

_26:
	return _nErr
}

// _620schemaIsValid is defined at sqlite3.c:117200:13
func _620schemaIsValid(tls crt.TLS, _pParse uintptr /* *TParse = SParse */) {
	esc := crt.MustMalloc(4)
	var (
		_db                uintptr // *Tsqlite3 = Ssqlite3
		_iDb               int32
		_rc                int32
		_cookie            = esc // *int32
		_openedTransaction int32
		_pBt               uintptr // *TBtree = SBtree
	)
	defer crt.Free(esc)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))

	_iDb = int32(0)
_1:
	if _iDb >= (*(*int32)(unsafe.Pointer(_db + 40))) {
		goto _3
	}

	_openedTransaction = int32(0)
	_pBt = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)) + 8))
	if _pBt != 0 {
		goto _4
	}

	goto _2

_4:
	if _142sqlite3BtreeIsInReadTrans(tls, _pBt) != 0 {
		goto _5
	}

	_rc = _143sqlite3BtreeBeginTrans(tls, _pBt, int32(0))
	if _rc != int32(7) && _rc != int32(3082) {
		goto _6
	}

	_178sqlite3OomFault(tls, _db)
_6:
	if _rc == int32(0) {
		goto _7
	}

	return

_7:
	_openedTransaction = int32(1)
_5:
	_145sqlite3BtreeGetMeta(tls, _pBt, int32(1), _cookie)

	if (*(*int32)(unsafe.Pointer(_cookie))) == (*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)) + 24))))) {
		goto _8
	}

	_382sqlite3ResetOneSchema(tls, _db, _iDb)
	*(*int32)(unsafe.Pointer(_pParse + 24)) = int32(17)
_8:
	if _openedTransaction == 0 {
		goto _9
	}

	_769sqlite3BtreeCommit(tls, _pBt)
_9:
_2:
	_iDb++
	goto _1

_3:
}

// _621sqlite3VdbeSetNumCols is defined at sqlite3.c:74352:21
func _621sqlite3VdbeSetNumCols(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */, _nResColumn int32) {
	var (
		_n  int32
		_db uintptr // *Tsqlite3 = Ssqlite3
	)
	_db = *(*uintptr)(unsafe.Pointer(_p))
	if (*(*uint16)(unsafe.Pointer(_p + 188))) == 0 {
		goto _1
	}

	_624releaseMemArray(tls, *(*uintptr)(unsafe.Pointer(_p + 128)), int32(*(*uint16)(unsafe.Pointer(_p + 188)))*int32(2))
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 128)))
_1:
	_n = _nResColumn * int32(2)
	*(*uint16)(unsafe.Pointer(_p + 188)) = uint16(_nResColumn)
	*(*uintptr)(unsafe.Pointer(_p + 128)) = _373sqlite3DbMallocRawNN(tls, _db, uint64(uint64(56)*uint64(_n)))
	if (*(*uintptr)(unsafe.Pointer(_p + 128))) != 0 {
		goto _2
	}

	return

_2:
	_937initMemArray(tls, *(*uintptr)(unsafe.Pointer(_p + 128)), _n, _db, uint16(0x1))
}

// _622sqlite3VdbeSetColName is defined at sqlite3.c:74377:20
func _622sqlite3VdbeSetColName(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */, _idx int32, _var int32, _zName uintptr /* *int8 */, _xDel uintptr /* *func(crt.TLS, uintptr) */) (r int32) {
	var (
		_rc       int32
		_pColName uintptr // *TMem = Ssqlite3_value
	)

	if (*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p))) + 97))) == 0 {
		goto _1
	}

	return int32(7)

_1:
	_pColName = (*(*uintptr)(unsafe.Pointer(_p + 128))) + 56*uintptr(_idx+(_var*int32(*(*uint16)(unsafe.Pointer(_p + 188)))))
	_rc = _395sqlite3VdbeMemSetStr(tls, _pColName, _zName, int32(-1), uint8(1), _xDel)

	return _rc
}

// _623sqlite3VdbeSetSql is defined at sqlite3.c:72242:21
func _623sqlite3VdbeSetSql(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */, _z uintptr /* *int8 */, _n int32, _prepFlags uint8) {
	if _p != 0 {
		goto _1
	}

	return

_1:
	*(*uint8)(unsafe.Pointer(_p + 192)) = _prepFlags
	if (int32(_prepFlags) & int32(0x80)) != int32(0) {
		goto _2
	}

	*(*uint32)(unsafe.Pointer(_p + 268)) = uint32(0)
_2:
	*(*uintptr)(unsafe.Pointer(_p + 232)) = _618sqlite3DbStrNDup(tls, *(*uintptr)(unsafe.Pointer(_p)), _z, uint64(_n))
}

type SKeyInfo struct {
	XnRef       uint32
	Xenc        uint8
	XnKeyField  uint16
	XnAllField  uint16
	Xdb         uintptr // *Ssqlite3
	XaSortOrder uintptr // *uint8
	XaColl      [1]uintptr
}

// _624releaseMemArray is defined at sqlite3.c:73740:13
func _624releaseMemArray(tls crt.TLS, _p uintptr /* *TMem = Ssqlite3_value */, _N int32) {
	var (
		_pEnd uintptr // *TMem = Ssqlite3_value
		_db   uintptr // *Tsqlite3 = Ssqlite3
	)
	if _p == 0 || _N == 0 {
		goto _1
	}

	_pEnd = _p + 56*uintptr(_N)
	_db = *(*uintptr)(unsafe.Pointer(_p + 40))
	if (*(*uintptr)(unsafe.Pointer(_db + 672))) == 0 {
		goto _2
	}

_3:
	if (*(*int32)(unsafe.Pointer(_p + 32))) == 0 {
		goto _6
	}

	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 24)))
_6:
	if preinc62(&_p) < _pEnd {
		goto _3
	}

	return

_2:
_7:
	if (int32(*(*uint16)(unsafe.Pointer(_p + 8))) & int32(9312)) == 0 {
		goto _10
	}

	_397sqlite3VdbeMemRelease(tls, _p)
	goto _11

_10:
	if (*(*int32)(unsafe.Pointer(_p + 32))) == 0 {
		goto _12
	}

	_376sqlite3DbFreeNN(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 24)))
	*(*int32)(unsafe.Pointer(_p + 32)) = int32(0)
_12:
_11:
	*(*uint16)(unsafe.Pointer(_p + 8)) = uint16(0x80)
	if preinc62(&_p) < _pEnd {
		goto _7
	}

_1:
}

// _625sqlite3VdbeError is defined at sqlite3.c:72231:21
func _625sqlite3VdbeError(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */, _zFormat uintptr /* *int8 */, ap ...interface{}) {
	var _ap *[]interface{} // Tva_list = T__gnuc_va_list = T__...a_list = *struct{X_ [2]uintptr;}

	_181sqlite3DbFree(tls, *(*uintptr)(unsafe.Pointer(_p)), *(*uintptr)(unsafe.Pointer(_p + 144)))
	{
		x := ap
		_ap = &x
	}
	*(*uintptr)(unsafe.Pointer(_p + 144)) = _315sqlite3VMPrintf(tls, *(*uintptr)(unsafe.Pointer(_p)), _zFormat, _ap)
	_ap = nil
}

// _626sqlite3OpcodeName is defined at sqlite3.c:29996:27
func _626sqlite3OpcodeName(tls crt.TLS, _i int32) (r uintptr /* *int8 */) {
	return *(*uintptr)(unsafe.Pointer(_938azName + 8*uintptr(_i)))
}

// _627sqlite3VdbeMemGrow is defined at sqlite3.c:70563:36
func _627sqlite3VdbeMemGrow(tls crt.TLS, _pMem uintptr /* *TMem = Ssqlite3_value */, _n int32, _bPreserve int32) (r int32) {
	if _n >= int32(32) {
		goto _1
	}

	_n = int32(32)
_1:
	if (*(*int32)(unsafe.Pointer(_pMem + 32))) <= int32(0) || _bPreserve == 0 || (*(*uintptr)(unsafe.Pointer(_pMem + 16))) != (*(*uintptr)(unsafe.Pointer(_pMem + 24))) {
		goto _2
	}

	*(*uintptr)(unsafe.Pointer(_pMem + 16)) = set4(&(*(*uintptr)(unsafe.Pointer(_pMem + 24))), _939sqlite3DbReallocOrFree(tls, *(*uintptr)(unsafe.Pointer(_pMem + 40)), *(*uintptr)(unsafe.Pointer(_pMem + 16)), uint64(_n)))
	_bPreserve = int32(0)
	goto _3

_2:
	if (*(*int32)(unsafe.Pointer(_pMem + 32))) <= int32(0) {
		goto _4
	}

	_376sqlite3DbFreeNN(tls, *(*uintptr)(unsafe.Pointer(_pMem + 40)), *(*uintptr)(unsafe.Pointer(_pMem + 24)))
_4:
	*(*uintptr)(unsafe.Pointer(_pMem + 24)) = _177sqlite3DbMallocRaw(tls, *(*uintptr)(unsafe.Pointer(_pMem + 40)), uint64(_n))
_3:
	if (*(*uintptr)(unsafe.Pointer(_pMem + 24))) != 0 {
		goto _5
	}

	_643sqlite3VdbeMemSetNull(tls, _pMem)
	*(*uintptr)(unsafe.Pointer(_pMem + 16)) = null
	*(*int32)(unsafe.Pointer(_pMem + 32)) = int32(0)
	return int32(7)

	goto _6

_5:
	*(*int32)(unsafe.Pointer(_pMem + 32)) = _744sqlite3DbMallocSize(tls, *(*uintptr)(unsafe.Pointer(_pMem + 40)), *(*uintptr)(unsafe.Pointer(_pMem + 24)))
_6:
	if _bPreserve == 0 || (*(*uintptr)(unsafe.Pointer(_pMem + 16))) == 0 {
		goto _7
	}

	crt.Xmemcpy(tls, *(*uintptr)(unsafe.Pointer(_pMem + 24)), *(*uintptr)(unsafe.Pointer(_pMem + 16)), uint64(*(*int32)(unsafe.Pointer(_pMem + 12))))
_7:
	if (int32(*(*uint16)(unsafe.Pointer(_pMem + 8))) & int32(0x400)) == int32(0) {
		goto _8
	}

	fn16(*(*uintptr)(unsafe.Pointer(_pMem + 48)))(tls, *(*uintptr)(unsafe.Pointer(_pMem + 16)))
_8:
	*(*uintptr)(unsafe.Pointer(_pMem + 16)) = *(*uintptr)(unsafe.Pointer(_pMem + 24))
	{
		p := &(*(*uint16)(unsafe.Pointer(_pMem + 8)))
		*p = uint16(int32(*p) & int32(-7169))
	}
	return int32(0)
}

// _628sqlite3VdbeMemClearAndResize is defined at sqlite3.c:70619:20
func _628sqlite3VdbeMemClearAndResize(tls crt.TLS, _pMem uintptr /* *TMem = Ssqlite3_value */, _szNew int32) (r int32) {
	if (*(*int32)(unsafe.Pointer(_pMem + 32))) >= _szNew {
		goto _1
	}

	return _627sqlite3VdbeMemGrow(tls, _pMem, _szNew, int32(0))

_1:
	*(*uintptr)(unsafe.Pointer(_pMem + 16)) = *(*uintptr)(unsafe.Pointer(_pMem + 24))
	{
		p := &(*(*uint16)(unsafe.Pointer(_pMem + 8)))
		*p = uint16(int32(*p) & int32(13))
	}
	return int32(0)
}

// _629displayP4 is defined at sqlite3.c:73499:13
func _629displayP4(tls crt.TLS, _pOp uintptr /* *TOp = SVdbeOp */, _zTemp uintptr /* *int8 */, _nTemp int32) (r uintptr /* *int8 */) {
	esc := crt.MustMalloc(32)
	var (
		_zP4      uintptr // *int8
		_x        = esc   // *TStrAccum = SStrAccum
		_j        int32
		_pKeyInfo uintptr // *TKeyInfo = SKeyInfo
		_pColl    uintptr // *TCollSeq = SCollSeq
		_zColl    uintptr // *int8
		_1pColl   uintptr // *TCollSeq = SCollSeq
		_pDef     uintptr // *TFuncDef = SFuncDef
		_pMem     uintptr // *TMem = Ssqlite3_value
		_pVtab    uintptr // *Tsqlite3_vtab = Ssqlite3_vtab
		_i        int32
		_ai       uintptr // *int32
		_n        int32
	)
	defer crt.Free(esc)
	_zP4 = _zTemp

	_130sqlite3StrAccumInit(tls, _x, null, _zTemp, _nTemp, int32(0))
	switch int32(*(*int8)(unsafe.Pointer(_pOp + 1))) {
	case int32(-9):
		goto _2
	case int32(-2):
		goto _3
	case int32(-8):
		goto _4
	case int32(-14):
		goto _5
	case int32(-3):
		goto _6
	case int32(-13):
		goto _7
	case int32(-11):
		goto _8
	case int32(-12):
		goto _9
	case int32(-15):
		goto _10
	case int32(-4):
		goto _11
	case int32(-5):
		goto _12
	case int32(-6):
		goto _13
	default:
		goto _14
	}
_2:
	_pKeyInfo = *(*uintptr)(unsafe.Pointer(_pOp + 16))

	_807sqlite3XPrintf(tls, _x, ts+20077 /* "k(%d" */, int32(*(*uint16)(unsafe.Pointer(_pKeyInfo + 6))))
	_j = int32(0)
_15:
	if _j >= int32(*(*uint16)(unsafe.Pointer(_pKeyInfo + 6))) {
		goto _17
	}

	_pColl = *(*uintptr)(unsafe.Pointer((_pKeyInfo + 32) + 8*uintptr(_j)))
	_zColl = func() uintptr {
		if _pColl != 0 {
			return *(*uintptr)(unsafe.Pointer(_pColl))
		}
		return ts + 4553 /* "" */
	}()
	if crt.Xstrcmp(tls, _zColl, ts+20082 /* "BINARY" */) != int32(0) {
		goto _18
	}

	_zColl = ts + 20089 /* "B" */
_18:
	_807sqlite3XPrintf(tls, _x, ts+20091 /* ",%s%s" */, func() uintptr {
		if (*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pKeyInfo + 24))) + uintptr(_j)))) != 0 {
			return ts + 20097 /* "-" */
		}
		return ts + 4553 /* "" */
	}(), _zColl)
	_j++
	goto _15

_17:
	_301sqlite3StrAccumAppend(tls, _x, ts+8826 /* ")" */, int32(1))
	goto _1

_3:
	_1pColl = *(*uintptr)(unsafe.Pointer(_pOp + 16))
	_807sqlite3XPrintf(tls, _x, ts+20099 /* "(%.20s)" */, *(*uintptr)(unsafe.Pointer(_1pColl)))
	goto _1

_4:
	_pDef = *(*uintptr)(unsafe.Pointer(_pOp + 16))
	_807sqlite3XPrintf(tls, _x, ts+20107 /* "%s(%d)" */, *(*uintptr)(unsafe.Pointer(_pDef + 40)), int32(*(*int8)(unsafe.Pointer(_pDef))))
	goto _1

_5:
	_807sqlite3XPrintf(tls, _x, ts+20114 /* "%lld" */, *(*int64)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pOp + 16)))))
	goto _1

_6:
	_807sqlite3XPrintf(tls, _x, ts+5482 /* "%d" */, *(*int32)(unsafe.Pointer(_pOp + 16)))
	goto _1

_7:
	_807sqlite3XPrintf(tls, _x, ts+20119 /* "%.16g" */, *(*float64)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pOp + 16)))))
	goto _1

_8:
	_pMem = *(*uintptr)(unsafe.Pointer(_pOp + 16))
	if (int32(*(*uint16)(unsafe.Pointer(_pMem + 8))) & int32(0x2)) == 0 {
		goto _19
	}

	_zP4 = *(*uintptr)(unsafe.Pointer(_pMem + 16))
	goto _20

_19:
	if (int32(*(*uint16)(unsafe.Pointer(_pMem + 8))) & int32(0x4)) == 0 {
		goto _21
	}

	_807sqlite3XPrintf(tls, _x, ts+20114 /* "%lld" */, *(*int64)(unsafe.Pointer(_pMem)))
	goto _22

_21:
	if (int32(*(*uint16)(unsafe.Pointer(_pMem + 8))) & int32(0x8)) == 0 {
		goto _23
	}

	_807sqlite3XPrintf(tls, _x, ts+20119 /* "%.16g" */, *(*float64)(unsafe.Pointer(_pMem)))
	goto _24

_23:
	if (int32(*(*uint16)(unsafe.Pointer(_pMem + 8))) & int32(0x1)) == 0 {
		goto _25
	}

	_zP4 = ts + 8837 /* "NULL" */
	goto _26

_25:
	_zP4 = ts + 20125 /* "(blob)" */
_26:
_24:
_22:
_20:
	goto _1

_9:
	_pVtab = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pOp + 16))) + 16))
	_807sqlite3XPrintf(tls, _x, ts+20132 /* "vtab:%p" */, _pVtab)
	goto _1

_10:
	_ai = *(*uintptr)(unsafe.Pointer(_pOp + 16))
	_n = *(*int32)(unsafe.Pointer(_ai))
	_i = int32(1)
_27:
	if _i > _n {
		goto _29
	}

	_807sqlite3XPrintf(tls, _x, ts+20140 /* ",%d" */, *(*int32)(unsafe.Pointer(_ai + 4*uintptr(_i))))
	_i++
	goto _27

_29:
	*(*int8)(unsafe.Pointer(_zTemp)) = int8('[')
	_301sqlite3StrAccumAppend(tls, _x, ts+20144 /* "]" */, int32(1))
	goto _1

_11:
	_807sqlite3XPrintf(tls, _x, ts+20146 /* "program" */)
	goto _1

_12:
	*(*int8)(unsafe.Pointer(_zTemp)) = int8(0)
	goto _1

_13:
	_807sqlite3XPrintf(tls, _x, ts+429 /* "%s" */, *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pOp + 16)))))
	goto _1

_14:
	_zP4 = *(*uintptr)(unsafe.Pointer(_pOp + 16))
	if _zP4 != 0 {
		goto _30
	}

	_zP4 = _zTemp
	*(*int8)(unsafe.Pointer(_zTemp)) = int8(0)
_30:
_1:
	_299sqlite3StrAccumFinish(tls, _x)

	return _zP4
}

// _630azType [4]*int8, escapes: true, sqlite3.c:80136:25
var _630azType = bss + 11520 // array of 4 pointer to char

func init() {
	*(*[4]uintptr)(unsafe.Pointer(_630azType)) = [4]uintptr{
		0: ts + 20154, /* "NOT NULL" */
		1: ts + 16579, /* "UNIQUE" */
		2: ts + 16038, /* "CHECK" */
		3: ts + 20163, /* "FOREIGN KEY" */
	}
}

// _631aLTb [6]uint8, escapes: true, sqlite3.c:81125:32
var _631aLTb = ds + 7053

// _632aEQb [6]uint8, escapes: true, sqlite3.c:81128:32
var _632aEQb = ds + 7059

// _633aGTb [6]uint8, escapes: true, sqlite3.c:81131:32
var _633aGTb = ds + 7065

// _634and_logic [9]uint8, escapes: true, sqlite3.c:81341:32
var _634and_logic = ds + 7071

// _635or_logic [9]uint8, escapes: true, sqlite3.c:81344:32
var _635or_logic = ds + 7080

// _636aFlag [2]uint16, escapes: true, sqlite3.c:81744:24
var _636aFlag = ds + 7090

// _637aZero [16]uint8, escapes: true, sqlite3.c:81776:17
var _637aZero = bss + 11552

// _638vfsFlags int32, escapes: false, sqlite3.c:82685:20
var _638vfsFlags = int32(1054)

type SUnpackedRecord struct {
	XpKeyInfo   uintptr // *SKeyInfo
	XaMem       uintptr // *Ssqlite3_value
	XnField     uint16
	Xdefault_rc int8
	XerrCode    uint8
	Xr1         int8
	Xr2         int8
	XeqSeen     uint8
}

type SBtreePayload struct {
	XpKey  uintptr // uintptr
	XnKey  int64
	XpData uintptr // uintptr
	XaMem  uintptr // *Ssqlite3_value
	XnMem  uint16
	XnData int32
	XnZero int32
}

type Ssqlite3_vtab_cursor struct {
	XpVtab uintptr // *Ssqlite3_vtab
}

// _639sqlite3VdbeEnter is defined at sqlite3.c:73654:21
func _639sqlite3VdbeEnter(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */) {
	var (
		_i   int32
		_db  uintptr // *Tsqlite3 = Ssqlite3
		_aDb uintptr // *TDb = SDb
		_nDb int32
	)
	if (*(*uint32)(unsafe.Pointer(_p + 200))) != uint32(0) {
		goto _1
	}

	return

_1:
	_db = *(*uintptr)(unsafe.Pointer(_p))
	_aDb = *(*uintptr)(unsafe.Pointer(_db + 32))
	_nDb = *(*int32)(unsafe.Pointer(_db + 40))
	_i = int32(0)
_2:
	if _i >= _nDb {
		goto _4
	}

	if _i == int32(1) || ((*(*uint32)(unsafe.Pointer(_p + 200)))&(uint32(1)<<(uint(_i)%32))) == uint32(0) || (*(*uintptr)(unsafe.Pointer((_aDb + 32*uintptr(_i)) + 8))) == 0 {
		goto _5
	}

	_139sqlite3BtreeEnter(tls, *(*uintptr)(unsafe.Pointer((_aDb + 32*uintptr(_i)) + 8)))
_5:
	_i++
	goto _2

_4:
}

// _640sqlite3VdbeSetChanges is defined at sqlite3.c:76693:21
func _640sqlite3VdbeSetChanges(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _nChange int32) {
	*(*int32)(unsafe.Pointer(_db + 116)) = _nChange
	{
		p := &(*(*int32)(unsafe.Pointer(_db + 120)))
		*p = int32(int32(*p) + _nChange)
	}
}

// _641sqlite3VdbeFrameRestore is defined at sqlite3.c:74293:20
func _641sqlite3VdbeFrameRestore(tls crt.TLS, _pFrame uintptr /* *TVdbeFrame = SVdbeFrame */) (r int32) {
	var _v uintptr // *TVdbe = SVdbe

	_v = *(*uintptr)(unsafe.Pointer(_pFrame))
	_940closeCursorsInFrame(tls, _v)
	*(*uintptr)(unsafe.Pointer(_v + 104)) = *(*uintptr)(unsafe.Pointer(_pFrame + 16))
	*(*int32)(unsafe.Pointer(_v + 184)) = *(*int32)(unsafe.Pointer(_pFrame + 88))
	*(*uintptr)(unsafe.Pointer(_v + 112)) = *(*uintptr)(unsafe.Pointer(_pFrame + 32))
	*(*int32)(unsafe.Pointer(_v + 40)) = *(*int32)(unsafe.Pointer(_pFrame + 92))
	*(*uintptr)(unsafe.Pointer(_v + 152)) = *(*uintptr)(unsafe.Pointer(_pFrame + 40))
	*(*int32)(unsafe.Pointer(_v + 44)) = *(*int32)(unsafe.Pointer(_pFrame + 80))
	*(*int64)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_v))) + 56)) = *(*int64)(unsafe.Pointer(_pFrame + 64))
	*(*int32)(unsafe.Pointer(_v + 60)) = *(*int32)(unsafe.Pointer(_pFrame + 104))
	*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_v))) + 116)) = *(*int32)(unsafe.Pointer(_pFrame + 108))
	_739sqlite3VdbeDeleteAuxData(tls, *(*uintptr)(unsafe.Pointer(_v)), _v+280, int32(-1), int32(0))
	*(*uintptr)(unsafe.Pointer(_v + 280)) = *(*uintptr)(unsafe.Pointer(_pFrame + 72))
	*(*uintptr)(unsafe.Pointer(_pFrame + 72)) = null
	return *(*int32)(unsafe.Pointer(_pFrame + 84))
}

// _642out2Prerelease is defined at sqlite3.c:79697:12
func _642out2Prerelease(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */, _pOp uintptr /* *TVdbeOp = SVdbeOp */) (r uintptr /* *TMem = Ssqlite3_value */) {
	var _pOut uintptr // *TMem = Ssqlite3_value

	_pOut = (*(*uintptr)(unsafe.Pointer(_p + 112))) + 56*uintptr(*(*int32)(unsafe.Pointer(_pOp + 8)))
	if (int32(*(*uint16)(unsafe.Pointer(_pOut + 8))) & int32(9312)) == int32(0) {
		goto _1
	}

	return _941out2PrereleaseWithClear(tls, _pOut)

	goto _2

_1:
	*(*uint16)(unsafe.Pointer(_pOut + 8)) = uint16(0x4)
	return _pOut

_2:
	return r
}

// _643sqlite3VdbeMemSetNull is defined at sqlite3.c:71106:21
func _643sqlite3VdbeMemSetNull(tls crt.TLS, _pMem uintptr /* *TMem = Ssqlite3_value */) {
	if (int32(*(*uint16)(unsafe.Pointer(_pMem + 8))) & int32(9312)) == int32(0) {
		goto _1
	}

	_542vdbeMemClearExternAndSetNull(tls, _pMem)
	goto _2

_1:
	*(*uint16)(unsafe.Pointer(_pMem + 8)) = uint16(0x1)
_2:
}

// _644sqlite3VdbeMemTooBig is defined at sqlite3.c:71216:20
func _644sqlite3VdbeMemTooBig(tls crt.TLS, _p uintptr /* *TMem = Ssqlite3_value */) (r int32) {
	var _n int32

	if (int32(*(*uint16)(unsafe.Pointer(_p + 8))) & int32(18)) == 0 {
		goto _1
	}

	_n = *(*int32)(unsafe.Pointer(_p + 12))
	if (int32(*(*uint16)(unsafe.Pointer(_p + 8))) & int32(0x4000)) == 0 {
		goto _2
	}

	_n = int32(_n + (*(*int32)(unsafe.Pointer(_p))))
_2:
	return bool2int(_n > (*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 40))) + 124))))

_1:
	return int32(0)
}

// _645sqlite3VdbeMemShallowCopy is defined at sqlite3.c:71262:21
func _645sqlite3VdbeMemShallowCopy(tls crt.TLS, _pTo uintptr /* *TMem = Ssqlite3_value */, _pFrom uintptr /* *TMem = Ssqlite3_value */, _srcType int32) {
	if (int32(*(*uint16)(unsafe.Pointer(_pTo + 8))) & int32(9312)) == int32(0) {
		goto _1
	}

	_942vdbeClrCopy(tls, _pTo, _pFrom, _srcType)
	return

_1:
	crt.Xmemcpy(tls, _pTo, _pFrom, uint64(24))
	if (int32(*(*uint16)(unsafe.Pointer(_pFrom + 8))) & int32(0x800)) != int32(0) {
		goto _2
	}

	{
		p := &(*(*uint16)(unsafe.Pointer(_pTo + 8)))
		*p = uint16(int32(*p) & int32(-7169))
	}

	{
		p := &(*(*uint16)(unsafe.Pointer(_pTo + 8)))
		*p = uint16(int32(*p) | _srcType)
	}
_2:
}

// _646sqlite3VdbeMemMove is defined at sqlite3.c:71301:21
func _646sqlite3VdbeMemMove(tls crt.TLS, _pTo uintptr /* *TMem = Ssqlite3_value */, _pFrom uintptr /* *TMem = Ssqlite3_value */) {
	_397sqlite3VdbeMemRelease(tls, _pTo)
	crt.Xmemcpy(tls, _pTo, _pFrom, uint64(56))
	*(*uint16)(unsafe.Pointer(_pFrom + 8)) = uint16(0x1)
	*(*int32)(unsafe.Pointer(_pFrom + 32)) = int32(0)
}

// _647sqlite3VdbeCheckFk is defined at sqlite3.c:74764:20
func _647sqlite3VdbeCheckFk(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */, _deferred int32) (r int32) {
	var _db uintptr // *Tsqlite3 = Ssqlite3

	_db = *(*uintptr)(unsafe.Pointer(_p))
	if (_deferred == 0 || ((*(*int64)(unsafe.Pointer(_db + 656)))+(*(*int64)(unsafe.Pointer(_db + 664)))) <= int64(0)) && (_deferred != 0 || (*(*int64)(unsafe.Pointer(_p + 80))) <= int64(0)) {
		goto _1
	}

	*(*int32)(unsafe.Pointer(_p + 56)) = int32(787)
	*(*uint8)(unsafe.Pointer(_p + 190)) = uint8(2)
	_625sqlite3VdbeError(tls, _p, ts+20175 /* "FOREIGN KEY constraint failed" */)
	return int32(1)

_1:
	return int32(0)
}

// _648sqlite3VdbeCloseStatement is defined at sqlite3.c:74745:20
func _648sqlite3VdbeCloseStatement(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */, _eOp int32) (r int32) {
	if (*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p))) + 648))) == 0 || (*(*int32)(unsafe.Pointer(_p + 64))) == 0 {
		goto _1
	}

	return _943vdbeCloseStatement(tls, _p, _eOp)

_1:
	return int32(0)
}

// _649sqlite3VdbeMemNulTerminate is defined at sqlite3.c:70700:20
func _649sqlite3VdbeMemNulTerminate(tls crt.TLS, _pMem uintptr /* *TMem = Ssqlite3_value */) (r int32) {
	if (int32(*(*uint16)(unsafe.Pointer(_pMem + 8))) & int32(514)) == int32(0x2) {
		goto _1
	}

	return int32(0)

	goto _2

_1:
	return _867vdbeMemAddTerminator(tls, _pMem)

_2:
	return r
}

// _650sqlite3VdbeMemStringify is defined at sqlite3.c:70725:20
func _650sqlite3VdbeMemStringify(tls crt.TLS, _pMem uintptr /* *TMem = Ssqlite3_value */, _enc uint8, _bForce uint8) (r int32) {
	var (
		_fg    int32
		_nByte int32
	)
	_fg = int32(*(*uint16)(unsafe.Pointer(_pMem + 8)))
	_nByte = int32(32)

	if _628sqlite3VdbeMemClearAndResize(tls, _pMem, _nByte) == 0 {
		goto _1
	}

	*(*uint8)(unsafe.Pointer(_pMem + 10)) = uint8(0)
	return int32(7)

_1:
	if (_fg & int32(0x4)) == 0 {
		goto _2
	}

	Xsqlite3_snprintf(tls, _nByte, *(*uintptr)(unsafe.Pointer(_pMem + 16)), ts+20114 /* "%lld" */, *(*int64)(unsafe.Pointer(_pMem)))
	goto _3

_2:
	Xsqlite3_snprintf(tls, _nByte, *(*uintptr)(unsafe.Pointer(_pMem + 16)), ts+19340 /* "%!.15g" */, *(*float64)(unsafe.Pointer(_pMem)))
_3:
	*(*int32)(unsafe.Pointer(_pMem + 12)) = _211sqlite3Strlen30(tls, *(*uintptr)(unsafe.Pointer(_pMem + 16)))
	*(*uint8)(unsafe.Pointer(_pMem + 10)) = uint8(1)
	{
		p := &(*(*uint16)(unsafe.Pointer(_pMem + 8)))
		*p = uint16(int32(*p) | int32(514))
	}
	if _bForce == 0 {
		goto _4
	}

	{
		p := &(*(*uint16)(unsafe.Pointer(_pMem + 8)))
		*p = uint16(int32(*p) & int32(-13))
	}
_4:
	_396sqlite3VdbeChangeEncoding(tls, _pMem, int32(_enc))
	return int32(0)
}

// _651numericType is defined at sqlite3.c:79439:12
func _651numericType(tls crt.TLS, _pMem uintptr /* *TMem = Ssqlite3_value */) (r uint16) {
	if (int32(*(*uint16)(unsafe.Pointer(_pMem + 8))) & int32(12)) == 0 {
		goto _1
	}

	return uint16(int32(*(*uint16)(unsafe.Pointer(_pMem + 8))) & int32(12))

_1:
	if (int32(*(*uint16)(unsafe.Pointer(_pMem + 8))) & int32(18)) == 0 {
		goto _2
	}

	return _944computeNumericType(tls, _pMem)

_2:
	return uint16(0)
}

// _652sqlite3AddInt64 is defined at sqlite3.c:29415:20
func _652sqlite3AddInt64(tls crt.TLS, _pA uintptr /* *Ti64 = Tsqlite_int64 = int64 */, _iB int64) (r int32) {
	var _iA int64

	_iA = *(*int64)(unsafe.Pointer(_pA))
	if _iB < int64(0) {
		goto _1
	}

	if _iA <= int64(0) || (int64(9223372036854775807)-_iA) >= _iB {
		goto _3
	}

	return int32(1)

_3:
	goto _2

_1:
	if _iA >= int64(0) || (-(_iA + int64(9223372036854775807))) <= (_iB+int64(1)) {
		goto _4
	}

	return int32(1)

_4:
_2:
	{
		p := &(*(*int64)(unsafe.Pointer(_pA)))
		*p = int64(int64(*p) + _iB)
	}
	return int32(0)
}

// _653sqlite3SubInt64 is defined at sqlite3.c:29435:20
func _653sqlite3SubInt64(tls crt.TLS, _pA uintptr /* *Ti64 = Tsqlite_int64 = int64 */, _iB int64) (r int32) {
	if _iB != int64(-9223372036854775808) {
		goto _1
	}

	if (*(*int64)(unsafe.Pointer(_pA))) < int64(0) {
		goto _3
	}

	return int32(1)

_3:
	{
		p := &(*(*int64)(unsafe.Pointer(_pA)))
		*p = int64(int64(*p) - _iB)
	}
	return int32(0)

	goto _2

_1:
	return _652sqlite3AddInt64(tls, _pA, -_iB)

_2:
	return r
}

// _654sqlite3MulInt64 is defined at sqlite3.c:29450:20
func _654sqlite3MulInt64(tls crt.TLS, _pA uintptr /* *Ti64 = Tsqlite_int64 = int64 */, _iB int64) (r int32) {
	var _iA int64

	_iA = *(*int64)(unsafe.Pointer(_pA))
	if _iB <= int64(0) {
		goto _1
	}

	if _iA <= (int64(9223372036854775807) / _iB) {
		goto _3
	}

	return int32(1)

_3:
	if _iA >= (int64(-9223372036854775808) / _iB) {
		goto _4
	}

	return int32(1)

_4:
	goto _2

_1:
	if _iB >= int64(0) {
		goto _5
	}

	if _iA <= int64(0) {
		goto _6
	}

	if _iB >= (int64(-9223372036854775808) / _iA) {
		goto _8
	}

	return int32(1)

_8:
	goto _7

_6:
	if _iA >= int64(0) {
		goto _9
	}

	if _iB != int64(-9223372036854775808) {
		goto _10
	}

	return int32(1)

_10:
	if _iA != int64(-9223372036854775808) {
		goto _11
	}

	return int32(1)

_11:
	if (-_iA) <= (int64(9223372036854775807) / (-_iB)) {
		goto _12
	}

	return int32(1)

_12:
_9:
_7:
_5:
_2:
	*(*int64)(unsafe.Pointer(_pA)) = _iA * _iB
	return int32(0)
}

// _655sqlite3VdbeIntegerAffinity is defined at sqlite3.c:70954:21
func _655sqlite3VdbeIntegerAffinity(tls crt.TLS, _pMem uintptr /* *TMem = Ssqlite3_value */) {
	var _ix int64

	_ix = _750doubleToInt64(tls, *(*float64)(unsafe.Pointer(_pMem)))
	if (*(*float64)(unsafe.Pointer(_pMem))) != float64(_ix) || _ix <= int64(-9223372036854775808) || _ix >= int64(9223372036854775807) {
		goto _1
	}

	*(*int64)(unsafe.Pointer(_pMem)) = _ix
	*(*uint16)(unsafe.Pointer(_pMem + 8)) = uint16((int32(*(*uint16)(unsafe.Pointer(_pMem + 8))) & int32(-49664)) | int32(0x4))
_1:
}

// _656sqlite3VdbeMemIntegerify is defined at sqlite3.c:70982:20
func _656sqlite3VdbeMemIntegerify(tls crt.TLS, _pMem uintptr /* *TMem = Ssqlite3_value */) (r int32) {
	*(*int64)(unsafe.Pointer(_pMem)) = _399sqlite3VdbeIntValue(tls, _pMem)
	*(*uint16)(unsafe.Pointer(_pMem + 8)) = uint16((int32(*(*uint16)(unsafe.Pointer(_pMem + 8))) & int32(-49664)) | int32(0x4))
	return int32(0)
}

// _657applyAffinity is defined at sqlite3.c:79356:13
func _657applyAffinity(tls crt.TLS, _pRec uintptr /* *TMem = Ssqlite3_value */, _affinity int8, _enc uint8) {
	if int32(_affinity) < int32('C') {
		goto _1
	}

	if (int32(*(*uint16)(unsafe.Pointer(_pRec + 8))) & int32(0x4)) != int32(0) {
		goto _3
	}

	if (int32(*(*uint16)(unsafe.Pointer(_pRec + 8))) & int32(0x8)) != int32(0) {
		goto _4
	}

	if (int32(*(*uint16)(unsafe.Pointer(_pRec + 8))) & int32(0x2)) == 0 {
		goto _6
	}

	_660applyNumericAffinity(tls, _pRec, int32(1))
_6:
	goto _5

_4:
	_655sqlite3VdbeIntegerAffinity(tls, _pRec)
_5:
_3:
	goto _2

_1:
	if int32(_affinity) != int32('B') {
		goto _7
	}

	if int32(0) != (int32(*(*uint16)(unsafe.Pointer(_pRec + 8))) & int32(0x2)) {
		goto _8
	}

	if int32(*(*uint16)(unsafe.Pointer(_pRec + 8)))&int32(12) == 0 {
		goto _9
	}

	_650sqlite3VdbeMemStringify(tls, _pRec, _enc, uint8(1))
_9:
_8:
	{
		p := &(*(*uint16)(unsafe.Pointer(_pRec + 8)))
		*p = uint16(int32(*p) & int32(-13))
	}
_7:
_2:
}

// _658sqlite3VdbeMemRealify is defined at sqlite3.c:70996:20
func _658sqlite3VdbeMemRealify(tls crt.TLS, _pMem uintptr /* *TMem = Ssqlite3_value */) (r int32) {
	*(*float64)(unsafe.Pointer(_pMem)) = _441sqlite3VdbeRealValue(tls, _pMem)
	*(*uint16)(unsafe.Pointer(_pMem + 8)) = uint16((int32(*(*uint16)(unsafe.Pointer(_pMem + 8))) & int32(-49664)) | int32(0x8))
	return int32(0)
}

// _659sqlite3VdbeMemCast is defined at sqlite3.c:71044:21
func _659sqlite3VdbeMemCast(tls crt.TLS, _pMem uintptr /* *TMem = Ssqlite3_value */, _aff uint8, _encoding uint8) {
	if (int32(*(*uint16)(unsafe.Pointer(_pMem + 8))) & int32(0x1)) == 0 {
		goto _1
	}

	return

_1:
	switch int32(_aff) {
	case int32('A'):
		goto _3
	case int32('C'):
		goto _4
	case int32('D'):
		goto _5
	case int32('E'):
		goto _6
	default:
		goto _7
	}
_3:
	if (int32(*(*uint16)(unsafe.Pointer(_pMem + 8))) & int32(0x10)) != int32(0) {
		goto _8
	}

	_945sqlite3ValueApplyAffinity(tls, _pMem, uint8('B'), _encoding)

	if (int32(*(*uint16)(unsafe.Pointer(_pMem + 8))) & int32(0x2)) == 0 {
		goto _10
	}

	*(*uint16)(unsafe.Pointer(_pMem + 8)) = uint16((int32(*(*uint16)(unsafe.Pointer(_pMem + 8))) & int32(-49664)) | int32(0x10))
_10:
	goto _9

_8:
	{
		p := &(*(*uint16)(unsafe.Pointer(_pMem + 8)))
		*p = uint16(int32(*p) & int32(-49648))
	}
_9:
	goto _2

_4:
	_946sqlite3VdbeMemNumerify(tls, _pMem)
	goto _2

_5:
	_656sqlite3VdbeMemIntegerify(tls, _pMem)
	goto _2

_6:
	_658sqlite3VdbeMemRealify(tls, _pMem)
	goto _2

_7:
	{
		p := &(*(*uint16)(unsafe.Pointer(_pMem + 8)))
		*p = uint16(int32(*p) | ((int32(*(*uint16)(unsafe.Pointer(_pMem + 8))) & int32(0x10)) >> (uint(3) % 32)))
	}
	_945sqlite3ValueApplyAffinity(tls, _pMem, uint8('B'), _encoding)

	{
		p := &(*(*uint16)(unsafe.Pointer(_pMem + 8)))
		*p = uint16(int32(*p) & int32(-16413))
	}
	goto _2

_2:
}

// _660applyNumericAffinity is defined at sqlite3.c:79322:13
func _660applyNumericAffinity(tls crt.TLS, _pRec uintptr /* *TMem = Ssqlite3_value */, _bTryForInt int32) {
	esc := crt.MustMalloc(24)
	var (
		_rValue = esc      // *float64
		_iValue = esc + 16 // *Ti64 = Tsqlite_int64 = int64
		_enc    uint8
	)
	defer crt.Free(esc)
	_enc = *(*uint8)(unsafe.Pointer(_pRec + 10))

	if _808sqlite3AtoF(tls, *(*uintptr)(unsafe.Pointer(_pRec + 16)), _rValue, *(*int32)(unsafe.Pointer(_pRec + 12)), _enc) != int32(0) {
		goto _1
	}

	return

_1:
	if int32(0) != _947sqlite3Atoi64(tls, *(*uintptr)(unsafe.Pointer(_pRec + 16)), _iValue, *(*int32)(unsafe.Pointer(_pRec + 12)), _enc) {
		goto _2
	}

	*(*int64)(unsafe.Pointer(_pRec)) = *(*int64)(unsafe.Pointer(_iValue))
	{
		p := &(*(*uint16)(unsafe.Pointer(_pRec + 8)))
		*p = uint16(int32(*p) | int32(0x4))
	}
	goto _3

_2:
	*(*float64)(unsafe.Pointer(_pRec)) = *(*float64)(unsafe.Pointer(_rValue))
	{
		p := &(*(*uint16)(unsafe.Pointer(_pRec + 8)))
		*p = uint16(int32(*p) | int32(0x8))
	}
	if _bTryForInt == 0 {
		goto _4
	}

	_655sqlite3VdbeIntegerAffinity(tls, _pRec)
_4:
_3:
}

// _661sqlite3MemCompare is defined at sqlite3.c:76036:20
func _661sqlite3MemCompare(tls crt.TLS, _pMem1 uintptr /* *TMem = Ssqlite3_value */, _pMem2 uintptr /* *TMem = Ssqlite3_value */, _pColl uintptr /* *TCollSeq = SCollSeq */) (r int32) {
	var (
		_f1             int32
		_f2             int32
		_combined_flags int32
	)
	_f1 = int32(*(*uint16)(unsafe.Pointer(_pMem1 + 8)))
	_f2 = int32(*(*uint16)(unsafe.Pointer(_pMem2 + 8)))
	_combined_flags = _f1 | _f2

	if (_combined_flags & int32(0x1)) == 0 {
		goto _1
	}

	return (_f2 & int32(0x1)) - (_f1 & int32(0x1))

_1:
	if (_combined_flags & int32(12)) == 0 {
		goto _2
	}

	if ((_f1 & _f2) & int32(0x4)) == int32(0) {
		goto _3
	}

	if (*(*int64)(unsafe.Pointer(_pMem1))) >= (*(*int64)(unsafe.Pointer(_pMem2))) {
		goto _4
	}

	return int32(-1)

_4:
	if (*(*int64)(unsafe.Pointer(_pMem1))) <= (*(*int64)(unsafe.Pointer(_pMem2))) {
		goto _5
	}

	return int32(1)

_5:
	return int32(0)

_3:
	if ((_f1 & _f2) & int32(0x8)) == int32(0) {
		goto _6
	}

	if (*(*float64)(unsafe.Pointer(_pMem1))) >= (*(*float64)(unsafe.Pointer(_pMem2))) {
		goto _7
	}

	return int32(-1)

_7:
	if (*(*float64)(unsafe.Pointer(_pMem1))) <= (*(*float64)(unsafe.Pointer(_pMem2))) {
		goto _8
	}

	return int32(1)

_8:
	return int32(0)

_6:
	if (_f1 & int32(0x4)) == int32(0) {
		goto _9
	}

	if (_f2 & int32(0x8)) == int32(0) {
		goto _10
	}

	return _948sqlite3IntFloatCompare(tls, *(*int64)(unsafe.Pointer(_pMem1)), *(*float64)(unsafe.Pointer(_pMem2)))

	goto _11

_10:
	return int32(-1)

_11:
_9:
	if (_f1 & int32(0x8)) == int32(0) {
		goto _12
	}

	if (_f2 & int32(0x4)) == int32(0) {
		goto _13
	}

	return -_948sqlite3IntFloatCompare(tls, *(*int64)(unsafe.Pointer(_pMem2)), *(*float64)(unsafe.Pointer(_pMem1)))

	goto _14

_13:
	return int32(-1)

_14:
_12:
	return int32(1)

_2:
	if (_combined_flags & int32(0x2)) == 0 {
		goto _15
	}

	if (_f1 & int32(0x2)) != int32(0) {
		goto _16
	}

	return int32(1)

_16:
	if (_f2 & int32(0x2)) != int32(0) {
		goto _17
	}

	return int32(-1)

_17:
	if _pColl == 0 {
		goto _18
	}

	return _949vdbeCompareMemString(tls, _pMem1, _pMem2, _pColl, null)

_18:
_15:
	return _950sqlite3BlobCompare(tls, _pMem1, _pMem2)
}

// _662sqlite3VdbeCursorMoveto is defined at sqlite3.c:75314:20
func _662sqlite3VdbeCursorMoveto(tls crt.TLS, _pp uintptr /* **TVdbeCursor = SVdbeCursor */, _piCol uintptr /* *int32 */) (r int32) {
	var (
		_p    uintptr // *TVdbeCursor = SVdbeCursor
		_iMap int32
	)
	_p = *(*uintptr)(unsafe.Pointer(_pp))

	if (*(*uint8)(unsafe.Pointer(_p + 3))) == 0 {
		goto _1
	}

	if (*(*uintptr)(unsafe.Pointer(_p + 24))) == 0 || set5(&_iMap, *(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 24))) + 4*uintptr(int32(1)+(*(*int32)(unsafe.Pointer(_piCol))))))) <= int32(0) {
		goto _2
	}

	*(*uintptr)(unsafe.Pointer(_pp)) = *(*uintptr)(unsafe.Pointer(_p + 40))
	*(*int32)(unsafe.Pointer(_piCol)) = _iMap - int32(1)
	return int32(0)

_2:
	return _951handleDeferredMoveto(tls, _p)

_1:
	if _952sqlite3BtreeCursorHasMoved(tls, *(*uintptr)(unsafe.Pointer(_p + 48))) == 0 {
		goto _3
	}

	return _953handleMovedCursor(tls, _p)

_3:
	return int32(0)
}

// _663sqlite3BtreePayloadSize is defined at sqlite3.c:64092:20
func _663sqlite3BtreePayloadSize(tls crt.TLS, _pCur uintptr /* *TBtCursor = SBtCursor */) (r uint32) {
	_954getCellInfo(tls, _pCur)
	return *(*uint32)(unsafe.Pointer((_pCur + 40) + 16))
}

// _664sqlite3BtreePayloadFetch is defined at sqlite3.c:64535:27
func _664sqlite3BtreePayloadFetch(tls crt.TLS, _pCur uintptr /* *TBtCursor = SBtCursor */, _pAmt uintptr /* *Tu32 = uint32 */) (r uintptr /* *void */) {
	return _955fetchPayload(tls, _pCur, _pAmt)
}

// _665sqlite3GetVarint32 is defined at sqlite3.c:29143:19
func _665sqlite3GetVarint32(tls crt.TLS, _p uintptr /* *uint8 */, _v uintptr /* *Tu32 = uint32 */) (r uint8) {
	esc := crt.MustMalloc(8)
	var (
		_a   uint32
		_b   uint32
		_v64 = esc // *Tu64 = Tsqlite_uint64 = uint64
		_n   uint8
	)
	defer crt.Free(esc)
	_a = uint32(*(*uint8)(unsafe.Pointer(_p)))
	_p++
	_b = uint32(*(*uint8)(unsafe.Pointer(_p)))
	if _b&uint32(0x80) != 0 {
		goto _1
	}

	_a = uint32(_a & uint32(0x7f))
	_a = _a << (uint(7) % 32)
	*(*uint32)(unsafe.Pointer(_v)) = _a | _b
	return uint8(2)

_1:
	_p++
	_a = _a << (uint(14) % 32)
	_a = uint32(_a | uint32(*(*uint8)(unsafe.Pointer(_p))))
	if _a&uint32(0x80) != 0 {
		goto _2
	}

	_a = uint32(_a & uint32(2080895))
	_b = uint32(_b & uint32(0x7f))
	_b = _b << (uint(7) % 32)
	*(*uint32)(unsafe.Pointer(_v)) = _a | _b
	return uint8(3)

_2:
	_p -= uintptr(2)
	_n = _956sqlite3GetVarint(tls, _p, _v64)

	if ((*(*uint64)(unsafe.Pointer(_v64))) & uint64(4294967295)) == (*(*uint64)(unsafe.Pointer(_v64))) {
		goto _3
	}

	*(*uint32)(unsafe.Pointer(_v)) = uint32(0xffffffff)
	goto _4

_3:
	*(*uint32)(unsafe.Pointer(_v)) = uint32(*(*uint64)(unsafe.Pointer(_v64)))
_4:
	return _n
	return r
}

// _666sqlite3VdbeMemFromBtree is defined at sqlite3.c:71446:20
func _666sqlite3VdbeMemFromBtree(tls crt.TLS, _pCur uintptr /* *TBtCursor = SBtCursor */, _offset uint32, _amt uint32, _pMem uintptr /* *TMem = Ssqlite3_value */) (r int32) {
	esc := crt.MustMalloc(4)
	var (
		_zData     uintptr // *int8
		_available = esc   // *Tu32 = uint32
		_rc        int32
	)
	defer crt.Free(esc)
	*(*uint32)(unsafe.Pointer(_available)) = uint32(0)
	_rc = int32(0)

	_zData = _664sqlite3BtreePayloadFetch(tls, _pCur, _available)

	if (_offset + _amt) > (*(*uint32)(unsafe.Pointer(_available))) {
		goto _1
	}

	*(*uintptr)(unsafe.Pointer(_pMem + 16)) = _zData + uintptr(_offset)
	*(*uint16)(unsafe.Pointer(_pMem + 8)) = uint16(4112)
	*(*int32)(unsafe.Pointer(_pMem + 12)) = int32(_amt)
	goto _2

_1:
	_rc = _957vdbeMemFromBtreeResize(tls, _pCur, _offset, _amt, _pMem)
_2:
	return _rc
}

// _667sqlite3VdbeOneByteSerialTypeLen is defined at sqlite3.c:75458:19
func _667sqlite3VdbeOneByteSerialTypeLen(tls crt.TLS, _serial_type uint8) (r uint8) {
	return *(*uint8)(unsafe.Pointer(_958sqlite3SmallTypeSizes + uintptr(_serial_type)))
}

// _668sqlite3VdbeSerialTypeLen is defined at sqlite3.c:75449:20
func _668sqlite3VdbeSerialTypeLen(tls crt.TLS, _serial_type uint32) (r uint32) {
	if _serial_type < uint32(128) {
		goto _1
	}

	return (_serial_type - uint32(12)) / uint32(2)

	goto _2

_1:
	return uint32(*(*uint8)(unsafe.Pointer(_958sqlite3SmallTypeSizes + uintptr(_serial_type))))

_2:
	return r
}

// _669sqlite3VdbeSerialGet is defined at sqlite3.c:75619:20
func _669sqlite3VdbeSerialGet(tls crt.TLS, _buf uintptr /* *uint8 */, _serial_type uint32, _pMem uintptr /* *TMem = Ssqlite3_value */) (r uint32) {
	switch _serial_type {
	case uint32(10):
		goto _2
	case uint32(11):
		goto _3
	case uint32(0):
		goto _4
	case uint32(1):
		goto _5
	case uint32(2):
		goto _6
	case uint32(3):
		goto _7
	case uint32(4):
		goto _8
	case uint32(5):
		goto _9
	case uint32(6):
		goto _10
	case uint32(7):
		goto _11
	case uint32(8):
		goto _12
	case uint32(9):
		goto _13
	default:
		goto _14
	}
_2:
_3:
_4:
	*(*uint16)(unsafe.Pointer(_pMem + 8)) = uint16(0x1)
	goto _1

_5:
	*(*int64)(unsafe.Pointer(_pMem)) = int64(int8(*(*uint8)(unsafe.Pointer(_buf))))
	*(*uint16)(unsafe.Pointer(_pMem + 8)) = uint16(0x4)
	return uint32(1)

_6:
	*(*int64)(unsafe.Pointer(_pMem)) = int64((int32(256) * int32(int8(*(*uint8)(unsafe.Pointer(_buf))))) | int32(*(*uint8)(unsafe.Pointer(_buf + 1))))
	*(*uint16)(unsafe.Pointer(_pMem + 8)) = uint16(0x4)
	return uint32(2)

_7:
	*(*int64)(unsafe.Pointer(_pMem)) = int64(((int32(65536) * int32(int8(*(*uint8)(unsafe.Pointer(_buf))))) | (int32(*(*uint8)(unsafe.Pointer(_buf + 1))) << (uint(8) % 32))) | int32(*(*uint8)(unsafe.Pointer(_buf + 2))))
	*(*uint16)(unsafe.Pointer(_pMem + 8)) = uint16(0x4)
	return uint32(3)

_8:
	*(*int64)(unsafe.Pointer(_pMem)) = int64((((int32(16777216) * int32(int8(*(*uint8)(unsafe.Pointer(_buf))))) | (int32(*(*uint8)(unsafe.Pointer(_buf + 1))) << (uint(16) % 32))) | (int32(*(*uint8)(unsafe.Pointer(_buf + 2))) << (uint(8) % 32))) | int32(*(*uint8)(unsafe.Pointer(_buf + 3))))
	*(*uint16)(unsafe.Pointer(_pMem + 8)) = uint16(0x4)
	return uint32(4)

_9:
	*(*int64)(unsafe.Pointer(_pMem)) = int64((((uint32(*(*uint8)(unsafe.Pointer(_buf + uintptr(2))))<<(uint(24)%32))|uint32(int32(*(*uint8)(unsafe.Pointer(_buf + uintptr(2) + 1)))<<(uint(16)%32)))|uint32(int32(*(*uint8)(unsafe.Pointer(_buf + uintptr(2) + 2)))<<(uint(8)%32)))|uint32(*(*uint8)(unsafe.Pointer(_buf + uintptr(2) + 3)))) + (int64(4294967296) * int64((int32(256)*int32(int8(*(*uint8)(unsafe.Pointer(_buf)))))|int32(*(*uint8)(unsafe.Pointer(_buf + 1)))))
	*(*uint16)(unsafe.Pointer(_pMem + 8)) = uint16(0x4)
	return uint32(6)

_10:
_11:
	return _960serialGet(tls, _buf, _serial_type, _pMem)

_12:
_13:
	*(*int64)(unsafe.Pointer(_pMem)) = int64(_serial_type - uint32(8))
	*(*uint16)(unsafe.Pointer(_pMem + 8)) = uint16(0x4)
	return uint32(0)

_14:
	*(*uintptr)(unsafe.Pointer(_pMem + 16)) = _buf
	*(*int32)(unsafe.Pointer(_pMem + 12)) = int32((_serial_type - uint32(12)) / uint32(2))
	*(*uint16)(unsafe.Pointer(_pMem + 8)) = *(*uint16)(unsafe.Pointer(_959aFlag + 2*uintptr(_serial_type&uint32(1))))
	return uint32(*(*int32)(unsafe.Pointer(_pMem + 12)))

_1:
	return uint32(0)
}

// _670sqlite3VdbeSerialType is defined at sqlite3.c:75377:20
func _670sqlite3VdbeSerialType(tls crt.TLS, _pMem uintptr /* *TMem = Ssqlite3_value */, _file_format int32, _pLen uintptr /* *Tu32 = uint32 */) (r uint32) {
	var (
		_flags int32
		_n     uint32
		_i     int64
		_u     uint64
	)
	_flags = int32(*(*uint16)(unsafe.Pointer(_pMem + 8)))

	if (_flags & int32(0x1)) == 0 {
		goto _1
	}

	*(*uint32)(unsafe.Pointer(_pLen)) = uint32(0)
	return uint32(0)

_1:
	if (_flags & int32(0x4)) == 0 {
		goto _2
	}

	_i = *(*int64)(unsafe.Pointer(_pMem))
	if _i >= int64(0) {
		goto _3
	}

	_u = uint64(^_i)
	goto _4

_3:
	_u = uint64(_i)
_4:
	if _u > uint64(127) {
		goto _5
	}

	if (_i&int64(1)) != _i || _file_format < int32(4) {
		goto _6
	}

	*(*uint32)(unsafe.Pointer(_pLen)) = uint32(0)
	return uint32(8) + uint32(_u)

	goto _7

_6:
	*(*uint32)(unsafe.Pointer(_pLen)) = uint32(1)
	return uint32(1)

_7:
_5:
	if _u > uint64(32767) {
		goto _8
	}

	*(*uint32)(unsafe.Pointer(_pLen)) = uint32(2)
	return uint32(2)

_8:
	if _u > uint64(8388607) {
		goto _9
	}

	*(*uint32)(unsafe.Pointer(_pLen)) = uint32(3)
	return uint32(3)

_9:
	if _u > uint64(2147483647) {
		goto _10
	}

	*(*uint32)(unsafe.Pointer(_pLen)) = uint32(4)
	return uint32(4)

_10:
	if _u > uint64(140737488355327) {
		goto _11
	}

	*(*uint32)(unsafe.Pointer(_pLen)) = uint32(6)
	return uint32(5)

_11:
	*(*uint32)(unsafe.Pointer(_pLen)) = uint32(8)
	return uint32(6)

_2:
	if (_flags & int32(0x8)) == 0 {
		goto _12
	}

	*(*uint32)(unsafe.Pointer(_pLen)) = uint32(8)
	return uint32(7)

_12:
	_n = uint32(*(*int32)(unsafe.Pointer(_pMem + 12)))
	if (_flags & int32(0x4000)) == 0 {
		goto _13
	}

	_n = uint32(_n + uint32(*(*int32)(unsafe.Pointer(_pMem))))
_13:
	*(*uint32)(unsafe.Pointer(_pLen)) = _n
	return ((_n * uint32(2)) + uint32(12)) + uint32(bool2int((_flags&int32(0x2)) != int32(0)))
}

// _671sqlite3VarintLen is defined at sqlite3.c:29266:20
func _671sqlite3VarintLen(tls crt.TLS, _v uint64) (r int32) {
	var _i int32

	_i = int32(1)
_1:
	if rsh141(&_v, uint64(7)) == uint64(0) {
		goto _3
	}

	_i++
	goto _1

_3:
	return _i
}

// _672sqlite3PutVarint is defined at sqlite3.c:28942:20
func _672sqlite3PutVarint(tls crt.TLS, _p uintptr /* *uint8 */, _v uint64) (r int32) {
	if _v > uint64(0x7f) {
		goto _1
	}

	*(*uint8)(unsafe.Pointer(_p)) = uint8(_v & uint64(0x7f))
	return int32(1)

_1:
	if _v > uint64(0x3fff) {
		goto _2
	}

	*(*uint8)(unsafe.Pointer(_p)) = uint8(((_v >> (uint(7) % 64)) & uint64(0x7f)) | uint64(0x80))
	*(*uint8)(unsafe.Pointer(_p + 1)) = uint8(_v & uint64(0x7f))
	return int32(2)

_2:
	return _961putVarint64(tls, _p, _v)
}

// _673sqlite3VdbeSerialPut is defined at sqlite3.c:75529:20
func _673sqlite3VdbeSerialPut(tls crt.TLS, _buf uintptr /* *Tu8 = uint8 */, _pMem uintptr /* *TMem = Ssqlite3_value */, _serial_type uint32) (r uint32) {
	esc := crt.MustMalloc(8)
	var (
		_len uint32
		_v   = esc // *Tu64 = Tsqlite_uint64 = uint64
		_i   uint32
	)
	defer crt.Free(esc)
	if _serial_type > uint32(7) || _serial_type <= uint32(0) {
		goto _1
	}

	if _serial_type != uint32(7) {
		goto _2
	}

	crt.Xmemcpy(tls, _v, _pMem, uint64(8))
	goto _3

_2:
	*(*uint64)(unsafe.Pointer(_v)) = uint64(*(*int64)(unsafe.Pointer(_pMem)))
_3:
	_len = set25(&_i, uint32(*(*uint8)(unsafe.Pointer(_958sqlite3SmallTypeSizes + uintptr(_serial_type)))))

_4:
	*(*uint8)(unsafe.Pointer(_buf + uintptr(preinc134(&_i)))) = uint8((*(*uint64)(unsafe.Pointer(_v))) & uint64(0xff))
	*(*uint64)(unsafe.Pointer(_v)) = uint64((*(*uint64)(unsafe.Pointer(_v))) >> uint32(8))
	if _i != 0 {
		goto _4
	}

	return _len

_1:
	if _serial_type < uint32(12) {
		goto _7
	}

	_len = uint32(*(*int32)(unsafe.Pointer(_pMem + 12)))
	if _len <= uint32(0) {
		goto _8
	}

	crt.Xmemcpy(tls, _buf, *(*uintptr)(unsafe.Pointer(_pMem + 16)), uint64(_len))
_8:
	return _len

_7:
	return uint32(0)
}

// _674sqlite3BtreeCount is defined at sqlite3.c:68637:20
func _674sqlite3BtreeCount(tls crt.TLS, _pCur uintptr /* *TBtCursor = SBtCursor */, _pnEntry uintptr /* *Ti64 = Tsqlite_int64 = int64 */) (r int32) {
	var (
		_nEntry int64
		_rc     int32
		_iIdx   int32
		_pPage  uintptr // *TMemPage = SMemPage
	)
	_nEntry = int64(0)
	_rc = _962moveToRoot(tls, _pCur)
	if _rc != int32(16) {
		goto _1
	}

	*(*int64)(unsafe.Pointer(_pnEntry)) = int64(0)
	return int32(0)

_1:
_2:
	if _rc != int32(0) {
		goto _3
	}

	_pPage = *(*uintptr)(unsafe.Pointer(_pCur + 144))
	if (*(*uint8)(unsafe.Pointer(_pPage + 8))) == 0 && (*(*uint8)(unsafe.Pointer(_pPage + 2))) != 0 {
		goto _4
	}

	_nEntry = int64(_nEntry + int64(*(*uint16)(unsafe.Pointer(_pPage + 22))))
_4:
	if (*(*uint8)(unsafe.Pointer(_pPage + 8))) == 0 {
		goto _5
	}

_6:
	if int32(*(*int8)(unsafe.Pointer(_pCur + 88))) != int32(0) {
		goto _9
	}

	*(*int64)(unsafe.Pointer(_pnEntry)) = _nEntry
	return _962moveToRoot(tls, _pCur)

_9:
	_963moveToParent(tls, _pCur)
	if int32(*(*uint16)(unsafe.Pointer(_pCur + 90))) >= int32(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pCur + 144))) + 22))) {
		goto _6
	}

	(*(*uint16)(unsafe.Pointer(_pCur + 90)))++
	_pPage = *(*uintptr)(unsafe.Pointer(_pCur + 144))
_5:
	_iIdx = int32(*(*uint16)(unsafe.Pointer(_pCur + 90)))
	if _iIdx != int32(*(*uint16)(unsafe.Pointer(_pPage + 22))) {
		goto _10
	}

	_rc = _964moveToChild(tls, _pCur, _328sqlite3Get4byte(tls, (*(*uintptr)(unsafe.Pointer(_pPage + 80)))+uintptr(int32(*(*uint8)(unsafe.Pointer(_pPage + 9)))+int32(8))))
	goto _11

_10:
	_rc = _964moveToChild(tls, _pCur, _328sqlite3Get4byte(tls, (*(*uintptr)(unsafe.Pointer(_pPage + 80)))+uintptr(int32(*(*uint16)(unsafe.Pointer(_pPage + 24)))&((int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage + 96))) + uintptr(int32(2)*_iIdx))))<<(uint(8)%32))|int32(*(*uint8)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pPage + 96))) + uintptr(int32(2)*_iIdx)) + 1)))))))
_11:
	goto _2

_3:
	return _rc
}

// _675sqlite3VtabSavepoint is defined at sqlite3.c:127305:20
func _675sqlite3VtabSavepoint(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _op int32, _iSavepoint int32) (r int32) {
	var (
		_rc      int32
		_i       int32
		_pVTab   uintptr // *TVTable = SVTable
		_pMod    uintptr // *Tsqlite3_module = Ssqlite3_module
		_xMethod uintptr // *func(crt.TLS, uintptr, int32) int32
	)
	_rc = int32(0)

	if (*(*uintptr)(unsafe.Pointer(_db + 480))) == 0 {
		goto _1
	}

	_i = int32(0)
_2:
	if _rc != int32(0) || _i >= (*(*int32)(unsafe.Pointer(_db + 444))) {
		goto _4
	}

	_pVTab = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 480))) + 8*uintptr(_i)))
	_pMod = *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pVTab + 8))))
	if (*(*uintptr)(unsafe.Pointer(_pVTab + 16))) == 0 || (*(*int32)(unsafe.Pointer(_pMod))) < int32(2) {
		goto _5
	}

	switch _op {
	case int32(0):
		goto _7
	case int32(2):
		goto _8
	default:
		goto _9
	}
_7:
	_xMethod = *(*uintptr)(unsafe.Pointer(_pMod + 160))
	*(*int32)(unsafe.Pointer(_pVTab + 32)) = _iSavepoint + int32(1)
	goto _6

_8:
	_xMethod = *(*uintptr)(unsafe.Pointer(_pMod + 176))
	goto _6

_9:
	_xMethod = *(*uintptr)(unsafe.Pointer(_pMod + 168))
	goto _6

_6:
	if _xMethod == 0 || (*(*int32)(unsafe.Pointer(_pVTab + 32))) <= _iSavepoint {
		goto _10
	}

	_rc = fn50(_xMethod)(tls, *(*uintptr)(unsafe.Pointer(_pVTab + 16)), _iSavepoint)
_10:
_5:
	_i++
	goto _2

_4:
_1:
	return _rc
}

// _676sqlite3BtreeSavepoint is defined at sqlite3.c:63822:20
func _676sqlite3BtreeSavepoint(tls crt.TLS, _p uintptr /* *TBtree = SBtree */, _op int32, _iSavepoint int32) (r int32) {
	var (
		_rc  int32
		_pBt uintptr // *TBtShared = SBtShared
	)
	_rc = int32(0)
	if _p == 0 || int32(*(*uint8)(unsafe.Pointer(_p + 16))) != int32(2) {
		goto _1
	}

	_pBt = *(*uintptr)(unsafe.Pointer(_p + 8))

	_139sqlite3BtreeEnter(tls, _p)
	if _op != int32(2) {
		goto _2
	}

	_rc = _360saveAllCursors(tls, _pBt, uint32(0), null)
_2:
	if _rc != int32(0) {
		goto _3
	}

	_rc = _602sqlite3PagerSavepoint(tls, *(*uintptr)(unsafe.Pointer(_pBt)), _op, _iSavepoint)
_3:
	if _rc != int32(0) {
		goto _4
	}

	if _iSavepoint >= int32(0) || (int32(*(*uint16)(unsafe.Pointer(_pBt + 38)))&int32(0x10)) == int32(0) {
		goto _5
	}

	*(*uint32)(unsafe.Pointer(_pBt + 60)) = uint32(0)
_5:
	_rc = _325newDatabase(tls, _pBt)
	*(*uint32)(unsafe.Pointer(_pBt + 60)) = _328sqlite3Get4byte(tls, uintptr(28)+(*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pBt + 24))) + 80))))

_4:
	_169sqlite3BtreeLeave(tls, _p)
_1:
	return _rc
}

// _677sqlite3BtreeBeginStmt is defined at sqlite3.c:63791:20
func _677sqlite3BtreeBeginStmt(tls crt.TLS, _p uintptr /* *TBtree = SBtree */, _iStatement int32) (r int32) {
	var (
		_rc  int32
		_pBt uintptr // *TBtShared = SBtShared
	)
	_pBt = *(*uintptr)(unsafe.Pointer(_p + 8))
	_139sqlite3BtreeEnter(tls, _p)

	_rc = _330sqlite3PagerOpenSavepoint(tls, *(*uintptr)(unsafe.Pointer(_pBt)), _iStatement)
	_169sqlite3BtreeLeave(tls, _p)
	return _rc
}

// _678allocateCursor is defined at sqlite3.c:79253:19
func _678allocateCursor(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */, _iCur int32, _nField int32, _iDb int32, _eCurType uint8) (r uintptr /* *TVdbeCursor = SVdbeCursor */) {
	var (
		_pMem  uintptr // *TMem = Ssqlite3_value
		_nByte int32
		_pCx   uintptr // *TVdbeCursor = SVdbeCursor
	)
	_pMem = func() uintptr {
		if _iCur > int32(0) {
			return (*(*uintptr)(unsafe.Pointer(_p + 112))) + 56*uintptr((*(*int32)(unsafe.Pointer(_p + 40)))-_iCur)
		}
		return *(*uintptr)(unsafe.Pointer(_p + 112))
	}()
	_pCx = 0
	_nByte = int32((uint64(120) + (uint64(8) * uint64(_nField))) + uint64(func() int32 {
		if int32(_eCurType) == int32(0) {
			return _965sqlite3BtreeCursorSize(tls)
		}
		return int32(0)
	}()))

	if (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 152))) + 8*uintptr(_iCur)))) == 0 {
		goto _1
	}

	_684sqlite3VdbeFreeCursor(tls, _p, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 152))) + 8*uintptr(_iCur))))
	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 152))) + 8*uintptr(_iCur))) = null
_1:
	if int32(0) != _628sqlite3VdbeMemClearAndResize(tls, _pMem, _nByte) {
		goto _2
	}

	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 152))) + 8*uintptr(_iCur))) = set4(&_pCx, *(*uintptr)(unsafe.Pointer(_pMem + 16)))
	crt.Xmemset(tls, _pCx, int32(0), uint64(40))
	*(*uint8)(unsafe.Pointer(_pCx)) = _eCurType
	*(*int8)(unsafe.Pointer(_pCx + 1)) = int8(_iDb)
	*(*int16)(unsafe.Pointer(_pCx + 72)) = int16(_nField)
	*(*uintptr)(unsafe.Pointer(_pCx + 88)) = (_pCx + 112) + 4*uintptr(_nField)
	if int32(_eCurType) != int32(0) {
		goto _3
	}

	*(*uintptr)(unsafe.Pointer(_pCx + 48)) = (*(*uintptr)(unsafe.Pointer(_pMem + 16))) + uintptr(uint64(120)+(uint64(8)*uint64(_nField)))
	_966sqlite3BtreeCursorZero(tls, *(*uintptr)(unsafe.Pointer(_pCx + 48)))
_3:
_2:
	return _pCx
}

// _679sqlite3BtreeCursor is defined at sqlite3.c:63954:20
func _679sqlite3BtreeCursor(tls crt.TLS, _p uintptr /* *TBtree = SBtree */, _iTable int32, _wrFlag int32, _pKeyInfo uintptr /* *SKeyInfo */, _pCur uintptr /* *TBtCursor = SBtCursor */) (r int32) {
	var _rc int32

	if _iTable >= int32(1) {
		goto _1
	}

	_rc = _556sqlite3CorruptError(tls, int32(63963))
	goto _2

_1:
	_139sqlite3BtreeEnter(tls, _p)
	_rc = _967btreeCursor(tls, _p, _iTable, _wrFlag, _pKeyInfo, _pCur)
	_169sqlite3BtreeLeave(tls, _p)
_2:
	return _rc
}

// _680sqlite3BtreeCursorHintFlags is defined at sqlite3.c:60572:21
func _680sqlite3BtreeCursorHintFlags(tls crt.TLS, _pCur uintptr /* *TBtCursor = SBtCursor */, _x uint32) {
	*(*uint8)(unsafe.Pointer(_pCur + 3)) = uint8(_x)
}

// _681sqlite3BtreeCreateTable is defined at sqlite3.c:68336:20
func _681sqlite3BtreeCreateTable(tls crt.TLS, _p uintptr /* *TBtree = SBtree */, _piTable uintptr /* *int32 */, _flags int32) (r int32) {
	var _rc int32

	_139sqlite3BtreeEnter(tls, _p)
	_rc = _968btreeCreateTable(tls, _p, _piTable, _flags)
	_169sqlite3BtreeLeave(tls, _p)
	return _rc
}

// _682sqlite3VdbeSorterInit is defined at sqlite3.c:87839:20
func _682sqlite3VdbeSorterInit(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _nField int32, _pCsr uintptr /* *TVdbeCursor = SVdbeCursor */) (r int32) {
	var (
		_pgsz      int32
		_i         int32
		_pSorter   uintptr // *TVdbeSorter = SVdbeSorter
		_pKeyInfo  uintptr // *TKeyInfo = SKeyInfo
		_szKeyInfo int32
		_sz        int32
		_rc        int32
		_nWorker   int32
		_pTask     uintptr // *TSortSubtask = SSortSubtask
		_mxCache   int64
		_szPma     uint32
	)
	_rc = int32(0)
	if _324sqlite3TempInMemory(tls, _db) == 0 && (*(*int32)(unsafe.Pointer(_28sqlite3Config + 4))) != int32(0) {
		goto _1
	}

	_nWorker = int32(0)
	goto _2

_1:
	_nWorker = *(*int32)(unsafe.Pointer((_db + 124) + 44))
_2:
	_szKeyInfo = int32(uint64(40) + (uint64(int32(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pCsr + 56))) + 6)))-int32(1)) * uint64(8)))
	_sz = int32(uint64(200) + (uint64(_nWorker) * uint64(104)))
	_pSorter = _295sqlite3DbMallocZero(tls, _db, uint64(_sz+_szKeyInfo))
	*(*uintptr)(unsafe.Pointer(_pCsr + 48)) = _pSorter
	if _pSorter != 0 {
		goto _3
	}

	_rc = int32(7)
	goto _4

_3:
	*(*uintptr)(unsafe.Pointer(_pSorter + 40)) = set4(&_pKeyInfo, _pSorter+uintptr(_sz))
	crt.Xmemcpy(tls, _pKeyInfo, *(*uintptr)(unsafe.Pointer(_pCsr + 56)), uint64(_szKeyInfo))
	*(*uintptr)(unsafe.Pointer(_pKeyInfo + 16)) = null
	if _nField == 0 || _nWorker != int32(0) {
		goto _5
	}

	*(*uint16)(unsafe.Pointer(_pKeyInfo + 6)) = uint16(_nField)
_5:
	*(*int32)(unsafe.Pointer(_pSorter + 12)) = set5(&_pgsz, _146sqlite3BtreeGetPageSize(tls, *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_db + 32)) + 8))))
	*(*uint8)(unsafe.Pointer(_pSorter + 91)) = uint8(_nWorker + int32(1))
	*(*uint8)(unsafe.Pointer(_pSorter + 90)) = uint8(_nWorker - int32(1))
	*(*uint8)(unsafe.Pointer(_pSorter + 89)) = uint8(bool2int(int32(*(*uint8)(unsafe.Pointer(_pSorter + 91))) > int32(1)))
	*(*uintptr)(unsafe.Pointer(_pSorter + 32)) = _db
	_i = int32(0)
_6:
	if _i >= int32(*(*uint8)(unsafe.Pointer(_pSorter + 91))) {
		goto _8
	}

	_pTask = (_pSorter + 96) + 104*uintptr(_i)
	*(*uintptr)(unsafe.Pointer(_pTask + 16)) = _pSorter
	_i++
	goto _6

_8:
	if _324sqlite3TempInMemory(tls, _db) != 0 {
		goto _9
	}

	_szPma = *(*uint32)(unsafe.Pointer(_28sqlite3Config + 352))
	*(*int32)(unsafe.Pointer(_pSorter)) = int32(_szPma * uint32(_pgsz))
	_mxCache = int64(*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_db + 32)) + 24))) + 116)))
	if _mxCache >= int64(0) {
		goto _10
	}

	_mxCache = _mxCache * int64(-1024)
	goto _11

_10:
	_mxCache = _mxCache * int64(_pgsz)
_11:
	_mxCache = func() int64 {
		if _mxCache < int64(536870912) {
			return _mxCache
		}
		return int64(536870912)
	}()
	*(*int32)(unsafe.Pointer(_pSorter + 4)) = func() int32 {
		if (*(*int32)(unsafe.Pointer(_pSorter))) > int32(_mxCache) {
			return *(*int32)(unsafe.Pointer(_pSorter))
		}
		return int32(_mxCache)
	}()
	if (*(*int32)(unsafe.Pointer(_28sqlite3Config + 20))) != int32(0) {
		goto _12
	}

	*(*int32)(unsafe.Pointer(_pSorter + 84)) = _pgsz
	*(*uintptr)(unsafe.Pointer((_pSorter + 56) + 8)) = _198sqlite3Malloc(tls, uint64(_pgsz))
	if (*(*uintptr)(unsafe.Pointer((_pSorter + 56) + 8))) != 0 {
		goto _13
	}

	_rc = int32(7)
_13:
_12:
_9:
	if int32(*(*uint16)(unsafe.Pointer(_pKeyInfo + 8))) >= int32(13) || (*(*uintptr)(unsafe.Pointer(_pKeyInfo + 32))) != 0 && (*(*uintptr)(unsafe.Pointer(_pKeyInfo + 32))) != (*(*uintptr)(unsafe.Pointer(_db + 16))) {
		goto _14
	}

	*(*uint8)(unsafe.Pointer(_pSorter + 92)) = uint8(3)
_14:
_4:
	return _rc
}

// _683sqlite3BtreeFakeValidCursor is defined at sqlite3.c:60520:25
func _683sqlite3BtreeFakeValidCursor(tls crt.TLS) (r uintptr /* *TBtCursor = SBtCursor */) {
	return _969fakeCursor
}

// _684sqlite3VdbeFreeCursor is defined at sqlite3.c:74238:21
func _684sqlite3VdbeFreeCursor(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */, _pCx uintptr /* *TVdbeCursor = SVdbeCursor */) {
	var (
		_pVCur   uintptr // *Tsqlite3_vtab_cursor = Ssqlite3_vtab_cursor
		_pModule uintptr // *Tsqlite3_module = Ssqlite3_module
	)
	if _pCx != 0 {
		goto _1
	}

	return

_1:
	switch int32(*(*uint8)(unsafe.Pointer(_pCx))) {
	case int32(1):
		goto _3
	case int32(0):
		goto _4
	case int32(2):
		goto _5
	}
	goto _2

_3:
	_970sqlite3VdbeSorterClose(tls, *(*uintptr)(unsafe.Pointer(_p)), _pCx)
	goto _2

_4:
	if (uint32(*(*uint8)(unsafe.Pointer(_pCx + 5))) << 31 >> 31) == 0 {
		goto _6
	}

	if (*(*uintptr)(unsafe.Pointer(_pCx + 8))) == 0 {
		goto _8
	}

	_367sqlite3BtreeClose(tls, *(*uintptr)(unsafe.Pointer(_pCx + 8)))
_8:
	goto _7

_6:
	_608sqlite3BtreeCloseCursor(tls, *(*uintptr)(unsafe.Pointer(_pCx + 48)))
_7:
	goto _2

_5:
	_pVCur = *(*uintptr)(unsafe.Pointer(_pCx + 48))
	_pModule = *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pVCur))))

	(*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pVCur))) + 8)))--
	fn12(*(*uintptr)(unsafe.Pointer(_pModule + 56)))(tls, _pVCur)
	goto _2

_2:
}

// _685sqlite3BtreeMovetoUnpacked is defined at sqlite3.c:64865:20
func _685sqlite3BtreeMovetoUnpacked(tls crt.TLS, _pCur uintptr /* *TBtCursor = SBtCursor */, _pIdxKey uintptr /* *TUnpackedRecord = SUnpackedRecord */, _intKey int64, _biasRight int32, _pRes uintptr /* *int32 */) (r int32) {
	esc := crt.MustMalloc(8)
	var (
		_rc             int32
		_xRecordCompare uintptr // TRecordCompare = *func(crt.TLS, int32, uintptr, uintptr) int32
		_lwr            int32
		_upr            int32
		_idx            int32
		_c              int32
		_chldPg         uint32
		_pPage          uintptr // *TMemPage = SMemPage
		_pCell          uintptr // *Tu8 = uint8
		_nCellKey       = esc   // *Ti64 = Tsqlite_int64 = int64
		_nCell          int32
		_pCellKey       uintptr // *void
		_pCellBody      uintptr // *Tu8 = uint8
	)
	defer crt.Free(esc)

	if _pIdxKey != 0 || int32(*(*uint8)(unsafe.Pointer(_pCur))) != int32(1) || (int32(*(*uint8)(unsafe.Pointer(_pCur + 1)))&int32(0x2)) == int32(0) {
		goto _1
	}

	if (*(*int64)(unsafe.Pointer(_pCur + 40))) != _intKey {
		goto _2
	}

	*(*int32)(unsafe.Pointer(_pRes)) = int32(0)
	return int32(0)

_2:
	if (*(*int64)(unsafe.Pointer(_pCur + 40))) >= _intKey {
		goto _3
	}

	if (int32(*(*uint8)(unsafe.Pointer(_pCur + 1))) & int32(0x8)) == int32(0) {
		goto _4
	}

	*(*int32)(unsafe.Pointer(_pRes)) = int32(-1)
	return int32(0)

_4:
	if ((*(*int64)(unsafe.Pointer(_pCur + 40)))+int64(1)) != _intKey || (*(*int32)(unsafe.Pointer(_pCur + 84))) != 0 {
		goto _5
	}

	*(*int32)(unsafe.Pointer(_pRes)) = int32(0)
	_rc = _687sqlite3BtreeNext(tls, _pCur, int32(0))
	if _rc != int32(0) {
		goto _6
	}

	_954getCellInfo(tls, _pCur)
	if (*(*int64)(unsafe.Pointer(_pCur + 40))) != _intKey {
		goto _8
	}

	return int32(0)

_8:
	goto _7

_6:
	if _rc != int32(101) {
		goto _9
	}

	_rc = int32(0)
	goto _10

_9:
	return _rc

_10:
_7:
_5:
_3:
_1:
	if _pIdxKey == 0 {
		goto _11
	}

	_xRecordCompare = _971sqlite3VdbeFindCompare(tls, _pIdxKey)
	*(*uint8)(unsafe.Pointer(_pIdxKey + 19)) = uint8(0)

	goto _12

_11:
	_xRecordCompare = null
_12:
	_rc = _962moveToRoot(tls, _pCur)
	if _rc == 0 {
		goto _13
	}

	if _rc != int32(16) {
		goto _14
	}

	*(*int32)(unsafe.Pointer(_pRes)) = int32(-1)
	return int32(0)

_14:
	return _rc

_13:
_15:
	_pPage = *(*uintptr)(unsafe.Pointer(_pCur + 144))

	_lwr = int32(0)
	_upr = int32(*(*uint16)(unsafe.Pointer(_pPage + 22))) - int32(1)

	_idx = _upr >> (uint(int32(1)-_biasRight) % 32)
	*(*uint16)(unsafe.Pointer(_pCur + 90)) = uint16(_idx)
	if _xRecordCompare != 0 {
		goto _18
	}

_20:
	_pCell = (*(*uintptr)(unsafe.Pointer(_pPage + 104))) + uintptr(int32(*(*uint16)(unsafe.Pointer(_pPage + 24)))&((int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage + 96))) + uintptr(int32(2)*_idx))))<<(uint(8)%32))|int32(*(*uint8)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pPage + 96))) + uintptr(int32(2)*_idx)) + 1)))))
	if (*(*uint8)(unsafe.Pointer(_pPage + 3))) == 0 {
		goto _23
	}

_24:
	if int32(0x80) > int32(*(*uint8)(unsafe.Pointer(postinc19(&_pCell)))) {
		goto _25
	}

	if _pCell < (*(*uintptr)(unsafe.Pointer(_pPage + 88))) {
		goto _26
	}

	return _556sqlite3CorruptError(tls, int32(64968))

_26:
	goto _24

_25:
_23:
	_956sqlite3GetVarint(tls, _pCell, _nCellKey)
	if (*(*int64)(unsafe.Pointer(_nCellKey))) >= _intKey {
		goto _27
	}

	_lwr = _idx + int32(1)
	if _lwr <= _upr {
		goto _29
	}

	_c = int32(-1)
	goto _22

_29:
	goto _28

_27:
	if (*(*int64)(unsafe.Pointer(_nCellKey))) <= _intKey {
		goto _30
	}

	_upr = _idx - int32(1)
	if _lwr <= _upr {
		goto _32
	}

	_c = int32(1)
	goto _22

_32:
	goto _31

_30:
	*(*uint16)(unsafe.Pointer(_pCur + 90)) = uint16(_idx)
	if (*(*uint8)(unsafe.Pointer(_pPage + 8))) != 0 {
		goto _33
	}

	_lwr = _idx
	goto _moveto_next_layer

	goto _34

_33:
	{
		p := &(*(*uint8)(unsafe.Pointer(_pCur + 1)))
		*p = uint8(int32(*p) | int32(0x2))
	}
	*(*int64)(unsafe.Pointer(_pCur + 40)) = *(*int64)(unsafe.Pointer(_nCellKey))
	*(*uint16)(unsafe.Pointer((_pCur + 40) + 22)) = uint16(0)
	*(*int32)(unsafe.Pointer(_pRes)) = int32(0)
	return int32(0)

_34:
_31:
_28:
	_idx = (_lwr + _upr) >> (uint(1) % 32)
	goto _20

_22:
	goto _19

_18:
_35:
	_pCell = (*(*uintptr)(unsafe.Pointer(_pPage + 104))) + uintptr(int32(*(*uint16)(unsafe.Pointer(_pPage + 24)))&((int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage + 96))) + uintptr(int32(2)*_idx))))<<(uint(8)%32))|int32(*(*uint8)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pPage + 96))) + uintptr(int32(2)*_idx)) + 1)))))
	_nCell = int32(*(*uint8)(unsafe.Pointer(_pCell)))
	if _nCell > int32(*(*uint8)(unsafe.Pointer(_pPage + 11))) {
		goto _38
	}

	_c = fn142(_xRecordCompare)(tls, _nCell, _pCell+1, _pIdxKey)
	goto _39

_38:
	if int32(*(*uint8)(unsafe.Pointer(_pCell + 1)))&int32(0x80) != 0 || set5(&_nCell, ((_nCell&int32(0x7f))<<(uint(7)%32))+int32(*(*uint8)(unsafe.Pointer(_pCell + 1)))) > int32(*(*uint16)(unsafe.Pointer(_pPage + 14))) {
		goto _40
	}

	_c = fn142(_xRecordCompare)(tls, _nCell, _pCell+2, _pIdxKey)
	goto _41

_40:
	_pCellBody = _pCell - uintptr(*(*uint8)(unsafe.Pointer(_pPage + 10)))
	fn45(*(*uintptr)(unsafe.Pointer(_pPage + 128)))(tls, _pPage, _pCellBody, _pCur+40)
	_nCell = int32(*(*int64)(unsafe.Pointer(_pCur + 40)))
	if _nCell >= int32(2) {
		goto _42
	}

	_rc = _556sqlite3CorruptError(tls, int32(65042))
	goto _moveto_finish

_42:
	_pCellKey = _198sqlite3Malloc(tls, uint64(_nCell+int32(18)))
	if _pCellKey != 0 {
		goto _43
	}

	_rc = int32(7)
	goto _moveto_finish

_43:
	*(*uint16)(unsafe.Pointer(_pCur + 90)) = uint16(_idx)
	_rc = _972accessPayload(tls, _pCur, uint32(0), uint32(_nCell), _pCellKey, int32(0))
	{
		p := &(*(*uint8)(unsafe.Pointer(_pCur + 1)))
		*p = uint8(int32(*p) & int32(-5))
	}
	if _rc == 0 {
		goto _44
	}

	Xsqlite3_free(tls, _pCellKey)
	goto _moveto_finish

_44:
	_c = fn142(_xRecordCompare)(tls, _nCell, _pCellKey, _pIdxKey)
	Xsqlite3_free(tls, _pCellKey)
_41:
_39:
	if _c >= int32(0) {
		goto _45
	}

	_lwr = _idx + int32(1)
	goto _46

_45:
	if _c <= int32(0) {
		goto _47
	}

	_upr = _idx - int32(1)
	goto _48

_47:
	*(*int32)(unsafe.Pointer(_pRes)) = int32(0)
	_rc = int32(0)
	*(*uint16)(unsafe.Pointer(_pCur + 90)) = uint16(_idx)
	if (*(*uint8)(unsafe.Pointer(_pIdxKey + 19))) == 0 {
		goto _49
	}

	_rc = _556sqlite3CorruptError(tls, int32(65073))
_49:
	goto _moveto_finish

_48:
_46:
	if _lwr <= _upr {
		goto _50
	}

	goto _37

_50:
	_idx = (_lwr + _upr) >> (uint(1) % 32)
	goto _35

_37:
_19:
	if (*(*uint8)(unsafe.Pointer(_pPage + 8))) == 0 {
		goto _51
	}

	*(*uint16)(unsafe.Pointer(_pCur + 90)) = uint16(_idx)
	*(*int32)(unsafe.Pointer(_pRes)) = _c
	_rc = int32(0)
	goto _moveto_finish

_51:
	goto _moveto_next_layer
_moveto_next_layer:
	if _lwr < int32(*(*uint16)(unsafe.Pointer(_pPage + 22))) {
		goto _52
	}

	_chldPg = uint32(_328sqlite3Get4byte(tls, (*(*uintptr)(unsafe.Pointer(_pPage + 80)))+uintptr(int32(*(*uint8)(unsafe.Pointer(_pPage + 9)))+int32(8))))
	goto _53

_52:
	_chldPg = uint32(_328sqlite3Get4byte(tls, (*(*uintptr)(unsafe.Pointer(_pPage + 80)))+uintptr(int32(*(*uint16)(unsafe.Pointer(_pPage + 24)))&((int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage + 96))) + uintptr(int32(2)*_lwr))))<<(uint(8)%32))|int32(*(*uint8)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pPage + 96))) + uintptr(int32(2)*_lwr)) + 1)))))))
_53:
	*(*uint16)(unsafe.Pointer(_pCur + 90)) = uint16(_lwr)
	_rc = _964moveToChild(tls, _pCur, _chldPg)
	if _rc == 0 {
		goto _54
	}

	goto _17

_54:
	goto _15

_17:
	goto _moveto_finish
_moveto_finish:
	*(*uint16)(unsafe.Pointer((_pCur + 40) + 22)) = uint16(0)

	return _rc
}

// _686sqlite3BtreeCursorHasHint is defined at sqlite3.c:69579:20
func _686sqlite3BtreeCursorHasHint(tls crt.TLS, _pCsr uintptr /* *TBtCursor = SBtCursor */, _mask uint32) (r int32) {
	return bool2int((uint32(*(*uint8)(unsafe.Pointer(_pCsr + 3))) & _mask) != uint32(0))
}

// _687sqlite3BtreeNext is defined at sqlite3.c:65231:20
func _687sqlite3BtreeNext(tls crt.TLS, _pCur uintptr /* *TBtCursor = SBtCursor */, _flags int32) (r int32) {
	var _pPage uintptr // *TMemPage = SMemPage

	*(*uint16)(unsafe.Pointer((_pCur + 40) + 22)) = uint16(0)
	{
		p := &(*(*uint8)(unsafe.Pointer(_pCur + 1)))
		*p = uint8(int32(*p) & int32(-7))
	}
	if int32(*(*uint8)(unsafe.Pointer(_pCur))) == int32(1) {
		goto _1
	}

	return _973btreeNext(tls, _pCur)

_1:
	_pPage = *(*uintptr)(unsafe.Pointer(_pCur + 144))
	if int32(preinc143(&(*(*uint16)(unsafe.Pointer(_pCur + 90))))) < int32(*(*uint16)(unsafe.Pointer(_pPage + 22))) {
		goto _2
	}

	(*(*uint16)(unsafe.Pointer(_pCur + 90)))--
	return _973btreeNext(tls, _pCur)

_2:
	if (*(*uint8)(unsafe.Pointer(_pPage + 8))) == 0 {
		goto _3
	}

	return int32(0)

	goto _4

_3:
	return _974moveToLeftmost(tls, _pCur)

_4:
	return r
}

// _688sqlite3BtreePrevious is defined at sqlite3.c:65327:20
func _688sqlite3BtreePrevious(tls crt.TLS, _pCur uintptr /* *TBtCursor = SBtCursor */, _flags int32) (r int32) {
	{
		p := &(*(*uint8)(unsafe.Pointer(_pCur + 1)))
		*p = uint8(int32(*p) & int32(-15))
	}
	*(*uint16)(unsafe.Pointer((_pCur + 40) + 22)) = uint16(0)
	if int32(*(*uint8)(unsafe.Pointer(_pCur))) == int32(1) && int32(*(*uint16)(unsafe.Pointer(_pCur + 90))) != int32(0) && int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pCur + 144))) + 8))) != int32(0) {
		goto _1
	}

	return _975btreePrevious(tls, _pCur)

_1:
	(*(*uint16)(unsafe.Pointer(_pCur + 90)))--
	return int32(0)
}

// _689sqlite3BtreeEof is defined at sqlite3.c:65114:20
func _689sqlite3BtreeEof(tls crt.TLS, _pCur uintptr /* *TBtCursor = SBtCursor */) (r int32) {
	return bool2int(int32(1) != int32(*(*uint8)(unsafe.Pointer(_pCur))))
}

// _690sqlite3VdbeAllocUnpackedRecord is defined at sqlite3.c:75718:31
func _690sqlite3VdbeAllocUnpackedRecord(tls crt.TLS, _pKeyInfo uintptr /* *TKeyInfo = SKeyInfo */) (r uintptr /* *TUnpackedRecord = SUnpackedRecord */) {
	var (
		_p     uintptr // *TUnpackedRecord = SUnpackedRecord
		_nByte int32
	)
	_nByte = int32(uint64(24) + (uint64(56) * uint64(int32(*(*uint16)(unsafe.Pointer(_pKeyInfo + 6)))+int32(1))))
	_p = _177sqlite3DbMallocRaw(tls, *(*uintptr)(unsafe.Pointer(_pKeyInfo + 16)), uint64(_nByte))
	if _p != 0 {
		goto _1
	}

	return null

_1:
	*(*uintptr)(unsafe.Pointer(_p + 8)) = _p + 24

	*(*uintptr)(unsafe.Pointer(_p)) = _pKeyInfo
	*(*uint16)(unsafe.Pointer(_p + 16)) = uint16(int32(*(*uint16)(unsafe.Pointer(_pKeyInfo + 6))) + int32(1))
	return _p
}

// _691sqlite3VdbeRecordUnpack is defined at sqlite3.c:75738:21
func _691sqlite3VdbeRecordUnpack(tls crt.TLS, _pKeyInfo uintptr /* *TKeyInfo = SKeyInfo */, _nKey int32, _pKey uintptr /* *void */, _p uintptr /* *TUnpackedRecord = SUnpackedRecord */) {
	esc := crt.MustMalloc(20)
	var (
		_aKey        uintptr // *uint8
		_d           int32
		_idx         uint32
		_u           uint16
		_szHdr       = esc      // *Tu32 = uint32
		_pMem        uintptr    // *TMem = Ssqlite3_value
		_serial_type = esc + 16 // *Tu32 = uint32
	)
	defer crt.Free(esc)
	_aKey = _pKey
	_pMem = *(*uintptr)(unsafe.Pointer(_p + 8))
	*(*int8)(unsafe.Pointer(_p + 18)) = int8(0)

	_idx = uint32(uint8(func() int32 {
		if int32(*(*uint8)(unsafe.Pointer(_aKey))) < int32(0x80) {
			return func() int32 {
				*(*uint32)(unsafe.Pointer(_szHdr)) = uint32(*(*uint8)(unsafe.Pointer(_aKey)))
				return int32(1)
			}()
		}
		return int32(_665sqlite3GetVarint32(tls, _aKey, _szHdr))
	}()))
	_d = int32(*(*uint32)(unsafe.Pointer(_szHdr)))
	_u = uint16(0)
_1:
	if _idx >= (*(*uint32)(unsafe.Pointer(_szHdr))) || _d > _nKey {
		goto _2
	}

	_idx = uint32(_idx + uint32(uint8(func() int32 {
		if int32(*(*uint8)(unsafe.Pointer(_aKey + uintptr(_idx)))) < int32(0x80) {
			return func() int32 {
				*(*uint32)(unsafe.Pointer(_serial_type)) = uint32(*(*uint8)(unsafe.Pointer(_aKey + uintptr(_idx))))
				return int32(1)
			}()
		}
		return int32(_665sqlite3GetVarint32(tls, _aKey+uintptr(_idx), _serial_type))
	}())))
	*(*uint8)(unsafe.Pointer(_pMem + 10)) = *(*uint8)(unsafe.Pointer(_pKeyInfo + 4))
	*(*uintptr)(unsafe.Pointer(_pMem + 40)) = *(*uintptr)(unsafe.Pointer(_pKeyInfo + 16))
	*(*int32)(unsafe.Pointer(_pMem + 32)) = int32(0)
	*(*uintptr)(unsafe.Pointer(_pMem + 16)) = null
	_d = int32(uint32(_d) + _669sqlite3VdbeSerialGet(tls, _aKey+uintptr(_d), *(*uint32)(unsafe.Pointer(_serial_type)), _pMem))
	_pMem += 56
	if int32(preinc143(&_u)) < int32(*(*uint16)(unsafe.Pointer(_p + 16))) {
		goto _3
	}

	goto _2

_3:
	goto _1

_2:
	*(*uint16)(unsafe.Pointer(_p + 16)) = _u
}

// _692sqlite3BtreeLast is defined at sqlite3.c:64796:20
func _692sqlite3BtreeLast(tls crt.TLS, _pCur uintptr /* *TBtCursor = SBtCursor */, _pRes uintptr /* *int32 */) (r int32) {
	var _rc int32

	if int32(1) != int32(*(*uint8)(unsafe.Pointer(_pCur))) || (int32(*(*uint8)(unsafe.Pointer(_pCur + 1)))&int32(0x8)) == int32(0) {
		goto _1
	}

	return int32(0)

_1:
	_rc = _962moveToRoot(tls, _pCur)
	if _rc != int32(0) {
		goto _2
	}

	*(*int32)(unsafe.Pointer(_pRes)) = int32(0)
	_rc = _976moveToRightmost(tls, _pCur)
	if _rc != int32(0) {
		goto _4
	}

	{
		p := &(*(*uint8)(unsafe.Pointer(_pCur + 1)))
		*p = uint8(int32(*p) | int32(0x8))
	}
	goto _5

_4:
	{
		p := &(*(*uint8)(unsafe.Pointer(_pCur + 1)))
		*p = uint8(int32(*p) & int32(-9))
	}
_5:
	goto _3

_2:
	if _rc != int32(16) {
		goto _6
	}

	*(*int32)(unsafe.Pointer(_pRes)) = int32(1)
	_rc = int32(0)
_6:
_3:
	return _rc
}

// _693sqlite3BtreeIntegerKey is defined at sqlite3.c:64075:20
func _693sqlite3BtreeIntegerKey(tls crt.TLS, _pCur uintptr /* *TBtCursor = SBtCursor */) (r int64) {
	_954getCellInfo(tls, _pCur)
	return *(*int64)(unsafe.Pointer(_pCur + 40))
}

// _694sqlite3BtreeInsert is defined at sqlite3.c:67800:20
func _694sqlite3BtreeInsert(tls crt.TLS, _pCur uintptr /* *TBtCursor = SBtCursor */, _pX uintptr /* *TBtreePayload = SBtreePayload */, _flags int32, _seekResult int32) (r int32) {
	esc := crt.MustMalloc(104)
	var (
		_rc      = esc      // *int32
		_loc     = esc + 16 // *int32
		_szNew   = esc + 32 // *int32
		_idx     int32
		_pPage   uintptr    // *TMemPage = SMemPage
		_p       uintptr    // *TBtree = SBtree
		_pBt     uintptr    // *TBtShared = SBtShared
		_oldCell uintptr    // *uint8
		_newCell uintptr    // *uint8
		_r       = esc + 48 // *TUnpackedRecord = SUnpackedRecord
		_info    = esc + 80 // *TCellInfo = SCellInfo
	)
	defer crt.Free(esc)
	*(*int32)(unsafe.Pointer(_loc)) = _seekResult
	*(*int32)(unsafe.Pointer(_szNew)) = int32(0)
	_p = *(*uintptr)(unsafe.Pointer(_pCur + 8))
	_pBt = *(*uintptr)(unsafe.Pointer(_p + 8))
	_newCell = 0

	if int32(*(*uint8)(unsafe.Pointer(_pCur))) != int32(4) {
		goto _1
	}

	return *(*int32)(unsafe.Pointer(_pCur + 84))

_1:
	if (int32(*(*uint8)(unsafe.Pointer(_pCur + 1))) & int32(0x20)) == 0 {
		goto _2
	}

	*(*int32)(unsafe.Pointer(_rc)) = _360saveAllCursors(tls, _pBt, *(*uint32)(unsafe.Pointer(_pCur + 80)), _pCur)
	if (*(*int32)(unsafe.Pointer(_rc))) == 0 {
		goto _3
	}

	return *(*int32)(unsafe.Pointer(_rc))

_3:
_2:
	if (*(*uintptr)(unsafe.Pointer(_pCur + 136))) != 0 {
		goto _4
	}

	_977invalidateIncrblobCursors(tls, _p, *(*uint32)(unsafe.Pointer(_pCur + 80)), *(*int64)(unsafe.Pointer(_pX + 8)), int32(0))

	if (int32(*(*uint8)(unsafe.Pointer(_pCur + 1)))&int32(0x2)) == int32(0) || (*(*int64)(unsafe.Pointer(_pX + 8))) != int64(*(*int64)(unsafe.Pointer(_pCur + 40))) {
		goto _6
	}

	*(*int32)(unsafe.Pointer(_loc)) = int32(0)
	goto _7

_6:
	if (*(*int32)(unsafe.Pointer(_loc))) != int32(0) {
		goto _8
	}

	*(*int32)(unsafe.Pointer(_rc)) = _685sqlite3BtreeMovetoUnpacked(tls, _pCur, null, *(*int64)(unsafe.Pointer(_pX + 8)), bool2int(_flags != int32(0)), _loc)
	if (*(*int32)(unsafe.Pointer(_rc))) == 0 {
		goto _9
	}

	return *(*int32)(unsafe.Pointer(_rc))

_9:
_8:
_7:
	goto _5

_4:
	if (*(*int32)(unsafe.Pointer(_loc))) != int32(0) || (_flags&int32(0x2)) != int32(0) {
		goto _10
	}

	if (*(*uint16)(unsafe.Pointer(_pX + 32))) == 0 {
		goto _11
	}

	*(*uintptr)(unsafe.Pointer(_r)) = *(*uintptr)(unsafe.Pointer(_pCur + 136))
	*(*uintptr)(unsafe.Pointer(_r + 8)) = *(*uintptr)(unsafe.Pointer(_pX + 24))
	*(*uint16)(unsafe.Pointer(_r + 16)) = *(*uint16)(unsafe.Pointer(_pX + 32))
	*(*int8)(unsafe.Pointer(_r + 18)) = int8(0)
	*(*uint8)(unsafe.Pointer(_r + 19)) = uint8(0)
	*(*int8)(unsafe.Pointer(_r + 20)) = int8(0)
	*(*int8)(unsafe.Pointer(_r + 21)) = int8(0)
	*(*uint8)(unsafe.Pointer(_r + 22)) = uint8(0)
	*(*int32)(unsafe.Pointer(_rc)) = _685sqlite3BtreeMovetoUnpacked(tls, _pCur, _r, int64(0), bool2int(_flags != int32(0)), _loc)
	goto _12

_11:
	*(*int32)(unsafe.Pointer(_rc)) = _978btreeMoveto(tls, _pCur, *(*uintptr)(unsafe.Pointer(_pX)), *(*int64)(unsafe.Pointer(_pX + 8)), bool2int(_flags != int32(0)), _loc)
_12:
	if (*(*int32)(unsafe.Pointer(_rc))) == 0 {
		goto _13
	}

	return *(*int32)(unsafe.Pointer(_rc))

_13:
_10:
_5:
	_pPage = *(*uintptr)(unsafe.Pointer(_pCur + 144))

	_newCell = *(*uintptr)(unsafe.Pointer(_pBt + 128))

	*(*int32)(unsafe.Pointer(_rc)) = _979fillInCell(tls, _pPage, _newCell, _pX, _szNew)
	if (*(*int32)(unsafe.Pointer(_rc))) == 0 {
		goto _14
	}

	goto _end_insert

_14:
	_idx = int32(*(*uint16)(unsafe.Pointer(_pCur + 90)))
	if (*(*int32)(unsafe.Pointer(_loc))) != int32(0) {
		goto _15
	}

	*(*int32)(unsafe.Pointer(_rc)) = _161sqlite3PagerWrite(tls, *(*uintptr)(unsafe.Pointer(_pPage + 112)))
	if (*(*int32)(unsafe.Pointer(_rc))) == 0 {
		goto _17
	}

	goto _end_insert

_17:
	_oldCell = (*(*uintptr)(unsafe.Pointer(_pPage + 80))) + uintptr(int32(*(*uint16)(unsafe.Pointer(_pPage + 24)))&((int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage + 96))) + uintptr(int32(2)*_idx))))<<(uint(8)%32))|int32(*(*uint8)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pPage + 96))) + uintptr(int32(2)*_idx)) + 1)))))
	if (*(*uint8)(unsafe.Pointer(_pPage + 8))) != 0 {
		goto _18
	}

	crt.Xmemcpy(tls, _newCell, _oldCell, uint64(4))
_18:
	*(*int32)(unsafe.Pointer(_rc)) = _980clearCell(tls, _pPage, _oldCell, _info)
	if int32(*(*uint16)(unsafe.Pointer(_info + 22))) != (*(*int32)(unsafe.Pointer(_szNew))) || uint32(*(*uint16)(unsafe.Pointer(_info + 20))) != (*(*uint32)(unsafe.Pointer(_info + 16))) || *(*uint8)(unsafe.Pointer(_pBt + 33)) != 0 && (*(*int32)(unsafe.Pointer(_szNew))) >= int32(*(*uint16)(unsafe.Pointer(_pPage + 16))) {
		goto _19
	}

	if (_oldCell + uintptr(*(*int32)(unsafe.Pointer(_szNew)))) <= (*(*uintptr)(unsafe.Pointer(_pPage + 88))) {
		goto _20
	}

	return _556sqlite3CorruptError(tls, int32(67931))

_20:
	crt.Xmemcpy(tls, _oldCell, _newCell, uint64(*(*int32)(unsafe.Pointer(_szNew))))
	return int32(0)

_19:
	_981dropCell(tls, _pPage, _idx, int32(*(*uint16)(unsafe.Pointer(_info + 22))), _rc)
	if (*(*int32)(unsafe.Pointer(_rc))) == 0 {
		goto _21
	}

	goto _end_insert

_21:
	goto _16

_15:
	if (*(*int32)(unsafe.Pointer(_loc))) >= int32(0) || int32(*(*uint16)(unsafe.Pointer(_pPage + 22))) <= int32(0) {
		goto _22
	}

	_idx = int32(preinc143(&(*(*uint16)(unsafe.Pointer(_pCur + 90)))))
	{
		p := &(*(*uint8)(unsafe.Pointer(_pCur + 1)))
		*p = uint8(int32(*p) & int32(-3))
	}
	goto _23

_22:
_23:
_16:
	_982insertCell(tls, _pPage, _idx, _newCell, *(*int32)(unsafe.Pointer(_szNew)), null, uint32(0), _rc)

	*(*uint16)(unsafe.Pointer((_pCur + 40) + 22)) = uint16(0)
	if (*(*uint8)(unsafe.Pointer(_pPage + 12))) == 0 {
		goto _24
	}

	{
		p := &(*(*uint8)(unsafe.Pointer(_pCur + 1)))
		*p = uint8(int32(*p) & int32(-3))
	}
	*(*int32)(unsafe.Pointer(_rc)) = _983balance(tls, _pCur)
	*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pCur + 144))) + 12)) = uint8(0)
	*(*uint8)(unsafe.Pointer(_pCur)) = uint8(0)
	if _flags&int32(0x2) == 0 || (*(*int32)(unsafe.Pointer(_rc))) != int32(0) {
		goto _25
	}

	_601btreeReleaseAllCursorPages(tls, _pCur)
	if (*(*uintptr)(unsafe.Pointer(_pCur + 136))) == 0 {
		goto _26
	}

	*(*uintptr)(unsafe.Pointer(_pCur + 72)) = _198sqlite3Malloc(tls, uint64(*(*int64)(unsafe.Pointer(_pX + 8))))
	if (*(*uintptr)(unsafe.Pointer(_pCur + 72))) != 0 {
		goto _27
	}

	*(*int32)(unsafe.Pointer(_rc)) = int32(7)
	goto _28

_27:
	crt.Xmemcpy(tls, *(*uintptr)(unsafe.Pointer(_pCur + 72)), *(*uintptr)(unsafe.Pointer(_pX)), uint64(*(*int64)(unsafe.Pointer(_pX + 8))))
_28:
_26:
	*(*uint8)(unsafe.Pointer(_pCur)) = uint8(3)
	*(*int64)(unsafe.Pointer(_pCur + 64)) = int64(*(*int64)(unsafe.Pointer(_pX + 8)))
_25:
_24:
	goto _end_insert
_end_insert:
	return *(*int32)(unsafe.Pointer(_rc))
	return r
}

// _695sqlite3BtreeDelete is defined at sqlite3.c:68018:20
func _695sqlite3BtreeDelete(tls crt.TLS, _pCur uintptr /* *TBtCursor = SBtCursor */, _flags uint8) (r int32) {
	esc := crt.MustMalloc(40)
	var (
		_p          uintptr // *TBtree = SBtree
		_pBt        uintptr // *TBtShared = SBtShared
		_rc         = esc   // *int32
		_pPage      uintptr // *TMemPage = SMemPage
		_pCell      uintptr // *uint8
		_iCellIdx   int32
		_iCellDepth int32
		_info       = esc + 16 // *TCellInfo = SCellInfo
		_bSkipnext  int32
		_bPreserve  uint8
		_pLeaf      uintptr // *TMemPage = SMemPage
		_nCell      int32
		_n          uint32
		_pTmp       uintptr // *uint8
	)
	defer crt.Free(esc)
	_p = *(*uintptr)(unsafe.Pointer(_pCur + 8))
	_pBt = *(*uintptr)(unsafe.Pointer(_p + 8))
	_bSkipnext = int32(0)
	_bPreserve = uint8(int32(_flags) & int32(0x2))

	_iCellDepth = int32(*(*int8)(unsafe.Pointer(_pCur + 88)))
	_iCellIdx = int32(*(*uint16)(unsafe.Pointer(_pCur + 90)))
	_pPage = *(*uintptr)(unsafe.Pointer(_pCur + 144))
	_pCell = (*(*uintptr)(unsafe.Pointer(_pPage + 80))) + uintptr(int32(*(*uint16)(unsafe.Pointer(_pPage + 24)))&((int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage + 96))) + uintptr(int32(2)*_iCellIdx))))<<(uint(8)%32))|int32(*(*uint8)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pPage + 96))) + uintptr(int32(2)*_iCellIdx)) + 1)))))
	if _bPreserve == 0 {
		goto _1
	}

	if (*(*uint8)(unsafe.Pointer(_pPage + 8))) != 0 && ((int32(*(*uint16)(unsafe.Pointer(_pPage + 20)))+int32(_984cellSizePtr(tls, _pPage, _pCell)))+int32(2)) <= int32(((*(*uint32)(unsafe.Pointer(_pBt + 52)))*uint32(2))/uint32(3)) {
		goto _2
	}

	*(*int32)(unsafe.Pointer(_rc)) = _921saveCursorKey(tls, _pCur)
	if (*(*int32)(unsafe.Pointer(_rc))) == 0 {
		goto _4
	}

	return *(*int32)(unsafe.Pointer(_rc))

_4:
	goto _3

_2:
	_bSkipnext = int32(1)
_3:
_1:
	if (*(*uint8)(unsafe.Pointer(_pPage + 8))) != 0 {
		goto _5
	}

	*(*int32)(unsafe.Pointer(_rc)) = _688sqlite3BtreePrevious(tls, _pCur, int32(0))

	if (*(*int32)(unsafe.Pointer(_rc))) == 0 {
		goto _6
	}

	return *(*int32)(unsafe.Pointer(_rc))

_6:
_5:
	if (int32(*(*uint8)(unsafe.Pointer(_pCur + 1))) & int32(0x20)) == 0 {
		goto _7
	}

	*(*int32)(unsafe.Pointer(_rc)) = _360saveAllCursors(tls, _pBt, *(*uint32)(unsafe.Pointer(_pCur + 80)), _pCur)
	if (*(*int32)(unsafe.Pointer(_rc))) == 0 {
		goto _8
	}

	return *(*int32)(unsafe.Pointer(_rc))

_8:
_7:
	if (*(*uintptr)(unsafe.Pointer(_pCur + 136))) != 0 {
		goto _9
	}

	_977invalidateIncrblobCursors(tls, _p, *(*uint32)(unsafe.Pointer(_pCur + 80)), *(*int64)(unsafe.Pointer(_pCur + 40)), int32(0))
_9:
	*(*int32)(unsafe.Pointer(_rc)) = _161sqlite3PagerWrite(tls, *(*uintptr)(unsafe.Pointer(_pPage + 112)))
	if (*(*int32)(unsafe.Pointer(_rc))) == 0 {
		goto _10
	}

	return *(*int32)(unsafe.Pointer(_rc))

_10:
	*(*int32)(unsafe.Pointer(_rc)) = _980clearCell(tls, _pPage, _pCell, _info)
	_981dropCell(tls, _pPage, _iCellIdx, int32(*(*uint16)(unsafe.Pointer(_info + 22))), _rc)
	if (*(*int32)(unsafe.Pointer(_rc))) == 0 {
		goto _11
	}

	return *(*int32)(unsafe.Pointer(_rc))

_11:
	if (*(*uint8)(unsafe.Pointer(_pPage + 8))) != 0 {
		goto _12
	}

	_pLeaf = *(*uintptr)(unsafe.Pointer(_pCur + 144))
	if _iCellDepth >= (int32(*(*int8)(unsafe.Pointer(_pCur + 88))) - int32(1)) {
		goto _13
	}

	_n = *(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((_pCur + 152) + 8*uintptr(_iCellDepth+int32(1))))) + 4))
	goto _14

_13:
	_n = *(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pCur + 144))) + 4))
_14:
	_pCell = (*(*uintptr)(unsafe.Pointer(_pLeaf + 80))) + uintptr(int32(*(*uint16)(unsafe.Pointer(_pLeaf + 24)))&((int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pLeaf + 96))) + uintptr(int32(2)*(int32(*(*uint16)(unsafe.Pointer(_pLeaf + 22)))-int32(1))))))<<(uint(8)%32))|int32(*(*uint8)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pLeaf + 96))) + uintptr(int32(2)*(int32(*(*uint16)(unsafe.Pointer(_pLeaf + 22)))-int32(1)))) + 1)))))
	if _pCell >= (*(*uintptr)(unsafe.Pointer(_pLeaf + 80)))+4 {
		goto _15
	}

	return _556sqlite3CorruptError(tls, int32(68119))

_15:
	_nCell = int32(fn144(*(*uintptr)(unsafe.Pointer(_pLeaf + 120)))(tls, _pLeaf, _pCell))

	_pTmp = *(*uintptr)(unsafe.Pointer(_pBt + 128))

	*(*int32)(unsafe.Pointer(_rc)) = _161sqlite3PagerWrite(tls, *(*uintptr)(unsafe.Pointer(_pLeaf + 112)))
	if (*(*int32)(unsafe.Pointer(_rc))) != int32(0) {
		goto _16
	}

	_982insertCell(tls, _pPage, _iCellIdx, _pCell-uintptr(4), _nCell+int32(4), _pTmp, _n, _rc)
_16:
	_981dropCell(tls, _pLeaf, int32(*(*uint16)(unsafe.Pointer(_pLeaf + 22)))-int32(1), _nCell, _rc)
	if (*(*int32)(unsafe.Pointer(_rc))) == 0 {
		goto _17
	}

	return *(*int32)(unsafe.Pointer(_rc))

_17:
_12:
	*(*int32)(unsafe.Pointer(_rc)) = _983balance(tls, _pCur)
	if (*(*int32)(unsafe.Pointer(_rc))) != int32(0) || int32(*(*int8)(unsafe.Pointer(_pCur + 88))) <= _iCellDepth {
		goto _18
	}

	_922releasePageNotNull(tls, *(*uintptr)(unsafe.Pointer(_pCur + 144)))
	(*(*int8)(unsafe.Pointer(_pCur + 88)))--
_19:
	if int32(*(*int8)(unsafe.Pointer(_pCur + 88))) <= _iCellDepth {
		goto _20
	}

	_919releasePage(tls, *(*uintptr)(unsafe.Pointer((_pCur + 152) + 8*uintptr(postinc145(&(*(*int8)(unsafe.Pointer(_pCur + 88))))))))
	goto _19

_20:
	*(*uintptr)(unsafe.Pointer(_pCur + 144)) = *(*uintptr)(unsafe.Pointer((_pCur + 152) + 8*uintptr(*(*int8)(unsafe.Pointer(_pCur + 88)))))
	*(*int32)(unsafe.Pointer(_rc)) = _983balance(tls, _pCur)
_18:
	if (*(*int32)(unsafe.Pointer(_rc))) != int32(0) {
		goto _21
	}

	if _bSkipnext == 0 {
		goto _22
	}

	*(*uint8)(unsafe.Pointer(_pCur)) = uint8(2)
	if _iCellIdx < int32(*(*uint16)(unsafe.Pointer(_pPage + 22))) {
		goto _24
	}

	*(*int32)(unsafe.Pointer(_pCur + 84)) = int32(-1)
	*(*uint16)(unsafe.Pointer(_pCur + 90)) = uint16(int32(*(*uint16)(unsafe.Pointer(_pPage + 22))) - int32(1))
	goto _25

_24:
	*(*int32)(unsafe.Pointer(_pCur + 84)) = int32(1)
_25:
	goto _23

_22:
	*(*int32)(unsafe.Pointer(_rc)) = _962moveToRoot(tls, _pCur)
	if _bPreserve == 0 {
		goto _26
	}

	_601btreeReleaseAllCursorPages(tls, _pCur)
	*(*uint8)(unsafe.Pointer(_pCur)) = uint8(3)
_26:
	if (*(*int32)(unsafe.Pointer(_rc))) != int32(16) {
		goto _27
	}

	*(*int32)(unsafe.Pointer(_rc)) = int32(0)
_27:
_23:
_21:
	return *(*int32)(unsafe.Pointer(_rc))
}

// _696sqlite3VdbeSorterCompare is defined at sqlite3.c:89629:20
func _696sqlite3VdbeSorterCompare(tls crt.TLS, _pCsr uintptr /* *TVdbeCursor = SVdbeCursor */, _pVal uintptr /* *TMem = Ssqlite3_value */, _nKeyCol int32, _pRes uintptr /* *int32 */) (r int32) {
	esc := crt.MustMalloc(4)
	var (
		_pSorter  uintptr // *TVdbeSorter = SVdbeSorter
		_r2       uintptr // *TUnpackedRecord = SUnpackedRecord
		_pKeyInfo uintptr // *TKeyInfo = SKeyInfo
		_i        int32
		_pKey     uintptr // *void
		_nKey     = esc   // *int32
	)
	defer crt.Free(esc)

	_pSorter = *(*uintptr)(unsafe.Pointer(_pCsr + 48))
	_r2 = *(*uintptr)(unsafe.Pointer(_pSorter + 48))
	_pKeyInfo = *(*uintptr)(unsafe.Pointer(_pCsr + 56))
	if _r2 != 0 {
		goto _1
	}

	_r2 = set4(&(*(*uintptr)(unsafe.Pointer(_pSorter + 48))), _690sqlite3VdbeAllocUnpackedRecord(tls, _pKeyInfo))
	if _r2 != 0 {
		goto _2
	}

	return int32(7)

_2:
	*(*uint16)(unsafe.Pointer(_r2 + 16)) = uint16(_nKeyCol)
_1:
	_pKey = _985vdbeSorterRowkey(tls, _pSorter, _nKey)
	_691sqlite3VdbeRecordUnpack(tls, _pKeyInfo, *(*int32)(unsafe.Pointer(_nKey)), _pKey, _r2)
	_i = int32(0)
_3:
	if _i >= _nKeyCol {
		goto _5
	}

	if (int32(*(*uint16)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_r2 + 8))) + 56*uintptr(_i)) + 8))) & int32(0x1)) == 0 {
		goto _6
	}

	*(*int32)(unsafe.Pointer(_pRes)) = int32(-1)
	return int32(0)

_6:
	_i++
	goto _3

_5:
	*(*int32)(unsafe.Pointer(_pRes)) = _986sqlite3VdbeRecordCompare(tls, *(*int32)(unsafe.Pointer(_pVal + 12)), *(*uintptr)(unsafe.Pointer(_pVal + 16)), _r2)
	return int32(0)
}

// _697sqlite3VdbeSorterRowkey is defined at sqlite3.c:89596:20
func _697sqlite3VdbeSorterRowkey(tls crt.TLS, _pCsr uintptr /* *TVdbeCursor = SVdbeCursor */, _pOut uintptr /* *TMem = Ssqlite3_value */) (r int32) {
	esc := crt.MustMalloc(4)
	var (
		_pSorter uintptr // *TVdbeSorter = SVdbeSorter
		_pKey    uintptr // *void
		_nKey    = esc   // *int32
	)
	defer crt.Free(esc)

	_pSorter = *(*uintptr)(unsafe.Pointer(_pCsr + 48))
	_pKey = _985vdbeSorterRowkey(tls, _pSorter, _nKey)
	if _628sqlite3VdbeMemClearAndResize(tls, _pOut, *(*int32)(unsafe.Pointer(_nKey))) == 0 {
		goto _1
	}

	return int32(7)

_1:
	*(*int32)(unsafe.Pointer(_pOut + 12)) = *(*int32)(unsafe.Pointer(_nKey))
	*(*uint16)(unsafe.Pointer(_pOut + 8)) = uint16((int32(*(*uint16)(unsafe.Pointer(_pOut + 8))) & int32(-49664)) | int32(0x10))
	crt.Xmemcpy(tls, *(*uintptr)(unsafe.Pointer(_pOut + 16)), _pKey, uint64(*(*int32)(unsafe.Pointer(_nKey))))
	return int32(0)
}

// _698sqlite3VtabImportErrmsg is defined at sqlite3.c:76806:21
func _698sqlite3VtabImportErrmsg(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */, _pVtab uintptr /* *Tsqlite3_vtab = Ssqlite3_vtab */) {
	var _db uintptr // *Tsqlite3 = Ssqlite3

	if (*(*uintptr)(unsafe.Pointer(_pVtab + 16))) == 0 {
		goto _1
	}

	_db = *(*uintptr)(unsafe.Pointer(_p))
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 144)))
	*(*uintptr)(unsafe.Pointer(_p + 144)) = _183sqlite3DbStrDup(tls, _db, *(*uintptr)(unsafe.Pointer(_pVtab + 16)))
	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_pVtab + 16)))
	*(*uintptr)(unsafe.Pointer(_pVtab + 16)) = null
_1:
}

// _699sqlite3VdbeCursorRestore is defined at sqlite3.c:75293:20
func _699sqlite3VdbeCursorRestore(tls crt.TLS, _p uintptr /* *TVdbeCursor = SVdbeCursor */) (r int32) {
	if _952sqlite3BtreeCursorHasMoved(tls, *(*uintptr)(unsafe.Pointer(_p + 48))) == 0 {
		goto _1
	}

	return _953handleMovedCursor(tls, _p)

_1:
	return int32(0)
}

// _700sqlite3BtreeCursorIsValidNN is defined at sqlite3.c:64064:20
func _700sqlite3BtreeCursorIsValidNN(tls crt.TLS, _pCur uintptr /* *TBtCursor = SBtCursor */) (r int32) {
	return bool2int(int32(*(*uint8)(unsafe.Pointer(_pCur))) == int32(1))
}

// _701sqlite3BtreeFirst is defined at sqlite3.c:64774:20
func _701sqlite3BtreeFirst(tls crt.TLS, _pCur uintptr /* *TBtCursor = SBtCursor */, _pRes uintptr /* *int32 */) (r int32) {
	var _rc int32

	_rc = _962moveToRoot(tls, _pCur)
	if _rc != int32(0) {
		goto _1
	}

	*(*int32)(unsafe.Pointer(_pRes)) = int32(0)
	_rc = _974moveToLeftmost(tls, _pCur)
	goto _2

_1:
	if _rc != int32(16) {
		goto _3
	}

	*(*int32)(unsafe.Pointer(_pRes)) = int32(1)
	_rc = int32(0)
_3:
_2:
	return _rc
}

// _702sqlite3BtreeRowCountEst is defined at sqlite3.c:65127:20
func _702sqlite3BtreeRowCountEst(tls crt.TLS, _pCur uintptr /* *TBtCursor = SBtCursor */) (r int64) {
	var (
		_n int64
		_i uint8
	)

	if int32(*(*uint8)(unsafe.Pointer(_pCur))) == int32(1) {
		goto _1
	}

	return int64(-1)

_1:
	if int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pCur + 144))) + 8))) != int32(0) {
		goto _2
	}

	return int64(-1)

_2:
	_n = int64(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pCur + 144))) + 22)))
	_i = uint8(0)
_3:
	if int32(_i) >= int32(*(*int8)(unsafe.Pointer(_pCur + 88))) {
		goto _5
	}

	_n = int64(_n * int64(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((_pCur + 152) + 8*uintptr(_i)))) + 22))))
	_i++
	goto _3

_5:
	return _n
}

// _703sqlite3LogEst is defined at sqlite3.c:29546:23
func _703sqlite3LogEst(tls crt.TLS, _x uint64) (r int16) {
	var _y int16

	_y = int16(40)
	if _x >= uint64(8) {
		goto _1
	}

	if _x >= uint64(2) {
		goto _3
	}

	return int16(0)

_3:
_4:
	if _x >= uint64(8) {
		goto _5
	}

	_y = int16(int32(_y) - int32(10))
	_x = uint64(_x << uint32(1))
	goto _4

_5:
	goto _2

_1:
_6:
	if _x <= uint64(255) {
		goto _7
	}

	_y = int16(int32(_y) + int32(40))
	_x = uint64(_x >> uint32(4))
	goto _6

_7:
_8:
	if _x <= uint64(15) {
		goto _9
	}

	_y = int16(int32(_y) + int32(10))
	_x = uint64(_x >> uint32(1))
	goto _8

_9:
_2:
	return int16((int32(*(*int16)(unsafe.Pointer(_987a + 2*uintptr(_x&uint64(7))))) + int32(_y)) - int32(10))
}

// _704sqlite3VdbeSorterRewind is defined at sqlite3.c:89479:20
func _704sqlite3VdbeSorterRewind(tls crt.TLS, _pCsr uintptr /* *TVdbeCursor = SVdbeCursor */, _pbEof uintptr /* *int32 */) (r int32) {
	var (
		_pSorter uintptr // *TVdbeSorter = SVdbeSorter
		_rc      int32
	)
	_rc = int32(0)

	_pSorter = *(*uintptr)(unsafe.Pointer(_pCsr + 48))

	if int32(*(*uint8)(unsafe.Pointer(_pSorter + 88))) != int32(0) {
		goto _1
	}

	if (*(*uintptr)(unsafe.Pointer(_pSorter + 56))) == 0 {
		goto _2
	}

	*(*int32)(unsafe.Pointer(_pbEof)) = int32(0)
	_rc = _988vdbeSorterSort(tls, _pSorter+96, _pSorter+56)
	goto _3

_2:
	*(*int32)(unsafe.Pointer(_pbEof)) = int32(1)
_3:
	return _rc

_1:
	_rc = _989vdbeSorterFlushPMA(tls, _pSorter)
	_rc = _990vdbeSorterJoinAll(tls, _pSorter, _rc)

	if _rc != int32(0) {
		goto _4
	}

	_rc = _991vdbeSorterSetupMerge(tls, _pSorter)
	*(*int32)(unsafe.Pointer(_pbEof)) = int32(0)
_4:
	return _rc
}

// _705sqlite3VdbeSorterNext is defined at sqlite3.c:89531:20
func _705sqlite3VdbeSorterNext(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pCsr uintptr /* *TVdbeCursor = SVdbeCursor */) (r int32) {
	esc := crt.MustMalloc(4)
	var (
		_pSorter uintptr // *TVdbeSorter = SVdbeSorter
		_rc      int32
		_res     = esc   // *int32
		_pFree   uintptr // *TSorterRecord = SSorterRecord
	)
	defer crt.Free(esc)

	_pSorter = *(*uintptr)(unsafe.Pointer(_pCsr + 48))

	if (*(*uint8)(unsafe.Pointer(_pSorter + 88))) == 0 {
		goto _1
	}

	if (*(*uint8)(unsafe.Pointer(_pSorter + 89))) == 0 {
		goto _3
	}

	_rc = _992vdbePmaReaderNext(tls, *(*uintptr)(unsafe.Pointer(_pSorter + 16)))
	if _rc != int32(0) || (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pSorter + 16))) + 24))) != 0 {
		goto _5
	}

	_rc = int32(101)
_5:
	goto _4

_3:
	*(*int32)(unsafe.Pointer(_res)) = int32(0)

	_rc = _993vdbeMergeEngineStep(tls, *(*uintptr)(unsafe.Pointer(_pSorter + 24)), _res)
	if _rc != int32(0) || (*(*int32)(unsafe.Pointer(_res))) == 0 {
		goto _6
	}

	_rc = int32(101)
_6:
_4:
	goto _2

_1:
	_pFree = *(*uintptr)(unsafe.Pointer(_pSorter + 56))
	*(*uintptr)(unsafe.Pointer(_pSorter + 56)) = *(*uintptr)(unsafe.Pointer(_pFree + 8))
	*(*uintptr)(unsafe.Pointer(_pFree + 8)) = null
	if (*(*uintptr)(unsafe.Pointer((_pSorter + 56) + 8))) != 0 {
		goto _7
	}

	_994vdbeSorterRecordFree(tls, _db, _pFree)
_7:
	_rc = func() int32 {
		if (*(*uintptr)(unsafe.Pointer(_pSorter + 56))) != 0 {
			return int32(0)
		}
		return int32(101)
	}()
_2:
	return _rc
}

// _706sqlite3VdbeSorterWrite is defined at sqlite3.c:88674:20
func _706sqlite3VdbeSorterWrite(tls crt.TLS, _pCsr uintptr /* *TVdbeCursor = SVdbeCursor */, _pVal uintptr /* *TMem = Ssqlite3_value */) (r int32) {
	esc := crt.MustMalloc(4)
	var (
		_pSorter  uintptr // *TVdbeSorter = SVdbeSorter
		_rc       int32
		_pNew     uintptr // *TSorterRecord = SSorterRecord
		_bFlush   int32
		_nReq     int32
		_nPMA     int32
		_t        = esc // *int32
		_nMin     int32
		_aNew     uintptr // *Tu8 = uint8
		_iListOff int32
		_nNew     int32
	)
	defer crt.Free(esc)
	_rc = int32(0)

	_pSorter = *(*uintptr)(unsafe.Pointer(_pCsr + 48))
	if int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pVal + 16))) + 1))) < int32(0x80) {
		*(*int32)(unsafe.Pointer(_t)) = int32(uint32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pVal + 16))) + 1))))
	} else {
		_665sqlite3GetVarint32(tls, (*(*uintptr)(unsafe.Pointer(_pVal + 16)))+1, _t)
	}
	if (*(*int32)(unsafe.Pointer(_t))) <= int32(0) || (*(*int32)(unsafe.Pointer(_t))) >= int32(10) || (*(*int32)(unsafe.Pointer(_t))) == int32(7) {
		goto _1
	}

	{
		p := &(*(*uint8)(unsafe.Pointer(_pSorter + 92)))
		*p = uint8(int32(*p) & int32(0x1))
	}
	goto _2

_1:
	if (*(*int32)(unsafe.Pointer(_t))) <= int32(10) || (*(*int32)(unsafe.Pointer(_t)))&int32(0x1) == 0 {
		goto _3
	}

	{
		p := &(*(*uint8)(unsafe.Pointer(_pSorter + 92)))
		*p = uint8(int32(*p) & int32(0x2))
	}
	goto _4

_3:
	*(*uint8)(unsafe.Pointer(_pSorter + 92)) = uint8(0)
_4:
_2:
	_nReq = int32(uint64(*(*int32)(unsafe.Pointer(_pVal + 12))) + uint64(16))
	_nPMA = (*(*int32)(unsafe.Pointer(_pVal + 12))) + _671sqlite3VarintLen(tls, uint64(*(*int32)(unsafe.Pointer(_pVal + 12))))
	if (*(*int32)(unsafe.Pointer(_pSorter + 4))) == 0 {
		goto _5
	}

	if (*(*uintptr)(unsafe.Pointer((_pSorter + 56) + 8))) == 0 {
		goto _6
	}

	_bFlush = bool2int(((*(*int32)(unsafe.Pointer(_pSorter + 80))) != 0) && (((*(*int32)(unsafe.Pointer(_pSorter + 80))) + _nReq) > (*(*int32)(unsafe.Pointer(_pSorter + 4)))))
	goto _7

_6:
	_bFlush = bool2int(((*(*int32)(unsafe.Pointer((_pSorter + 56) + 16))) > (*(*int32)(unsafe.Pointer(_pSorter + 4)))) || (((*(*int32)(unsafe.Pointer((_pSorter + 56) + 16))) > (*(*int32)(unsafe.Pointer(_pSorter)))) && (_995sqlite3HeapNearlyFull(tls) != 0)))
_7:
	if _bFlush == 0 {
		goto _8
	}

	_rc = _989vdbeSorterFlushPMA(tls, _pSorter)
	*(*int32)(unsafe.Pointer((_pSorter + 56) + 16)) = int32(0)
	*(*int32)(unsafe.Pointer(_pSorter + 80)) = int32(0)

_8:
_5:
	{
		p := &(*(*int32)(unsafe.Pointer((_pSorter + 56) + 16)))
		*p = int32(int32(*p) + _nPMA)
	}
	if _nPMA <= (*(*int32)(unsafe.Pointer(_pSorter + 8))) {
		goto _9
	}

	*(*int32)(unsafe.Pointer(_pSorter + 8)) = _nPMA
_9:
	if (*(*uintptr)(unsafe.Pointer((_pSorter + 56) + 8))) == 0 {
		goto _10
	}

	_nMin = (*(*int32)(unsafe.Pointer(_pSorter + 80))) + _nReq
	if _nMin <= (*(*int32)(unsafe.Pointer(_pSorter + 84))) {
		goto _12
	}

	_iListOff = int32(int64(*(*uintptr)(unsafe.Pointer(_pSorter + 56)) - (*(*uintptr)(unsafe.Pointer((_pSorter + 56) + 8)))))
	_nNew = (*(*int32)(unsafe.Pointer(_pSorter + 84))) * int32(2)
_13:
	if _nNew >= _nMin {
		goto _14
	}

	_nNew = _nNew * int32(2)
	goto _13

_14:
	if _nNew <= (*(*int32)(unsafe.Pointer(_pSorter + 4))) {
		goto _15
	}

	_nNew = *(*int32)(unsafe.Pointer(_pSorter + 4))
_15:
	if _nNew >= _nMin {
		goto _16
	}

	_nNew = _nMin
_16:
	_aNew = _230sqlite3Realloc(tls, *(*uintptr)(unsafe.Pointer((_pSorter + 56) + 8)), uint64(_nNew))
	if _aNew != 0 {
		goto _17
	}

	return int32(7)

_17:
	*(*uintptr)(unsafe.Pointer(_pSorter + 56)) = _aNew + uintptr(_iListOff)
	*(*uintptr)(unsafe.Pointer((_pSorter + 56) + 8)) = _aNew
	*(*int32)(unsafe.Pointer(_pSorter + 84)) = _nNew
_12:
	_pNew = (*(*uintptr)(unsafe.Pointer((_pSorter + 56) + 8))) + uintptr(*(*int32)(unsafe.Pointer(_pSorter + 80)))
	{
		p := &(*(*int32)(unsafe.Pointer(_pSorter + 80)))
		*p = int32(int32(*p) + ((_nReq + int32(7)) & int32(-8)))
	}
	if (*(*uintptr)(unsafe.Pointer(_pSorter + 56))) == 0 {
		goto _18
	}

	*(*int32)(unsafe.Pointer(_pNew + 8)) = int32(int64(*(*uintptr)(unsafe.Pointer(_pSorter + 56)) - (*(*uintptr)(unsafe.Pointer((_pSorter + 56) + 8)))))
_18:
	goto _11

_10:
	_pNew = _198sqlite3Malloc(tls, uint64(_nReq))
	if _pNew != 0 {
		goto _19
	}

	return int32(7)

_19:
	*(*uintptr)(unsafe.Pointer(_pNew + 8)) = *(*uintptr)(unsafe.Pointer(_pSorter + 56))
_11:
	crt.Xmemcpy(tls, _pNew+16*uintptr(1), *(*uintptr)(unsafe.Pointer(_pVal + 16)), uint64(*(*int32)(unsafe.Pointer(_pVal + 12))))
	*(*int32)(unsafe.Pointer(_pNew)) = *(*int32)(unsafe.Pointer(_pVal + 12))
	*(*uintptr)(unsafe.Pointer(_pSorter + 56)) = _pNew
	return _rc
}

// _707sqlite3VdbeIdxRowid is defined at sqlite3.c:76581:20
func _707sqlite3VdbeIdxRowid(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pCur uintptr /* *TBtCursor = SBtCursor */, _rowid uintptr /* *Ti64 = Tsqlite_int64 = int64 */) (r int32) {
	esc := crt.MustMalloc(152)
	var (
		_nCellKey  int64
		_rc        int32
		_szHdr     = esc      // *Tu32 = uint32
		_typeRowid = esc + 16 // *Tu32 = uint32
		_lenRowid  uint32
		_m         = esc + 32 // *TMem = Ssqlite3_value
		_v         = esc + 96 // *TMem = Ssqlite3_value
	)
	defer crt.Free(esc)
	_nCellKey = int64(0)

	_nCellKey = int64(_663sqlite3BtreePayloadSize(tls, _pCur))

	_724sqlite3VdbeMemInit(tls, _m, _db, uint16(0))
	_rc = _666sqlite3VdbeMemFromBtree(tls, _pCur, uint32(0), uint32(_nCellKey), _m)
	if _rc == 0 {
		goto _1
	}

	return _rc

_1:
	if int32(*(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_m + 16))))) < int32(0x80) {
		*(*uint32)(unsafe.Pointer(_szHdr)) = uint32(*(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_m + 16)))))
	} else {
		_665sqlite3GetVarint32(tls, *(*uintptr)(unsafe.Pointer(_m + 16)), _szHdr)
	}
	if (*(*uint32)(unsafe.Pointer(_szHdr))) >= uint32(3) && int32(*(*uint32)(unsafe.Pointer(_szHdr))) <= (*(*int32)(unsafe.Pointer(_m + 12))) {
		goto _2
	}

	goto _idx_rowid_corruption

_2:
	if int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_m + 16))) + uintptr((*(*uint32)(unsafe.Pointer(_szHdr)))-uint32(1))))) < int32(0x80) {
		*(*uint32)(unsafe.Pointer(_typeRowid)) = uint32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_m + 16))) + uintptr((*(*uint32)(unsafe.Pointer(_szHdr)))-uint32(1)))))
	} else {
		_665sqlite3GetVarint32(tls, (*(*uintptr)(unsafe.Pointer(_m + 16)))+uintptr((*(*uint32)(unsafe.Pointer(_szHdr)))-uint32(1)), _typeRowid)
	}
	if (*(*uint32)(unsafe.Pointer(_typeRowid))) >= uint32(1) && (*(*uint32)(unsafe.Pointer(_typeRowid))) <= uint32(9) && (*(*uint32)(unsafe.Pointer(_typeRowid))) != uint32(7) {
		goto _3
	}

	goto _idx_rowid_corruption

_3:
	_lenRowid = uint32(*(*uint8)(unsafe.Pointer(_958sqlite3SmallTypeSizes + uintptr(*(*uint32)(unsafe.Pointer(_typeRowid))))))
	if uint32(*(*int32)(unsafe.Pointer(_m + 12))) >= ((*(*uint32)(unsafe.Pointer(_szHdr))) + _lenRowid) {
		goto _4
	}

	goto _idx_rowid_corruption

_4:
	_669sqlite3VdbeSerialGet(tls, (*(*uintptr)(unsafe.Pointer(_m + 16)))+uintptr(uint32(*(*int32)(unsafe.Pointer(_m + 12)))-_lenRowid), *(*uint32)(unsafe.Pointer(_typeRowid)), _v)
	*(*int64)(unsafe.Pointer(_rowid)) = *(*int64)(unsafe.Pointer(_v))
	_397sqlite3VdbeMemRelease(tls, _m)
	return int32(0)

	goto _idx_rowid_corruption
_idx_rowid_corruption:
	_397sqlite3VdbeMemRelease(tls, _m)
	return _556sqlite3CorruptError(tls, int32(76644))
}

// _708sqlite3VdbeIdxKeyCompare is defined at sqlite3.c:76658:20
func _708sqlite3VdbeIdxKeyCompare(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pC uintptr /* *TVdbeCursor = SVdbeCursor */, _pUnpacked uintptr /* *TUnpackedRecord = SUnpackedRecord */, _res uintptr /* *int32 */) (r int32) {
	esc := crt.MustMalloc(56)
	var (
		_nCellKey int64
		_rc       int32
		_pCur     uintptr // *TBtCursor = SBtCursor
		_m        = esc   // *TMem = Ssqlite3_value
	)
	defer crt.Free(esc)
	_nCellKey = int64(0)

	_pCur = *(*uintptr)(unsafe.Pointer(_pC + 48))

	_nCellKey = int64(_663sqlite3BtreePayloadSize(tls, _pCur))
	if _nCellKey > int64(0) && _nCellKey <= int64(0x7fffffff) {
		goto _1
	}

	*(*int32)(unsafe.Pointer(_res)) = int32(0)
	return _556sqlite3CorruptError(tls, int32(76677))

_1:
	_724sqlite3VdbeMemInit(tls, _m, _db, uint16(0))
	_rc = _666sqlite3VdbeMemFromBtree(tls, _pCur, uint32(0), uint32(_nCellKey), _m)
	if _rc == 0 {
		goto _2
	}

	return _rc

_2:
	*(*int32)(unsafe.Pointer(_res)) = _986sqlite3VdbeRecordCompare(tls, *(*int32)(unsafe.Pointer(_m + 12)), *(*uintptr)(unsafe.Pointer(_m + 16)), _pUnpacked)
	_397sqlite3VdbeMemRelease(tls, _m)
	return int32(0)
}

// _709sqlite3BtreeDropTable is defined at sqlite3.c:68545:20
func _709sqlite3BtreeDropTable(tls crt.TLS, _p uintptr /* *TBtree = SBtree */, _iTable int32, _piMoved uintptr /* *int32 */) (r int32) {
	var _rc int32

	_139sqlite3BtreeEnter(tls, _p)
	_rc = _996btreeDropTable(tls, _p, uint32(_iTable), _piMoved)
	_169sqlite3BtreeLeave(tls, _p)
	return _rc
}

// _710sqlite3RootPageMoved is defined at sqlite3.c:103005:21
func _710sqlite3RootPageMoved(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _iDb int32, _iFrom int32, _iTo int32) {
	var (
		_pElem uintptr // *THashElem = SHashElem
		_pHash uintptr // *THash = SHash
		_pDb   uintptr // *TDb = SDb
		_pTab  uintptr // *TTable = STable
		_pIdx  uintptr // *TIndex = SIndex
	)

	_pDb = (*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)
	_pHash = (*(*uintptr)(unsafe.Pointer(_pDb + 24))) + 8
	_pElem = *(*uintptr)(unsafe.Pointer(_pHash + 8))
_1:
	if _pElem == 0 {
		goto _3
	}

	_pTab = *(*uintptr)(unsafe.Pointer(_pElem + 16))
	if (*(*int32)(unsafe.Pointer(_pTab + 56))) != _iFrom {
		goto _4
	}

	*(*int32)(unsafe.Pointer(_pTab + 56)) = _iTo
_4:
	_pElem = *(*uintptr)(unsafe.Pointer(_pElem))
	goto _1

_3:
	_pHash = (*(*uintptr)(unsafe.Pointer(_pDb + 24))) + 32
	_pElem = *(*uintptr)(unsafe.Pointer(_pHash + 8))
_5:
	if _pElem == 0 {
		goto _7
	}

	_pIdx = *(*uintptr)(unsafe.Pointer(_pElem + 16))
	if (*(*int32)(unsafe.Pointer(_pIdx + 88))) != _iFrom {
		goto _8
	}

	*(*int32)(unsafe.Pointer(_pIdx + 88)) = _iTo
_8:
	_pElem = *(*uintptr)(unsafe.Pointer(_pElem))
	goto _5

_7:
}

// _711sqlite3BtreeClearTable is defined at sqlite3.c:68415:20
func _711sqlite3BtreeClearTable(tls crt.TLS, _p uintptr /* *TBtree = SBtree */, _iTable int32, _pnChange uintptr /* *int32 */) (r int32) {
	var (
		_rc  int32
		_pBt uintptr // *TBtShared = SBtShared
	)
	_pBt = *(*uintptr)(unsafe.Pointer(_p + 8))
	_139sqlite3BtreeEnter(tls, _p)

	_rc = _360saveAllCursors(tls, _pBt, uint32(_iTable), null)
	if int32(0) != _rc {
		goto _1
	}

	_977invalidateIncrblobCursors(tls, _p, uint32(_iTable), int64(0), int32(1))
	_rc = _997clearDatabasePage(tls, _pBt, uint32(_iTable), int32(0), _pnChange)
_1:
	_169sqlite3BtreeLeave(tls, _p)
	return _rc
}

// _712sqlite3VdbeSorterReset is defined at sqlite3.c:88136:21
func _712sqlite3VdbeSorterReset(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pSorter uintptr /* *TVdbeSorter = SVdbeSorter */) {
	var (
		_i     int32
		_pTask uintptr // *TSortSubtask = SSortSubtask
	)
	_990vdbeSorterJoinAll(tls, _pSorter, int32(0))

	if (*(*uintptr)(unsafe.Pointer(_pSorter + 16))) == 0 {
		goto _1
	}

	_998vdbePmaReaderClear(tls, *(*uintptr)(unsafe.Pointer(_pSorter + 16)))
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_pSorter + 16)))
	*(*uintptr)(unsafe.Pointer(_pSorter + 16)) = null
_1:
	_999vdbeMergeEngineFree(tls, *(*uintptr)(unsafe.Pointer(_pSorter + 24)))
	*(*uintptr)(unsafe.Pointer(_pSorter + 24)) = null
	_i = int32(0)
_2:
	if _i >= int32(*(*uint8)(unsafe.Pointer(_pSorter + 91))) {
		goto _4
	}

	_pTask = (_pSorter + 96) + 104*uintptr(_i)
	_1000vdbeSortSubtaskCleanup(tls, _db, _pTask)
	*(*uintptr)(unsafe.Pointer(_pTask + 16)) = _pSorter
	_i++
	goto _2

_4:
	if (*(*uintptr)(unsafe.Pointer((_pSorter + 56) + 8))) != 0 {
		goto _5
	}

	_994vdbeSorterRecordFree(tls, null, *(*uintptr)(unsafe.Pointer(_pSorter + 56)))
_5:
	*(*uintptr)(unsafe.Pointer(_pSorter + 56)) = null
	*(*int32)(unsafe.Pointer((_pSorter + 56) + 16)) = int32(0)
	*(*uint8)(unsafe.Pointer(_pSorter + 88)) = uint8(0)
	*(*int32)(unsafe.Pointer(_pSorter + 80)) = int32(0)
	*(*int32)(unsafe.Pointer(_pSorter + 8)) = int32(0)
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_pSorter + 48)))
	*(*uintptr)(unsafe.Pointer(_pSorter + 48)) = null
}

// _713sqlite3BtreeClearTableOfCursor is defined at sqlite3.c:68439:20
func _713sqlite3BtreeClearTableOfCursor(tls crt.TLS, _pCur uintptr /* *TBtCursor = SBtCursor */) (r int32) {
	return _711sqlite3BtreeClearTable(tls, *(*uintptr)(unsafe.Pointer(_pCur + 8)), int32(*(*uint32)(unsafe.Pointer(_pCur + 80))), null)
}

// _714sqlite3InitCallback is defined at sqlite3.c:116839:20
func _714sqlite3InitCallback(tls crt.TLS, _pInit uintptr /* *void */, _argc int32, _argv uintptr /* **int8 */, _NotUsed uintptr /* **int8 */) (r int32) {
	esc := crt.MustMalloc(8)
	var (
		_pData     uintptr // *TInitData = struct{Xdb *Ssqlite...sg **int8;XiDb int32;Xrc int32;}
		_db        uintptr // *Tsqlite3 = Ssqlite3
		_iDb       int32
		_rc        int32
		_saved_iDb uint8
		_pStmt     = esc   // **Tsqlite3_stmt = Ssqlite3_stmt
		_pIndex    uintptr // *TIndex = SIndex
	)
	defer crt.Free(esc)
	_pData = _pInit
	_db = *(*uintptr)(unsafe.Pointer(_pData))
	_iDb = *(*int32)(unsafe.Pointer(_pData + 16))

	{
		p := &(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)) + 24))) + 114)))
		*p = uint16(int32(*p) & int32(-5))
	}
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _1
	}

	_1001corruptSchema(tls, _pData, *(*uintptr)(unsafe.Pointer(_argv)), null)
	return int32(1)

_1:
	if _argv != 0 {
		goto _2
	}

	return int32(0)

_2:
	if (*(*uintptr)(unsafe.Pointer(_argv + 8))) != 0 {
		goto _3
	}

	_1001corruptSchema(tls, _pData, *(*uintptr)(unsafe.Pointer(_argv)), null)
	goto _4

_3:
	if Xsqlite3_strnicmp(tls, *(*uintptr)(unsafe.Pointer(_argv + 16)), ts+20205 /* "create " */, int32(7)) != int32(0) {
		goto _5
	}

	_saved_iDb = *(*uint8)(unsafe.Pointer((_db + 176) + 4))

	*(*uint8)(unsafe.Pointer((_db + 176) + 4)) = uint8(_iDb)
	*(*int32)(unsafe.Pointer(_db + 176)) = _1002sqlite3Atoi(tls, *(*uintptr)(unsafe.Pointer(_argv + 8)))
	*(*uint8)(unsafe.Pointer((_db + 176) + 6)) = uint8(0)
	Xsqlite3_prepare(tls, _db, *(*uintptr)(unsafe.Pointer(_argv + 16)), int32(-1), _pStmt, null)
	_rc = *(*int32)(unsafe.Pointer(_db + 80))

	*(*uint8)(unsafe.Pointer((_db + 176) + 4)) = _saved_iDb

	if int32(0) == _rc {
		goto _7
	}

	if (*(*uint8)(unsafe.Pointer((_db + 176) + 6))) == 0 {
		goto _8
	}

	goto _9

_8:
	*(*int32)(unsafe.Pointer(_pData + 20)) = _rc
	if _rc != int32(7) {
		goto _10
	}

	_178sqlite3OomFault(tls, _db)
	goto _11

_10:
	if _rc == int32(9) || (_rc&int32(0xff)) == int32(6) {
		goto _12
	}

	_1001corruptSchema(tls, _pData, *(*uintptr)(unsafe.Pointer(_argv)), Xsqlite3_errmsg(tls, _db))
_12:
_11:
_9:
_7:
	Xsqlite3_finalize(tls, *(*uintptr)(unsafe.Pointer(_pStmt)))
	goto _6

_5:
	if (*(*uintptr)(unsafe.Pointer(_argv))) != 0 && ((*(*uintptr)(unsafe.Pointer(_argv + 16))) == 0 || int32(*(*int8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_argv + 16))))) == int32(0)) {
		goto _13
	}

	_1001corruptSchema(tls, _pData, *(*uintptr)(unsafe.Pointer(_argv)), null)
	goto _14

_13:
	_pIndex = _1003sqlite3FindIndex(tls, _db, *(*uintptr)(unsafe.Pointer(_argv)), *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb))))
	if _pIndex != 0 {
		goto _15
	}

	goto _16

_15:
	if _1004sqlite3GetInt32(tls, *(*uintptr)(unsafe.Pointer(_argv + 8)), _pIndex+88) != int32(0) {
		goto _17
	}

	_1001corruptSchema(tls, _pData, *(*uintptr)(unsafe.Pointer(_argv)), ts+20213 /* "invalid rootpage" */)
_17:
_16:
_14:
_6:
_4:
	return int32(0)
}

// _715sqlite3AnalysisLoad is defined at sqlite3.c:99776:20
func _715sqlite3AnalysisLoad(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _iDb int32) (r int32) {
	esc := crt.MustMalloc(16)
	var (
		_sInfo   = esc   // *TanalysisInfo = SanalysisInfo
		_i       uintptr // *THashElem = SHashElem
		_zSql    uintptr // *int8
		_rc      int32
		_pSchema uintptr // *TSchema = SSchema
		_pTab    uintptr // *TTable = STable
		_pIdx    uintptr // *TIndex = SIndex
		_1pIdx   uintptr // *TIndex = SIndex
	)
	defer crt.Free(esc)
	_rc = int32(0)
	_pSchema = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)) + 24))

	_i = *(*uintptr)(unsafe.Pointer((_pSchema + 8) + 8))
_1:
	if _i == 0 {
		goto _3
	}

	_pTab = *(*uintptr)(unsafe.Pointer(_i + 16))
	{
		p := &(*(*uint32)(unsafe.Pointer(_pTab + 64)))
		*p = uint32(uint32(*p) & uint32(4294967279))
	}
	_i = *(*uintptr)(unsafe.Pointer(_i))
	goto _1

_3:
	_i = *(*uintptr)(unsafe.Pointer((_pSchema + 32) + 8))
_4:
	if _i == 0 {
		goto _6
	}

	_pIdx = *(*uintptr)(unsafe.Pointer(_i + 16))
	set146b(&(*(*uint8)(unsafe.Pointer(_pIdx + 99))), uint32(0))
	_i = *(*uintptr)(unsafe.Pointer(_i))
	goto _4

_6:
	*(*uintptr)(unsafe.Pointer(_sInfo)) = _db
	*(*uintptr)(unsafe.Pointer(_sInfo + 8)) = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)))
	if _221sqlite3FindTable(tls, _db, ts+3213 /* "sqlite_stat1" */, *(*uintptr)(unsafe.Pointer(_sInfo + 8))) == 0 {
		goto _7
	}

	_zSql = _226sqlite3MPrintf(tls, _db, ts+20230 /* "SELECT tbl,idx,stat FROM %Q.sqli..." */, *(*uintptr)(unsafe.Pointer(_sInfo + 8)))
	if _zSql != 0 {
		goto _8
	}

	_rc = int32(7)
	goto _9

_8:
	_rc = Xsqlite3_exec(tls, _db, _zSql, fp9(_1005analysisLoader), _sInfo, null)
	_181sqlite3DbFree(tls, _db, _zSql)
_9:
_7:
	_i = *(*uintptr)(unsafe.Pointer((_pSchema + 32) + 8))
_10:
	if _i == 0 {
		goto _12
	}

	_1pIdx = *(*uintptr)(unsafe.Pointer(_i + 16))
	if (uint32((*(*uint8)(unsafe.Pointer(_1pIdx + 99)))>>7) << 31 >> 31) != 0 {
		goto _13
	}

	_1006sqlite3DefaultRowEst(tls, _1pIdx)
_13:
	_i = *(*uintptr)(unsafe.Pointer(_i))
	goto _10

_12:
	if _rc != int32(7) {
		goto _14
	}

	_178sqlite3OomFault(tls, _db)
_14:
	return _rc
}

// _716sqlite3UnlinkAndDeleteTable is defined at sqlite3.c:101356:21
func _716sqlite3UnlinkAndDeleteTable(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _iDb int32, _zTabName uintptr /* *int8 */) {
	var (
		_p   uintptr // *TTable = STable
		_pDb uintptr // *TDb = SDb
	)

	_pDb = (*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)
	_p = _841sqlite3HashInsert(tls, (*(*uintptr)(unsafe.Pointer(_pDb + 24)))+8, _zTabName, null)
	_430sqlite3DeleteTable(tls, _db, _p)
	{
		p := &(*(*uint32)(unsafe.Pointer(_db + 44)))
		*p = uint32(uint32(*p) | uint32(0x1))
	}
}

// _717sqlite3UnlinkAndDeleteIndex is defined at sqlite3.c:101158:21
func _717sqlite3UnlinkAndDeleteIndex(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _iDb int32, _zIdxName uintptr /* *int8 */) {
	var (
		_pIndex uintptr // *TIndex = SIndex
		_pHash  uintptr // *THash = SHash
		_p      uintptr // *TIndex = SIndex
	)

	_pHash = (*(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)) + 24))) + 32
	_pIndex = _841sqlite3HashInsert(tls, _pHash, _zIdxName, null)
	if _pIndex == 0 {
		goto _1
	}

	if (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIndex + 24))) + 16))) != _pIndex {
		goto _2
	}

	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIndex + 24))) + 16)) = *(*uintptr)(unsafe.Pointer(_pIndex + 40))
	goto _3

_2:
	_p = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIndex + 24))) + 16))
_4:
	if _p == 0 || (*(*uintptr)(unsafe.Pointer(_p + 40))) == _pIndex {
		goto _5
	}

	_p = *(*uintptr)(unsafe.Pointer(_p + 40))
	goto _4

_5:
	if _p == 0 || (*(*uintptr)(unsafe.Pointer(_p + 40))) != _pIndex {
		goto _6
	}

	*(*uintptr)(unsafe.Pointer(_p + 40)) = *(*uintptr)(unsafe.Pointer(_pIndex + 40))
_6:
_3:
	_1007freeIndex(tls, _db, _pIndex)
_1:
	{
		p := &(*(*uint32)(unsafe.Pointer(_db + 44)))
		*p = uint32(uint32(*p) | uint32(0x1))
	}
}

// _718sqlite3UnlinkAndDeleteTrigger is defined at sqlite3.c:124527:21
func _718sqlite3UnlinkAndDeleteTrigger(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _iDb int32, _zName uintptr /* *int8 */) {
	var (
		_pTrigger uintptr // *TTrigger = STrigger
		_pHash    uintptr // *THash = SHash
		_pTab     uintptr // *TTable = STable
		_pp       uintptr // **TTrigger = STrigger
	)

	_pHash = (*(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)) + 24))) + 56
	_pTrigger = _841sqlite3HashInsert(tls, _pHash, _zName, null)
	if _pTrigger == 0 {
		goto _1
	}

	if (*(*uintptr)(unsafe.Pointer(_pTrigger + 40))) != (*(*uintptr)(unsafe.Pointer(_pTrigger + 48))) {
		goto _2
	}

	_pTab = _1008tableOfTrigger(tls, _pTrigger)
	_pp = _pTab + 104
_3:
	if (*(*uintptr)(unsafe.Pointer(_pp))) == _pTrigger {
		goto _5
	}

	_pp = *(*uintptr)(unsafe.Pointer(_pp)) + 64
	goto _3

_5:
	*(*uintptr)(unsafe.Pointer(_pp)) = *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pp)) + 64))
_2:
	_429sqlite3DeleteTrigger(tls, _db, _pTrigger)
	{
		p := &(*(*uint32)(unsafe.Pointer(_db + 44)))
		*p = uint32(uint32(*p) | uint32(0x1))
	}
_1:
}

// _719sqlite3BtreeIntegrityCheck is defined at sqlite3.c:69217:21
func _719sqlite3BtreeIntegrityCheck(tls crt.TLS, _p uintptr /* *TBtree = SBtree */, _aRoot uintptr /* *int32 */, _nRoot int32, _mxErr int32, _pnErr uintptr /* *int32 */) (r uintptr /* *int8 */) {
	esc := crt.MustMalloc(216)
	var (
		_i            uint32
		_sCheck       = esc   // *TIntegrityCk = SIntegrityCk
		_pBt          uintptr // *TBtShared = SBtShared
		_savedDbFlags int32
		_zErr         = esc + 96  // *[100]int8
		_notUsed      = esc + 208 // *Ti64 = Tsqlite_int64 = int64
	)
	defer crt.Free(esc)
	_pBt = *(*uintptr)(unsafe.Pointer(_p + 8))
	_savedDbFlags = int32(*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pBt + 8))) + 48)))
	_139sqlite3BtreeEnter(tls, _p)

	*(*uintptr)(unsafe.Pointer(_sCheck)) = _pBt
	*(*uintptr)(unsafe.Pointer(_sCheck + 8)) = *(*uintptr)(unsafe.Pointer(_pBt))
	*(*uint32)(unsafe.Pointer(_sCheck + 24)) = _332btreePagecount(tls, *(*uintptr)(unsafe.Pointer(_sCheck)))
	*(*int32)(unsafe.Pointer(_sCheck + 28)) = _mxErr
	*(*int32)(unsafe.Pointer(_sCheck + 32)) = int32(0)
	*(*int32)(unsafe.Pointer(_sCheck + 36)) = int32(0)
	*(*uintptr)(unsafe.Pointer(_sCheck + 40)) = null
	*(*int32)(unsafe.Pointer(_sCheck + 48)) = int32(0)
	*(*int32)(unsafe.Pointer(_sCheck + 52)) = int32(0)
	*(*uintptr)(unsafe.Pointer(_sCheck + 16)) = null
	*(*uintptr)(unsafe.Pointer(_sCheck + 88)) = null
	_130sqlite3StrAccumInit(tls, _sCheck+56, null, _zErr, int32(100), int32(1000000000))
	*(*uint8)(unsafe.Pointer((_sCheck + 56) + 29)) = uint8(0x1)
	if (*(*uint32)(unsafe.Pointer(_sCheck + 24))) != uint32(0) {
		goto _1
	}

	goto _integrity_ck_cleanup

_1:
	*(*uintptr)(unsafe.Pointer(_sCheck + 16)) = _135sqlite3MallocZero(tls, uint64(((*(*uint32)(unsafe.Pointer(_sCheck + 24)))/uint32(8))+uint32(1)))
	if (*(*uintptr)(unsafe.Pointer(_sCheck + 16))) != 0 {
		goto _2
	}

	*(*int32)(unsafe.Pointer(_sCheck + 36)) = int32(1)
	goto _integrity_ck_cleanup

_2:
	*(*uintptr)(unsafe.Pointer(_sCheck + 88)) = _755sqlite3PageMalloc(tls, int32(*(*uint32)(unsafe.Pointer(_pBt + 48))))
	if (*(*uintptr)(unsafe.Pointer(_sCheck + 88))) != 0 {
		goto _3
	}

	*(*int32)(unsafe.Pointer(_sCheck + 36)) = int32(1)
	goto _integrity_ck_cleanup

_3:
	_i = (uint32(_149sqlite3PendingByte) / (*(*uint32)(unsafe.Pointer(_pBt + 48)))) + uint32(1)
	if _i > (*(*uint32)(unsafe.Pointer(_sCheck + 24))) {
		goto _4
	}

	_1009setPageReferenced(tls, _sCheck, _i)
_4:
	*(*uintptr)(unsafe.Pointer(_sCheck + 40)) = ts + 20271 /* "Main freelist: " */
	_1010checkList(tls, _sCheck, int32(1), int32(_328sqlite3Get4byte(tls, (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pBt + 24))) + 80)))+32)), int32(_328sqlite3Get4byte(tls, (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pBt + 24))) + 80)))+36)))
	*(*uintptr)(unsafe.Pointer(_sCheck + 40)) = null
	{
		p := &(*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pBt + 8))) + 48)))
		*p = uint32(uint32(*p) & uint32(4292870143))
	}
	_i = uint32(0)
_5:
	if int32(_i) >= _nRoot || (*(*int32)(unsafe.Pointer(_sCheck + 28))) == 0 {
		goto _7
	}

	if (*(*int32)(unsafe.Pointer(_aRoot + 4*uintptr(_i)))) != int32(0) {
		goto _8
	}

	goto _6

_8:
	if (*(*uint8)(unsafe.Pointer(_pBt + 33))) == 0 || (*(*int32)(unsafe.Pointer(_aRoot + 4*uintptr(_i)))) <= int32(1) {
		goto _9
	}

	_1011checkPtrmap(tls, _sCheck, uint32(*(*int32)(unsafe.Pointer(_aRoot + 4*uintptr(_i)))), uint8(1), uint32(0))
_9:
	_1012checkTreePage(tls, _sCheck, *(*int32)(unsafe.Pointer(_aRoot + 4*uintptr(_i))), _notUsed, int64(9223372036854775807))

_6:
	_i++
	goto _5

_7:
	*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pBt + 8))) + 48)) = uint32(_savedDbFlags)
	_i = uint32(1)
_10:
	if _i > (*(*uint32)(unsafe.Pointer(_sCheck + 24))) || (*(*int32)(unsafe.Pointer(_sCheck + 28))) == 0 {
		goto _12
	}

	if _1013getPageReferenced(tls, _sCheck, _i) != int32(0) || _595ptrmapPageno(tls, _pBt, _i) == _i && (*(*uint8)(unsafe.Pointer(_pBt + 33))) != 0 {
		goto _13
	}

	_1014checkAppendMsg(tls, _sCheck, ts+20287 /* "Page %d is never used" */, _i)
_13:
	if _1013getPageReferenced(tls, _sCheck, _i) == int32(0) || (_595ptrmapPageno(tls, _pBt, _i) != _i || (*(*uint8)(unsafe.Pointer(_pBt + 33))) == 0) {
		goto _14
	}

	_1014checkAppendMsg(tls, _sCheck, ts+20309 /* "Pointer map page %d is reference..." */, _i)
_14:
	_i++
	goto _10

_12:
	goto _integrity_ck_cleanup
_integrity_ck_cleanup:
	_753sqlite3PageFree(tls, *(*uintptr)(unsafe.Pointer(_sCheck + 88)))
	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_sCheck + 16)))
	if (*(*int32)(unsafe.Pointer(_sCheck + 36))) == 0 {
		goto _15
	}

	_868sqlite3StrAccumReset(tls, _sCheck+56)
	(*(*int32)(unsafe.Pointer(_sCheck + 32)))++
_15:
	*(*int32)(unsafe.Pointer(_pnErr)) = *(*int32)(unsafe.Pointer(_sCheck + 32))
	if (*(*int32)(unsafe.Pointer(_sCheck + 32))) != int32(0) {
		goto _16
	}

	_868sqlite3StrAccumReset(tls, _sCheck+56)
_16:
	_169sqlite3BtreeLeave(tls, _p)
	return _299sqlite3StrAccumFinish(tls, _sCheck+56)
}

// _720sqlite3VdbeMemSetRowSet is defined at sqlite3.c:71194:21
func _720sqlite3VdbeMemSetRowSet(tls crt.TLS, _pMem uintptr /* *TMem = Ssqlite3_value */) {
	var _db uintptr // *Tsqlite3 = Ssqlite3

	_db = *(*uintptr)(unsafe.Pointer(_pMem + 40))

	_397sqlite3VdbeMemRelease(tls, _pMem)
	*(*uintptr)(unsafe.Pointer(_pMem + 24)) = _373sqlite3DbMallocRawNN(tls, _db, uint64(64))
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _1
	}

	*(*uint16)(unsafe.Pointer(_pMem + 8)) = uint16(0x1)
	*(*int32)(unsafe.Pointer(_pMem + 32)) = int32(0)
	goto _2

_1:
	*(*int32)(unsafe.Pointer(_pMem + 32)) = _744sqlite3DbMallocSize(tls, _db, *(*uintptr)(unsafe.Pointer(_pMem + 24)))
	*(*uintptr)(unsafe.Pointer(_pMem)) = _1015sqlite3RowSetInit(tls, _db, *(*uintptr)(unsafe.Pointer(_pMem + 24)), uint32(*(*int32)(unsafe.Pointer(_pMem + 32))))

	*(*uint16)(unsafe.Pointer(_pMem + 8)) = uint16(0x20)
_2:
}

// _721sqlite3RowSetInsert is defined at sqlite3.c:47032:21
func _721sqlite3RowSetInsert(tls crt.TLS, _p uintptr /* *TRowSet = SRowSet */, _rowid int64) {
	var (
		_pEntry uintptr // *SRowSetEntry
		_pLast  uintptr // *SRowSetEntry
	)

	_pEntry = _1016rowSetEntryAlloc(tls, _p)
	if _pEntry != 0 {
		goto _1
	}

	return

_1:
	*(*int64)(unsafe.Pointer(_pEntry)) = _rowid
	*(*uintptr)(unsafe.Pointer(_pEntry + 8)) = null
	_pLast = *(*uintptr)(unsafe.Pointer(_p + 24))
	if _pLast == 0 {
		goto _2
	}

	if _rowid > (*(*int64)(unsafe.Pointer(_pLast))) {
		goto _4
	}

	{
		p := &(*(*uint16)(unsafe.Pointer(_p + 50)))
		*p = uint16(int32(*p) & int32(-2))
	}
_4:
	*(*uintptr)(unsafe.Pointer(_pLast + 8)) = _pEntry
	goto _3

_2:
	*(*uintptr)(unsafe.Pointer(_p + 16)) = _pEntry
_3:
	*(*uintptr)(unsafe.Pointer(_p + 24)) = _pEntry
}

// _722sqlite3RowSetNext is defined at sqlite3.c:47230:20
func _722sqlite3RowSetNext(tls crt.TLS, _p uintptr /* *TRowSet = SRowSet */, _pRowid uintptr /* *Ti64 = Tsqlite_int64 = int64 */) (r int32) {
	if (int32(*(*uint16)(unsafe.Pointer(_p + 50))) & int32(0x2)) != int32(0) {
		goto _1
	}

	if (int32(*(*uint16)(unsafe.Pointer(_p + 50))) & int32(0x1)) != int32(0) {
		goto _2
	}

	*(*uintptr)(unsafe.Pointer(_p + 16)) = _1017rowSetEntrySort(tls, *(*uintptr)(unsafe.Pointer(_p + 16)))
_2:
	{
		p := &(*(*uint16)(unsafe.Pointer(_p + 50)))
		*p = uint16(int32(*p) | int32(3))
	}
_1:
	if (*(*uintptr)(unsafe.Pointer(_p + 16))) == 0 {
		goto _3
	}

	*(*int64)(unsafe.Pointer(_pRowid)) = *(*int64)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_p + 16))))
	*(*uintptr)(unsafe.Pointer(_p + 16)) = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 16))) + 8))
	if (*(*uintptr)(unsafe.Pointer(_p + 16))) != 0 {
		goto _5
	}

	_866sqlite3RowSetClear(tls, _p)
_5:
	return int32(1)

	goto _4

_3:
	return int32(0)

_4:
	return r
}

// _723sqlite3RowSetTest is defined at sqlite3.c:47264:20
func _723sqlite3RowSetTest(tls crt.TLS, _pRowSet uintptr /* *TRowSet = SRowSet */, _iBatch int32, _iRowid int64) (r int32) {
	esc := crt.MustMalloc(24)
	var (
		_p          uintptr    // *SRowSetEntry
		_pTree      uintptr    // *SRowSetEntry
		_ppPrevTree uintptr    // **SRowSetEntry
		_pAux       = esc      // **SRowSetEntry
		_pTail      = esc + 16 // **SRowSetEntry
	)
	defer crt.Free(esc)

	if _iBatch == (*(*int32)(unsafe.Pointer(_pRowSet + 52))) {
		goto _1
	}

	_p = *(*uintptr)(unsafe.Pointer(_pRowSet + 16))
	if _p == 0 {
		goto _2
	}

	_ppPrevTree = _pRowSet + 40
	if (int32(*(*uint16)(unsafe.Pointer(_pRowSet + 50))) & int32(0x1)) != int32(0) {
		goto _3
	}

	_p = _1017rowSetEntrySort(tls, _p)
_3:
	_pTree = *(*uintptr)(unsafe.Pointer(_pRowSet + 40))
_4:
	if _pTree == 0 {
		goto _6
	}

	_ppPrevTree = _pTree + 8
	if (*(*uintptr)(unsafe.Pointer(_pTree + 16))) != 0 {
		goto _7
	}

	*(*uintptr)(unsafe.Pointer(_pTree + 16)) = _1018rowSetListToTree(tls, _p)
	goto _6

	goto _8

_7:
	_1019rowSetTreeToList(tls, *(*uintptr)(unsafe.Pointer(_pTree + 16)), _pAux, _pTail)
	*(*uintptr)(unsafe.Pointer(_pTree + 16)) = null
	_p = _1020rowSetEntryMerge(tls, *(*uintptr)(unsafe.Pointer(_pAux)), _p)
_8:
	_pTree = *(*uintptr)(unsafe.Pointer(_pTree + 8))
	goto _4

_6:
	if _pTree != 0 {
		goto _9
	}

	*(*uintptr)(unsafe.Pointer(_ppPrevTree)) = set4(&_pTree, _1016rowSetEntryAlloc(tls, _pRowSet))
	if _pTree == 0 {
		goto _10
	}

	*(*int64)(unsafe.Pointer(_pTree)) = int64(0)
	*(*uintptr)(unsafe.Pointer(_pTree + 8)) = null
	*(*uintptr)(unsafe.Pointer(_pTree + 16)) = _1018rowSetListToTree(tls, _p)
_10:
_9:
	*(*uintptr)(unsafe.Pointer(_pRowSet + 16)) = null
	*(*uintptr)(unsafe.Pointer(_pRowSet + 24)) = null
	{
		p := &(*(*uint16)(unsafe.Pointer(_pRowSet + 50)))
		*p = uint16(int32(*p) | int32(0x1))
	}
_2:
	*(*int32)(unsafe.Pointer(_pRowSet + 52)) = _iBatch
_1:
	_pTree = *(*uintptr)(unsafe.Pointer(_pRowSet + 40))
_11:
	if _pTree == 0 {
		goto _13
	}

	_p = *(*uintptr)(unsafe.Pointer(_pTree + 16))
_14:
	if _p == 0 {
		goto _15
	}

	if (*(*int64)(unsafe.Pointer(_p))) >= int64(_iRowid) {
		goto _16
	}

	_p = *(*uintptr)(unsafe.Pointer(_p + 8))
	goto _17

_16:
	if (*(*int64)(unsafe.Pointer(_p))) <= int64(_iRowid) {
		goto _18
	}

	_p = *(*uintptr)(unsafe.Pointer(_p + 16))
	goto _19

_18:
	return int32(1)

_19:
_17:
	goto _14

_15:
	_pTree = *(*uintptr)(unsafe.Pointer(_pTree + 8))
	goto _11

_13:
	return int32(0)
}

// _724sqlite3VdbeMemInit is defined at sqlite3.c:71086:21
func _724sqlite3VdbeMemInit(tls crt.TLS, _pMem uintptr /* *TMem = Ssqlite3_value */, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _flags uint16) {
	*(*uint16)(unsafe.Pointer(_pMem + 8)) = _flags
	*(*uintptr)(unsafe.Pointer(_pMem + 40)) = _db
	*(*int32)(unsafe.Pointer(_pMem + 32)) = int32(0)
}

// _725sqlite3VdbeMemFinalize is defined at sqlite3.c:70770:20
func _725sqlite3VdbeMemFinalize(tls crt.TLS, _pMem uintptr /* *TMem = Ssqlite3_value */, _pFunc uintptr /* *TFuncDef = SFuncDef */) (r int32) {
	esc := crt.MustMalloc(120)
	var (
		_rc  int32
		_ctx = esc      // *Tsqlite3_context = Ssqlite3_context
		_t   = esc + 64 // *TMem = Ssqlite3_value
	)
	defer crt.Free(esc)
	_rc = int32(0)
	if _pFunc == 0 || (*(*uintptr)(unsafe.Pointer(_pFunc + 32))) == 0 {
		goto _1
	}

	crt.Xmemset(tls, _ctx, int32(0), uint64(56))
	crt.Xmemset(tls, _t, int32(0), uint64(56))
	*(*uint16)(unsafe.Pointer(_t + 8)) = uint16(0x1)
	*(*uintptr)(unsafe.Pointer(_t + 40)) = *(*uintptr)(unsafe.Pointer(_pMem + 40))
	*(*uintptr)(unsafe.Pointer(_ctx)) = _t
	*(*uintptr)(unsafe.Pointer(_ctx + 16)) = _pMem
	*(*uintptr)(unsafe.Pointer(_ctx + 8)) = _pFunc
	fn16(*(*uintptr)(unsafe.Pointer(_pFunc + 32)))(tls, _ctx)

	if (*(*int32)(unsafe.Pointer(_pMem + 32))) <= int32(0) {
		goto _2
	}

	_376sqlite3DbFreeNN(tls, *(*uintptr)(unsafe.Pointer(_pMem + 40)), *(*uintptr)(unsafe.Pointer(_pMem + 24)))
_2:
	crt.Xmemcpy(tls, _pMem, _t, uint64(56))
	_rc = *(*int32)(unsafe.Pointer(_ctx + 36))
_1:
	return _rc
}

// _726sqlite3Checkpoint is defined at sqlite3.c:144159:20
func _726sqlite3Checkpoint(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _iDb int32, _eMode int32, _pnLog uintptr /* *int32 */, _pnCkpt uintptr /* *int32 */) (r int32) {
	var (
		_rc    int32
		_i     int32
		_bBusy int32
	)
	_rc = int32(0)
	_bBusy = int32(0)

	_i = int32(0)
_1:
	if _i >= (*(*int32)(unsafe.Pointer(_db + 40))) || _rc != int32(0) {
		goto _3
	}

	if _i != _iDb && _iDb != int32(10) {
		goto _4
	}

	_rc = _1021sqlite3BtreeCheckpoint(tls, *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_i)) + 8)), _eMode, _pnLog, _pnCkpt)
	_pnLog = null
	_pnCkpt = null
	if _rc != int32(5) {
		goto _5
	}

	_bBusy = int32(1)
	_rc = int32(0)
_5:
_4:
	_i++
	goto _1

_3:
	if (_rc == int32(0)) && (_bBusy != 0) {
		return int32(5)
	}

	return _rc
}

// _727sqlite3PagerOkToChangeJournalMode is defined at sqlite3.c:54824:20
func _727sqlite3PagerOkToChangeJournalMode(tls crt.TLS, _pPager uintptr /* *TPager = SPager */) (r int32) {
	if int32(*(*uint8)(unsafe.Pointer(_pPager + 20))) < int32(3) {
		goto _1
	}

	return int32(0)

_1:
	if (*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pPager + 80))))) == 0 || (*(*int64)(unsafe.Pointer(_pPager + 96))) <= int64(0) {
		goto _2
	}

	return int32(0)

_2:
	return int32(1)
}

// _728sqlite3PagerWalSupported is defined at sqlite3.c:54901:20
func _728sqlite3PagerWalSupported(tls crt.TLS, _pPager uintptr /* *TPager = SPager */) (r int32) {
	var _pMethods uintptr // *Tsqlite3_io_methods = Ssqlite3_io_methods

	_pMethods = *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pPager + 72))))
	if (*(*uint8)(unsafe.Pointer(_pPager + 17))) == 0 {
		goto _1
	}

	return int32(0)

_1:
	return bool2int(((*(*uint8)(unsafe.Pointer(_pPager + 8))) != 0) || (((*(*int32)(unsafe.Pointer(_pMethods))) >= int32(2)) && ((*(*uintptr)(unsafe.Pointer(_pMethods + 104))) != 0)))
}

// _729sqlite3PagerCloseWal is defined at sqlite3.c:55015:20
func _729sqlite3PagerCloseWal(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _db uintptr /* *Tsqlite3 = Ssqlite3 */) (r int32) {
	esc := crt.MustMalloc(4)
	var (
		_rc        int32
		_logexists = esc // *int32
	)
	defer crt.Free(esc)
	_rc = int32(0)

	if (*(*uintptr)(unsafe.Pointer(_pPager + 288))) != 0 {
		goto _1
	}

	*(*int32)(unsafe.Pointer(_logexists)) = int32(0)
	_rc = _558pagerLockDb(tls, _pPager, int32(1))
	if _rc != int32(0) {
		goto _2
	}

	_rc = _872sqlite3OsAccess(tls, *(*uintptr)(unsafe.Pointer(_pPager)), *(*uintptr)(unsafe.Pointer(_pPager + 296)), int32(0), _logexists)
_2:
	if _rc != int32(0) || (*(*int32)(unsafe.Pointer(_logexists))) == 0 {
		goto _3
	}

	_rc = _878pagerOpenWal(tls, _pPager)
_3:
_1:
	if _rc != int32(0) || (*(*uintptr)(unsafe.Pointer(_pPager + 288))) == 0 {
		goto _4
	}

	_rc = _1022pagerExclusiveLock(tls, _pPager)
	if _rc != int32(0) {
		goto _5
	}

	_rc = _853sqlite3WalClose(tls, *(*uintptr)(unsafe.Pointer(_pPager + 288)), _db, int32(*(*uint8)(unsafe.Pointer(_pPager + 15))), *(*int32)(unsafe.Pointer(_pPager + 188)), *(*uintptr)(unsafe.Pointer(_pPager + 272)))
	*(*uintptr)(unsafe.Pointer(_pPager + 288)) = null
	_758pagerFixMaplimit(tls, _pPager)
	if _rc == 0 || (*(*uint8)(unsafe.Pointer(_pPager + 8))) != 0 {
		goto _6
	}

	_873pagerUnlockDb(tls, _pPager, int32(1))
_6:
_5:
_4:
	return _rc
}

// _730sqlite3PagerSetJournalMode is defined at sqlite3.c:54717:20
func _730sqlite3PagerSetJournalMode(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _eMode int32) (r int32) {
	var (
		_eOld  uint8
		_rc    int32
		_state int32
	)
	_eOld = *(*uint8)(unsafe.Pointer(_pPager + 9))

	if (*(*uint8)(unsafe.Pointer(_pPager + 19))) == 0 {
		goto _1
	}

	if _eMode == int32(4) || _eMode == int32(2) {
		goto _2
	}

	_eMode = int32(_eOld)
_2:
_1:
	if _eMode == int32(_eOld) {
		goto _3
	}

	*(*uint8)(unsafe.Pointer(_pPager + 9)) = uint8(_eMode)

	if (*(*uint8)(unsafe.Pointer(_pPager + 8))) != 0 || (int32(_eOld)&int32(5)) != int32(1) || (_eMode&int32(1)) != int32(0) {
		goto _4
	}

	_849sqlite3OsClose(tls, *(*uintptr)(unsafe.Pointer(_pPager + 80)))
	if int32(*(*uint8)(unsafe.Pointer(_pPager + 21))) < int32(2) {
		goto _6
	}

	_913sqlite3OsDelete(tls, *(*uintptr)(unsafe.Pointer(_pPager)), *(*uintptr)(unsafe.Pointer(_pPager + 216)), int32(0))
	goto _7

_6:
	_rc = int32(0)
	_state = int32(*(*uint8)(unsafe.Pointer(_pPager + 20)))

	if _state != int32(0) {
		goto _8
	}

	_rc = _553sqlite3PagerSharedLock(tls, _pPager)
_8:
	if int32(*(*uint8)(unsafe.Pointer(_pPager + 20))) != int32(1) {
		goto _9
	}

	_rc = _558pagerLockDb(tls, _pPager, int32(2))
_9:
	if _rc != int32(0) {
		goto _10
	}

	_913sqlite3OsDelete(tls, *(*uintptr)(unsafe.Pointer(_pPager)), *(*uintptr)(unsafe.Pointer(_pPager + 216)), int32(0))
_10:
	if _rc != int32(0) || _state != int32(1) {
		goto _11
	}

	_873pagerUnlockDb(tls, _pPager, int32(1))
	goto _12

_11:
	if _state != int32(0) {
		goto _13
	}

	_854pager_unlock(tls, _pPager)
_13:
_12:
_7:
	goto _5

_4:
	if _eMode != int32(2) {
		goto _14
	}

	_849sqlite3OsClose(tls, *(*uintptr)(unsafe.Pointer(_pPager + 80)))
_14:
_5:
_3:
	return int32(*(*uint8)(unsafe.Pointer(_pPager + 9)))
}

// _731sqlite3JournalModename is defined at sqlite3.c:114557:27
func _731sqlite3JournalModename(tls crt.TLS, _eMode int32) (r uintptr /* *int8 */) {
	if _eMode != int32(6) {
		goto _1
	}

	return null

_1:
	return *(*uintptr)(unsafe.Pointer(_1023azModeName + 8*uintptr(_eMode)))
}

// _732sqlite3RunVacuum is defined at sqlite3.c:126067:20
func _732sqlite3RunVacuum(tls crt.TLS, _pzErrMsg uintptr /* **int8 */, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _iDb int32) (r int32) {
	esc := crt.MustMalloc(4)
	var (
		_rc                 int32
		_pMain              uintptr // *TBtree = SBtree
		_pTemp              uintptr // *TBtree = SBtree
		_saved_mDbFlags     uint16
		_saved_flags        uint32
		_saved_nChange      int32
		_saved_nTotalChange int32
		_saved_mTrace       uint8
		_pDb                uintptr // *TDb = SDb
		_isMemDb            int32
		_nRes               int32
		_nDb                int32
		_zDbMain            uintptr // *int8
		_meta               = esc   // *Tu32 = uint32
		_i                  int32
	)
	defer crt.Free(esc)
	_rc = int32(0)
	_pDb = 0
	if (*(*uint8)(unsafe.Pointer(_db + 95))) != 0 {
		goto _1
	}

	_766sqlite3SetString(tls, _pzErrMsg, _db, ts+20343 /* "cannot VACUUM from within a tran..." */)
	return int32(1)

_1:
	if (*(*int32)(unsafe.Pointer(_db + 184))) <= int32(1) {
		goto _2
	}

	_766sqlite3SetString(tls, _pzErrMsg, _db, ts+20383 /* "cannot VACUUM - SQL statements i..." */)
	return int32(1)

_2:
	_saved_flags = *(*uint32)(unsafe.Pointer(_db + 48))
	_saved_mDbFlags = uint16(*(*uint32)(unsafe.Pointer(_db + 44)))
	_saved_nChange = *(*int32)(unsafe.Pointer(_db + 116))
	_saved_nTotalChange = *(*int32)(unsafe.Pointer(_db + 120))
	_saved_mTrace = *(*uint8)(unsafe.Pointer(_db + 104))
	{
		p := &(*(*uint32)(unsafe.Pointer(_db + 48)))
		*p = uint32(uint32(*p) | uint32(513))
	}
	{
		p := &(*(*uint32)(unsafe.Pointer(_db + 44)))
		*p = uint32(uint32(*p) | uint32(6))
	}
	{
		p := &(*(*uint32)(unsafe.Pointer(_db + 48)))
		*p = uint32(uint32(*p) & uint32(4294946687))
	}
	*(*uint8)(unsafe.Pointer(_db + 104)) = uint8(0)
	_zDbMain = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)))
	_pMain = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)) + 8))
	_isMemDb = _333sqlite3PagerIsMemdb(tls, _141sqlite3BtreePager(tls, _pMain))
	_nDb = *(*int32)(unsafe.Pointer(_db + 40))
	_rc = _1025execSql(tls, _db, _pzErrMsg, ts+20426 /* "ATTACH''AS vacuum_db" */)
	if _rc == int32(0) {
		goto _3
	}

	goto _end_of_vacuum

_3:
	_pDb = (*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_nDb)

	_pTemp = *(*uintptr)(unsafe.Pointer(_pDb + 8))
	_769sqlite3BtreeCommit(tls, _pTemp)
	_nRes = _1026sqlite3BtreeGetOptimalReserve(tls, _pMain)
	_768sqlite3BtreeSetCacheSize(tls, _pTemp, *(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)) + 24))) + 116)))
	_1027sqlite3BtreeSetSpillSize(tls, _pTemp, _1027sqlite3BtreeSetSpillSize(tls, _pMain, int32(0)))
	_1028sqlite3BtreeSetPagerFlags(tls, _pTemp, uint32(33))
	_rc = _1025execSql(tls, _db, _pzErrMsg, ts+3817 /* "BEGIN" */)
	if _rc == int32(0) {
		goto _4
	}

	goto _end_of_vacuum

_4:
	_rc = _143sqlite3BtreeBeginTrans(tls, _pMain, int32(2))
	if _rc == int32(0) {
		goto _5
	}

	goto _end_of_vacuum

_5:
	if _147sqlite3PagerGetJournalMode(tls, _141sqlite3BtreePager(tls, _pMain)) != int32(5) {
		goto _6
	}

	*(*int32)(unsafe.Pointer(_db + 108)) = int32(0)
_6:
	if _210sqlite3BtreeSetPageSize(tls, _pTemp, _146sqlite3BtreeGetPageSize(tls, _pMain), _nRes, int32(0)) == 0 && (_isMemDb != 0 || _210sqlite3BtreeSetPageSize(tls, _pTemp, *(*int32)(unsafe.Pointer(_db + 108)), _nRes, int32(0)) == 0) && *(*uint8)(unsafe.Pointer(_db + 97)) == 0 {
		goto _7
	}

	_rc = int32(7)
	goto _end_of_vacuum

_7:
	_1029sqlite3BtreeSetAutoVacuum(tls, _pTemp, func() int32 {
		if int32(*(*int8)(unsafe.Pointer(_db + 100))) >= int32(0) {
			return int32(*(*int8)(unsafe.Pointer(_db + 100)))
		}
		return _1030sqlite3BtreeGetAutoVacuum(tls, _pMain)
	}())
	*(*uint8)(unsafe.Pointer((_db + 176) + 4)) = uint8(_nDb)
	_rc = _1031execSqlF(tls, _db, _pzErrMsg, ts+20447 /* "SELECT sql FROM \"%w\".sqlite_mast..." */, _zDbMain)
	if _rc == int32(0) {
		goto _8
	}

	goto _end_of_vacuum

_8:
	_rc = _1031execSqlF(tls, _db, _pzErrMsg, ts+20555 /* "SELECT sql FROM \"%w\".sqlite_mast..." */, _zDbMain)
	if _rc == int32(0) {
		goto _9
	}

	goto _end_of_vacuum

_9:
	*(*uint8)(unsafe.Pointer((_db + 176) + 4)) = uint8(0)
	_rc = _1031execSqlF(tls, _db, _pzErrMsg, ts+20628 /* "SELECT'INSERT INTO vacuum_db.'||..." */, _zDbMain)

	{
		p := &(*(*uint32)(unsafe.Pointer(_db + 44)))
		*p = uint32(uint32(*p) & uint32(4294967291))
	}
	if _rc == int32(0) {
		goto _10
	}

	goto _end_of_vacuum

_10:
	_rc = _1031execSqlF(tls, _db, _pzErrMsg, ts+20779 /* "INSERT INTO vacuum_db.sqlite_mas..." */, _zDbMain)
	if _rc == 0 {
		goto _11
	}

	goto _end_of_vacuum

_11:
	_i = int32(0)
_12:
	if _i >= int32(10) {
		goto _14
	}

	_145sqlite3BtreeGetMeta(tls, _pMain, int32(*(*uint8)(unsafe.Pointer(_1024aCopy + uintptr(_i)))), _meta)
	_rc = _156sqlite3BtreeUpdateMeta(tls, _pTemp, int32(*(*uint8)(unsafe.Pointer(_1024aCopy + uintptr(_i)))), (*(*uint32)(unsafe.Pointer(_meta)))+uint32(*(*uint8)(unsafe.Pointer(_1024aCopy + uintptr(_i+int32(1))))))
	if _rc == int32(0) {
		goto _15
	}

	goto _end_of_vacuum

_15:
	_i = int32(_i + int32(2))
	goto _12

_14:
	_rc = _1032sqlite3BtreeCopyFile(tls, _pMain, _pTemp)
	if _rc == int32(0) {
		goto _16
	}

	goto _end_of_vacuum

_16:
	_rc = _769sqlite3BtreeCommit(tls, _pTemp)
	if _rc == int32(0) {
		goto _17
	}

	goto _end_of_vacuum

_17:
	_1029sqlite3BtreeSetAutoVacuum(tls, _pMain, _1030sqlite3BtreeGetAutoVacuum(tls, _pTemp))

	_rc = _210sqlite3BtreeSetPageSize(tls, _pMain, _146sqlite3BtreeGetPageSize(tls, _pTemp), _nRes, int32(1))
	goto _end_of_vacuum
_end_of_vacuum:
	*(*uint8)(unsafe.Pointer((_db + 176) + 4)) = uint8(0)
	*(*uint32)(unsafe.Pointer(_db + 44)) = uint32(_saved_mDbFlags)
	*(*uint32)(unsafe.Pointer(_db + 48)) = _saved_flags
	*(*int32)(unsafe.Pointer(_db + 116)) = _saved_nChange
	*(*int32)(unsafe.Pointer(_db + 120)) = _saved_nTotalChange
	*(*uint8)(unsafe.Pointer(_db + 104)) = _saved_mTrace
	_210sqlite3BtreeSetPageSize(tls, _pMain, int32(-1), int32(-1), int32(1))
	*(*uint8)(unsafe.Pointer(_db + 95)) = uint8(1)
	if _pDb == 0 {
		goto _18
	}

	_367sqlite3BtreeClose(tls, *(*uintptr)(unsafe.Pointer(_pDb + 8)))
	*(*uintptr)(unsafe.Pointer(_pDb + 8)) = null
	*(*uintptr)(unsafe.Pointer(_pDb + 24)) = null
_18:
	_157sqlite3ResetAllSchemasOfConnection(tls, _db)
	return _rc
}

// _733sqlite3BtreeIncrVacuum is defined at sqlite3.c:63404:20
func _733sqlite3BtreeIncrVacuum(tls crt.TLS, _p uintptr /* *TBtree = SBtree */) (r int32) {
	var (
		_rc    int32
		_pBt   uintptr // *TBtShared = SBtShared
		_nOrig uint32
		_nFree uint32
		_nFin  uint32
	)
	_pBt = *(*uintptr)(unsafe.Pointer(_p + 8))
	_139sqlite3BtreeEnter(tls, _p)

	if (*(*uint8)(unsafe.Pointer(_pBt + 33))) != 0 {
		goto _1
	}

	_rc = int32(101)
	goto _2

_1:
	_nOrig = _332btreePagecount(tls, _pBt)
	_nFree = uint32(_328sqlite3Get4byte(tls, (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pBt + 24))) + 80)))+36))
	_nFin = _596finalDbSize(tls, _pBt, _nOrig, _nFree)
	if _nOrig >= _nFin {
		goto _3
	}

	_rc = _556sqlite3CorruptError(tls, int32(63418))
	goto _4

_3:
	if _nFree <= uint32(0) {
		goto _5
	}

	_rc = _360saveAllCursors(tls, _pBt, uint32(0), null)
	if _rc != int32(0) {
		goto _7
	}

	_594invalidateAllOverflowCache(tls, _pBt)
	_rc = _597incrVacuumStep(tls, _pBt, _nFin, _nOrig, int32(0))
_7:
	if _rc != int32(0) {
		goto _8
	}

	_rc = _161sqlite3PagerWrite(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pBt + 24))) + 112)))
	_329sqlite3Put4byte(tls, (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pBt + 24))) + 80)))+28, *(*uint32)(unsafe.Pointer(_pBt + 60)))
_8:
	goto _6

_5:
	_rc = int32(101)
_6:
_4:
_2:
	_169sqlite3BtreeLeave(tls, _p)
	return _rc
}

// _734sqlite3BtreeLockTable is defined at sqlite3.c:69455:20
func _734sqlite3BtreeLockTable(tls crt.TLS, _p uintptr /* *TBtree = SBtree */, _iTab int32, _isWriteLock uint8) (r int32) {
	var (
		_rc       int32
		_lockType uint8
	)
	_rc = int32(0)

	if (*(*uint8)(unsafe.Pointer(_p + 17))) == 0 {
		goto _1
	}

	_lockType = uint8(int32(1) + int32(_isWriteLock))

	_139sqlite3BtreeEnter(tls, _p)
	_rc = _321querySharedCacheTableLock(tls, _p, uint32(_iTab), _lockType)
	if _rc != int32(0) {
		goto _2
	}

	_rc = _1033setSharedCacheTableLock(tls, _p, uint32(_iTab), _lockType)
_2:
	_169sqlite3BtreeLeave(tls, _p)
_1:
	return _rc
}

// _735sqlite3VtabBegin is defined at sqlite3.c:127245:20
func _735sqlite3VtabBegin(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pVTab uintptr /* *TVTable = SVTable */) (r int32) {
	var (
		_rc      int32
		_pModule uintptr // *Tsqlite3_module = Ssqlite3_module
		_i       int32
		_iSvpt   int32
	)
	_rc = int32(0)
	if (*(*int32)(unsafe.Pointer(_db + 444))) <= int32(0) || (*(*uintptr)(unsafe.Pointer(_db + 480))) != 0 {
		goto _1
	}

	return int32(6)

_1:
	if _pVTab != 0 {
		goto _2
	}

	return int32(0)

_2:
	_pModule = *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pVTab + 16))))
	if (*(*uintptr)(unsafe.Pointer(_pModule + 112))) == 0 {
		goto _3
	}

	_i = int32(0)
_4:
	if _i >= (*(*int32)(unsafe.Pointer(_db + 444))) {
		goto _6
	}

	if (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 480))) + 8*uintptr(_i)))) != _pVTab {
		goto _7
	}

	return int32(0)

_7:
	_i++
	goto _4

_6:
	_rc = _1034growVTrans(tls, _db)
	if _rc != int32(0) {
		goto _8
	}

	_rc = fn12(*(*uintptr)(unsafe.Pointer(_pModule + 112)))(tls, *(*uintptr)(unsafe.Pointer(_pVTab + 16)))
	if _rc != int32(0) {
		goto _9
	}

	_iSvpt = (*(*int32)(unsafe.Pointer(_db + 648))) + (*(*int32)(unsafe.Pointer(_db + 644)))
	_1035addToVTrans(tls, _db, _pVTab)
	if _iSvpt == 0 || (*(*uintptr)(unsafe.Pointer(_pModule + 160))) == 0 {
		goto _10
	}

	*(*int32)(unsafe.Pointer(_pVTab + 32)) = _iSvpt
	_rc = fn50(*(*uintptr)(unsafe.Pointer(_pModule + 160)))(tls, *(*uintptr)(unsafe.Pointer(_pVTab + 16)), _iSvpt-int32(1))
_10:
_9:
_8:
_3:
	return _rc
}

// _736sqlite3VtabCallCreate is defined at sqlite3.c:127009:20
func _736sqlite3VtabCallCreate(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _iDb int32, _zTab uintptr /* *int8 */, _pzErr uintptr /* **int8 */) (r int32) {
	var (
		_rc   int32
		_pTab uintptr // *TTable = STable
		_pMod uintptr // *TModule = SModule
		_zMod uintptr // *int8
	)
	_rc = int32(0)
	_pTab = _221sqlite3FindTable(tls, _db, _zTab, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb))))

	_zMod = *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pTab + 88))))
	_pMod = _424sqlite3HashFind(tls, _db+448, _zMod)
	if _pMod != 0 && (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pMod))) + 8))) != 0 && (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pMod))) + 40))) != 0 {
		goto _1
	}

	*(*uintptr)(unsafe.Pointer(_pzErr)) = _226sqlite3MPrintf(tls, _db, ts+20909 /* "no such module: %s" */, _zMod)
	_rc = int32(1)
	goto _2

_1:
	_rc = _1036vtabCallConstructor(tls, _db, _pTab, _pMod, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pMod))) + 8)), _pzErr)
_2:
	if _rc != int32(0) || _1037sqlite3GetVTable(tls, _db, _pTab) == 0 {
		goto _3
	}

	_rc = _1034growVTrans(tls, _db)
	if _rc != int32(0) {
		goto _4
	}

	_1035addToVTrans(tls, _db, _1037sqlite3GetVTable(tls, _db, _pTab))
_4:
_3:
	return _rc
}

// _737sqlite3VtabCallDestroy is defined at sqlite3.c:127135:20
func _737sqlite3VtabCallDestroy(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _iDb int32, _zTab uintptr /* *int8 */) (r int32) {
	var (
		_rc       int32
		_pTab     uintptr // *TTable = STable
		_p        uintptr // *TVTable = SVTable
		_xDestroy uintptr // *func(crt.TLS, uintptr) int32
	)
	_rc = int32(0)
	_pTab = _221sqlite3FindTable(tls, _db, _zTab, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb))))
	if _pTab == 0 || (*(*uintptr)(unsafe.Pointer(_pTab + 96))) == 0 {
		goto _1
	}

	_p = *(*uintptr)(unsafe.Pointer(_pTab + 96))
_2:
	if _p == 0 {
		goto _4
	}

	if (*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 16))) + 8))) <= int32(0) {
		goto _5
	}

	return int32(6)

_5:
	_p = *(*uintptr)(unsafe.Pointer(_p + 40))
	goto _2

_4:
	_p = _1038vtabDisconnectAll(tls, _db, _pTab)
	_xDestroy = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_p + 8))))) + 40))

	_rc = fn12(_xDestroy)(tls, *(*uintptr)(unsafe.Pointer(_p + 16)))
	if _rc != int32(0) {
		goto _6
	}

	*(*uintptr)(unsafe.Pointer(_p + 16)) = null
	*(*uintptr)(unsafe.Pointer(_pTab + 96)) = null
	_566sqlite3VtabUnlock(tls, _p)
_6:
_1:
	return _rc
}

// _738sqlite3BtreeMaxPageCount is defined at sqlite3.c:62505:20
func _738sqlite3BtreeMaxPageCount(tls crt.TLS, _p uintptr /* *TBtree = SBtree */, _mxPage int32) (r int32) {
	var _n int32

	_139sqlite3BtreeEnter(tls, _p)
	_n = _1039sqlite3PagerMaxPageCount(tls, *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_p + 8)))), _mxPage)
	_169sqlite3BtreeLeave(tls, _p)
	return _n
}

// _739sqlite3VdbeDeleteAuxData is defined at sqlite3.c:75167:21
func _739sqlite3VdbeDeleteAuxData(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pp uintptr /* **TAuxData = SAuxData */, _iOp int32, _mask int32) {
	var _pAux uintptr // *TAuxData = SAuxData

_1:
	if (*(*uintptr)(unsafe.Pointer(_pp))) == 0 {
		goto _2
	}

	_pAux = *(*uintptr)(unsafe.Pointer(_pp))
	if _iOp >= int32(0) && ((*(*int32)(unsafe.Pointer(_pAux))) != _iOp || (*(*int32)(unsafe.Pointer(_pAux + 4))) < int32(0) || (*(*int32)(unsafe.Pointer(_pAux + 4))) <= int32(31) && uint32(_mask)&(uint32(1)<<(uint(*(*int32)(unsafe.Pointer(_pAux + 4)))%32)) != 0) {
		goto _3
	}

	if (*(*uintptr)(unsafe.Pointer(_pAux + 16))) == 0 {
		goto _5
	}

	fn16(*(*uintptr)(unsafe.Pointer(_pAux + 16)))(tls, *(*uintptr)(unsafe.Pointer(_pAux + 8)))
_5:
	*(*uintptr)(unsafe.Pointer(_pp)) = *(*uintptr)(unsafe.Pointer(_pAux + 24))
	_181sqlite3DbFree(tls, _db, _pAux)
	goto _4

_3:
	_pp = _pAux + 24
_4:
	goto _1

_2:
}

// _740sqlite3VdbeExpandSql is defined at sqlite3.c:78944:21
func _740sqlite3VdbeExpandSql(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */, _zRawSql uintptr /* *int8 */) (r uintptr /* *int8 */) {
	esc := crt.MustMalloc(228)
	var (
		_db        uintptr // *Tsqlite3 = Ssqlite3
		_idx       = esc   // *int32
		_nextIndex int32
		_n         int32
		_nToken    = esc + 16 // *int32
		_i         int32
		_pVar      uintptr     // *TMem = Ssqlite3_value
		_out       = esc + 32  // *TStrAccum = SStrAccum
		_utf8      = esc + 64  // *TMem = Ssqlite3_value
		_zBase     = esc + 128 // *[100]int8
		_zStart    uintptr     // *int8
		_nOut      int32
		_enc       uint8
		_1nOut     int32
	)
	defer crt.Free(esc)
	*(*int32)(unsafe.Pointer(_idx)) = int32(0)
	_nextIndex = int32(1)
	_db = *(*uintptr)(unsafe.Pointer(_p))
	_130sqlite3StrAccumInit(tls, _out, null, _zBase, int32(100), *(*int32)(unsafe.Pointer(_db + 124)))
	if (*(*int32)(unsafe.Pointer(_db + 196))) <= int32(1) {
		goto _1
	}

_3:
	if (*(*int8)(unsafe.Pointer(_zRawSql))) == 0 {
		goto _4
	}

	_zStart = _zRawSql
_5:
	if int32(*(*int8)(unsafe.Pointer(postinc19(&_zRawSql)))) == int32('\n') || (*(*int8)(unsafe.Pointer(_zRawSql))) == 0 {
		goto _6
	}

	goto _5

_6:
	_301sqlite3StrAccumAppend(tls, _out, ts+20928 /* "-- " */, int32(3))

	_301sqlite3StrAccumAppend(tls, _out, _zStart, int32(int64(_zRawSql-_zStart)))
	goto _3

_4:
	goto _2

_1:
	if int32(*(*int16)(unsafe.Pointer(_p + 32))) != int32(0) {
		goto _7
	}

	_301sqlite3StrAccumAppend(tls, _out, _zRawSql, _211sqlite3Strlen30(tls, _zRawSql))
	goto _8

_7:
_9:
	if (*(*int8)(unsafe.Pointer(_zRawSql))) == 0 {
		goto _10
	}

	_n = _1040findNextHostParameter(tls, _zRawSql, _nToken)

	_301sqlite3StrAccumAppend(tls, _out, _zRawSql, _n)
	_zRawSql += uintptr(_n)

	if (*(*int32)(unsafe.Pointer(_nToken))) != int32(0) {
		goto _11
	}

	goto _10

_11:
	if int32(*(*int8)(unsafe.Pointer(_zRawSql))) != int32('?') {
		goto _12
	}

	if (*(*int32)(unsafe.Pointer(_nToken))) <= int32(1) {
		goto _14
	}

	_1004sqlite3GetInt32(tls, _zRawSql+1, _idx)
	goto _15

_14:
	*(*int32)(unsafe.Pointer(_idx)) = _nextIndex
_15:
	goto _13

_12:
	*(*int32)(unsafe.Pointer(_idx)) = _1041sqlite3VdbeParameterIndex(tls, _p, _zRawSql, *(*int32)(unsafe.Pointer(_nToken)))

_13:
	_zRawSql += uintptr(*(*int32)(unsafe.Pointer(_nToken)))
	_nextIndex = (*(*int32)(unsafe.Pointer(_idx))) + int32(1)

	_pVar = (*(*uintptr)(unsafe.Pointer(_p + 160))) + 56*uintptr((*(*int32)(unsafe.Pointer(_idx)))-int32(1))
	if (int32(*(*uint16)(unsafe.Pointer(_pVar + 8))) & int32(0x1)) == 0 {
		goto _16
	}

	_301sqlite3StrAccumAppend(tls, _out, ts+8837 /* "NULL" */, int32(4))
	goto _17

_16:
	if (int32(*(*uint16)(unsafe.Pointer(_pVar + 8))) & int32(0x4)) == 0 {
		goto _18
	}

	_807sqlite3XPrintf(tls, _out, ts+20114 /* "%lld" */, *(*int64)(unsafe.Pointer(_pVar)))
	goto _19

_18:
	if (int32(*(*uint16)(unsafe.Pointer(_pVar + 8))) & int32(0x8)) == 0 {
		goto _20
	}

	_807sqlite3XPrintf(tls, _out, ts+19340 /* "%!.15g" */, *(*float64)(unsafe.Pointer(_pVar)))
	goto _21

_20:
	if (int32(*(*uint16)(unsafe.Pointer(_pVar + 8))) & int32(0x2)) == 0 {
		goto _22
	}

	_enc = *(*uint8)(unsafe.Pointer(_db + 94))
	if int32(_enc) == int32(1) {
		goto _24
	}

	crt.Xmemset(tls, _utf8, int32(0), uint64(56))
	*(*uintptr)(unsafe.Pointer(_utf8 + 40)) = _db
	_395sqlite3VdbeMemSetStr(tls, _utf8, *(*uintptr)(unsafe.Pointer(_pVar + 16)), *(*int32)(unsafe.Pointer(_pVar + 12)), _enc, null)
	if int32(7) != _396sqlite3VdbeChangeEncoding(tls, _utf8, int32(1)) {
		goto _25
	}

	*(*uint8)(unsafe.Pointer(_out + 28)) = uint8(1)
	*(*uint32)(unsafe.Pointer(_out + 16)) = uint32(0)
_25:
	_pVar = _utf8
_24:
	_nOut = *(*int32)(unsafe.Pointer(_pVar + 12))
	_807sqlite3XPrintf(tls, _out, ts+20932 /* "'%.*q'" */, _nOut, *(*uintptr)(unsafe.Pointer(_pVar + 16)))
	if int32(_enc) == int32(1) {
		goto _26
	}

	_397sqlite3VdbeMemRelease(tls, _utf8)
_26:
	goto _23

_22:
	if (int32(*(*uint16)(unsafe.Pointer(_pVar + 8))) & int32(0x4000)) == 0 {
		goto _27
	}

	_807sqlite3XPrintf(tls, _out, ts+20939 /* "zeroblob(%d)" */, *(*int32)(unsafe.Pointer(_pVar)))
	goto _28

_27:
	_301sqlite3StrAccumAppend(tls, _out, ts+20952 /* "x'" */, int32(2))
	_1nOut = *(*int32)(unsafe.Pointer(_pVar + 12))
	_i = int32(0)
_29:
	if _i >= _1nOut {
		goto _31
	}

	_807sqlite3XPrintf(tls, _out, ts+12436 /* "%02x" */, int32(*(*int8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pVar + 16))) + uintptr(_i))))&int32(0xff))
	_i++
	goto _29

_31:
	_301sqlite3StrAccumAppend(tls, _out, ts+12374 /* "'" */, int32(1))
_28:
_23:
_21:
_19:
_17:
	goto _9

_10:
_8:
_2:
	if (*(*uint8)(unsafe.Pointer(_out + 28))) == 0 {
		goto _32
	}

	_868sqlite3StrAccumReset(tls, _out)
_32:
	return _299sqlite3StrAccumFinish(tls, _out)
}

// _741sqlite3VdbeLeave is defined at sqlite3.c:73689:21
func _741sqlite3VdbeLeave(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */) {
	if (*(*uint32)(unsafe.Pointer(_p + 200))) != uint32(0) {
		goto _1
	}

	return

_1:
	_1042vdbeLeave(tls, _p)
}

// _742sqlite3PagerWalCallback is defined at sqlite3.c:54893:20
func _742sqlite3PagerWalCallback(tls crt.TLS, _pPager uintptr /* *TPager = SPager */) (r int32) {
	return _1043sqlite3WalCallback(tls, *(*uintptr)(unsafe.Pointer(_pPager + 288)))
}

// _743sqlite3Utf8Trans1 [64]uint8, escapes: true, sqlite3.c:27648:28
var _743sqlite3Utf8Trans1 = ds + 7094

// _744sqlite3DbMallocSize is defined at sqlite3.c:25116:20
func _744sqlite3DbMallocSize(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _p uintptr /* *void */) (r int32) {
	if _db != 0 && _614isLookaside(tls, _db, _p) != 0 {
		goto _1
	}

	return fn12(*(*uintptr)(unsafe.Pointer((_28sqlite3Config + 48) + 24)))(tls, _p)

	goto _2

_1:
	return int32(*(*uint16)(unsafe.Pointer((_db + 352) + 4)))

_2:
	return r
}

// _745sqlite3VdbeMemHandleBom is defined at sqlite3.c:27943:20
func _745sqlite3VdbeMemHandleBom(tls crt.TLS, _pMem uintptr /* *TMem = Ssqlite3_value */) (r int32) {
	var (
		_rc  int32
		_bom uint8
		_b1  uint8
		_b2  uint8
	)
	_rc = int32(0)
	_bom = uint8(0)

	if (*(*int32)(unsafe.Pointer(_pMem + 12))) <= int32(1) {
		goto _1
	}

	_b1 = *(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pMem + 16))))
	_b2 = *(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pMem + 16))) + uintptr(1)))
	if int32(_b1) != int32(0xfe) || int32(_b2) != int32(0xff) {
		goto _2
	}

	_bom = uint8(3)
_2:
	if int32(_b1) != int32(0xff) || int32(_b2) != int32(0xfe) {
		goto _3
	}

	_bom = uint8(2)
_3:
_1:
	if _bom == 0 {
		goto _4
	}

	_rc = _543sqlite3VdbeMemMakeWriteable(tls, _pMem)
	if _rc != int32(0) {
		goto _5
	}

	{
		p := &(*(*int32)(unsafe.Pointer(_pMem + 12)))
		*p = int32(int32(*p) - int32(2))
	}
	crt.Xmemmove(tls, *(*uintptr)(unsafe.Pointer(_pMem + 16)), (*(*uintptr)(unsafe.Pointer(_pMem + 16)))+2, uint64(*(*int32)(unsafe.Pointer(_pMem + 12))))
	*(*int8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pMem + 16))) + uintptr(*(*int32)(unsafe.Pointer(_pMem + 12))))) = int8('\x00')
	*(*int8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pMem + 16))) + uintptr((*(*int32)(unsafe.Pointer(_pMem + 12)))+int32(1)))) = int8('\x00')
	{
		p := &(*(*uint16)(unsafe.Pointer(_pMem + 8)))
		*p = uint16(int32(*p) | int32(0x200))
	}
	*(*uint8)(unsafe.Pointer(_pMem + 10)) = _bom
_5:
_4:
	return _rc
}

// _746sqlite3VdbeMemTranslate is defined at sqlite3.c:27798:36
func _746sqlite3VdbeMemTranslate(tls crt.TLS, _pMem uintptr /* *TMem = Ssqlite3_value */, _desiredEnc uint8) (r int32) {
	var (
		_len   int32
		_zOut  uintptr // *uint8
		_zIn   uintptr // *uint8
		_zTerm uintptr // *uint8
		_z     uintptr // *uint8
		_c     uint32
		_temp  uint8
		_rc    int32
		_c2    int32
		_1c2   int32
	)

	if int32(*(*uint8)(unsafe.Pointer(_pMem + 10))) == int32(1) || int32(_desiredEnc) == int32(1) {
		goto _1
	}

	_rc = _543sqlite3VdbeMemMakeWriteable(tls, _pMem)
	if _rc == int32(0) {
		goto _2
	}

	return int32(7)

_2:
	_zIn = *(*uintptr)(unsafe.Pointer(_pMem + 16))
	_zTerm = _zIn + uintptr((*(*int32)(unsafe.Pointer(_pMem + 12)))&int32(-2))
_3:
	if _zIn >= _zTerm {
		goto _4
	}

	_temp = *(*uint8)(unsafe.Pointer(_zIn))
	*(*uint8)(unsafe.Pointer(_zIn)) = *(*uint8)(unsafe.Pointer(_zIn + uintptr(1)))
	_zIn++
	*(*uint8)(unsafe.Pointer(postinc19(&_zIn))) = _temp
	goto _3

_4:
	*(*uint8)(unsafe.Pointer(_pMem + 10)) = _desiredEnc
	goto _translate_out

_1:
	if int32(_desiredEnc) != int32(1) {
		goto _5
	}

	{
		p := &(*(*int32)(unsafe.Pointer(_pMem + 12)))
		*p = int32(int32(*p) & int32(-2))
	}
	_len = ((*(*int32)(unsafe.Pointer(_pMem + 12))) * int32(2)) + int32(1)
	goto _6

_5:
	_len = ((*(*int32)(unsafe.Pointer(_pMem + 12))) * int32(2)) + int32(2)
_6:
	_zIn = *(*uintptr)(unsafe.Pointer(_pMem + 16))
	_zTerm = _zIn + uintptr(*(*int32)(unsafe.Pointer(_pMem + 12)))
	_zOut = _177sqlite3DbMallocRaw(tls, *(*uintptr)(unsafe.Pointer(_pMem + 40)), uint64(_len))
	if _zOut != 0 {
		goto _7
	}

	return int32(7)

_7:
	_z = _zOut
	if int32(*(*uint8)(unsafe.Pointer(_pMem + 10))) != int32(1) {
		goto _8
	}

	if int32(_desiredEnc) != int32(2) {
		goto _10
	}

_12:
	if _zIn >= _zTerm {
		goto _13
	}

	_c = uint32(*(*uint8)(unsafe.Pointer(postinc19(&_zIn))))
	if _c < uint32(0xc0) {
		goto _14
	}

	_c = uint32(*(*uint8)(unsafe.Pointer(_743sqlite3Utf8Trans1 + uintptr(_c-uint32(0xc0)))))
_15:
	if _zIn == _zTerm || (int32(*(*uint8)(unsafe.Pointer(_zIn)))&int32(0xc0)) != int32(0x80) {
		goto _16
	}

	_c = (_c << (uint(6) % 32)) + uint32(int32(0x3f)&int32(*(*uint8)(unsafe.Pointer(postinc19(&_zIn)))))
	goto _15

_16:
	if _c >= uint32(0x80) && (_c&uint32(0xfffff800)) != uint32(0xd800) && (_c&uint32(0xfffffffe)) != uint32(0xfffe) {
		goto _17
	}

	_c = uint32(0xfffd)
_17:
_14:
	if _c > uint32(0xffff) {
		goto _18
	}

	*(*uint8)(unsafe.Pointer(postinc19(&_z))) = uint8(_c & uint32(0xff))
	*(*uint8)(unsafe.Pointer(postinc19(&_z))) = uint8((_c >> (uint(8) % 32)) & uint32(0xff))
	goto _19

_18:
	*(*uint8)(unsafe.Pointer(postinc19(&_z))) = uint8(((_c >> (uint(10) % 32)) & uint32(0x3f)) + (((_c - uint32(0x10000)) >> (uint(10) % 32)) & uint32(0xc0)))
	*(*uint8)(unsafe.Pointer(postinc19(&_z))) = uint8(uint32(0xd8) + (((_c - uint32(0x10000)) >> (uint(18) % 32)) & uint32(0x3)))
	*(*uint8)(unsafe.Pointer(postinc19(&_z))) = uint8(_c & uint32(0xff))
	*(*uint8)(unsafe.Pointer(postinc19(&_z))) = uint8(uint32(0xdc) + ((_c >> (uint(8) % 32)) & uint32(0x3)))
_19:
	goto _12

_13:
	goto _11

_10:
_20:
	if _zIn >= _zTerm {
		goto _21
	}

	_c = uint32(*(*uint8)(unsafe.Pointer(postinc19(&_zIn))))
	if _c < uint32(0xc0) {
		goto _22
	}

	_c = uint32(*(*uint8)(unsafe.Pointer(_743sqlite3Utf8Trans1 + uintptr(_c-uint32(0xc0)))))
_23:
	if _zIn == _zTerm || (int32(*(*uint8)(unsafe.Pointer(_zIn)))&int32(0xc0)) != int32(0x80) {
		goto _24
	}

	_c = (_c << (uint(6) % 32)) + uint32(int32(0x3f)&int32(*(*uint8)(unsafe.Pointer(postinc19(&_zIn)))))
	goto _23

_24:
	if _c >= uint32(0x80) && (_c&uint32(0xfffff800)) != uint32(0xd800) && (_c&uint32(0xfffffffe)) != uint32(0xfffe) {
		goto _25
	}

	_c = uint32(0xfffd)
_25:
_22:
	if _c > uint32(0xffff) {
		goto _26
	}

	*(*uint8)(unsafe.Pointer(postinc19(&_z))) = uint8((_c >> (uint(8) % 32)) & uint32(0xff))
	*(*uint8)(unsafe.Pointer(postinc19(&_z))) = uint8(_c & uint32(0xff))
	goto _27

_26:
	*(*uint8)(unsafe.Pointer(postinc19(&_z))) = uint8(uint32(0xd8) + (((_c - uint32(0x10000)) >> (uint(18) % 32)) & uint32(0x3)))
	*(*uint8)(unsafe.Pointer(postinc19(&_z))) = uint8(((_c >> (uint(10) % 32)) & uint32(0x3f)) + (((_c - uint32(0x10000)) >> (uint(10) % 32)) & uint32(0xc0)))
	*(*uint8)(unsafe.Pointer(postinc19(&_z))) = uint8(uint32(0xdc) + ((_c >> (uint(8) % 32)) & uint32(0x3)))
	*(*uint8)(unsafe.Pointer(postinc19(&_z))) = uint8(_c & uint32(0xff))
_27:
	goto _20

_21:
_11:
	*(*int32)(unsafe.Pointer(_pMem + 12)) = int32(int64(_z - _zOut))
	*(*uint8)(unsafe.Pointer(postinc19(&_z))) = uint8(0)
	goto _9

_8:
	if int32(*(*uint8)(unsafe.Pointer(_pMem + 10))) != int32(2) {
		goto _28
	}

_30:
	if _zIn >= _zTerm {
		goto _31
	}

	_c = uint32(*(*uint8)(unsafe.Pointer(postinc19(&_zIn))))
	_c = uint32(_c + uint32(int32(*(*uint8)(unsafe.Pointer(postinc19(&_zIn))))<<(uint(8)%32)))
	if _c < uint32(0xd800) || _c >= uint32(0xe000) || _zIn >= _zTerm {
		goto _32
	}

	_c2 = int32(*(*uint8)(unsafe.Pointer(postinc19(&_zIn))))
	_c2 = int32(_c2 + (int32(*(*uint8)(unsafe.Pointer(postinc19(&_zIn)))) << (uint(8) % 32)))
	_c = (uint32(_c2&int32(0x3ff)) + ((_c & uint32(0x3f)) << (uint(10) % 32))) + (((_c & uint32(0x3c0)) + uint32(0x40)) << (uint(10) % 32))
_32:
	if _c >= uint32(0x80) {
		goto _33
	}

	*(*uint8)(unsafe.Pointer(postinc19(&_z))) = uint8(_c & uint32(0xff))
	goto _34

_33:
	if _c >= uint32(0x800) {
		goto _35
	}

	*(*uint8)(unsafe.Pointer(postinc19(&_z))) = uint8(int32(0xc0) + int32(uint8((_c>>(uint(6)%32))&uint32(0x1f))))
	*(*uint8)(unsafe.Pointer(postinc19(&_z))) = uint8(int32(0x80) + int32(uint8(_c&uint32(0x3f))))
	goto _36

_35:
	if _c >= uint32(0x10000) {
		goto _37
	}

	*(*uint8)(unsafe.Pointer(postinc19(&_z))) = uint8(int32(0xe0) + int32(uint8((_c>>(uint(12)%32))&uint32(0xf))))
	*(*uint8)(unsafe.Pointer(postinc19(&_z))) = uint8(int32(0x80) + int32(uint8((_c>>(uint(6)%32))&uint32(0x3f))))
	*(*uint8)(unsafe.Pointer(postinc19(&_z))) = uint8(int32(0x80) + int32(uint8(_c&uint32(0x3f))))
	goto _38

_37:
	*(*uint8)(unsafe.Pointer(postinc19(&_z))) = uint8(int32(0xf0) + int32(uint8((_c>>(uint(18)%32))&uint32(0x7))))
	*(*uint8)(unsafe.Pointer(postinc19(&_z))) = uint8(int32(0x80) + int32(uint8((_c>>(uint(12)%32))&uint32(0x3f))))
	*(*uint8)(unsafe.Pointer(postinc19(&_z))) = uint8(int32(0x80) + int32(uint8((_c>>(uint(6)%32))&uint32(0x3f))))
	*(*uint8)(unsafe.Pointer(postinc19(&_z))) = uint8(int32(0x80) + int32(uint8(_c&uint32(0x3f))))
_38:
_36:
_34:
	goto _30

_31:
	goto _29

_28:
_39:
	if _zIn >= _zTerm {
		goto _40
	}

	_c = uint32(int32(*(*uint8)(unsafe.Pointer(postinc19(&_zIn)))) << (uint(8) % 32))
	_c = uint32(_c + uint32(*(*uint8)(unsafe.Pointer(postinc19(&_zIn)))))
	if _c < uint32(0xd800) || _c >= uint32(0xe000) || _zIn >= _zTerm {
		goto _41
	}

	_1c2 = int32(*(*uint8)(unsafe.Pointer(postinc19(&_zIn)))) << (uint(8) % 32)
	_1c2 = int32(_1c2 + int32(*(*uint8)(unsafe.Pointer(postinc19(&_zIn)))))
	_c = (uint32(_1c2&int32(0x3ff)) + ((_c & uint32(0x3f)) << (uint(10) % 32))) + (((_c & uint32(0x3c0)) + uint32(0x40)) << (uint(10) % 32))
_41:
	if _c >= uint32(0x80) {
		goto _42
	}

	*(*uint8)(unsafe.Pointer(postinc19(&_z))) = uint8(_c & uint32(0xff))
	goto _43

_42:
	if _c >= uint32(0x800) {
		goto _44
	}

	*(*uint8)(unsafe.Pointer(postinc19(&_z))) = uint8(int32(0xc0) + int32(uint8((_c>>(uint(6)%32))&uint32(0x1f))))
	*(*uint8)(unsafe.Pointer(postinc19(&_z))) = uint8(int32(0x80) + int32(uint8(_c&uint32(0x3f))))
	goto _45

_44:
	if _c >= uint32(0x10000) {
		goto _46
	}

	*(*uint8)(unsafe.Pointer(postinc19(&_z))) = uint8(int32(0xe0) + int32(uint8((_c>>(uint(12)%32))&uint32(0xf))))
	*(*uint8)(unsafe.Pointer(postinc19(&_z))) = uint8(int32(0x80) + int32(uint8((_c>>(uint(6)%32))&uint32(0x3f))))
	*(*uint8)(unsafe.Pointer(postinc19(&_z))) = uint8(int32(0x80) + int32(uint8(_c&uint32(0x3f))))
	goto _47

_46:
	*(*uint8)(unsafe.Pointer(postinc19(&_z))) = uint8(int32(0xf0) + int32(uint8((_c>>(uint(18)%32))&uint32(0x7))))
	*(*uint8)(unsafe.Pointer(postinc19(&_z))) = uint8(int32(0x80) + int32(uint8((_c>>(uint(12)%32))&uint32(0x3f))))
	*(*uint8)(unsafe.Pointer(postinc19(&_z))) = uint8(int32(0x80) + int32(uint8((_c>>(uint(6)%32))&uint32(0x3f))))
	*(*uint8)(unsafe.Pointer(postinc19(&_z))) = uint8(int32(0x80) + int32(uint8(_c&uint32(0x3f))))
_47:
_45:
_43:
	goto _39

_40:
_29:
	*(*int32)(unsafe.Pointer(_pMem + 12)) = int32(int64(_z - _zOut))
_9:
	*(*uint8)(unsafe.Pointer(_z)) = uint8(0)

	_c = uint32(*(*uint16)(unsafe.Pointer(_pMem + 8)))
	_397sqlite3VdbeMemRelease(tls, _pMem)
	*(*uint16)(unsafe.Pointer(_pMem + 8)) = uint16(uint32(514) | (_c & uint32(32799)))
	*(*uint8)(unsafe.Pointer(_pMem + 10)) = _desiredEnc
	*(*uintptr)(unsafe.Pointer(_pMem + 16)) = _zOut
	*(*uintptr)(unsafe.Pointer(_pMem + 24)) = *(*uintptr)(unsafe.Pointer(_pMem + 16))
	*(*int32)(unsafe.Pointer(_pMem + 32)) = _744sqlite3DbMallocSize(tls, *(*uintptr)(unsafe.Pointer(_pMem + 40)), *(*uintptr)(unsafe.Pointer(_pMem + 16)))
	goto _translate_out
_translate_out:
	return int32(0)
	return r
}

// _747vdbeMemClear is defined at sqlite3.c:70832:29
func _747vdbeMemClear(tls crt.TLS, _p uintptr /* *TMem = Ssqlite3_value */) {
	if (int32(*(*uint16)(unsafe.Pointer(_p + 8))) & int32(9312)) == int32(0) {
		goto _1
	}

	_542vdbeMemClearExternAndSetNull(tls, _p)
_1:
	if (*(*int32)(unsafe.Pointer(_p + 32))) == 0 {
		goto _2
	}

	_376sqlite3DbFreeNN(tls, *(*uintptr)(unsafe.Pointer(_p + 40)), *(*uintptr)(unsafe.Pointer(_p + 24)))
	*(*int32)(unsafe.Pointer(_p + 32)) = int32(0)
_2:
	*(*uintptr)(unsafe.Pointer(_p + 16)) = null
}

// _748closeAllCursors is defined at sqlite3.c:74322:13
func _748closeAllCursors(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */) {
	var (
		_pFrame uintptr // *TVdbeFrame = SVdbeFrame
		_pDel   uintptr // *TVdbeFrame = SVdbeFrame
	)
	if (*(*uintptr)(unsafe.Pointer(_p + 248))) == 0 {
		goto _1
	}

	_pFrame = *(*uintptr)(unsafe.Pointer(_p + 248))
_2:
	if (*(*uintptr)(unsafe.Pointer(_pFrame + 8))) == 0 {
		goto _4
	}

	_pFrame = *(*uintptr)(unsafe.Pointer(_pFrame + 8))
	goto _2

_4:
	_641sqlite3VdbeFrameRestore(tls, _pFrame)
	*(*uintptr)(unsafe.Pointer(_p + 248)) = null
	*(*int32)(unsafe.Pointer(_p + 264)) = int32(0)
_1:
	_940closeCursorsInFrame(tls, _p)
	if (*(*uintptr)(unsafe.Pointer(_p + 112))) == 0 {
		goto _5
	}

	_624releaseMemArray(tls, *(*uintptr)(unsafe.Pointer(_p + 112)), *(*int32)(unsafe.Pointer(_p + 40)))
_5:
_6:
	if (*(*uintptr)(unsafe.Pointer(_p + 256))) == 0 {
		goto _7
	}

	_pDel = *(*uintptr)(unsafe.Pointer(_p + 256))
	*(*uintptr)(unsafe.Pointer(_p + 256)) = *(*uintptr)(unsafe.Pointer(_pDel + 8))
	_1044sqlite3VdbeFrameDelete(tls, _pDel)
	goto _6

_7:
	if (*(*uintptr)(unsafe.Pointer(_p + 280))) == 0 {
		goto _8
	}

	_739sqlite3VdbeDeleteAuxData(tls, *(*uintptr)(unsafe.Pointer(_p)), _p+280, int32(-1), int32(0))
_8:
}

// _749vdbeCommit is defined at sqlite3.c:74405:12
func _749vdbeCommit(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _p uintptr /* *TVdbe = SVdbe */) (r int32) {
	esc := crt.MustMalloc(36)
	var (
		_i           int32
		_nTrans      int32
		_rc          int32
		_needXcommit int32
		_pBt         uintptr // *TBtree = SBtree
		_pPager      uintptr // *TPager = SPager
		_1pBt        uintptr // *TBtree = SBtree
		_2pBt        uintptr // *TBtree = SBtree
		_pVfs        uintptr // *Tsqlite3_vfs = Ssqlite3_vfs
		_zMaster     uintptr // *int8
		_zMainFile   uintptr // *int8
		_pMaster     = esc   // **Tsqlite3_file = Ssqlite3_file
		_offset      int64
		_res         = esc + 16 // *int32
		_retryCount  int32
		_nMainFile   int32
		_iRandom     = esc + 32 // *Tu32 = uint32
		_3pBt        uintptr    // *TBtree = SBtree
		_zFile       uintptr    // *int8
		_4pBt        uintptr    // *TBtree = SBtree
		_5pBt        uintptr    // *TBtree = SBtree
	)
	defer crt.Free(esc)
	_nTrans = int32(0)
	_rc = int32(0)
	_needXcommit = int32(0)
	_rc = _1046sqlite3VtabSync(tls, _db, _p)
	_i = int32(0)
_1:
	if _rc != int32(0) || _i >= (*(*int32)(unsafe.Pointer(_db + 40))) {
		goto _3
	}

	_pBt = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_i)) + 8))
	if _607sqlite3BtreeIsInTrans(tls, _pBt) == 0 {
		goto _4
	}

	_needXcommit = int32(1)
	_139sqlite3BtreeEnter(tls, _pBt)
	_pPager = _141sqlite3BtreePager(tls, _pBt)
	if int32(*(*uint8)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_i)) + 16))) == int32(0x1) || (*(*uint8)(unsafe.Pointer(_1045aMJNeeded + uintptr(_147sqlite3PagerGetJournalMode(tls, _pPager))))) == 0 {
		goto _5
	}

	_nTrans++
_5:
	_rc = _584sqlite3PagerExclusiveLock(tls, _pPager)
	_169sqlite3BtreeLeave(tls, _pBt)
_4:
	_i++
	goto _1

_3:
	if _rc == int32(0) {
		goto _6
	}

	return _rc

_6:
	if _needXcommit == 0 || (*(*uintptr)(unsafe.Pointer(_db + 256))) == 0 {
		goto _7
	}

	_rc = fn12(*(*uintptr)(unsafe.Pointer(_db + 256)))(tls, *(*uintptr)(unsafe.Pointer(_db + 248)))
	if _rc == 0 {
		goto _8
	}

	return int32(531)

_8:
_7:
	if int32(0) != _211sqlite3Strlen30(tls, _1047sqlite3BtreeGetFilename(tls, *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_db + 32)) + 8)))) && _nTrans > int32(1) {
		goto _9
	}

	_i = int32(0)
_11:
	if _rc != int32(0) || _i >= (*(*int32)(unsafe.Pointer(_db + 40))) {
		goto _13
	}

	_1pBt = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_i)) + 8))
	if _1pBt == 0 {
		goto _14
	}

	_rc = _168sqlite3BtreeCommitPhaseOne(tls, _1pBt, null)
_14:
	_i++
	goto _11

_13:
	_i = int32(0)
_15:
	if _rc != int32(0) || _i >= (*(*int32)(unsafe.Pointer(_db + 40))) {
		goto _17
	}

	_2pBt = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_i)) + 8))
	if _2pBt == 0 {
		goto _18
	}

	_rc = _167sqlite3BtreeCommitPhaseTwo(tls, _2pBt, int32(0))
_18:
	_i++
	goto _15

_17:
	if _rc != int32(0) {
		goto _19
	}

	_1048sqlite3VtabCommit(tls, _db)
_19:
	goto _10

_9:
	_pVfs = *(*uintptr)(unsafe.Pointer(_db))
	_zMaster = 0
	_zMainFile = _1047sqlite3BtreeGetFilename(tls, *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_db + 32)) + 8)))
	*(*uintptr)(unsafe.Pointer(_pMaster)) = 0
	_offset = int64(0)
	_retryCount = int32(0)
	_nMainFile = _211sqlite3Strlen30(tls, _zMainFile)
	_zMaster = _226sqlite3MPrintf(tls, _db, ts+20955 /* "%s-mjXXXXXX9XXz" */, _zMainFile)
	if _zMaster != 0 {
		goto _20
	}

	return int32(7)

_20:
_21:
	if _retryCount == 0 {
		goto _24
	}

	if _retryCount <= int32(100) {
		goto _25
	}

	Xsqlite3_log(tls, int32(13), ts+20971 /* "MJ delete: %s" */, _zMaster)
	_913sqlite3OsDelete(tls, _pVfs, _zMaster, int32(0))
	goto _23

	goto _26

_25:
	if _retryCount != int32(1) {
		goto _27
	}

	Xsqlite3_log(tls, int32(13), ts+20985 /* "MJ collide: %s" */, _zMaster)
_27:
_26:
_24:
	_retryCount++
	Xsqlite3_randomness(tls, int32(4), _iRandom)
	Xsqlite3_snprintf(tls, int32(13), _zMaster+uintptr(_nMainFile), ts+21000 /* "-mj%06X9%02X" */, ((*(*uint32)(unsafe.Pointer(_iRandom)))>>(uint(8)%32))&uint32(0xffffff), (*(*uint32)(unsafe.Pointer(_iRandom)))&uint32(0xff))

	_rc = _872sqlite3OsAccess(tls, _pVfs, _zMaster, int32(0), _res)
	if (_rc == int32(0)) && ((*(*int32)(unsafe.Pointer(_res))) != 0) {
		goto _21
	}

	goto _23

_23:
	if _rc != int32(0) {
		goto _28
	}

	_rc = _1049sqlite3OsOpenMalloc(tls, _pVfs, _zMaster, _pMaster, int32(16406), null)
_28:
	if _rc == int32(0) {
		goto _29
	}

	_181sqlite3DbFree(tls, _db, _zMaster)
	return _rc

_29:
	_i = int32(0)
_30:
	if _i >= (*(*int32)(unsafe.Pointer(_db + 40))) {
		goto _32
	}

	_3pBt = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_i)) + 8))
	if _607sqlite3BtreeIsInTrans(tls, _3pBt) == 0 {
		goto _33
	}

	_zFile = _1050sqlite3BtreeGetJournalname(tls, _3pBt)
	if _zFile != 0 {
		goto _34
	}

	goto _31

_34:
	_rc = _163sqlite3OsWrite(tls, *(*uintptr)(unsafe.Pointer(_pMaster)), _zFile, _211sqlite3Strlen30(tls, _zFile)+int32(1), _offset)
	_offset = int64(_offset + int64(_211sqlite3Strlen30(tls, _zFile)+int32(1)))
	if _rc == int32(0) {
		goto _35
	}

	_1051sqlite3OsCloseFree(tls, *(*uintptr)(unsafe.Pointer(_pMaster)))
	_913sqlite3OsDelete(tls, _pVfs, _zMaster, int32(0))
	_181sqlite3DbFree(tls, _db, _zMaster)
	return _rc

_35:
_33:
_31:
	_i++
	goto _30

_32:
	if int32(0) != (_585sqlite3OsDeviceCharacteristics(tls, *(*uintptr)(unsafe.Pointer(_pMaster)))&int32(0x400)) || int32(0) == set5(&_rc, _354sqlite3OsSync(tls, *(*uintptr)(unsafe.Pointer(_pMaster)), int32(0x2))) {
		goto _36
	}

	_1051sqlite3OsCloseFree(tls, *(*uintptr)(unsafe.Pointer(_pMaster)))
	_913sqlite3OsDelete(tls, _pVfs, _zMaster, int32(0))
	_181sqlite3DbFree(tls, _db, _zMaster)
	return _rc

_36:
	_i = int32(0)
_37:
	if _rc != int32(0) || _i >= (*(*int32)(unsafe.Pointer(_db + 40))) {
		goto _39
	}

	_4pBt = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_i)) + 8))
	if _4pBt == 0 {
		goto _40
	}

	_rc = _168sqlite3BtreeCommitPhaseOne(tls, _4pBt, _zMaster)
_40:
	_i++
	goto _37

_39:
	_1051sqlite3OsCloseFree(tls, *(*uintptr)(unsafe.Pointer(_pMaster)))

	if _rc == int32(0) {
		goto _41
	}

	_181sqlite3DbFree(tls, _db, _zMaster)
	return _rc

_41:
	_rc = _913sqlite3OsDelete(tls, _pVfs, _zMaster, int32(1))
	_181sqlite3DbFree(tls, _db, _zMaster)
	_zMaster = null
	if _rc == 0 {
		goto _42
	}

	return _rc

_42:
	_523sqlite3BeginBenignMalloc(tls)
	_i = int32(0)
_43:
	if _i >= (*(*int32)(unsafe.Pointer(_db + 40))) {
		goto _45
	}

	_5pBt = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_i)) + 8))
	if _5pBt == 0 {
		goto _46
	}

	_167sqlite3BtreeCommitPhaseTwo(tls, _5pBt, int32(1))
_46:
	_i++
	goto _43

_45:
	_524sqlite3EndBenignMalloc(tls)
	_1048sqlite3VtabCommit(tls, _db)
_10:
	return _rc
}

// _750doubleToInt64 is defined at sqlite3.c:70865:28
func _750doubleToInt64(tls crt.TLS, _r float64) (r int64) {
	if _r > float64(_1053minInt) {
		goto _1
	}

	return _1053minInt

	goto _2

_1:
	if _r < float64(_1052maxInt) {
		goto _3
	}

	return _1052maxInt

	goto _4

_3:
	return int64(_r)

_4:
_2:
	return r
}

// _751memIntValue is defined at sqlite3.c:70901:28
func _751memIntValue(tls crt.TLS, _pMem uintptr /* *TMem = Ssqlite3_value */) (r int64) {
	esc := crt.MustMalloc(8)
	var _value = esc // *Ti64 = Tsqlite_int64 = int64
	defer crt.Free(esc)
	*(*int64)(unsafe.Pointer(_value)) = int64(0)
	_947sqlite3Atoi64(tls, *(*uintptr)(unsafe.Pointer(_pMem + 16)), _value, *(*int32)(unsafe.Pointer(_pMem + 12)), *(*uint8)(unsafe.Pointer(_pMem + 10)))
	return *(*int64)(unsafe.Pointer(_value))
}

// _752nullMem TMem = Ssqlite3_value, escapes: true, sqlite3.c:77868:20
var _752nullMem = bss + 11568 // Mem

func init() {
	*(*Ssqlite3_value)(unsafe.Pointer(_752nullMem)) = Ssqlite3_value{
		Xflags: uint16(0x1),
	}
}

type Ssqlite3PrngType struct {
	XisInit uint8
	Xi      uint8
	Xj      uint8
	Xs      [256]uint8
}

// _753sqlite3PageFree is defined at sqlite3.c:46049:21
func _753sqlite3PageFree(tls crt.TLS, _p uintptr /* *void */) {
	_1054pcache1Free(tls, _p)
}

// _754sqlite3PcacheRefCount is defined at sqlite3.c:45467:20
func _754sqlite3PcacheRefCount(tls crt.TLS, _pCache uintptr /* *TPCache = SPCache */) (r int32) {
	return *(*int32)(unsafe.Pointer(_pCache + 24))
}

// _755sqlite3PageMalloc is defined at sqlite3.c:46042:21
func _755sqlite3PageMalloc(tls crt.TLS, _sz int32) (r uintptr /* *void */) {
	return _1055pcache1Alloc(tls, _sz)
}

// _756pager_reset is defined at sqlite3.c:49235:13
func _756pager_reset(tls crt.TLS, _pPager uintptr /* *TPager = SPager */) {
	(*(*uint32)(unsafe.Pointer(_pPager + 132)))++
	_343sqlite3BackupRestart(tls, *(*uintptr)(unsafe.Pointer(_pPager + 112)))
	_1056sqlite3PcacheClear(tls, *(*uintptr)(unsafe.Pointer(_pPager + 280)))
}

// _757sqlite3PcacheSetPageSize is defined at sqlite3.c:45007:20
func _757sqlite3PcacheSetPageSize(tls crt.TLS, _pCache uintptr /* *TPCache = SPCache */, _szPage int32) (r int32) {
	var _pNew uintptr // *Tsqlite3_pcache = Ssqlite3_pcache

	if (*(*int32)(unsafe.Pointer(_pCache + 36))) == 0 {
		goto _1
	}

	_pNew = fn147(*(*uintptr)(unsafe.Pointer((_28sqlite3Config + 184) + 32)))(tls, _szPage, int32(uint64(*(*int32)(unsafe.Pointer(_pCache + 40)))+uint64(72)), int32(*(*uint8)(unsafe.Pointer(_pCache + 44))))
	if _pNew != 0 {
		goto _2
	}

	return int32(7)

_2:
	fn148(*(*uintptr)(unsafe.Pointer((_28sqlite3Config + 184) + 40)))(tls, _pNew, _898numberOfCachePages(tls, _pCache))
	if (*(*uintptr)(unsafe.Pointer(_pCache + 64))) == 0 {
		goto _3
	}

	fn16(*(*uintptr)(unsafe.Pointer((_28sqlite3Config + 184) + 88)))(tls, *(*uintptr)(unsafe.Pointer(_pCache + 64)))
_3:
	*(*uintptr)(unsafe.Pointer(_pCache + 64)) = _pNew
	*(*int32)(unsafe.Pointer(_pCache + 36)) = _szPage
_1:
	return int32(0)
}

// _758pagerFixMaplimit is defined at sqlite3.c:51006:13
func _758pagerFixMaplimit(tls crt.TLS, _pPager uintptr /* *TPager = SPager */) {
	esc := crt.MustMalloc(8)
	var (
		_fd uintptr // *Tsqlite3_file = Ssqlite3_file
		_sz = esc   // *Tsqlite3_int64 = Tsqlite_int64 = int64
	)
	defer crt.Free(esc)
	_fd = *(*uintptr)(unsafe.Pointer(_pPager + 72))
	if (*(*uintptr)(unsafe.Pointer(_fd))) == 0 || (*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_fd))))) < int32(3) {
		goto _1
	}

	*(*int64)(unsafe.Pointer(_sz)) = *(*int64)(unsafe.Pointer(_pPager + 160))
	*(*uint8)(unsafe.Pointer(_pPager + 26)) = uint8(bool2int((*(*int64)(unsafe.Pointer(_sz))) > int64(0)))
	_603setGetterMethod(tls, _pPager)
	_521sqlite3OsFileControlHint(tls, *(*uintptr)(unsafe.Pointer(_pPager + 72)), int32(18), _sz)
_1:
}

// _759aKWHash [127]uint8, escapes: true, sqlite3.c:140881:28
var _759aKWHash = ds + 7158

// _760aKWLen [124]uint8, escapes: true, sqlite3.c:140909:28
var _760aKWLen = ds + 7285

// _761zKWText [553]int8, escapes: true, sqlite3.c:140847:19
var _761zKWText = ds + 7409

// _762aKWOffset [124]uint16, escapes: true, sqlite3.c:140923:33
var _762aKWOffset = ds + 7962

// _763aKWCode [124]uint8, escapes: true, sqlite3.c:140936:28
var _763aKWCode = ds + 8210

// _764aKWNext [124]uint8, escapes: true, sqlite3.c:140896:28
var _764aKWNext = ds + 8334

// _765__func__ [23]int8, escapes: true, shell.c:5191:2
var _765__func__ = ds + 8458

// Xsqlite3_aggregate_context is defined at sqlite3.c:77726:17
func Xsqlite3_aggregate_context(tls crt.TLS, _p uintptr /* *Tsqlite3_context = Ssqlite3_context */, _nByte int32) (r uintptr /* *void */) {
	if (int32(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 16))) + 8))) & int32(0x2000)) != int32(0) {
		goto _1
	}

	return _1057createAggContext(tls, _p, _nByte)

	goto _2

_1:
	return *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 16))) + 16))

_2:
	return r
}

// Xsqlite3_aggregate_count is defined at sqlite3.c:77831:16
func Xsqlite3_aggregate_count(tls crt.TLS, _p uintptr /* *Tsqlite3_context = Ssqlite3_context */) (r int32) {
	return *(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 16))) + 12))
}

// Xsqlite3_bind_parameter_count is defined at sqlite3.c:78427:16
func Xsqlite3_bind_parameter_count(tls crt.TLS, _pStmt uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */) (r int32) {
	var _p uintptr // *TVdbe = SVdbe

	_p = _pStmt
	if _p != 0 {
		return int32(*(*int16)(unsafe.Pointer(_p + 32)))
	}

	return int32(0)
}

// Xsqlite3_bind_parameter_index is defined at sqlite3.c:78453:16
func Xsqlite3_bind_parameter_index(tls crt.TLS, _pStmt uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */, _zName uintptr /* *int8 */) (r int32) {
	return _1041sqlite3VdbeParameterIndex(tls, _pStmt, _zName, _211sqlite3Strlen30(tls, _zName))
}

// Xsqlite3_bind_parameter_name is defined at sqlite3.c:78438:23
func Xsqlite3_bind_parameter_name(tls crt.TLS, _pStmt uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */, _i int32) (r uintptr /* *int8 */) {
	var _p uintptr // *TVdbe = SVdbe

	_p = _pStmt
	if _p != 0 {
		goto _1
	}

	return null

_1:
	return _1058sqlite3VListNumToName(tls, *(*uintptr)(unsafe.Pointer(_p + 168)), _i)
}

// Xsqlite3_bind_text16 is defined at sqlite3.c:78357:16
func Xsqlite3_bind_text16(tls crt.TLS, _pStmt uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */, _i int32, _zData uintptr /* *void */, _nData int32, _xDel uintptr /* *func(crt.TLS, uintptr) */) (r int32) {
	return _199bindText(tls, _pStmt, _i, _zData, _nData, _xDel, uint8(2))
}

// Xsqlite3_bind_value is defined at sqlite3.c:78367:16
func Xsqlite3_bind_value(tls crt.TLS, _pStmt uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */, _i int32, _pValue uintptr /* *Tsqlite3_value = Ssqlite3_value */) (r int32) {
	var _rc int32

	switch Xsqlite3_value_type(tls, _pValue) {
	case int32(1):
		goto _2
	case int32(2):
		goto _3
	case int32(4):
		goto _4
	case int32(3):
		goto _5
	default:
		goto _6
	}
_2:
	_rc = Xsqlite3_bind_int64(tls, _pStmt, _i, *(*int64)(unsafe.Pointer(_pValue)))
	goto _1

_3:
	_rc = Xsqlite3_bind_double(tls, _pStmt, _i, *(*float64)(unsafe.Pointer(_pValue)))
	goto _1

_4:
	if (int32(*(*uint16)(unsafe.Pointer(_pValue + 8))) & int32(0x4000)) == 0 {
		goto _7
	}

	_rc = Xsqlite3_bind_zeroblob(tls, _pStmt, _i, *(*int32)(unsafe.Pointer(_pValue)))
	goto _8

_7:
	_rc = Xsqlite3_bind_blob(tls, _pStmt, _i, *(*uintptr)(unsafe.Pointer(_pValue + 16)), *(*int32)(unsafe.Pointer(_pValue + 12)), uintptr(18446744073709551615))
_8:
	goto _1

_5:
	_rc = _199bindText(tls, _pStmt, _i, *(*uintptr)(unsafe.Pointer(_pValue + 16)), *(*int32)(unsafe.Pointer(_pValue + 12)), uintptr(18446744073709551615), *(*uint8)(unsafe.Pointer(_pValue + 10)))
	goto _1

_6:
	_rc = Xsqlite3_bind_null(tls, _pStmt, _i)
	goto _1

_1:
	return _rc
}

// Xsqlite3_collation_needed is defined at sqlite3.c:145250:16
func Xsqlite3_collation_needed(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pCollNeededArg uintptr /* *void */, _xCollNeeded uintptr /* *func(crt.TLS, uintptr, uintptr, int32, uintptr) */) (r int32) {
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	*(*uintptr)(unsafe.Pointer(_db + 312)) = _xCollNeeded
	*(*uintptr)(unsafe.Pointer(_db + 320)) = null
	*(*uintptr)(unsafe.Pointer(_db + 328)) = _pCollNeededArg
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	return int32(0)
}

// Xsqlite3_collation_needed16 is defined at sqlite3.c:145271:16
func Xsqlite3_collation_needed16(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pCollNeededArg uintptr /* *void */, _xCollNeeded16 uintptr /* *func(crt.TLS, uintptr, uintptr, int32, uintptr) */) (r int32) {
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	*(*uintptr)(unsafe.Pointer(_db + 312)) = null
	*(*uintptr)(unsafe.Pointer(_db + 320)) = _xCollNeeded16
	*(*uintptr)(unsafe.Pointer(_db + 328)) = _pCollNeededArg
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	return int32(0)
}

// Xsqlite3_column_bytes16 is defined at sqlite3.c:77968:16
func Xsqlite3_column_bytes16(tls crt.TLS, _pStmt uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */, _i int32) (r int32) {
	var _val int32

	_val = Xsqlite3_value_bytes16(tls, _203columnMem(tls, _pStmt, _i))
	_204columnMallocFailure(tls, _pStmt)
	return _val
}

// Xsqlite3_column_decltype is defined at sqlite3.c:78098:23
func Xsqlite3_column_decltype(tls crt.TLS, _pStmt uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */, _N int32) (r uintptr /* *int8 */) {
	return _374columnName(tls, _pStmt, _N, fp11(Xsqlite3_value_text), int32(1))
}

// Xsqlite3_column_decltype16 is defined at sqlite3.c:78103:23
func Xsqlite3_column_decltype16(tls crt.TLS, _pStmt uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */, _N int32) (r uintptr /* *void */) {
	return _374columnName(tls, _pStmt, _N, fp11(Xsqlite3_value_text16), int32(1))
}

// Xsqlite3_column_name16 is defined at sqlite3.c:78078:23
func Xsqlite3_column_name16(tls crt.TLS, _pStmt uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */, _N int32) (r uintptr /* *void */) {
	return _374columnName(tls, _pStmt, _N, fp11(Xsqlite3_value_text16), int32(0))
}

// Xsqlite3_column_text16 is defined at sqlite3.c:78003:23
func Xsqlite3_column_text16(tls crt.TLS, _pStmt uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */, _i int32) (r uintptr /* *void */) {
	var _val uintptr // *void

	_val = Xsqlite3_value_text16(tls, _203columnMem(tls, _pStmt, _i))
	_204columnMallocFailure(tls, _pStmt)
	return _val
}

// Xsqlite3_column_value is defined at sqlite3.c:77993:26
func Xsqlite3_column_value(tls crt.TLS, _pStmt uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */, _i int32) (r uintptr /* *Tsqlite3_value = Ssqlite3_value */) {
	var _pOut uintptr // *TMem = Ssqlite3_value

	_pOut = _203columnMem(tls, _pStmt, _i)
	if (int32(*(*uint16)(unsafe.Pointer(_pOut + 8))) & int32(0x800)) == 0 {
		goto _1
	}

	{
		p := &(*(*uint16)(unsafe.Pointer(_pOut + 8)))
		*p = uint16(int32(*p) & int32(-2049))
	}
	{
		p := &(*(*uint16)(unsafe.Pointer(_pOut + 8)))
		*p = uint16(int32(*p) | int32(0x1000))
	}
_1:
	_204columnMallocFailure(tls, _pStmt)
	return _pOut
}

// Xsqlite3_commit_hook is defined at sqlite3.c:143897:17
func Xsqlite3_commit_hook(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _xCallback uintptr /* *func(crt.TLS, uintptr) int32 */, _pArg uintptr /* *void */) (r uintptr /* *void */) {
	var _pOld uintptr // *void

	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	_pOld = *(*uintptr)(unsafe.Pointer(_db + 248))
	*(*uintptr)(unsafe.Pointer(_db + 256)) = _xCallback
	*(*uintptr)(unsafe.Pointer(_db + 248)) = _pArg
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	return _pOld
}

// Xsqlite3_complete16 is defined at sqlite3.c:141863:16
func Xsqlite3_complete16(tls crt.TLS, _zSql uintptr /* *void */) (r int32) {
	var (
		_pVal  uintptr // *Tsqlite3_value = Ssqlite3_value
		_zSql8 uintptr // *int8
		_rc    int32
	)
	_rc = Xsqlite3_initialize(tls)
	if _rc == 0 {
		goto _1
	}

	return _rc

_1:
	_pVal = _314sqlite3ValueNew(tls, null)
	_316sqlite3ValueSetStr(tls, _pVal, int32(-1), _zSql, uint8(2), null)
	_zSql8 = _289sqlite3ValueText(tls, _pVal, uint8(1))
	if _zSql8 == 0 {
		goto _2
	}

	_rc = Xsqlite3_complete(tls, _zSql8)
	goto _3

_2:
	_rc = int32(7)
_3:
	_371sqlite3ValueFree(tls, _pVal)
	return _rc & int32(0xff)
}

// Xsqlite3_create_collation is defined at sqlite3.c:145182:16
func Xsqlite3_create_collation(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _zName uintptr /* *int8 */, _enc int32, _pCtx uintptr /* *void */, _xCompare uintptr /* *func(crt.TLS, uintptr, int32, uintptr, int32, uintptr) int32 */) (r int32) {
	return Xsqlite3_create_collation_v2(tls, _db, _zName, _enc, _pCtx, _xCompare, null)
}

// Xsqlite3_create_collation16 is defined at sqlite3.c:145220:16
func Xsqlite3_create_collation16(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _zName uintptr /* *void */, _enc int32, _pCtx uintptr /* *void */, _xCompare uintptr /* *func(crt.TLS, uintptr, int32, uintptr, int32, uintptr) int32 */) (r int32) {
	var (
		_rc     int32
		_zName8 uintptr // *int8
	)
	_rc = int32(0)
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))

	_zName8 = _1059sqlite3Utf16to8(tls, _db, _zName, int32(-1), uint8(2))
	if _zName8 == 0 {
		goto _1
	}

	_rc = _277createCollation(tls, _db, _zName8, uint8(_enc), _pCtx, _xCompare, null)
	_181sqlite3DbFree(tls, _db, _zName8)
_1:
	_rc = _182sqlite3ApiExit(tls, _db, _rc)
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	return _rc
}

// Xsqlite3_create_function16 is defined at sqlite3.c:143746:16
func Xsqlite3_create_function16(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _zFunctionName uintptr /* *void */, _nArg int32, _eTextRep int32, _p uintptr /* *void */, _xSFunc uintptr /* *func(crt.TLS, uintptr, int32, uintptr) */, _xStep uintptr /* *func(crt.TLS, uintptr, int32, uintptr) */, _xFinal uintptr /* *func(crt.TLS, uintptr) */) (r int32) {
	var (
		_rc     int32
		_zFunc8 uintptr // *int8
	)
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))

	_zFunc8 = _1059sqlite3Utf16to8(tls, _db, _zFunctionName, int32(-1), uint8(2))
	_rc = _296sqlite3CreateFunc(tls, _db, _zFunc8, _nArg, _eTextRep, _p, _xSFunc, _xStep, _xFinal, null)
	_181sqlite3DbFree(tls, _db, _zFunc8)
	_rc = _182sqlite3ApiExit(tls, _db, _rc)
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	return _rc
}

// Xsqlite3_data_count is defined at sqlite3.c:77849:16
func Xsqlite3_data_count(tls crt.TLS, _pStmt uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */) (r int32) {
	var _pVm uintptr // *TVdbe = SVdbe

	_pVm = _pStmt
	if _pVm != 0 && (*(*uintptr)(unsafe.Pointer(_pVm + 136))) != 0 {
		goto _1
	}

	return int32(0)

_1:
	return int32(*(*uint16)(unsafe.Pointer(_pVm + 188)))
}

// Xsqlite3_db_handle is defined at sqlite3.c:78511:20
func Xsqlite3_db_handle(tls crt.TLS, _pStmt uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */) (r uintptr /* *Tsqlite3 = Ssqlite3 */) {
	if _pStmt != 0 {
		return *(*uintptr)(unsafe.Pointer(_pStmt))
	}

	return null
}

// Xsqlite3_declare_vtab is defined at sqlite3.c:127050:16
func Xsqlite3_declare_vtab(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _zCreateTable uintptr /* *int8 */) (r int32) {
	esc := crt.MustMalloc(608)
	var (
		_pCtx   uintptr // *TVtabCtx = SVtabCtx
		_rc     int32
		_pTab   uintptr    // *TTable = STable
		_zErr   = esc      // **int8
		_sParse = esc + 16 // *TParse = SParse
		_pNew   uintptr    // *TTable = STable
		_pIdx   uintptr    // *TIndex = SIndex
	)
	defer crt.Free(esc)
	_rc = int32(0)
	*(*uintptr)(unsafe.Pointer(_zErr)) = 0
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	_pCtx = *(*uintptr)(unsafe.Pointer(_db + 472))
	if _pCtx != 0 && (*(*int32)(unsafe.Pointer(_pCtx + 24))) == 0 {
		goto _1
	}

	_136sqlite3Error(tls, _db, int32(21))
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	return _29sqlite3MisuseError(tls, int32(127067))

_1:
	_pTab = *(*uintptr)(unsafe.Pointer(_pCtx + 8))

	crt.Xmemset(tls, _sParse, int32(0), uint64(592))
	*(*uint8)(unsafe.Pointer(_sParse + 468)) = uint8(1)
	*(*uintptr)(unsafe.Pointer(_sParse)) = _db
	*(*uint32)(unsafe.Pointer(_sParse + 180)) = uint32(1)
	if int32(0) != _619sqlite3RunParser(tls, _sParse, _zCreateTable, _zErr) || (*(*uintptr)(unsafe.Pointer(_sParse + 512))) == 0 || (*(*uint8)(unsafe.Pointer(_db + 97))) != 0 || (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_sParse + 512))) + 24))) != 0 || *(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_sParse + 512)) + 84)) != 0 {
		goto _2
	}

	if (*(*uintptr)(unsafe.Pointer(_pTab + 8))) != 0 {
		goto _4
	}

	_pNew = *(*uintptr)(unsafe.Pointer(_sParse + 512))
	*(*uintptr)(unsafe.Pointer(_pTab + 8)) = *(*uintptr)(unsafe.Pointer(_pNew + 8))
	*(*int16)(unsafe.Pointer(_pTab + 70)) = *(*int16)(unsafe.Pointer(_pNew + 70))
	{
		p := &(*(*uint32)(unsafe.Pointer(_pTab + 64)))
		*p = uint32(uint32(*p) | ((*(*uint32)(unsafe.Pointer(_pNew + 64))) & uint32(96)))
	}
	*(*int16)(unsafe.Pointer(_pNew + 70)) = int16(0)
	*(*uintptr)(unsafe.Pointer(_pNew + 8)) = null

	if ((*(*uint32)(unsafe.Pointer(_pNew + 64)))&uint32(0x20)) == uint32(0) || (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pCtx))) + 8))))) + 104))) == 0 || int32(*(*uint16)(unsafe.Pointer(_1060sqlite3PrimaryKeyIndex(tls, _pNew) + 94))) == int32(1) {
		goto _5
	}

	_rc = int32(1)
_5:
	_pIdx = *(*uintptr)(unsafe.Pointer(_pNew + 16))
	if _pIdx == 0 {
		goto _6
	}

	*(*uintptr)(unsafe.Pointer(_pTab + 16)) = _pIdx
	*(*uintptr)(unsafe.Pointer(_pNew + 16)) = null
	*(*uintptr)(unsafe.Pointer(_pIdx + 24)) = _pTab
_6:
_4:
	*(*int32)(unsafe.Pointer(_pCtx + 24)) = int32(1)
	goto _3

_2:
	_134sqlite3ErrorWithMsg(tls, _db, int32(1), func() uintptr {
		if (*(*uintptr)(unsafe.Pointer(_zErr))) != 0 {
			return ts + 429 /* "%s" */
		}
		return null
	}(), *(*uintptr)(unsafe.Pointer(_zErr)))
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_zErr)))
	_rc = int32(1)
_3:
	*(*uint8)(unsafe.Pointer(_sParse + 468)) = uint8(0)
	if (*(*uintptr)(unsafe.Pointer(_sParse + 16))) == 0 {
		goto _7
	}

	_179sqlite3VdbeFinalize(tls, *(*uintptr)(unsafe.Pointer(_sParse + 16)))
_7:
	_430sqlite3DeleteTable(tls, _db, *(*uintptr)(unsafe.Pointer(_sParse + 512)))
	_319sqlite3ParserReset(tls, _sParse)

	_rc = _182sqlite3ApiExit(tls, _db, _rc)
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	return _rc
}

// Xsqlite3_enable_shared_cache is defined at sqlite3.c:59762:16
func Xsqlite3_enable_shared_cache(tls crt.TLS, _enable int32) (r int32) {
	*(*int32)(unsafe.Pointer(_28sqlite3Config + 348)) = _enable
	return int32(0)
}

// Xsqlite3_errmsg16 is defined at sqlite3.c:144252:23
func Xsqlite3_errmsg16(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */) (r uintptr /* *void */) {
	var _z uintptr // *void

	if _db != 0 {
		goto _1
	}

	return _1061outOfMem

_1:
	if _122sqlite3SafetyCheckSickOrOk(tls, _db) != 0 {
		goto _2
	}

	return _1062misuse

_2:
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _3
	}

	_z = _1061outOfMem
	goto _4

_3:
	_z = Xsqlite3_value_text16(tls, *(*uintptr)(unsafe.Pointer(_db + 336)))
	if _z != 0 {
		goto _5
	}

	_134sqlite3ErrorWithMsg(tls, _db, *(*int32)(unsafe.Pointer(_db + 80)), _123sqlite3ErrStr(tls, *(*int32)(unsafe.Pointer(_db + 80))))
	_z = Xsqlite3_value_text16(tls, *(*uintptr)(unsafe.Pointer(_db + 336)))
_5:
	_612sqlite3OomClear(tls, _db)
_4:
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	return _z
}

// Xsqlite3_expired is defined at sqlite3.c:76935:16
func Xsqlite3_expired(tls crt.TLS, _pStmt uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */) (r int32) {
	var _p uintptr // *TVdbe = SVdbe

	_p = _pStmt
	return bool2int((_p == 0) || ((uint32(*(*uint16)(unsafe.Pointer(_p + 194))) << 31 >> 31) != 0))
}

// Xsqlite3_free_table is defined at sqlite3.c:123938:17
func Xsqlite3_free_table(tls crt.TLS, _azResult uintptr /* **int8 */) {
	var (
		_i int32
		_n int32
	)
	if _azResult == 0 {
		goto _1
	}

	_azResult -= 8

	_n = int32(int64(*(*uintptr)(unsafe.Pointer(_azResult))))
	_i = int32(1)
_2:
	if _i >= _n {
		goto _4
	}

	if (*(*uintptr)(unsafe.Pointer(_azResult + 8*uintptr(_i)))) == 0 {
		goto _5
	}

	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_azResult + 8*uintptr(_i))))
_5:
	_i++
	goto _2

_4:
	Xsqlite3_free(tls, _azResult)
_1:
}

// Xsqlite3_get_auxdata is defined at sqlite3.c:77747:17
func Xsqlite3_get_auxdata(tls crt.TLS, _pCtx uintptr /* *Tsqlite3_context = Ssqlite3_context */, _iArg int32) (r uintptr /* *void */) {
	var _pAuxData uintptr // *TAuxData = SAuxData

	_pAuxData = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pCtx + 24))) + 280))
_1:
	if _pAuxData == 0 {
		goto _3
	}

	if (*(*int32)(unsafe.Pointer(_pAuxData + 4))) != _iArg || (*(*int32)(unsafe.Pointer(_pAuxData))) != (*(*int32)(unsafe.Pointer(_pCtx + 32))) && _iArg >= int32(0) {
		goto _4
	}

	return *(*uintptr)(unsafe.Pointer(_pAuxData + 8))

_4:
	_pAuxData = *(*uintptr)(unsafe.Pointer(_pAuxData + 24))
	goto _1

_3:
	return null
}

// Xsqlite3_get_table is defined at sqlite3.c:123869:16
func Xsqlite3_get_table(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _zSql uintptr /* *int8 */, _pazResult uintptr /* ***int8 */, _pnRow uintptr /* *int32 */, _pnColumn uintptr /* *int32 */, _pzErrMsg uintptr /* **int8 */) (r int32) {
	esc := crt.MustMalloc(40)
	var (
		_rc    int32
		_res   = esc   // *TTabResult = struct{XazResult **...uint32;XnData uint32;Xrc int32;}
		_azNew uintptr // **int8
	)
	defer crt.Free(esc)
	*(*uintptr)(unsafe.Pointer(_pazResult)) = null
	if _pnColumn == 0 {
		goto _1
	}

	*(*int32)(unsafe.Pointer(_pnColumn)) = int32(0)
_1:
	if _pnRow == 0 {
		goto _2
	}

	*(*int32)(unsafe.Pointer(_pnRow)) = int32(0)
_2:
	if _pzErrMsg == 0 {
		goto _3
	}

	*(*uintptr)(unsafe.Pointer(_pzErrMsg)) = null
_3:
	*(*uintptr)(unsafe.Pointer(_res + 8)) = null
	*(*uint32)(unsafe.Pointer(_res + 20)) = uint32(0)
	*(*uint32)(unsafe.Pointer(_res + 24)) = uint32(0)
	*(*uint32)(unsafe.Pointer(_res + 28)) = uint32(1)
	*(*uint32)(unsafe.Pointer(_res + 16)) = uint32(20)
	*(*int32)(unsafe.Pointer(_res + 32)) = int32(0)
	*(*uintptr)(unsafe.Pointer(_res)) = Xsqlite3_malloc64(tls, uint64(uint64(8)*uint64(*(*uint32)(unsafe.Pointer(_res + 16)))))
	if (*(*uintptr)(unsafe.Pointer(_res))) != 0 {
		goto _4
	}

	*(*int32)(unsafe.Pointer(_db + 80)) = int32(7)
	return int32(7)

_4:
	*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_res)))) = null
	_rc = Xsqlite3_exec(tls, _db, _zSql, fp9(_1063sqlite3_get_table_cb), _res, _pzErrMsg)

	*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_res)))) = uintptr(int64(*(*uint32)(unsafe.Pointer(_res + 28))))
	if (_rc & int32(0xff)) != int32(4) {
		goto _5
	}

	Xsqlite3_free_table(tls, (*(*uintptr)(unsafe.Pointer(_res)))+8)
	if (*(*uintptr)(unsafe.Pointer(_res + 8))) == 0 {
		goto _6
	}

	if _pzErrMsg == 0 {
		goto _7
	}

	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_pzErrMsg)))
	*(*uintptr)(unsafe.Pointer(_pzErrMsg)) = Xsqlite3_mprintf(tls, ts+429 /* "%s" */, *(*uintptr)(unsafe.Pointer(_res + 8)))
_7:
	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_res + 8)))
_6:
	*(*int32)(unsafe.Pointer(_db + 80)) = *(*int32)(unsafe.Pointer(_res + 32))
	return *(*int32)(unsafe.Pointer(_res + 32))

_5:
	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_res + 8)))
	if _rc == int32(0) {
		goto _8
	}

	Xsqlite3_free_table(tls, (*(*uintptr)(unsafe.Pointer(_res)))+8)
	return _rc

_8:
	if (*(*uint32)(unsafe.Pointer(_res + 16))) <= (*(*uint32)(unsafe.Pointer(_res + 28))) {
		goto _9
	}

	_azNew = Xsqlite3_realloc64(tls, *(*uintptr)(unsafe.Pointer(_res)), uint64(uint64(8)*uint64(*(*uint32)(unsafe.Pointer(_res + 28)))))
	if _azNew != 0 {
		goto _10
	}

	Xsqlite3_free_table(tls, (*(*uintptr)(unsafe.Pointer(_res)))+8)
	*(*int32)(unsafe.Pointer(_db + 80)) = int32(7)
	return int32(7)

_10:
	*(*uintptr)(unsafe.Pointer(_res)) = _azNew
_9:
	*(*uintptr)(unsafe.Pointer(_pazResult)) = (*(*uintptr)(unsafe.Pointer(_res))) + 8
	if _pnColumn == 0 {
		goto _11
	}

	*(*int32)(unsafe.Pointer(_pnColumn)) = int32(*(*uint32)(unsafe.Pointer(_res + 24)))
_11:
	if _pnRow == 0 {
		goto _12
	}

	*(*int32)(unsafe.Pointer(_pnRow)) = int32(*(*uint32)(unsafe.Pointer(_res + 20)))
_12:
	return _rc
}

// Xsqlite3_last_insert_rowid is defined at sqlite3.c:142899:25
func Xsqlite3_last_insert_rowid(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */) (r int64) {
	return *(*int64)(unsafe.Pointer(_db + 56))
}

// Xsqlite3_libversion_number is defined at sqlite3.c:142039:16
func Xsqlite3_libversion_number(tls crt.TLS) (r int32) {
	return int32(3021000)
}

// Xsqlite3_open16 is defined at sqlite3.c:145143:16
func Xsqlite3_open16(tls crt.TLS, _zFilename uintptr /* *void */, _ppDb uintptr /* **Tsqlite3 = Ssqlite3 */) (r int32) {
	var (
		_zFilename8 uintptr // *int8
		_pVal       uintptr // *Tsqlite3_value = Ssqlite3_value
		_rc         int32
	)
	*(*uintptr)(unsafe.Pointer(_ppDb)) = null
	_rc = Xsqlite3_initialize(tls)
	if _rc == 0 {
		goto _1
	}

	return _rc

_1:
	if _zFilename != 0 {
		goto _2
	}

	_zFilename = ts + 21013 /* "\x00\x00" */
_2:
	_pVal = _314sqlite3ValueNew(tls, null)
	_316sqlite3ValueSetStr(tls, _pVal, int32(-1), _zFilename, uint8(2), null)
	_zFilename8 = _289sqlite3ValueText(tls, _pVal, uint8(1))
	if _zFilename8 == 0 {
		goto _3
	}

	_rc = _121openDatabase(tls, _zFilename8, _ppDb, uint32(6), null)

	if _rc != int32(0) || (int32(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_ppDb)) + 32)) + 24))) + 114)))&int32(0x1)) == int32(0x1) {
		goto _5
	}

	*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_ppDb)) + 32)) + 24))) + 113)) = set23(&*(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_ppDb)) + 94)), uint8(2))
_5:
	goto _4

_3:
	_rc = int32(7)
_4:
	_371sqlite3ValueFree(tls, _pVal)
	return _rc & int32(0xff)
}

// Xsqlite3_prepare is defined at sqlite3.c:117528:16
func Xsqlite3_prepare(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _zSql uintptr /* *int8 */, _nBytes int32, _ppStmt uintptr /* **Tsqlite3_stmt = Ssqlite3_stmt */, _pzTail uintptr /* **int8 */) (r int32) {
	var _rc int32

	_rc = _190sqlite3LockAndPrepare(tls, _db, _zSql, _nBytes, uint32(0), null, _ppStmt, _pzTail)

	return _rc
}

// Xsqlite3_prepare16 is defined at sqlite3.c:117644:16
func Xsqlite3_prepare16(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _zSql uintptr /* *void */, _nBytes int32, _ppStmt uintptr /* **Tsqlite3_stmt = Ssqlite3_stmt */, _pzTail uintptr /* **void */) (r int32) {
	var _rc int32

	_rc = _1064sqlite3Prepare16(tls, _db, _zSql, _nBytes, uint32(0), _ppStmt, _pzTail)

	return _rc
}

// Xsqlite3_profile is defined at sqlite3.c:143869:17
func Xsqlite3_profile(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _xProfile uintptr /* *func(crt.TLS, uintptr, uintptr, uint64) */, _pArg uintptr /* *void */) (r uintptr /* *void */) {
	var _pOld uintptr // *void

	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	_pOld = *(*uintptr)(unsafe.Pointer(_db + 240))
	*(*uintptr)(unsafe.Pointer(_db + 232)) = _xProfile
	*(*uintptr)(unsafe.Pointer(_db + 240)) = _pArg
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	return _pOld
}

// Xsqlite3_progress_handler is defined at sqlite3.c:143526:17
func Xsqlite3_progress_handler(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _nOps int32, _xProgress uintptr /* *func(crt.TLS, uintptr) int32 */, _pArg uintptr /* *void */) {
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	if _nOps <= int32(0) {
		goto _1
	}

	*(*uintptr)(unsafe.Pointer(_db + 424)) = _xProgress
	*(*uint32)(unsafe.Pointer(_db + 440)) = uint32(_nOps)
	*(*uintptr)(unsafe.Pointer(_db + 432)) = _pArg
	goto _2

_1:
	*(*uintptr)(unsafe.Pointer(_db + 424)) = null
	*(*uint32)(unsafe.Pointer(_db + 440)) = uint32(0)
	*(*uintptr)(unsafe.Pointer(_db + 432)) = null
_2:
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
}

// Xsqlite3_result_double is defined at sqlite3.c:77270:17
func Xsqlite3_result_double(tls crt.TLS, _pCtx uintptr /* *Tsqlite3_context = Ssqlite3_context */, _rVal float64) {
	_610sqlite3VdbeMemSetDouble(tls, *(*uintptr)(unsafe.Pointer(_pCtx)), _rVal)
}

// Xsqlite3_result_error16 is defined at sqlite3.c:77281:17
func Xsqlite3_result_error16(tls crt.TLS, _pCtx uintptr /* *Tsqlite3_context = Ssqlite3_context */, _z uintptr /* *void */, _n int32) {
	*(*int32)(unsafe.Pointer(_pCtx + 36)) = int32(1)
	*(*uint8)(unsafe.Pointer(_pCtx + 41)) = uint8(1)
	_395sqlite3VdbeMemSetStr(tls, *(*uintptr)(unsafe.Pointer(_pCtx)), _z, _n, uint8(2), uintptr(18446744073709551615))
}

// Xsqlite3_result_int is defined at sqlite3.c:77288:17
func Xsqlite3_result_int(tls crt.TLS, _pCtx uintptr /* *Tsqlite3_context = Ssqlite3_context */, _iVal int32) {
	_527sqlite3VdbeMemSetInt64(tls, *(*uintptr)(unsafe.Pointer(_pCtx)), int64(_iVal))
}

// Xsqlite3_result_null is defined at sqlite3.c:77296:17
func Xsqlite3_result_null(tls crt.TLS, _pCtx uintptr /* *Tsqlite3_context = Ssqlite3_context */) {
	_643sqlite3VdbeMemSetNull(tls, *(*uintptr)(unsafe.Pointer(_pCtx)))
}

// Xsqlite3_result_text16 is defined at sqlite3.c:77344:17
func Xsqlite3_result_text16(tls crt.TLS, _pCtx uintptr /* *Tsqlite3_context = Ssqlite3_context */, _z uintptr /* *void */, _n int32, _xDel uintptr /* *func(crt.TLS, uintptr) */) {
	_297setResultStrOrError(tls, _pCtx, _z, _n, uint8(2), _xDel)
}

// Xsqlite3_result_text16be is defined at sqlite3.c:77353:17
func Xsqlite3_result_text16be(tls crt.TLS, _pCtx uintptr /* *Tsqlite3_context = Ssqlite3_context */, _z uintptr /* *void */, _n int32, _xDel uintptr /* *func(crt.TLS, uintptr) */) {
	_297setResultStrOrError(tls, _pCtx, _z, _n, uint8(3), _xDel)
}

// Xsqlite3_result_text16le is defined at sqlite3.c:77362:17
func Xsqlite3_result_text16le(tls crt.TLS, _pCtx uintptr /* *Tsqlite3_context = Ssqlite3_context */, _z uintptr /* *void */, _n int32, _xDel uintptr /* *func(crt.TLS, uintptr) */) {
	_297setResultStrOrError(tls, _pCtx, _z, _n, uint8(2), _xDel)
}

// Xsqlite3_rollback_hook is defined at sqlite3.c:143947:17
func Xsqlite3_rollback_hook(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _xCallback uintptr /* *func(crt.TLS, uintptr) */, _pArg uintptr /* *void */) (r uintptr /* *void */) {
	var _pRet uintptr // *void

	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	_pRet = *(*uintptr)(unsafe.Pointer(_db + 264))
	*(*uintptr)(unsafe.Pointer(_db + 272)) = _xCallback
	*(*uintptr)(unsafe.Pointer(_db + 264)) = _pArg
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	return _pRet
}

// Xsqlite3_set_auxdata is defined at sqlite3.c:77775:17
func Xsqlite3_set_auxdata(tls crt.TLS, _pCtx uintptr /* *Tsqlite3_context = Ssqlite3_context */, _iArg int32, _pAux uintptr /* *void */, _xDelete uintptr /* *func(crt.TLS, uintptr) */) {
	var (
		_pAuxData uintptr // *TAuxData = SAuxData
		_pVdbe    uintptr // *TVdbe = SVdbe
	)
	_pVdbe = *(*uintptr)(unsafe.Pointer(_pCtx + 24))

	_pAuxData = *(*uintptr)(unsafe.Pointer(_pVdbe + 280))
_1:
	if _pAuxData == 0 {
		goto _3
	}

	if (*(*int32)(unsafe.Pointer(_pAuxData + 4))) != _iArg || (*(*int32)(unsafe.Pointer(_pAuxData))) != (*(*int32)(unsafe.Pointer(_pCtx + 32))) && _iArg >= int32(0) {
		goto _4
	}

	goto _3

_4:
	_pAuxData = *(*uintptr)(unsafe.Pointer(_pAuxData + 24))
	goto _1

_3:
	if _pAuxData != 0 {
		goto _5
	}

	_pAuxData = _295sqlite3DbMallocZero(tls, *(*uintptr)(unsafe.Pointer(_pVdbe)), uint64(32))
	if _pAuxData != 0 {
		goto _7
	}

	goto _failed

_7:
	*(*int32)(unsafe.Pointer(_pAuxData)) = *(*int32)(unsafe.Pointer(_pCtx + 32))
	*(*int32)(unsafe.Pointer(_pAuxData + 4)) = _iArg
	*(*uintptr)(unsafe.Pointer(_pAuxData + 24)) = *(*uintptr)(unsafe.Pointer(_pVdbe + 280))
	*(*uintptr)(unsafe.Pointer(_pVdbe + 280)) = _pAuxData
	if int32(*(*uint8)(unsafe.Pointer(_pCtx + 41))) != int32(0) {
		goto _8
	}

	*(*int32)(unsafe.Pointer(_pCtx + 36)) = int32(0)
	*(*uint8)(unsafe.Pointer(_pCtx + 41)) = uint8(1)
_8:
	goto _6

_5:
	if (*(*uintptr)(unsafe.Pointer(_pAuxData + 16))) == 0 {
		goto _9
	}

	fn16(*(*uintptr)(unsafe.Pointer(_pAuxData + 16)))(tls, *(*uintptr)(unsafe.Pointer(_pAuxData + 8)))
_9:
_6:
	*(*uintptr)(unsafe.Pointer(_pAuxData + 8)) = _pAux
	*(*uintptr)(unsafe.Pointer(_pAuxData + 16)) = _xDelete
	return

	goto _failed
_failed:
	if _xDelete == 0 {
		goto _10
	}

	fn16(_xDelete)(tls, _pAux)
_10:
}

// Xsqlite3_thread_cleanup is defined at sqlite3.c:145367:17
func Xsqlite3_thread_cleanup(tls crt.TLS) {
}

// Xsqlite3_trace is defined at sqlite3.c:143818:17
func Xsqlite3_trace(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _xTrace uintptr /* *func(crt.TLS, uintptr, uintptr) */, _pArg uintptr /* *void */) (r uintptr /* *void */) {
	var _pOld uintptr // *void

	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	_pOld = *(*uintptr)(unsafe.Pointer(_db + 224))
	*(*uint8)(unsafe.Pointer(_db + 104)) = uint8(func() int32 {
		if _xTrace != 0 {
			return int32(0x80)
		}
		return int32(0)
	}())
	*(*uintptr)(unsafe.Pointer(_db + 216)) = _xTrace
	*(*uintptr)(unsafe.Pointer(_db + 224)) = _pArg
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	return _pOld
}

// Xsqlite3_transfer_bindings is defined at sqlite3.c:78487:16
func Xsqlite3_transfer_bindings(tls crt.TLS, _pFromStmt uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */, _pToStmt uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */) (r int32) {
	var (
		_pFrom uintptr // *TVdbe = SVdbe
		_pTo   uintptr // *TVdbe = SVdbe
	)
	_pFrom = _pFromStmt
	_pTo = _pToStmt
	if int32(*(*int16)(unsafe.Pointer(_pFrom + 32))) == int32(*(*int16)(unsafe.Pointer(_pTo + 32))) {
		goto _1
	}

	return int32(1)

_1:
	if (*(*uint32)(unsafe.Pointer(_pTo + 268))) == 0 {
		goto _2
	}

	set42b(&(*(*uint16)(unsafe.Pointer(_pTo + 194))), uint32(1))
_2:
	if (*(*uint32)(unsafe.Pointer(_pFrom + 268))) == 0 {
		goto _3
	}

	set42b(&(*(*uint16)(unsafe.Pointer(_pFrom + 194))), uint32(1))
_3:
	return _391sqlite3TransferBindings(tls, _pFromStmt, _pToStmt)
}

// Xsqlite3_update_hook is defined at sqlite3.c:143922:17
func Xsqlite3_update_hook(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _xCallback uintptr /* *func(crt.TLS, uintptr, int32, uintptr, uintptr, int64) */, _pArg uintptr /* *void */) (r uintptr /* *void */) {
	var _pRet uintptr // *void

	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	_pRet = *(*uintptr)(unsafe.Pointer(_db + 280))
	*(*uintptr)(unsafe.Pointer(_db + 288)) = _xCallback
	*(*uintptr)(unsafe.Pointer(_db + 280)) = _pArg
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	return _pRet
}

// Xsqlite3_user_data is defined at sqlite3.c:77635:17
func Xsqlite3_user_data(tls crt.TLS, _p uintptr /* *Tsqlite3_context = Ssqlite3_context */) (r uintptr /* *void */) {
	return *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 8))) + 8))
}

// Xsqlite3_value_bytes16 is defined at sqlite3.c:77093:16
func Xsqlite3_value_bytes16(tls crt.TLS, _pVal uintptr /* *Tsqlite3_value = Ssqlite3_value */) (r int32) {
	return _443sqlite3ValueBytes(tls, _pVal, uint8(2))
}

// Xsqlite3_value_numeric_type is defined at sqlite3.c:79392:16
func Xsqlite3_value_numeric_type(tls crt.TLS, _pVal uintptr /* *Tsqlite3_value = Ssqlite3_value */) (r int32) {
	var (
		_eType int32
		_pMem  uintptr // *TMem = Ssqlite3_value
	)
	_eType = Xsqlite3_value_type(tls, _pVal)
	if _eType != int32(3) {
		goto _1
	}

	_pMem = _pVal
	_660applyNumericAffinity(tls, _pMem, int32(0))
	_eType = Xsqlite3_value_type(tls, _pVal)
_1:
	return _eType
}

// Xsqlite3_value_text16 is defined at sqlite3.c:77126:23
func Xsqlite3_value_text16(tls crt.TLS, _pVal uintptr /* *Tsqlite3_value = Ssqlite3_value */) (r uintptr /* *void */) {
	return _289sqlite3ValueText(tls, _pVal, uint8(2))
}

// Xsqlite3_value_text16be is defined at sqlite3.c:77129:23
func Xsqlite3_value_text16be(tls crt.TLS, _pVal uintptr /* *Tsqlite3_value = Ssqlite3_value */) (r uintptr /* *void */) {
	return _289sqlite3ValueText(tls, _pVal, uint8(3))
}

// Xsqlite3_value_text16le is defined at sqlite3.c:77132:23
func Xsqlite3_value_text16le(tls crt.TLS, _pVal uintptr /* *Tsqlite3_value = Ssqlite3_value */) (r uintptr /* *void */) {
	return _289sqlite3ValueText(tls, _pVal, uint8(2))
}

// Xsqlite3_prepare16_v2 is defined at sqlite3.c:117656:16
func Xsqlite3_prepare16_v2(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _zSql uintptr /* *void */, _nBytes int32, _ppStmt uintptr /* **Tsqlite3_stmt = Ssqlite3_stmt */, _pzTail uintptr /* **void */) (r int32) {
	var _rc int32

	_rc = _1064sqlite3Prepare16(tls, _db, _zSql, _nBytes, uint32(0x80), _ppStmt, _pzTail)

	return _rc
}

// Xsqlite3_clear_bindings is defined at sqlite3.c:77052:16
func Xsqlite3_clear_bindings(tls crt.TLS, _pStmt uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */) (r int32) {
	var (
		_i     int32
		_rc    int32
		_p     uintptr // *TVdbe = SVdbe
		_mutex uintptr // *Tsqlite3_mutex = Ssqlite3_mutex
	)
	_rc = int32(0)
	_p = _pStmt
	_mutex = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pStmt))) + 24))
	Xsqlite3_mutex_enter(tls, _mutex)
	_i = int32(0)
_1:
	if _i >= int32(*(*int16)(unsafe.Pointer(_p + 32))) {
		goto _3
	}

	_397sqlite3VdbeMemRelease(tls, (*(*uintptr)(unsafe.Pointer(_p + 160)))+56*uintptr(_i))
	*(*uint16)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_p + 160))) + 56*uintptr(_i)) + 8)) = uint16(0x1)
	_i++
	goto _1

_3:
	if (*(*uint32)(unsafe.Pointer(_p + 268))) == 0 {
		goto _4
	}

	set42b(&(*(*uint16)(unsafe.Pointer(_p + 194))), uint32(1))
_4:
	Xsqlite3_mutex_leave(tls, _mutex)
	return _rc
}

// Xsqlite3_create_module_v2 is defined at sqlite3.c:126425:16
func Xsqlite3_create_module_v2(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _zName uintptr /* *int8 */, _pModule uintptr /* *Tsqlite3_module = Ssqlite3_module */, _pAux uintptr /* *void */, _xDestroy uintptr /* *func(crt.TLS, uintptr) */) (r int32) {
	return _530createModule(tls, _db, _zName, _pModule, _pAux, _xDestroy)
}

// Xsqlite3_bind_zeroblob is defined at sqlite3.c:78398:16
func Xsqlite3_bind_zeroblob(tls crt.TLS, _pStmt uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */, _i int32, _n int32) (r int32) {
	var (
		_rc int32
		_p  uintptr // *TVdbe = SVdbe
	)
	_p = _pStmt
	_rc = _200vdbeUnbind(tls, _p, _i)
	if _rc != int32(0) {
		goto _1
	}

	_1065sqlite3VdbeMemSetZeroBlob(tls, (*(*uintptr)(unsafe.Pointer(_p + 160)))+56*uintptr(_i-int32(1)), _n)
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p))) + 24)))
_1:
	return _rc
}

// Xsqlite3_blob_bytes is defined at sqlite3.c:86865:16
func Xsqlite3_blob_bytes(tls crt.TLS, _pBlob uintptr /* *Tsqlite3_blob = Ssqlite3_blob */) (r int32) {
	var _p uintptr // *TIncrblob = SIncrblob

	_p = _pBlob
	if (_p != 0) && ((*(*uintptr)(unsafe.Pointer(_p + 24))) != 0) {
		return *(*int32)(unsafe.Pointer(_p))
	}

	return int32(0)
}

// Xsqlite3_blob_close is defined at sqlite3.c:86755:16
func Xsqlite3_blob_close(tls crt.TLS, _pBlob uintptr /* *Tsqlite3_blob = Ssqlite3_blob */) (r int32) {
	var (
		_p  uintptr // *TIncrblob = SIncrblob
		_rc int32
		_db uintptr // *Tsqlite3 = Ssqlite3
	)
	_p = _pBlob
	if _p == 0 {
		goto _1
	}

	_db = *(*uintptr)(unsafe.Pointer(_p + 32))
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	_rc = Xsqlite3_finalize(tls, *(*uintptr)(unsafe.Pointer(_p + 24)))
	_181sqlite3DbFree(tls, _db, _p)
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	goto _2

_1:
	_rc = int32(0)
_2:
	return _rc
}

// Xsqlite3_blob_open is defined at sqlite3.c:86522:16
func Xsqlite3_blob_open(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _zDb uintptr /* *int8 */, _zTable uintptr /* *int8 */, _zColumn uintptr /* *int8 */, _iRow int64, _wrFlag int32, _ppBlob uintptr /* **Tsqlite3_blob = Ssqlite3_blob */) (r int32) {
	esc := crt.MustMalloc(608)
	var (
		_nAttempt int32
		_iCol     int32
		_rc       int32
		_zErr     = esc      // **int8
		_pTab     uintptr    // *TTable = STable
		_pBlob    uintptr    // *TIncrblob = SIncrblob
		_sParse   = esc + 16 // *TParse = SParse
		_zFault   uintptr    // *int8
		_pIdx     uintptr    // *TIndex = SIndex
		_pFKey    uintptr    // *TFKey = SFKey
		_j        int32
		_1j       int32
		_v        uintptr // *TVdbe = SVdbe
		_iDb      int32
		_aOp      uintptr // *TVdbeOp = SVdbeOp
	)
	defer crt.Free(esc)
	_nAttempt = int32(0)
	_rc = int32(0)
	*(*uintptr)(unsafe.Pointer(_zErr)) = 0
	_pBlob = 0
	*(*uintptr)(unsafe.Pointer(_ppBlob)) = null
	_wrFlag = bool2int(_wrFlag != 0)
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	_pBlob = _295sqlite3DbMallocZero(tls, _db, uint64(56))
_1:
	crt.Xmemset(tls, _sParse, int32(0), uint64(592))
	if _pBlob != 0 {
		goto _4
	}

	goto _blob_open_out

_4:
	*(*uintptr)(unsafe.Pointer(_sParse)) = _db
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_zErr)))
	*(*uintptr)(unsafe.Pointer(_zErr)) = null
	_219sqlite3BtreeEnterAll(tls, _db)
	_pTab = _1068sqlite3LocateTable(tls, _sParse, uint32(0), _zTable, _zDb)
	if _pTab == 0 || *(*int32)(unsafe.Pointer(_pTab + 84)) == 0 {
		goto _5
	}

	_pTab = null
	_550sqlite3ErrorMsg(tls, _sParse, ts+21016 /* "cannot open virtual table: %s" */, _zTable)
_5:
	if _pTab == 0 || ((*(*uint32)(unsafe.Pointer(_pTab + 64)))&uint32(0x20)) == uint32(0) {
		goto _6
	}

	_pTab = null
	_550sqlite3ErrorMsg(tls, _sParse, ts+21046 /* "cannot open table without rowid:..." */, _zTable)
_6:
	if _pTab == 0 || (*(*uintptr)(unsafe.Pointer(_pTab + 24))) == 0 {
		goto _7
	}

	_pTab = null
	_550sqlite3ErrorMsg(tls, _sParse, ts+21082 /* "cannot open view: %s" */, _zTable)
_7:
	if _pTab != 0 {
		goto _8
	}

	if (*(*uintptr)(unsafe.Pointer(_sParse + 8))) == 0 {
		goto _9
	}

	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_zErr)))
	*(*uintptr)(unsafe.Pointer(_zErr)) = *(*uintptr)(unsafe.Pointer(_sParse + 8))
	*(*uintptr)(unsafe.Pointer(_sParse + 8)) = null
_9:
	_rc = int32(1)
	_225sqlite3BtreeLeaveAll(tls, _db)
	goto _blob_open_out

_8:
	*(*uintptr)(unsafe.Pointer(_pBlob + 48)) = _pTab
	*(*uintptr)(unsafe.Pointer(_pBlob + 40)) = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_1069sqlite3SchemaToIndex(tls, _db, *(*uintptr)(unsafe.Pointer(_pTab + 112))))))
	_iCol = int32(0)
_10:
	if _iCol >= int32(*(*int16)(unsafe.Pointer(_pTab + 70))) {
		goto _12
	}

	if _110sqlite3StrICmp(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTab + 8))) + 32*uintptr(_iCol))), _zColumn) != int32(0) {
		goto _13
	}

	goto _12

_13:
	_iCol++
	goto _10

_12:
	if _iCol != int32(*(*int16)(unsafe.Pointer(_pTab + 70))) {
		goto _14
	}

	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_zErr)))
	*(*uintptr)(unsafe.Pointer(_zErr)) = _226sqlite3MPrintf(tls, _db, ts+21103 /* "no such column: \"%s\"" */, _zColumn)
	_rc = int32(1)
	_225sqlite3BtreeLeaveAll(tls, _db)
	goto _blob_open_out

_14:
	if _wrFlag == 0 {
		goto _15
	}

	_zFault = 0
	if ((*(*uint32)(unsafe.Pointer(_db + 48))) & uint32(0x4000)) == 0 {
		goto _16
	}

	_pFKey = *(*uintptr)(unsafe.Pointer(_pTab + 32))
_17:
	if _pFKey == 0 {
		goto _19
	}

	_j = int32(0)
_20:
	if _j >= (*(*int32)(unsafe.Pointer(_pFKey + 40))) {
		goto _22
	}

	if (*(*int32)(unsafe.Pointer((_pFKey + 64) + 16*uintptr(_j)))) != _iCol {
		goto _23
	}

	_zFault = ts + 21124 /* "foreign key" */
_23:
	_j++
	goto _20

_22:
	_pFKey = *(*uintptr)(unsafe.Pointer(_pFKey + 8))
	goto _17

_19:
_16:
	_pIdx = *(*uintptr)(unsafe.Pointer(_pTab + 16))
_24:
	if _pIdx == 0 {
		goto _26
	}

	_1j = int32(0)
_27:
	if _1j >= int32(*(*uint16)(unsafe.Pointer(_pIdx + 94))) {
		goto _29
	}

	if int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 8))) + 2*uintptr(_1j)))) != _iCol && int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 8))) + 2*uintptr(_1j)))) != int32(-2) {
		goto _30
	}

	_zFault = ts + 21136 /* "indexed" */
_30:
	_1j++
	goto _27

_29:
	_pIdx = *(*uintptr)(unsafe.Pointer(_pIdx + 40))
	goto _24

_26:
	if _zFault == 0 {
		goto _31
	}

	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_zErr)))
	*(*uintptr)(unsafe.Pointer(_zErr)) = _226sqlite3MPrintf(tls, _db, ts+21144 /* "cannot open %s column for writin..." */, _zFault)
	_rc = int32(1)
	_225sqlite3BtreeLeaveAll(tls, _db)
	goto _blob_open_out

_31:
_15:
	*(*uintptr)(unsafe.Pointer(_pBlob + 24)) = _1070sqlite3VdbeCreate(tls, _sParse)

	if (*(*uintptr)(unsafe.Pointer(_pBlob + 24))) == 0 {
		goto _32
	}

	_v = *(*uintptr)(unsafe.Pointer(_pBlob + 24))
	_iDb = _1069sqlite3SchemaToIndex(tls, _db, *(*uintptr)(unsafe.Pointer(_pTab + 112)))
	_1071sqlite3VdbeAddOp4Int(tls, _v, int32(2), _iDb, _wrFlag, *(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pTab + 112)))), *(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTab + 112))) + 4)))
	_1072sqlite3VdbeChangeP5(tls, _v, uint16(1))

	_aOp = _1073sqlite3VdbeAddOpList(tls, _v, int32(6), _1067openBlob, _1066iLn)
	_1074sqlite3VdbeUsesBtree(tls, _v, _iDb)
	if int32(*(*uint8)(unsafe.Pointer(_db + 97))) != int32(0) {
		goto _33
	}

	*(*int32)(unsafe.Pointer(_aOp + 4)) = _iDb
	*(*int32)(unsafe.Pointer(_aOp + 8)) = *(*int32)(unsafe.Pointer(_pTab + 56))
	*(*int32)(unsafe.Pointer(_aOp + 12)) = _wrFlag
	_1075sqlite3VdbeChangeP4(tls, _v, int32(2), *(*uintptr)(unsafe.Pointer(_pTab)), int32(0))
_33:
	if int32(*(*uint8)(unsafe.Pointer(_db + 97))) != int32(0) {
		goto _34
	}

	if _wrFlag == 0 {
		goto _35
	}

	*(*uint8)(unsafe.Pointer(_aOp + 24)) = uint8(105)
_35:
	*(*int32)(unsafe.Pointer((_aOp + 24) + 8)) = *(*int32)(unsafe.Pointer(_pTab + 56))
	*(*int32)(unsafe.Pointer((_aOp + 24) + 12)) = _iDb
	*(*int8)(unsafe.Pointer((_aOp + 24) + 1)) = int8(-3)
	*(*int32)(unsafe.Pointer((_aOp + 24) + 16)) = int32(*(*int16)(unsafe.Pointer(_pTab + 70))) + int32(1)
	*(*int32)(unsafe.Pointer((_aOp + 72) + 8)) = int32(*(*int16)(unsafe.Pointer(_pTab + 70)))
	*(*int16)(unsafe.Pointer(_sParse + 464)) = int16(0)
	*(*int32)(unsafe.Pointer(_sParse + 56)) = int32(1)
	*(*int32)(unsafe.Pointer(_sParse + 52)) = int32(1)
	_1076sqlite3VdbeMakeReady(tls, _v, _sParse)
_34:
_32:
	*(*uint16)(unsafe.Pointer(_pBlob + 8)) = uint16(_iCol)
	*(*uintptr)(unsafe.Pointer(_pBlob + 32)) = _db
	_225sqlite3BtreeLeaveAll(tls, _db)
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _36
	}

	goto _blob_open_out

_36:
	_rc = _1077blobSeekToRow(tls, _pBlob, _iRow, _zErr)
	if (preinc2(&_nAttempt) < int32(50)) && (_rc == int32(17)) {
		goto _1
	}

	goto _blob_open_out
_blob_open_out:
	if _rc != int32(0) || int32(*(*uint8)(unsafe.Pointer(_db + 97))) != int32(0) {
		goto _37
	}

	*(*uintptr)(unsafe.Pointer(_ppBlob)) = _pBlob
	goto _38

_37:
	if _pBlob == 0 || (*(*uintptr)(unsafe.Pointer(_pBlob + 24))) == 0 {
		goto _39
	}

	_179sqlite3VdbeFinalize(tls, *(*uintptr)(unsafe.Pointer(_pBlob + 24)))
_39:
	_181sqlite3DbFree(tls, _db, _pBlob)
_38:
	_134sqlite3ErrorWithMsg(tls, _db, _rc, func() uintptr {
		if (*(*uintptr)(unsafe.Pointer(_zErr))) != 0 {
			return ts + 429 /* "%s" */
		}
		return null
	}(), *(*uintptr)(unsafe.Pointer(_zErr)))
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_zErr)))
	_319sqlite3ParserReset(tls, _sParse)
	_rc = _182sqlite3ApiExit(tls, _db, _rc)
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	return _rc
}

// Xsqlite3_blob_read is defined at sqlite3.c:86848:16
func Xsqlite3_blob_read(tls crt.TLS, _pBlob uintptr /* *Tsqlite3_blob = Ssqlite3_blob */, _z uintptr /* *void */, _n int32, _iOffset int32) (r int32) {
	return _1078blobReadWrite(tls, _pBlob, _z, _n, _iOffset, fp149(_1079sqlite3BtreePayloadChecked))
}

// Xsqlite3_blob_write is defined at sqlite3.c:86855:16
func Xsqlite3_blob_write(tls crt.TLS, _pBlob uintptr /* *Tsqlite3_blob = Ssqlite3_blob */, _z uintptr /* *void */, _n int32, _iOffset int32) (r int32) {
	return _1078blobReadWrite(tls, _pBlob, _z, _n, _iOffset, fp149(_1080sqlite3BtreePutData))
}

// Xsqlite3_create_collation_v2 is defined at sqlite3.c:145195:16
func Xsqlite3_create_collation_v2(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _zName uintptr /* *int8 */, _enc int32, _pCtx uintptr /* *void */, _xCompare uintptr /* *func(crt.TLS, uintptr, int32, uintptr, int32, uintptr) int32 */, _xDel uintptr /* *func(crt.TLS, uintptr) */) (r int32) {
	var _rc int32

	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))

	_rc = _277createCollation(tls, _db, _zName, uint8(_enc), _pCtx, _xCompare, _xDel)
	_rc = _182sqlite3ApiExit(tls, _db, _rc)
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	return _rc
}

// Xsqlite3_memory_highwater is defined at sqlite3.c:24990:26
func Xsqlite3_memory_highwater(tls crt.TLS, _resetFlag int32) (r int64) {
	esc := crt.MustMalloc(24)
	var (
		_res = esc      // *Tsqlite3_int64 = Tsqlite_int64 = int64
		_mx  = esc + 16 // *Tsqlite3_int64 = Tsqlite_int64 = int64
	)
	defer crt.Free(esc)
	Xsqlite3_status64(tls, int32(0), _res, _mx, _resetFlag)
	return *(*int64)(unsafe.Pointer(_mx))
}

// Xsqlite3_memory_used is defined at sqlite3.c:24979:26
func Xsqlite3_memory_used(tls crt.TLS) (r int64) {
	esc := crt.MustMalloc(24)
	var (
		_res = esc      // *Tsqlite3_int64 = Tsqlite_int64 = int64
		_mx  = esc + 16 // *Tsqlite3_int64 = Tsqlite_int64 = int64
	)
	defer crt.Free(esc)
	Xsqlite3_status64(tls, int32(0), _res, _mx, int32(0))
	return *(*int64)(unsafe.Pointer(_res))
}

// Xsqlite3_mutex_alloc is defined at sqlite3.c:23447:26
func Xsqlite3_mutex_alloc(tls crt.TLS, _id int32) (r uintptr /* *Tsqlite3_mutex = Ssqlite3_mutex */) {
	if _id > int32(1) || Xsqlite3_initialize(tls) == 0 {
		goto _1
	}

	return null

_1:
	if _id <= int32(1) || _114sqlite3MutexInit(tls) == 0 {
		goto _2
	}

	return null

_2:
	return fn17(*(*uintptr)(unsafe.Pointer((_28sqlite3Config + 112) + 16)))(tls, _id)
}

// Xsqlite3_open_v2 is defined at sqlite3.c:145130:16
func Xsqlite3_open_v2(tls crt.TLS, _filename uintptr /* *int8 */, _ppDb uintptr /* **Tsqlite3 = Ssqlite3 */, _flags int32, _zVfs uintptr /* *int8 */) (r int32) {
	return _121openDatabase(tls, _filename, _ppDb, uint32(_flags), _zVfs)
}

// Xsqlite3_release_memory is defined at sqlite3.c:24853:16
func Xsqlite3_release_memory(tls crt.TLS, _n int32) (r int32) {
	return int32(0)
}

// Xsqlite3_result_error_nomem is defined at sqlite3.c:77411:17
func Xsqlite3_result_error_nomem(tls crt.TLS, _pCtx uintptr /* *Tsqlite3_context = Ssqlite3_context */) {
	_643sqlite3VdbeMemSetNull(tls, *(*uintptr)(unsafe.Pointer(_pCtx)))
	*(*int32)(unsafe.Pointer(_pCtx + 36)) = int32(7)
	*(*uint8)(unsafe.Pointer(_pCtx + 41)) = uint8(1)
	_178sqlite3OomFault(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pCtx))) + 40)))
}

// Xsqlite3_soft_heap_limit is defined at sqlite3.c:24932:17
func Xsqlite3_soft_heap_limit(tls crt.TLS, _n int32) {
	if _n >= int32(0) {
		goto _1
	}

	_n = int32(0)
_1:
	Xsqlite3_soft_heap_limit64(tls, int64(_n))
}

// Xsqlite3_vfs_unregister is defined at sqlite3.c:21101:16
func Xsqlite3_vfs_unregister(tls crt.TLS, _pVfs uintptr /* *Tsqlite3_vfs = Ssqlite3_vfs */) (r int32) {
	var _mutex uintptr // *Tsqlite3_mutex = Ssqlite3_mutex

	_mutex = _35sqlite3MutexAlloc(tls, int32(2))
	Xsqlite3_mutex_enter(tls, _mutex)
	_37vfsUnlink(tls, _pVfs)
	Xsqlite3_mutex_leave(tls, _mutex)
	return int32(0)
}

// Xsqlite3_threadsafe is defined at sqlite3.c:142045:16
func Xsqlite3_threadsafe(tls crt.TLS) (r int32) {
	return int32(1)
}

// Xsqlite3_result_zeroblob is defined at sqlite3.c:77376:17
func Xsqlite3_result_zeroblob(tls crt.TLS, _pCtx uintptr /* *Tsqlite3_context = Ssqlite3_context */, _n int32) {
	_1065sqlite3VdbeMemSetZeroBlob(tls, *(*uintptr)(unsafe.Pointer(_pCtx)), _n)
}

// Xsqlite3_result_error_code is defined at sqlite3.c:77389:17
func Xsqlite3_result_error_code(tls crt.TLS, _pCtx uintptr /* *Tsqlite3_context = Ssqlite3_context */, _errCode int32) {
	*(*int32)(unsafe.Pointer(_pCtx + 36)) = _errCode
	*(*uint8)(unsafe.Pointer(_pCtx + 41)) = uint8(1)
	if (int32(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pCtx))) + 8))) & int32(0x1)) == 0 {
		goto _1
	}

	_395sqlite3VdbeMemSetStr(tls, *(*uintptr)(unsafe.Pointer(_pCtx)), _123sqlite3ErrStr(tls, _errCode), int32(-1), uint8(1), null)
_1:
}

// Xsqlite3_extended_result_codes is defined at sqlite3.c:145509:16
func Xsqlite3_extended_result_codes(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _onoff int32) (r int32) {
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	*(*int32)(unsafe.Pointer(_db + 84)) = int32(func() uint32 {
		if _onoff != 0 {
			return uint32(0xffffffff)
		}
		return uint32(0xff)
	}())
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	return int32(0)
}

// Xsqlite3_next_stmt is defined at sqlite3.c:78537:25
func Xsqlite3_next_stmt(tls crt.TLS, _pDb uintptr /* *Tsqlite3 = Ssqlite3 */, _pStmt uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */) (r uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */) {
	var _pNext uintptr // *Tsqlite3_stmt = Ssqlite3_stmt

	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_pDb + 24)))
	if _pStmt != 0 {
		goto _1
	}

	_pNext = *(*uintptr)(unsafe.Pointer(_pDb + 8))
	goto _2

_1:
	_pNext = *(*uintptr)(unsafe.Pointer(_pStmt + 16))
_2:
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_pDb + 24)))
	return _pNext
}

// Xsqlite3_status is defined at sqlite3.c:19219:16
func Xsqlite3_status(tls crt.TLS, _op int32, _pCurrent uintptr /* *int32 */, _pHighwater uintptr /* *int32 */, _resetFlag int32) (r int32) {
	esc := crt.MustMalloc(24)
	var (
		_iCur  = esc      // *Tsqlite3_int64 = Tsqlite_int64 = int64
		_iHwtr = esc + 16 // *Tsqlite3_int64 = Tsqlite_int64 = int64
		_rc    int32
	)
	defer crt.Free(esc)
	*(*int64)(unsafe.Pointer(_iCur)) = int64(0)
	*(*int64)(unsafe.Pointer(_iHwtr)) = int64(0)
	_rc = Xsqlite3_status64(tls, _op, _iCur, _iHwtr, _resetFlag)
	if _rc != int32(0) {
		goto _1
	}

	*(*int32)(unsafe.Pointer(_pCurrent)) = int32(*(*int64)(unsafe.Pointer(_iCur)))
	*(*int32)(unsafe.Pointer(_pHighwater)) = int32(*(*int64)(unsafe.Pointer(_iHwtr)))
_1:
	return _rc
}

// Xsqlite3_backup_pagecount is defined at sqlite3.c:70283:16
func Xsqlite3_backup_pagecount(tls crt.TLS, _p uintptr /* *Tsqlite3_backup = Ssqlite3_backup */) (r int32) {
	return int32(*(*uint32)(unsafe.Pointer(_p + 56)))
}

// Xsqlite3_backup_remaining is defined at sqlite3.c:70269:16
func Xsqlite3_backup_remaining(tls crt.TLS, _p uintptr /* *Tsqlite3_backup = Ssqlite3_backup */) (r int32) {
	return int32(*(*uint32)(unsafe.Pointer(_p + 52)))
}

// Xsqlite3_compileoption_get is defined at sqlite3.c:146133:23
func Xsqlite3_compileoption_get(tls crt.TLS, _N int32) (r uintptr /* *int8 */) {
	esc := crt.MustMalloc(4)
	var (
		_nOpt         = esc   // *int32
		_azCompileOpt uintptr // **int8
	)
	defer crt.Free(esc)
	_azCompileOpt = _1081sqlite3CompileOptions(tls, _nOpt)
	if _N < int32(0) || _N >= (*(*int32)(unsafe.Pointer(_nOpt))) {
		goto _1
	}

	return *(*uintptr)(unsafe.Pointer(_azCompileOpt + 8*uintptr(_N)))

_1:
	return null
}

// Xsqlite3_compileoption_used is defined at sqlite3.c:146100:16
func Xsqlite3_compileoption_used(tls crt.TLS, _zOptName uintptr /* *int8 */) (r int32) {
	esc := crt.MustMalloc(4)
	var (
		_i            int32
		_n            int32
		_nOpt         = esc   // *int32
		_azCompileOpt uintptr // **int8
	)
	defer crt.Free(esc)
	_azCompileOpt = _1081sqlite3CompileOptions(tls, _nOpt)
	if Xsqlite3_strnicmp(tls, _zOptName, ts+21178 /* "SQLITE_" */, int32(7)) != int32(0) {
		goto _1
	}

	_zOptName += uintptr(7)
_1:
	_n = _211sqlite3Strlen30(tls, _zOptName)
	_i = int32(0)
_2:
	if _i >= (*(*int32)(unsafe.Pointer(_nOpt))) {
		goto _4
	}

	if Xsqlite3_strnicmp(tls, _zOptName, *(*uintptr)(unsafe.Pointer(_azCompileOpt + 8*uintptr(_i))), _n) != int32(0) || _1082sqlite3IsIdChar(tls, uint8(*(*int8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_azCompileOpt + 8*uintptr(_i)))) + uintptr(_n))))) != int32(0) {
		goto _5
	}

	return int32(1)

_5:
	_i++
	goto _2

_4:
	return int32(0)
}

// Xsqlite3_db_config is defined at sqlite3.c:142768:16
func Xsqlite3_db_config(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _op int32, ap ...interface{}) (r int32) {
	var (
		_ap       *[]interface{} // Tva_list = T__gnuc_va_list = T__...a_list = *struct{X_ [2]uintptr;}
		_rc       int32
		_pBuf     uintptr // *void
		_sz       int32
		_cnt      int32
		_i        uint32
		_onoff    int32
		_pRes     uintptr // *int32
		_oldFlags uint32
	)
	{
		x := ap
		_ap = &x
	}
	switch _op {
	case int32(1000):
		goto _2
	case int32(1001):
		goto _3
	default:
		goto _4
	}
_2:
	*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_db + 32)))) = crt.VAuintptr(_ap)
	_rc = int32(0)
	goto _1

_3:
	_pBuf = crt.VAuintptr(_ap)
	_sz = crt.VAint32(_ap)
	_cnt = crt.VAint32(_ap)
	_rc = _286setupLookaside(tls, _db, _pBuf, _sz, _cnt)
	goto _1

_4:
	_rc = int32(1)
	_i = uint32(0)
_5:
	if _i >= uint32(6) {
		goto _7
	}

	if (*(*int32)(unsafe.Pointer(_1083aFlagOp + 8*uintptr(_i)))) != _op {
		goto _8
	}

	_onoff = crt.VAint32(_ap)
	_pRes = crt.VAuintptr(_ap)
	_oldFlags = *(*uint32)(unsafe.Pointer(_db + 48))
	if _onoff <= int32(0) {
		goto _9
	}

	{
		p := &(*(*uint32)(unsafe.Pointer(_db + 48)))
		*p = uint32(uint32(*p) | (*(*uint32)(unsafe.Pointer((_1083aFlagOp + 8*uintptr(_i)) + 4))))
	}
	goto _10

_9:
	if _onoff != int32(0) {
		goto _11
	}

	{
		p := &(*(*uint32)(unsafe.Pointer(_db + 48)))
		*p = uint32(uint32(*p) & (^*(*uint32)(unsafe.Pointer((_1083aFlagOp + 8*uintptr(_i)) + 4))))
	}
_11:
_10:
	if _oldFlags == (*(*uint32)(unsafe.Pointer(_db + 48))) {
		goto _12
	}

	_132sqlite3ExpirePreparedStatements(tls, _db)
_12:
	if _pRes == 0 {
		goto _13
	}

	*(*int32)(unsafe.Pointer(_pRes)) = bool2int(((*(*uint32)(unsafe.Pointer(_db + 48))) & (*(*uint32)(unsafe.Pointer((_1083aFlagOp + 8*uintptr(_i)) + 4)))) != uint32(0))
_13:
	_rc = int32(0)
	goto _7

_8:
	_i++
	goto _5

_7:
	goto _1

_1:
	_ap = nil
	return _rc
}

// Xsqlite3_db_mutex is defined at sqlite3.c:142701:26
func Xsqlite3_db_mutex(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */) (r uintptr /* *Tsqlite3_mutex = Ssqlite3_mutex */) {
	return *(*uintptr)(unsafe.Pointer(_db + 24))
}

// Xsqlite3_soft_heap_limit64 is defined at sqlite3.c:24910:26
func Xsqlite3_soft_heap_limit64(tls crt.TLS, _n int64) (r int64) {
	var (
		_priorLimit int64
		_excess     int64
		_nUsed      int64
		_rc         int32
	)
	_rc = Xsqlite3_initialize(tls)
	if _rc == 0 {
		goto _1
	}

	return int64(-1)

_1:
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_107mem0)))
	_priorLimit = *(*int64)(unsafe.Pointer(_107mem0 + 8))
	if _n >= int64(0) {
		goto _2
	}

	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_107mem0)))
	return _priorLimit

_2:
	*(*int64)(unsafe.Pointer(_107mem0 + 8)) = _n
	_nUsed = _435sqlite3StatusValue(tls, int32(0))
	*(*int32)(unsafe.Pointer(_107mem0 + 16)) = bool2int((_n > int64(0)) && (_n <= _nUsed))
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_107mem0)))
	_excess = Xsqlite3_memory_used(tls) - _n
	if _excess <= int64(0) {
		goto _3
	}

	Xsqlite3_release_memory(tls, int32(_excess&int64(0x7fffffff)))
_3:
	return _priorLimit
}

// Xsqlite3_wal_checkpoint is defined at sqlite3.c:144132:16
func Xsqlite3_wal_checkpoint(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _zDb uintptr /* *int8 */) (r int32) {
	return Xsqlite3_wal_checkpoint_v2(tls, _db, _zDb, int32(0), null, null)
}

// Xsqlite3_blob_reopen is defined at sqlite3.c:86880:16
func Xsqlite3_blob_reopen(tls crt.TLS, _pBlob uintptr /* *Tsqlite3_blob = Ssqlite3_blob */, _iRow int64) (r int32) {
	esc := crt.MustMalloc(8)
	var (
		_rc   int32
		_p    uintptr // *TIncrblob = SIncrblob
		_db   uintptr // *Tsqlite3 = Ssqlite3
		_zErr = esc   // **int8
	)
	defer crt.Free(esc)
	_p = _pBlob
	if _p != 0 {
		goto _1
	}

	return _29sqlite3MisuseError(tls, int32(86885))

_1:
	_db = *(*uintptr)(unsafe.Pointer(_p + 32))
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	if (*(*uintptr)(unsafe.Pointer(_p + 24))) != 0 {
		goto _2
	}

	_rc = int32(4)
	goto _3

_2:
	_rc = _1077blobSeekToRow(tls, _p, _iRow, _zErr)
	if _rc == int32(0) {
		goto _4
	}

	_134sqlite3ErrorWithMsg(tls, _db, _rc, func() uintptr {
		if (*(*uintptr)(unsafe.Pointer(_zErr))) != 0 {
			return ts + 429 /* "%s" */
		}
		return null
	}(), *(*uintptr)(unsafe.Pointer(_zErr)))
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_zErr)))
_4:
_3:
	_rc = _182sqlite3ApiExit(tls, _db, _rc)

	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	return _rc
}

// Xsqlite3_vtab_config is defined at sqlite3.c:127524:16
func Xsqlite3_vtab_config(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _op int32, ap ...interface{}) (r int32) {
	var (
		_ap *[]interface{} // Tva_list = T__gnuc_va_list = T__...a_list = *struct{X_ [2]uintptr;}
		_rc int32
		_p  uintptr // *TVtabCtx = SVtabCtx
	)
	_rc = int32(0)
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	{
		x := ap
		_ap = &x
	}
	switch _op {
	case int32(1):
		goto _2
	default:
		goto _3
	}
_2:
	_p = *(*uintptr)(unsafe.Pointer(_db + 472))
	if _p != 0 {
		goto _4
	}

	_rc = _29sqlite3MisuseError(tls, int32(127537))
	goto _5

_4:
	*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p))) + 28)) = uint8(crt.VAint32(_ap))
_5:
	goto _1

_3:
	_rc = _29sqlite3MisuseError(tls, int32(127545))
	goto _1

_1:
	_ap = nil
	if _rc == int32(0) {
		goto _6
	}

	_136sqlite3Error(tls, _db, _rc)
_6:
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	return _rc
}

// Xsqlite3_vtab_on_conflict is defined at sqlite3.c:127506:16
func Xsqlite3_vtab_on_conflict(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */) (r int32) {
	return int32(*(*uint8)(unsafe.Pointer(_1084aMap + uintptr(int32(*(*uint8)(unsafe.Pointer(_db + 102)))-int32(1)))))
}

// Xsqlite3_close_v2 is defined at sqlite3.c:143092:16
func Xsqlite3_close_v2(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */) (r int32) {
	return _106sqlite3Close(tls, _db, int32(1))
}

// Xsqlite3_db_filename is defined at sqlite3.c:145949:23
func Xsqlite3_db_filename(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _zDbName uintptr /* *int8 */) (r uintptr /* *int8 */) {
	var _pBt uintptr // *TBtree = SBtree

	_pBt = _232sqlite3DbNameToBtree(tls, _db, _zDbName)
	if _pBt != 0 {
		return _1047sqlite3BtreeGetFilename(tls, _pBt)
	}

	return null
}

// Xsqlite3_db_readonly is defined at sqlite3.c:145965:16
func Xsqlite3_db_readonly(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _zDbName uintptr /* *int8 */) (r int32) {
	var _pBt uintptr // *TBtree = SBtree

	_pBt = _232sqlite3DbNameToBtree(tls, _db, _zDbName)
	if _pBt != 0 {
		return _1085sqlite3BtreeIsReadonly(tls, _pBt)
	}

	return int32(-1)
}

// Xsqlite3_db_release_memory is defined at sqlite3.c:142715:16
func Xsqlite3_db_release_memory(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */) (r int32) {
	var (
		_i      int32
		_pBt    uintptr // *TBtree = SBtree
		_pPager uintptr // *TPager = SPager
	)
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	_219sqlite3BtreeEnterAll(tls, _db)
	_i = int32(0)
_1:
	if _i >= (*(*int32)(unsafe.Pointer(_db + 40))) {
		goto _3
	}

	_pBt = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_i)) + 8))
	if _pBt == 0 {
		goto _4
	}

	_pPager = _141sqlite3BtreePager(tls, _pBt)
	_1086sqlite3PagerShrink(tls, _pPager)
_4:
	_i++
	goto _1

_3:
	_225sqlite3BtreeLeaveAll(tls, _db)
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	return int32(0)
}

// Xsqlite3_errstr is defined at sqlite3.c:144321:23
func Xsqlite3_errstr(tls crt.TLS, _rc int32) (r uintptr /* *int8 */) {
	return _123sqlite3ErrStr(tls, _rc)
}

// Xsqlite3_stmt_busy is defined at sqlite3.c:78526:16
func Xsqlite3_stmt_busy(tls crt.TLS, _pStmt uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */) (r int32) {
	var _v uintptr // *TVdbe = SVdbe

	_v = _pStmt
	return bool2int(((_v != 0) && ((*(*uint32)(unsafe.Pointer(_v + 36))) == uint32(0x2df20da3))) && ((*(*int32)(unsafe.Pointer(_v + 52))) >= int32(0)))
}

// Xsqlite3_uri_boolean is defined at sqlite3.c:145915:16
func Xsqlite3_uri_boolean(tls crt.TLS, _zFilename uintptr /* *int8 */, _zParam uintptr /* *int8 */, _bDflt int32) (r int32) {
	var _z uintptr // *int8

	_z = Xsqlite3_uri_parameter(tls, _zFilename, _zParam)
	_bDflt = bool2int(_bDflt != int32(0))
	if _z != 0 {
		return int32(_1087sqlite3GetBoolean(tls, _z, uint8(_bDflt)))
	}

	return _bDflt
}

// Xsqlite3_uri_int64 is defined at sqlite3.c:145924:26
func Xsqlite3_uri_int64(tls crt.TLS, _zFilename uintptr /* *int8 */, _zParam uintptr /* *int8 */, _bDflt int64) (r int64) {
	esc := crt.MustMalloc(8)
	var (
		_z uintptr // *int8
		_v = esc   // *Tsqlite3_int64 = Tsqlite_int64 = int64
	)
	defer crt.Free(esc)
	_z = Xsqlite3_uri_parameter(tls, _zFilename, _zParam)
	if _z == 0 || _1088sqlite3DecOrHexToI64(tls, _z, _v) != int32(0) {
		goto _1
	}

	_bDflt = *(*int64)(unsafe.Pointer(_v))
_1:
	return _bDflt
}

// Xsqlite3_uri_parameter is defined at sqlite3.c:145900:23
func Xsqlite3_uri_parameter(tls crt.TLS, _zFilename uintptr /* *int8 */, _zParam uintptr /* *int8 */) (r uintptr /* *int8 */) {
	var _x int32

	if _zFilename != 0 && _zParam != 0 {
		goto _1
	}

	return null

_1:
	_zFilename += uintptr(_211sqlite3Strlen30(tls, _zFilename) + int32(1))
_2:
	if (*(*int8)(unsafe.Pointer(_zFilename))) == 0 {
		goto _3
	}

	_x = crt.Xstrcmp(tls, _zFilename, _zParam)
	_zFilename += uintptr(_211sqlite3Strlen30(tls, _zFilename) + int32(1))
	if _x != int32(0) {
		goto _4
	}

	return _zFilename

_4:
	_zFilename += uintptr(_211sqlite3Strlen30(tls, _zFilename) + int32(1))
	goto _2

_3:
	return null
}

// Xsqlite3_wal_checkpoint_v2 is defined at sqlite3.c:144070:16
func Xsqlite3_wal_checkpoint_v2(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _zDb uintptr /* *int8 */, _eMode int32, _pnLog uintptr /* *int32 */, _pnCkpt uintptr /* *int32 */) (r int32) {
	var (
		_rc  int32
		_iDb int32
	)
	_iDb = int32(10)
	if _pnLog == 0 {
		goto _1
	}

	*(*int32)(unsafe.Pointer(_pnLog)) = int32(-1)
_1:
	if _pnCkpt == 0 {
		goto _2
	}

	*(*int32)(unsafe.Pointer(_pnCkpt)) = int32(-1)
_2:
	if _eMode >= int32(0) && _eMode <= int32(3) {
		goto _3
	}

	return int32(21)

_3:
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	if _zDb == 0 || (*(*int8)(unsafe.Pointer(_zDb))) == 0 {
		goto _4
	}

	_iDb = _213sqlite3FindDbName(tls, _db, _zDb)
_4:
	if _iDb >= int32(0) {
		goto _5
	}

	_rc = int32(1)
	_134sqlite3ErrorWithMsg(tls, _db, int32(1), ts+21186 /* "unknown database: %s" */, _zDb)
	goto _6

_5:
	*(*int32)(unsafe.Pointer((_db + 544) + 16)) = int32(0)
	_rc = _726sqlite3Checkpoint(tls, _db, _iDb, _eMode, _pnLog, _pnCkpt)
	_136sqlite3Error(tls, _db, _rc)
_6:
	_rc = _182sqlite3ApiExit(tls, _db, _rc)
	if (*(*int32)(unsafe.Pointer(_db + 184))) != int32(0) {
		goto _7
	}

	*(*int32)(unsafe.Pointer(_db + 344)) = int32(0)
_7:
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	return _rc
}

// Xsqlite3_auto_extension is defined at sqlite3.c:113511:16
func Xsqlite3_auto_extension(tls crt.TLS, _xInit uintptr /* *func(crt.TLS) */) (r int32) {
	var (
		_rc    int32
		_i     uint32
		_mutex uintptr // *Tsqlite3_mutex = Ssqlite3_mutex
		_nByte uint64
		_aNew  uintptr // **func(crt.TLS)
	)
	_rc = int32(0)
	_rc = Xsqlite3_initialize(tls)
	if _rc == 0 {
		goto _1
	}

	return _rc

	goto _2

_1:
	_mutex = _35sqlite3MutexAlloc(tls, int32(2))
	Xsqlite3_mutex_enter(tls, _mutex)
	_i = uint32(0)
_3:
	if _i >= (*(*uint32)(unsafe.Pointer(_522sqlite3Autoext))) {
		goto _5
	}

	if (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_522sqlite3Autoext + 8))) + 8*uintptr(_i)))) != _xInit {
		goto _6
	}

	goto _5

_6:
	_i++
	goto _3

_5:
	if _i != (*(*uint32)(unsafe.Pointer(_522sqlite3Autoext))) {
		goto _7
	}

	_nByte = uint64(uint64((*(*uint32)(unsafe.Pointer(_522sqlite3Autoext)))+uint32(1)) * uint64(8))
	_aNew = Xsqlite3_realloc64(tls, *(*uintptr)(unsafe.Pointer(_522sqlite3Autoext + 8)), _nByte)
	if _aNew != 0 {
		goto _8
	}

	_rc = int32(7)
	goto _9

_8:
	*(*uintptr)(unsafe.Pointer(_522sqlite3Autoext + 8)) = _aNew
	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_522sqlite3Autoext + 8))) + 8*uintptr(*(*uint32)(unsafe.Pointer(_522sqlite3Autoext))))) = _xInit
	(*(*uint32)(unsafe.Pointer(_522sqlite3Autoext)))++
_9:
_7:
	Xsqlite3_mutex_leave(tls, _mutex)

	return _rc

_2:
	return r
}

// Xsqlite3_bind_blob64 is defined at sqlite3.c:78267:16
func Xsqlite3_bind_blob64(tls crt.TLS, _pStmt uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */, _i int32, _zData uintptr /* *void */, _nData uint64, _xDel uintptr /* *func(crt.TLS, uintptr) */) (r int32) {
	if _nData <= uint64(0x7fffffff) {
		goto _1
	}

	return _1089invokeValueDestructor(tls, _zData, _xDel, null)

	goto _2

_1:
	return _199bindText(tls, _pStmt, _i, _zData, int32(_nData), _xDel, uint8(0))

_2:
	return r
}

// Xsqlite3_bind_text64 is defined at sqlite3.c:78340:16
func Xsqlite3_bind_text64(tls crt.TLS, _pStmt uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */, _i int32, _zData uintptr /* *int8 */, _nData uint64, _xDel uintptr /* *func(crt.TLS, uintptr) */, _enc uint8) (r int32) {
	if _nData <= uint64(0x7fffffff) {
		goto _1
	}

	return _1089invokeValueDestructor(tls, _zData, _xDel, null)

	goto _2

_1:
	if int32(_enc) != int32(4) {
		goto _3
	}

	_enc = uint8(2)
_3:
	return _199bindText(tls, _pStmt, _i, _zData, int32(_nData), _xDel, _enc)

_2:
	return r
}

// Xsqlite3_cancel_auto_extension is defined at sqlite3.c:113558:16
func Xsqlite3_cancel_auto_extension(tls crt.TLS, _xInit uintptr /* *func(crt.TLS) */) (r int32) {
	var (
		_mutex uintptr // *Tsqlite3_mutex = Ssqlite3_mutex
		_i     int32
		_n     int32
	)
	_mutex = _35sqlite3MutexAlloc(tls, int32(2))
	_n = int32(0)
	Xsqlite3_mutex_enter(tls, _mutex)
	_i = int32(*(*uint32)(unsafe.Pointer(_522sqlite3Autoext))) - int32(1)
_1:
	if _i < int32(0) {
		goto _3
	}

	if (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_522sqlite3Autoext + 8))) + 8*uintptr(_i)))) != _xInit {
		goto _4
	}

	(*(*uint32)(unsafe.Pointer(_522sqlite3Autoext)))--
	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_522sqlite3Autoext + 8))) + 8*uintptr(_i))) = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_522sqlite3Autoext + 8))) + 8*uintptr(*(*uint32)(unsafe.Pointer(_522sqlite3Autoext)))))
	_n++
	goto _3

_4:
	_i--
	goto _1

_3:
	Xsqlite3_mutex_leave(tls, _mutex)
	return _n
}

// Xsqlite3_reset_auto_extension is defined at sqlite3.c:113583:17
func Xsqlite3_reset_auto_extension(tls crt.TLS) {
	var _mutex uintptr // *Tsqlite3_mutex = Ssqlite3_mutex

	if Xsqlite3_initialize(tls) != int32(0) {
		goto _1
	}

	_mutex = _35sqlite3MutexAlloc(tls, int32(2))
	Xsqlite3_mutex_enter(tls, _mutex)
	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_522sqlite3Autoext + 8)))
	*(*uintptr)(unsafe.Pointer(_522sqlite3Autoext + 8)) = null
	*(*uint32)(unsafe.Pointer(_522sqlite3Autoext)) = uint32(0)
	Xsqlite3_mutex_leave(tls, _mutex)
_1:
}

// Xsqlite3_result_blob64 is defined at sqlite3.c:77256:17
func Xsqlite3_result_blob64(tls crt.TLS, _pCtx uintptr /* *Tsqlite3_context = Ssqlite3_context */, _z uintptr /* *void */, _n uint64, _xDel uintptr /* *func(crt.TLS, uintptr) */) {
	if _n <= uint64(0x7fffffff) {
		goto _1
	}

	_1089invokeValueDestructor(tls, _z, _xDel, _pCtx)
	goto _2

_1:
	_297setResultStrOrError(tls, _pCtx, _z, int32(_n), uint8(0), _xDel)
_2:
}

// Xsqlite3_result_text64 is defined at sqlite3.c:77327:17
func Xsqlite3_result_text64(tls crt.TLS, _pCtx uintptr /* *Tsqlite3_context = Ssqlite3_context */, _z uintptr /* *int8 */, _n uint64, _xDel uintptr /* *func(crt.TLS, uintptr) */, _enc uint8) {
	if int32(_enc) != int32(4) {
		goto _1
	}

	_enc = uint8(2)
_1:
	if _n <= uint64(0x7fffffff) {
		goto _2
	}

	_1089invokeValueDestructor(tls, _z, _xDel, _pCtx)
	goto _3

_2:
	_297setResultStrOrError(tls, _pCtx, _z, int32(_n), _enc, _xDel)
_3:
}

// Xsqlite3_value_dup is defined at sqlite3.c:77180:26
func Xsqlite3_value_dup(tls crt.TLS, _pOrig uintptr /* *Tsqlite3_value = Ssqlite3_value */) (r uintptr /* *Tsqlite3_value = Ssqlite3_value */) {
	var _pNew uintptr // *Tsqlite3_value = Ssqlite3_value

	if _pOrig != 0 {
		goto _1
	}

	return null

_1:
	_pNew = Xsqlite3_malloc(tls, int32(56))
	if _pNew != 0 {
		goto _2
	}

	return null

_2:
	crt.Xmemset(tls, _pNew, int32(0), uint64(56))
	crt.Xmemcpy(tls, _pNew, _pOrig, uint64(24))
	{
		p := &(*(*uint16)(unsafe.Pointer(_pNew + 8)))
		*p = uint16(int32(*p) & int32(-1025))
	}
	*(*uintptr)(unsafe.Pointer(_pNew + 40)) = null
	if (int32(*(*uint16)(unsafe.Pointer(_pNew + 8))) & int32(18)) == 0 {
		goto _3
	}

	{
		p := &(*(*uint16)(unsafe.Pointer(_pNew + 8)))
		*p = uint16(int32(*p) & int32(-3073))
	}
	{
		p := &(*(*uint16)(unsafe.Pointer(_pNew + 8)))
		*p = uint16(int32(*p) | int32(0x1000))
	}
	if _543sqlite3VdbeMemMakeWriteable(tls, _pNew) == int32(0) {
		goto _4
	}

	_371sqlite3ValueFree(tls, _pNew)
	_pNew = null
_4:
_3:
	return _pNew
}

// Xsqlite3_value_free is defined at sqlite3.c:77203:17
func Xsqlite3_value_free(tls crt.TLS, _pOld uintptr /* *Tsqlite3_value = Ssqlite3_value */) {
	_371sqlite3ValueFree(tls, _pOld)
}

// Xsqlite3_result_zeroblob64 is defined at sqlite3.c:77380:16
func Xsqlite3_result_zeroblob64(tls crt.TLS, _pCtx uintptr /* *Tsqlite3_context = Ssqlite3_context */, _n uint64) (r int32) {
	var _pOut uintptr // *TMem = Ssqlite3_value

	_pOut = *(*uintptr)(unsafe.Pointer(_pCtx))

	if _n <= uint64(*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pOut + 40))) + 124))) {
		goto _1
	}

	return int32(18)

_1:
	_1065sqlite3VdbeMemSetZeroBlob(tls, *(*uintptr)(unsafe.Pointer(_pCtx)), int32(_n))
	return int32(0)
}

// Xsqlite3_bind_zeroblob64 is defined at sqlite3.c:78408:16
func Xsqlite3_bind_zeroblob64(tls crt.TLS, _pStmt uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */, _i int32, _n uint64) (r int32) {
	var (
		_rc int32
		_p  uintptr // *TVdbe = SVdbe
	)
	_p = _pStmt
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p))) + 24)))
	if _n <= uint64(*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p))) + 124))) {
		goto _1
	}

	_rc = int32(18)
	goto _2

_1:
	_rc = Xsqlite3_bind_zeroblob(tls, _pStmt, _i, int32(_n))
_2:
	_rc = _182sqlite3ApiExit(tls, *(*uintptr)(unsafe.Pointer(_p)), _rc)
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p))) + 24)))
	return _rc
}

// Xsqlite3_value_subtype is defined at sqlite3.c:77105:25
func Xsqlite3_value_subtype(tls crt.TLS, _pVal uintptr /* *Tsqlite3_value = Ssqlite3_value */) (r uint32) {
	var _pMem uintptr // *TMem = Ssqlite3_value

	_pMem = _pVal
	return uint32(func() int32 {
		if int32(*(*uint16)(unsafe.Pointer(_pMem + 8)))&int32(0x8000) != 0 {
			return int32(*(*uint8)(unsafe.Pointer(_pMem + 11)))
		}
		return int32(0)
	}())
}

// Xsqlite3_result_subtype is defined at sqlite3.c:77312:17
func Xsqlite3_result_subtype(tls crt.TLS, _pCtx uintptr /* *Tsqlite3_context = Ssqlite3_context */, _eSubtype uint32) {
	var _pOut uintptr // *TMem = Ssqlite3_value

	_pOut = *(*uintptr)(unsafe.Pointer(_pCtx))

	*(*uint8)(unsafe.Pointer(_pOut + 11)) = uint8(_eSubtype & uint32(0xff))
	{
		p := &(*(*uint16)(unsafe.Pointer(_pOut + 8)))
		*p = uint16(int32(*p) | int32(0x8000))
	}
}

// Xsqlite3_db_cacheflush is defined at sqlite3.c:142739:16
func Xsqlite3_db_cacheflush(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */) (r int32) {
	var (
		_i         int32
		_rc        int32
		_bSeenBusy int32
		_pBt       uintptr // *TBtree = SBtree
		_pPager    uintptr // *TPager = SPager
	)
	_rc = int32(0)
	_bSeenBusy = int32(0)
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	_219sqlite3BtreeEnterAll(tls, _db)
	_i = int32(0)
_1:
	if _rc != int32(0) || _i >= (*(*int32)(unsafe.Pointer(_db + 40))) {
		goto _3
	}

	_pBt = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_i)) + 8))
	if _pBt == 0 || _607sqlite3BtreeIsInTrans(tls, _pBt) == 0 {
		goto _4
	}

	_pPager = _141sqlite3BtreePager(tls, _pBt)
	_rc = _1090sqlite3PagerFlush(tls, _pPager)
	if _rc != int32(5) {
		goto _5
	}

	_bSeenBusy = int32(1)
	_rc = int32(0)
_5:
_4:
	_i++
	goto _1

_3:
	_225sqlite3BtreeLeaveAll(tls, _db)
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	return func() int32 {
		if (_rc == int32(0)) && (_bSeenBusy != 0) {
			return int32(5)
		}
		return _rc
	}()
}

// Xsqlite3_system_errno is defined at sqlite3.c:144312:16
func Xsqlite3_system_errno(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */) (r int32) {
	if _db != 0 {
		return *(*int32)(unsafe.Pointer(_db + 88))
	}

	return int32(0)
}

// Xsqlite3_expanded_sql is defined at sqlite3.c:78600:17
func Xsqlite3_expanded_sql(tls crt.TLS, _pStmt uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */) (r uintptr /* *int8 */) {
	var (
		_z    uintptr // *int8
		_zSql uintptr // *int8
		_p    uintptr // *TVdbe = SVdbe
	)
	_z = 0
	_zSql = Xsqlite3_sql(tls, _pStmt)
	if _zSql == 0 {
		goto _1
	}

	_p = _pStmt
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p))) + 24)))
	_z = _740sqlite3VdbeExpandSql(tls, _p, _zSql)
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p))) + 24)))
_1:
	return _z
}

// Xsqlite3_set_last_insert_rowid is defined at sqlite3.c:142912:17
func Xsqlite3_set_last_insert_rowid(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _iRowid int64) {
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	*(*int64)(unsafe.Pointer(_db + 56)) = int64(_iRowid)
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
}

// Xsqlite3_prepare_v3 is defined at sqlite3.c:117558:16
func Xsqlite3_prepare_v3(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _zSql uintptr /* *int8 */, _nBytes int32, _prepFlags uint32, _ppStmt uintptr /* **Tsqlite3_stmt = Ssqlite3_stmt */, _pzTail uintptr /* **int8 */) (r int32) {
	var _rc int32

	_rc = _190sqlite3LockAndPrepare(tls, _db, _zSql, _nBytes, uint32(0x80)|(_prepFlags&uint32(0xf)), null, _ppStmt, _pzTail)

	return _rc
}

// Xsqlite3_prepare16_v3 is defined at sqlite3.c:117668:16
func Xsqlite3_prepare16_v3(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _zSql uintptr /* *void */, _nBytes int32, _prepFlags uint32, _ppStmt uintptr /* **Tsqlite3_stmt = Ssqlite3_stmt */, _pzTail uintptr /* **void */) (r int32) {
	var _rc int32

	_rc = _1064sqlite3Prepare16(tls, _db, _zSql, _nBytes, uint32(0x80)|(_prepFlags&uint32(0xf)), _ppStmt, _pzTail)

	return _rc
}

// Xsqlite3_bind_pointer is defined at sqlite3.c:78313:16
func Xsqlite3_bind_pointer(tls crt.TLS, _pStmt uintptr /* *Tsqlite3_stmt = Ssqlite3_stmt */, _i int32, _pPtr uintptr /* *void */, _zPTtype uintptr /* *int8 */, _xDestructor uintptr /* *func(crt.TLS, uintptr) */) (r int32) {
	var (
		_rc int32
		_p  uintptr // *TVdbe = SVdbe
	)
	_p = _pStmt
	_rc = _200vdbeUnbind(tls, _p, _i)
	if _rc != int32(0) {
		goto _1
	}

	_1091sqlite3VdbeMemSetPointer(tls, (*(*uintptr)(unsafe.Pointer(_p + 160)))+56*uintptr(_i-int32(1)), _pPtr, _zPTtype, _xDestructor)
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p))) + 24)))
	goto _2

_1:
	if _xDestructor == 0 {
		goto _3
	}

	fn16(_xDestructor)(tls, _pPtr)
_3:
_2:
	return _rc
}

// Xsqlite3_result_pointer is defined at sqlite3.c:77300:17
func Xsqlite3_result_pointer(tls crt.TLS, _pCtx uintptr /* *Tsqlite3_context = Ssqlite3_context */, _pPtr uintptr /* *void */, _zPType uintptr /* *int8 */, _xDestructor uintptr /* *func(crt.TLS, uintptr) */) {
	var _pOut uintptr // *TMem = Ssqlite3_value

	_pOut = *(*uintptr)(unsafe.Pointer(_pCtx))

	_397sqlite3VdbeMemRelease(tls, _pOut)
	*(*uint16)(unsafe.Pointer(_pOut + 8)) = uint16(0x1)
	_1091sqlite3VdbeMemSetPointer(tls, _pOut, _pPtr, _zPType, _xDestructor)
}

// Xsqlite3_value_pointer is defined at sqlite3.c:77109:17
func Xsqlite3_value_pointer(tls crt.TLS, _pVal uintptr /* *Tsqlite3_value = Ssqlite3_value */, _zPType uintptr /* *int8 */) (r uintptr /* *void */) {
	var _p uintptr // *TMem = Ssqlite3_value

	_p = _pVal
	if (int32(*(*uint16)(unsafe.Pointer(_p + 8)))&int32(50175)) != int32(33281) || _zPType == 0 || int32(*(*uint8)(unsafe.Pointer(_p + 11))) != int32('p') || crt.Xstrcmp(tls, *(*uintptr)(unsafe.Pointer(_p)), _zPType) != int32(0) {
		goto _1
	}

	return *(*uintptr)(unsafe.Pointer(_p + 16))

	goto _2

_1:
	return null

_2:
	return r
}

type SIdList struct {
	Xa   uintptr // *struct{XzName *int8;Xidx int32;}
	XnId int32
}

type STriggerStep struct {
	Xop        uint8
	Xorconf    uint8
	XpTrig     uintptr // *STrigger
	XpSelect   uintptr // *SSelect
	XzTarget   uintptr // *int8
	XpWhere    uintptr // *SExpr
	XpExprList uintptr // *SExprList
	XpIdList   uintptr // *SIdList
	XpNext     uintptr // *STriggerStep
	XpLast     uintptr // *STriggerStep
}

type SAggInfo struct {
	XdirectMode     uint8
	XuseSortingIdx  uint8
	XsortingIdx     int32
	XsortingIdxPTab int32
	XnSortingColumn int32
	XmnReg          int32
	XmxReg          int32
	XpGroupBy       uintptr // *SExprList
	XaCol           uintptr // *struct{XpTab *STable;XiTable int32;XiColumn int32;XiSorterColumn int32;XiMem int32;XpExpr *SExpr;}
	XnColumn        int32
	XnAccumulator   int32
	XaFunc          uintptr // *struct{XpExpr *SExpr;XpFunc *SFuncDef;XiMem int32;XiDistinct int32;}
	XnFunc          int32
}

// _766sqlite3SetString is defined at sqlite3.c:25463:21
func _766sqlite3SetString(tls crt.TLS, _pz uintptr /* **int8 */, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _zNew uintptr /* *int8 */) {
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_pz)))
	*(*uintptr)(unsafe.Pointer(_pz)) = _183sqlite3DbStrDup(tls, _db, _zNew)
}

// _767sqlite3AbsInt32 is defined at sqlite3.c:29476:20
func _767sqlite3AbsInt32(tls crt.TLS, _x int32) (r int32) {
	if _x < int32(0) {
		goto _1
	}

	return _x

_1:
	if _x != int32(-0x80000000) {
		goto _2
	}

	return int32(0x7fffffff)

_2:
	return -_x
}

// _768sqlite3BtreeSetCacheSize is defined at sqlite3.c:62338:20
func _768sqlite3BtreeSetCacheSize(tls crt.TLS, _p uintptr /* *TBtree = SBtree */, _mxPage int32) (r int32) {
	var _pBt uintptr // *TBtShared = SBtShared

	_pBt = *(*uintptr)(unsafe.Pointer(_p + 8))

	_139sqlite3BtreeEnter(tls, _p)
	_520sqlite3PagerSetCachesize(tls, *(*uintptr)(unsafe.Pointer(_pBt)), _mxPage)
	_169sqlite3BtreeLeave(tls, _p)
	return int32(0)
}

// _769sqlite3BtreeCommit is defined at sqlite3.c:63646:20
func _769sqlite3BtreeCommit(tls crt.TLS, _p uintptr /* *TBtree = SBtree */) (r int32) {
	var _rc int32

	_139sqlite3BtreeEnter(tls, _p)
	_rc = _168sqlite3BtreeCommitPhaseOne(tls, _p, null)
	if _rc != int32(0) {
		goto _1
	}

	_rc = _167sqlite3BtreeCommitPhaseTwo(tls, _p, int32(0))
_1:
	_169sqlite3BtreeLeave(tls, _p)
	return _rc
}

// _770findElementWithHash is defined at sqlite3.c:29860:17
func _770findElementWithHash(tls crt.TLS, _pH uintptr /* *THash = SHash */, _pKey uintptr /* *int8 */, _pHash uintptr /* *uint32 */) (r uintptr /* *THashElem = SHashElem */) {
	var (
		_elem   uintptr // *THashElem = SHashElem
		_count  int32
		_h      uint32
		_pEntry uintptr // *S_ht
	)
	if (*(*uintptr)(unsafe.Pointer(_pH + 16))) == 0 {
		goto _1
	}

	_h = _1093strHash(tls, _pKey) % (*(*uint32)(unsafe.Pointer(_pH)))
	_pEntry = (*(*uintptr)(unsafe.Pointer(_pH + 16))) + 16*uintptr(_h)
	_elem = *(*uintptr)(unsafe.Pointer(_pEntry + 8))
	_count = *(*int32)(unsafe.Pointer(_pEntry))
	goto _2

_1:
	_h = uint32(0)
	_elem = *(*uintptr)(unsafe.Pointer(_pH + 8))
	_count = int32(*(*uint32)(unsafe.Pointer(_pH + 4)))
_2:
	if _pHash == 0 {
		goto _3
	}

	*(*uint32)(unsafe.Pointer(_pHash)) = _h
_3:
_4:
	if postinc24(&_count) == 0 {
		goto _5
	}

	if _110sqlite3StrICmp(tls, *(*uintptr)(unsafe.Pointer(_elem + 24)), _pKey) != int32(0) {
		goto _6
	}

	return _elem

_6:
	_elem = *(*uintptr)(unsafe.Pointer(_elem))
	goto _4

_5:
	return _1092nullElement
}

// _771statMutex [10]int8, escapes: true, sqlite3.c:19097:19
var _771statMutex = ds + 8481

// _772sqlite3Pcache1Mutex is defined at sqlite3.c:46762:30
func _772sqlite3Pcache1Mutex(tls crt.TLS) (r uintptr /* *Tsqlite3_mutex = Ssqlite3_mutex */) {
	return *(*uintptr)(unsafe.Pointer(_275pcache1_g + 120))
}

// _773sqlite3MallocMutex is defined at sqlite3.c:24884:30
func _773sqlite3MallocMutex(tls crt.TLS) (r uintptr /* *Tsqlite3_mutex = Ssqlite3_mutex */) {
	return *(*uintptr)(unsafe.Pointer(_107mem0))
}

// _774countLookasideSlots is defined at sqlite3.c:19236:12
func _774countLookasideSlots(tls crt.TLS, _p uintptr /* *TLookasideSlot = SLookasideSlot */) (r uint32) {
	var _cnt uint32

	_cnt = uint32(0)
_1:
	if _p == 0 {
		goto _2
	}

	_p = *(*uintptr)(unsafe.Pointer(_p))
	_cnt++
	goto _1

_2:
	return _cnt
}

// _775sqlite3PcachePagecount is defined at sqlite3.c:45481:20
func _775sqlite3PcachePagecount(tls crt.TLS, _pCache uintptr /* *TPCache = SPCache */) (r int32) {
	return fn12(*(*uintptr)(unsafe.Pointer((_28sqlite3Config + 184) + 48)))(tls, *(*uintptr)(unsafe.Pointer(_pCache + 64)))
}

// _776sqlite3DeleteTriggerStep is defined at sqlite3.c:123973:21
func _776sqlite3DeleteTriggerStep(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pTriggerStep uintptr /* *TTriggerStep = STriggerStep */) {
	var _pTmp uintptr // *TTriggerStep = STriggerStep

_1:
	if _pTriggerStep == 0 {
		goto _2
	}

	_pTmp = _pTriggerStep
	_pTriggerStep = *(*uintptr)(unsafe.Pointer(_pTriggerStep + 56))
	_777sqlite3ExprDelete(tls, _db, *(*uintptr)(unsafe.Pointer(_pTmp + 32)))
	_551sqlite3ExprListDelete(tls, _db, *(*uintptr)(unsafe.Pointer(_pTmp + 40)))
	_1094sqlite3SelectDelete(tls, _db, *(*uintptr)(unsafe.Pointer(_pTmp + 16)))
	_778sqlite3IdListDelete(tls, _db, *(*uintptr)(unsafe.Pointer(_pTmp + 48)))
	_181sqlite3DbFree(tls, _db, _pTmp)
	goto _1

_2:
}

// _777sqlite3ExprDelete is defined at sqlite3.c:92873:21
func _777sqlite3ExprDelete(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _p uintptr /* *TExpr = SExpr */) {
	if _p == 0 {
		goto _1
	}

	_1095sqlite3ExprDeleteNN(tls, _db, _p)
_1:
}

// _778sqlite3IdListDelete is defined at sqlite3.c:104318:21
func _778sqlite3IdListDelete(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pList uintptr /* *TIdList = SIdList */) {
	var _i int32

	if _pList != 0 {
		goto _1
	}

	return

_1:
	_i = int32(0)
_2:
	if _i >= (*(*int32)(unsafe.Pointer(_pList + 8))) {
		goto _4
	}

	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pList))) + 16*uintptr(_i))))
	_i++
	goto _2

_4:
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_pList)))
	_376sqlite3DbFreeNN(tls, _db, _pList)
}

// _779deleteTable is defined at sqlite3.c:101297:29
func _779deleteTable(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pTable uintptr /* *TTable = STable */) {
	var (
		_pIndex uintptr // *TIndex = SIndex
		_pNext  uintptr // *TIndex = SIndex
		_zName  uintptr // *int8
	)
	_pIndex = *(*uintptr)(unsafe.Pointer(_pTable + 16))
_1:
	if _pIndex == 0 {
		goto _3
	}

	_pNext = *(*uintptr)(unsafe.Pointer(_pIndex + 40))

	if _db != 0 && (*(*uintptr)(unsafe.Pointer(_db + 672))) != 0 || *(*int32)(unsafe.Pointer(_pTable + 84)) != 0 {
		goto _4
	}

	_zName = *(*uintptr)(unsafe.Pointer(_pIndex))
	_841sqlite3HashInsert(tls, (*(*uintptr)(unsafe.Pointer(_pIndex + 48)))+32, _zName, null)

_4:
	_1007freeIndex(tls, _db, _pIndex)
	_pIndex = _pNext
	goto _1

_3:
	_1096sqlite3FkDelete(tls, _db, _pTable)
	_1097sqlite3DeleteColumnNames(tls, _db, _pTable)
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_pTable)))
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_pTable + 40)))
	_1094sqlite3SelectDelete(tls, _db, *(*uintptr)(unsafe.Pointer(_pTable + 24)))
	_551sqlite3ExprListDelete(tls, _db, *(*uintptr)(unsafe.Pointer(_pTable + 48)))
	_1098sqlite3VtabClear(tls, _db, _pTable)
	_181sqlite3DbFree(tls, _db, _pTable)
}

// _780vdbeFreeOpArray is defined at sqlite3.c:73090:13
func _780vdbeFreeOpArray(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _aOp uintptr /* *TOp = SVdbeOp */, _nOp int32) {
	var _pOp uintptr // *TOp = SVdbeOp

	if _aOp == 0 {
		goto _1
	}

	_pOp = _aOp + 24*uintptr(_nOp-int32(1))
_2:
	if _pOp < _aOp {
		goto _4
	}

	if int32(*(*int8)(unsafe.Pointer(_pOp + 1))) > int32(-7) {
		goto _5
	}

	_1099freeP4(tls, _db, int32(*(*int8)(unsafe.Pointer(_pOp + 1))), *(*uintptr)(unsafe.Pointer(_pOp + 16)))
_5:
	_pOp -= 24
	goto _2

_4:
	_376sqlite3DbFreeNN(tls, _db, _aOp)
_1:
}

// _781memRealValue is defined at sqlite3.c:70929:31
func _781memRealValue(tls crt.TLS, _pMem uintptr /* *TMem = Ssqlite3_value */) (r float64) {
	esc := crt.MustMalloc(8)
	var _val = esc // *float64
	defer crt.Free(esc)
	*(*float64)(unsafe.Pointer(_val)) = float64(0)
	_808sqlite3AtoF(tls, *(*uintptr)(unsafe.Pointer(_pMem + 16)), _val, *(*int32)(unsafe.Pointer(_pMem + 12)), *(*uint8)(unsafe.Pointer(_pMem + 10)))
	return *(*float64)(unsafe.Pointer(_val))
}

// _782valueBytes is defined at sqlite3.c:72162:28
func _782valueBytes(tls crt.TLS, _pVal uintptr /* *Tsqlite3_value = Ssqlite3_value */, _enc uint8) (r int32) {
	if _526valueToText(tls, _pVal, _enc) != 0 {
		return *(*int32)(unsafe.Pointer(_pVal + 12))
	}

	return int32(0)
}

// _783clockVfs *Tsqlite3_vfs = Ssqlite3_vfs, escapes: false, shell.c:207:22
var _783clockVfs uintptr

type Stimeval struct {
	Xtv_sec  int64
	Xtv_usec int64
}

// _784pcache1PinPage is defined at sqlite3.c:46128:15
func _784pcache1PinPage(tls crt.TLS, _pPage uintptr /* *TPgHdr1 = SPgHdr1 */) (r uintptr /* *TPgHdr1 = SPgHdr1 */) {
	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage + 48))) + 40)) = *(*uintptr)(unsafe.Pointer(_pPage + 40))
	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage + 40))) + 48)) = *(*uintptr)(unsafe.Pointer(_pPage + 48))
	*(*uintptr)(unsafe.Pointer(_pPage + 40)) = null
	*(*uintptr)(unsafe.Pointer(_pPage + 48)) = null

	(*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage + 32))) + 48)))--
	return _pPage
}

// _785pcache1FetchStage2 is defined at sqlite3.c:46418:31
func _785pcache1FetchStage2(tls crt.TLS, _pCache uintptr /* *TPCache1 = SPCache1 */, _iKey uint32, _createFlag int32) (r uintptr /* *TPgHdr1 = SPgHdr1 */) {
	var (
		_nPinned uint32
		_pGroup  uintptr // *TPGroup = SPGroup
		_pPage   uintptr // *TPgHdr1 = SPgHdr1
		_pOther  uintptr // *TPCache1 = SPCache1
		_h       uint32
	)
	_pGroup = *(*uintptr)(unsafe.Pointer(_pCache))
	_pPage = 0

	_nPinned = (*(*uint32)(unsafe.Pointer(_pCache + 52))) - (*(*uint32)(unsafe.Pointer(_pCache + 48)))

	if _createFlag != int32(1) || _nPinned < (*(*uint32)(unsafe.Pointer(_pGroup + 16))) && _nPinned < (*(*uint32)(unsafe.Pointer(_pCache + 40))) && (_1100pcache1UnderMemoryPressure(tls, _pCache) == 0 || (*(*uint32)(unsafe.Pointer(_pCache + 48))) >= _nPinned) {
		goto _1
	}

	return null

_1:
	if (*(*uint32)(unsafe.Pointer(_pCache + 52))) < (*(*uint32)(unsafe.Pointer(_pCache + 56))) {
		goto _2
	}

	_453pcache1ResizeHash(tls, _pCache)
_2:
	if (*(*int32)(unsafe.Pointer(_pCache + 28))) == 0 || (*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((_pGroup + 24) + 48))) + 21))) != 0 || ((*(*uint32)(unsafe.Pointer(_pCache + 52)))+uint32(1)) < (*(*uint32)(unsafe.Pointer(_pCache + 36))) && _1100pcache1UnderMemoryPressure(tls, _pCache) == 0 {
		goto _3
	}

	_pPage = *(*uintptr)(unsafe.Pointer((_pGroup + 24) + 48))

	_456pcache1RemoveFromHash(tls, _pPage, int32(0))
	_784pcache1PinPage(tls, _pPage)
	_pOther = *(*uintptr)(unsafe.Pointer(_pPage + 32))
	if (*(*int32)(unsafe.Pointer(_pOther + 24))) == (*(*int32)(unsafe.Pointer(_pCache + 24))) {
		goto _4
	}

	_786pcache1FreePage(tls, _pPage)
	_pPage = null
	goto _5

_4:
	{
		p := &(*(*uint32)(unsafe.Pointer(_pGroup + 20)))
		*p = uint32(uint32(*p) - uint32((*(*int32)(unsafe.Pointer(_pOther + 28)))-(*(*int32)(unsafe.Pointer(_pCache + 28)))))
	}
_5:
_3:
	if _pPage != 0 {
		goto _6
	}

	_pPage = _1101pcache1AllocPage(tls, _pCache, bool2int(_createFlag == int32(1)))
_6:
	if _pPage == 0 {
		goto _7
	}

	_h = _iKey % (*(*uint32)(unsafe.Pointer(_pCache + 56)))
	(*(*uint32)(unsafe.Pointer(_pCache + 52)))++
	*(*uint32)(unsafe.Pointer(_pPage + 16)) = _iKey
	*(*uintptr)(unsafe.Pointer(_pPage + 24)) = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pCache + 64))) + 8*uintptr(_h)))
	*(*uintptr)(unsafe.Pointer(_pPage + 32)) = _pCache
	*(*uintptr)(unsafe.Pointer(_pPage + 48)) = null
	*(*uintptr)(unsafe.Pointer(_pPage + 40)) = null
	*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pPage + 8)))) = null
	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pCache + 64))) + 8*uintptr(_h))) = _pPage
	if _iKey <= (*(*uint32)(unsafe.Pointer(_pCache + 44))) {
		goto _8
	}

	*(*uint32)(unsafe.Pointer(_pCache + 44)) = _iKey
_8:
_7:
	return _pPage
}

// _786pcache1FreePage is defined at sqlite3.c:46020:13
func _786pcache1FreePage(tls crt.TLS, _p uintptr /* *TPgHdr1 = SPgHdr1 */) {
	var _pCache uintptr // *TPCache1 = SPCache1

	_pCache = *(*uintptr)(unsafe.Pointer(_p + 32))

	if (*(*uint8)(unsafe.Pointer(_p + 20))) == 0 {
		goto _1
	}

	*(*uintptr)(unsafe.Pointer(_p + 24)) = *(*uintptr)(unsafe.Pointer(_pCache + 72))
	*(*uintptr)(unsafe.Pointer(_pCache + 72)) = _p
	goto _2

_1:
	_1054pcache1Free(tls, *(*uintptr)(unsafe.Pointer(_p)))
_2:
	*(*uint32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pCache + 8))))--
}

// _787pthreadMutexInit is defined at sqlite3.c:23849:12
func _787pthreadMutexInit(tls crt.TLS) (r int32) {
	return int32(0)
}

// _788pthreadMutexEnd is defined at sqlite3.c:23850:12
func _788pthreadMutexEnd(tls crt.TLS) (r int32) {
	return int32(0)
}

// _789pthreadMutexAlloc is defined at sqlite3.c:23900:22
func _789pthreadMutexAlloc(tls crt.TLS, _iType int32) (r uintptr /* *Tsqlite3_mutex = Ssqlite3_mutex */) {
	esc := crt.MustMalloc(4)
	var (
		_p             uintptr // *Tsqlite3_mutex = Ssqlite3_mutex
		_recursiveAttr = esc   // *Tpthread_mutexattr_t = struct{X int32}
	)
	defer crt.Free(esc)
	switch _iType {
	case int32(1):
		goto _2
	case int32(0):
		goto _3
	default:
		goto _4
	}
_2:
	_p = _135sqlite3MallocZero(tls, uint64(40))
	if _p == 0 {
		goto _5
	}

	crt.Xpthread_mutexattr_init(tls, _recursiveAttr)
	crt.Xpthread_mutexattr_settype(tls, _recursiveAttr, int32(1))
	crt.Xpthread_mutex_init(tls, _p, _recursiveAttr)
	crt.Xpthread_mutexattr_destroy(tls, _recursiveAttr)
_5:
	goto _1

_3:
	_p = _135sqlite3MallocZero(tls, uint64(40))
	if _p == 0 {
		goto _6
	}

	crt.Xpthread_mutex_init(tls, _p, null)
_6:
	goto _1

_4:
	_p = _1102staticMutexes + 40*uintptr(_iType-int32(2))
	goto _1

_1:
	return _p
}

// _790pthreadMutexFree is defined at sqlite3.c:23965:13
func _790pthreadMutexFree(tls crt.TLS, _p uintptr /* *Tsqlite3_mutex = Ssqlite3_mutex */) {
	crt.Xpthread_mutex_destroy(tls, _p)
	Xsqlite3_free(tls, _p)
}

// _791pthreadMutexEnter is defined at sqlite3.c:23992:13
func _791pthreadMutexEnter(tls crt.TLS, _p uintptr /* *Tsqlite3_mutex = Ssqlite3_mutex */) {
	crt.Xpthread_mutex_lock(tls, _p)
}

// _792pthreadMutexTry is defined at sqlite3.c:24034:12
func _792pthreadMutexTry(tls crt.TLS, _p uintptr /* *Tsqlite3_mutex = Ssqlite3_mutex */) (r int32) {
	var _rc int32

	if crt.Xpthread_mutex_trylock(tls, _p) != int32(0) {
		goto _1
	}

	_rc = int32(0)
	goto _2

_1:
	_rc = int32(5)
_2:
	return _rc
}

// _793pthreadMutexLeave is defined at sqlite3.c:24091:13
func _793pthreadMutexLeave(tls crt.TLS, _p uintptr /* *Tsqlite3_mutex = Ssqlite3_mutex */) {
	crt.Xpthread_mutex_unlock(tls, _p)
}

// _794noopMutexInit is defined at sqlite3.c:23568:12
func _794noopMutexInit(tls crt.TLS) (r int32) {
	return int32(0)
}

// _795noopMutexEnd is defined at sqlite3.c:23569:12
func _795noopMutexEnd(tls crt.TLS) (r int32) {
	return int32(0)
}

// _796noopMutexAlloc is defined at sqlite3.c:23570:22
func _796noopMutexAlloc(tls crt.TLS, _id int32) (r uintptr /* *Tsqlite3_mutex = Ssqlite3_mutex */) {
	return uintptr(8)
}

// _797noopMutexFree is defined at sqlite3.c:23574:13
func _797noopMutexFree(tls crt.TLS, _p uintptr /* *Tsqlite3_mutex = Ssqlite3_mutex */) {
	return
}

// _798noopMutexEnter is defined at sqlite3.c:23575:13
func _798noopMutexEnter(tls crt.TLS, _p uintptr /* *Tsqlite3_mutex = Ssqlite3_mutex */) {
	return
}

// _799noopMutexTry is defined at sqlite3.c:23576:12
func _799noopMutexTry(tls crt.TLS, _p uintptr /* *Tsqlite3_mutex = Ssqlite3_mutex */) (r int32) {
	return int32(0)
}

// _800noopMutexLeave is defined at sqlite3.c:23580:13
func _800noopMutexLeave(tls crt.TLS, _p uintptr /* *Tsqlite3_mutex = Ssqlite3_mutex */) {
	return
}

// _801lenOne [1]uint8, escapes: true, sqlite3.c:107826:32
var _801lenOne = ds + 8491

// _802azOne [1]*uint8, escapes: true, sqlite3.c:107827:26
var _802azOne = bss + 11624 // array of 1 pointer to unsigned char

func init() { *(*[1]uintptr)(unsafe.Pointer(_802azOne)) = [1]uintptr{0: ts + 4582 /* " " */} }

// _803contextMalloc is defined at sqlite3.c:106946:13
func _803contextMalloc(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _nByte int64) (r uintptr /* *void */) {
	var (
		_z  uintptr // *int8
		_db uintptr // *Tsqlite3 = Ssqlite3
	)
	_db = Xsqlite3_context_db_handle(tls, _context)

	if _nByte <= int64(*(*int32)(unsafe.Pointer(_db + 124))) {
		goto _1
	}

	Xsqlite3_result_error_toobig(tls, _context)
	_z = null
	goto _2

_1:
	_z = _198sqlite3Malloc(tls, uint64(_nByte))
	if _z != 0 {
		goto _3
	}

	Xsqlite3_result_error_nomem(tls, _context)
_3:
_2:
	return _z
}

// _804sqlite3GetFuncCollSeq is defined at sqlite3.c:106565:16
func _804sqlite3GetFuncCollSeq(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */) (r uintptr /* *TCollSeq = SCollSeq */) {
	var _pOp uintptr // *TVdbeOp = SVdbeOp

	_pOp = (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_context + 24))) + 104))) + 24*uintptr((*(*int32)(unsafe.Pointer(_context + 32)))-int32(1))

	return *(*uintptr)(unsafe.Pointer(_pOp + 16))
}

// _805sqlite3SkipAccumulatorLoad is defined at sqlite3.c:106578:13
func _805sqlite3SkipAccumulatorLoad(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */) {
	*(*uint8)(unsafe.Pointer(_context + 40)) = uint8(1)
}

// _806azType [5]*int8, escapes: true, sqlite3.c:106620:21
var _806azType = bss + 11632 // array of 5 pointer to char

func init() {
	*(*[5]uintptr)(unsafe.Pointer(_806azType)) = [5]uintptr{
		0: ts + 21207, /* "integer" */
		1: ts + 21215, /* "real" */
		2: ts + 21220, /* "text" */
		3: ts + 21225, /* "blob" */
		4: ts + 21230, /* "null" */
	}
}

// _807sqlite3XPrintf is defined at sqlite3.c:26640:21
func _807sqlite3XPrintf(tls crt.TLS, _p uintptr /* *TStrAccum = SStrAccum */, _zFormat uintptr /* *int8 */, ap ...interface{}) {
	var _ap *[]interface{} // Tva_list = T__gnuc_va_list = T__...a_list = *struct{X_ [2]uintptr;}

	{
		x := ap
		_ap = &x
	}
	_131sqlite3VXPrintf(tls, _p, _zFormat, _ap)
	_ap = nil
}

// _808sqlite3AtoF is defined at sqlite3.c:28476:20
func _808sqlite3AtoF(tls crt.TLS, _z uintptr /* *int8 */, _pResult uintptr /* *float64 */, _length int32, _enc uint8) (r int32) {
	var (
		_incr    int32
		_zEnd    uintptr // *int8
		_sign    int32
		_s       int64
		_d       int32
		_esign   int32
		_e       int32
		_eValid  int32
		_result  float64
		_nDigits int32
		_nonNum  int32
		_i       int32
		_scale   float64
	)
	_zEnd = _z + uintptr(_length)
	_sign = int32(1)
	_s = int64(0)
	_d = int32(0)
	_esign = int32(1)
	_e = int32(0)
	_eValid = int32(1)
	_nDigits = int32(0)
	_nonNum = int32(0)

	*(*float64)(unsafe.Pointer(_pResult)) = float64(0)
	if int32(_enc) != int32(1) {
		goto _1
	}

	_incr = int32(1)
	goto _2

_1:
	_incr = int32(2)

	_i = int32(3) - int32(_enc)
_3:
	if _i >= _length || int32(*(*int8)(unsafe.Pointer(_z + uintptr(_i)))) != int32(0) {
		goto _5
	}

	_i = int32(_i + int32(2))
	goto _3

_5:
	_nonNum = bool2int(_i < _length)
	_zEnd = _z + uintptr(_i^int32(1))
	_z += uintptr(int32(_enc) & int32(1))
_2:
_6:
	if _z >= _zEnd || int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(uint8(*(*int8)(unsafe.Pointer(_z)))))))&int32(0x1) == 0 {
		goto _7
	}

	_z += uintptr(_incr)
	goto _6

_7:
	if _z < _zEnd {
		goto _8
	}

	return int32(0)

_8:
	if int32(*(*int8)(unsafe.Pointer(_z))) != int32('-') {
		goto _9
	}

	_sign = int32(-1)
	_z += uintptr(_incr)
	goto _10

_9:
	if int32(*(*int8)(unsafe.Pointer(_z))) != int32('+') {
		goto _11
	}

	_z += uintptr(_incr)
_11:
_10:
_12:
	if _z >= _zEnd || int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(uint8(*(*int8)(unsafe.Pointer(_z)))))))&int32(0x4) == 0 || _s >= int64(922337203685477579) {
		goto _13
	}

	_s = (_s * int64(10)) + int64(int32(*(*int8)(unsafe.Pointer(_z)))-int32('0'))
	_z += uintptr(_incr)
	_nDigits++
	goto _12

_13:
_14:
	if _z >= _zEnd || int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(uint8(*(*int8)(unsafe.Pointer(_z)))))))&int32(0x4) == 0 {
		goto _15
	}

	_z += uintptr(_incr)
	_nDigits++
	_d++
	goto _14

_15:
	if _z < _zEnd {
		goto _16
	}

	goto _do_atof_calc

_16:
	if int32(*(*int8)(unsafe.Pointer(_z))) != int32('.') {
		goto _17
	}

	_z += uintptr(_incr)
_18:
	if _z >= _zEnd || int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(uint8(*(*int8)(unsafe.Pointer(_z)))))))&int32(0x4) == 0 {
		goto _19
	}

	if _s >= int64(922337203685477579) {
		goto _20
	}

	_s = (_s * int64(10)) + int64(int32(*(*int8)(unsafe.Pointer(_z)))-int32('0'))
	_d--
_20:
	_z += uintptr(_incr)
	_nDigits++
	goto _18

_19:
_17:
	if _z < _zEnd {
		goto _21
	}

	goto _do_atof_calc

_21:
	if int32(*(*int8)(unsafe.Pointer(_z))) != int32('e') && int32(*(*int8)(unsafe.Pointer(_z))) != int32('E') {
		goto _22
	}

	_z += uintptr(_incr)
	_eValid = int32(0)
	if _z < _zEnd {
		goto _23
	}

	goto _do_atof_calc

_23:
	if int32(*(*int8)(unsafe.Pointer(_z))) != int32('-') {
		goto _24
	}

	_esign = int32(-1)
	_z += uintptr(_incr)
	goto _25

_24:
	if int32(*(*int8)(unsafe.Pointer(_z))) != int32('+') {
		goto _26
	}

	_z += uintptr(_incr)
_26:
_25:
_27:
	if _z >= _zEnd || int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(uint8(*(*int8)(unsafe.Pointer(_z)))))))&int32(0x4) == 0 {
		goto _28
	}

	_e = func() int32 {
		if _e < int32(10000) {
			return (_e * int32(10)) + (int32(*(*int8)(unsafe.Pointer(_z))) - int32('0'))
		}
		return int32(10000)
	}()
	_z += uintptr(_incr)
	_eValid = int32(1)
	goto _27

_28:
_22:
_29:
	if _z >= _zEnd || int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(uint8(*(*int8)(unsafe.Pointer(_z)))))))&int32(0x1) == 0 {
		goto _30
	}

	_z += uintptr(_incr)
	goto _29

_30:
	goto _do_atof_calc
_do_atof_calc:
	_e = (_e * _esign) + _d
	if _e >= int32(0) {
		goto _31
	}

	_esign = int32(-1)
	_e = int32(_e * int32(-1))
	goto _32

_31:
	_esign = int32(1)
_32:
	if _s != int64(0) {
		goto _33
	}

	_result = func() float64 {
		if _sign < int32(0) {
			return float64(nz64)
		}
		return float64(0)
	}()
	goto _34

_33:
_35:
	if _e <= int32(0) {
		goto _36
	}

	if _esign <= int32(0) {
		goto _37
	}

	if _s < int64(922337203685477580) {
		goto _39
	}

	goto _36

_39:
	_s = int64(_s * int64(10))
	goto _38

_37:
	if (_s % int64(10)) == int64(0) {
		goto _40
	}

	goto _36

_40:
	_s = int64(_s / int64(10))
_38:
	_e--
	goto _35

_36:
	_s = func() int64 {
		if _sign < int32(0) {
			return -_s
		}
		return _s
	}()
	if _e != int32(0) {
		goto _41
	}

	_result = float64(_s)
	goto _42

_41:
	_scale = float64(1)
	if _e <= int32(307) {
		goto _43
	}

	if _e >= int32(342) {
		goto _45
	}

_47:
	if (_e % int32(308)) == 0 {
		goto _48
	}

	_scale = float64(_scale * float64(10))
	_e = int32(_e - int32(1))
	goto _47

_48:
	if _esign >= int32(0) {
		goto _49
	}

	_result = float64(float64(_s) / _scale)
	_result = float64(_result / float64(1e+308))
	goto _50

_49:
	_result = float64(float64(_s) * _scale)
	_result = float64(_result * float64(1e+308))
_50:
	goto _46

_45:
	if _esign >= int32(0) {
		goto _51
	}

	_result = float64(0) * float64(_s)
	goto _52

_51:
	_result = float64((*(*float32)(unsafe.Pointer(_1103__huge_valf))) * float32(_s))
_52:
_46:
	goto _44

_43:
_53:
	if (_e % int32(22)) == 0 {
		goto _54
	}

	_scale = float64(_scale * float64(10))
	_e = int32(_e - int32(1))
	goto _53

_54:
_55:
	if _e <= int32(0) {
		goto _56
	}

	_scale = float64(_scale * float64(1e+22))
	_e = int32(_e - int32(22))
	goto _55

_56:
	if _esign >= int32(0) {
		goto _57
	}

	_result = float64(float64(_s) / _scale)
	goto _58

_57:
	_result = float64(float64(_s) * _scale)
_58:
_44:
_42:
_34:
	*(*float64)(unsafe.Pointer(_pResult)) = _result
	return bool2int((((_z == _zEnd) && (_nDigits > int32(0))) && (_eValid != 0)) && (_nonNum == int32(0)))
}

// _809hexdigits [16]int8, escapes: true, sqlite3.c:107525:19
var _809hexdigits = ds + 8492

type SSumCtx struct {
	XrSum     float64
	XiSum     int64
	Xcnt      int64
	Xoverflow uint8
	Xapprox   uint8
}

type SCountCtx struct{ Xn int64 }

// _810sqlite3Utf8CharLen is defined at sqlite3.c:27981:20
func _810sqlite3Utf8CharLen(tls crt.TLS, _zIn uintptr /* *int8 */, _nByte int32) (r int32) {
	var (
		_r     int32
		_z     uintptr // *Tu8 = uint8
		_zTerm uintptr // *Tu8 = uint8
	)
	_r = int32(0)
	_z = _zIn
	if _nByte < int32(0) {
		goto _1
	}

	_zTerm = _z + uintptr(_nByte)
	goto _2

_1:
	_zTerm = uintptr(18446744073709551615)
_2:
_3:
	if int32(*(*uint8)(unsafe.Pointer(_z))) == int32(0) || _z >= _zTerm {
		goto _4
	}

	if int32(*(*uint8)(unsafe.Pointer(postinc19(&_z)))) < int32(0xc0) {
		goto _5
	}

_6:
	if (int32(*(*uint8)(unsafe.Pointer(_z))) & int32(0xc0)) != int32(0x80) {
		goto _7
	}

	_z++
	goto _6

_7:
_5:
	_r++
	goto _3

_4:
	return _r
}

// _811renameTableFunc is defined at sqlite3.c:97158:13
func _811renameTableFunc(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _NotUsed int32, _argv uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	esc := crt.MustMalloc(4)
	var (
		_zSql       uintptr // *uint8
		_zTableName uintptr // *uint8
		_token      = esc   // *int32
		_tname      SToken
		_zCsr       uintptr // *uint8
		_len        int32
		_zRet       uintptr // *int8
		_db         uintptr // *Tsqlite3 = Ssqlite3
	)
	defer crt.Free(esc)
	_zSql = Xsqlite3_value_text(tls, *(*uintptr)(unsafe.Pointer(_argv)))
	_zTableName = Xsqlite3_value_text(tls, *(*uintptr)(unsafe.Pointer(_argv + 8)))
	_zCsr = _zSql
	_len = int32(0)
	_db = Xsqlite3_context_db_handle(tls, _context)

	if _zSql == 0 {
		goto _1
	}

_2:
	if (*(*uint8)(unsafe.Pointer(_zCsr))) != 0 {
		goto _5
	}

	return

_5:
	*(*uintptr)(unsafe.Pointer(uintptr(unsafe.Pointer(&_tname)))) = _zCsr
	*(*uint32)(unsafe.Pointer(uintptr(unsafe.Pointer(&_tname)) + 8)) = uint32(_len)
_6:
	_zCsr += uintptr(_len)
	_len = _933sqlite3GetToken(tls, _zCsr, _token)
	if (*(*int32)(unsafe.Pointer(_token))) == int32(158) {
		goto _6
	}

	if ((*(*int32)(unsafe.Pointer(_token))) != int32(22)) && ((*(*int32)(unsafe.Pointer(_token))) != int32(125)) {
		goto _2
	}

	_zRet = _226sqlite3MPrintf(tls, _db, ts+21235 /* "%.*s\"%w\"%s" */, int32(int64((*(*uintptr)(unsafe.Pointer(uintptr(unsafe.Pointer(&_tname)))))-_zSql)), _zSql, _zTableName, (*(*uintptr)(unsafe.Pointer(uintptr(unsafe.Pointer(&_tname)))))+uintptr(*(*uint32)(unsafe.Pointer(uintptr(unsafe.Pointer(&_tname)) + 8))))
	Xsqlite3_result_text(tls, _context, _zRet, int32(-1), fp10(_109sqlite3MallocSize))
_1:
}

// _812renameTriggerFunc is defined at sqlite3.c:97280:13
func _812renameTriggerFunc(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _NotUsed int32, _argv uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	esc := crt.MustMalloc(4)
	var (
		_zSql       uintptr // *uint8
		_zTableName uintptr // *uint8
		_token      = esc   // *int32
		_tname      SToken
		_dist       int32
		_zCsr       uintptr // *uint8
		_len        int32
		_zRet       uintptr // *int8
		_db         uintptr // *Tsqlite3 = Ssqlite3
	)
	defer crt.Free(esc)
	_zSql = Xsqlite3_value_text(tls, *(*uintptr)(unsafe.Pointer(_argv)))
	_zTableName = Xsqlite3_value_text(tls, *(*uintptr)(unsafe.Pointer(_argv + 8)))
	_dist = int32(3)
	_zCsr = _zSql
	_len = int32(0)
	_db = Xsqlite3_context_db_handle(tls, _context)

	if _zSql == 0 {
		goto _1
	}

_2:
	if (*(*uint8)(unsafe.Pointer(_zCsr))) != 0 {
		goto _5
	}

	return

_5:
	*(*uintptr)(unsafe.Pointer(uintptr(unsafe.Pointer(&_tname)))) = _zCsr
	*(*uint32)(unsafe.Pointer(uintptr(unsafe.Pointer(&_tname)) + 8)) = uint32(_len)
_6:
	_zCsr += uintptr(_len)
	_len = _933sqlite3GetToken(tls, _zCsr, _token)
	if (*(*int32)(unsafe.Pointer(_token))) == int32(158) {
		goto _6
	}

	_dist++
	if (*(*int32)(unsafe.Pointer(_token))) != int32(122) && (*(*int32)(unsafe.Pointer(_token))) != int32(107) {
		goto _9
	}

	_dist = int32(0)
_9:
	if (_dist != int32(2)) || ((((*(*int32)(unsafe.Pointer(_token))) != int32(137)) && ((*(*int32)(unsafe.Pointer(_token))) != int32(61))) && ((*(*int32)(unsafe.Pointer(_token))) != int32(5))) {
		goto _2
	}

	_zRet = _226sqlite3MPrintf(tls, _db, ts+21235 /* "%.*s\"%w\"%s" */, int32(int64((*(*uintptr)(unsafe.Pointer(uintptr(unsafe.Pointer(&_tname)))))-_zSql)), _zSql, _zTableName, (*(*uintptr)(unsafe.Pointer(uintptr(unsafe.Pointer(&_tname)))))+uintptr(*(*uint32)(unsafe.Pointer(uintptr(unsafe.Pointer(&_tname)) + 8))))
	Xsqlite3_result_text(tls, _context, _zRet, int32(-1), fp10(_109sqlite3MallocSize))
_1:
}

// _813renameParentFunc is defined at sqlite3.c:97223:13
func _813renameParentFunc(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _NotUsed int32, _argv uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	esc := crt.MustMalloc(4)
	var (
		_db      uintptr // *Tsqlite3 = Ssqlite3
		_zOutput uintptr // *int8
		_zResult uintptr // *int8
		_zInput  uintptr // *uint8
		_zOld    uintptr // *uint8
		_zNew    uintptr // *uint8
		_z       uintptr // *uint8
		_n       int32
		_token   = esc   // *int32
		_zParent uintptr // *int8
		_zOut    uintptr // *int8
	)
	defer crt.Free(esc)
	_db = Xsqlite3_context_db_handle(tls, _context)
	_zOutput = 0
	_zInput = Xsqlite3_value_text(tls, *(*uintptr)(unsafe.Pointer(_argv)))
	_zOld = Xsqlite3_value_text(tls, *(*uintptr)(unsafe.Pointer(_argv + 8)))
	_zNew = Xsqlite3_value_text(tls, *(*uintptr)(unsafe.Pointer(_argv + 16)))

	if _zInput != 0 && _zOld != 0 {
		goto _1
	}

	return

_1:
	_z = _zInput
_2:
	if (*(*uint8)(unsafe.Pointer(_z))) == 0 {
		goto _4
	}

	_n = _933sqlite3GetToken(tls, _z, _token)
	if (*(*int32)(unsafe.Pointer(_token))) != int32(105) {
		goto _5
	}

_6:
	_z += uintptr(_n)
	_n = _933sqlite3GetToken(tls, _z, _token)
	if (*(*int32)(unsafe.Pointer(_token))) == int32(158) {
		goto _6
	}

	if (*(*int32)(unsafe.Pointer(_token))) != int32(159) {
		goto _9
	}

	goto _4

_9:
	_zParent = _618sqlite3DbStrNDup(tls, _db, _z, uint64(_n))
	if _zParent != 0 {
		goto _10
	}

	goto _4

_10:
	_1104sqlite3Dequote(tls, _zParent)
	if int32(0) != _110sqlite3StrICmp(tls, _zOld, _zParent) {
		goto _11
	}

	_zOut = _226sqlite3MPrintf(tls, _db, ts+21246 /* "%s%.*s\"%w\"" */, func() uintptr {
		if _zOutput != 0 {
			return _zOutput
		}
		return ts + 4553 /* "" */
	}(), int32(int64(_z-_zInput)), _zInput, _zNew)
	_181sqlite3DbFree(tls, _db, _zOutput)
	_zOutput = _zOut
	_zInput = _z + uintptr(_n)
_11:
	_181sqlite3DbFree(tls, _db, _zParent)
_5:
	_z = _z + uintptr(_n)
	goto _2

_4:
	_zResult = _226sqlite3MPrintf(tls, _db, ts+8770 /* "%s%s" */, func() uintptr {
		if _zOutput != 0 {
			return _zOutput
		}
		return ts + 4553 /* "" */
	}(), _zInput)
	Xsqlite3_result_text(tls, _context, _zResult, int32(-1), fp10(_109sqlite3MallocSize))
	_181sqlite3DbFree(tls, _db, _zOutput)
}

// _814juliandayFunc is defined at sqlite3.c:20356:13
func _814juliandayFunc(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _argc int32, _argv uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	esc := crt.MustMalloc(48)
	var _x = esc // *TDateTime = SDateTime
	defer crt.Free(esc)
	if _1105isDate(tls, _context, _argc, _argv, _x) != int32(0) {
		goto _1
	}

	_1106computeJD(tls, _x)
	Xsqlite3_result_double(tls, _context, float64(*(*int64)(unsafe.Pointer(_x)))/float64(8.64e+07))
_1:
}

// _815dateFunc is defined at sqlite3.c:20412:13
func _815dateFunc(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _argc int32, _argv uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	esc := crt.MustMalloc(148)
	var (
		_x    = esc      // *TDateTime = SDateTime
		_zBuf = esc + 48 // *[100]int8
	)
	defer crt.Free(esc)
	if _1105isDate(tls, _context, _argc, _argv, _x) != int32(0) {
		goto _1
	}

	_1107computeYMD(tls, _x)
	Xsqlite3_snprintf(tls, int32(100), _zBuf, ts+21257 /* "%04d-%02d-%02d" */, *(*int32)(unsafe.Pointer(_x + 8)), *(*int32)(unsafe.Pointer(_x + 12)), *(*int32)(unsafe.Pointer(_x + 16)))
	Xsqlite3_result_text(tls, _context, _zBuf, int32(-1), uintptr(18446744073709551615))
_1:
}

// _816timeFunc is defined at sqlite3.c:20393:13
func _816timeFunc(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _argc int32, _argv uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	esc := crt.MustMalloc(148)
	var (
		_x    = esc      // *TDateTime = SDateTime
		_zBuf = esc + 48 // *[100]int8
	)
	defer crt.Free(esc)
	if _1105isDate(tls, _context, _argc, _argv, _x) != int32(0) {
		goto _1
	}

	_1108computeHMS(tls, _x)
	Xsqlite3_snprintf(tls, int32(100), _zBuf, ts+21272 /* "%02d:%02d:%02d" */, *(*int32)(unsafe.Pointer(_x + 20)), *(*int32)(unsafe.Pointer(_x + 24)), int32(*(*float64)(unsafe.Pointer(_x + 32))))
	Xsqlite3_result_text(tls, _context, _zBuf, int32(-1), uintptr(18446744073709551615))
_1:
}

// _817datetimeFunc is defined at sqlite3.c:20373:13
func _817datetimeFunc(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _argc int32, _argv uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	esc := crt.MustMalloc(148)
	var (
		_x    = esc      // *TDateTime = SDateTime
		_zBuf = esc + 48 // *[100]int8
	)
	defer crt.Free(esc)
	if _1105isDate(tls, _context, _argc, _argv, _x) != int32(0) {
		goto _1
	}

	_1109computeYMD_HMS(tls, _x)
	Xsqlite3_snprintf(tls, int32(100), _zBuf, ts+21287 /* "%04d-%02d-%02d %02d:%02d:%02d" */, *(*int32)(unsafe.Pointer(_x + 8)), *(*int32)(unsafe.Pointer(_x + 12)), *(*int32)(unsafe.Pointer(_x + 16)), *(*int32)(unsafe.Pointer(_x + 20)), *(*int32)(unsafe.Pointer(_x + 24)), int32(*(*float64)(unsafe.Pointer(_x + 32))))
	Xsqlite3_result_text(tls, _context, _zBuf, int32(-1), uintptr(18446744073709551615))
_1:
}

// _818strftimeFunc is defined at sqlite3.c:20445:13
func _818strftimeFunc(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _argc int32, _argv uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	esc := crt.MustMalloc(208)
	var (
		_x    = esc // *TDateTime = SDateTime
		_n    uint64
		_i    uint64
		_j    uint64
		_z    uintptr    // *int8
		_db   uintptr    // *Tsqlite3 = Ssqlite3
		_zFmt uintptr    // *int8
		_zBuf = esc + 48 // *[100]int8
		_s    float64
		_nDay int32
		_y    = esc + 160 // *TDateTime = SDateTime
		_wd   int32
	)
	defer crt.Free(esc)
	if _argc != int32(0) {
		goto _1
	}

	return

_1:
	_zFmt = Xsqlite3_value_text(tls, *(*uintptr)(unsafe.Pointer(_argv)))
	if _zFmt != 0 && _1105isDate(tls, _context, _argc-int32(1), _argv+8*uintptr(1), _x) == 0 {
		goto _2
	}

	return

_2:
	_db = Xsqlite3_context_db_handle(tls, _context)
	_i = uint64(0)
	_n = uint64(1)
_3:
	if (*(*int8)(unsafe.Pointer(_zFmt + uintptr(_i)))) == 0 {
		goto _5
	}

	if int32(*(*int8)(unsafe.Pointer(_zFmt + uintptr(_i)))) != int32('%') {
		goto _6
	}

	switch int32(*(*int8)(unsafe.Pointer(_zFmt + uintptr(_i+uint64(1))))) {
	case int32('d'):
		goto _8
	case int32('H'):
		goto _9
	case int32('m'):
		goto _10
	case int32('M'):
		goto _11
	case int32('S'):
		goto _12
	case int32('W'):
		goto _13
	case int32('w'):
		goto _14
	case int32('%'):
		goto _15
	case int32('f'):
		goto _16
	case int32('j'):
		goto _17
	case int32('Y'):
		goto _18
	case int32('s'):
		goto _19
	case int32('J'):
		goto _20
	default:
		goto _21
	}
_8:
_9:
_10:
_11:
_12:
_13:
	_n++
_14:
_15:
	goto _7

_16:
	_n = uint64(_n + uint64(8))
	goto _7

_17:
	_n = uint64(_n + uint64(3))
	goto _7

_18:
	_n = uint64(_n + uint64(8))
	goto _7

_19:
_20:
	_n = uint64(_n + uint64(50))
	goto _7

_21:
	return

_7:
	_i++
_6:
	_i++
	_n++
	goto _3

_5:
	if _n >= uint64(100) {
		goto _22
	}

	_z = _zBuf
	goto _23

_22:
	if _n <= uint64(*(*int32)(unsafe.Pointer(_db + 124))) {
		goto _24
	}

	Xsqlite3_result_error_toobig(tls, _context)
	return

	goto _25

_24:
	_z = _373sqlite3DbMallocRawNN(tls, _db, uint64(int32(_n)))
	if _z != 0 {
		goto _26
	}

	Xsqlite3_result_error_nomem(tls, _context)
	return

_26:
_25:
_23:
	_1106computeJD(tls, _x)
	_1109computeYMD_HMS(tls, _x)
	_i = set150(&_j, uint64(0))
_27:
	if (*(*int8)(unsafe.Pointer(_zFmt + uintptr(_i)))) == 0 {
		goto _29
	}

	if int32(*(*int8)(unsafe.Pointer(_zFmt + uintptr(_i)))) == int32('%') {
		goto _30
	}

	*(*int8)(unsafe.Pointer(_z + uintptr(postinc151(&_j)))) = *(*int8)(unsafe.Pointer(_zFmt + uintptr(_i)))
	goto _31

_30:
	_i++
	switch int32(*(*int8)(unsafe.Pointer(_zFmt + uintptr(_i)))) {
	case int32('d'):
		goto _33
	case int32('f'):
		goto _34
	case int32('H'):
		goto _35
	case int32('W'):
		goto _36
	case int32('j'):
		goto _37
	case int32('J'):
		goto _38
	case int32('m'):
		goto _39
	case int32('M'):
		goto _40
	case int32('s'):
		goto _41
	case int32('S'):
		goto _42
	case int32('w'):
		goto _43
	case int32('Y'):
		goto _44
	default:
		goto _45
	}
_33:
	Xsqlite3_snprintf(tls, int32(3), _z+uintptr(_j), ts+21317 /* "%02d" */, *(*int32)(unsafe.Pointer(_x + 16)))
	_j = uint64(_j + uint64(2))
	goto _32

_34:
	_s = *(*float64)(unsafe.Pointer(_x + 32))
	if _s <= float64(59.999) {
		goto _46
	}

	_s = float64(59.999)
_46:
	Xsqlite3_snprintf(tls, int32(7), _z+uintptr(_j), ts+21322 /* "%06.3f" */, _s)
	_j = uint64(_j + uint64(_211sqlite3Strlen30(tls, _z+uintptr(_j))))
	goto _32

_35:
	Xsqlite3_snprintf(tls, int32(3), _z+uintptr(_j), ts+21317 /* "%02d" */, *(*int32)(unsafe.Pointer(_x + 20)))
	_j = uint64(_j + uint64(2))
	goto _32

_36:
_37:
	*(*SDateTime)(unsafe.Pointer(_y)) = *(*SDateTime)(unsafe.Pointer(_x))
	*(*int8)(unsafe.Pointer(_y + 40)) = int8(0)
	*(*int32)(unsafe.Pointer(_y + 12)) = int32(1)
	*(*int32)(unsafe.Pointer(_y + 16)) = int32(1)
	_1106computeJD(tls, _y)
	_nDay = int32((((*(*int64)(unsafe.Pointer(_x))) - (*(*int64)(unsafe.Pointer(_y)))) + int64(43200000)) / int64(86400000))
	if int32(*(*int8)(unsafe.Pointer(_zFmt + uintptr(_i)))) != int32('W') {
		goto _47
	}

	_wd = int32((((*(*int64)(unsafe.Pointer(_x))) + int64(43200000)) / int64(86400000)) % int64(7))
	Xsqlite3_snprintf(tls, int32(3), _z+uintptr(_j), ts+21317 /* "%02d" */, ((_nDay+int32(7))-_wd)/int32(7))
	_j = uint64(_j + uint64(2))
	goto _48

_47:
	Xsqlite3_snprintf(tls, int32(4), _z+uintptr(_j), ts+21329 /* "%03d" */, _nDay+int32(1))
	_j = uint64(_j + uint64(3))
_48:
	goto _32

_38:
	Xsqlite3_snprintf(tls, int32(20), _z+uintptr(_j), ts+20119 /* "%.16g" */, float64(*(*int64)(unsafe.Pointer(_x)))/float64(8.64e+07))
	_j = uint64(_j + uint64(_211sqlite3Strlen30(tls, _z+uintptr(_j))))
	goto _32

_39:
	Xsqlite3_snprintf(tls, int32(3), _z+uintptr(_j), ts+21317 /* "%02d" */, *(*int32)(unsafe.Pointer(_x + 12)))
	_j = uint64(_j + uint64(2))
	goto _32

_40:
	Xsqlite3_snprintf(tls, int32(3), _z+uintptr(_j), ts+21317 /* "%02d" */, *(*int32)(unsafe.Pointer(_x + 24)))
	_j = uint64(_j + uint64(2))
	goto _32

_41:
	Xsqlite3_snprintf(tls, int32(30), _z+uintptr(_j), ts+20114 /* "%lld" */, int64(((*(*int64)(unsafe.Pointer(_x)))/int64(1000))-int64(210866760000)))
	_j = uint64(_j + uint64(_211sqlite3Strlen30(tls, _z+uintptr(_j))))
	goto _32

_42:
	Xsqlite3_snprintf(tls, int32(3), _z+uintptr(_j), ts+21317 /* "%02d" */, int32(*(*float64)(unsafe.Pointer(_x + 32))))
	_j = uint64(_j + uint64(2))
	goto _32

_43:
	*(*int8)(unsafe.Pointer(_z + uintptr(postinc151(&_j)))) = int8(int32(int8((((*(*int64)(unsafe.Pointer(_x)))+int64(129600000))/int64(86400000))%int64(7))) + int32('0'))
	goto _32

_44:
	Xsqlite3_snprintf(tls, int32(5), _z+uintptr(_j), ts+21334 /* "%04d" */, *(*int32)(unsafe.Pointer(_x + 8)))
	_j = uint64(_j + uint64(_211sqlite3Strlen30(tls, _z+uintptr(_j))))
	goto _32

_45:
	*(*int8)(unsafe.Pointer(_z + uintptr(postinc151(&_j)))) = int8('%')
	goto _32

_32:
_31:
	_i++
	goto _27

_29:
	*(*int8)(unsafe.Pointer(_z + uintptr(_j))) = int8(0)
	Xsqlite3_result_text(tls, _context, _z, int32(-1), func() uintptr {
		if _z == _zBuf {
			return uintptr(18446744073709551615)
		}
		return fp10(_109sqlite3MallocSize)
	}())
}

// _819ctimeFunc is defined at sqlite3.c:20583:13
func _819ctimeFunc(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _NotUsed int32, _NotUsed2 uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	_816timeFunc(tls, _context, int32(0), null)
}

// _820ctimestampFunc is defined at sqlite3.c:20611:13
func _820ctimestampFunc(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _NotUsed int32, _NotUsed2 uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	_817datetimeFunc(tls, _context, int32(0), null)
}

// _821cdateFunc is defined at sqlite3.c:20597:13
func _821cdateFunc(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _NotUsed int32, _NotUsed2 uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	_815dateFunc(tls, _context, int32(0), null)
}

// _822posixIoFinder *func(crt.TLS, uintptr, uintptr) uintptr, escapes: true, sqlite3.c:35432:1
var _822posixIoFinder = bss + 11672 // pointer to function (pointer to char, pointer to unixFile) returning pointer to sqlite3_io_methods

func init() { *(*uintptr)(unsafe.Pointer(_822posixIoFinder)) = fp109(_1110posixIoFinderImpl) }

// _823unixOpen is defined at sqlite3.c:36083:12
func _823unixOpen(tls crt.TLS, _pVfs uintptr /* *Tsqlite3_vfs = Ssqlite3_vfs */, _zPath uintptr /* *int8 */, _pFile uintptr /* *Tsqlite3_file = Ssqlite3_file */, _flags int32, _pOutFlags uintptr /* *int32 */) (r int32) {
	esc := crt.MustMalloc(564)
	var (
		_p           uintptr // *TunixFile = SunixFile
		_fd          int32
		_openFlags   int32
		_eType       int32
		_noLock      int32
		_rc          int32
		_ctrlFlags   int32
		_isExclusive int32
		_isDelete    int32
		_isCreate    int32
		_isReadonly  int32
		_isReadWrite int32
		_syncDir     int32
		_zTmpname    = esc       // *[514]int8
		_zName       uintptr     // *int8
		_pUnused     uintptr     // *TUnixUnusedFd = SUnixUnusedFd
		_openMode    = esc + 528 // *Tmode_t = T__mode_t = uint32
		_uid         = esc + 544 // *Tuid_t = T__uid_t = uint32
		_gid         = esc + 560 // *Tgid_t = T__gid_t = uint32
	)
	defer crt.Free(esc)
	_p = _pFile
	_fd = int32(-1)
	_openFlags = int32(0)
	_eType = int32(uint32(_flags) & uint32(0xffffff00))
	_rc = int32(0)
	_ctrlFlags = int32(0)
	_isExclusive = _flags & int32(0x10)
	_isDelete = _flags & int32(0x8)
	_isCreate = _flags & int32(0x4)
	_isReadonly = _flags & int32(0x1)
	_isReadWrite = _flags & int32(0x2)
	_syncDir = bool2int((_isCreate != 0) && (((_eType == int32(0x4000)) || (_eType == int32(0x800))) || (_eType == int32(0x80000))))
	_zName = _zPath

	if (*(*int32)(unsafe.Pointer(_1111randomnessPid))) == int32(int32(crt.Xgetpid(tls))) {
		goto _1
	}

	*(*int32)(unsafe.Pointer(_1111randomnessPid)) = int32(int32(crt.Xgetpid(tls)))
	Xsqlite3_randomness(tls, int32(0), null)
_1:
	crt.Xmemset(tls, _p, int32(0), uint64(120))
	if _eType != int32(0x100) {
		goto _2
	}

	_pUnused = _1112findReusableFd(tls, _zName, _flags)
	if _pUnused == 0 {
		goto _4
	}

	_fd = *(*int32)(unsafe.Pointer(_pUnused))
	goto _5

_4:
	_pUnused = Xsqlite3_malloc64(tls, uint64(16))
	if _pUnused != 0 {
		goto _6
	}

	return int32(7)

_6:
_5:
	*(*uintptr)(unsafe.Pointer(_p + 48)) = _pUnused

	goto _3

_2:
	if _zName != 0 {
		goto _7
	}

	_rc = _1113unixGetTempname(tls, *(*int32)(unsafe.Pointer(_pVfs + 8)), _zTmpname)
	if _rc == int32(0) {
		goto _8
	}

	return _rc

_8:
	_zName = _zTmpname

_7:
_3:
	if _isReadonly == 0 {
		goto _9
	}

	_openFlags = int32(_openFlags | int32(0))
_9:
	if _isReadWrite == 0 {
		goto _10
	}

	_openFlags = int32(_openFlags | int32(02))
_10:
	if _isCreate == 0 {
		goto _11
	}

	_openFlags = int32(_openFlags | int32(0100))
_11:
	if _isExclusive == 0 {
		goto _12
	}

	_openFlags = int32(_openFlags | int32(128))
_12:
	_openFlags = int32(_openFlags | int32(0))
	if _fd >= int32(0) {
		goto _13
	}

	_rc = _1114findCreateFileMode(tls, _zName, _flags, _openMode, _uid, _gid)
	if _rc == int32(0) {
		goto _14
	}

	return _rc

_14:
	_fd = _1115robust_open(tls, _zName, _openFlags, *(*uint32)(unsafe.Pointer(_openMode)))

	if _fd >= int32(0) || (*(*int32)(unsafe.Pointer(crt.X__errno_location(tls)))) == int32(21) || _isReadWrite == 0 {
		goto _15
	}

	_flags = int32(_flags & int32(-7))
	_openFlags = int32(_openFlags & int32(-67))
	_flags = int32(_flags | int32(0x1))
	_openFlags = int32(_openFlags | int32(0))
	_isReadonly = int32(1)
	_fd = _1115robust_open(tls, _zName, _openFlags, *(*uint32)(unsafe.Pointer(_openMode)))
_15:
	if _fd >= int32(0) {
		goto _16
	}

	_rc = _1116unixLogErrorAtLine(tls, _844sqlite3CantopenError(tls, int32(36229)), ts+4771 /* "open" */, _zName, int32(36229))
	goto _open_finished

_16:
	if (_flags & int32(526336)) == 0 {
		goto _17
	}

	_1117robustFchown(tls, _fd, *(*uint32)(unsafe.Pointer(_uid)), *(*uint32)(unsafe.Pointer(_gid)))
_17:
_13:
	if _pOutFlags == 0 {
		goto _18
	}

	*(*int32)(unsafe.Pointer(_pOutFlags)) = _flags
_18:
	if (*(*uintptr)(unsafe.Pointer(_p + 48))) == 0 {
		goto _19
	}

	*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_p + 48)))) = _fd
	*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 48))) + 4)) = _flags
_19:
	if _isDelete == 0 {
		goto _20
	}

	fn12(*(*uintptr)(unsafe.Pointer((_1118aSyscall + 384) + 8)))(tls, _zName)
_20:
	if _isDelete == 0 {
		goto _21
	}

	_ctrlFlags = int32(_ctrlFlags | int32(0x20))
_21:
	if _isReadonly == 0 {
		goto _22
	}

	_ctrlFlags = int32(_ctrlFlags | int32(0x2))
_22:
	_noLock = bool2int(_eType != int32(0x100))
	if _noLock == 0 {
		goto _23
	}

	_ctrlFlags = int32(_ctrlFlags | int32(0x80))
_23:
	if _syncDir == 0 {
		goto _24
	}

	_ctrlFlags = int32(_ctrlFlags | int32(0x8))
_24:
	if (_flags & int32(0x40)) == 0 {
		goto _25
	}

	_ctrlFlags = int32(_ctrlFlags | int32(0x40))
_25:
	_rc = _1119fillInUnixFile(tls, _pVfs, _fd, _pFile, _zPath, _ctrlFlags)
	goto _open_finished
_open_finished:
	if _rc == int32(0) {
		goto _26
	}

	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_p + 48)))
_26:
	return _rc
}

// _824unixDelete is defined at sqlite3.c:36342:12
func _824unixDelete(tls crt.TLS, _NotUsed uintptr /* *Tsqlite3_vfs = Ssqlite3_vfs */, _zPath uintptr /* *int8 */, _dirSync int32) (r int32) {
	esc := crt.MustMalloc(4)
	var (
		_rc int32
		_fd = esc // *int32
	)
	defer crt.Free(esc)
	_rc = int32(0)

	if fn12(*(*uintptr)(unsafe.Pointer((_1118aSyscall + 384) + 8)))(tls, _zPath) != int32(-1) {
		goto _1
	}

	if (*(*int32)(unsafe.Pointer(crt.X__errno_location(tls)))) != int32(2) {
		goto _2
	}

	_rc = int32(5898)
	goto _3

_2:
	_rc = _1116unixLogErrorAtLine(tls, int32(2570), ts+21339 /* "unlink" */, _zPath, int32(36358))
_3:
	return _rc

_1:
	if (_dirSync & int32(1)) == int32(0) {
		goto _4
	}

	_rc = fn58(*(*uintptr)(unsafe.Pointer((_1118aSyscall + 408) + 8)))(tls, _zPath, _fd)
	if _rc != int32(0) {
		goto _5
	}

	if _1120full_fsync(tls, *(*int32)(unsafe.Pointer(_fd)), int32(0), int32(0)) == 0 {
		goto _7
	}

	_rc = _1116unixLogErrorAtLine(tls, int32(1290), ts+21346 /* "fsync" */, _zPath, int32(36368))
_7:
	_1121robust_close(tls, null, *(*int32)(unsafe.Pointer(_fd)), int32(36370))
	goto _6

_5:
	_rc = int32(0)
_6:
_4:
	return _rc
}

// _825unixAccess is defined at sqlite3.c:36390:12
func _825unixAccess(tls crt.TLS, _NotUsed uintptr /* *Tsqlite3_vfs = Ssqlite3_vfs */, _zPath uintptr /* *int8 */, _flags int32, _pResOut uintptr /* *int32 */) (r int32) {
	esc := crt.MustMalloc(144)
	var _buf = esc // *Sstat64
	defer crt.Free(esc)

	if _flags != int32(0) {
		goto _1
	}

	*(*int32)(unsafe.Pointer(_pResOut)) = bool2int((int32(0) == fn58(*(*uintptr)(unsafe.Pointer((_1118aSyscall + 96) + 8)))(tls, _zPath, _buf)) && ((*(*int64)(unsafe.Pointer(_buf + 48))) > int64(0)))
	goto _2

_1:
	*(*int32)(unsafe.Pointer(_pResOut)) = bool2int(fn50(*(*uintptr)(unsafe.Pointer((_1118aSyscall + 48) + 8)))(tls, _zPath, int32(6)) == int32(0))
_2:
	return int32(0)
}

// _826unixFullPathname is defined at sqlite3.c:36449:12
func _826unixFullPathname(tls crt.TLS, _pVfs uintptr /* *Tsqlite3_vfs = Ssqlite3_vfs */, _zPath uintptr /* *int8 */, _nOut int32, _zOut uintptr /* *int8 */) (r int32) {
	esc := crt.MustMalloc(144)
	var (
		_rc    int32
		_nByte int32
		_nLink int32
		_zIn   uintptr // *int8
		_zDel  uintptr // *int8
		_bLink int32
		_buf   = esc // *Sstat64
		_n     int32
	)
	defer crt.Free(esc)
	_rc = int32(0)
	_nLink = int32(1)
	_zIn = _zPath
	_zDel = 0

_1:
	_bLink = int32(0)
	if fn58(*(*uintptr)(unsafe.Pointer((_1118aSyscall + 648) + 8)))(tls, _zIn, _buf) == int32(0) {
		goto _4
	}

	if (*(*int32)(unsafe.Pointer(crt.X__errno_location(tls)))) == int32(2) {
		goto _6
	}

	_rc = _1116unixLogErrorAtLine(tls, _844sqlite3CantopenError(tls, int32(36482)), ts+21352 /* "lstat" */, _zIn, int32(36482))
_6:
	goto _5

_4:
	_bLink = bool2int(((*(*uint32)(unsafe.Pointer(_buf + 24))) & uint32(0170000)) == uint32(0120000))
_5:
	if _bLink == 0 {
		goto _7
	}

	if _zDel != 0 {
		goto _8
	}

	_zDel = Xsqlite3_malloc(tls, _nOut)
	if _zDel != 0 {
		goto _10
	}

	_rc = int32(7)
_10:
	goto _9

_8:
	if preinc2(&_nLink) <= int32(100) {
		goto _11
	}

	_rc = _844sqlite3CantopenError(tls, int32(36493))
_11:
_9:
	if _rc != int32(0) {
		goto _12
	}

	_nByte = int32(fn152(*(*uintptr)(unsafe.Pointer((_1118aSyscall + 624) + 8)))(tls, _zIn, _zDel, uint64(_nOut-int32(1))))
	if _nByte >= int32(0) {
		goto _13
	}

	_rc = _1116unixLogErrorAtLine(tls, _844sqlite3CantopenError(tls, int32(36499)), ts+21358 /* "readlink" */, _zIn, int32(36499))
	goto _14

_13:
	if int32(*(*int8)(unsafe.Pointer(_zDel))) == int32('/') {
		goto _15
	}

	_n = _211sqlite3Strlen30(tls, _zIn)
_16:
	if _n <= int32(0) || int32(*(*int8)(unsafe.Pointer(_zIn + uintptr(_n-int32(1))))) == int32('/') {
		goto _18
	}

	_n--
	goto _16

_18:
	if ((_nByte + _n) + int32(1)) <= _nOut {
		goto _19
	}

	_rc = _844sqlite3CantopenError(tls, int32(36505))
	goto _20

_19:
	crt.Xmemmove(tls, _zDel+uintptr(_n), _zDel, uint64(_nByte+int32(1)))
	crt.Xmemcpy(tls, _zDel, _zIn, uint64(_n))
	_nByte = int32(_nByte + _n)
_20:
_15:
	*(*int8)(unsafe.Pointer(_zDel + uintptr(_nByte))) = int8('\x00')
_14:
_12:
	_zIn = _zDel
_7:
	if _rc != int32(0) || _zIn == _zOut {
		goto _21
	}

	_rc = _1122mkFullPathname(tls, _zIn, _zOut, _nOut)
_21:
	if _bLink != int32(0) {
		goto _22
	}

	goto _3

_22:
	_zIn = _zOut
	if _rc == int32(0) {
		goto _1
	}

	goto _3

_3:
	Xsqlite3_free(tls, _zDel)
	return _rc
}

// _827unixDlOpen is defined at sqlite3.c:36539:13
func _827unixDlOpen(tls crt.TLS, _NotUsed uintptr /* *Tsqlite3_vfs = Ssqlite3_vfs */, _zFilename uintptr /* *int8 */) (r uintptr /* *void */) {
	return crt.Xdlopen(tls, _zFilename, int32(258))
}

// _828unixDlError is defined at sqlite3.c:36551:13
func _828unixDlError(tls crt.TLS, _NotUsed uintptr /* *Tsqlite3_vfs = Ssqlite3_vfs */, _nBuf int32, _zBufOut uintptr /* *int8 */) {
	var _zErr uintptr // *int8

	_1123unixEnterMutex(tls)
	_zErr = crt.Xdlerror(tls)
	if _zErr == 0 {
		goto _1
	}

	Xsqlite3_snprintf(tls, _nBuf, _zBufOut, ts+429 /* "%s" */, _zErr)
_1:
	_1124unixLeaveMutex(tls)
}

// _829unixDlSym is defined at sqlite3.c:36561:13
func _829unixDlSym(tls crt.TLS, _NotUsed uintptr /* *Tsqlite3_vfs = Ssqlite3_vfs */, _p uintptr /* *void */, _zSym uintptr /* *int8 */) (r uintptr /* *func(crt.TLS) */) {
	var _x uintptr // *func(crt.TLS, uintptr, uintptr) uintptr

	_x = fp109(crt.Xdlsym)
	return fn73(_x)(tls, _p, _zSym)
}

// _830unixDlClose is defined at sqlite3.c:36584:13
func _830unixDlClose(tls crt.TLS, _NotUsed uintptr /* *Tsqlite3_vfs = Ssqlite3_vfs */, _pHandle uintptr /* *void */) {
	crt.Xdlclose(tls, _pHandle)
}

// _831unixRandomness is defined at sqlite3.c:36598:12
func _831unixRandomness(tls crt.TLS, _NotUsed uintptr /* *Tsqlite3_vfs = Ssqlite3_vfs */, _nBuf int32, _zBuf uintptr /* *int8 */) (r int32) {
	esc := crt.MustMalloc(8)
	var (
		_fd  int32
		_got int32
		_t   = esc // *Ttime_t = T__time_t = int64
	)
	defer crt.Free(esc)

	crt.Xmemset(tls, _zBuf, int32(0), uint64(_nBuf))
	*(*int32)(unsafe.Pointer(_1111randomnessPid)) = int32(int32(crt.Xgetpid(tls)))
	_fd = _1115robust_open(tls, ts+21367 /* "/dev/urandom" */, int32(0), uint32(0))
	if _fd >= int32(0) {
		goto _1
	}

	crt.Xtime(tls, _t)
	crt.Xmemcpy(tls, _zBuf, _t, uint64(8))
	crt.Xmemcpy(tls, _zBuf+8, _1111randomnessPid, uint64(4))

	_nBuf = int32(12)
	goto _2

_1:
_3:
	_got = int32(fn153(*(*uintptr)(unsafe.Pointer((_1118aSyscall + 192) + 8)))(tls, _fd, _zBuf, uint64(_nBuf)))
	if (_got < int32(0)) && ((*(*int32)(unsafe.Pointer(crt.X__errno_location(tls)))) == int32(4)) {
		goto _3
	}

	_1121robust_close(tls, null, _fd, int32(36629))
_2:
	return _nBuf
}

// _832unixSleep is defined at sqlite3.c:36645:12
func _832unixSleep(tls crt.TLS, _NotUsed uintptr /* *Tsqlite3_vfs = Ssqlite3_vfs */, _microseconds int32) (r int32) {
	crt.Xusleep(tls, uint32(_microseconds))

	return _microseconds
}

// _833unixCurrentTime is defined at sqlite3.c:36717:12
func _833unixCurrentTime(tls crt.TLS, _NotUsed uintptr /* *Tsqlite3_vfs = Ssqlite3_vfs */, _prNow uintptr /* *float64 */) (r int32) {
	esc := crt.MustMalloc(8)
	var (
		_i  = esc // *Tsqlite3_int64 = Tsqlite_int64 = int64
		_rc int32
	)
	defer crt.Free(esc)
	*(*int64)(unsafe.Pointer(_i)) = int64(0)

	_rc = _835unixCurrentTimeInt64(tls, null, _i)
	*(*float64)(unsafe.Pointer(_prNow)) = float64(*(*int64)(unsafe.Pointer(_i))) / float64(8.64e+07)
	return _rc
}

// _834unixGetLastError is defined at sqlite3.c:36735:12
func _834unixGetLastError(tls crt.TLS, _NotUsed uintptr /* *Tsqlite3_vfs = Ssqlite3_vfs */, _NotUsed2 int32, _NotUsed3 uintptr /* *int8 */) (r int32) {
	return *(*int32)(unsafe.Pointer(crt.X__errno_location(tls)))
}

// _835unixCurrentTimeInt64 is defined at sqlite3.c:36685:12
func _835unixCurrentTimeInt64(tls crt.TLS, _NotUsed uintptr /* *Tsqlite3_vfs = Ssqlite3_vfs */, _piNow uintptr /* *Tsqlite3_int64 = Tsqlite_int64 = int64 */) (r int32) {
	esc := crt.MustMalloc(16)
	var (
		_rc   int32
		_sNow = esc // *Stimeval
	)
	defer crt.Free(esc)
	_rc = int32(0)
	crt.Xgettimeofday(tls, _sNow, null)
	*(*int64)(unsafe.Pointer(_piNow)) = (_1125unixEpoch + (int64(1000) * int64(*(*int64)(unsafe.Pointer(_sNow))))) + int64((*(*int64)(unsafe.Pointer(_sNow + 8)))/int64(1000))

	return _rc
}

// _836unixSetSystemCall is defined at sqlite3.c:30911:12
func _836unixSetSystemCall(tls crt.TLS, _pNotUsed uintptr /* *Tsqlite3_vfs = Ssqlite3_vfs */, _zName uintptr /* *int8 */, _pNewFunc uintptr /* Tsqlite3_syscall_ptr = *func(crt.TLS) */) (r int32) {
	var (
		_i  uint32
		_rc int32
	)
	_rc = int32(12)

	if _zName != 0 {
		goto _1
	}

	_rc = int32(0)
	_i = uint32(0)
_3:
	if uint64(_i) >= uint64(29) {
		goto _5
	}

	if (*(*uintptr)(unsafe.Pointer((_1118aSyscall + 24*uintptr(_i)) + 16))) == 0 {
		goto _6
	}

	*(*uintptr)(unsafe.Pointer((_1118aSyscall + 24*uintptr(_i)) + 8)) = *(*uintptr)(unsafe.Pointer((_1118aSyscall + 24*uintptr(_i)) + 16))
_6:
	_i++
	goto _3

_5:
	goto _2

_1:
	_i = uint32(0)
_7:
	if uint64(_i) >= uint64(29) {
		goto _9
	}

	if crt.Xstrcmp(tls, _zName, *(*uintptr)(unsafe.Pointer(_1118aSyscall + 24*uintptr(_i)))) != int32(0) {
		goto _10
	}

	if (*(*uintptr)(unsafe.Pointer((_1118aSyscall + 24*uintptr(_i)) + 16))) != 0 {
		goto _11
	}

	*(*uintptr)(unsafe.Pointer((_1118aSyscall + 24*uintptr(_i)) + 16)) = *(*uintptr)(unsafe.Pointer((_1118aSyscall + 24*uintptr(_i)) + 8))
_11:
	_rc = int32(0)
	if _pNewFunc != 0 {
		goto _12
	}

	_pNewFunc = *(*uintptr)(unsafe.Pointer((_1118aSyscall + 24*uintptr(_i)) + 16))
_12:
	*(*uintptr)(unsafe.Pointer((_1118aSyscall + 24*uintptr(_i)) + 8)) = _pNewFunc
	goto _9

_10:
	_i++
	goto _7

_9:
_2:
	return _rc
}

// _837unixGetSystemCall is defined at sqlite3.c:30954:28
func _837unixGetSystemCall(tls crt.TLS, _pNotUsed uintptr /* *Tsqlite3_vfs = Ssqlite3_vfs */, _zName uintptr /* *int8 */) (r uintptr /* Tsqlite3_syscall_ptr = *func(crt.TLS) */) {
	var _i uint32

	_i = uint32(0)
_1:
	if uint64(_i) >= uint64(29) {
		goto _3
	}

	if crt.Xstrcmp(tls, _zName, *(*uintptr)(unsafe.Pointer(_1118aSyscall + 24*uintptr(_i)))) != int32(0) {
		goto _4
	}

	return *(*uintptr)(unsafe.Pointer((_1118aSyscall + 24*uintptr(_i)) + 8))

_4:
	_i++
	goto _1

_3:
	return null
}

// _838unixNextSystemCall is defined at sqlite3.c:30973:19
func _838unixNextSystemCall(tls crt.TLS, _p uintptr /* *Tsqlite3_vfs = Ssqlite3_vfs */, _zName uintptr /* *int8 */) (r uintptr /* *int8 */) {
	var _i int32

	_i = int32(-1)

	if _zName == 0 {
		goto _1
	}

	_i = int32(0)
_2:
	if _i >= int32(28) {
		goto _4
	}

	if crt.Xstrcmp(tls, _zName, *(*uintptr)(unsafe.Pointer(_1118aSyscall + 24*uintptr(_i)))) != int32(0) {
		goto _5
	}

	goto _4

_5:
	_i++
	goto _2

_4:
_1:
	_i++
_6:
	if _i >= int32(29) {
		goto _8
	}

	if (*(*uintptr)(unsafe.Pointer((_1118aSyscall + 24*uintptr(_i)) + 8))) == 0 {
		goto _9
	}

	return *(*uintptr)(unsafe.Pointer(_1118aSyscall + 24*uintptr(_i)))

_9:
	_i++
	goto _6

_8:
	return null
}

// _839nolockIoFinder *func(crt.TLS, uintptr, uintptr) uintptr, escapes: true, sqlite3.c:35442:1
var _839nolockIoFinder = bss + 11680 // pointer to function (pointer to char, pointer to unixFile) returning pointer to sqlite3_io_methods

func init() { *(*uintptr)(unsafe.Pointer(_839nolockIoFinder)) = fp109(_1126nolockIoFinderImpl) }

// _840dotlockIoFinder *func(crt.TLS, uintptr, uintptr) uintptr, escapes: true, sqlite3.c:35452:1
var _840dotlockIoFinder = bss + 11688 // pointer to function (pointer to char, pointer to unixFile) returning pointer to sqlite3_io_methods

func init() { *(*uintptr)(unsafe.Pointer(_840dotlockIoFinder)) = fp109(_1127dotlockIoFinderImpl) }

// _841sqlite3HashInsert is defined at sqlite3.c:29950:21
func _841sqlite3HashInsert(tls crt.TLS, _pH uintptr /* *THash = SHash */, _pKey uintptr /* *int8 */, _data uintptr /* *void */) (r uintptr /* *void */) {
	esc := crt.MustMalloc(4)
	var (
		_h        = esc   // *uint32
		_elem     uintptr // *THashElem = SHashElem
		_new_elem uintptr // *THashElem = SHashElem
		_old_data uintptr // *void
	)
	defer crt.Free(esc)

	_elem = _770findElementWithHash(tls, _pH, _pKey, _h)
	if (*(*uintptr)(unsafe.Pointer(_elem + 16))) == 0 {
		goto _1
	}

	_old_data = *(*uintptr)(unsafe.Pointer(_elem + 16))
	if _data != 0 {
		goto _2
	}

	_1128removeElementGivenHash(tls, _pH, _elem, *(*uint32)(unsafe.Pointer(_h)))
	goto _3

_2:
	*(*uintptr)(unsafe.Pointer(_elem + 16)) = _data
	*(*uintptr)(unsafe.Pointer(_elem + 24)) = _pKey
_3:
	return _old_data

_1:
	if _data != 0 {
		goto _4
	}

	return null

_4:
	_new_elem = _198sqlite3Malloc(tls, uint64(32))
	if _new_elem != 0 {
		goto _5
	}

	return _data

_5:
	*(*uintptr)(unsafe.Pointer(_new_elem + 24)) = _pKey
	*(*uintptr)(unsafe.Pointer(_new_elem + 16)) = _data
	(*(*uint32)(unsafe.Pointer(_pH + 4)))++
	if (*(*uint32)(unsafe.Pointer(_pH + 4))) < uint32(10) || (*(*uint32)(unsafe.Pointer(_pH + 4))) <= (uint32(2)*(*(*uint32)(unsafe.Pointer(_pH)))) {
		goto _6
	}

	if _1129rehash(tls, _pH, (*(*uint32)(unsafe.Pointer(_pH + 4)))*uint32(2)) == 0 {
		goto _7
	}

	*(*uint32)(unsafe.Pointer(_h)) = _1093strHash(tls, _pKey) % (*(*uint32)(unsafe.Pointer(_pH)))
_7:
_6:
	_1130insertElement(tls, _pH, func() uintptr {
		if (*(*uintptr)(unsafe.Pointer(_pH + 16))) != 0 {
			return (*(*uintptr)(unsafe.Pointer(_pH + 16))) + 16*uintptr(*(*uint32)(unsafe.Pointer(_h)))
		}
		return null
	}(), _new_elem)
	return null
}

type SOpenMode struct {
	Xz    uintptr // *int8
	Xmode int32
}

// _842sqlite3PcacheSize is defined at sqlite3.c:44967:20
func _842sqlite3PcacheSize(tls crt.TLS) (r int32) {
	return int32(72)
}

// _843sqlite3JournalSize is defined at sqlite3.c:90098:20
func _843sqlite3JournalSize(tls crt.TLS, _pVfs uintptr /* *Tsqlite3_vfs = Ssqlite3_vfs */) (r int32) {
	return func() int32 {
		if (*(*int32)(unsafe.Pointer(_pVfs + 4))) > int32(88) {
			return *(*int32)(unsafe.Pointer(_pVfs + 4))
		}
		return int32(88)
	}()
}

// _844sqlite3CantopenError is defined at sqlite3.c:145338:20
func _844sqlite3CantopenError(tls crt.TLS, _lineno int32) (r int32) {
	return _111reportError(tls, int32(14), _lineno, ts+21380 /* "cannot open file" */)
}

// _845sqlite3OsOpen is defined at sqlite3.c:20894:20
func _845sqlite3OsOpen(tls crt.TLS, _pVfs uintptr /* *Tsqlite3_vfs = Ssqlite3_vfs */, _zPath uintptr /* *int8 */, _pFile uintptr /* *Tsqlite3_file = Ssqlite3_file */, _flags int32, _pFlagsOut uintptr /* *int32 */) (r int32) {
	var _rc int32

	_rc = fn154(*(*uintptr)(unsafe.Pointer(_pVfs + 40)))(tls, _pVfs, _zPath, _pFile, _flags&int32(0x87f7f), _pFlagsOut)

	return _rc
}

// _846setSectorSize is defined at sqlite3.c:50207:13
func _846setSectorSize(tls crt.TLS, _pPager uintptr /* *TPager = SPager */) {
	if (*(*uint8)(unsafe.Pointer(_pPager + 16))) == 0 && (_585sqlite3OsDeviceCharacteristics(tls, *(*uintptr)(unsafe.Pointer(_pPager + 72)))&int32(0x1000)) == int32(0) {
		goto _1
	}

	*(*uint32)(unsafe.Pointer(_pPager + 184)) = uint32(512)
	goto _2

_1:
	*(*uint32)(unsafe.Pointer(_pPager + 184)) = uint32(_905sqlite3SectorSize(tls, *(*uintptr)(unsafe.Pointer(_pPager + 72))))
_2:
}

// _847sqlite3PcacheOpen is defined at sqlite3.c:44981:20
func _847sqlite3PcacheOpen(tls crt.TLS, _szPage int32, _szExtra int32, _bPurgeable int32, _xStress uintptr /* *func(crt.TLS, uintptr, uintptr) int32 */, _pStress uintptr /* *void */, _p uintptr /* *TPCache = SPCache */) (r int32) {
	crt.Xmemset(tls, _p, int32(0), uint64(72))
	*(*int32)(unsafe.Pointer(_p + 36)) = int32(1)
	*(*int32)(unsafe.Pointer(_p + 40)) = _szExtra

	*(*uint8)(unsafe.Pointer(_p + 44)) = uint8(_bPurgeable)
	*(*uint8)(unsafe.Pointer(_p + 45)) = uint8(2)
	*(*uintptr)(unsafe.Pointer(_p + 48)) = _xStress
	*(*uintptr)(unsafe.Pointer(_p + 56)) = _pStress
	*(*int32)(unsafe.Pointer(_p + 28)) = int32(100)
	*(*int32)(unsafe.Pointer(_p + 32)) = int32(1)
	return _757sqlite3PcacheSetPageSize(tls, _p, _szPage)
}

// _848pagerStress is defined at sqlite3.c:52037:12
func _848pagerStress(tls crt.TLS, _p uintptr /* *void */, _pPg uintptr /* *TPgHdr = SPgHdr */) (r int32) {
	var (
		_pPager uintptr // *TPager = SPager
		_rc     int32
	)
	_pPager = _p
	_rc = int32(0)

	if *(*int32)(unsafe.Pointer(_pPager + 44)) == 0 {
		goto _1
	}

	return int32(0)

_1:
	if (*(*uint8)(unsafe.Pointer(_pPager + 24))) == 0 || (int32(*(*uint8)(unsafe.Pointer(_pPager + 24)))&int32(3)) == int32(0) && (int32(*(*uint16)(unsafe.Pointer(_pPg + 52)))&int32(0x8)) == int32(0) {
		goto _2
	}

	return int32(0)

_2:
	*(*uintptr)(unsafe.Pointer(_pPg + 32)) = null
	if (*(*uintptr)(unsafe.Pointer(_pPager + 288))) == 0 {
		goto _3
	}

	_rc = _339subjournalPageIfRequired(tls, _pPg)
	if _rc != int32(0) {
		goto _5
	}

	_rc = _345pagerWalFrames(tls, _pPager, _pPg, uint32(0), int32(0))
_5:
	goto _4

_3:
	if (int32(*(*uint16)(unsafe.Pointer(_pPg + 52)))&int32(0x8)) == 0 && int32(*(*uint8)(unsafe.Pointer(_pPager + 20))) != int32(3) {
		goto _6
	}

	_rc = _349syncJournal(tls, _pPager, int32(1))
_6:
	if _rc != int32(0) {
		goto _7
	}

	_rc = _350pager_write_pagelist(tls, _pPager, _pPg)
_7:
_4:
	if _rc != int32(0) {
		goto _8
	}

	_579sqlite3PcacheMakeClean(tls, _pPg)
_8:
	return _591pager_error(tls, _pPager, _rc)
}

// _849sqlite3OsClose is defined at sqlite3.c:20774:21
func _849sqlite3OsClose(tls crt.TLS, _pId uintptr /* *Tsqlite3_file = Ssqlite3_file */) {
	if (*(*uintptr)(unsafe.Pointer(_pId))) == 0 {
		goto _1
	}

	fn12(*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pId))) + 8)))(tls, _pId)
	*(*uintptr)(unsafe.Pointer(_pId)) = null
_1:
}

// _850sqlite3PagerPageRefcount is defined at sqlite3.c:54180:20
func _850sqlite3PagerPageRefcount(tls crt.TLS, _pPage uintptr /* *TDbPage = SPgHdr */) (r int32) {
	return _1131sqlite3PcachePageRefcount(tls, _pPage)
}

// _851btreeInitPage is defined at sqlite3.c:61476:12
func _851btreeInitPage(tls crt.TLS, _pPage uintptr /* *TMemPage = SMemPage */) (r int32) {
	var (
		_pc         int32
		_hdr        uint8
		_data       uintptr // *Tu8 = uint8
		_pBt        uintptr // *TBtShared = SBtShared
		_usableSize int32
		_cellOffset uint16
		_nFree      int32
		_top        int32
		_iCellFirst int32
		_iCellLast  int32
		_i          int32
		_sz         int32
		_next       uint32
		_size       uint32
	)

	_pBt = *(*uintptr)(unsafe.Pointer(_pPage + 72))
	_hdr = *(*uint8)(unsafe.Pointer(_pPage + 9))
	_data = *(*uintptr)(unsafe.Pointer(_pPage + 80))
	if _885decodeFlags(tls, _pPage, int32(*(*uint8)(unsafe.Pointer(_data + uintptr(_hdr))))) == 0 {
		goto _1
	}

	return _556sqlite3CorruptError(tls, int32(61502))

_1:
	*(*uint16)(unsafe.Pointer(_pPage + 24)) = uint16((*(*uint32)(unsafe.Pointer(_pBt + 48))) - uint32(1))
	*(*uint8)(unsafe.Pointer(_pPage + 12)) = uint8(0)
	_usableSize = int32(*(*uint32)(unsafe.Pointer(_pBt + 52)))
	*(*uint16)(unsafe.Pointer(_pPage + 18)) = set60(&_cellOffset, uint16((int32(_hdr)+int32(8))+int32(*(*uint8)(unsafe.Pointer(_pPage + 10)))))
	*(*uintptr)(unsafe.Pointer(_pPage + 88)) = _data + uintptr(_usableSize)
	*(*uintptr)(unsafe.Pointer(_pPage + 96)) = _data + uintptr(_cellOffset)
	*(*uintptr)(unsafe.Pointer(_pPage + 104)) = _data + uintptr(*(*uint8)(unsafe.Pointer(_pPage + 10)))
	_top = (((int32(*(*uint8)(unsafe.Pointer(_data + uintptr(int32(_hdr)+int32(5))))) << (uint(8) % 32)) | int32(*(*uint8)(unsafe.Pointer((_data + uintptr(int32(_hdr)+int32(5))) + 1))) - int32(1)) & int32(0xffff)) + int32(1)
	*(*uint16)(unsafe.Pointer(_pPage + 22)) = uint16((int32(*(*uint8)(unsafe.Pointer(_data + uintptr(int32(_hdr)+int32(3))))) << (uint(8) % 32)) | int32(*(*uint8)(unsafe.Pointer((_data + uintptr(int32(_hdr)+int32(3))) + 1))))
	if uint32(*(*uint16)(unsafe.Pointer(_pPage + 22))) <= (((*(*uint32)(unsafe.Pointer(_pBt + 48))) - uint32(8)) / uint32(6)) {
		goto _2
	}

	return _556sqlite3CorruptError(tls, int32(61521))

_2:
	_iCellFirst = int32(_cellOffset) + (int32(2) * int32(*(*uint16)(unsafe.Pointer(_pPage + 22))))
	_iCellLast = _usableSize - int32(4)
	if ((*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pBt + 8))) + 48))) & uint32(0x200000)) == 0 {
		goto _3
	}

	if (*(*uint8)(unsafe.Pointer(_pPage + 8))) != 0 {
		goto _4
	}

	_iCellLast--
_4:
	_i = int32(0)
_5:
	if _i >= int32(*(*uint16)(unsafe.Pointer(_pPage + 22))) {
		goto _7
	}

	_pc = (int32(*(*uint8)(unsafe.Pointer(_data + uintptr(int32(_cellOffset)+(_i*int32(2)))))) << (uint(8) % 32)) | int32(*(*uint8)(unsafe.Pointer((_data + uintptr(int32(_cellOffset)+(_i*int32(2)))) + 1)))
	if _pc >= _iCellFirst && _pc <= _iCellLast {
		goto _8
	}

	return _556sqlite3CorruptError(tls, int32(61549))

_8:
	_sz = int32(fn144(*(*uintptr)(unsafe.Pointer(_pPage + 120)))(tls, _pPage, _data+uintptr(_pc)))
	if (_pc + _sz) <= _usableSize {
		goto _9
	}

	return _556sqlite3CorruptError(tls, int32(61554))

_9:
	_i++
	goto _5

_7:
	if (*(*uint8)(unsafe.Pointer(_pPage + 8))) != 0 {
		goto _10
	}

	_iCellLast++
_10:
_3:
	_pc = (int32(*(*uint8)(unsafe.Pointer(_data + uintptr(int32(_hdr)+int32(1))))) << (uint(8) % 32)) | int32(*(*uint8)(unsafe.Pointer((_data + uintptr(int32(_hdr)+int32(1))) + 1)))
	_nFree = int32(*(*uint8)(unsafe.Pointer(_data + uintptr(int32(_hdr)+int32(7))))) + _top
	if _pc <= int32(0) {
		goto _11
	}

	if _pc >= _iCellFirst {
		goto _12
	}

	return _556sqlite3CorruptError(tls, int32(61572))

_12:
_13:
	if _pc <= _iCellLast {
		goto _15
	}

	return _556sqlite3CorruptError(tls, int32(61577))

_15:
	_next = uint32((int32(*(*uint8)(unsafe.Pointer(_data + uintptr(_pc)))) << (uint(8) % 32)) | int32(*(*uint8)(unsafe.Pointer((_data + uintptr(_pc)) + 1))))
	_size = uint32((int32(*(*uint8)(unsafe.Pointer(_data + uintptr(_pc+int32(2))))) << (uint(8) % 32)) | int32(*(*uint8)(unsafe.Pointer((_data + uintptr(_pc+int32(2))) + 1))))
	_nFree = int32(uint32(_nFree) + _size)
	if _next > ((uint32(_pc) + _size) + uint32(3)) {
		goto _16
	}

	goto _14

_16:
	_pc = int32(_next)
	goto _13

_14:
	if _next <= uint32(0) {
		goto _17
	}

	return _556sqlite3CorruptError(tls, int32(61587))

_17:
	if (uint32(_pc) + _size) <= uint32(_usableSize) {
		goto _18
	}

	return _556sqlite3CorruptError(tls, int32(61591))

_18:
_11:
	if _nFree <= _usableSize {
		goto _19
	}

	return _556sqlite3CorruptError(tls, int32(61603))

_19:
	*(*uint16)(unsafe.Pointer(_pPage + 20)) = uint16(_nFree - _iCellFirst)
	*(*uint8)(unsafe.Pointer(_pPage)) = uint8(1)
	return int32(0)
}

// _852pagerFreeMapHdrs is defined at sqlite3.c:51575:13
func _852pagerFreeMapHdrs(tls crt.TLS, _pPager uintptr /* *TPager = SPager */) {
	var (
		_p     uintptr // *TPgHdr = SPgHdr
		_pNext uintptr // *TPgHdr = SPgHdr
	)
	_p = *(*uintptr)(unsafe.Pointer(_pPager + 168))
_1:
	if _p == 0 {
		goto _3
	}

	_pNext = *(*uintptr)(unsafe.Pointer(_p + 32))
	Xsqlite3_free(tls, _p)
	_p = _pNext
	goto _1

_3:
}

// _853sqlite3WalClose is defined at sqlite3.c:57039:20
func _853sqlite3WalClose(tls crt.TLS, _pWal uintptr /* *TWal = SWal */, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _sync_flags int32, _nBuf int32, _zBuf uintptr /* *Tu8 = uint8 */) (r int32) {
	esc := crt.MustMalloc(4)
	var (
		_rc       int32
		_isDelete int32
		_bPersist = esc // *int32
	)
	defer crt.Free(esc)
	_rc = int32(0)
	if _pWal == 0 {
		goto _1
	}

	_isDelete = int32(0)
	if _zBuf == 0 || int32(0) != set5(&_rc, _881sqlite3OsLock(tls, *(*uintptr)(unsafe.Pointer(_pWal + 8)), int32(4))) {
		goto _2
	}

	if int32(*(*uint8)(unsafe.Pointer(_pWal + 63))) != int32(0) {
		goto _3
	}

	*(*uint8)(unsafe.Pointer(_pWal + 63)) = uint8(1)
_3:
	_rc = _1132sqlite3WalCheckpoint(tls, _pWal, _db, int32(0), null, null, _sync_flags, _nBuf, _zBuf, null, null)
	if _rc != int32(0) {
		goto _4
	}

	*(*int32)(unsafe.Pointer(_bPersist)) = int32(-1)
	_521sqlite3OsFileControlHint(tls, *(*uintptr)(unsafe.Pointer(_pWal + 8)), int32(10), _bPersist)
	if (*(*int32)(unsafe.Pointer(_bPersist))) == int32(1) {
		goto _5
	}

	_isDelete = int32(1)
	goto _6

_5:
	if (*(*int64)(unsafe.Pointer(_pWal + 32))) < int64(0) {
		goto _7
	}

	_906walLimitSize(tls, _pWal, int64(0))
_7:
_6:
_4:
_2:
	_1133walIndexClose(tls, _pWal, _isDelete)
	_849sqlite3OsClose(tls, *(*uintptr)(unsafe.Pointer(_pWal + 16)))
	if _isDelete == 0 {
		goto _8
	}

	_523sqlite3BeginBenignMalloc(tls)
	_913sqlite3OsDelete(tls, *(*uintptr)(unsafe.Pointer(_pWal)), *(*uintptr)(unsafe.Pointer(_pWal + 128)), int32(0))
	_524sqlite3EndBenignMalloc(tls)
_8:
	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_pWal + 48)))
	Xsqlite3_free(tls, _pWal)
_1:
	return _rc
}

// _854pager_unlock is defined at sqlite3.c:49305:13
func _854pager_unlock(tls crt.TLS, _pPager uintptr /* *TPager = SPager */) {
	var (
		_rc  int32
		_iDc int32
	)

	_409sqlite3BitvecDestroy(tls, *(*uintptr)(unsafe.Pointer(_pPager + 64)))
	*(*uintptr)(unsafe.Pointer(_pPager + 64)) = null
	_910releaseAllSavepoints(tls, _pPager)
	if (*(*uintptr)(unsafe.Pointer(_pPager + 288))) == 0 {
		goto _1
	}

	_1134sqlite3WalEndReadTransaction(tls, *(*uintptr)(unsafe.Pointer(_pPager + 288)))
	*(*uint8)(unsafe.Pointer(_pPager + 20)) = uint8(0)
	goto _2

_1:
	if (*(*uint8)(unsafe.Pointer(_pPager + 8))) != 0 {
		goto _3
	}

	_iDc = func() int32 {
		if (*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pPager + 72))))) != 0 {
			return _585sqlite3OsDeviceCharacteristics(tls, *(*uintptr)(unsafe.Pointer(_pPager + 72)))
		}
		return int32(0)
	}()

	if int32(0) != (_iDc&int32(0x800)) && int32(1) == (int32(*(*uint8)(unsafe.Pointer(_pPager + 9)))&int32(5)) {
		goto _4
	}

	_849sqlite3OsClose(tls, *(*uintptr)(unsafe.Pointer(_pPager + 80)))
_4:
	_rc = _873pagerUnlockDb(tls, _pPager, int32(0))
	if _rc == int32(0) || int32(*(*uint8)(unsafe.Pointer(_pPager + 20))) != int32(6) {
		goto _5
	}

	*(*uint8)(unsafe.Pointer(_pPager + 21)) = uint8(5)
_5:
	*(*uint8)(unsafe.Pointer(_pPager + 22)) = uint8(0)
	*(*uint8)(unsafe.Pointer(_pPager + 20)) = uint8(0)
_3:
_2:
	if (*(*int32)(unsafe.Pointer(_pPager + 44))) == 0 {
		goto _6
	}

	if int32(*(*uint8)(unsafe.Pointer(_pPager + 16))) != int32(0) {
		goto _7
	}

	_756pager_reset(tls, _pPager)
	*(*uint8)(unsafe.Pointer(_pPager + 22)) = uint8(0)
	*(*uint8)(unsafe.Pointer(_pPager + 20)) = uint8(0)
	goto _8

_7:
	*(*uint8)(unsafe.Pointer(_pPager + 20)) = uint8(func() int32 {
		if (*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pPager + 80))))) != 0 {
			return int32(0)
		}
		return int32(1)
	}())
_8:
	if *(*uint8)(unsafe.Pointer(_pPager + 26)) == 0 {
		goto _9
	}

	_874sqlite3OsUnfetch(tls, *(*uintptr)(unsafe.Pointer(_pPager + 72)), int64(0), null)
_9:
	*(*int32)(unsafe.Pointer(_pPager + 44)) = int32(0)
	_603setGetterMethod(tls, _pPager)
_6:
	*(*int64)(unsafe.Pointer(_pPager + 96)) = int64(0)
	*(*int64)(unsafe.Pointer(_pPager + 104)) = int64(0)
	*(*uint8)(unsafe.Pointer(_pPager + 23)) = uint8(0)
}

// _855pagerSyncHotJournal is defined at sqlite3.c:51496:12
func _855pagerSyncHotJournal(tls crt.TLS, _pPager uintptr /* *TPager = SPager */) (r int32) {
	var _rc int32

	_rc = int32(0)
	if (*(*uint8)(unsafe.Pointer(_pPager + 11))) != 0 {
		goto _1
	}

	_rc = _354sqlite3OsSync(tls, *(*uintptr)(unsafe.Pointer(_pPager + 80)), int32(0x2))
_1:
	if _rc != int32(0) {
		goto _2
	}

	_rc = _352sqlite3OsFileSize(tls, *(*uintptr)(unsafe.Pointer(_pPager + 80)), _pPager+104)
_2:
	return _rc
}

// _856pagerUnlockAndRollback is defined at sqlite3.c:49645:13
func _856pagerUnlockAndRollback(tls crt.TLS, _pPager uintptr /* *TPager = SPager */) {
	if int32(*(*uint8)(unsafe.Pointer(_pPager + 20))) == int32(6) || int32(*(*uint8)(unsafe.Pointer(_pPager + 20))) == int32(0) {
		goto _1
	}

	if int32(*(*uint8)(unsafe.Pointer(_pPager + 20))) < int32(2) {
		goto _2
	}

	_523sqlite3BeginBenignMalloc(tls)
	_362sqlite3PagerRollback(tls, _pPager)
	_524sqlite3EndBenignMalloc(tls)
	goto _3

_2:
	if (*(*uint8)(unsafe.Pointer(_pPager + 8))) != 0 {
		goto _4
	}

	_590pager_end_transaction(tls, _pPager, int32(0), int32(0))
_4:
_3:
_1:
	_854pager_unlock(tls, _pPager)
}

// _857sqlite3PcacheClose is defined at sqlite3.c:45364:21
func _857sqlite3PcacheClose(tls crt.TLS, _pCache uintptr /* *TPCache = SPCache */) {
	fn16(*(*uintptr)(unsafe.Pointer((_28sqlite3Config + 184) + 88)))(tls, *(*uintptr)(unsafe.Pointer(_pCache + 64)))
}

// _858sqlite3PcacheSetCachesize is defined at sqlite3.c:45498:21
func _858sqlite3PcacheSetCachesize(tls crt.TLS, _pCache uintptr /* *TPCache = SPCache */, _mxPage int32) {
	*(*int32)(unsafe.Pointer(_pCache + 28)) = _mxPage
	fn148(*(*uintptr)(unsafe.Pointer((_28sqlite3Config + 184) + 40)))(tls, *(*uintptr)(unsafe.Pointer(_pCache + 64)), _898numberOfCachePages(tls, _pCache))
}

// _859sqlite3InvalidFunction is defined at sqlite3.c:77686:21
func _859sqlite3InvalidFunction(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _NotUsed int32, _NotUsed2 uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	var (
		_zName uintptr // *int8
		_zErr  uintptr // *int8
	)
	_zName = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_context + 8))) + 40))

	_zErr = Xsqlite3_mprintf(tls, ts+21397 /* "unable to use function %s in the..." */, _zName)
	Xsqlite3_result_error(tls, _context, _zErr, int32(-1))
	Xsqlite3_free(tls, _zErr)
}

// _860vdbeReleaseAndSetInt64 is defined at sqlite3.c:71136:29
func _860vdbeReleaseAndSetInt64(tls crt.TLS, _pMem uintptr /* *TMem = Ssqlite3_value */, _val int64) {
	_643sqlite3VdbeMemSetNull(tls, _pMem)
	*(*int64)(unsafe.Pointer(_pMem)) = _val
	*(*uint16)(unsafe.Pointer(_pMem + 8)) = uint16(0x4)
}

// _861RC [24]uint64, escapes: true, shell.c:897:20
var _861RC = ds + 8512

// _862sqlite3VtabCreateModule is defined at sqlite3.c:126348:23
func _862sqlite3VtabCreateModule(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _zName uintptr /* *int8 */, _pModule uintptr /* *Tsqlite3_module = Ssqlite3_module */, _pAux uintptr /* *void */, _xDestroy uintptr /* *func(crt.TLS, uintptr) */) (r uintptr /* *TModule = SModule */) {
	var (
		_pMod  uintptr // *TModule = SModule
		_nName int32
		_pDel  uintptr // *TModule = SModule
		_zCopy uintptr // *int8
	)
	_nName = _211sqlite3Strlen30(tls, _zName)
	_pMod = _198sqlite3Malloc(tls, uint64((uint64(40)+uint64(_nName))+uint64(1)))
	if _pMod != 0 {
		goto _1
	}

	_178sqlite3OomFault(tls, _db)
	goto _2

_1:
	_zCopy = _pMod + 40
	crt.Xmemcpy(tls, _zCopy, _zName, uint64(_nName+int32(1)))
	*(*uintptr)(unsafe.Pointer(_pMod + 8)) = _zCopy
	*(*uintptr)(unsafe.Pointer(_pMod)) = _pModule
	*(*uintptr)(unsafe.Pointer(_pMod + 16)) = _pAux
	*(*uintptr)(unsafe.Pointer(_pMod + 24)) = _xDestroy
	*(*uintptr)(unsafe.Pointer(_pMod + 32)) = null
	_pDel = _841sqlite3HashInsert(tls, _db+448, _zCopy, _pMod)

	if _pDel == 0 {
		goto _3
	}

	_178sqlite3OomFault(tls, _db)
	_181sqlite3DbFree(tls, _db, _pDel)
	_pMod = null
_3:
_2:
	return _pMod
}

type Scompletion_vtab struct {
	Xbase Ssqlite3_vtab
	Xdb   uintptr // *Ssqlite3
}

type Ssqlite3_index_info struct {
	XnConstraint      int32
	XaConstraint      uintptr // *struct{XiColumn int32;Xop uint8;Xusable uint8;XiTermOffset int32;}
	XnOrderBy         int32
	XaOrderBy         uintptr // *struct{XiColumn int32;Xdesc uint8;}
	XaConstraintUsage uintptr // *struct{XargvIndex int32;Xomit uint8;}
	XidxNum           int32
	XidxStr           uintptr // *int8
	XneedToFreeIdxStr int32
	XorderByConsumed  int32
	XestimatedCost    float64
	XestimatedRows    int64
	XidxFlags         int32
	XcolUsed          uint64
}

type Ssqlite3_index_constraint struct {
	XiColumn     int32
	Xop          uint8
	Xusable      uint8
	XiTermOffset int32
}

type Scompletion_cursor struct {
	Xbase        Ssqlite3_vtab_cursor
	Xdb          uintptr // *Ssqlite3
	XnPrefix     int32
	XnLine       int32
	XzPrefix     uintptr // *int8
	XzLine       uintptr // *int8
	XzCurrentRow uintptr // *int8
	XpStmt       uintptr // *Ssqlite3_stmt
	XiRowid      int64
	XePhase      int32
	Xj           int32
}

// _863completionCursorReset is defined at shell.c:1794:13
func _863completionCursorReset(tls crt.TLS, _pCur uintptr /* *Tcompletion_cursor = Scompletion_cursor */) {
	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_pCur + 24)))
	*(*uintptr)(unsafe.Pointer(_pCur + 24)) = null
	*(*int32)(unsafe.Pointer(_pCur + 16)) = int32(0)
	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_pCur + 32)))
	*(*uintptr)(unsafe.Pointer(_pCur + 32)) = null
	*(*int32)(unsafe.Pointer(_pCur + 20)) = int32(0)
	Xsqlite3_finalize(tls, *(*uintptr)(unsafe.Pointer(_pCur + 48)))
	*(*uintptr)(unsafe.Pointer(_pCur + 48)) = null
	*(*int32)(unsafe.Pointer(_pCur + 68)) = int32(0)
}

// _864completionKwrds [124]*int8, escapes: true, shell.c:1813:19
var _864completionKwrds = bss + 11696 // array of 124 pointer to char

func init() {
	*(*[124]uintptr)(unsafe.Pointer(_864completionKwrds)) = [124]uintptr{
		0:   ts + 15944, /* "ABORT" */
		1:   ts + 15950, /* "ACTION" */
		2:   ts + 15957, /* "ADD" */
		3:   ts + 15961, /* "AFTER" */
		4:   ts + 15967, /* "ALL" */
		5:   ts + 15971, /* "ALTER" */
		6:   ts + 13192, /* "ANALYZE" */
		7:   ts + 15977, /* "AND" */
		8:   ts + 15981, /* "AS" */
		9:   ts + 15984, /* "ASC" */
		10:  ts + 13158, /* "ATTACH" */
		11:  ts + 15988, /* "AUTOINCREMENT" */
		12:  ts + 16002, /* "BEFORE" */
		13:  ts + 3817,  /* "BEGIN" */
		14:  ts + 16009, /* "BETWEEN" */
		15:  ts + 16017, /* "BY" */
		16:  ts + 16020, /* "CASCADE" */
		17:  ts + 16028, /* "CASE" */
		18:  ts + 16033, /* "CAST" */
		19:  ts + 16038, /* "CHECK" */
		20:  ts + 16044, /* "COLLATE" */
		21:  ts + 16052, /* "COLUMN" */
		22:  ts + 3977,  /* "COMMIT" */
		23:  ts + 16059, /* "CONFLICT" */
		24:  ts + 16068, /* "CONSTRAINT" */
		25:  ts + 16079, /* "CREATE" */
		26:  ts + 16086, /* "CROSS" */
		27:  ts + 16092, /* "CURRENT_DATE" */
		28:  ts + 16105, /* "CURRENT_TIME" */
		29:  ts + 16118, /* "CURRENT_TIMESTAMP" */
		30:  ts + 16136, /* "DATABASE" */
		31:  ts + 16145, /* "DEFAULT" */
		32:  ts + 16153, /* "DEFERRABLE" */
		33:  ts + 16164, /* "DEFERRED" */
		34:  ts + 12996, /* "DELETE" */
		35:  ts + 16173, /* "DESC" */
		36:  ts + 13165, /* "DETACH" */
		37:  ts + 16178, /* "DISTINCT" */
		38:  ts + 16187, /* "DROP" */
		39:  ts + 16192, /* "EACH" */
		40:  ts + 16197, /* "ELSE" */
		41:  ts + 16202, /* "END" */
		42:  ts + 16206, /* "ESCAPE" */
		43:  ts + 16213, /* "EXCEPT" */
		44:  ts + 16220, /* "EXCLUSIVE" */
		45:  ts + 16230, /* "EXISTS" */
		46:  ts + 16237, /* "EXPLAIN" */
		47:  ts + 16245, /* "FAIL" */
		48:  ts + 16250, /* "FOR" */
		49:  ts + 16254, /* "FOREIGN" */
		50:  ts + 16262, /* "FROM" */
		51:  ts + 16267, /* "FULL" */
		52:  ts + 16272, /* "GLOB" */
		53:  ts + 16277, /* "GROUP" */
		54:  ts + 16283, /* "HAVING" */
		55:  ts + 16290, /* "IF" */
		56:  ts + 16293, /* "IGNORE" */
		57:  ts + 16300, /* "IMMEDIATE" */
		58:  ts + 16310, /* "IN" */
		59:  ts + 12807, /* "INDEX" */
		60:  ts + 16313, /* "INDEXED" */
		61:  ts + 16321, /* "INITIALLY" */
		62:  ts + 16331, /* "INNER" */
		63:  ts + 13113, /* "INSERT" */
		64:  ts + 16337, /* "INSTEAD" */
		65:  ts + 16345, /* "INTERSECT" */
		66:  ts + 16355, /* "INTO" */
		67:  ts + 16360, /* "IS" */
		68:  ts + 16363, /* "ISNULL" */
		69:  ts + 16370, /* "JOIN" */
		70:  ts + 16375, /* "KEY" */
		71:  ts + 16379, /* "LEFT" */
		72:  ts + 16384, /* "LIKE" */
		73:  ts + 16389, /* "LIMIT" */
		74:  ts + 16395, /* "MATCH" */
		75:  ts + 16401, /* "NATURAL" */
		76:  ts + 16409, /* "NO" */
		77:  ts + 16412, /* "NOT" */
		78:  ts + 16416, /* "NOTNULL" */
		79:  ts + 8837,  /* "NULL" */
		80:  ts + 16424, /* "OF" */
		81:  ts + 16427, /* "OFFSET" */
		82:  ts + 16434, /* "ON" */
		83:  ts + 16437, /* "OR" */
		84:  ts + 16440, /* "ORDER" */
		85:  ts + 16446, /* "OUTER" */
		86:  ts + 16452, /* "PLAN" */
		87:  ts + 13120, /* "PRAGMA" */
		88:  ts + 16457, /* "PRIMARY" */
		89:  ts + 16465, /* "QUERY" */
		90:  ts + 16471, /* "RAISE" */
		91:  ts + 13245, /* "RECURSIVE" */
		92:  ts + 16477, /* "REFERENCES" */
		93:  ts + 16488, /* "REGEXP" */
		94:  ts + 13184, /* "REINDEX" */
		95:  ts + 16495, /* "RELEASE" */
		96:  ts + 16503, /* "RENAME" */
		97:  ts + 16510, /* "REPLACE" */
		98:  ts + 16518, /* "RESTRICT" */
		99:  ts + 16527, /* "RIGHT" */
		100: ts + 16533, /* "ROLLBACK" */
		101: ts + 16542, /* "ROW" */
		102: ts + 13235, /* "SAVEPOINT" */
		103: ts + 13132, /* "SELECT" */
		104: ts + 16546, /* "SET" */
		105: ts + 12801, /* "TABLE" */
		106: ts + 16550, /* "TEMP" */
		107: ts + 16555, /* "TEMPORARY" */
		108: ts + 16565, /* "THEN" */
		109: ts + 16570, /* "TO" */
		110: ts + 13139, /* "TRANSACTION" */
		111: ts + 12831, /* "TRIGGER" */
		112: ts + 16573, /* "UNION" */
		113: ts + 16579, /* "UNIQUE" */
		114: ts + 13151, /* "UPDATE" */
		115: ts + 16586, /* "USING" */
		116: ts + 16592, /* "VACUUM" */
		117: ts + 16599, /* "VALUES" */
		118: ts + 12826, /* "VIEW" */
		119: ts + 16606, /* "VIRTUAL" */
		120: ts + 16614, /* "WHEN" */
		121: ts + 16619, /* "WHERE" */
		122: ts + 16625, /* "WITH" */
		123: ts + 16630, /* "WITHOUT" */
	}
}

// _865matchQuality is defined at sqlite3.c:105391:12
func _865matchQuality(tls crt.TLS, _p uintptr /* *TFuncDef = SFuncDef */, _nArg int32, _enc uint8) (r int32) {
	var _match int32

	if _nArg != int32(-2) {
		goto _1
	}

	if (*(*uintptr)(unsafe.Pointer(_p + 24))) == 0 {
		return int32(0)
	}

	return int32(6)

_1:
	if int32(*(*int8)(unsafe.Pointer(_p))) == _nArg || int32(*(*int8)(unsafe.Pointer(_p))) < int32(0) {
		goto _2
	}

	return int32(0)

_2:
	if int32(*(*int8)(unsafe.Pointer(_p))) != _nArg {
		goto _3
	}

	_match = int32(4)
	goto _4

_3:
	_match = int32(1)
_4:
	if int32(_enc) != (int32(*(*uint16)(unsafe.Pointer(_p + 2))) & int32(0x3)) {
		goto _5
	}

	_match = int32(_match + int32(2))
	goto _6

_5:
	if ((int32(_enc) & int32(*(*uint16)(unsafe.Pointer(_p + 2)))) & int32(2)) == int32(0) {
		goto _7
	}

	_match = int32(_match + int32(1))
_7:
_6:
	return _match
}

// _866sqlite3RowSetClear is defined at sqlite3.c:46985:21
func _866sqlite3RowSetClear(tls crt.TLS, _p uintptr /* *TRowSet = SRowSet */) {
	var (
		_pChunk     uintptr // *SRowSetChunk
		_pNextChunk uintptr // *SRowSetChunk
	)
	_pChunk = *(*uintptr)(unsafe.Pointer(_p))
_1:
	if _pChunk == 0 {
		goto _3
	}

	_pNextChunk = *(*uintptr)(unsafe.Pointer(_pChunk))
	_181sqlite3DbFree(tls, *(*uintptr)(unsafe.Pointer(_p + 8)), _pChunk)
	_pChunk = _pNextChunk
	goto _1

_3:
	*(*uintptr)(unsafe.Pointer(_p)) = null
	*(*uint16)(unsafe.Pointer(_p + 48)) = uint16(0)
	*(*uintptr)(unsafe.Pointer(_p + 16)) = null
	*(*uintptr)(unsafe.Pointer(_p + 24)) = null
	*(*uintptr)(unsafe.Pointer(_p + 40)) = null
	*(*uint16)(unsafe.Pointer(_p + 50)) = uint16(0x1)
}

// _867vdbeMemAddTerminator is defined at sqlite3.c:70635:28
func _867vdbeMemAddTerminator(tls crt.TLS, _pMem uintptr /* *TMem = Ssqlite3_value */) (r int32) {
	if _627sqlite3VdbeMemGrow(tls, _pMem, (*(*int32)(unsafe.Pointer(_pMem + 12)))+int32(2), int32(1)) == 0 {
		goto _1
	}

	return int32(7)

_1:
	*(*int8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pMem + 16))) + uintptr(*(*int32)(unsafe.Pointer(_pMem + 12))))) = int8(0)
	*(*int8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pMem + 16))) + uintptr((*(*int32)(unsafe.Pointer(_pMem + 12)))+int32(1)))) = int8(0)
	{
		p := &(*(*uint16)(unsafe.Pointer(_pMem + 8)))
		*p = uint16(int32(*p) | int32(0x200))
	}
	return int32(0)
}

// _868sqlite3StrAccumReset is defined at sqlite3.c:26437:21
func _868sqlite3StrAccumReset(tls crt.TLS, _p uintptr /* *TStrAccum = SStrAccum */) {
	if (int32(*(*uint8)(unsafe.Pointer(_p + 29))) & int32(0x4)) == int32(0) {
		goto _1
	}

	_181sqlite3DbFree(tls, *(*uintptr)(unsafe.Pointer(_p)), *(*uintptr)(unsafe.Pointer(_p + 8)))
	{
		p := &(*(*uint8)(unsafe.Pointer(_p + 29)))
		*p = uint8(int32(*p) & int32(-5))
	}
_1:
	*(*uintptr)(unsafe.Pointer(_p + 8)) = null
}

// _869sqlite3DbRealloc is defined at sqlite3.c:25379:21
func _869sqlite3DbRealloc(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _p uintptr /* *void */, _n uint64) (r uintptr /* *void */) {
	if _p != 0 {
		goto _1
	}

	return _373sqlite3DbMallocRawNN(tls, _db, _n)

_1:
	if _614isLookaside(tls, _db, _p) == 0 || _n > uint64(*(*uint16)(unsafe.Pointer((_db + 352) + 4))) {
		goto _2
	}

	return _p

_2:
	return _1135dbReallocFinish(tls, _db, _p, _n)
}

// _870exprListDeleteNN is defined at sqlite3.c:93493:29
func _870exprListDeleteNN(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pList uintptr /* *TExprList = SExprList */) {
	var (
		_i     int32
		_pItem uintptr // *SExprList_item
	)
	_i = *(*int32)(unsafe.Pointer(_pList))
	_pItem = _pList + 8

_1:
	_777sqlite3ExprDelete(tls, _db, *(*uintptr)(unsafe.Pointer(_pItem)))
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_pItem + 8)))
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_pItem + 16)))
	_pItem += 32
	if preinc47(&_i) > int32(0) {
		goto _1
	}

	_376sqlite3DbFreeNN(tls, _db, _pList)
}

type SCellInfo struct {
	XnKey     int64
	XpPayload uintptr // *uint8
	XnPayload uint32
	XnLocal   uint16
	XnSize    uint16
}

// _871hasHotJournal is defined at sqlite3.c:52505:12
func _871hasHotJournal(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _pExists uintptr /* *int32 */) (r int32) {
	esc := crt.MustMalloc(65)
	var (
		_pVfs     uintptr // *Tsqlite3_vfs = Ssqlite3_vfs
		_rc       int32
		_exists   = esc // *int32
		_jrnlOpen int32
		_locked   = esc + 16 // *int32
		_nPage    = esc + 32 // *TPgno = Tu32 = uint32
		_f        = esc + 48 // *int32
		_first    = esc + 64 // *Tu8 = uint8
	)
	defer crt.Free(esc)
	_pVfs = *(*uintptr)(unsafe.Pointer(_pPager))
	_rc = int32(0)
	*(*int32)(unsafe.Pointer(_exists)) = int32(1)
	_jrnlOpen = bool2int((*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pPager + 80))))) != 0)

	*(*int32)(unsafe.Pointer(_pExists)) = int32(0)
	if _jrnlOpen != 0 {
		goto _1
	}

	_rc = _872sqlite3OsAccess(tls, _pVfs, *(*uintptr)(unsafe.Pointer(_pPager + 216)), int32(0), _exists)
_1:
	if _rc != int32(0) || (*(*int32)(unsafe.Pointer(_exists))) == 0 {
		goto _2
	}

	*(*int32)(unsafe.Pointer(_locked)) = int32(0)
	_rc = _1136sqlite3OsCheckReservedLock(tls, *(*uintptr)(unsafe.Pointer(_pPager + 72)), _locked)
	if _rc != int32(0) || (*(*int32)(unsafe.Pointer(_locked))) != 0 {
		goto _3
	}

	_rc = _877pagerPagecount(tls, _pPager, _nPage)
	if _rc != int32(0) {
		goto _4
	}

	if (*(*uint32)(unsafe.Pointer(_nPage))) != uint32(0) || _jrnlOpen != 0 {
		goto _5
	}

	_523sqlite3BeginBenignMalloc(tls)
	if _558pagerLockDb(tls, _pPager, int32(2)) != int32(0) {
		goto _7
	}

	_913sqlite3OsDelete(tls, _pVfs, *(*uintptr)(unsafe.Pointer(_pPager + 216)), int32(0))
	if (*(*uint8)(unsafe.Pointer(_pPager + 8))) != 0 {
		goto _8
	}

	_873pagerUnlockDb(tls, _pPager, int32(1))
_8:
_7:
	_524sqlite3EndBenignMalloc(tls)
	goto _6

_5:
	if _jrnlOpen != 0 {
		goto _9
	}

	*(*int32)(unsafe.Pointer(_f)) = int32(2049)
	_rc = _845sqlite3OsOpen(tls, _pVfs, *(*uintptr)(unsafe.Pointer(_pPager + 216)), *(*uintptr)(unsafe.Pointer(_pPager + 80)), *(*int32)(unsafe.Pointer(_f)), _f)
_9:
	if _rc != int32(0) {
		goto _10
	}

	*(*uint8)(unsafe.Pointer(_first)) = uint8(0)
	_rc = _586sqlite3OsRead(tls, *(*uintptr)(unsafe.Pointer(_pPager + 80)), _first, int32(1), int64(0))
	if _rc != int32(522) {
		goto _12
	}

	_rc = int32(0)
_12:
	if _jrnlOpen != 0 {
		goto _13
	}

	_849sqlite3OsClose(tls, *(*uintptr)(unsafe.Pointer(_pPager + 80)))
_13:
	*(*int32)(unsafe.Pointer(_pExists)) = bool2int(int32(*(*uint8)(unsafe.Pointer(_first))) != int32(0))
	goto _11

_10:
	if _rc != int32(14) {
		goto _14
	}

	*(*int32)(unsafe.Pointer(_pExists)) = int32(1)
	_rc = int32(0)
_14:
_11:
_6:
_4:
_3:
_2:
	return _rc
}

// _872sqlite3OsAccess is defined at sqlite3.c:20916:20
func _872sqlite3OsAccess(tls crt.TLS, _pVfs uintptr /* *Tsqlite3_vfs = Ssqlite3_vfs */, _zPath uintptr /* *int8 */, _flags int32, _pResOut uintptr /* *int32 */) (r int32) {
	return fn136(*(*uintptr)(unsafe.Pointer(_pVfs + 56)))(tls, _pVfs, _zPath, _flags, _pResOut)
}

// _873pagerUnlockDb is defined at sqlite3.c:48621:12
func _873pagerUnlockDb(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _eLock int32) (r int32) {
	var _rc int32

	_rc = int32(0)

	if (*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pPager + 72))))) == 0 {
		goto _1
	}

	_rc = func() int32 {
		if (*(*uint8)(unsafe.Pointer(_pPager + 17))) != 0 {
			return int32(0)
		}
		return _1137sqlite3OsUnlock(tls, *(*uintptr)(unsafe.Pointer(_pPager + 72)), _eLock)
	}()
	if int32(*(*uint8)(unsafe.Pointer(_pPager + 21))) == int32(5) {
		goto _2
	}

	*(*uint8)(unsafe.Pointer(_pPager + 21)) = uint8(_eLock)
_2:
_1:
	return _rc
}

// _874sqlite3OsUnfetch is defined at sqlite3.c:20876:20
func _874sqlite3OsUnfetch(tls crt.TLS, _id uintptr /* *Tsqlite3_file = Ssqlite3_file */, _iOff int64, _p uintptr /* *void */) (r int32) {
	return fn155(*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_id))) + 144)))(tls, _id, _iOff, _p)
}

// _875pagerOpenWalIfPresent is defined at sqlite3.c:50812:12
func _875pagerOpenWalIfPresent(tls crt.TLS, _pPager uintptr /* *TPager = SPager */) (r int32) {
	esc := crt.MustMalloc(20)
	var (
		_rc    int32
		_isWal = esc      // *int32
		_nPage = esc + 16 // *TPgno = Tu32 = uint32
	)
	defer crt.Free(esc)
	_rc = int32(0)

	if (*(*uint8)(unsafe.Pointer(_pPager + 16))) != 0 {
		goto _1
	}

	_rc = _872sqlite3OsAccess(tls, *(*uintptr)(unsafe.Pointer(_pPager)), *(*uintptr)(unsafe.Pointer(_pPager + 296)), int32(0), _isWal)
	if _rc != int32(0) {
		goto _2
	}

	if (*(*int32)(unsafe.Pointer(_isWal))) == 0 {
		goto _3
	}

	_rc = _877pagerPagecount(tls, _pPager, _nPage)
	if _rc == 0 {
		goto _5
	}

	return _rc

_5:
	if (*(*uint32)(unsafe.Pointer(_nPage))) != uint32(0) {
		goto _6
	}

	_rc = _913sqlite3OsDelete(tls, *(*uintptr)(unsafe.Pointer(_pPager)), *(*uintptr)(unsafe.Pointer(_pPager + 296)), int32(0))
	goto _7

_6:
	_rc = _555sqlite3PagerOpenWal(tls, _pPager, null)
_7:
	goto _4

_3:
	if int32(*(*uint8)(unsafe.Pointer(_pPager + 9))) != int32(5) {
		goto _8
	}

	*(*uint8)(unsafe.Pointer(_pPager + 9)) = uint8(0)
_8:
_4:
_2:
_1:
	return _rc
}

// _876pagerBeginReadTransaction is defined at sqlite3.c:50719:12
func _876pagerBeginReadTransaction(tls crt.TLS, _pPager uintptr /* *TPager = SPager */) (r int32) {
	esc := crt.MustMalloc(4)
	var (
		_rc      int32
		_changed = esc // *int32
	)
	defer crt.Free(esc)
	*(*int32)(unsafe.Pointer(_changed)) = int32(0)

	_1134sqlite3WalEndReadTransaction(tls, *(*uintptr)(unsafe.Pointer(_pPager + 288)))
	_rc = _1138sqlite3WalBeginReadTransaction(tls, *(*uintptr)(unsafe.Pointer(_pPager + 288)), _changed)
	if _rc == int32(0) && (*(*int32)(unsafe.Pointer(_changed))) == 0 {
		goto _1
	}

	_756pager_reset(tls, _pPager)
	if *(*uint8)(unsafe.Pointer(_pPager + 26)) == 0 {
		goto _2
	}

	_874sqlite3OsUnfetch(tls, *(*uintptr)(unsafe.Pointer(_pPager + 72)), int64(0), null)
_2:
_1:
	return _rc
}

// _877pagerPagecount is defined at sqlite3.c:50752:12
func _877pagerPagecount(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _pnPage uintptr /* *TPgno = Tu32 = uint32 */) (r int32) {
	esc := crt.MustMalloc(8)
	var (
		_nPage uint32
		_n     = esc // *Ti64 = Tsqlite_int64 = int64
		_rc    int32
	)
	defer crt.Free(esc)

	_nPage = _1139sqlite3WalDbsize(tls, *(*uintptr)(unsafe.Pointer(_pPager + 288)))
	if _nPage != uint32(0) || (*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pPager + 72))))) == 0 {
		goto _1
	}

	*(*int64)(unsafe.Pointer(_n)) = int64(0)
	_rc = _352sqlite3OsFileSize(tls, *(*uintptr)(unsafe.Pointer(_pPager + 72)), _n)
	if _rc == int32(0) {
		goto _2
	}

	return _rc

_2:
	_nPage = uint32((((*(*int64)(unsafe.Pointer(_n))) + int64(*(*int32)(unsafe.Pointer(_pPager + 188)))) - int64(1)) / int64(*(*int32)(unsafe.Pointer(_pPager + 188))))
_1:
	if _nPage <= (*(*uint32)(unsafe.Pointer(_pPager + 192))) {
		goto _3
	}

	*(*uint32)(unsafe.Pointer(_pPager + 192)) = _nPage
_3:
	*(*uint32)(unsafe.Pointer(_pnPage)) = _nPage
	return int32(0)
}

// _878pagerOpenWal is defined at sqlite3.c:54931:12
func _878pagerOpenWal(tls crt.TLS, _pPager uintptr /* *TPager = SPager */) (r int32) {
	var _rc int32

	_rc = int32(0)

	if (*(*uint8)(unsafe.Pointer(_pPager + 8))) == 0 {
		goto _1
	}

	_rc = _1022pagerExclusiveLock(tls, _pPager)
_1:
	if _rc != int32(0) {
		goto _2
	}

	_rc = _1140sqlite3WalOpen(tls, *(*uintptr)(unsafe.Pointer(_pPager)), *(*uintptr)(unsafe.Pointer(_pPager + 72)), *(*uintptr)(unsafe.Pointer(_pPager + 296)), int32(*(*uint8)(unsafe.Pointer(_pPager + 8))), *(*int64)(unsafe.Pointer(_pPager + 200)), _pPager+288)
_2:
	_758pagerFixMaplimit(tls, _pPager)
	return _rc
}

// _879walLockShared is defined at sqlite3.c:55914:12
func _879walLockShared(tls crt.TLS, _pWal uintptr /* *TWal = SWal */, _lockIdx int32) (r int32) {
	var _rc int32

	if (*(*uint8)(unsafe.Pointer(_pWal + 63))) == 0 {
		goto _1
	}

	return int32(0)

_1:
	_rc = _1141sqlite3OsShmLock(tls, *(*uintptr)(unsafe.Pointer(_pWal + 8)), _lockIdx, int32(1), int32(6))
	return _rc
}

// _880walUnlockShared is defined at sqlite3.c:55924:13
func _880walUnlockShared(tls crt.TLS, _pWal uintptr /* *TWal = SWal */, _lockIdx int32) {
	if (*(*uint8)(unsafe.Pointer(_pWal + 63))) == 0 {
		goto _1
	}

	return

_1:
	_1141sqlite3OsShmLock(tls, *(*uintptr)(unsafe.Pointer(_pWal + 8)), _lockIdx, int32(1), int32(5))
}

// _881sqlite3OsLock is defined at sqlite3.c:20799:20
func _881sqlite3OsLock(tls crt.TLS, _id uintptr /* *Tsqlite3_file = Ssqlite3_file */, _lockType int32) (r int32) {
	return fn50(*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_id))) + 56)))(tls, _id, _lockType)
}

// _882walLockExclusive is defined at sqlite3.c:55930:12
func _882walLockExclusive(tls crt.TLS, _pWal uintptr /* *TWal = SWal */, _lockIdx int32, _n int32) (r int32) {
	var _rc int32

	if (*(*uint8)(unsafe.Pointer(_pWal + 63))) == 0 {
		goto _1
	}

	return int32(0)

_1:
	_rc = _1141sqlite3OsShmLock(tls, *(*uintptr)(unsafe.Pointer(_pWal + 8)), _lockIdx, _n, int32(10))
	return _rc
}

// _883walIndexHdr is defined at sqlite3.c:55703:29
func _883walIndexHdr(tls crt.TLS, _pWal uintptr /* *TWal = SWal */) (r uintptr /* *TWalIndexHdr = SWalIndexHdr */) {
	return *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pWal + 48))))
}

// _884walUnlockExclusive is defined at sqlite3.c:55940:13
func _884walUnlockExclusive(tls crt.TLS, _pWal uintptr /* *TWal = SWal */, _lockIdx int32, _n int32) {
	if (*(*uint8)(unsafe.Pointer(_pWal + 63))) == 0 {
		goto _1
	}

	return

_1:
	_1141sqlite3OsShmLock(tls, *(*uintptr)(unsafe.Pointer(_pWal + 8)), _lockIdx, _n, int32(9))
}

// _885decodeFlags is defined at sqlite3.c:61418:12
func _885decodeFlags(tls crt.TLS, _pPage uintptr /* *TMemPage = SMemPage */, _flagByte int32) (r int32) {
	var _pBt uintptr // *TBtShared = SBtShared

	*(*uint8)(unsafe.Pointer(_pPage + 8)) = uint8(_flagByte >> (uint(3) % 32))

	_flagByte = int32(_flagByte & int32(-9))
	*(*uint8)(unsafe.Pointer(_pPage + 10)) = uint8(int32(4) - (int32(4) * int32(*(*uint8)(unsafe.Pointer(_pPage + 8)))))
	*(*uintptr)(unsafe.Pointer(_pPage + 120)) = fp156(_984cellSizePtr)
	_pBt = *(*uintptr)(unsafe.Pointer(_pPage + 72))
	if _flagByte != int32(5) {
		goto _1
	}

	*(*uint8)(unsafe.Pointer(_pPage + 2)) = uint8(1)
	if (*(*uint8)(unsafe.Pointer(_pPage + 8))) == 0 {
		goto _3
	}

	*(*uint8)(unsafe.Pointer(_pPage + 3)) = uint8(1)
	*(*uintptr)(unsafe.Pointer(_pPage + 128)) = fp20(_1142btreeParseCellPtr)
	goto _4

_3:
	*(*uint8)(unsafe.Pointer(_pPage + 3)) = uint8(0)
	*(*uintptr)(unsafe.Pointer(_pPage + 120)) = fp156(_1143cellSizePtrNoPayload)
	*(*uintptr)(unsafe.Pointer(_pPage + 128)) = fp20(_1144btreeParseCellPtrNoPayload)
_4:
	*(*uint16)(unsafe.Pointer(_pPage + 14)) = *(*uint16)(unsafe.Pointer(_pBt + 44))
	*(*uint16)(unsafe.Pointer(_pPage + 16)) = *(*uint16)(unsafe.Pointer(_pBt + 46))
	goto _2

_1:
	if _flagByte != int32(0x2) {
		goto _5
	}

	*(*uint8)(unsafe.Pointer(_pPage + 2)) = uint8(0)
	*(*uint8)(unsafe.Pointer(_pPage + 3)) = uint8(0)
	*(*uintptr)(unsafe.Pointer(_pPage + 128)) = fp20(_1145btreeParseCellPtrIndex)
	*(*uint16)(unsafe.Pointer(_pPage + 14)) = *(*uint16)(unsafe.Pointer(_pBt + 40))
	*(*uint16)(unsafe.Pointer(_pPage + 16)) = *(*uint16)(unsafe.Pointer(_pBt + 42))
	goto _6

_5:
	return _556sqlite3CorruptError(tls, int32(61461))

_6:
_2:
	*(*uint8)(unsafe.Pointer(_pPage + 11)) = *(*uint8)(unsafe.Pointer(_pBt + 37))
	return int32(0)
}

// _886sqlite3WalSavepoint is defined at sqlite3.c:57935:21
func _886sqlite3WalSavepoint(tls crt.TLS, _pWal uintptr /* *TWal = SWal */, _aWalData uintptr /* *Tu32 = uint32 */) {
	*(*uint32)(unsafe.Pointer(_aWalData)) = *(*uint32)(unsafe.Pointer((_pWal + 72) + 16))
	*(*uint32)(unsafe.Pointer(_aWalData + 4)) = *(*uint32)(unsafe.Pointer((_pWal + 72) + 24))
	*(*uint32)(unsafe.Pointer(_aWalData + 8)) = *(*uint32)(unsafe.Pointer(((_pWal + 72) + 24) + 4))
	*(*uint32)(unsafe.Pointer(_aWalData + 12)) = *(*uint32)(unsafe.Pointer(_pWal + 136))
}

// _887pcacheUnpin is defined at sqlite3.c:44918:13
func _887pcacheUnpin(tls crt.TLS, _p uintptr /* *TPgHdr = SPgHdr */) {
	if (*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 24))) + 44))) == 0 {
		goto _1
	}

	fn157(*(*uintptr)(unsafe.Pointer((_28sqlite3Config + 184) + 64)))(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 24))) + 64)), *(*uintptr)(unsafe.Pointer(_p)), int32(0))
_1:
}

// _888pcacheManageDirtyList is defined at sqlite3.c:44848:13
func _888pcacheManageDirtyList(tls crt.TLS, _pPage uintptr /* *TPgHdr = SPgHdr */, _addRemove uint8) {
	var _p uintptr // *TPCache = SPCache

	_p = *(*uintptr)(unsafe.Pointer(_pPage + 24))
	if (int32(_addRemove) & int32(1)) == 0 {
		goto _1
	}

	if (*(*uintptr)(unsafe.Pointer(_p + 16))) != _pPage {
		goto _2
	}

	*(*uintptr)(unsafe.Pointer(_p + 16)) = *(*uintptr)(unsafe.Pointer(_pPage + 64))
_2:
	if (*(*uintptr)(unsafe.Pointer(_pPage + 56))) == 0 {
		goto _3
	}

	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage + 56))) + 64)) = *(*uintptr)(unsafe.Pointer(_pPage + 64))
	goto _4

_3:
	*(*uintptr)(unsafe.Pointer(_p + 8)) = *(*uintptr)(unsafe.Pointer(_pPage + 64))
_4:
	if (*(*uintptr)(unsafe.Pointer(_pPage + 64))) == 0 {
		goto _5
	}

	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage + 64))) + 56)) = *(*uintptr)(unsafe.Pointer(_pPage + 56))
	goto _6

_5:
	*(*uintptr)(unsafe.Pointer(_p)) = *(*uintptr)(unsafe.Pointer(_pPage + 56))

	if (*(*uintptr)(unsafe.Pointer(_p))) != 0 {
		goto _7
	}

	*(*uint8)(unsafe.Pointer(_p + 45)) = uint8(2)
_7:
_6:
_1:
	if (int32(_addRemove) & int32(2)) == 0 {
		goto _8
	}

	*(*uintptr)(unsafe.Pointer(_pPage + 64)) = null
	*(*uintptr)(unsafe.Pointer(_pPage + 56)) = *(*uintptr)(unsafe.Pointer(_p))
	if (*(*uintptr)(unsafe.Pointer(_pPage + 56))) == 0 {
		goto _9
	}

	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage + 56))) + 64)) = _pPage
	goto _10

_9:
	*(*uintptr)(unsafe.Pointer(_p + 8)) = _pPage
	if (*(*uint8)(unsafe.Pointer(_p + 44))) == 0 {
		goto _11
	}

	*(*uint8)(unsafe.Pointer(_p + 45)) = uint8(1)
_11:
_10:
	*(*uintptr)(unsafe.Pointer(_p)) = _pPage
	if (*(*uintptr)(unsafe.Pointer(_p + 16))) != 0 || int32(0) != (int32(*(*uint16)(unsafe.Pointer(_pPage + 52)))&int32(0x8)) {
		goto _12
	}

	*(*uintptr)(unsafe.Pointer(_p + 16)) = _pPage
_12:
_8:
}

// _889openSubJournal is defined at sqlite3.c:51942:12
func _889openSubJournal(tls crt.TLS, _pPager uintptr /* *TPager = SPager */) (r int32) {
	var (
		_rc         int32
		_flags      int32
		_nStmtSpill int32
	)
	_rc = int32(0)
	if (*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pPager + 88))))) != 0 {
		goto _1
	}

	_flags = int32(8222)
	_nStmtSpill = *(*int32)(unsafe.Pointer(_28sqlite3Config + 40))
	if int32(*(*uint8)(unsafe.Pointer(_pPager + 9))) != int32(4) && (*(*uint8)(unsafe.Pointer(_pPager + 25))) == 0 {
		goto _2
	}

	_nStmtSpill = int32(-1)
_2:
	_rc = _896sqlite3JournalOpen(tls, *(*uintptr)(unsafe.Pointer(_pPager)), null, *(*uintptr)(unsafe.Pointer(_pPager + 88)), _flags, _nStmtSpill)
_1:
	return _rc
}

// _890addToSavepointBitvecs is defined at sqlite3.c:49273:12
func _890addToSavepointBitvecs(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _pgno uint32) (r int32) {
	var (
		_ii int32
		_rc int32
		_p  uintptr // *TPagerSavepoint = SPagerSavepoint
	)
	_rc = int32(0)
	_ii = int32(0)
_1:
	if _ii >= (*(*int32)(unsafe.Pointer(_pPager + 128))) {
		goto _3
	}

	_p = (*(*uintptr)(unsafe.Pointer(_pPager + 120))) + 48*uintptr(_ii)
	if _pgno > (*(*uint32)(unsafe.Pointer(_p + 24))) {
		goto _4
	}

	_rc = int32(_rc | _405sqlite3BitvecSet(tls, *(*uintptr)(unsafe.Pointer(_p + 16)), _pgno))

_4:
	_ii++
	goto _1

_3:
	return _rc
}

// _891sqlite3PcacheFetch is defined at sqlite3.c:45051:36
func _891sqlite3PcacheFetch(tls crt.TLS, _pCache uintptr /* *TPCache = SPCache */, _pgno uint32, _createFlag int32) (r uintptr /* *Tsqlite3_pcache_page = Ssqlite3_pcache_page */) {
	var (
		_eCreate int32
		_pRes    uintptr // *Tsqlite3_pcache_page = Ssqlite3_pcache_page
	)

	_eCreate = _createFlag & int32(*(*uint8)(unsafe.Pointer(_pCache + 45)))

	_pRes = fn158(*(*uintptr)(unsafe.Pointer((_28sqlite3Config + 184) + 56)))(tls, *(*uintptr)(unsafe.Pointer(_pCache + 64)), _pgno, _eCreate)
	return _pRes
}

// _892sqlite3PcacheFetchFinish is defined at sqlite3.c:45174:22
func _892sqlite3PcacheFetchFinish(tls crt.TLS, _pCache uintptr /* *TPCache = SPCache */, _pgno uint32, _pPage uintptr /* *Tsqlite3_pcache_page = Ssqlite3_pcache_page */) (r uintptr /* *TPgHdr = SPgHdr */) {
	var _pPgHdr uintptr // *TPgHdr = SPgHdr

	_pPgHdr = *(*uintptr)(unsafe.Pointer(_pPage + 8))
	if (*(*uintptr)(unsafe.Pointer(_pPgHdr))) != 0 {
		goto _1
	}

	return _1146pcacheFetchFinishWithInit(tls, _pCache, _pgno, _pPage)

_1:
	(*(*int32)(unsafe.Pointer(_pCache + 24)))++
	(*(*int16)(unsafe.Pointer(_pPgHdr + 54)))++

	return _pPgHdr
}

// _893sqlite3MemJournalOpen is defined at sqlite3.c:90051:21
func _893sqlite3MemJournalOpen(tls crt.TLS, _pJfd uintptr /* *Tsqlite3_file = Ssqlite3_file */) {
	_896sqlite3JournalOpen(tls, null, null, _pJfd, int32(0), int32(-1))
}

// _894jrnlBufferSize is defined at sqlite3.c:48681:12
func _894jrnlBufferSize(tls crt.TLS, _pPager uintptr /* *TPager = SPager */) (r int32) {
	return int32(0)
}

// _895databaseIsUnmoved is defined at sqlite3.c:52454:12
func _895databaseIsUnmoved(tls crt.TLS, _pPager uintptr /* *TPager = SPager */) (r int32) {
	esc := crt.MustMalloc(4)
	var (
		_bHasMoved = esc // *int32
		_rc        int32
	)
	defer crt.Free(esc)
	*(*int32)(unsafe.Pointer(_bHasMoved)) = int32(0)
	if (*(*uint8)(unsafe.Pointer(_pPager + 16))) == 0 {
		goto _1
	}

	return int32(0)

_1:
	if (*(*uint32)(unsafe.Pointer(_pPager + 28))) != uint32(0) {
		goto _2
	}

	return int32(0)

_2:
	_rc = _235sqlite3OsFileControl(tls, *(*uintptr)(unsafe.Pointer(_pPager + 72)), int32(20), _bHasMoved)
	if _rc != int32(12) {
		goto _3
	}

	_rc = int32(0)
	goto _4

_3:
	if _rc != int32(0) || (*(*int32)(unsafe.Pointer(_bHasMoved))) == 0 {
		goto _5
	}

	_rc = int32(1032)
_5:
_4:
	return _rc
}

// _896sqlite3JournalOpen is defined at sqlite3.c:90015:20
func _896sqlite3JournalOpen(tls crt.TLS, _pVfs uintptr /* *Tsqlite3_vfs = Ssqlite3_vfs */, _zName uintptr /* *int8 */, _pJfd uintptr /* *Tsqlite3_file = Ssqlite3_file */, _flags int32, _nSpill int32) (r int32) {
	var _p uintptr // *TMemJournal = SMemJournal

	_p = _pJfd
	crt.Xmemset(tls, _p, int32(0), uint64(88))
	if _nSpill != int32(0) {
		goto _1
	}

	return _845sqlite3OsOpen(tls, _pVfs, _zName, _pJfd, _flags, null)

_1:
	if _nSpill <= int32(0) {
		goto _2
	}

	*(*int32)(unsafe.Pointer(_p + 8)) = _nSpill
	goto _3

_2:
	*(*int32)(unsafe.Pointer(_p + 8)) = int32(1016)

_3:
	*(*uintptr)(unsafe.Pointer(_p)) = _1147MemJournalMethods
	*(*int32)(unsafe.Pointer(_p + 12)) = _nSpill
	*(*int32)(unsafe.Pointer(_p + 64)) = _flags
	*(*uintptr)(unsafe.Pointer(_p + 80)) = _zName
	*(*uintptr)(unsafe.Pointer(_p + 72)) = _pVfs
	return int32(0)
}

// _897pager_cksum is defined at sqlite3.c:49679:12
func _897pager_cksum(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _aData uintptr /* *Tu8 = uint8 */) (r uint32) {
	var (
		_cksum uint32
		_i     int32
	)
	_cksum = *(*uint32)(unsafe.Pointer(_pPager + 52))
	_i = (*(*int32)(unsafe.Pointer(_pPager + 188))) - int32(200)
_1:
	if _i <= int32(0) {
		goto _2
	}

	_cksum = uint32(_cksum + uint32(*(*uint8)(unsafe.Pointer(_aData + uintptr(_i)))))
	_i = int32(_i - int32(200))
	goto _1

_2:
	return _cksum
}

// _898numberOfCachePages is defined at sqlite3.c:44930:12
func _898numberOfCachePages(tls crt.TLS, _p uintptr /* *TPCache = SPCache */) (r int32) {
	if (*(*int32)(unsafe.Pointer(_p + 28))) < int32(0) {
		goto _1
	}

	return *(*int32)(unsafe.Pointer(_p + 28))

	goto _2

_1:
	return int32((int64(-1024) * int64(*(*int32)(unsafe.Pointer(_p + 28)))) / int64((*(*int32)(unsafe.Pointer(_p + 36)))+(*(*int32)(unsafe.Pointer(_p + 40)))))

_2:
	return r
}

// _899pcacheMergeDirtyList is defined at sqlite3.c:45381:14
func _899pcacheMergeDirtyList(tls crt.TLS, _pA uintptr /* *TPgHdr = SPgHdr */, _pB uintptr /* *TPgHdr = SPgHdr */) (r uintptr /* *TPgHdr = SPgHdr */) {
	esc := crt.MustMalloc(72)
	var (
		_result = esc   // *TPgHdr = SPgHdr
		_pTail  uintptr // *TPgHdr = SPgHdr
	)
	defer crt.Free(esc)
	_pTail = _result

_1:
	if (*(*uint32)(unsafe.Pointer(_pA + 48))) >= (*(*uint32)(unsafe.Pointer(_pB + 48))) {
		goto _4
	}

	*(*uintptr)(unsafe.Pointer(_pTail + 32)) = _pA
	_pTail = _pA
	_pA = *(*uintptr)(unsafe.Pointer(_pA + 32))
	if _pA != 0 {
		goto _6
	}

	*(*uintptr)(unsafe.Pointer(_pTail + 32)) = _pB
	goto _3

_6:
	goto _5

_4:
	*(*uintptr)(unsafe.Pointer(_pTail + 32)) = _pB
	_pTail = _pB
	_pB = *(*uintptr)(unsafe.Pointer(_pB + 32))
	if _pB != 0 {
		goto _7
	}

	*(*uintptr)(unsafe.Pointer(_pTail + 32)) = _pA
	goto _3

_7:
_5:
	goto _1

_3:
	return *(*uintptr)(unsafe.Pointer(_result + 32))
}

// _900walRestartLog is defined at sqlite3.c:57986:12
func _900walRestartLog(tls crt.TLS, _pWal uintptr /* *TWal = SWal */) (r int32) {
	esc := crt.MustMalloc(20)
	var (
		_rc      int32
		_cnt     int32
		_pInfo   uintptr    // *TWalCkptInfo = SWalCkptInfo
		_salt1   = esc      // *Tu32 = uint32
		_notUsed = esc + 16 // *int32
	)
	defer crt.Free(esc)
	_rc = int32(0)
	if int32(*(*int16)(unsafe.Pointer(_pWal + 60))) != int32(0) {
		goto _1
	}

	_pInfo = _1148walCkptInfo(tls, _pWal)

	if (*(*uint32)(unsafe.Pointer(_pInfo))) <= uint32(0) {
		goto _2
	}

	Xsqlite3_randomness(tls, int32(4), _salt1)
	_rc = _882walLockExclusive(tls, _pWal, int32(4), int32(4))
	if _rc != int32(0) {
		goto _3
	}

	_1149walRestartHdr(tls, _pWal, *(*uint32)(unsafe.Pointer(_salt1)))
	_884walUnlockExclusive(tls, _pWal, int32(4), int32(4))
	goto _4

_3:
	if _rc == int32(5) {
		goto _5
	}

	return _rc

_5:
_4:
_2:
	_880walUnlockShared(tls, _pWal, int32(3))
	*(*int16)(unsafe.Pointer(_pWal + 60)) = int16(-1)
	_cnt = int32(0)
_6:
	_rc = _1150walTryBeginRead(tls, _pWal, _notUsed, int32(1), preinc2(&_cnt))
	if _rc == int32(-1) {
		goto _6
	}

_1:
	return _rc
}

// _901walChecksumBytes is defined at sqlite3.c:55729:13
func _901walChecksumBytes(tls crt.TLS, _nativeCksum int32, _a uintptr /* *Tu8 = uint8 */, _nByte int32, _aIn uintptr /* *Tu32 = uint32 */, _aOut uintptr /* *Tu32 = uint32 */) {
	var (
		_s1    uint32
		_s2    uint32
		_aData uintptr // *Tu32 = uint32
		_aEnd  uintptr // *Tu32 = uint32
	)
	_aData = _a
	_aEnd = _a + uintptr(_nByte)
	if _aIn == 0 {
		goto _1
	}

	_s1 = *(*uint32)(unsafe.Pointer(_aIn))
	_s2 = *(*uint32)(unsafe.Pointer(_aIn + 4))
	goto _2

_1:
	_s1 = set25(&_s2, uint32(0))
_2:
	if _nativeCksum == 0 {
		goto _3
	}

_5:
	_s1 = uint32(_s1 + ((*(*uint32)(unsafe.Pointer(postinc159(&_aData)))) + _s2))
	_s2 = uint32(_s2 + ((*(*uint32)(unsafe.Pointer(postinc159(&_aData)))) + _s1))
	if _aData < _aEnd {
		goto _5
	}

	goto _4

_3:
_8:
	_s1 = uint32(_s1 + (((((((*(*uint32)(unsafe.Pointer(_aData))) & uint32(0xff)) << (uint(24) % 32)) + (((*(*uint32)(unsafe.Pointer(_aData))) & uint32(0xff00)) << (uint(8) % 32))) + (((*(*uint32)(unsafe.Pointer(_aData))) & uint32(0xff0000)) >> (uint(8) % 32))) + (((*(*uint32)(unsafe.Pointer(_aData))) & uint32(0xff000000)) >> (uint(24) % 32))) + _s2))
	_s2 = uint32(_s2 + (((((((*(*uint32)(unsafe.Pointer(_aData + 4))) & uint32(0xff)) << (uint(24) % 32)) + (((*(*uint32)(unsafe.Pointer(_aData + 4))) & uint32(0xff00)) << (uint(8) % 32))) + (((*(*uint32)(unsafe.Pointer(_aData + 4))) & uint32(0xff0000)) >> (uint(8) % 32))) + (((*(*uint32)(unsafe.Pointer(_aData + 4))) & uint32(0xff000000)) >> (uint(24) % 32))) + _s1))
	_aData += 4 * uintptr(2)
	if _aData < _aEnd {
		goto _8
	}

_4:
	*(*uint32)(unsafe.Pointer(_aOut)) = _s1
	*(*uint32)(unsafe.Pointer(_aOut + 4)) = _s2
}

// _902sqlite3WalFindFrame is defined at sqlite3.c:57692:20
func _902sqlite3WalFindFrame(tls crt.TLS, _pWal uintptr /* *TWal = SWal */, _pgno uint32, _piRead uintptr /* *Tu32 = uint32 */) (r int32) {
	esc := crt.MustMalloc(36)
	var (
		_iRead    uint32
		_iLast    uint32
		_iHash    int32
		_iMinHash int32
		_aHash    = esc      // **Tht_slot = Tu16 = uint16
		_aPgno    = esc + 16 // **Tu32 = uint32
		_iZero    = esc + 32 // *Tu32 = uint32
		_iKey     int32
		_nCollide int32
		_rc       int32
		_iFrame   uint32
	)
	defer crt.Free(esc)
	_iRead = uint32(0)
	_iLast = *(*uint32)(unsafe.Pointer((_pWal + 72) + 16))

	if _iLast != uint32(0) && int32(*(*int16)(unsafe.Pointer(_pWal + 60))) != int32(0) {
		goto _1
	}

	*(*uint32)(unsafe.Pointer(_piRead)) = uint32(0)
	return int32(0)

_1:
	_iMinHash = _1151walFramePage(tls, *(*uint32)(unsafe.Pointer(_pWal + 120)))
	_iHash = _1151walFramePage(tls, _iLast)
_2:
	if _iHash < _iMinHash || _iRead != uint32(0) {
		goto _4
	}

	_rc = _1152walHashGet(tls, _pWal, _iHash, _aHash, _aPgno, _iZero)
	if _rc == int32(0) {
		goto _5
	}

	return _rc

_5:
	_nCollide = int32(8192)
	_iKey = _1153walHash(tls, _pgno)
_6:
	if (*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_aHash))) + 2*uintptr(_iKey)))) == 0 {
		goto _8
	}

	_iFrame = uint32(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_aHash))) + 2*uintptr(_iKey)))) + (*(*uint32)(unsafe.Pointer(_iZero)))
	if _iFrame > _iLast || _iFrame < (*(*uint32)(unsafe.Pointer(_pWal + 120))) || (*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_aPgno))) + 4*uintptr(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_aHash))) + 2*uintptr(_iKey))))))) != uint32(_pgno) {
		goto _9
	}

	_iRead = _iFrame
_9:
	if postinc24(&_nCollide) != int32(0) {
		goto _10
	}

	return _556sqlite3CorruptError(tls, int32(57762))

_10:
	_iKey = _1154walNextHash(tls, _iKey)
	goto _6

_8:
	_iHash--
	goto _2

_4:
	*(*uint32)(unsafe.Pointer(_piRead)) = _iRead
	return int32(0)
}

// _903walWriteOneFrame is defined at sqlite3.c:58074:12
func _903walWriteOneFrame(tls crt.TLS, _p uintptr /* *TWalWriter = struct{XpWal *SWal...XsyncFlags int32;XszPage int32;} */, _pPage uintptr /* *TPgHdr = SPgHdr */, _nTruncate int32, _iOffset int64) (r int32) {
	esc := crt.MustMalloc(24)
	var (
		_rc     int32
		_pData  uintptr // *void
		_aFrame = esc   // *[24]uint8
	)
	defer crt.Free(esc)
	_pData = *(*uintptr)(unsafe.Pointer(_pPage + 8))
	_1155walEncodeFrame(tls, *(*uintptr)(unsafe.Pointer(_p)), *(*uint32)(unsafe.Pointer(_pPage + 48)), uint32(_nTruncate), _pData, _aFrame)
	_rc = _1156walWriteToLog(tls, _p, _aFrame, int32(24), _iOffset)
	if _rc == 0 {
		goto _1
	}

	return _rc

_1:
	_rc = _1156walWriteToLog(tls, _p, _pData, *(*int32)(unsafe.Pointer(_p + 28)), int64(uint64(_iOffset)+uint64(24)))
	return _rc
}

// _904walRewriteChecksums is defined at sqlite3.c:58104:12
func _904walRewriteChecksums(tls crt.TLS, _pWal uintptr /* *TWal = SWal */, _iLast uint32) (r int32) {
	esc := crt.MustMalloc(24)
	var (
		_szPage    int32
		_rc        int32
		_aBuf      uintptr // *Tu8 = uint8
		_aFrame    = esc   // *[24]uint8
		_iRead     uint32
		_iCksumOff int64
		_iOff      int64
		_iPgno     uint32
		_nDbSize   uint32
	)
	defer crt.Free(esc)
	_szPage = int32(*(*uint32)(unsafe.Pointer(_pWal + 56)))
	_rc = int32(0)
	_aBuf = Xsqlite3_malloc(tls, _szPage+int32(24))
	if _aBuf != 0 {
		goto _1
	}

	return int32(7)

_1:
	if (*(*uint32)(unsafe.Pointer(_pWal + 124))) != uint32(1) {
		goto _2
	}

	_iCksumOff = int64(24)
	goto _3

_2:
	_iCksumOff = (int64(32) + (int64(((*(*uint32)(unsafe.Pointer(_pWal + 124)))-uint32(1))-uint32(1)) * int64(_szPage+int32(24)))) + int64(16)
_3:
	_rc = _586sqlite3OsRead(tls, *(*uintptr)(unsafe.Pointer(_pWal + 16)), _aBuf, int32(8), _iCksumOff)
	*(*uint32)(unsafe.Pointer((_pWal + 72) + 24)) = _328sqlite3Get4byte(tls, _aBuf)
	*(*uint32)(unsafe.Pointer(((_pWal + 72) + 24) + 4)) = _328sqlite3Get4byte(tls, _aBuf+4)
	_iRead = *(*uint32)(unsafe.Pointer(_pWal + 124))
	*(*uint32)(unsafe.Pointer(_pWal + 124)) = uint32(0)

_4:
	if _rc != int32(0) || _iRead > _iLast {
		goto _6
	}

	_iOff = int64(32) + (int64(_iRead-uint32(1)) * int64(_szPage+int32(24)))
	_rc = _586sqlite3OsRead(tls, *(*uintptr)(unsafe.Pointer(_pWal + 16)), _aBuf, _szPage+int32(24), _iOff)
	if _rc != int32(0) {
		goto _7
	}

	_iPgno = _328sqlite3Get4byte(tls, _aBuf)
	_nDbSize = _328sqlite3Get4byte(tls, _aBuf+4)
	_1155walEncodeFrame(tls, _pWal, _iPgno, _nDbSize, _aBuf+24, _aFrame)
	_rc = _163sqlite3OsWrite(tls, *(*uintptr)(unsafe.Pointer(_pWal + 16)), _aFrame, int32(24), _iOff)
_7:
	_iRead++
	goto _4

_6:
	Xsqlite3_free(tls, _aBuf)
	return _rc
}

// _905sqlite3SectorSize is defined at sqlite3.c:50173:20
func _905sqlite3SectorSize(tls crt.TLS, _pFile uintptr /* *Tsqlite3_file = Ssqlite3_file */) (r int32) {
	var _iRet int32

	_iRet = _1157sqlite3OsSectorSize(tls, _pFile)
	if _iRet >= int32(32) {
		goto _1
	}

	_iRet = int32(512)
	goto _2

_1:
	if _iRet <= int32(0x10000) {
		goto _3
	}

	_iRet = int32(0x10000)
_3:
_2:
	return _iRet
}

// _906walLimitSize is defined at sqlite3.c:57022:13
func _906walLimitSize(tls crt.TLS, _pWal uintptr /* *TWal = SWal */, _nMax int64) {
	esc := crt.MustMalloc(8)
	var (
		_sz = esc // *Ti64 = Tsqlite_int64 = int64
		_rx int32
	)
	defer crt.Free(esc)
	_523sqlite3BeginBenignMalloc(tls)
	_rx = _352sqlite3OsFileSize(tls, *(*uintptr)(unsafe.Pointer(_pWal + 16)), _sz)
	if _rx != int32(0) || (*(*int64)(unsafe.Pointer(_sz))) <= _nMax {
		goto _1
	}

	_rx = _353sqlite3OsTruncate(tls, *(*uintptr)(unsafe.Pointer(_pWal + 16)), _nMax)
_1:
	_524sqlite3EndBenignMalloc(tls)
	if _rx == 0 {
		goto _2
	}

	Xsqlite3_log(tls, _rx, ts+21448 /* "cannot limit WAL size: %s" */, *(*uintptr)(unsafe.Pointer(_pWal + 128)))
_2:
}

// _907walIndexAppend is defined at sqlite3.c:56110:12
func _907walIndexAppend(tls crt.TLS, _pWal uintptr /* *TWal = SWal */, _iFrame uint32, _iPage uint32) (r int32) {
	esc := crt.MustMalloc(40)
	var (
		_rc       int32
		_iZero    = esc      // *Tu32 = uint32
		_aPgno    = esc + 16 // **Tu32 = uint32
		_aHash    = esc + 32 // **Tht_slot = Tu16 = uint16
		_iKey     int32
		_idx      int32
		_nCollide int32
		_nByte    int32
	)
	defer crt.Free(esc)
	*(*uint32)(unsafe.Pointer(_iZero)) = uint32(0)
	*(*uintptr)(unsafe.Pointer(_aPgno)) = 0
	*(*uintptr)(unsafe.Pointer(_aHash)) = 0
	_rc = _1152walHashGet(tls, _pWal, _1151walFramePage(tls, _iFrame), _aHash, _aPgno, _iZero)
	if _rc != int32(0) {
		goto _1
	}

	_idx = int32(_iFrame - (*(*uint32)(unsafe.Pointer(_iZero))))

	if _idx != int32(1) {
		goto _2
	}

	_nByte = int32(int64(((*(*uintptr)(unsafe.Pointer(_aHash))) + 16384) - ((*(*uintptr)(unsafe.Pointer(_aPgno))) + 4)))
	crt.Xmemset(tls, (*(*uintptr)(unsafe.Pointer(_aPgno)))+4, int32(0), uint64(_nByte))
_2:
	if (*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_aPgno))) + 4*uintptr(_idx)))) == 0 {
		goto _3
	}

	_1158walCleanupHash(tls, _pWal)

_3:
	_nCollide = _idx
	_iKey = _1153walHash(tls, _iPage)
_4:
	if (*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_aHash))) + 2*uintptr(_iKey)))) == 0 {
		goto _6
	}

	if postinc24(&_nCollide) != int32(0) {
		goto _7
	}

	return _556sqlite3CorruptError(tls, int32(56151))

_7:
	_iKey = _1154walNextHash(tls, _iKey)
	goto _4

_6:
	*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_aPgno))) + 4*uintptr(_idx))) = _iPage
	*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_aHash))) + 2*uintptr(_iKey))) = uint16(_idx)
_1:
	return _rc
}

// _908walIndexWriteHdr is defined at sqlite3.c:55778:13
func _908walIndexWriteHdr(tls crt.TLS, _pWal uintptr /* *TWal = SWal */) {
	var (
		_aHdr   uintptr // *TWalIndexHdr = SWalIndexHdr
		_nCksum int32
	)
	_aHdr = _883walIndexHdr(tls, _pWal)
	_nCksum = int32(40)

	*(*uint8)(unsafe.Pointer((_pWal + 72) + 12)) = uint8(1)
	*(*uint32)(unsafe.Pointer(_pWal + 72)) = uint32(3007000)
	_901walChecksumBytes(tls, int32(1), _pWal+72, _nCksum, null, (_pWal+72)+40)
	crt.Xmemcpy(tls, _aHdr+48, _pWal+72, uint64(48))
	_1159walShmBarrier(tls, _pWal)
	crt.Xmemcpy(tls, _aHdr, _pWal+72, uint64(48))
}

// _909backupUpdate is defined at sqlite3.c:70305:29
func _909backupUpdate(tls crt.TLS, _p uintptr /* *Tsqlite3_backup = Ssqlite3_backup */, _iPage uint32, _aData uintptr /* *Tu8 = uint8 */) {
	var _rc int32

_1:
	if _140isFatalError(tls, *(*int32)(unsafe.Pointer(_p + 48))) != 0 || _iPage >= (*(*uint32)(unsafe.Pointer(_p + 24))) {
		goto _4
	}

	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p))) + 24)))
	_rc = _151backupOnePage(tls, _p, _iPage, _aData, int32(1))
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p))) + 24)))

	if _rc == int32(0) {
		goto _5
	}

	*(*int32)(unsafe.Pointer(_p + 48)) = _rc
_5:
_4:
	if set4(&_p, *(*uintptr)(unsafe.Pointer(_p + 64))) != 0 {
		goto _1
	}
}

// _910releaseAllSavepoints is defined at sqlite3.c:49254:13
func _910releaseAllSavepoints(tls crt.TLS, _pPager uintptr /* *TPager = SPager */) {
	var _ii int32

	_ii = int32(0)
_1:
	if _ii >= (*(*int32)(unsafe.Pointer(_pPager + 128))) {
		goto _3
	}

	_409sqlite3BitvecDestroy(tls, *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pPager + 120))) + 48*uintptr(_ii)) + 16)))
	_ii++
	goto _1

_3:
	if (*(*uint8)(unsafe.Pointer(_pPager + 8))) != 0 && _911sqlite3JournalIsInMemory(tls, *(*uintptr)(unsafe.Pointer(_pPager + 88))) == 0 {
		goto _4
	}

	_849sqlite3OsClose(tls, *(*uintptr)(unsafe.Pointer(_pPager + 88)))
_4:
	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_pPager + 120)))
	*(*uintptr)(unsafe.Pointer(_pPager + 120)) = null
	*(*int32)(unsafe.Pointer(_pPager + 128)) = int32(0)
	*(*uint32)(unsafe.Pointer(_pPager + 56)) = uint32(0)
}

// _911sqlite3JournalIsInMemory is defined at sqlite3.c:90090:20
func _911sqlite3JournalIsInMemory(tls crt.TLS, _p uintptr /* *Tsqlite3_file = Ssqlite3_file */) (r int32) {
	return bool2int((*(*uintptr)(unsafe.Pointer(_p))) == _1147MemJournalMethods)
}

// _912zeroJournalHdr is defined at sqlite3.c:48874:12
func _912zeroJournalHdr(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _doTruncate int32) (r int32) {
	esc := crt.MustMalloc(8)
	var (
		_rc     int32
		_iLimit int64
		_sz     = esc // *Ti64 = Tsqlite_int64 = int64
	)
	defer crt.Free(esc)
	_rc = int32(0)

	if (*(*int64)(unsafe.Pointer(_pPager + 96))) == 0 {
		goto _1
	}

	_iLimit = *(*int64)(unsafe.Pointer(_pPager + 200))
	if _doTruncate == 0 && _iLimit != int64(0) {
		goto _2
	}

	_rc = _353sqlite3OsTruncate(tls, *(*uintptr)(unsafe.Pointer(_pPager + 80)), int64(0))
	goto _3

_2:
	_rc = _163sqlite3OsWrite(tls, *(*uintptr)(unsafe.Pointer(_pPager + 80)), _1160zeroHdr, int32(28), int64(0))
_3:
	if _rc != int32(0) || (*(*uint8)(unsafe.Pointer(_pPager + 11))) != 0 {
		goto _4
	}

	_rc = _354sqlite3OsSync(tls, *(*uintptr)(unsafe.Pointer(_pPager + 80)), int32(0x10)|int32(*(*uint8)(unsafe.Pointer(_pPager + 14))))
_4:
	if _rc != int32(0) || _iLimit <= int64(0) {
		goto _5
	}

	_rc = _352sqlite3OsFileSize(tls, *(*uintptr)(unsafe.Pointer(_pPager + 80)), _sz)
	if _rc != int32(0) || (*(*int64)(unsafe.Pointer(_sz))) <= _iLimit {
		goto _6
	}

	_rc = _353sqlite3OsTruncate(tls, *(*uintptr)(unsafe.Pointer(_pPager + 80)), _iLimit)
_6:
_5:
_1:
	return _rc
}

// _913sqlite3OsDelete is defined at sqlite3.c:20911:20
func _913sqlite3OsDelete(tls crt.TLS, _pVfs uintptr /* *Tsqlite3_vfs = Ssqlite3_vfs */, _zPath uintptr /* *int8 */, _dirSync int32) (r int32) {
	return fn70(*(*uintptr)(unsafe.Pointer(_pVfs + 48)))(tls, _pVfs, _zPath, _dirSync)
}

// _914sqlite3PcacheClearWritable is defined at sqlite3.c:45286:21
func _914sqlite3PcacheClearWritable(tls crt.TLS, _pCache uintptr /* *TPCache = SPCache */) {
	var _p uintptr // *TPgHdr = SPgHdr

	_p = *(*uintptr)(unsafe.Pointer(_pCache))
_1:
	if _p == 0 {
		goto _3
	}

	{
		p := &(*(*uint16)(unsafe.Pointer(_p + 52)))
		*p = uint16(int32(*p) & int32(-13))
	}
	_p = *(*uintptr)(unsafe.Pointer(_p + 56))
	goto _1

_3:
	*(*uintptr)(unsafe.Pointer(_pCache + 16)) = *(*uintptr)(unsafe.Pointer(_pCache + 8))
}

// _915sqlite3PcacheTruncate is defined at sqlite3.c:45331:21
func _915sqlite3PcacheTruncate(tls crt.TLS, _pCache uintptr /* *TPCache = SPCache */, _pgno uint32) {
	var (
		_p      uintptr // *TPgHdr = SPgHdr
		_pNext  uintptr // *TPgHdr = SPgHdr
		_pPage1 uintptr // *Tsqlite3_pcache_page = Ssqlite3_pcache_page
	)
	if (*(*uintptr)(unsafe.Pointer(_pCache + 64))) == 0 {
		goto _1
	}

	_p = *(*uintptr)(unsafe.Pointer(_pCache))
_2:
	if _p == 0 {
		goto _4
	}

	_pNext = *(*uintptr)(unsafe.Pointer(_p + 56))

	if (*(*uint32)(unsafe.Pointer(_p + 48))) <= _pgno {
		goto _5
	}

	_579sqlite3PcacheMakeClean(tls, _p)
_5:
	_p = _pNext
	goto _2

_4:
	if _pgno != uint32(0) || (*(*int32)(unsafe.Pointer(_pCache + 24))) == 0 {
		goto _6
	}

	_pPage1 = fn158(*(*uintptr)(unsafe.Pointer((_28sqlite3Config + 184) + 56)))(tls, *(*uintptr)(unsafe.Pointer(_pCache + 64)), uint32(1), int32(0))
	if _pPage1 == 0 {
		goto _7
	}

	crt.Xmemset(tls, *(*uintptr)(unsafe.Pointer(_pPage1)), int32(0), uint64(*(*int32)(unsafe.Pointer(_pCache + 36))))
	_pgno = uint32(1)
_7:
_6:
	fn160(*(*uintptr)(unsafe.Pointer((_28sqlite3Config + 184) + 80)))(tls, *(*uintptr)(unsafe.Pointer(_pCache + 64)), _pgno+uint32(1))
_1:
}

// _916sqlite3WalEndWriteTransaction is defined at sqlite3.c:57873:20
func _916sqlite3WalEndWriteTransaction(tls crt.TLS, _pWal uintptr /* *TWal = SWal */) (r int32) {
	if (*(*uint8)(unsafe.Pointer(_pWal + 64))) == 0 {
		goto _1
	}

	_884walUnlockExclusive(tls, _pWal, int32(0), int32(1))
	*(*uint8)(unsafe.Pointer(_pWal + 64)) = uint8(0)
	*(*uint32)(unsafe.Pointer(_pWal + 124)) = uint32(0)
	*(*uint8)(unsafe.Pointer(_pWal + 67)) = uint8(0)
_1:
	return int32(0)
}

// _917ptrmapGet is defined at sqlite3.c:60664:12
func _917ptrmapGet(tls crt.TLS, _pBt uintptr /* *TBtShared = SBtShared */, _key uint32, _pEType uintptr /* *Tu8 = uint8 */, _pPgno uintptr /* *TPgno = Tu32 = uint32 */) (r int32) {
	esc := crt.MustMalloc(8)
	var (
		_pDbPage = esc // **TDbPage = SPgHdr
		_iPtrmap int32
		_pPtrmap uintptr // *Tu8 = uint8
		_offset  int32
		_rc      int32
	)
	defer crt.Free(esc)

	_iPtrmap = int32(_595ptrmapPageno(tls, _pBt, _key))
	_rc = _150sqlite3PagerGet(tls, *(*uintptr)(unsafe.Pointer(_pBt)), uint32(_iPtrmap), _pDbPage, int32(0))
	if _rc == int32(0) {
		goto _1
	}

	return _rc

_1:
	_pPtrmap = _152sqlite3PagerGetData(tls, *(*uintptr)(unsafe.Pointer(_pDbPage)))
	_offset = int32(uint32(5) * ((_key - uint32(_iPtrmap)) - uint32(1)))
	if _offset >= int32(0) {
		goto _2
	}

	_153sqlite3PagerUnref(tls, *(*uintptr)(unsafe.Pointer(_pDbPage)))
	return _556sqlite3CorruptError(tls, int32(60683))

_2:
	*(*uint8)(unsafe.Pointer(_pEType)) = *(*uint8)(unsafe.Pointer(_pPtrmap + uintptr(_offset)))
	if _pPgno == 0 {
		goto _3
	}

	*(*uint32)(unsafe.Pointer(_pPgno)) = uint32(_328sqlite3Get4byte(tls, _pPtrmap+uintptr(_offset+int32(1))))
_3:
	_153sqlite3PagerUnref(tls, *(*uintptr)(unsafe.Pointer(_pDbPage)))
	if int32(*(*uint8)(unsafe.Pointer(_pEType))) >= int32(1) && int32(*(*uint8)(unsafe.Pointer(_pEType))) <= int32(5) {
		goto _4
	}

	return _556sqlite3CorruptError(tls, int32(60691))

_4:
	return int32(0)
}

// _918allocateBtreePage is defined at sqlite3.c:65366:12
func _918allocateBtreePage(tls crt.TLS, _pBt uintptr /* *TBtShared = SBtShared */, _ppPage uintptr /* **TMemPage = SMemPage */, _pPgno uintptr /* *TPgno = Tu32 = uint32 */, _nearby uint32, _eMode uint8) (r int32) {
	esc := crt.MustMalloc(56)
	var (
		_pPage1     uintptr // *TMemPage = SMemPage
		_rc         int32
		_n          uint32
		_k          uint32
		_pTrunk     = esc   // **TMemPage = SMemPage
		_pPrevTrunk uintptr // *TMemPage = SMemPage
		_mxPage     uint32
		_iTrunk     uint32
		_searchList uint8
		_nSearch    uint32
		_eType      = esc + 16 // *Tu8 = uint8
		_pNewTrunk  = esc + 32 // **TMemPage = SMemPage
		_iNewTrunk  uint32
		_closest    uint32
		_iPage      uint32
		_aData      uintptr // *uint8
		_i          uint32
		_dist       int32
		_d2         int32
		_noContent  int32
		_bNoContent int32
		_pPg        = esc + 48 // **TMemPage = SMemPage
	)
	defer crt.Free(esc)
	*(*uintptr)(unsafe.Pointer(_pTrunk)) = 0
	_pPrevTrunk = 0

	_pPage1 = *(*uintptr)(unsafe.Pointer(_pBt + 24))
	_mxPage = _332btreePagecount(tls, _pBt)
	_n = _328sqlite3Get4byte(tls, (*(*uintptr)(unsafe.Pointer(_pPage1 + 80)))+36)
	if _n < uint32(_mxPage) {
		goto _1
	}

	return _556sqlite3CorruptError(tls, int32(65390))

_1:
	if _n <= uint32(0) {
		goto _2
	}

	_searchList = uint8(0)
	_nSearch = uint32(0)
	if int32(_eMode) != int32(1) {
		goto _4
	}

	if _nearby > _mxPage {
		goto _6
	}

	_rc = _917ptrmapGet(tls, _pBt, _nearby, _eType, null)
	if _rc == 0 {
		goto _7
	}

	return _rc

_7:
	if int32(*(*uint8)(unsafe.Pointer(_eType))) != int32(2) {
		goto _8
	}

	_searchList = uint8(1)
_8:
_6:
	goto _5

_4:
	if int32(_eMode) != int32(2) {
		goto _9
	}

	_searchList = uint8(1)
_9:
_5:
	_rc = _161sqlite3PagerWrite(tls, *(*uintptr)(unsafe.Pointer(_pPage1 + 112)))
	if _rc == 0 {
		goto _10
	}

	return _rc

_10:
	_329sqlite3Put4byte(tls, (*(*uintptr)(unsafe.Pointer(_pPage1 + 80)))+36, _n-uint32(1))
_11:
	_pPrevTrunk = *(*uintptr)(unsafe.Pointer(_pTrunk))
	if _pPrevTrunk == 0 {
		goto _14
	}

	_iTrunk = uint32(_328sqlite3Get4byte(tls, *(*uintptr)(unsafe.Pointer(_pPrevTrunk + 80))))
	goto _15

_14:
	_iTrunk = uint32(_328sqlite3Get4byte(tls, (*(*uintptr)(unsafe.Pointer(_pPage1 + 80)))+32))
_15:
	if _iTrunk <= _mxPage && postinc53(&_nSearch) <= _n {
		goto _16
	}

	_rc = _556sqlite3CorruptError(tls, int32(65446))
	goto _17

_16:
	_rc = _1161btreeGetUnusedPage(tls, _pBt, _iTrunk, _pTrunk, int32(0))
_17:
	if _rc == 0 {
		goto _18
	}

	*(*uintptr)(unsafe.Pointer(_pTrunk)) = null
	goto _end_allocate_page

_18:
	_k = _328sqlite3Get4byte(tls, (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTrunk))) + 80)))+4)
	if _k != uint32(0) || _searchList != 0 {
		goto _19
	}

	_rc = _161sqlite3PagerWrite(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTrunk))) + 112)))
	if _rc == 0 {
		goto _21
	}

	goto _end_allocate_page

_21:
	*(*uint32)(unsafe.Pointer(_pPgno)) = _iTrunk
	crt.Xmemcpy(tls, (*(*uintptr)(unsafe.Pointer(_pPage1 + 80)))+32, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTrunk))) + 80)), uint64(4))
	*(*uintptr)(unsafe.Pointer(_ppPage)) = *(*uintptr)(unsafe.Pointer(_pTrunk))
	*(*uintptr)(unsafe.Pointer(_pTrunk)) = null
	goto _20

_19:
	if _k <= ((*(*uint32)(unsafe.Pointer(_pBt + 52)))/uint32(4))-uint32(2) {
		goto _22
	}

	_rc = _556sqlite3CorruptError(tls, int32(65475))
	goto _end_allocate_page

	goto _23

_22:
	if _searchList == 0 || _nearby != _iTrunk && (_iTrunk >= _nearby || int32(_eMode) != int32(2)) {
		goto _24
	}

	*(*uint32)(unsafe.Pointer(_pPgno)) = _iTrunk
	*(*uintptr)(unsafe.Pointer(_ppPage)) = *(*uintptr)(unsafe.Pointer(_pTrunk))
	_searchList = uint8(0)
	_rc = _161sqlite3PagerWrite(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTrunk))) + 112)))
	if _rc == 0 {
		goto _26
	}

	goto _end_allocate_page

_26:
	if _k != uint32(0) {
		goto _27
	}

	if _pPrevTrunk != 0 {
		goto _29
	}

	crt.Xmemcpy(tls, (*(*uintptr)(unsafe.Pointer(_pPage1 + 80)))+32, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTrunk))) + 80)), uint64(4))
	goto _30

_29:
	_rc = _161sqlite3PagerWrite(tls, *(*uintptr)(unsafe.Pointer(_pPrevTrunk + 112)))
	if _rc == int32(0) {
		goto _31
	}

	goto _end_allocate_page

_31:
	crt.Xmemcpy(tls, *(*uintptr)(unsafe.Pointer(_pPrevTrunk + 80)), *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTrunk))) + 80)), uint64(4))
_30:
	goto _28

_27:
	_iNewTrunk = uint32(_328sqlite3Get4byte(tls, (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTrunk))) + 80)))+8))
	if _iNewTrunk <= _mxPage {
		goto _32
	}

	_rc = _556sqlite3CorruptError(tls, int32(65509))
	goto _end_allocate_page

_32:
	_rc = _1161btreeGetUnusedPage(tls, _pBt, _iNewTrunk, _pNewTrunk, int32(0))
	if _rc == int32(0) {
		goto _33
	}

	goto _end_allocate_page

_33:
	_rc = _161sqlite3PagerWrite(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pNewTrunk))) + 112)))
	if _rc == int32(0) {
		goto _34
	}

	_919releasePage(tls, *(*uintptr)(unsafe.Pointer(_pNewTrunk)))
	goto _end_allocate_page

_34:
	crt.Xmemcpy(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pNewTrunk))) + 80)), *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTrunk))) + 80)), uint64(4))
	_329sqlite3Put4byte(tls, (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pNewTrunk))) + 80)))+4, _k-uint32(1))
	crt.Xmemcpy(tls, (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pNewTrunk))) + 80)))+8, (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTrunk))) + 80)))+12, uint64((_k-uint32(1))*uint32(4)))
	_919releasePage(tls, *(*uintptr)(unsafe.Pointer(_pNewTrunk)))
	if _pPrevTrunk != 0 {
		goto _35
	}

	_329sqlite3Put4byte(tls, (*(*uintptr)(unsafe.Pointer(_pPage1 + 80)))+32, _iNewTrunk)
	goto _36

_35:
	_rc = _161sqlite3PagerWrite(tls, *(*uintptr)(unsafe.Pointer(_pPrevTrunk + 112)))
	if _rc == 0 {
		goto _37
	}

	goto _end_allocate_page

_37:
	_329sqlite3Put4byte(tls, *(*uintptr)(unsafe.Pointer(_pPrevTrunk + 80)), _iNewTrunk)
_36:
_28:
	*(*uintptr)(unsafe.Pointer(_pTrunk)) = null
	goto _25

_24:
	if _k <= uint32(0) {
		goto _38
	}

	_aData = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTrunk))) + 80))
	if _nearby <= uint32(0) {
		goto _39
	}

	_closest = uint32(0)
	if int32(_eMode) != int32(2) {
		goto _41
	}

	_i = uint32(0)
_43:
	if _i >= _k {
		goto _45
	}

	_iPage = uint32(_328sqlite3Get4byte(tls, _aData+uintptr(uint32(8)+(_i*uint32(4)))))
	if _iPage > _nearby {
		goto _46
	}

	_closest = _i
	goto _45

_46:
	_i++
	goto _43

_45:
	goto _42

_41:
	_dist = _767sqlite3AbsInt32(tls, int32(_328sqlite3Get4byte(tls, _aData+8)-uint32(_nearby)))
	_i = uint32(1)
_47:
	if _i >= _k {
		goto _49
	}

	_d2 = _767sqlite3AbsInt32(tls, int32(_328sqlite3Get4byte(tls, _aData+uintptr(uint32(8)+(_i*uint32(4))))-uint32(_nearby)))
	if _d2 >= _dist {
		goto _50
	}

	_closest = _i
	_dist = _d2
_50:
	_i++
	goto _47

_49:
_42:
	goto _40

_39:
	_closest = uint32(0)
_40:
	_iPage = uint32(_328sqlite3Get4byte(tls, _aData+uintptr(uint32(8)+(_closest*uint32(4)))))
	if _iPage <= _mxPage {
		goto _51
	}

	_rc = _556sqlite3CorruptError(tls, int32(65574))
	goto _end_allocate_page

_51:
	if _searchList != 0 && (_iPage != _nearby && (_iPage >= _nearby || int32(_eMode) != int32(2))) {
		goto _52
	}

	*(*uint32)(unsafe.Pointer(_pPgno)) = _iPage
	_rc = _161sqlite3PagerWrite(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTrunk))) + 112)))
	if _rc == 0 {
		goto _53
	}

	goto _end_allocate_page

_53:
	if _closest >= (_k - uint32(1)) {
		goto _54
	}

	crt.Xmemcpy(tls, _aData+uintptr(uint32(8)+(_closest*uint32(4))), _aData+uintptr(uint32(4)+(_k*uint32(4))), uint64(4))
_54:
	_329sqlite3Put4byte(tls, _aData+4, _k-uint32(1))
	_noContent = func() int32 {
		if _1162btreeGetHasContent(tls, _pBt, *(*uint32)(unsafe.Pointer(_pPgno))) == 0 {
			return int32(0x1)
		}
		return int32(0)
	}()
	_rc = _1161btreeGetUnusedPage(tls, _pBt, *(*uint32)(unsafe.Pointer(_pPgno)), _ppPage, _noContent)
	if _rc != int32(0) {
		goto _55
	}

	_rc = _161sqlite3PagerWrite(tls, *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_ppPage)) + 112)))
	if _rc == int32(0) {
		goto _56
	}

	_919releasePage(tls, *(*uintptr)(unsafe.Pointer(_ppPage)))
	*(*uintptr)(unsafe.Pointer(_ppPage)) = null
_56:
_55:
	_searchList = uint8(0)
_52:
_38:
_25:
_23:
_20:
	_919releasePage(tls, _pPrevTrunk)
	_pPrevTrunk = null
	if _searchList != 0 {
		goto _11
	}

	goto _3

_2:
	_bNoContent = func() int32 {
		if int32(0) == int32(*(*uint8)(unsafe.Pointer(_pBt + 35))) {
			return int32(0x1)
		}
		return int32(0)
	}()
	_rc = _161sqlite3PagerWrite(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pBt + 24))) + 112)))
	if _rc == 0 {
		goto _57
	}

	return _rc

_57:
	(*(*uint32)(unsafe.Pointer(_pBt + 60)))++
	if (*(*uint32)(unsafe.Pointer(_pBt + 60))) != (uint32(_149sqlite3PendingByte)/(*(*uint32)(unsafe.Pointer(_pBt + 48))))+uint32(1) {
		goto _58
	}

	(*(*uint32)(unsafe.Pointer(_pBt + 60)))++
_58:
	if (*(*uint8)(unsafe.Pointer(_pBt + 33))) == 0 || _595ptrmapPageno(tls, _pBt, *(*uint32)(unsafe.Pointer(_pBt + 60))) != uint32(*(*uint32)(unsafe.Pointer(_pBt + 60))) {
		goto _59
	}

	*(*uintptr)(unsafe.Pointer(_pPg)) = 0

	_rc = _1161btreeGetUnusedPage(tls, _pBt, *(*uint32)(unsafe.Pointer(_pBt + 60)), _pPg, _bNoContent)
	if _rc != int32(0) {
		goto _60
	}

	_rc = _161sqlite3PagerWrite(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPg))) + 112)))
	_919releasePage(tls, *(*uintptr)(unsafe.Pointer(_pPg)))
_60:
	if _rc == 0 {
		goto _61
	}

	return _rc

_61:
	(*(*uint32)(unsafe.Pointer(_pBt + 60)))++
	if (*(*uint32)(unsafe.Pointer(_pBt + 60))) != (uint32(_149sqlite3PendingByte)/(*(*uint32)(unsafe.Pointer(_pBt + 48))))+uint32(1) {
		goto _62
	}

	(*(*uint32)(unsafe.Pointer(_pBt + 60)))++
_62:
_59:
	_329sqlite3Put4byte(tls, uintptr(28)+*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pBt + 24))) + 80)), *(*uint32)(unsafe.Pointer(_pBt + 60)))
	*(*uint32)(unsafe.Pointer(_pPgno)) = uint32(*(*uint32)(unsafe.Pointer(_pBt + 60)))

	_rc = _1161btreeGetUnusedPage(tls, _pBt, *(*uint32)(unsafe.Pointer(_pPgno)), _ppPage, _bNoContent)
	if _rc == 0 {
		goto _63
	}

	return _rc

_63:
	_rc = _161sqlite3PagerWrite(tls, *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_ppPage)) + 112)))
	if _rc == int32(0) {
		goto _64
	}

	_919releasePage(tls, *(*uintptr)(unsafe.Pointer(_ppPage)))
	*(*uintptr)(unsafe.Pointer(_ppPage)) = null
_64:
_3:
	goto _end_allocate_page
_end_allocate_page:
	_919releasePage(tls, *(*uintptr)(unsafe.Pointer(_pTrunk)))
	_919releasePage(tls, _pPrevTrunk)

	return _rc
}

// _919releasePage is defined at sqlite3.c:61801:13
func _919releasePage(tls crt.TLS, _pPage uintptr /* *TMemPage = SMemPage */) {
	if _pPage == 0 {
		goto _1
	}

	_922releasePageNotNull(tls, _pPage)
_1:
}

// _920relocatePage is defined at sqlite3.c:63189:12
func _920relocatePage(tls crt.TLS, _pBt uintptr /* *TBtShared = SBtShared */, _pDbPage uintptr /* *TMemPage = SMemPage */, _eType uint8, _iPtrPage uint32, _iFreePage uint32, _isCommit int32) (r int32) {
	esc := crt.MustMalloc(20)
	var (
		_pPtrPage = esc // **TMemPage = SMemPage
		_iDbPage  uint32
		_pPager   uintptr    // *TPager = SPager
		_rc       = esc + 16 // *int32
		_nextOvfl uint32
	)
	defer crt.Free(esc)
	_iDbPage = *(*uint32)(unsafe.Pointer(_pDbPage + 4))
	_pPager = *(*uintptr)(unsafe.Pointer(_pBt))

	*(*int32)(unsafe.Pointer(_rc)) = _1163sqlite3PagerMovepage(tls, _pPager, *(*uintptr)(unsafe.Pointer(_pDbPage + 112)), _iFreePage, _isCommit)
	if (*(*int32)(unsafe.Pointer(_rc))) == int32(0) {
		goto _1
	}

	return *(*int32)(unsafe.Pointer(_rc))

_1:
	*(*uint32)(unsafe.Pointer(_pDbPage + 4)) = _iFreePage
	if int32(_eType) != int32(5) && int32(_eType) != int32(1) {
		goto _2
	}

	*(*int32)(unsafe.Pointer(_rc)) = _1164setChildPtrmaps(tls, _pDbPage)
	if (*(*int32)(unsafe.Pointer(_rc))) == int32(0) {
		goto _4
	}

	return *(*int32)(unsafe.Pointer(_rc))

_4:
	goto _3

_2:
	_nextOvfl = uint32(_328sqlite3Get4byte(tls, *(*uintptr)(unsafe.Pointer(_pDbPage + 80))))
	if _nextOvfl == uint32(0) {
		goto _5
	}

	_1165ptrmapPut(tls, _pBt, _nextOvfl, uint8(4), _iFreePage, _rc)
	if (*(*int32)(unsafe.Pointer(_rc))) == int32(0) {
		goto _6
	}

	return *(*int32)(unsafe.Pointer(_rc))

_6:
_5:
_3:
	if int32(_eType) == int32(1) {
		goto _7
	}

	*(*int32)(unsafe.Pointer(_rc)) = _363btreeGetPage(tls, _pBt, _iPtrPage, _pPtrPage, int32(0))
	if (*(*int32)(unsafe.Pointer(_rc))) == int32(0) {
		goto _8
	}

	return *(*int32)(unsafe.Pointer(_rc))

_8:
	*(*int32)(unsafe.Pointer(_rc)) = _161sqlite3PagerWrite(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPtrPage))) + 112)))
	if (*(*int32)(unsafe.Pointer(_rc))) == int32(0) {
		goto _9
	}

	_919releasePage(tls, *(*uintptr)(unsafe.Pointer(_pPtrPage)))
	return *(*int32)(unsafe.Pointer(_rc))

_9:
	*(*int32)(unsafe.Pointer(_rc)) = _1166modifyPagePointer(tls, *(*uintptr)(unsafe.Pointer(_pPtrPage)), _iDbPage, _iFreePage, _eType)
	_919releasePage(tls, *(*uintptr)(unsafe.Pointer(_pPtrPage)))
	if (*(*int32)(unsafe.Pointer(_rc))) != int32(0) {
		goto _10
	}

	_1165ptrmapPut(tls, _pBt, _iFreePage, _eType, _iPtrPage, _rc)
_10:
_7:
	return *(*int32)(unsafe.Pointer(_rc))
}

// _921saveCursorKey is defined at sqlite3.c:60298:12
func _921saveCursorKey(tls crt.TLS, _pCur uintptr /* *TBtCursor = SBtCursor */) (r int32) {
	var (
		_rc   int32
		_pKey uintptr // *void
	)
	_rc = int32(0)

	if (*(*uint8)(unsafe.Pointer(_pCur + 89))) == 0 {
		goto _1
	}

	*(*int64)(unsafe.Pointer(_pCur + 64)) = _693sqlite3BtreeIntegerKey(tls, _pCur)
	goto _2

_1:
	*(*int64)(unsafe.Pointer(_pCur + 64)) = int64(_663sqlite3BtreePayloadSize(tls, _pCur))
	_pKey = _198sqlite3Malloc(tls, uint64(*(*int64)(unsafe.Pointer(_pCur + 64))))
	if _pKey == 0 {
		goto _3
	}

	_rc = _1167sqlite3BtreePayload(tls, _pCur, uint32(0), uint32(int32(*(*int64)(unsafe.Pointer(_pCur + 64)))), _pKey)
	if _rc != int32(0) {
		goto _5
	}

	*(*uintptr)(unsafe.Pointer(_pCur + 72)) = _pKey
	goto _6

_5:
	Xsqlite3_free(tls, _pKey)
_6:
	goto _4

_3:
	_rc = int32(7)
_4:
_2:
	return _rc
}

// _922releasePageNotNull is defined at sqlite3.c:61792:13
func _922releasePageNotNull(tls crt.TLS, _pPage uintptr /* *TMemPage = SMemPage */) {
	_335sqlite3PagerUnrefNotNull(tls, *(*uintptr)(unsafe.Pointer(_pPage + 112)))
}

// _923pagerPlaybackSavepoint is defined at sqlite3.c:50879:12
func _923pagerPlaybackSavepoint(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _pSavepoint uintptr /* *TPagerSavepoint = SPagerSavepoint */) (r int32) {
	esc := crt.MustMalloc(40)
	var (
		_szJ     int64
		_iHdrOff int64
		_rc      int32
		_pDone   uintptr // *TBitvec = SBitvec
		_ii      uint32
		_nJRec   = esc      // *Tu32 = uint32
		_dummy   = esc + 16 // *Tu32 = uint32
		_1ii     uint32
		_offset  = esc + 32 // *Ti64 = Tsqlite_int64 = int64
	)
	defer crt.Free(esc)
	_rc = int32(0)
	_pDone = 0

	if _pSavepoint == 0 {
		goto _1
	}

	_pDone = _404sqlite3BitvecCreate(tls, *(*uint32)(unsafe.Pointer(_pSavepoint + 24)))
	if _pDone != 0 {
		goto _2
	}

	return int32(7)

_2:
_1:
	*(*uint32)(unsafe.Pointer(_pPager + 28)) = func() uint32 {
		if _pSavepoint != 0 {
			return *(*uint32)(unsafe.Pointer(_pSavepoint + 24))
		}
		return *(*uint32)(unsafe.Pointer(_pPager + 32))
	}()
	*(*uint8)(unsafe.Pointer(_pPager + 22)) = *(*uint8)(unsafe.Pointer(_pPager + 16))
	if _pSavepoint != 0 || (*(*uintptr)(unsafe.Pointer(_pPager + 288))) == 0 {
		goto _3
	}

	return _1168pagerRollbackWal(tls, _pPager)

_3:
	_szJ = *(*int64)(unsafe.Pointer(_pPager + 96))

	if _pSavepoint == 0 || (*(*uintptr)(unsafe.Pointer(_pPager + 288))) != 0 {
		goto _4
	}

	_iHdrOff = func() int64 {
		if (*(*int64)(unsafe.Pointer(_pSavepoint + 8))) != 0 {
			return *(*int64)(unsafe.Pointer(_pSavepoint + 8))
		}
		return _szJ
	}()
	*(*int64)(unsafe.Pointer(_pPager + 96)) = *(*int64)(unsafe.Pointer(_pSavepoint))
_6:
	if _rc != int32(0) || (*(*int64)(unsafe.Pointer(_pPager + 96))) >= _iHdrOff {
		goto _7
	}

	_rc = _929pager_playback_one_page(tls, _pPager, _pPager+96, _pDone, int32(1), int32(1))
	goto _6

_7:
	goto _5

_4:
	*(*int64)(unsafe.Pointer(_pPager + 96)) = int64(0)
_5:
_8:
	if _rc != int32(0) || (*(*int64)(unsafe.Pointer(_pPager + 96))) >= _szJ {
		goto _9
	}

	*(*uint32)(unsafe.Pointer(_nJRec)) = uint32(0)
	_rc = _928readJournalHdr(tls, _pPager, int32(0), _szJ, _nJRec, _dummy)

	if (*(*uint32)(unsafe.Pointer(_nJRec))) != uint32(0) || ((*(*int64)(unsafe.Pointer(_pPager + 104)))+int64(*(*uint32)(unsafe.Pointer(_pPager + 184)))) != (*(*int64)(unsafe.Pointer(_pPager + 96))) {
		goto _10
	}

	*(*uint32)(unsafe.Pointer(_nJRec)) = uint32((_szJ - (*(*int64)(unsafe.Pointer(_pPager + 96)))) / int64((*(*int32)(unsafe.Pointer(_pPager + 188)))+int32(8)))
_10:
	_ii = uint32(0)
_11:
	if _rc != int32(0) || _ii >= (*(*uint32)(unsafe.Pointer(_nJRec))) || (*(*int64)(unsafe.Pointer(_pPager + 96))) >= _szJ {
		goto _13
	}

	_rc = _929pager_playback_one_page(tls, _pPager, _pPager+96, _pDone, int32(1), int32(1))
	_ii++
	goto _11

_13:
	goto _8

_9:
	if _pSavepoint == 0 {
		goto _14
	}

	*(*int64)(unsafe.Pointer(_offset)) = int64(*(*uint32)(unsafe.Pointer(_pSavepoint + 28))) * int64(int32(4)+(*(*int32)(unsafe.Pointer(_pPager + 188))))
	if (*(*uintptr)(unsafe.Pointer(_pPager + 288))) == 0 {
		goto _15
	}

	_rc = _1169sqlite3WalSavepointUndo(tls, *(*uintptr)(unsafe.Pointer(_pPager + 288)), _pSavepoint+32)
_15:
	_1ii = uint32(*(*uint32)(unsafe.Pointer(_pSavepoint + 28)))
_16:
	if _rc != int32(0) || _1ii >= (*(*uint32)(unsafe.Pointer(_pPager + 56))) {
		goto _18
	}

	_rc = _929pager_playback_one_page(tls, _pPager, _offset, _pDone, int32(0), int32(1))
	_1ii++
	goto _16

_18:
_14:
	_409sqlite3BitvecDestroy(tls, _pDone)
	if _rc != int32(0) {
		goto _19
	}

	*(*int64)(unsafe.Pointer(_pPager + 96)) = _szJ
_19:
	return _rc
}

// _924getPageError is defined at sqlite3.c:53080:12
func _924getPageError(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _pgno uint32, _ppPage uintptr /* **TDbPage = SPgHdr */, _flags int32) (r int32) {
	*(*uintptr)(unsafe.Pointer(_ppPage)) = null
	return *(*int32)(unsafe.Pointer(_pPager + 44))
}

// _925getPageMMap is defined at sqlite3.c:53008:12
func _925getPageMMap(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _pgno uint32, _ppPage uintptr /* **TDbPage = SPgHdr */, _flags int32) (r int32) {
	esc := crt.MustMalloc(40)
	var (
		_rc      int32
		_pPg     = esc      // **TPgHdr = SPgHdr
		_iFrame  = esc + 16 // *Tu32 = uint32
		_bMmapOk int32
		_pData   = esc + 32 // **void
	)
	defer crt.Free(esc)
	_rc = int32(0)
	*(*uintptr)(unsafe.Pointer(_pPg)) = 0
	*(*uint32)(unsafe.Pointer(_iFrame)) = uint32(0)
	_bMmapOk = bool2int((_pgno > uint32(1)) && ((int32(*(*uint8)(unsafe.Pointer(_pPager + 20))) == int32(1)) || (_flags&int32(0x2) != 0)))

	if _pgno > uint32(1) || _pgno != uint32(0) {
		goto _1
	}

	return _556sqlite3CorruptError(tls, int32(53036))

_1:
	if _bMmapOk == 0 || (*(*uintptr)(unsafe.Pointer(_pPager + 288))) == 0 {
		goto _2
	}

	_rc = _902sqlite3WalFindFrame(tls, *(*uintptr)(unsafe.Pointer(_pPager + 288)), _pgno, _iFrame)
	if _rc == int32(0) {
		goto _3
	}

	*(*uintptr)(unsafe.Pointer(_ppPage)) = null
	return _rc

_3:
_2:
	if _bMmapOk == 0 || (*(*uint32)(unsafe.Pointer(_iFrame))) != uint32(0) {
		goto _4
	}

	*(*uintptr)(unsafe.Pointer(_pData)) = 0
	_rc = _1170sqlite3OsFetch(tls, *(*uintptr)(unsafe.Pointer(_pPager + 72)), int64(_pgno-uint32(1))*int64(*(*int32)(unsafe.Pointer(_pPager + 188))), *(*int32)(unsafe.Pointer(_pPager + 188)), _pData)
	if _rc != int32(0) || (*(*uintptr)(unsafe.Pointer(_pData))) == 0 {
		goto _5
	}

	if int32(*(*uint8)(unsafe.Pointer(_pPager + 20))) <= int32(1) && (*(*uint8)(unsafe.Pointer(_pPager + 16))) == 0 {
		goto _6
	}

	*(*uintptr)(unsafe.Pointer(_pPg)) = _569sqlite3PagerLookup(tls, _pPager, _pgno)
_6:
	if (*(*uintptr)(unsafe.Pointer(_pPg))) != 0 {
		goto _7
	}

	_rc = _1171pagerAcquireMapPage(tls, _pPager, _pgno, *(*uintptr)(unsafe.Pointer(_pData)), _pPg)
	goto _8

_7:
	_874sqlite3OsUnfetch(tls, *(*uintptr)(unsafe.Pointer(_pPager + 72)), int64(_pgno-uint32(1))*int64(*(*int32)(unsafe.Pointer(_pPager + 188))), *(*uintptr)(unsafe.Pointer(_pData)))
_8:
	if (*(*uintptr)(unsafe.Pointer(_pPg))) == 0 {
		goto _9
	}

	*(*uintptr)(unsafe.Pointer(_ppPage)) = *(*uintptr)(unsafe.Pointer(_pPg))
	return int32(0)

_9:
_5:
	if _rc == int32(0) {
		goto _10
	}

	*(*uintptr)(unsafe.Pointer(_ppPage)) = null
	return _rc

_10:
_4:
	return _926getPageNormal(tls, _pPager, _pgno, _ppPage, _flags)
}

// _926getPageNormal is defined at sqlite3.c:52906:12
func _926getPageNormal(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _pgno uint32, _ppPage uintptr /* **TDbPage = SPgHdr */, _flags int32) (r int32) {
	esc := crt.MustMalloc(8)
	var (
		_rc        int32
		_pPg       uintptr // *TPgHdr = SPgHdr
		_noContent uint8
		_pBase     = esc // **Tsqlite3_pcache_page = Ssqlite3_pcache_page
	)
	defer crt.Free(esc)
	_rc = int32(0)

	if _pgno != uint32(0) {
		goto _1
	}

	return _556sqlite3CorruptError(tls, int32(52922))

_1:
	*(*uintptr)(unsafe.Pointer(_pBase)) = _891sqlite3PcacheFetch(tls, *(*uintptr)(unsafe.Pointer(_pPager + 280)), _pgno, int32(3))
	if (*(*uintptr)(unsafe.Pointer(_pBase))) != 0 {
		goto _2
	}

	_pPg = null
	_rc = _1172sqlite3PcacheFetchStress(tls, *(*uintptr)(unsafe.Pointer(_pPager + 280)), _pgno, _pBase)
	if _rc == int32(0) {
		goto _3
	}

	goto _pager_acquire_err

_3:
	if (*(*uintptr)(unsafe.Pointer(_pBase))) != 0 {
		goto _4
	}

	_rc = int32(7)
	goto _pager_acquire_err

_4:
_2:
	_pPg = set4(&(*(*uintptr)(unsafe.Pointer(_ppPage))), _892sqlite3PcacheFetchFinish(tls, *(*uintptr)(unsafe.Pointer(_pPager + 280)), _pgno, *(*uintptr)(unsafe.Pointer(_pBase))))

	_noContent = uint8(bool2int((_flags & int32(0x1)) != int32(0)))
	if (*(*uintptr)(unsafe.Pointer(_pPg + 40))) == 0 || _noContent != 0 {
		goto _5
	}

	(*(*int32)(unsafe.Pointer(_pPager + 240)))++
	return int32(0)

	goto _6

_5:
	if _pgno <= uint32(2147483647) && _pgno != uint32((_149sqlite3PendingByte/(*(*int32)(unsafe.Pointer(_pPager + 188))))+int32(1)) {
		goto _7
	}

	_rc = _556sqlite3CorruptError(tls, int32(52954))
	goto _pager_acquire_err

_7:
	*(*uintptr)(unsafe.Pointer(_pPg + 40)) = _pPager

	if (*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pPager + 72))))) != 0 && (*(*uint32)(unsafe.Pointer(_pPager + 28))) >= _pgno && _noContent == 0 {
		goto _8
	}

	if _pgno <= (*(*uint32)(unsafe.Pointer(_pPager + 192))) {
		goto _10
	}

	_rc = int32(13)
	goto _pager_acquire_err

_10:
	if _noContent == 0 {
		goto _11
	}

	_523sqlite3BeginBenignMalloc(tls)
	if _pgno > (*(*uint32)(unsafe.Pointer(_pPager + 32))) {
		goto _12
	}

	_405sqlite3BitvecSet(tls, *(*uintptr)(unsafe.Pointer(_pPager + 64)), _pgno)
_12:
	_890addToSavepointBitvecs(tls, _pPager, _pgno)
	_524sqlite3EndBenignMalloc(tls)
_11:
	crt.Xmemset(tls, *(*uintptr)(unsafe.Pointer(_pPg + 8)), int32(0), uint64(*(*int32)(unsafe.Pointer(_pPager + 188))))
	goto _9

_8:
	(*(*int32)(unsafe.Pointer((_pPager + 240) + 4)))++
	_rc = _1173readDbPage(tls, _pPg)
	if _rc == int32(0) {
		goto _13
	}

	goto _pager_acquire_err

_13:
_9:
_6:
	return int32(0)

	goto _pager_acquire_err
_pager_acquire_err:
	if _pPg == 0 {
		goto _14
	}

	_1174sqlite3PcacheDrop(tls, _pPg)
_14:
	_931pagerUnlockIfUnused(tls, _pPager)
	*(*uintptr)(unsafe.Pointer(_ppPage)) = null
	return _rc
}

// _927readMasterJournal is defined at sqlite3.c:48786:12
func _927readMasterJournal(tls crt.TLS, _pJrnl uintptr /* *Tsqlite3_file = Ssqlite3_file */, _zMaster uintptr /* *int8 */, _nMaster uint32) (r int32) {
	esc := crt.MustMalloc(56)
	var (
		_rc     int32
		_len    = esc      // *Tu32 = uint32
		_szJ    = esc + 16 // *Ti64 = Tsqlite_int64 = int64
		_cksum  = esc + 32 // *Tu32 = uint32
		_u      uint32
		_aMagic = esc + 48 // *[8]uint8
	)
	defer crt.Free(esc)
	*(*int8)(unsafe.Pointer(_zMaster)) = int8('\x00')
	if int32(0) == set5(&_rc, _352sqlite3OsFileSize(tls, _pJrnl, _szJ)) && (*(*int64)(unsafe.Pointer(_szJ))) >= int64(16) && int32(0) == set5(&_rc, _1175read32bits(tls, _pJrnl, (*(*int64)(unsafe.Pointer(_szJ)))-int64(16), _len)) && (*(*uint32)(unsafe.Pointer(_len))) < _nMaster && int64(*(*uint32)(unsafe.Pointer(_len))) <= ((*(*int64)(unsafe.Pointer(_szJ)))-int64(16)) && (*(*uint32)(unsafe.Pointer(_len))) != uint32(0) && int32(0) == set5(&_rc, _1175read32bits(tls, _pJrnl, (*(*int64)(unsafe.Pointer(_szJ)))-int64(12), _cksum)) && int32(0) == set5(&_rc, _586sqlite3OsRead(tls, _pJrnl, _aMagic, int32(8), (*(*int64)(unsafe.Pointer(_szJ)))-int64(8))) && crt.Xmemcmp(tls, _aMagic, _582aJournalMagic, uint64(8)) == 0 && int32(0) == set5(&_rc, _586sqlite3OsRead(tls, _pJrnl, _zMaster, int32(*(*uint32)(unsafe.Pointer(_len))), ((*(*int64)(unsafe.Pointer(_szJ)))-int64(16))-int64(*(*uint32)(unsafe.Pointer(_len))))) {
		goto _1
	}

	return _rc

_1:
	_u = uint32(0)
_2:
	if _u >= (*(*uint32)(unsafe.Pointer(_len))) {
		goto _4
	}

	*(*uint32)(unsafe.Pointer(_cksum)) = uint32((*(*uint32)(unsafe.Pointer(_cksum))) - uint32(*(*int8)(unsafe.Pointer(_zMaster + uintptr(_u)))))
	_u++
	goto _2

_4:
	if (*(*uint32)(unsafe.Pointer(_cksum))) == 0 {
		goto _5
	}

	*(*uint32)(unsafe.Pointer(_len)) = uint32(0)
_5:
	*(*int8)(unsafe.Pointer(_zMaster + uintptr(*(*uint32)(unsafe.Pointer(_len))))) = int8('\x00')
	return int32(0)
}

// _928readJournalHdr is defined at sqlite3.c:49042:12
func _928readJournalHdr(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _isHot int32, _journalSize int64, _pNRec uintptr /* *Tu32 = uint32 */, _pDbSize uintptr /* *Tu32 = uint32 */) (r int32) {
	esc := crt.MustMalloc(36)
	var (
		_rc          int32
		_aMagic      = esc // *[8]uint8
		_iHdrOff     int64
		_iPageSize   = esc + 16 // *Tu32 = uint32
		_iSectorSize = esc + 32 // *Tu32 = uint32
	)
	defer crt.Free(esc)

	*(*int64)(unsafe.Pointer(_pPager + 96)) = _580journalHdrOffset(tls, _pPager)
	if ((*(*int64)(unsafe.Pointer(_pPager + 96))) + int64(*(*uint32)(unsafe.Pointer(_pPager + 184)))) <= _journalSize {
		goto _1
	}

	return int32(101)

_1:
	_iHdrOff = *(*int64)(unsafe.Pointer(_pPager + 96))
	if _isHot == 0 && _iHdrOff == (*(*int64)(unsafe.Pointer(_pPager + 104))) {
		goto _2
	}

	_rc = _586sqlite3OsRead(tls, *(*uintptr)(unsafe.Pointer(_pPager + 80)), _aMagic, int32(8), _iHdrOff)
	if _rc == 0 {
		goto _3
	}

	return _rc

_3:
	if crt.Xmemcmp(tls, _aMagic, _582aJournalMagic, uint64(8)) == int32(0) {
		goto _4
	}

	return int32(101)

_4:
_2:
	if int32(0) == set5(&_rc, _1175read32bits(tls, *(*uintptr)(unsafe.Pointer(_pPager + 80)), _iHdrOff+int64(8), _pNRec)) && int32(0) == set5(&_rc, _1175read32bits(tls, *(*uintptr)(unsafe.Pointer(_pPager + 80)), _iHdrOff+int64(12), _pPager+52)) && int32(0) == set5(&_rc, _1175read32bits(tls, *(*uintptr)(unsafe.Pointer(_pPager + 80)), _iHdrOff+int64(16), _pDbSize)) {
		goto _5
	}

	return _rc

_5:
	if (*(*int64)(unsafe.Pointer(_pPager + 96))) != int64(0) {
		goto _6
	}

	if int32(0) == set5(&_rc, _1175read32bits(tls, *(*uintptr)(unsafe.Pointer(_pPager + 80)), _iHdrOff+int64(20), _iSectorSize)) && int32(0) == set5(&_rc, _1175read32bits(tls, *(*uintptr)(unsafe.Pointer(_pPager + 80)), _iHdrOff+int64(24), _iPageSize)) {
		goto _7
	}

	return _rc

_7:
	if (*(*uint32)(unsafe.Pointer(_iPageSize))) != uint32(0) {
		goto _8
	}

	*(*uint32)(unsafe.Pointer(_iPageSize)) = uint32(*(*int32)(unsafe.Pointer(_pPager + 188)))
_8:
	if (*(*uint32)(unsafe.Pointer(_iPageSize))) >= uint32(512) && (*(*uint32)(unsafe.Pointer(_iSectorSize))) >= uint32(32) && (*(*uint32)(unsafe.Pointer(_iPageSize))) <= uint32(65536) && (*(*uint32)(unsafe.Pointer(_iSectorSize))) <= uint32(0x10000) && (((*(*uint32)(unsafe.Pointer(_iPageSize)))-uint32(1))&(*(*uint32)(unsafe.Pointer(_iPageSize)))) == uint32(0) && (((*(*uint32)(unsafe.Pointer(_iSectorSize)))-uint32(1))&(*(*uint32)(unsafe.Pointer(_iSectorSize)))) == uint32(0) {
		goto _9
	}

	return int32(101)

_9:
	_rc = _412sqlite3PagerSetPagesize(tls, _pPager, _iPageSize, int32(-1))
	*(*uint32)(unsafe.Pointer(_pPager + 184)) = *(*uint32)(unsafe.Pointer(_iSectorSize))
_6:
	{
		p := &(*(*int64)(unsafe.Pointer(_pPager + 96)))
		*p = int64(int64(*p) + int64(*(*uint32)(unsafe.Pointer(_pPager + 184))))
	}
	return _rc
}

// _929pager_playback_one_page is defined at sqlite3.c:49755:12
func _929pager_playback_one_page(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _pOffset uintptr /* *Ti64 = Tsqlite_int64 = int64 */, _pDone uintptr /* *TBitvec = SBitvec */, _isMainJrnl int32, _isSavepnt int32) (r int32) {
	esc := crt.MustMalloc(36)
	var (
		_rc       int32
		_pPg      = esc      // **TPgHdr = SPgHdr
		_pgno     = esc + 16 // *TPgno = Tu32 = uint32
		_cksum    = esc + 32 // *Tu32 = uint32
		_aData    uintptr    // *int8
		_jfd      uintptr    // *Tsqlite3_file = Ssqlite3_file
		_isSynced int32
		_ofst     int64
		_pData    uintptr // *void
	)
	defer crt.Free(esc)

	_aData = *(*uintptr)(unsafe.Pointer(_pPager + 272))

	_jfd = func() uintptr {
		if _isMainJrnl != 0 {
			return *(*uintptr)(unsafe.Pointer(_pPager + 80))
		}
		return *(*uintptr)(unsafe.Pointer(_pPager + 88))
	}()
	_rc = _1175read32bits(tls, _jfd, *(*int64)(unsafe.Pointer(_pOffset)), _pgno)
	if _rc == int32(0) {
		goto _1
	}

	return _rc

_1:
	_rc = _586sqlite3OsRead(tls, _jfd, _aData, *(*int32)(unsafe.Pointer(_pPager + 188)), (*(*int64)(unsafe.Pointer(_pOffset)))+int64(4))
	if _rc == int32(0) {
		goto _2
	}

	return _rc

_2:
	{
		p := &(*(*int64)(unsafe.Pointer(_pOffset)))
		*p = int64(int64(*p) + int64(((*(*int32)(unsafe.Pointer(_pPager + 188)))+int32(4))+(_isMainJrnl*int32(4))))
	}
	if (*(*uint32)(unsafe.Pointer(_pgno))) != uint32(0) && (*(*uint32)(unsafe.Pointer(_pgno))) != uint32((_149sqlite3PendingByte/(*(*int32)(unsafe.Pointer(_pPager + 188))))+int32(1)) {
		goto _3
	}

	return int32(101)

_3:
	if (*(*uint32)(unsafe.Pointer(_pgno))) <= *(*uint32)(unsafe.Pointer(_pPager + 28)) && _407sqlite3BitvecTest(tls, _pDone, *(*uint32)(unsafe.Pointer(_pgno))) == 0 {
		goto _4
	}

	return int32(0)

_4:
	if _isMainJrnl == 0 {
		goto _5
	}

	_rc = _1175read32bits(tls, _jfd, (*(*int64)(unsafe.Pointer(_pOffset)))-int64(4), _cksum)
	if _rc == 0 {
		goto _6
	}

	return _rc

_6:
	if _isSavepnt != 0 || _897pager_cksum(tls, _pPager, _aData) == (*(*uint32)(unsafe.Pointer(_cksum))) {
		goto _7
	}

	return int32(101)

_7:
_5:
	if _pDone == 0 || set5(&_rc, _405sqlite3BitvecSet(tls, _pDone, *(*uint32)(unsafe.Pointer(_pgno)))) == int32(0) {
		goto _8
	}

	return _rc

_8:
	if (*(*uint32)(unsafe.Pointer(_pgno))) != uint32(1) || int32(*(*int16)(unsafe.Pointer(_pPager + 178))) == int32(*(*uint8)(unsafe.Pointer(_aData + 20))) {
		goto _9
	}

	*(*int16)(unsafe.Pointer(_pPager + 178)) = int16(*(*uint8)(unsafe.Pointer(_aData + 20)))
_9:
	if (*(*uintptr)(unsafe.Pointer(_pPager + 288))) == 0 {
		goto _10
	}

	*(*uintptr)(unsafe.Pointer(_pPg)) = null
	goto _11

_10:
	*(*uintptr)(unsafe.Pointer(_pPg)) = _569sqlite3PagerLookup(tls, _pPager, *(*uint32)(unsafe.Pointer(_pgno)))
_11:
	if _isMainJrnl == 0 {
		goto _12
	}

	_isSynced = bool2int(((*(*uint8)(unsafe.Pointer(_pPager + 11))) != 0) || ((*(*int64)(unsafe.Pointer(_pOffset))) <= (*(*int64)(unsafe.Pointer(_pPager + 104)))))
	goto _13

_12:
	_isSynced = bool2int(((*(*uintptr)(unsafe.Pointer(_pPg))) == 0) || (int32(0) == (int32(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPg))) + 52))) & int32(0x8))))
_13:
	if (*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pPager + 72))))) == 0 || int32(*(*uint8)(unsafe.Pointer(_pPager + 20))) < int32(4) && int32(*(*uint8)(unsafe.Pointer(_pPager + 20))) != int32(0) || _isSynced == 0 {
		goto _14
	}

	_ofst = int64((*(*uint32)(unsafe.Pointer(_pgno)))-uint32(1)) * int64(*(*int32)(unsafe.Pointer(_pPager + 188)))

	_rc = _163sqlite3OsWrite(tls, *(*uintptr)(unsafe.Pointer(_pPager + 72)), _aData, *(*int32)(unsafe.Pointer(_pPager + 188)), _ofst)
	if (*(*uint32)(unsafe.Pointer(_pgno))) <= (*(*uint32)(unsafe.Pointer(_pPager + 36))) {
		goto _16
	}

	*(*uint32)(unsafe.Pointer(_pPager + 36)) = *(*uint32)(unsafe.Pointer(_pgno))
_16:
	if (*(*uintptr)(unsafe.Pointer(_pPager + 112))) == 0 {
		goto _17
	}

	_578sqlite3BackupUpdate(tls, *(*uintptr)(unsafe.Pointer(_pPager + 112)), *(*uint32)(unsafe.Pointer(_pgno)), _aData)
_17:
	goto _15

_14:
	if _isMainJrnl != 0 || (*(*uintptr)(unsafe.Pointer(_pPg))) != 0 {
		goto _18
	}

	{
		p := &(*(*uint8)(unsafe.Pointer(_pPager + 24)))
		*p = uint8(int32(*p) | int32(0x2))
	}
	_rc = _150sqlite3PagerGet(tls, _pPager, *(*uint32)(unsafe.Pointer(_pgno)), _pPg, int32(1))

	{
		p := &(*(*uint8)(unsafe.Pointer(_pPager + 24)))
		*p = uint8(int32(*p) & int32(-3))
	}
	if _rc == int32(0) {
		goto _19
	}

	return _rc

_19:
	_571sqlite3PcacheMakeDirty(tls, *(*uintptr)(unsafe.Pointer(_pPg)))
_18:
_15:
	if (*(*uintptr)(unsafe.Pointer(_pPg))) == 0 {
		goto _20
	}

	_pData = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPg))) + 8))
	crt.Xmemcpy(tls, _pData, _aData, uint64(*(*int32)(unsafe.Pointer(_pPager + 188))))
	fn16(*(*uintptr)(unsafe.Pointer(_pPager + 256)))(tls, *(*uintptr)(unsafe.Pointer(_pPg)))
	if (*(*uint32)(unsafe.Pointer(_pgno))) != uint32(1) {
		goto _21
	}

	crt.Xmemcpy(tls, _pPager+136, _pData+24, uint64(16))
_21:
	_565sqlite3PcacheRelease(tls, *(*uintptr)(unsafe.Pointer(_pPg)))
_20:
	return _rc
}

// _930pager_delmaster is defined at sqlite3.c:50027:12
func _930pager_delmaster(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _zMaster uintptr /* *int8 */) (r int32) {
	esc := crt.MustMalloc(20)
	var (
		_pVfs           uintptr // *Tsqlite3_vfs = Ssqlite3_vfs
		_rc             int32
		_pMaster        uintptr // *Tsqlite3_file = Ssqlite3_file
		_pJournal       uintptr // *Tsqlite3_file = Ssqlite3_file
		_zMasterJournal uintptr // *int8
		_nMasterJournal = esc   // *Ti64 = Tsqlite_int64 = int64
		_zJournal       uintptr // *int8
		_zMasterPtr     uintptr // *int8
		_nMasterPtr     int32
		_flags          int32
		_exists         = esc + 16 // *int32
		_c              int32
		_1flags         int32
	)
	defer crt.Free(esc)
	_pVfs = *(*uintptr)(unsafe.Pointer(_pPager))
	_zMasterJournal = 0
	_pMaster = _135sqlite3MallocZero(tls, uint64((*(*int32)(unsafe.Pointer(_pVfs + 4)))*int32(2)))
	_pJournal = _pMaster + uintptr(*(*int32)(unsafe.Pointer(_pVfs + 4)))
	if _pMaster != 0 {
		goto _1
	}

	_rc = int32(7)
	goto _2

_1:
	_flags = int32(16385)
	_rc = _845sqlite3OsOpen(tls, _pVfs, _zMaster, _pMaster, _flags, null)
_2:
	if _rc == int32(0) {
		goto _3
	}

	goto _delmaster_out

_3:
	_rc = _352sqlite3OsFileSize(tls, _pMaster, _nMasterJournal)
	if _rc == int32(0) {
		goto _4
	}

	goto _delmaster_out

_4:
	_nMasterPtr = (*(*int32)(unsafe.Pointer(_pVfs + 8))) + int32(1)
	_zMasterJournal = _198sqlite3Malloc(tls, uint64(((*(*int64)(unsafe.Pointer(_nMasterJournal)))+int64(_nMasterPtr))+int64(1)))
	if _zMasterJournal != 0 {
		goto _5
	}

	_rc = int32(7)
	goto _delmaster_out

_5:
	_zMasterPtr = _zMasterJournal + uintptr((*(*int64)(unsafe.Pointer(_nMasterJournal)))+int64(1))
	_rc = _586sqlite3OsRead(tls, _pMaster, _zMasterJournal, int32(*(*int64)(unsafe.Pointer(_nMasterJournal))), int64(0))
	if _rc == int32(0) {
		goto _6
	}

	goto _delmaster_out

_6:
	*(*int8)(unsafe.Pointer(_zMasterJournal + uintptr(*(*int64)(unsafe.Pointer(_nMasterJournal))))) = int8(0)
	_zJournal = _zMasterJournal
_7:
	if int64(int64(_zJournal-_zMasterJournal)) >= (*(*int64)(unsafe.Pointer(_nMasterJournal))) {
		goto _8
	}

	_rc = _872sqlite3OsAccess(tls, _pVfs, _zJournal, int32(0), _exists)
	if _rc == int32(0) {
		goto _9
	}

	goto _delmaster_out

_9:
	if (*(*int32)(unsafe.Pointer(_exists))) == 0 {
		goto _10
	}

	_1flags = int32(2049)
	_rc = _845sqlite3OsOpen(tls, _pVfs, _zJournal, _pJournal, _1flags, null)
	if _rc == int32(0) {
		goto _11
	}

	goto _delmaster_out

_11:
	_rc = _927readMasterJournal(tls, _pJournal, _zMasterPtr, uint32(_nMasterPtr))
	_849sqlite3OsClose(tls, _pJournal)
	if _rc == int32(0) {
		goto _12
	}

	goto _delmaster_out

_12:
	_c = bool2int((int32(*(*int8)(unsafe.Pointer(_zMasterPtr))) != int32(0)) && (crt.Xstrcmp(tls, _zMasterPtr, _zMaster) == int32(0)))
	if _c == 0 {
		goto _13
	}

	goto _delmaster_out

_13:
_10:
	_zJournal += uintptr(_211sqlite3Strlen30(tls, _zJournal) + int32(1))
	goto _7

_8:
	_849sqlite3OsClose(tls, _pMaster)
	_rc = _913sqlite3OsDelete(tls, _pVfs, _zMaster, int32(0))
	goto _delmaster_out
_delmaster_out:
	Xsqlite3_free(tls, _zMasterJournal)
	if _pMaster == 0 {
		goto _14
	}

	_849sqlite3OsClose(tls, _pMaster)

	Xsqlite3_free(tls, _pMaster)
_14:
	return _rc
}

// _931pagerUnlockIfUnused is defined at sqlite3.c:52842:13
func _931pagerUnlockIfUnused(tls crt.TLS, _pPager uintptr /* *TPager = SPager */) {
	if _754sqlite3PcacheRefCount(tls, *(*uintptr)(unsafe.Pointer(_pPager + 280))) != int32(0) {
		goto _1
	}

	_856pagerUnlockAndRollback(tls, _pPager)
_1:
}

type SyyParser struct {
	Xyytos      uintptr // *SyyStackEntry
	XpParse     uintptr // *SParse
	Xyystack    [100]SyyStackEntry
	XyystackEnd uintptr // *SyyStackEntry
}

// _932sqlite3ParserInit is defined at sqlite3.c:138402:21
func _932sqlite3ParserInit(tls crt.TLS, _yypParser uintptr /* *void */) {
	var _pParser uintptr // *TyyParser = SyyParser

	_pParser = _yypParser
	*(*uintptr)(unsafe.Pointer(_pParser)) = _pParser + 16
	*(*uint16)(unsafe.Pointer(_pParser + 16)) = uint16(0)
	*(*uint8)(unsafe.Pointer(_pParser + 16 + 2)) = uint8(0)
	*(*uintptr)(unsafe.Pointer(_pParser + 3216)) = (_pParser + 16) + 3168
}

// _933sqlite3GetToken is defined at sqlite3.c:141171:20
func _933sqlite3GetToken(tls crt.TLS, _z uintptr /* *uint8 */, _tokenType uintptr /* *int32 */) (r int32) {
	var (
		_i     int32
		_c     int32
		_delim int32
		_n     int32
	)
	switch int32(*(*uint8)(unsafe.Pointer(_1176aiClass + uintptr(*(*uint8)(unsafe.Pointer(_z)))))) {
	case int32(7):
		goto _2
	case int32(11):
		goto _3
	case int32(17):
		goto _4
	case int32(18):
		goto _5
	case int32(19):
		goto _6
	case int32(20):
		goto _7
	case int32(21):
		goto _8
	case int32(16):
		goto _9
	case int32(22):
		goto _10
	case int32(14):
		goto _11
	case int32(12):
		goto _12
	case int32(13):
		goto _13
	case int32(15):
		goto _14
	case int32(10):
		goto _15
	case int32(23):
		goto _16
	case int32(24):
		goto _17
	case int32(25):
		goto _18
	case int32(8):
		goto _19
	case int32(26):
		goto _20
	case int32(3):
		goto _21
	case int32(9):
		goto _22
	case int32(6):
		goto _23
	case int32(4):
		goto _24
	case int32(5):
		goto _25
	case int32(1):
		goto _26
	case int32(0):
		goto _27
	case int32(2):
		goto _28
	default:
		goto _29
	}
_2:
	_i = int32(1)
_30:
	if int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(*(*uint8)(unsafe.Pointer(_z + uintptr(_i)))))))&int32(0x1) == 0 {
		goto _32
	}

	_i++
	goto _30

_32:
	*(*int32)(unsafe.Pointer(_tokenType)) = int32(158)
	return _i

_3:
	if int32(*(*uint8)(unsafe.Pointer(_z + 1))) != int32('-') {
		goto _33
	}

	_i = int32(2)
_34:
	if set5(&_c, int32(*(*uint8)(unsafe.Pointer(_z + uintptr(_i))))) == int32(0) || _c == int32('\n') {
		goto _36
	}

	_i++
	goto _34

_36:
	*(*int32)(unsafe.Pointer(_tokenType)) = int32(158)
	return _i

_33:
	*(*int32)(unsafe.Pointer(_tokenType)) = int32(89)
	return int32(1)

_4:
	*(*int32)(unsafe.Pointer(_tokenType)) = int32(22)
	return int32(1)

_5:
	*(*int32)(unsafe.Pointer(_tokenType)) = int32(23)
	return int32(1)

_6:
	*(*int32)(unsafe.Pointer(_tokenType)) = int32(1)
	return int32(1)

_7:
	*(*int32)(unsafe.Pointer(_tokenType)) = int32(88)
	return int32(1)

_8:
	*(*int32)(unsafe.Pointer(_tokenType)) = int32(90)
	return int32(1)

_9:
	if int32(*(*uint8)(unsafe.Pointer(_z + 1))) == int32('*') && int32(*(*uint8)(unsafe.Pointer(_z + 2))) != int32(0) {
		goto _37
	}

	*(*int32)(unsafe.Pointer(_tokenType)) = int32(91)
	return int32(1)

_37:
	_i = int32(3)
	_c = int32(*(*uint8)(unsafe.Pointer(_z + 2)))
_38:
	if _c == int32('*') && int32(*(*uint8)(unsafe.Pointer(_z + uintptr(_i)))) == int32('/') || set5(&_c, int32(*(*uint8)(unsafe.Pointer(_z + uintptr(_i))))) == int32(0) {
		goto _40
	}

	_i++
	goto _38

_40:
	if _c == 0 {
		goto _41
	}

	_i++
_41:
	*(*int32)(unsafe.Pointer(_tokenType)) = int32(158)
	return _i

_10:
	*(*int32)(unsafe.Pointer(_tokenType)) = int32(92)
	return int32(1)

_11:
	*(*int32)(unsafe.Pointer(_tokenType)) = int32(53)
	return int32(1) + bool2int(int32(*(*uint8)(unsafe.Pointer(_z + 1))) == int32('='))

_12:
	if set5(&_c, int32(*(*uint8)(unsafe.Pointer(_z + 1)))) != int32('=') {
		goto _42
	}

	*(*int32)(unsafe.Pointer(_tokenType)) = int32(55)
	return int32(2)

	goto _43

_42:
	if _c != int32('>') {
		goto _44
	}

	*(*int32)(unsafe.Pointer(_tokenType)) = int32(52)
	return int32(2)

	goto _45

_44:
	if _c != int32('<') {
		goto _46
	}

	*(*int32)(unsafe.Pointer(_tokenType)) = int32(86)
	return int32(2)

	goto _47

_46:
	*(*int32)(unsafe.Pointer(_tokenType)) = int32(56)
	return int32(1)

_47:
_45:
_43:
_13:
	if set5(&_c, int32(*(*uint8)(unsafe.Pointer(_z + 1)))) != int32('=') {
		goto _48
	}

	*(*int32)(unsafe.Pointer(_tokenType)) = int32(57)
	return int32(2)

	goto _49

_48:
	if _c != int32('>') {
		goto _50
	}

	*(*int32)(unsafe.Pointer(_tokenType)) = int32(87)
	return int32(2)

	goto _51

_50:
	*(*int32)(unsafe.Pointer(_tokenType)) = int32(54)
	return int32(1)

_51:
_49:
_14:
	if int32(*(*uint8)(unsafe.Pointer(_z + 1))) == int32('=') {
		goto _52
	}

	*(*int32)(unsafe.Pointer(_tokenType)) = int32(159)
	return int32(1)

	goto _53

_52:
	*(*int32)(unsafe.Pointer(_tokenType)) = int32(52)
	return int32(2)

_53:
_15:
	if int32(*(*uint8)(unsafe.Pointer(_z + 1))) == int32('|') {
		goto _54
	}

	*(*int32)(unsafe.Pointer(_tokenType)) = int32(85)
	return int32(1)

	goto _55

_54:
	*(*int32)(unsafe.Pointer(_tokenType)) = int32(93)
	return int32(2)

_55:
_16:
	*(*int32)(unsafe.Pointer(_tokenType)) = int32(26)
	return int32(1)

_17:
	*(*int32)(unsafe.Pointer(_tokenType)) = int32(84)
	return int32(1)

_18:
	*(*int32)(unsafe.Pointer(_tokenType)) = int32(95)
	return int32(1)

_19:
	_delim = int32(*(*uint8)(unsafe.Pointer(_z)))
	_i = int32(1)
_56:
	if set5(&_c, int32(*(*uint8)(unsafe.Pointer(_z + uintptr(_i))))) == int32(0) {
		goto _58
	}

	if _c != _delim {
		goto _59
	}

	if int32(*(*uint8)(unsafe.Pointer(_z + uintptr(_i+int32(1))))) != _delim {
		goto _60
	}

	_i++
	goto _61

_60:
	goto _58

_61:
_59:
	_i++
	goto _56

_58:
	if _c != int32('\'') {
		goto _62
	}

	*(*int32)(unsafe.Pointer(_tokenType)) = int32(97)
	return _i + int32(1)

	goto _63

_62:
	if _c == int32(0) {
		goto _64
	}

	*(*int32)(unsafe.Pointer(_tokenType)) = int32(59)
	return _i + int32(1)

	goto _65

_64:
	*(*int32)(unsafe.Pointer(_tokenType)) = int32(159)
	return _i

_65:
_63:
_20:
	if int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(*(*uint8)(unsafe.Pointer(_z + 1))))))&int32(0x4) != 0 {
		goto _66
	}

	*(*int32)(unsafe.Pointer(_tokenType)) = int32(122)
	return int32(1)

_66:
_21:
	*(*int32)(unsafe.Pointer(_tokenType)) = int32(134)
	if int32(*(*uint8)(unsafe.Pointer(_z))) != int32('0') || int32(*(*uint8)(unsafe.Pointer(_z + 1))) != int32('x') && int32(*(*uint8)(unsafe.Pointer(_z + 1))) != int32('X') || int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(*(*uint8)(unsafe.Pointer(_z + 2))))))&int32(0x8) == 0 {
		goto _67
	}

	_i = int32(3)
_68:
	if int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(*(*uint8)(unsafe.Pointer(_z + uintptr(_i)))))))&int32(0x8) == 0 {
		goto _70
	}

	_i++
	goto _68

_70:
	return _i

_67:
	_i = int32(0)
_71:
	if int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(*(*uint8)(unsafe.Pointer(_z + uintptr(_i)))))))&int32(0x4) == 0 {
		goto _73
	}

	_i++
	goto _71

_73:
	if int32(*(*uint8)(unsafe.Pointer(_z + uintptr(_i)))) != int32('.') {
		goto _74
	}

	_i++
_75:
	if int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(*(*uint8)(unsafe.Pointer(_z + uintptr(_i)))))))&int32(0x4) == 0 {
		goto _76
	}

	_i++
	goto _75

_76:
	*(*int32)(unsafe.Pointer(_tokenType)) = int32(132)
_74:
	if int32(*(*uint8)(unsafe.Pointer(_z + uintptr(_i)))) != int32('e') && int32(*(*uint8)(unsafe.Pointer(_z + uintptr(_i)))) != int32('E') || int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(*(*uint8)(unsafe.Pointer(_z + uintptr(_i+int32(1))))))))&int32(0x4) == 0 && (int32(*(*uint8)(unsafe.Pointer(_z + uintptr(_i+int32(1))))) != int32('+') && int32(*(*uint8)(unsafe.Pointer(_z + uintptr(_i+int32(1))))) != int32('-') || int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(*(*uint8)(unsafe.Pointer(_z + uintptr(_i+int32(2))))))))&int32(0x4) == 0) {
		goto _77
	}

	_i = int32(_i + int32(2))
_78:
	if int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(*(*uint8)(unsafe.Pointer(_z + uintptr(_i)))))))&int32(0x4) == 0 {
		goto _79
	}

	_i++
	goto _78

_79:
	*(*int32)(unsafe.Pointer(_tokenType)) = int32(132)
_77:
_80:
	if (int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(*(*uint8)(unsafe.Pointer(_z + uintptr(_i))))))) & int32(0x46)) == int32(0) {
		goto _81
	}

	*(*int32)(unsafe.Pointer(_tokenType)) = int32(159)
	_i++
	goto _80

_81:
	return _i

_22:
	_i = int32(1)
	_c = int32(*(*uint8)(unsafe.Pointer(_z)))
_82:
	if _c == int32(']') || set5(&_c, int32(*(*uint8)(unsafe.Pointer(_z + uintptr(_i))))) == int32(0) {
		goto _84
	}

	_i++
	goto _82

_84:
	*(*int32)(unsafe.Pointer(_tokenType)) = func() int32 {
		if _c == int32(']') {
			return int32(59)
		}
		return int32(159)
	}()
	return _i

_23:
	*(*int32)(unsafe.Pointer(_tokenType)) = int32(135)
	_i = int32(1)
_85:
	if int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(*(*uint8)(unsafe.Pointer(_z + uintptr(_i)))))))&int32(0x4) == 0 {
		goto _87
	}

	_i++
	goto _85

_87:
	return _i

_24:
_25:
	_n = int32(0)
	*(*int32)(unsafe.Pointer(_tokenType)) = int32(135)
	_i = int32(1)
_88:
	if set5(&_c, int32(*(*uint8)(unsafe.Pointer(_z + uintptr(_i))))) == int32(0) {
		goto _90
	}

	if (int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(uint8(_c))))) & int32(0x46)) == int32(0) {
		goto _91
	}

	_n++
	goto _92

_91:
	if _c != int32('(') || _n <= int32(0) {
		goto _93
	}

_95:
	_i++
	if ((set5(&_c, int32(*(*uint8)(unsafe.Pointer(_z + uintptr(_i))))) != int32(0)) && (int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(uint8(_c)))))&int32(0x1) == 0)) && (_c != int32(')')) {
		goto _95
	}

	if _c != int32(')') {
		goto _98
	}

	_i++
	goto _99

_98:
	*(*int32)(unsafe.Pointer(_tokenType)) = int32(159)
_99:
	goto _90

	goto _94

_93:
	if _c != int32(':') || int32(*(*uint8)(unsafe.Pointer(_z + uintptr(_i+int32(1))))) != int32(':') {
		goto _100
	}

	_i++
	goto _101

_100:
	goto _90

_101:
_94:
_92:
	_i++
	goto _88

_90:
	if _n != int32(0) {
		goto _102
	}

	*(*int32)(unsafe.Pointer(_tokenType)) = int32(159)
_102:
	return _i

_26:
	_i = int32(1)
_103:
	if int32(*(*uint8)(unsafe.Pointer(_1176aiClass + uintptr(*(*uint8)(unsafe.Pointer(_z + uintptr(_i))))))) > int32(1) {
		goto _105
	}

	_i++
	goto _103

_105:
	if (int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(*(*uint8)(unsafe.Pointer(_z + uintptr(_i))))))) & int32(0x46)) == int32(0) {
		goto _106
	}

	_i++
	goto _1

_106:
	*(*int32)(unsafe.Pointer(_tokenType)) = int32(59)
	return _413keywordCode(tls, _z, _i, _tokenType)

_27:
	if int32(*(*uint8)(unsafe.Pointer(_z + 1))) != int32('\'') {
		goto _107
	}

	*(*int32)(unsafe.Pointer(_tokenType)) = int32(133)
	_i = int32(2)
_108:
	if int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(*(*uint8)(unsafe.Pointer(_z + uintptr(_i)))))))&int32(0x8) == 0 {
		goto _110
	}

	_i++
	goto _108

_110:
	if int32(*(*uint8)(unsafe.Pointer(_z + uintptr(_i)))) == int32('\'') && (_i%int32(2)) == 0 {
		goto _111
	}

	*(*int32)(unsafe.Pointer(_tokenType)) = int32(159)
_112:
	if (*(*uint8)(unsafe.Pointer(_z + uintptr(_i)))) == 0 || int32(*(*uint8)(unsafe.Pointer(_z + uintptr(_i)))) == int32('\'') {
		goto _113
	}

	_i++
	goto _112

_113:
_111:
	if (*(*uint8)(unsafe.Pointer(_z + uintptr(_i)))) == 0 {
		goto _114
	}

	_i++
_114:
	return _i

_107:
_28:
	_i = int32(1)
	goto _1

_29:
	*(*int32)(unsafe.Pointer(_tokenType)) = int32(159)
	return int32(1)

_1:
_115:
	if (int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(*(*uint8)(unsafe.Pointer(_z + uintptr(_i))))))) & int32(0x46)) == int32(0) {
		goto _116
	}

	_i++
	goto _115

_116:
	*(*int32)(unsafe.Pointer(_tokenType)) = int32(59)
	return _i
}

// _934sqlite3Parser is defined at sqlite3.c:140517:21
func _934sqlite3Parser(tls crt.TLS, _yyp uintptr /* *void */, _yymajor int32, _yyminor SToken, _pParse uintptr /* *TParse = SParse */) {
	esc := crt.MustMalloc(24)
	var (
		_yyminorunion = esc // *TYYMINORTYPE = struct{X int64; _ [16]byte}
		_yyact        uint32
		_yypParser    uintptr // *TyyParser = SyyParser
	)
	defer crt.Free(esc)
	_yypParser = _yyp

	*(*uintptr)(unsafe.Pointer(_yypParser + 8)) = _pParse
_1:
	_yyact = _1177yy_find_shift_action(tls, _yypParser, uint8(_yymajor))
	if _yyact > uint32(992) {
		goto _4
	}

	_1178yy_shift(tls, _yypParser, int32(_yyact), _yymajor, _yyminor)
	_yymajor = int32(252)
	goto _5

_4:
	if _yyact > uint32(1321) {
		goto _6
	}

	_1179yy_reduce(tls, _yypParser, _yyact-uint32(993))
	goto _7

_6:
	*(*SToken)(unsafe.Pointer(_yyminorunion)) = _yyminor
	_1180yy_syntax_error(tls, _yypParser, _yymajor, _yyminor)
	_1181yy_destructor(tls, _yypParser, uint8(_yymajor), _yyminorunion)
	_yymajor = int32(252)
_7:
_5:
	if (_yymajor != int32(252)) && ((*(*uintptr)(unsafe.Pointer(_yypParser))) > (_yypParser + 16)) {
		goto _1
	}

	return
}

// _935sqlite3ParserFinalize is defined at sqlite3.c:138576:21
func _935sqlite3ParserFinalize(tls crt.TLS, _p uintptr /* *void */) {
	var _pParser uintptr // *TyyParser = SyyParser

	_pParser = _p
_1:
	if (*(*uintptr)(unsafe.Pointer(_pParser))) <= (_pParser + 16) {
		goto _2
	}

	_1182yy_pop_parser_stack(tls, _pParser)
	goto _1

_2:
}

// _936sqlite3WithDelete is defined at sqlite3.c:105126:21
func _936sqlite3WithDelete(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pWith uintptr /* *TWith = SWith */) {
	var (
		_i    int32
		_pCte uintptr // *SCte
	)
	if _pWith == 0 {
		goto _1
	}

	_i = int32(0)
_2:
	if _i >= (*(*int32)(unsafe.Pointer(_pWith))) {
		goto _4
	}

	_pCte = (_pWith + 16) + 32*uintptr(_i)
	_551sqlite3ExprListDelete(tls, _db, *(*uintptr)(unsafe.Pointer(_pCte + 8)))
	_1094sqlite3SelectDelete(tls, _db, *(*uintptr)(unsafe.Pointer(_pCte + 16)))
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_pCte)))
	_i++
	goto _2

_4:
	_181sqlite3DbFree(tls, _db, _pWith)
_1:
}

// _937initMemArray is defined at sqlite3.c:73725:13
func _937initMemArray(tls crt.TLS, _p uintptr /* *TMem = Ssqlite3_value */, _N int32, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _flags uint16) {
_1:
	if postinc24(&_N) <= int32(0) {
		goto _2
	}

	*(*uintptr)(unsafe.Pointer(_p + 40)) = _db
	*(*uint16)(unsafe.Pointer(_p + 8)) = _flags
	*(*int32)(unsafe.Pointer(_p + 32)) = int32(0)
	_p += 56
	goto _1

_2:
}

// _938azName [168]*int8, escapes: true, sqlite3.c:29997:20
var _938azName = bss + 12688 // array of 168 pointer to char

func init() {
	*(*[168]uintptr)(unsafe.Pointer(_938azName)) = [168]uintptr{
		0:   ts + 21474, /* "Savepoint" */
		1:   ts + 21484, /* "AutoCommit" */
		2:   ts + 21495, /* "Transaction" */
		3:   ts + 12201, /* "SorterNext" */
		4:   ts + 12223, /* "PrevIfOpen" */
		5:   ts + 12212, /* "NextIfOpen" */
		6:   ts + 12184, /* "Prev" */
		7:   ts + 12179, /* "Next" */
		8:   ts + 21507, /* "Checkpoint" */
		9:   ts + 21518, /* "JournalMode" */
		10:  ts + 21530, /* "Vacuum" */
		11:  ts + 21537, /* "VFilter" */
		12:  ts + 21545, /* "VUpdate" */
		13:  ts + 12272, /* "Goto" */
		14:  ts + 21553, /* "Gosub" */
		15:  ts + 21559, /* "InitCoroutine" */
		16:  ts + 12234, /* "Yield" */
		17:  ts + 21573, /* "MustBeInt" */
		18:  ts + 21583, /* "Jump" */
		19:  ts + 21588, /* "Not" */
		20:  ts + 21592, /* "Once" */
		21:  ts + 21597, /* "If" */
		22:  ts + 21600, /* "IfNot" */
		23:  ts + 21606, /* "IfNullRow" */
		24:  ts + 12240, /* "SeekLT" */
		25:  ts + 21616, /* "SeekLE" */
		26:  ts + 21623, /* "SeekGE" */
		27:  ts + 12247, /* "SeekGT" */
		28:  ts + 21630, /* "NoConflict" */
		29:  ts + 21641, /* "NotFound" */
		30:  ts + 21650, /* "Found" */
		31:  ts + 21656, /* "SeekRowid" */
		32:  ts + 21666, /* "NotExists" */
		33:  ts + 21676, /* "Last" */
		34:  ts + 21681, /* "IfSmaller" */
		35:  ts + 21691, /* "SorterSort" */
		36:  ts + 21702, /* "Sort" */
		37:  ts + 12265, /* "Rewind" */
		38:  ts + 21707, /* "IdxLE" */
		39:  ts + 21713, /* "IdxGT" */
		40:  ts + 21719, /* "IdxLT" */
		41:  ts + 21725, /* "IdxGE" */
		42:  ts + 12254, /* "RowSetRead" */
		43:  ts + 21731, /* "Or" */
		44:  ts + 21734, /* "And" */
		45:  ts + 21738, /* "RowSetTest" */
		46:  ts + 21749, /* "Program" */
		47:  ts + 21757, /* "FkIfZero" */
		48:  ts + 21766, /* "IfPos" */
		49:  ts + 21772, /* "IfNotZero" */
		50:  ts + 21782, /* "IsNull" */
		51:  ts + 21789, /* "NotNull" */
		52:  ts + 21797, /* "Ne" */
		53:  ts + 21800, /* "Eq" */
		54:  ts + 21803, /* "Gt" */
		55:  ts + 21806, /* "Le" */
		56:  ts + 21809, /* "Lt" */
		57:  ts + 21812, /* "Ge" */
		58:  ts + 21815, /* "ElseNotEq" */
		59:  ts + 21825, /* "DecrJumpZero" */
		60:  ts + 21838, /* "IncrVacuum" */
		61:  ts + 12195, /* "VNext" */
		62:  ts + 21849, /* "Init" */
		63:  ts + 21854, /* "Return" */
		64:  ts + 21861, /* "EndCoroutine" */
		65:  ts + 21874, /* "HaltIfNull" */
		66:  ts + 21885, /* "Halt" */
		67:  ts + 21890, /* "Integer" */
		68:  ts + 21898, /* "Int64" */
		69:  ts + 21904, /* "String" */
		70:  ts + 21911, /* "Null" */
		71:  ts + 21916, /* "SoftNull" */
		72:  ts + 21925, /* "Blob" */
		73:  ts + 21930, /* "Variable" */
		74:  ts + 21939, /* "Move" */
		75:  ts + 21944, /* "Copy" */
		76:  ts + 21949, /* "SCopy" */
		77:  ts + 21955, /* "IntCopy" */
		78:  ts + 21963, /* "ResultRow" */
		79:  ts + 21973, /* "CollSeq" */
		80:  ts + 21981, /* "AddImm" */
		81:  ts + 21988, /* "RealAffinity" */
		82:  ts + 22001, /* "Cast" */
		83:  ts + 22006, /* "Permutation" */
		84:  ts + 22018, /* "BitAnd" */
		85:  ts + 22025, /* "BitOr" */
		86:  ts + 22031, /* "ShiftLeft" */
		87:  ts + 22041, /* "ShiftRight" */
		88:  ts + 22052, /* "Add" */
		89:  ts + 22056, /* "Subtract" */
		90:  ts + 22065, /* "Multiply" */
		91:  ts + 22074, /* "Divide" */
		92:  ts + 22081, /* "Remainder" */
		93:  ts + 22091, /* "Concat" */
		94:  ts + 22098, /* "Compare" */
		95:  ts + 22106, /* "BitNot" */
		96:  ts + 22113, /* "Column" */
		97:  ts + 22120, /* "String8" */
		98:  ts + 22128, /* "Affinity" */
		99:  ts + 22137, /* "MakeRecord" */
		100: ts + 22148, /* "Count" */
		101: ts + 22154, /* "ReadCookie" */
		102: ts + 22165, /* "SetCookie" */
		103: ts + 22175, /* "ReopenIdx" */
		104: ts + 22185, /* "OpenRead" */
		105: ts + 22194, /* "OpenWrite" */
		106: ts + 22204, /* "OpenDup" */
		107: ts + 22212, /* "OpenAutoindex" */
		108: ts + 22226, /* "OpenEphemeral" */
		109: ts + 22240, /* "SorterOpen" */
		110: ts + 22251, /* "SequenceTest" */
		111: ts + 22264, /* "OpenPseudo" */
		112: ts + 22275, /* "Close" */
		113: ts + 22281, /* "ColumnsUsed" */
		114: ts + 22293, /* "Sequence" */
		115: ts + 22302, /* "NewRowid" */
		116: ts + 22311, /* "Insert" */
		117: ts + 22318, /* "InsertInt" */
		118: ts + 22328, /* "Delete" */
		119: ts + 22335, /* "ResetCount" */
		120: ts + 22346, /* "SorterCompare" */
		121: ts + 22360, /* "SorterData" */
		122: ts + 22371, /* "RowData" */
		123: ts + 22379, /* "Rowid" */
		124: ts + 22385, /* "NullRow" */
		125: ts + 22393, /* "SeekEnd" */
		126: ts + 22401, /* "SorterInsert" */
		127: ts + 22414, /* "IdxInsert" */
		128: ts + 22424, /* "IdxDelete" */
		129: ts + 22434, /* "DeferredSeek" */
		130: ts + 22447, /* "IdxRowid" */
		131: ts + 22456, /* "Destroy" */
		132: ts + 22464, /* "Real" */
		133: ts + 22469, /* "Clear" */
		134: ts + 22475, /* "ResetSorter" */
		135: ts + 22487, /* "CreateBtree" */
		136: ts + 22499, /* "SqlExec" */
		137: ts + 22507, /* "ParseSchema" */
		138: ts + 22519, /* "LoadAnalysis" */
		139: ts + 22532, /* "DropTable" */
		140: ts + 22542, /* "DropIndex" */
		141: ts + 22552, /* "DropTrigger" */
		142: ts + 22564, /* "IntegrityCk" */
		143: ts + 22576, /* "RowSetAdd" */
		144: ts + 22586, /* "Param" */
		145: ts + 22592, /* "FkCounter" */
		146: ts + 22602, /* "MemMax" */
		147: ts + 22609, /* "OffsetLimit" */
		148: ts + 22621, /* "AggStep0" */
		149: ts + 22630, /* "AggStep" */
		150: ts + 22638, /* "AggFinal" */
		151: ts + 22647, /* "Expire" */
		152: ts + 22654, /* "TableLock" */
		153: ts + 22664, /* "VBegin" */
		154: ts + 22671, /* "VCreate" */
		155: ts + 22679, /* "VDestroy" */
		156: ts + 22688, /* "VOpen" */
		157: ts + 22694, /* "VColumn" */
		158: ts + 22702, /* "VRename" */
		159: ts + 22710, /* "Pagecount" */
		160: ts + 22720, /* "MaxPgcnt" */
		161: ts + 22729, /* "PureFunc0" */
		162: ts + 22739, /* "Function0" */
		163: ts + 22749, /* "PureFunc" */
		164: ts + 22758, /* "Function" */
		165: ts + 22767, /* "CursorHint" */
		166: ts + 22778, /* "Noop" */
		167: ts + 22783, /* "Explain" */
	}
}

// _939sqlite3DbReallocOrFree is defined at sqlite3.c:25416:21
func _939sqlite3DbReallocOrFree(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _p uintptr /* *void */, _n uint64) (r uintptr /* *void */) {
	var _pNew uintptr // *void

	_pNew = _869sqlite3DbRealloc(tls, _db, _p, _n)
	if _pNew != 0 {
		goto _1
	}

	_181sqlite3DbFree(tls, _db, _p)
_1:
	return _pNew
}

// _940closeCursorsInFrame is defined at sqlite3.c:74275:13
func _940closeCursorsInFrame(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */) {
	var (
		_i  int32
		_pC uintptr // *TVdbeCursor = SVdbeCursor
	)
	if (*(*uintptr)(unsafe.Pointer(_p + 152))) == 0 {
		goto _1
	}

	_i = int32(0)
_2:
	if _i >= (*(*int32)(unsafe.Pointer(_p + 44))) {
		goto _4
	}

	_pC = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 152))) + 8*uintptr(_i)))
	if _pC == 0 {
		goto _5
	}

	_684sqlite3VdbeFreeCursor(tls, _p, _pC)
	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 152))) + 8*uintptr(_i))) = null
_5:
	_i++
	goto _2

_4:
_1:
}

// _941out2PrereleaseWithClear is defined at sqlite3.c:79692:28
func _941out2PrereleaseWithClear(tls crt.TLS, _pOut uintptr /* *TMem = Ssqlite3_value */) (r uintptr /* *TMem = Ssqlite3_value */) {
	_643sqlite3VdbeMemSetNull(tls, _pOut)
	*(*uint16)(unsafe.Pointer(_pOut + 8)) = uint16(0x4)
	return _pOut
}

// _942vdbeClrCopy is defined at sqlite3.c:71257:29
func _942vdbeClrCopy(tls crt.TLS, _pTo uintptr /* *TMem = Ssqlite3_value */, _pFrom uintptr /* *TMem = Ssqlite3_value */, _eType int32) {
	_542vdbeMemClearExternAndSetNull(tls, _pTo)

	_645sqlite3VdbeMemShallowCopy(tls, _pTo, _pFrom, _eType)
}

// _943vdbeCloseStatement is defined at sqlite3.c:74699:28
func _943vdbeCloseStatement(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */, _eOp int32) (r int32) {
	var (
		_db         uintptr // *Tsqlite3 = Ssqlite3
		_rc         int32
		_i          int32
		_iSavepoint int32
		_rc2        int32
		_pBt        uintptr // *TBtree = SBtree
	)
	_db = *(*uintptr)(unsafe.Pointer(_p))
	_rc = int32(0)
	_iSavepoint = (*(*int32)(unsafe.Pointer(_p + 64))) - int32(1)

	_i = int32(0)
_1:
	if _i >= (*(*int32)(unsafe.Pointer(_db + 40))) {
		goto _3
	}

	_rc2 = int32(0)
	_pBt = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_i)) + 8))
	if _pBt == 0 {
		goto _4
	}

	if _eOp != int32(2) {
		goto _5
	}

	_rc2 = _676sqlite3BtreeSavepoint(tls, _pBt, int32(2), _iSavepoint)
_5:
	if _rc2 != int32(0) {
		goto _6
	}

	_rc2 = _676sqlite3BtreeSavepoint(tls, _pBt, int32(1), _iSavepoint)
_6:
	if _rc != int32(0) {
		goto _7
	}

	_rc = _rc2
_7:
_4:
	_i++
	goto _1

_3:
	(*(*int32)(unsafe.Pointer(_db + 648)))--
	*(*int32)(unsafe.Pointer(_p + 64)) = int32(0)
	if _rc != int32(0) {
		goto _8
	}

	if _eOp != int32(2) {
		goto _9
	}

	_rc = _675sqlite3VtabSavepoint(tls, _db, int32(2), _iSavepoint)
_9:
	if _rc != int32(0) {
		goto _10
	}

	_rc = _675sqlite3VtabSavepoint(tls, _db, int32(1), _iSavepoint)
_10:
_8:
	if _eOp != int32(2) {
		goto _11
	}

	*(*int64)(unsafe.Pointer(_db + 656)) = *(*int64)(unsafe.Pointer(_p + 88))
	*(*int64)(unsafe.Pointer(_db + 664)) = *(*int64)(unsafe.Pointer(_p + 96))
_11:
	return _rc
}

// _944computeNumericType is defined at sqlite3.c:79420:28
func _944computeNumericType(tls crt.TLS, _pMem uintptr /* *TMem = Ssqlite3_value */) (r uint16) {
	if _808sqlite3AtoF(tls, *(*uintptr)(unsafe.Pointer(_pMem + 16)), _pMem, *(*int32)(unsafe.Pointer(_pMem + 12)), *(*uint8)(unsafe.Pointer(_pMem + 10))) != int32(0) {
		goto _1
	}

	return uint16(0)

_1:
	if _947sqlite3Atoi64(tls, *(*uintptr)(unsafe.Pointer(_pMem + 16)), _pMem, *(*int32)(unsafe.Pointer(_pMem + 12)), *(*uint8)(unsafe.Pointer(_pMem + 10))) != int32(0) {
		goto _2
	}

	return uint16(0x4)

_2:
	return uint16(0x8)
}

// _945sqlite3ValueApplyAffinity is defined at sqlite3.c:79406:21
func _945sqlite3ValueApplyAffinity(tls crt.TLS, _pVal uintptr /* *Tsqlite3_value = Ssqlite3_value */, _affinity uint8, _enc uint8) {
	_657applyAffinity(tls, _pVal, int8(_affinity), _enc)
}

// _946sqlite3VdbeMemNumerify is defined at sqlite3.c:71013:20
func _946sqlite3VdbeMemNumerify(tls crt.TLS, _pMem uintptr /* *TMem = Ssqlite3_value */) (r int32) {
	var (
		_rc int32
		_i  int64
	)
	if (int32(*(*uint16)(unsafe.Pointer(_pMem + 8))) & int32(13)) != int32(0) {
		goto _1
	}

	_rc = _947sqlite3Atoi64(tls, *(*uintptr)(unsafe.Pointer(_pMem + 16)), _pMem, *(*int32)(unsafe.Pointer(_pMem + 12)), *(*uint8)(unsafe.Pointer(_pMem + 10)))
	if _rc != int32(0) {
		goto _2
	}

	*(*uint16)(unsafe.Pointer(_pMem + 8)) = uint16((int32(*(*uint16)(unsafe.Pointer(_pMem + 8))) & int32(-49664)) | int32(0x4))
	goto _3

_2:
	_i = *(*int64)(unsafe.Pointer(_pMem))
	_808sqlite3AtoF(tls, *(*uintptr)(unsafe.Pointer(_pMem + 16)), _pMem, *(*int32)(unsafe.Pointer(_pMem + 12)), *(*uint8)(unsafe.Pointer(_pMem + 10)))
	if _rc != int32(1) || (*(*float64)(unsafe.Pointer(_pMem))) != float64(_i) {
		goto _4
	}

	*(*int64)(unsafe.Pointer(_pMem)) = _i
	*(*uint16)(unsafe.Pointer(_pMem + 8)) = uint16((int32(*(*uint16)(unsafe.Pointer(_pMem + 8))) & int32(-49664)) | int32(0x4))
	goto _5

_4:
	*(*uint16)(unsafe.Pointer(_pMem + 8)) = uint16((int32(*(*uint16)(unsafe.Pointer(_pMem + 8))) & int32(-49664)) | int32(0x8))
_5:
_3:
_1:
	{
		p := &(*(*uint16)(unsafe.Pointer(_pMem + 8)))
		*p = uint16(int32(*p) & int32(-16403))
	}
	return int32(0)
}

// _947sqlite3Atoi64 is defined at sqlite3.c:28702:20
func _947sqlite3Atoi64(tls crt.TLS, _zNum uintptr /* *int8 */, _pNum uintptr /* *Ti64 = Tsqlite_int64 = int64 */, _length int32, _enc uint8) (r int32) {
	var (
		_incr   int32
		_u      uint64
		_neg    int32
		_i      int32
		_c      int32
		_nonNum int32
		_rc     int32
		_zStart uintptr // *int8
		_zEnd   uintptr // *int8
	)
	_u = uint64(0)
	_neg = int32(0)
	_c = int32(0)
	_nonNum = int32(0)
	_zEnd = _zNum + uintptr(_length)

	if int32(_enc) != int32(1) {
		goto _1
	}

	_incr = int32(1)
	goto _2

_1:
	_incr = int32(2)

	_i = int32(3) - int32(_enc)
_3:
	if _i >= _length || int32(*(*int8)(unsafe.Pointer(_zNum + uintptr(_i)))) != int32(0) {
		goto _5
	}

	_i = int32(_i + int32(2))
	goto _3

_5:
	_nonNum = bool2int(_i < _length)
	_zEnd = _zNum + uintptr(_i^int32(1))
	_zNum += uintptr(int32(_enc) & int32(1))
_2:
_6:
	if _zNum >= _zEnd || int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(uint8(*(*int8)(unsafe.Pointer(_zNum)))))))&int32(0x1) == 0 {
		goto _7
	}

	_zNum += uintptr(_incr)
	goto _6

_7:
	if _zNum >= _zEnd {
		goto _8
	}

	if int32(*(*int8)(unsafe.Pointer(_zNum))) != int32('-') {
		goto _9
	}

	_neg = int32(1)
	_zNum += uintptr(_incr)
	goto _10

_9:
	if int32(*(*int8)(unsafe.Pointer(_zNum))) != int32('+') {
		goto _11
	}

	_zNum += uintptr(_incr)
_11:
_10:
_8:
	_zStart = _zNum
_12:
	if _zNum >= _zEnd || int32(*(*int8)(unsafe.Pointer(_zNum))) != int32('0') {
		goto _13
	}

	_zNum += uintptr(_incr)
	goto _12

_13:
	_i = int32(0)
_14:
	if _zNum+uintptr(_i) >= _zEnd || set5(&_c, int32(*(*int8)(unsafe.Pointer(_zNum + uintptr(_i))))) < int32('0') || _c > int32('9') {
		goto _16
	}

	_u = ((_u * uint64(10)) + uint64(_c)) - uint64('0')
	_i = int32(_i + _incr)
	goto _14

_16:
	if _u <= uint64(9223372036854775807) {
		goto _17
	}

	*(*int64)(unsafe.Pointer(_pNum)) = func() int64 {
		if _neg != 0 {
			return int64(-9223372036854775808)
		}
		return int64(9223372036854775807)
	}()
	goto _18

_17:
	if _neg == 0 {
		goto _19
	}

	*(*int64)(unsafe.Pointer(_pNum)) = -int64(_u)
	goto _20

_19:
	*(*int64)(unsafe.Pointer(_pNum)) = int64(_u)
_20:
_18:
	if _zNum+uintptr(_i) >= _zEnd && (_i != int32(0) || _zStart != _zNum) && _nonNum == 0 {
		goto _21
	}

	_rc = int32(1)
	goto _22

_21:
	_rc = int32(0)
_22:
	if _i <= (int32(19) * _incr) {
		goto _23
	}

	return int32(2)

	goto _24

_23:
	if _i >= (int32(19) * _incr) {
		goto _25
	}

	return _rc

	goto _26

_25:
	_c = _1183compare2pow63(tls, _zNum, _incr)
	if _c >= int32(0) {
		goto _27
	}

	return _rc

	goto _28

_27:
	if _c <= int32(0) {
		goto _29
	}

	return int32(2)

	goto _30

_29:
	if _neg != 0 {
		return _rc
	}

	return int32(3)

_30:
_28:
_26:
_24:
	return r
}

// _948sqlite3IntFloatCompare is defined at sqlite3.c:76003:12
func _948sqlite3IntFloatCompare(tls crt.TLS, _i int64, _r float64) (r int32) {
	var (
		_x float64
		_y int64
		_s float64
	)

	goto _1

	_x = float64(_i)
	if _x >= float64(_r) {
		goto _3
	}

	return int32(-1)

_3:
	if _x <= float64(_r) {
		goto _4
	}

	return int32(1)

_4:
	return int32(0)

	goto _2

_1:
	if _r >= float64(-9.223372036854776e+18) {
		goto _5
	}

	return int32(1)

_5:
	if _r <= float64(9.223372036854776e+18) {
		goto _6
	}

	return int32(-1)

_6:
	_y = int64(_r)
	if _i >= _y {
		goto _7
	}

	return int32(-1)

_7:
	if _i <= _y {
		goto _8
	}

	if _y != int64(-9223372036854775808) || _r <= float64(0) {
		goto _9
	}

	return int32(-1)

_9:
	return int32(1)

_8:
	_s = float64(_i)
	if _s >= _r {
		goto _10
	}

	return int32(-1)

_10:
	if _s <= _r {
		goto _11
	}

	return int32(1)

_11:
	return int32(0)

_2:
	return r
}

// _949vdbeCompareMemString is defined at sqlite3.c:75920:12
func _949vdbeCompareMemString(tls crt.TLS, _pMem1 uintptr /* *TMem = Ssqlite3_value */, _pMem2 uintptr /* *TMem = Ssqlite3_value */, _pColl uintptr /* *TCollSeq = SCollSeq */, _prcErr uintptr /* *Tu8 = uint8 */) (r int32) {
	esc := crt.MustMalloc(120)
	var (
		_rc int32
		_v1 uintptr    // *void
		_v2 uintptr    // *void
		_c1 = esc      // *TMem = Ssqlite3_value
		_c2 = esc + 64 // *TMem = Ssqlite3_value
	)
	defer crt.Free(esc)
	if int32(*(*uint8)(unsafe.Pointer(_pMem1 + 10))) != int32(*(*uint8)(unsafe.Pointer(_pColl + 8))) {
		goto _1
	}

	return fn69(*(*uintptr)(unsafe.Pointer(_pColl + 24)))(tls, *(*uintptr)(unsafe.Pointer(_pColl + 16)), *(*int32)(unsafe.Pointer(_pMem1 + 12)), *(*uintptr)(unsafe.Pointer(_pMem1 + 16)), *(*int32)(unsafe.Pointer(_pMem2 + 12)), *(*uintptr)(unsafe.Pointer(_pMem2 + 16)))

	goto _2

_1:
	_724sqlite3VdbeMemInit(tls, _c1, *(*uintptr)(unsafe.Pointer(_pMem1 + 40)), uint16(0x1))
	_724sqlite3VdbeMemInit(tls, _c2, *(*uintptr)(unsafe.Pointer(_pMem1 + 40)), uint16(0x1))
	_645sqlite3VdbeMemShallowCopy(tls, _c1, _pMem1, int32(0x1000))
	_645sqlite3VdbeMemShallowCopy(tls, _c2, _pMem2, int32(0x1000))
	_v1 = _289sqlite3ValueText(tls, _c1, *(*uint8)(unsafe.Pointer(_pColl + 8)))
	_v2 = _289sqlite3ValueText(tls, _c2, *(*uint8)(unsafe.Pointer(_pColl + 8)))
	if _v1 != 0 && _v2 != 0 {
		goto _3
	}

	if _prcErr == 0 {
		goto _5
	}

	*(*uint8)(unsafe.Pointer(_prcErr)) = uint8(7)
_5:
	_rc = int32(0)
	goto _4

_3:
	_rc = fn69(*(*uintptr)(unsafe.Pointer(_pColl + 24)))(tls, *(*uintptr)(unsafe.Pointer(_pColl + 16)), *(*int32)(unsafe.Pointer(_c1 + 12)), _v1, *(*int32)(unsafe.Pointer(_c2 + 12)), _v2)
_4:
	_397sqlite3VdbeMemRelease(tls, _c1)
	_397sqlite3VdbeMemRelease(tls, _c2)
	return _rc

_2:
	return r
}

// _950sqlite3BlobCompare is defined at sqlite3.c:75970:28
func _950sqlite3BlobCompare(tls crt.TLS, _pB1 uintptr /* *TMem = Ssqlite3_value */, _pB2 uintptr /* *TMem = Ssqlite3_value */) (r int32) {
	var (
		_c  int32
		_n1 int32
		_n2 int32
	)
	_n1 = *(*int32)(unsafe.Pointer(_pB1 + 12))
	_n2 = *(*int32)(unsafe.Pointer(_pB2 + 12))

	if ((int32(*(*uint16)(unsafe.Pointer(_pB1 + 8))) | int32(*(*uint16)(unsafe.Pointer(_pB2 + 8)))) & int32(0x4000)) == 0 {
		goto _1
	}

	if ((int32(*(*uint16)(unsafe.Pointer(_pB1 + 8))) & int32(*(*uint16)(unsafe.Pointer(_pB2 + 8)))) & int32(0x4000)) == 0 {
		goto _2
	}

	return (*(*int32)(unsafe.Pointer(_pB1))) - (*(*int32)(unsafe.Pointer(_pB2)))

	goto _3

_2:
	if (int32(*(*uint16)(unsafe.Pointer(_pB1 + 8))) & int32(0x4000)) == 0 {
		goto _4
	}

	if _1184isAllZero(tls, *(*uintptr)(unsafe.Pointer(_pB2 + 16)), *(*int32)(unsafe.Pointer(_pB2 + 12))) != 0 {
		goto _6
	}

	return int32(-1)

_6:
	return (*(*int32)(unsafe.Pointer(_pB1))) - _n2

	goto _5

_4:
	if _1184isAllZero(tls, *(*uintptr)(unsafe.Pointer(_pB1 + 16)), *(*int32)(unsafe.Pointer(_pB1 + 12))) != 0 {
		goto _7
	}

	return int32(1)

_7:
	return _n1 - (*(*int32)(unsafe.Pointer(_pB2)))

_5:
_3:
_1:
	_c = crt.Xmemcmp(tls, *(*uintptr)(unsafe.Pointer(_pB1 + 16)), *(*uintptr)(unsafe.Pointer(_pB2 + 16)), uint64(func() int32 {
		if _n1 > _n2 {
			return _n2
		}
		return _n1
	}()))
	if _c == 0 {
		goto _8
	}

	return _c

_8:
	return _n1 - _n2
}

// _951handleDeferredMoveto is defined at sqlite3.c:75252:28
func _951handleDeferredMoveto(tls crt.TLS, _p uintptr /* *TVdbeCursor = SVdbeCursor */) (r int32) {
	esc := crt.MustMalloc(4)
	var (
		_res = esc // *int32
		_rc  int32
	)
	defer crt.Free(esc)

	_rc = _685sqlite3BtreeMovetoUnpacked(tls, *(*uintptr)(unsafe.Pointer(_p + 48)), null, *(*int64)(unsafe.Pointer(_p + 80)), int32(0), _res)
	if _rc == 0 {
		goto _1
	}

	return _rc

_1:
	if (*(*int32)(unsafe.Pointer(_res))) == int32(0) {
		goto _2
	}

	return _556sqlite3CorruptError(tls, int32(75262))

_2:
	*(*uint8)(unsafe.Pointer(_p + 3)) = uint8(0)
	*(*uint32)(unsafe.Pointer(_p + 32)) = uint32(0)
	return int32(0)
}

// _952sqlite3BtreeCursorHasMoved is defined at sqlite3.c:60511:20
func _952sqlite3BtreeCursorHasMoved(tls crt.TLS, _pCur uintptr /* *TBtCursor = SBtCursor */) (r int32) {
	return bool2int(int32(*(*uint8)(unsafe.Pointer(_pCur))) != int32(1))
}

// _953handleMovedCursor is defined at sqlite3.c:75278:28
func _953handleMovedCursor(tls crt.TLS, _p uintptr /* *TVdbeCursor = SVdbeCursor */) (r int32) {
	esc := crt.MustMalloc(4)
	var (
		_isDifferentRow = esc // *int32
		_rc             int32
	)
	defer crt.Free(esc)

	_rc = _1185sqlite3BtreeCursorRestore(tls, *(*uintptr)(unsafe.Pointer(_p + 48)), _isDifferentRow)
	*(*uint32)(unsafe.Pointer(_p + 32)) = uint32(0)
	if (*(*int32)(unsafe.Pointer(_isDifferentRow))) == 0 {
		goto _1
	}

	*(*uint8)(unsafe.Pointer(_p + 2)) = uint8(1)
_1:
	return _rc
}

// _954getCellInfo is defined at sqlite3.c:64045:29
func _954getCellInfo(tls crt.TLS, _pCur uintptr /* *TBtCursor = SBtCursor */) {
	if int32(*(*uint16)(unsafe.Pointer((_pCur + 40) + 22))) != int32(0) {
		goto _1
	}

	{
		p := &(*(*uint8)(unsafe.Pointer(_pCur + 1)))
		*p = uint8(int32(*p) | int32(0x2))
	}
	_1186btreeParseCell(tls, *(*uintptr)(unsafe.Pointer(_pCur + 144)), int32(*(*uint16)(unsafe.Pointer(_pCur + 90))), _pCur+40)
	goto _2

_1:
_2:
}

// _955fetchPayload is defined at sqlite3.c:64496:19
func _955fetchPayload(tls crt.TLS, _pCur uintptr /* *TBtCursor = SBtCursor */, _pAmt uintptr /* *Tu32 = uint32 */) (r uintptr /* *void */) {
	var _amt int32

	_amt = int32(*(*uint16)(unsafe.Pointer((_pCur + 40) + 20)))
	if _amt <= int32(int64((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pCur + 144))) + 88)))-(*(*uintptr)(unsafe.Pointer((_pCur + 40) + 8))))) {
		goto _1
	}

	_amt = func() int32 {
		if int32(0) > int32(int64((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pCur + 144))) + 88)))-(*(*uintptr)(unsafe.Pointer((_pCur + 40) + 8))))) {
			return int32(0)
		}
		return int32(int64((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pCur + 144))) + 88))) - (*(*uintptr)(unsafe.Pointer((_pCur + 40) + 8)))))
	}()
_1:
	*(*uint32)(unsafe.Pointer(_pAmt)) = uint32(_amt)
	return *(*uintptr)(unsafe.Pointer((_pCur + 40) + 8))
}

// _956sqlite3GetVarint is defined at sqlite3.c:28972:19
func _956sqlite3GetVarint(tls crt.TLS, _p uintptr /* *uint8 */, _v uintptr /* *Tu64 = Tsqlite_uint64 = uint64 */) (r uint8) {
	var (
		_a uint32
		_b uint32
		_s uint32
	)
	_a = uint32(*(*uint8)(unsafe.Pointer(_p)))
	if _a&uint32(0x80) != 0 {
		goto _1
	}

	*(*uint64)(unsafe.Pointer(_v)) = uint64(_a)
	return uint8(1)

_1:
	_p++
	_b = uint32(*(*uint8)(unsafe.Pointer(_p)))
	if _b&uint32(0x80) != 0 {
		goto _2
	}

	_a = uint32(_a & uint32(0x7f))
	_a = _a << (uint(7) % 32)
	_a = uint32(_a | _b)
	*(*uint64)(unsafe.Pointer(_v)) = uint64(_a)
	return uint8(2)

_2:
	_p++
	_a = _a << (uint(14) % 32)
	_a = uint32(_a | uint32(*(*uint8)(unsafe.Pointer(_p))))
	if _a&uint32(0x80) != 0 {
		goto _3
	}

	_a = uint32(_a & uint32(0x1fc07f))
	_b = uint32(_b & uint32(0x7f))
	_b = _b << (uint(7) % 32)
	_a = uint32(_a | _b)
	*(*uint64)(unsafe.Pointer(_v)) = uint64(_a)
	return uint8(3)

_3:
	_a = uint32(_a & uint32(0x1fc07f))
	_p++
	_b = _b << (uint(14) % 32)
	_b = uint32(_b | uint32(*(*uint8)(unsafe.Pointer(_p))))
	if _b&uint32(0x80) != 0 {
		goto _4
	}

	_b = uint32(_b & uint32(0x1fc07f))
	_a = _a << (uint(7) % 32)
	_a = uint32(_a | _b)
	*(*uint64)(unsafe.Pointer(_v)) = uint64(_a)
	return uint8(4)

_4:
	_b = uint32(_b & uint32(0x1fc07f))
	_s = _a
	_p++
	_a = _a << (uint(14) % 32)
	_a = uint32(_a | uint32(*(*uint8)(unsafe.Pointer(_p))))
	if _a&uint32(0x80) != 0 {
		goto _5
	}

	_b = _b << (uint(7) % 32)
	_a = uint32(_a | _b)
	_s = _s >> (uint(18) % 32)
	*(*uint64)(unsafe.Pointer(_v)) = (uint64(_s) << (uint(32) % 64)) | uint64(_a)
	return uint8(5)

_5:
	_s = _s << (uint(7) % 32)
	_s = uint32(_s | _b)
	_p++
	_b = _b << (uint(14) % 32)
	_b = uint32(_b | uint32(*(*uint8)(unsafe.Pointer(_p))))
	if _b&uint32(0x80) != 0 {
		goto _6
	}

	_a = uint32(_a & uint32(0x1fc07f))
	_a = _a << (uint(7) % 32)
	_a = uint32(_a | _b)
	_s = _s >> (uint(18) % 32)
	*(*uint64)(unsafe.Pointer(_v)) = (uint64(_s) << (uint(32) % 64)) | uint64(_a)
	return uint8(6)

_6:
	_p++
	_a = _a << (uint(14) % 32)
	_a = uint32(_a | uint32(*(*uint8)(unsafe.Pointer(_p))))
	if _a&uint32(0x80) != 0 {
		goto _7
	}

	_a = uint32(_a & uint32(0xf01fc07f))
	_b = uint32(_b & uint32(0x1fc07f))
	_b = _b << (uint(7) % 32)
	_a = uint32(_a | _b)
	_s = _s >> (uint(11) % 32)
	*(*uint64)(unsafe.Pointer(_v)) = (uint64(_s) << (uint(32) % 64)) | uint64(_a)
	return uint8(7)

_7:
	_a = uint32(_a & uint32(0x1fc07f))
	_p++
	_b = _b << (uint(14) % 32)
	_b = uint32(_b | uint32(*(*uint8)(unsafe.Pointer(_p))))
	if _b&uint32(0x80) != 0 {
		goto _8
	}

	_b = uint32(_b & uint32(0xf01fc07f))
	_a = _a << (uint(7) % 32)
	_a = uint32(_a | _b)
	_s = _s >> (uint(4) % 32)
	*(*uint64)(unsafe.Pointer(_v)) = (uint64(_s) << (uint(32) % 64)) | uint64(_a)
	return uint8(8)

_8:
	_p++
	_a = _a << (uint(15) % 32)
	_a = uint32(_a | uint32(*(*uint8)(unsafe.Pointer(_p))))
	_b = uint32(_b & uint32(0x1fc07f))
	_b = _b << (uint(8) % 32)
	_a = uint32(_a | _b)
	_s = _s << (uint(4) % 32)
	_b = uint32(*(*uint8)(unsafe.Pointer(_p - 4)))
	_b = uint32(_b & uint32(0x7f))
	_b = _b >> (uint(3) % 32)
	_s = uint32(_s | _b)
	*(*uint64)(unsafe.Pointer(_v)) = (uint64(_s) << (uint(32) % 64)) | uint64(_a)
	return uint8(9)
}

// _957vdbeMemFromBtreeResize is defined at sqlite3.c:71426:28
func _957vdbeMemFromBtreeResize(tls crt.TLS, _pCur uintptr /* *TBtCursor = SBtCursor */, _offset uint32, _amt uint32, _pMem uintptr /* *TMem = Ssqlite3_value */) (r int32) {
	var _rc int32

	*(*uint16)(unsafe.Pointer(_pMem + 8)) = uint16(0x1)
	if int32(0) != set5(&_rc, _628sqlite3VdbeMemClearAndResize(tls, _pMem, int32(_amt+uint32(1)))) {
		goto _1
	}

	_rc = _1167sqlite3BtreePayload(tls, _pCur, _offset, _amt, *(*uintptr)(unsafe.Pointer(_pMem + 16)))
	if _rc != int32(0) {
		goto _2
	}

	*(*int8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pMem + 16))) + uintptr(_amt))) = int8(0)
	*(*uint16)(unsafe.Pointer(_pMem + 8)) = uint16(0x10)
	*(*int32)(unsafe.Pointer(_pMem + 12)) = int32(_amt)
	goto _3

_2:
	_397sqlite3VdbeMemRelease(tls, _pMem)
_3:
_1:
	return _rc
}

// _958sqlite3SmallTypeSizes [128]uint8, escapes: true, sqlite3.c:75429:17
var _958sqlite3SmallTypeSizes = ds + 8704

// _959aFlag [2]uint16, escapes: true, sqlite3.c:75695:24
var _959aFlag = ds + 8832

// _960serialGet is defined at sqlite3.c:75583:28
func _960serialGet(tls crt.TLS, _buf uintptr /* *uint8 */, _serial_type uint32, _pMem uintptr /* *TMem = Ssqlite3_value */) (r uint32) {
	esc := crt.MustMalloc(8)
	var (
		_x = esc // *Tu64 = Tsqlite_uint64 = uint64
		_y uint32
	)
	defer crt.Free(esc)
	*(*uint64)(unsafe.Pointer(_x)) = uint64((((uint32(*(*uint8)(unsafe.Pointer(_buf))) << (uint(24) % 32)) | uint32(int32(*(*uint8)(unsafe.Pointer(_buf + 1)))<<(uint(16)%32))) | uint32(int32(*(*uint8)(unsafe.Pointer(_buf + 2)))<<(uint(8)%32))) | uint32(*(*uint8)(unsafe.Pointer(_buf + 3))))
	_y = (((uint32(*(*uint8)(unsafe.Pointer(_buf + uintptr(4)))) << (uint(24) % 32)) | uint32(int32(*(*uint8)(unsafe.Pointer(_buf + uintptr(4) + 1)))<<(uint(16)%32))) | uint32(int32(*(*uint8)(unsafe.Pointer(_buf + uintptr(4) + 2)))<<(uint(8)%32))) | uint32(*(*uint8)(unsafe.Pointer(_buf + uintptr(4) + 3)))
	*(*uint64)(unsafe.Pointer(_x)) = ((*(*uint64)(unsafe.Pointer(_x))) << (uint(32) % 64)) + uint64(_y)
	if _serial_type != uint32(6) {
		goto _1
	}

	*(*int64)(unsafe.Pointer(_pMem)) = *(*int64)(unsafe.Pointer(_x))
	*(*uint16)(unsafe.Pointer(_pMem + 8)) = uint16(0x4)
	goto _2

_1:
	crt.Xmemcpy(tls, _pMem, _x, uint64(8))
	*(*uint16)(unsafe.Pointer(_pMem + 8)) = uint16(func() int32 {
		if _308sqlite3IsNaN(tls, *(*float64)(unsafe.Pointer(_pMem))) != 0 {
			return int32(0x1)
		}
		return int32(0x8)
	}())
_2:
	return uint32(8)
}

// _961putVarint64 is defined at sqlite3.c:28918:28
func _961putVarint64(tls crt.TLS, _p uintptr /* *uint8 */, _v uint64) (r int32) {
	esc := crt.MustMalloc(10)
	var (
		_i   int32
		_j   int32
		_n   int32
		_buf = esc // *[10]uint8
	)
	defer crt.Free(esc)
	if (_v & uint64(18374686479671623680)) == 0 {
		goto _1
	}

	*(*uint8)(unsafe.Pointer(_p + 8)) = uint8(_v)
	_v = uint64(_v >> uint32(8))
	_i = int32(7)
_2:
	if _i < int32(0) {
		goto _4
	}

	*(*uint8)(unsafe.Pointer(_p + uintptr(_i))) = uint8((_v & uint64(0x7f)) | uint64(0x80))
	_v = uint64(_v >> uint32(7))
	_i--
	goto _2

_4:
	return int32(9)

_1:
	_n = int32(0)
_5:
	*(*uint8)(unsafe.Pointer(_buf + uintptr(postinc7(&_n)))) = uint8((_v & uint64(0x7f)) | uint64(0x80))
	_v = uint64(_v >> uint32(7))
	if _v != uint64(0) {
		goto _5
	}

	{
		p := &(*(*uint8)(unsafe.Pointer(_buf)))
		*p = uint8(int32(*p) & int32(0x7f))
	}

	_i = int32(0)
	_j = _n - int32(1)
_8:
	if _j < int32(0) {
		goto _10
	}

	*(*uint8)(unsafe.Pointer(_p + uintptr(_i))) = *(*uint8)(unsafe.Pointer(_buf + uintptr(_j)))
	_j--
	_i++
	goto _8

_10:
	return _n
}

// _962moveToRoot is defined at sqlite3.c:64639:12
func _962moveToRoot(tls crt.TLS, _pCur uintptr /* *TBtCursor = SBtCursor */) (r int32) {
	var (
		_pRoot   uintptr // *TMemPage = SMemPage
		_rc      int32
		_subpage uint32
	)
	_rc = int32(0)

	if int32(*(*int8)(unsafe.Pointer(_pCur + 88))) < int32(0) {
		goto _1
	}

	if (*(*int8)(unsafe.Pointer(_pCur + 88))) == 0 {
		goto _3
	}

	_922releasePageNotNull(tls, *(*uintptr)(unsafe.Pointer(_pCur + 144)))
_4:
	if preinc161(&(*(*int8)(unsafe.Pointer(_pCur + 88)))) == 0 {
		goto _5
	}

	_922releasePageNotNull(tls, *(*uintptr)(unsafe.Pointer((_pCur + 152) + 8*uintptr(*(*int8)(unsafe.Pointer(_pCur + 88))))))
	goto _4

_5:
	*(*uintptr)(unsafe.Pointer(_pCur + 144)) = *(*uintptr)(unsafe.Pointer(_pCur + 152))
	goto _skip_init

_3:
	goto _2

_1:
	if (*(*uint32)(unsafe.Pointer(_pCur + 80))) != uint32(0) {
		goto _6
	}

	*(*uint8)(unsafe.Pointer(_pCur)) = uint8(0)
	return int32(16)

	goto _7

_6:
	if int32(*(*uint8)(unsafe.Pointer(_pCur))) < int32(3) {
		goto _8
	}

	if int32(*(*uint8)(unsafe.Pointer(_pCur))) != int32(4) {
		goto _9
	}

	return *(*int32)(unsafe.Pointer(_pCur + 84))

_9:
	_600sqlite3BtreeClearCursor(tls, _pCur)
_8:
	_rc = _1187getAndInitPage(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pCur + 8))) + 8)), *(*uint32)(unsafe.Pointer(_pCur + 80)), _pCur+144, null, int32(*(*uint8)(unsafe.Pointer(_pCur + 2))))
	if _rc == int32(0) {
		goto _10
	}

	*(*uint8)(unsafe.Pointer(_pCur)) = uint8(0)
	return _rc

_10:
	*(*int8)(unsafe.Pointer(_pCur + 88)) = int8(0)
	*(*uint8)(unsafe.Pointer(_pCur + 89)) = *(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pCur + 144))) + 2))
_7:
_2:
	_pRoot = *(*uintptr)(unsafe.Pointer(_pCur + 144))

	if int32(*(*uint8)(unsafe.Pointer(_pRoot))) != int32(0) && bool2int((*(*uintptr)(unsafe.Pointer(_pCur + 136))) == 0) == int32(*(*uint8)(unsafe.Pointer(_pRoot + 2))) {
		goto _11
	}

	return _556sqlite3CorruptError(tls, int32(64695))

_11:
	goto _skip_init
_skip_init:
	*(*uint16)(unsafe.Pointer(_pCur + 90)) = uint16(0)
	*(*uint16)(unsafe.Pointer((_pCur + 40) + 22)) = uint16(0)
	{
		p := &(*(*uint8)(unsafe.Pointer(_pCur + 1)))
		*p = uint8(int32(*p) & int32(-15))
	}
	_pRoot = *(*uintptr)(unsafe.Pointer(_pCur + 144))
	if int32(*(*uint16)(unsafe.Pointer(_pRoot + 22))) <= int32(0) {
		goto _12
	}

	*(*uint8)(unsafe.Pointer(_pCur)) = uint8(1)
	goto _13

_12:
	if (*(*uint8)(unsafe.Pointer(_pRoot + 8))) != 0 {
		goto _14
	}

	if (*(*uint32)(unsafe.Pointer(_pRoot + 4))) == uint32(1) {
		goto _16
	}

	return _556sqlite3CorruptError(tls, int32(64708))

_16:
	_subpage = uint32(_328sqlite3Get4byte(tls, (*(*uintptr)(unsafe.Pointer(_pRoot + 80)))+uintptr(int32(*(*uint8)(unsafe.Pointer(_pRoot + 9)))+int32(8))))
	*(*uint8)(unsafe.Pointer(_pCur)) = uint8(1)
	_rc = _964moveToChild(tls, _pCur, _subpage)
	goto _15

_14:
	*(*uint8)(unsafe.Pointer(_pCur)) = uint8(0)
	_rc = int32(16)
_15:
_13:
	return _rc
}

// _963moveToParent is defined at sqlite3.c:64598:13
func _963moveToParent(tls crt.TLS, _pCur uintptr /* *TBtCursor = SBtCursor */) {
	var _pLeaf uintptr // *TMemPage = SMemPage

	*(*uint16)(unsafe.Pointer((_pCur + 40) + 22)) = uint16(0)
	{
		p := &(*(*uint8)(unsafe.Pointer(_pCur + 1)))
		*p = uint8(int32(*p) & int32(-7))
	}
	*(*uint16)(unsafe.Pointer(_pCur + 90)) = *(*uint16)(unsafe.Pointer((_pCur + 92) + 2*uintptr(int32(*(*int8)(unsafe.Pointer(_pCur + 88)))-int32(1))))
	_pLeaf = *(*uintptr)(unsafe.Pointer(_pCur + 144))
	*(*uintptr)(unsafe.Pointer(_pCur + 144)) = *(*uintptr)(unsafe.Pointer((_pCur + 152) + 8*uintptr(preinc161(&(*(*int8)(unsafe.Pointer(_pCur + 88)))))))
	_922releasePageNotNull(tls, _pLeaf)
}

// _964moveToChild is defined at sqlite3.c:64549:12
func _964moveToChild(tls crt.TLS, _pCur uintptr /* *TBtCursor = SBtCursor */, _newPgno uint32) (r int32) {
	var _pBt uintptr // *TBtShared = SBtShared

	_pBt = *(*uintptr)(unsafe.Pointer(_pCur + 16))

	if int32(*(*int8)(unsafe.Pointer(_pCur + 88))) < int32(19) {
		goto _1
	}

	return _556sqlite3CorruptError(tls, int32(64557))

_1:
	*(*uint16)(unsafe.Pointer((_pCur + 40) + 22)) = uint16(0)
	{
		p := &(*(*uint8)(unsafe.Pointer(_pCur + 1)))
		*p = uint8(int32(*p) & int32(-7))
	}
	*(*uint16)(unsafe.Pointer((_pCur + 92) + 2*uintptr(*(*int8)(unsafe.Pointer(_pCur + 88))))) = *(*uint16)(unsafe.Pointer(_pCur + 90))
	*(*uintptr)(unsafe.Pointer((_pCur + 152) + 8*uintptr(*(*int8)(unsafe.Pointer(_pCur + 88))))) = *(*uintptr)(unsafe.Pointer(_pCur + 144))
	*(*uint16)(unsafe.Pointer(_pCur + 90)) = uint16(0)
	(*(*int8)(unsafe.Pointer(_pCur + 88)))++
	return _1187getAndInitPage(tls, _pBt, _newPgno, _pCur+144, _pCur, int32(*(*uint8)(unsafe.Pointer(_pCur + 2))))
}

// _965sqlite3BtreeCursorSize is defined at sqlite3.c:63980:20
func _965sqlite3BtreeCursorSize(tls crt.TLS) (r int32) {
	return int32(304)
}

// _966sqlite3BtreeCursorZero is defined at sqlite3.c:63992:21
func _966sqlite3BtreeCursorZero(tls crt.TLS, _p uintptr /* *TBtCursor = SBtCursor */) {
	crt.Xmemset(tls, _p, int32(0), uint64(88))
}

// _967btreeCursor is defined at sqlite3.c:63894:12
func _967btreeCursor(tls crt.TLS, _p uintptr /* *TBtree = SBtree */, _iTable int32, _wrFlag int32, _pKeyInfo uintptr /* *SKeyInfo */, _pCur uintptr /* *TBtCursor = SBtCursor */) (r int32) {
	var (
		_pBt uintptr // *TBtShared = SBtShared
		_pX  uintptr // *TBtCursor = SBtCursor
	)
	_pBt = *(*uintptr)(unsafe.Pointer(_p + 8))

	if _wrFlag == 0 {
		goto _1
	}

	_1188allocateTempSpace(tls, _pBt)
	if (*(*uintptr)(unsafe.Pointer(_pBt + 128))) != 0 {
		goto _2
	}

	return int32(7)

_2:
_1:
	if _iTable != int32(1) || _332btreePagecount(tls, _pBt) != uint32(0) {
		goto _3
	}

	_iTable = int32(0)
_3:
	*(*uint32)(unsafe.Pointer(_pCur + 80)) = uint32(_iTable)
	*(*int8)(unsafe.Pointer(_pCur + 88)) = int8(-1)
	*(*uintptr)(unsafe.Pointer(_pCur + 136)) = _pKeyInfo
	*(*uintptr)(unsafe.Pointer(_pCur + 8)) = _p
	*(*uintptr)(unsafe.Pointer(_pCur + 16)) = _pBt
	*(*uint8)(unsafe.Pointer(_pCur + 1)) = uint8(func() int32 {
		if _wrFlag != 0 {
			return int32(0x1)
		}
		return int32(0)
	}())
	*(*uint8)(unsafe.Pointer(_pCur + 2)) = uint8(func() int32 {
		if _wrFlag != 0 {
			return int32(0)
		}
		return int32(0x2)
	}())
	_pX = *(*uintptr)(unsafe.Pointer(_pBt + 16))
_4:
	if _pX == 0 {
		goto _6
	}

	if (*(*uint32)(unsafe.Pointer(_pX + 80))) != uint32(_iTable) {
		goto _7
	}

	{
		p := &(*(*uint8)(unsafe.Pointer(_pX + 1)))
		*p = uint8(int32(*p) | int32(0x20))
	}
	{
		p := &(*(*uint8)(unsafe.Pointer(_pCur + 1)))
		*p = uint8(int32(*p) | int32(0x20))
	}
_7:
	_pX = *(*uintptr)(unsafe.Pointer(_pX + 24))
	goto _4

_6:
	*(*uintptr)(unsafe.Pointer(_pCur + 24)) = *(*uintptr)(unsafe.Pointer(_pBt + 16))
	*(*uintptr)(unsafe.Pointer(_pBt + 16)) = _pCur
	*(*uint8)(unsafe.Pointer(_pCur)) = uint8(0)
	return int32(0)
}

// _968btreeCreateTable is defined at sqlite3.c:68193:12
func _968btreeCreateTable(tls crt.TLS, _p uintptr /* *TBtree = SBtree */, _piTable uintptr /* *int32 */, _createTabFlags int32) (r int32) {
	esc := crt.MustMalloc(100)
	var (
		_pBt       uintptr    // *TBtShared = SBtShared
		_pRoot     = esc      // **TMemPage = SMemPage
		_pgnoRoot  = esc + 16 // *TPgno = Tu32 = uint32
		_rc        = esc + 32 // *int32
		_ptfFlags  int32
		_pgnoMove  = esc + 48 // *TPgno = Tu32 = uint32
		_pPageMove = esc + 64 // **TMemPage = SMemPage
		_eType     = esc + 80 // *Tu8 = uint8
		_iPtrPage  = esc + 96 // *TPgno = Tu32 = uint32
	)
	defer crt.Free(esc)
	_pBt = *(*uintptr)(unsafe.Pointer(_p + 8))

	if (*(*uint8)(unsafe.Pointer(_pBt + 33))) == 0 {
		goto _1
	}

	_594invalidateAllOverflowCache(tls, _pBt)
	_145sqlite3BtreeGetMeta(tls, _p, int32(4), _pgnoRoot)
	(*(*uint32)(unsafe.Pointer(_pgnoRoot)))++
_3:
	if (*(*uint32)(unsafe.Pointer(_pgnoRoot))) != _595ptrmapPageno(tls, _pBt, *(*uint32)(unsafe.Pointer(_pgnoRoot))) && (*(*uint32)(unsafe.Pointer(_pgnoRoot))) != (uint32(_149sqlite3PendingByte)/(*(*uint32)(unsafe.Pointer(_pBt + 48))))+uint32(1) {
		goto _4
	}

	(*(*uint32)(unsafe.Pointer(_pgnoRoot)))++
	goto _3

_4:
	*(*int32)(unsafe.Pointer(_rc)) = _918allocateBtreePage(tls, _pBt, _pPageMove, _pgnoMove, *(*uint32)(unsafe.Pointer(_pgnoRoot)), uint8(1))
	if (*(*int32)(unsafe.Pointer(_rc))) == int32(0) {
		goto _5
	}

	return *(*int32)(unsafe.Pointer(_rc))

_5:
	if (*(*uint32)(unsafe.Pointer(_pgnoMove))) == (*(*uint32)(unsafe.Pointer(_pgnoRoot))) {
		goto _6
	}

	*(*uint8)(unsafe.Pointer(_eType)) = uint8(0)
	*(*uint32)(unsafe.Pointer(_iPtrPage)) = uint32(0)
	*(*int32)(unsafe.Pointer(_rc)) = _360saveAllCursors(tls, _pBt, uint32(0), null)
	_919releasePage(tls, *(*uintptr)(unsafe.Pointer(_pPageMove)))
	if (*(*int32)(unsafe.Pointer(_rc))) == int32(0) {
		goto _8
	}

	return *(*int32)(unsafe.Pointer(_rc))

_8:
	*(*int32)(unsafe.Pointer(_rc)) = _363btreeGetPage(tls, _pBt, *(*uint32)(unsafe.Pointer(_pgnoRoot)), _pRoot, int32(0))
	if (*(*int32)(unsafe.Pointer(_rc))) == int32(0) {
		goto _9
	}

	return *(*int32)(unsafe.Pointer(_rc))

_9:
	*(*int32)(unsafe.Pointer(_rc)) = _917ptrmapGet(tls, _pBt, *(*uint32)(unsafe.Pointer(_pgnoRoot)), _eType, _iPtrPage)
	if int32(*(*uint8)(unsafe.Pointer(_eType))) != int32(1) && int32(*(*uint8)(unsafe.Pointer(_eType))) != int32(2) {
		goto _10
	}

	*(*int32)(unsafe.Pointer(_rc)) = _556sqlite3CorruptError(tls, int32(68273))
_10:
	if (*(*int32)(unsafe.Pointer(_rc))) == int32(0) {
		goto _11
	}

	_919releasePage(tls, *(*uintptr)(unsafe.Pointer(_pRoot)))
	return *(*int32)(unsafe.Pointer(_rc))

_11:
	*(*int32)(unsafe.Pointer(_rc)) = _920relocatePage(tls, _pBt, *(*uintptr)(unsafe.Pointer(_pRoot)), *(*uint8)(unsafe.Pointer(_eType)), *(*uint32)(unsafe.Pointer(_iPtrPage)), *(*uint32)(unsafe.Pointer(_pgnoMove)), int32(0))
	_919releasePage(tls, *(*uintptr)(unsafe.Pointer(_pRoot)))
	if (*(*int32)(unsafe.Pointer(_rc))) == int32(0) {
		goto _12
	}

	return *(*int32)(unsafe.Pointer(_rc))

_12:
	*(*int32)(unsafe.Pointer(_rc)) = _363btreeGetPage(tls, _pBt, *(*uint32)(unsafe.Pointer(_pgnoRoot)), _pRoot, int32(0))
	if (*(*int32)(unsafe.Pointer(_rc))) == int32(0) {
		goto _13
	}

	return *(*int32)(unsafe.Pointer(_rc))

_13:
	*(*int32)(unsafe.Pointer(_rc)) = _161sqlite3PagerWrite(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pRoot))) + 112)))
	if (*(*int32)(unsafe.Pointer(_rc))) == int32(0) {
		goto _14
	}

	_919releasePage(tls, *(*uintptr)(unsafe.Pointer(_pRoot)))
	return *(*int32)(unsafe.Pointer(_rc))

_14:
	goto _7

_6:
	*(*uintptr)(unsafe.Pointer(_pRoot)) = *(*uintptr)(unsafe.Pointer(_pPageMove))
_7:
	_1165ptrmapPut(tls, _pBt, *(*uint32)(unsafe.Pointer(_pgnoRoot)), uint8(1), uint32(0), _rc)
	if (*(*int32)(unsafe.Pointer(_rc))) == 0 {
		goto _15
	}

	_919releasePage(tls, *(*uintptr)(unsafe.Pointer(_pRoot)))
	return *(*int32)(unsafe.Pointer(_rc))

_15:
	*(*int32)(unsafe.Pointer(_rc)) = _156sqlite3BtreeUpdateMeta(tls, _p, int32(4), *(*uint32)(unsafe.Pointer(_pgnoRoot)))
	if *(*int32)(unsafe.Pointer(_rc)) == 0 {
		goto _16
	}

	_919releasePage(tls, *(*uintptr)(unsafe.Pointer(_pRoot)))
	return *(*int32)(unsafe.Pointer(_rc))

_16:
	goto _2

_1:
	*(*int32)(unsafe.Pointer(_rc)) = _918allocateBtreePage(tls, _pBt, _pRoot, _pgnoRoot, uint32(1), uint8(0))
	if (*(*int32)(unsafe.Pointer(_rc))) == 0 {
		goto _17
	}

	return *(*int32)(unsafe.Pointer(_rc))

_17:
_2:
	if (_createTabFlags & int32(1)) == 0 {
		goto _18
	}

	_ptfFlags = int32(13)
	goto _19

_18:
	_ptfFlags = int32(10)
_19:
	_561zeroPage(tls, *(*uintptr)(unsafe.Pointer(_pRoot)), _ptfFlags)
	_153sqlite3PagerUnref(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pRoot))) + 112)))

	*(*int32)(unsafe.Pointer(_piTable)) = int32(*(*uint32)(unsafe.Pointer(_pgnoRoot)))
	return int32(0)
}

type SVdbeSorter struct {
	XmnPmaSize   int32
	XmxPmaSize   int32
	XmxKeysize   int32
	Xpgsz        int32
	XpReader     uintptr // *SPmaReader
	XpMerger     uintptr // *SMergeEngine
	Xdb          uintptr // *Ssqlite3
	XpKeyInfo    uintptr // *SKeyInfo
	XpUnpacked   uintptr // *SUnpackedRecord
	Xlist        SSorterList
	XiMemory     int32
	XnMemory     int32
	XbUsePMA     uint8
	XbUseThreads uint8
	XiPrev       uint8
	XnTask       uint8
	XtypeMask    uint8
	XaTask       [1]SSortSubtask
}

type SSortSubtask struct {
	XpThread   uintptr // *SSQLiteThread
	XbDone     int32
	XpSorter   uintptr // *SVdbeSorter
	XpUnpacked uintptr // *SUnpackedRecord
	Xlist      SSorterList
	XnPMA      int32
	XxCompare  uintptr // *func(crt.TLS, uintptr, uintptr, uintptr, int32, uintptr, int32) int32
	Xfile      SSorterFile
	Xfile2     SSorterFile
}

// _969fakeCursor Tu8 = uint8, escapes: true, sqlite3.c:60521:13
var _969fakeCursor = ds + 8836

// _970sqlite3VdbeSorterClose is defined at sqlite3.c:88169:21
func _970sqlite3VdbeSorterClose(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pCsr uintptr /* *TVdbeCursor = SVdbeCursor */) {
	var _pSorter uintptr // *TVdbeSorter = SVdbeSorter

	_pSorter = *(*uintptr)(unsafe.Pointer(_pCsr + 48))
	if _pSorter == 0 {
		goto _1
	}

	_712sqlite3VdbeSorterReset(tls, _db, _pSorter)
	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer((_pSorter + 56) + 8)))
	_181sqlite3DbFree(tls, _db, _pSorter)
	*(*uintptr)(unsafe.Pointer(_pCsr + 48)) = null
_1:
}

// _971sqlite3VdbeFindCompare is defined at sqlite3.c:76535:30
func _971sqlite3VdbeFindCompare(tls crt.TLS, _p uintptr /* *TUnpackedRecord = SUnpackedRecord */) (r uintptr /* TRecordCompare = *func(crt.TLS, int32, uintptr, uintptr) int32 */) {
	var _flags int32

	if int32(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p))) + 8))) > int32(13) {
		goto _1
	}

	_flags = int32(*(*uint16)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_p + 8)) + 8)))
	if (*(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p))) + 24))))) == 0 {
		goto _2
	}

	*(*int8)(unsafe.Pointer(_p + 20)) = int8(1)
	*(*int8)(unsafe.Pointer(_p + 21)) = int8(-1)
	goto _3

_2:
	*(*int8)(unsafe.Pointer(_p + 20)) = int8(-1)
	*(*int8)(unsafe.Pointer(_p + 21)) = int8(1)
_3:
	if _flags&int32(0x4) == 0 {
		goto _4
	}

	return fp162(_1189vdbeRecordCompareInt)

_4:
	if (_flags&int32(25)) != int32(0) || (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p))) + 32))) != 0 {
		goto _5
	}

	return fp162(_1190vdbeRecordCompareString)

_5:
_1:
	return fp162(_986sqlite3VdbeRecordCompare)
}

// _972accessPayload is defined at sqlite3.c:64236:12
func _972accessPayload(tls crt.TLS, _pCur uintptr /* *TBtCursor = SBtCursor */, _offset uint32, _amt uint32, _pBuf uintptr /* *uint8 */, _eOp int32) (r int32) {
	esc := crt.MustMalloc(24)
	var (
		_aPayload uintptr // *uint8
		_rc       int32
		_iIdx     int32
		_pPage    uintptr // *TMemPage = SMemPage
		_pBt      uintptr // *TBtShared = SBtShared
		_a        int32
		_ovflSize uint32
		_nextPage = esc // *TPgno = Tu32 = uint32
		_nOvfl    int32
		_aNew     uintptr // *TPgno = Tu32 = uint32
		_1a       int32
		_pDbPage  = esc + 16 // **TDbPage = SPgHdr
	)
	defer crt.Free(esc)
	_rc = int32(0)
	_iIdx = int32(0)
	_pPage = *(*uintptr)(unsafe.Pointer(_pCur + 144))
	_pBt = *(*uintptr)(unsafe.Pointer(_pCur + 16))

	_954getCellInfo(tls, _pCur)
	_aPayload = *(*uintptr)(unsafe.Pointer((_pCur + 40) + 8))

	if uint64(int64(_aPayload-(*(*uintptr)(unsafe.Pointer(_pPage + 80))))) <= uint64((*(*uint32)(unsafe.Pointer(_pBt + 52)))-uint32(*(*uint16)(unsafe.Pointer((_pCur + 40) + 20)))) {
		goto _1
	}

	return _556sqlite3CorruptError(tls, int32(64269))

_1:
	if _offset >= uint32(*(*uint16)(unsafe.Pointer((_pCur + 40) + 20))) {
		goto _2
	}

	_a = int32(_amt)
	if (uint32(_a) + _offset) <= uint32(*(*uint16)(unsafe.Pointer((_pCur + 40) + 20))) {
		goto _4
	}

	_a = int32(uint32(*(*uint16)(unsafe.Pointer((_pCur + 40) + 20))) - _offset)
_4:
	_rc = _1191copyPayload(tls, _aPayload+uintptr(_offset), _pBuf, _a, _eOp, *(*uintptr)(unsafe.Pointer(_pPage + 112)))
	_offset = uint32(0)
	_pBuf += uintptr(_a)
	_amt = uint32(_amt - uint32(_a))
	goto _3

_2:
	_offset = uint32(_offset - uint32(*(*uint16)(unsafe.Pointer((_pCur + 40) + 20))))
_3:
	if _rc != int32(0) || _amt <= uint32(0) {
		goto _5
	}

	_ovflSize = (*(*uint32)(unsafe.Pointer(_pBt + 52))) - uint32(4)
	*(*uint32)(unsafe.Pointer(_nextPage)) = uint32(_328sqlite3Get4byte(tls, _aPayload+uintptr(*(*uint16)(unsafe.Pointer((_pCur + 40) + 20)))))
	if (int32(*(*uint8)(unsafe.Pointer(_pCur + 1))) & int32(0x4)) != int32(0) {
		goto _6
	}

	_nOvfl = int32(((((*(*uint32)(unsafe.Pointer((_pCur + 40) + 16))) - uint32(*(*uint16)(unsafe.Pointer((_pCur + 40) + 20)))) + _ovflSize) - uint32(1)) / _ovflSize)
	if _nOvfl <= (*(*int32)(unsafe.Pointer(_pCur + 4))) {
		goto _8
	}

	_aNew = _230sqlite3Realloc(tls, *(*uintptr)(unsafe.Pointer(_pCur + 32)), uint64(uint64(_nOvfl*int32(2))*uint64(4)))
	if _aNew != 0 {
		goto _9
	}

	return int32(7)

	goto _10

_9:
	*(*int32)(unsafe.Pointer(_pCur + 4)) = _nOvfl * int32(2)
	*(*uintptr)(unsafe.Pointer(_pCur + 32)) = _aNew
_10:
_8:
	crt.Xmemset(tls, *(*uintptr)(unsafe.Pointer(_pCur + 32)), int32(0), uint64(_nOvfl)*uint64(4))
	{
		p := &(*(*uint8)(unsafe.Pointer(_pCur + 1)))
		*p = uint8(int32(*p) | int32(0x4))
	}
	goto _7

_6:
	if (*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pCur + 32))) + 4*uintptr(_offset/_ovflSize)))) == 0 {
		goto _11
	}

	_iIdx = int32(_offset / _ovflSize)
	*(*uint32)(unsafe.Pointer(_nextPage)) = *(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pCur + 32))) + 4*uintptr(_iIdx)))
	_offset = _offset % _ovflSize
_11:
_7:
_12:
	if (*(*uint32)(unsafe.Pointer(_nextPage))) == 0 {
		goto _13
	}

	*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pCur + 32))) + 4*uintptr(_iIdx))) = *(*uint32)(unsafe.Pointer(_nextPage))
	if _offset < _ovflSize {
		goto _14
	}

	if (*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pCur + 32))) + 4*uintptr(_iIdx+int32(1))))) == 0 {
		goto _16
	}

	*(*uint32)(unsafe.Pointer(_nextPage)) = *(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pCur + 32))) + 4*uintptr(_iIdx+int32(1))))
	goto _17

_16:
	_rc = _1192getOverflowPage(tls, _pBt, *(*uint32)(unsafe.Pointer(_nextPage)), null, _nextPage)
_17:
	_offset = uint32(_offset - _ovflSize)
	goto _15

_14:
	_1a = int32(_amt)
	if (uint32(_1a) + _offset) <= _ovflSize {
		goto _18
	}

	_1a = int32(_ovflSize - _offset)
_18:
	_rc = _150sqlite3PagerGet(tls, *(*uintptr)(unsafe.Pointer(_pBt)), *(*uint32)(unsafe.Pointer(_nextPage)), _pDbPage, func() int32 {
		if _eOp == int32(0) {
			return int32(0x2)
		}
		return int32(0)
	}())
	if _rc != int32(0) {
		goto _19
	}

	_aPayload = _152sqlite3PagerGetData(tls, *(*uintptr)(unsafe.Pointer(_pDbPage)))
	*(*uint32)(unsafe.Pointer(_nextPage)) = uint32(_328sqlite3Get4byte(tls, _aPayload))
	_rc = _1191copyPayload(tls, _aPayload+uintptr(_offset+uint32(4)), _pBuf, _1a, _eOp, *(*uintptr)(unsafe.Pointer(_pDbPage)))
	_153sqlite3PagerUnref(tls, *(*uintptr)(unsafe.Pointer(_pDbPage)))
	_offset = uint32(0)
_19:
	_amt = uint32(_amt - uint32(_1a))
	if _amt != uint32(0) {
		goto _20
	}

	return _rc

_20:
	_pBuf += uintptr(_1a)
_15:
	if _rc == 0 {
		goto _21
	}

	goto _13

_21:
	_iIdx++
	goto _12

_13:
_5:
	if _rc != int32(0) || _amt <= uint32(0) {
		goto _22
	}

	return _556sqlite3CorruptError(tls, int32(64417))

_22:
	return _rc
}

// _973btreeNext is defined at sqlite3.c:65167:28
func _973btreeNext(tls crt.TLS, _pCur uintptr /* *TBtCursor = SBtCursor */) (r int32) {
	var (
		_rc    int32
		_idx   int32
		_pPage uintptr // *TMemPage = SMemPage
	)

	if int32(*(*uint8)(unsafe.Pointer(_pCur))) == int32(1) {
		goto _1
	}

	_rc = func() int32 {
		if int32(*(*uint8)(unsafe.Pointer(_pCur))) >= int32(3) {
			return _1193btreeRestoreCursorPosition(tls, _pCur)
		}
		return int32(0)
	}()
	if _rc == int32(0) {
		goto _2
	}

	return _rc

_2:
	if int32(0) != int32(*(*uint8)(unsafe.Pointer(_pCur))) {
		goto _3
	}

	return int32(101)

_3:
	if (*(*int32)(unsafe.Pointer(_pCur + 84))) == 0 {
		goto _4
	}

	*(*uint8)(unsafe.Pointer(_pCur)) = uint8(1)
	if (*(*int32)(unsafe.Pointer(_pCur + 84))) <= int32(0) {
		goto _5
	}

	*(*int32)(unsafe.Pointer(_pCur + 84)) = int32(0)
	return int32(0)

_5:
	*(*int32)(unsafe.Pointer(_pCur + 84)) = int32(0)
_4:
_1:
	_pPage = *(*uintptr)(unsafe.Pointer(_pCur + 144))
	_idx = int32(preinc143(&(*(*uint16)(unsafe.Pointer(_pCur + 90)))))

	if _idx < int32(*(*uint16)(unsafe.Pointer(_pPage + 22))) {
		goto _6
	}

	if (*(*uint8)(unsafe.Pointer(_pPage + 8))) != 0 {
		goto _7
	}

	_rc = _964moveToChild(tls, _pCur, _328sqlite3Get4byte(tls, (*(*uintptr)(unsafe.Pointer(_pPage + 80)))+uintptr(int32(*(*uint8)(unsafe.Pointer(_pPage + 9)))+int32(8))))
	if _rc == 0 {
		goto _8
	}

	return _rc

_8:
	return _974moveToLeftmost(tls, _pCur)

_7:
_9:
	if int32(*(*int8)(unsafe.Pointer(_pCur + 88))) != int32(0) {
		goto _12
	}

	*(*uint8)(unsafe.Pointer(_pCur)) = uint8(0)
	return int32(101)

_12:
	_963moveToParent(tls, _pCur)
	_pPage = *(*uintptr)(unsafe.Pointer(_pCur + 144))
	if int32(*(*uint16)(unsafe.Pointer(_pCur + 90))) >= int32(*(*uint16)(unsafe.Pointer(_pPage + 22))) {
		goto _9
	}

	if (*(*uint8)(unsafe.Pointer(_pPage + 2))) == 0 {
		goto _13
	}

	return _687sqlite3BtreeNext(tls, _pCur, int32(0))

	goto _14

_13:
	return int32(0)

_14:
_6:
	if (*(*uint8)(unsafe.Pointer(_pPage + 8))) == 0 {
		goto _15
	}

	return int32(0)

	goto _16

_15:
	return _974moveToLeftmost(tls, _pCur)

_16:
	return r
}

// _974moveToLeftmost is defined at sqlite3.c:64726:12
func _974moveToLeftmost(tls crt.TLS, _pCur uintptr /* *TBtCursor = SBtCursor */) (r int32) {
	var (
		_pgno  uint32
		_rc    int32
		_pPage uintptr // *TMemPage = SMemPage
	)
	_rc = int32(0)

_1:
	if _rc != int32(0) || (*(*uint8)(unsafe.Pointer(set4(&_pPage, *(*uintptr)(unsafe.Pointer(_pCur + 144))) + 8))) != 0 {
		goto _2
	}

	_pgno = uint32(_328sqlite3Get4byte(tls, (*(*uintptr)(unsafe.Pointer(_pPage + 80)))+uintptr(int32(*(*uint16)(unsafe.Pointer(_pPage + 24)))&((int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage + 96))) + uintptr(int32(2)*int32(*(*uint16)(unsafe.Pointer(_pCur + 90)))))))<<(uint(8)%32))|int32(*(*uint8)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pPage + 96))) + uintptr(int32(2)*int32(*(*uint16)(unsafe.Pointer(_pCur + 90))))) + 1)))))))
	_rc = _964moveToChild(tls, _pCur, _pgno)
	goto _1

_2:
	return _rc
}

// _975btreePrevious is defined at sqlite3.c:65272:28
func _975btreePrevious(tls crt.TLS, _pCur uintptr /* *TBtCursor = SBtCursor */) (r int32) {
	var (
		_rc    int32
		_pPage uintptr // *TMemPage = SMemPage
		_idx   int32
	)

	if int32(*(*uint8)(unsafe.Pointer(_pCur))) == int32(1) {
		goto _1
	}

	_rc = func() int32 {
		if int32(*(*uint8)(unsafe.Pointer(_pCur))) >= int32(3) {
			return _1193btreeRestoreCursorPosition(tls, _pCur)
		}
		return int32(0)
	}()
	if _rc == int32(0) {
		goto _2
	}

	return _rc

_2:
	if int32(0) != int32(*(*uint8)(unsafe.Pointer(_pCur))) {
		goto _3
	}

	return int32(101)

_3:
	if (*(*int32)(unsafe.Pointer(_pCur + 84))) == 0 {
		goto _4
	}

	*(*uint8)(unsafe.Pointer(_pCur)) = uint8(1)
	if (*(*int32)(unsafe.Pointer(_pCur + 84))) >= int32(0) {
		goto _5
	}

	*(*int32)(unsafe.Pointer(_pCur + 84)) = int32(0)
	return int32(0)

_5:
	*(*int32)(unsafe.Pointer(_pCur + 84)) = int32(0)
_4:
_1:
	_pPage = *(*uintptr)(unsafe.Pointer(_pCur + 144))

	if (*(*uint8)(unsafe.Pointer(_pPage + 8))) != 0 {
		goto _6
	}

	_idx = int32(*(*uint16)(unsafe.Pointer(_pCur + 90)))
	_rc = _964moveToChild(tls, _pCur, _328sqlite3Get4byte(tls, (*(*uintptr)(unsafe.Pointer(_pPage + 80)))+uintptr(int32(*(*uint16)(unsafe.Pointer(_pPage + 24)))&((int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage + 96))) + uintptr(int32(2)*_idx))))<<(uint(8)%32))|int32(*(*uint8)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pPage + 96))) + uintptr(int32(2)*_idx)) + 1)))))))
	if _rc == 0 {
		goto _8
	}

	return _rc

_8:
	_rc = _976moveToRightmost(tls, _pCur)
	goto _7

_6:
_9:
	if int32(*(*uint16)(unsafe.Pointer(_pCur + 90))) != int32(0) {
		goto _10
	}

	if int32(*(*int8)(unsafe.Pointer(_pCur + 88))) != int32(0) {
		goto _11
	}

	*(*uint8)(unsafe.Pointer(_pCur)) = uint8(0)
	return int32(101)

_11:
	_963moveToParent(tls, _pCur)
	goto _9

_10:
	(*(*uint16)(unsafe.Pointer(_pCur + 90)))--
	_pPage = *(*uintptr)(unsafe.Pointer(_pCur + 144))
	if (*(*uint8)(unsafe.Pointer(_pPage + 2))) == 0 || (*(*uint8)(unsafe.Pointer(_pPage + 8))) != 0 {
		goto _12
	}

	_rc = _688sqlite3BtreePrevious(tls, _pCur, int32(0))
	goto _13

_12:
	_rc = int32(0)
_13:
_7:
	return _rc
}

// _976moveToRightmost is defined at sqlite3.c:64751:12
func _976moveToRightmost(tls crt.TLS, _pCur uintptr /* *TBtCursor = SBtCursor */) (r int32) {
	var (
		_pgno  uint32
		_rc    int32
		_pPage uintptr // *TMemPage = SMemPage
	)
	_rc = int32(0)
	_pPage = 0

_1:
	if (*(*uint8)(unsafe.Pointer(set4(&_pPage, *(*uintptr)(unsafe.Pointer(_pCur + 144))) + 8))) != 0 {
		goto _2
	}

	_pgno = uint32(_328sqlite3Get4byte(tls, (*(*uintptr)(unsafe.Pointer(_pPage + 80)))+uintptr(int32(*(*uint8)(unsafe.Pointer(_pPage + 9)))+int32(8))))
	*(*uint16)(unsafe.Pointer(_pCur + 90)) = *(*uint16)(unsafe.Pointer(_pPage + 22))
	_rc = _964moveToChild(tls, _pCur, _pgno)
	if _rc == 0 {
		goto _3
	}

	return _rc

_3:
	goto _1

_2:
	*(*uint16)(unsafe.Pointer(_pCur + 90)) = uint16(int32(*(*uint16)(unsafe.Pointer(_pPage + 22))) - int32(1))

	return int32(0)
}

// _977invalidateIncrblobCursors is defined at sqlite3.c:60175:13
func _977invalidateIncrblobCursors(tls crt.TLS, _pBtree uintptr /* *TBtree = SBtree */, _pgnoRoot uint32, _iRow int64, _isClearTable int32) {
	var _p uintptr // *TBtCursor = SBtCursor

	if int32(*(*uint8)(unsafe.Pointer(_pBtree + 19))) != int32(0) {
		goto _1
	}

	return

_1:
	*(*uint8)(unsafe.Pointer(_pBtree + 19)) = uint8(0)
	_p = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pBtree + 8))) + 16))
_2:
	if _p == 0 {
		goto _4
	}

	if (int32(*(*uint8)(unsafe.Pointer(_p + 1))) & int32(0x10)) == int32(0) {
		goto _5
	}

	*(*uint8)(unsafe.Pointer(_pBtree + 19)) = uint8(1)
	if (*(*uint32)(unsafe.Pointer(_p + 80))) != _pgnoRoot || _isClearTable == 0 && (*(*int64)(unsafe.Pointer(_p + 40))) != _iRow {
		goto _6
	}

	*(*uint8)(unsafe.Pointer(_p)) = uint8(0)
_6:
_5:
	_p = *(*uintptr)(unsafe.Pointer(_p + 24))
	goto _2

_4:
}

// _978btreeMoveto is defined at sqlite3.c:60435:12
func _978btreeMoveto(tls crt.TLS, _pCur uintptr /* *TBtCursor = SBtCursor */, _pKey uintptr /* *void */, _nKey int64, _bias int32, _pRes uintptr /* *int32 */) (r int32) {
	var (
		_rc      int32
		_pIdxKey uintptr // *TUnpackedRecord = SUnpackedRecord
	)
	if _pKey == 0 {
		goto _1
	}

	_pIdxKey = _690sqlite3VdbeAllocUnpackedRecord(tls, *(*uintptr)(unsafe.Pointer(_pCur + 136)))
	if _pIdxKey != 0 {
		goto _3
	}

	return int32(7)

_3:
	_691sqlite3VdbeRecordUnpack(tls, *(*uintptr)(unsafe.Pointer(_pCur + 136)), int32(_nKey), _pKey, _pIdxKey)
	if int32(*(*uint16)(unsafe.Pointer(_pIdxKey + 16))) != int32(0) {
		goto _4
	}

	_rc = _556sqlite3CorruptError(tls, int32(60451))
	goto _moveto_done

_4:
	goto _2

_1:
	_pIdxKey = null
_2:
	_rc = _685sqlite3BtreeMovetoUnpacked(tls, _pCur, _pIdxKey, _nKey, _bias, _pRes)
	goto _moveto_done
_moveto_done:
	if _pIdxKey == 0 {
		goto _5
	}

	_181sqlite3DbFree(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pCur + 136))) + 16)), _pIdxKey)
_5:
	return _rc
}

// _979fillInCell is defined at sqlite3.c:65908:12
func _979fillInCell(tls crt.TLS, _pPage uintptr /* *TMemPage = SMemPage */, _pCell uintptr /* *uint8 */, _pX uintptr /* *TBtreePayload = SBtreePayload */, _pnSize uintptr /* *int32 */) (r int32) {
	esc := crt.MustMalloc(40)
	var (
		_nPayload   int32
		_pSrc       uintptr // *Tu8 = uint8
		_nSrc       int32
		_n          int32
		_rc         = esc // *int32
		_mn         int32
		_spaceLeft  int32
		_pToRelease uintptr    // *TMemPage = SMemPage
		_pPrior     uintptr    // *uint8
		_pPayload   uintptr    // *uint8
		_pBt        uintptr    // *TBtShared = SBtShared
		_pgnoOvfl   = esc + 16 // *TPgno = Tu32 = uint32
		_nHeader    int32
		_pOvfl      = esc + 32 // **TMemPage = SMemPage
		_pgnoPtrmap uint32
		_eType      uint8
	)
	defer crt.Free(esc)

	_nHeader = int32(*(*uint8)(unsafe.Pointer(_pPage + 10)))
	if (*(*uint8)(unsafe.Pointer(_pPage + 2))) == 0 {
		goto _1
	}

	_nPayload = (*(*int32)(unsafe.Pointer(_pX + 36))) + (*(*int32)(unsafe.Pointer(_pX + 40)))
	_pSrc = *(*uintptr)(unsafe.Pointer(_pX + 16))
	_nSrc = *(*int32)(unsafe.Pointer(_pX + 36))

	_nHeader = int32(_nHeader + int32(uint8(func() int32 {
		if uint32(_nPayload) < uint32(0x80) {
			return func() int32 {
				*(*uint8)(unsafe.Pointer(_pCell + uintptr(_nHeader))) = uint8(_nPayload)
				return int32(1)
			}()
		}
		return _672sqlite3PutVarint(tls, _pCell+uintptr(_nHeader), uint64(_nPayload))
	}())))
	_nHeader = int32(_nHeader + _672sqlite3PutVarint(tls, _pCell+uintptr(_nHeader), *(*uint64)(unsafe.Pointer(_pX + 8))))
	goto _2

_1:
	_nSrc = set5(&_nPayload, int32(*(*int64)(unsafe.Pointer(_pX + 8))))
	_pSrc = *(*uintptr)(unsafe.Pointer(_pX))
	_nHeader = int32(_nHeader + int32(uint8(func() int32 {
		if uint32(_nPayload) < uint32(0x80) {
			return func() int32 {
				*(*uint8)(unsafe.Pointer(_pCell + uintptr(_nHeader))) = uint8(_nPayload)
				return int32(1)
			}()
		}
		return _672sqlite3PutVarint(tls, _pCell+uintptr(_nHeader), uint64(_nPayload))
	}())))
_2:
	_pPayload = _pCell + uintptr(_nHeader)
	if _nPayload > int32(*(*uint16)(unsafe.Pointer(_pPage + 14))) {
		goto _3
	}

	_n = _nHeader + _nPayload
	if _n >= int32(4) {
		goto _4
	}

	_n = int32(4)
_4:
	*(*int32)(unsafe.Pointer(_pnSize)) = _n

	crt.Xmemcpy(tls, _pPayload, _pSrc, uint64(_nSrc))
	crt.Xmemset(tls, _pPayload+uintptr(_nSrc), int32(0), uint64(_nPayload-_nSrc))
	return int32(0)

_3:
	_mn = int32(*(*uint16)(unsafe.Pointer(_pPage + 16)))
	_n = int32(uint32(_mn) + (uint32(_nPayload-_mn) % ((*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage + 72))) + 52))) - uint32(4))))
	if _n <= int32(*(*uint16)(unsafe.Pointer(_pPage + 14))) {
		goto _5
	}

	_n = _mn
_5:
	_spaceLeft = _n
	*(*int32)(unsafe.Pointer(_pnSize)) = (_n + _nHeader) + int32(4)
	_pPrior = _pCell + uintptr(_nHeader+_n)
	_pToRelease = null
	*(*uint32)(unsafe.Pointer(_pgnoOvfl)) = uint32(0)
	_pBt = *(*uintptr)(unsafe.Pointer(_pPage + 72))
_6:
	_n = _nPayload
	if _n <= _spaceLeft {
		goto _8
	}

	_n = _spaceLeft
_8:
	if _nSrc < _n {
		goto _9
	}

	crt.Xmemcpy(tls, _pPayload, _pSrc, uint64(_n))
	goto _10

_9:
	if _nSrc <= int32(0) {
		goto _11
	}

	_n = _nSrc
	crt.Xmemcpy(tls, _pPayload, _pSrc, uint64(_n))
	goto _12

_11:
	crt.Xmemset(tls, _pPayload, int32(0), uint64(_n))
_12:
_10:
	_nPayload = int32(_nPayload - _n)
	if _nPayload > int32(0) {
		goto _13
	}

	goto _7

_13:
	_pPayload += uintptr(_n)
	_pSrc += uintptr(_n)
	_nSrc = int32(_nSrc - _n)
	_spaceLeft = int32(_spaceLeft - _n)
	if _spaceLeft != int32(0) {
		goto _14
	}

	*(*uintptr)(unsafe.Pointer(_pOvfl)) = 0
	_pgnoPtrmap = *(*uint32)(unsafe.Pointer(_pgnoOvfl))
	if (*(*uint8)(unsafe.Pointer(_pBt + 33))) == 0 {
		goto _15
	}

_16:
	(*(*uint32)(unsafe.Pointer(_pgnoOvfl)))++
	if (_595ptrmapPageno(tls, _pBt, *(*uint32)(unsafe.Pointer(_pgnoOvfl))) == (*(*uint32)(unsafe.Pointer(_pgnoOvfl)))) || ((*(*uint32)(unsafe.Pointer(_pgnoOvfl))) == (uint32(_149sqlite3PendingByte)/(*(*uint32)(unsafe.Pointer(_pBt + 48))))+uint32(1)) {
		goto _16
	}

_15:
	*(*int32)(unsafe.Pointer(_rc)) = _918allocateBtreePage(tls, _pBt, _pOvfl, _pgnoOvfl, *(*uint32)(unsafe.Pointer(_pgnoOvfl)), uint8(0))
	if (*(*uint8)(unsafe.Pointer(_pBt + 33))) == 0 || (*(*int32)(unsafe.Pointer(_rc))) != int32(0) {
		goto _19
	}

	_eType = uint8(func() int32 {
		if _pgnoPtrmap != 0 {
			return int32(4)
		}
		return int32(3)
	}())
	_1165ptrmapPut(tls, _pBt, *(*uint32)(unsafe.Pointer(_pgnoOvfl)), _eType, _pgnoPtrmap, _rc)
	if (*(*int32)(unsafe.Pointer(_rc))) == 0 {
		goto _20
	}

	_919releasePage(tls, *(*uintptr)(unsafe.Pointer(_pOvfl)))
_20:
_19:
	if (*(*int32)(unsafe.Pointer(_rc))) == 0 {
		goto _21
	}

	_919releasePage(tls, _pToRelease)
	return *(*int32)(unsafe.Pointer(_rc))

_21:
	_329sqlite3Put4byte(tls, _pPrior, *(*uint32)(unsafe.Pointer(_pgnoOvfl)))
	_919releasePage(tls, _pToRelease)
	_pToRelease = *(*uintptr)(unsafe.Pointer(_pOvfl))
	_pPrior = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pOvfl))) + 80))
	_329sqlite3Put4byte(tls, _pPrior, uint32(0))
	_pPayload = (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pOvfl))) + 80))) + 4
	_spaceLeft = int32((*(*uint32)(unsafe.Pointer(_pBt + 52))) - uint32(4))
_14:
	goto _6

_7:
	_919releasePage(tls, _pToRelease)
	return int32(0)
}

// _980clearCell is defined at sqlite3.c:65827:12
func _980clearCell(tls crt.TLS, _pPage uintptr /* *TMemPage = SMemPage */, _pCell uintptr /* *uint8 */, _pInfo uintptr /* *TCellInfo = SCellInfo */) (r int32) {
	esc := crt.MustMalloc(24)
	var (
		_pBt          uintptr // *TBtShared = SBtShared
		_ovflPgno     uint32
		_rc           int32
		_nOvfl        int32
		_ovflPageSize uint32
		_iNext        = esc      // *TPgno = Tu32 = uint32
		_pOvfl        = esc + 16 // **TMemPage = SMemPage
	)
	defer crt.Free(esc)

	fn45(*(*uintptr)(unsafe.Pointer(_pPage + 128)))(tls, _pPage, _pCell, _pInfo)
	if uint32(*(*uint16)(unsafe.Pointer(_pInfo + 20))) != (*(*uint32)(unsafe.Pointer(_pInfo + 16))) {
		goto _1
	}

	return int32(0)

_1:
	if ((_pCell + uintptr(*(*uint16)(unsafe.Pointer(_pInfo + 22)))) - uintptr(1)) <= ((*(*uintptr)(unsafe.Pointer(_pPage + 80))) + uintptr(*(*uint16)(unsafe.Pointer(_pPage + 24)))) {
		goto _2
	}

	return _556sqlite3CorruptError(tls, int32(65845))

_2:
	_ovflPgno = uint32(_328sqlite3Get4byte(tls, (_pCell+uintptr(*(*uint16)(unsafe.Pointer(_pInfo + 22))))-uintptr(4)))
	_pBt = *(*uintptr)(unsafe.Pointer(_pPage + 72))

	_ovflPageSize = (*(*uint32)(unsafe.Pointer(_pBt + 52))) - uint32(4)
	_nOvfl = int32(((((*(*uint32)(unsafe.Pointer(_pInfo + 16))) - uint32(*(*uint16)(unsafe.Pointer(_pInfo + 20)))) + _ovflPageSize) - uint32(1)) / _ovflPageSize)

_3:
	if postinc24(&_nOvfl) == 0 {
		goto _4
	}

	*(*uint32)(unsafe.Pointer(_iNext)) = uint32(0)
	*(*uintptr)(unsafe.Pointer(_pOvfl)) = 0
	if _ovflPgno >= uint32(2) && _ovflPgno <= _332btreePagecount(tls, _pBt) {
		goto _5
	}

	return _556sqlite3CorruptError(tls, int32(65862))

_5:
	if _nOvfl == 0 {
		goto _6
	}

	_rc = _1192getOverflowPage(tls, _pBt, _ovflPgno, _pOvfl, _iNext)
	if _rc == 0 {
		goto _7
	}

	return _rc

_7:
_6:
	if (*(*uintptr)(unsafe.Pointer(_pOvfl))) == 0 && set4(&(*(*uintptr)(unsafe.Pointer(_pOvfl))), _1194btreePageLookup(tls, _pBt, _ovflPgno)) == 0 || _850sqlite3PagerPageRefcount(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pOvfl))) + 112))) == int32(1) {
		goto _8
	}

	_rc = _556sqlite3CorruptError(tls, int32(65882))
	goto _9

_8:
	_rc = _1195freePage2(tls, _pBt, *(*uintptr)(unsafe.Pointer(_pOvfl)), _ovflPgno)
_9:
	if (*(*uintptr)(unsafe.Pointer(_pOvfl))) == 0 {
		goto _10
	}

	_153sqlite3PagerUnref(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pOvfl))) + 112)))
_10:
	if _rc == 0 {
		goto _11
	}

	return _rc

_11:
	_ovflPgno = *(*uint32)(unsafe.Pointer(_iNext))
	goto _3

_4:
	return int32(0)
}

// _981dropCell is defined at sqlite3.c:66098:13
func _981dropCell(tls crt.TLS, _pPage uintptr /* *TMemPage = SMemPage */, _idx int32, _sz int32, _pRC uintptr /* *int32 */) {
	var (
		_pc   uint32
		_data uintptr // *Tu8 = uint8
		_ptr  uintptr // *Tu8 = uint8
		_rc   int32
		_hdr  int32
	)
	if (*(*int32)(unsafe.Pointer(_pRC))) == 0 {
		goto _1
	}

	return

_1:
	_data = *(*uintptr)(unsafe.Pointer(_pPage + 80))
	_ptr = (*(*uintptr)(unsafe.Pointer(_pPage + 96))) + uintptr(int32(2)*_idx)
	_pc = uint32((int32(*(*uint8)(unsafe.Pointer(_ptr))) << (uint(8) % 32)) | int32(*(*uint8)(unsafe.Pointer(_ptr + 1))))
	_hdr = int32(*(*uint8)(unsafe.Pointer(_pPage + 9)))
	if (_pc + uint32(_sz)) <= (*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage + 72))) + 52))) {
		goto _2
	}

	*(*int32)(unsafe.Pointer(_pRC)) = _556sqlite3CorruptError(tls, int32(66117))
	return

_2:
	_rc = _1196freeSpace(tls, _pPage, uint16(_pc), uint16(_sz))
	if _rc == 0 {
		goto _3
	}

	*(*int32)(unsafe.Pointer(_pRC)) = _rc
	return

_3:
	(*(*uint16)(unsafe.Pointer(_pPage + 22)))--
	if int32(*(*uint16)(unsafe.Pointer(_pPage + 22))) != int32(0) {
		goto _4
	}

	crt.Xmemset(tls, _data+uintptr(_hdr+int32(1)), int32(0), uint64(4))
	*(*uint8)(unsafe.Pointer(_data + uintptr(_hdr+int32(7)))) = uint8(0)
	*(*uint8)(unsafe.Pointer(_data + uintptr(_hdr+int32(5)))) = uint8((*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage + 72))) + 52))) >> (uint(8) % 32))
	*(*uint8)(unsafe.Pointer((_data + uintptr(_hdr+int32(5))) + 1)) = uint8(*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage + 72))) + 52)))
	*(*uint16)(unsafe.Pointer(_pPage + 20)) = uint16((((*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage + 72))) + 52))) - uint32(*(*uint8)(unsafe.Pointer(_pPage + 9)))) - uint32(*(*uint8)(unsafe.Pointer(_pPage + 10)))) - uint32(8))
	goto _5

_4:
	crt.Xmemmove(tls, _ptr, _ptr+uintptr(2), uint64(int32(2)*(int32(*(*uint16)(unsafe.Pointer(_pPage + 22)))-_idx)))
	*(*uint8)(unsafe.Pointer(_data + uintptr(_hdr+int32(3)))) = uint8(int32(*(*uint16)(unsafe.Pointer(_pPage + 22))) >> (uint(8) % 32))
	*(*uint8)(unsafe.Pointer((_data + uintptr(_hdr+int32(3))) + 1)) = uint8(*(*uint16)(unsafe.Pointer(_pPage + 22)))
	{
		p := &(*(*uint16)(unsafe.Pointer(_pPage + 20)))
		*p = uint16(int32(*p) + int32(2))
	}
_5:
}

// _982insertCell is defined at sqlite3.c:66153:13
func _982insertCell(tls crt.TLS, _pPage uintptr /* *TMemPage = SMemPage */, _i int32, _pCell uintptr /* *Tu8 = uint8 */, _sz int32, _pTemp uintptr /* *Tu8 = uint8 */, _iChild uint32, _pRC uintptr /* *int32 */) {
	esc := crt.MustMalloc(4)
	var (
		_idx  = esc // *int32
		_j    int32
		_data uintptr // *Tu8 = uint8
		_pIns uintptr // *Tu8 = uint8
		_rc   int32
	)
	defer crt.Free(esc)
	*(*int32)(unsafe.Pointer(_idx)) = int32(0)

	if (*(*uint8)(unsafe.Pointer(_pPage + 12))) == 0 && (_sz+int32(2)) <= int32(*(*uint16)(unsafe.Pointer(_pPage + 20))) {
		goto _1
	}

	if _pTemp == 0 {
		goto _3
	}

	crt.Xmemcpy(tls, _pTemp, _pCell, uint64(_sz))
	_pCell = _pTemp
_3:
	if _iChild == 0 {
		goto _4
	}

	_329sqlite3Put4byte(tls, _pCell, _iChild)
_4:
	_j = int32(postinc163(&(*(*uint8)(unsafe.Pointer(_pPage + 12)))))

	*(*uintptr)(unsafe.Pointer((_pPage + 40) + 8*uintptr(_j))) = _pCell
	*(*uint16)(unsafe.Pointer((_pPage + 26) + 2*uintptr(_j))) = uint16(_i)

	goto _2

_1:
	_rc = _161sqlite3PagerWrite(tls, *(*uintptr)(unsafe.Pointer(_pPage + 112)))
	if _rc == int32(0) {
		goto _5
	}

	*(*int32)(unsafe.Pointer(_pRC)) = _rc
	return

_5:
	_data = *(*uintptr)(unsafe.Pointer(_pPage + 80))

	_rc = _1197allocateSpace(tls, _pPage, _sz, _idx)
	if _rc == 0 {
		goto _6
	}

	*(*int32)(unsafe.Pointer(_pRC)) = _rc
	return

_6:
	{
		p := &(*(*uint16)(unsafe.Pointer(_pPage + 20)))
		*p = uint16(int32(*p) - int32(uint16(int32(2)+_sz)))
	}
	crt.Xmemcpy(tls, _data+uintptr(*(*int32)(unsafe.Pointer(_idx))), _pCell, uint64(_sz))
	if _iChild == 0 {
		goto _7
	}

	_329sqlite3Put4byte(tls, _data+uintptr(*(*int32)(unsafe.Pointer(_idx))), _iChild)
_7:
	_pIns = (*(*uintptr)(unsafe.Pointer(_pPage + 96))) + uintptr(_i*int32(2))
	crt.Xmemmove(tls, _pIns+uintptr(2), _pIns, uint64(int32(2)*(int32(*(*uint16)(unsafe.Pointer(_pPage + 22)))-_i)))
	*(*uint8)(unsafe.Pointer(_pIns)) = uint8((*(*int32)(unsafe.Pointer(_idx))) >> (uint(8) % 32))
	*(*uint8)(unsafe.Pointer(_pIns + 1)) = uint8(*(*int32)(unsafe.Pointer(_idx)))
	(*(*uint16)(unsafe.Pointer(_pPage + 22)))++
	if int32(preinc164(&(*(*uint8)(unsafe.Pointer(_data + uintptr(int32(*(*uint8)(unsafe.Pointer(_pPage + 9)))+int32(4))))))) != int32(0) {
		goto _8
	}

	(*(*uint8)(unsafe.Pointer(_data + uintptr(int32(*(*uint8)(unsafe.Pointer(_pPage + 9)))+int32(3)))))++
_8:
	if (*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage + 72))) + 33))) == 0 {
		goto _9
	}

	_1198ptrmapPutOvflPtr(tls, _pPage, _pCell, _pRC)
_9:
_2:
}

// _983balance is defined at sqlite3.c:67650:12
func _983balance(tls crt.TLS, _pCur uintptr /* *TBtCursor = SBtCursor */) (r int32) {
	esc := crt.MustMalloc(13)
	var (
		_rc                 int32
		_nMin               int32
		_aBalanceQuickSpace = esc   // *[13]uint8
		_pFree              uintptr // *Tu8 = uint8
		_iPage              int32
		_pPage              uintptr // *TMemPage = SMemPage
		_pParent            uintptr // *TMemPage = SMemPage
		_iIdx               int32
		_pSpace             uintptr // *Tu8 = uint8
	)
	defer crt.Free(esc)
	_rc = int32(0)
	_nMin = int32(((*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pCur + 16))) + 52))) * uint32(2)) / uint32(3))
	_pFree = 0
_1:
	_iPage = int32(*(*int8)(unsafe.Pointer(_pCur + 88)))
	_pPage = *(*uintptr)(unsafe.Pointer(_pCur + 144))
	if _iPage != int32(0) {
		goto _4
	}

	if (*(*uint8)(unsafe.Pointer(_pPage + 12))) == 0 {
		goto _6
	}

	_rc = _1199balance_deeper(tls, _pPage, (_pCur+152)+8)
	if _rc != int32(0) {
		goto _8
	}

	*(*int8)(unsafe.Pointer(_pCur + 88)) = int8(1)
	*(*uint16)(unsafe.Pointer(_pCur + 90)) = uint16(0)
	*(*uint16)(unsafe.Pointer(_pCur + 92)) = uint16(0)
	*(*uintptr)(unsafe.Pointer(_pCur + 152)) = _pPage
	*(*uintptr)(unsafe.Pointer(_pCur + 144)) = *(*uintptr)(unsafe.Pointer((_pCur + 152) + 8))

_8:
	goto _7

_6:
	goto _3

_7:
	goto _5

_4:
	if int32(*(*uint8)(unsafe.Pointer(_pPage + 12))) != int32(0) || int32(*(*uint16)(unsafe.Pointer(_pPage + 20))) > _nMin {
		goto _9
	}

	goto _3

	goto _10

_9:
	_pParent = *(*uintptr)(unsafe.Pointer((_pCur + 152) + 8*uintptr(_iPage-int32(1))))
	_iIdx = int32(*(*uint16)(unsafe.Pointer((_pCur + 92) + 2*uintptr(_iPage-int32(1)))))
	_rc = _161sqlite3PagerWrite(tls, *(*uintptr)(unsafe.Pointer(_pParent + 112)))
	if _rc != int32(0) {
		goto _11
	}

	if (*(*uint8)(unsafe.Pointer(_pPage + 3))) == 0 || int32(*(*uint8)(unsafe.Pointer(_pPage + 12))) != int32(1) || int32(*(*uint16)(unsafe.Pointer(_pPage + 26))) != int32(*(*uint16)(unsafe.Pointer(_pPage + 22))) || (*(*uint32)(unsafe.Pointer(_pParent + 4))) == uint32(1) || int32(*(*uint16)(unsafe.Pointer(_pParent + 22))) != _iIdx {
		goto _12
	}

	_rc = _1200balance_quick(tls, _pParent, _pPage, _aBalanceQuickSpace)
	goto _13

_12:
	_pSpace = _755sqlite3PageMalloc(tls, int32(*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pCur + 16))) + 48))))
	_rc = _1201balance_nonroot(tls, _pParent, _iIdx, _pSpace, bool2int(_iPage == int32(1)), int32(*(*uint8)(unsafe.Pointer(_pCur + 3)))&int32(0x1))
	if _pFree == 0 {
		goto _14
	}

	_753sqlite3PageFree(tls, _pFree)
_14:
	_pFree = _pSpace
_13:
_11:
	*(*uint8)(unsafe.Pointer(_pPage + 12)) = uint8(0)
	_919releasePage(tls, _pPage)
	(*(*int8)(unsafe.Pointer(_pCur + 88)))--

	*(*uintptr)(unsafe.Pointer(_pCur + 144)) = *(*uintptr)(unsafe.Pointer((_pCur + 152) + 8*uintptr(*(*int8)(unsafe.Pointer(_pCur + 88)))))
_10:
_5:
	if _rc == int32(0) {
		goto _1
	}

	goto _3

_3:
	if _pFree == 0 {
		goto _15
	}

	_753sqlite3PageFree(tls, _pFree)
_15:
	return _rc
}

// _984cellSizePtr is defined at sqlite3.c:60910:12
func _984cellSizePtr(tls crt.TLS, _pPage uintptr /* *TMemPage = SMemPage */, _pCell uintptr /* *Tu8 = uint8 */) (r uint16) {
	var (
		_pIter    uintptr // *Tu8 = uint8
		_pEnd     uintptr // *Tu8 = uint8
		_nSize    uint32
		_minLocal int32
	)
	_pIter = _pCell + uintptr(*(*uint8)(unsafe.Pointer(_pPage + 10)))
	_nSize = uint32(*(*uint8)(unsafe.Pointer(_pIter)))
	if _nSize < uint32(0x80) {
		goto _1
	}

	_pEnd = _pIter + 8
	_nSize = uint32(_nSize & uint32(0x7f))
_2:
	_nSize = (_nSize << (uint(7) % 32)) | uint32(int32(*(*uint8)(unsafe.Pointer(preinc40(&_pIter))))&int32(0x7f))
	if (int32(*(*uint8)(unsafe.Pointer(_pIter))) >= int32(0x80)) && (_pIter < _pEnd) {
		goto _2
	}

_1:
	_pIter++
	if (*(*uint8)(unsafe.Pointer(_pPage + 2))) == 0 {
		goto _5
	}

	_pEnd = _pIter + 9
_6:
	if (int32(*(*uint8)(unsafe.Pointer(postinc19(&_pIter))))&int32(0x80)) == 0 || _pIter >= _pEnd {
		goto _7
	}

	goto _6

_7:
_5:
	if _nSize > uint32(*(*uint16)(unsafe.Pointer(_pPage + 14))) {
		goto _8
	}

	_nSize = uint32(_nSize + uint32(int64(_pIter-_pCell)))
	if _nSize >= uint32(4) {
		goto _10
	}

	_nSize = uint32(4)
_10:
	goto _9

_8:
	_minLocal = int32(*(*uint16)(unsafe.Pointer(_pPage + 16)))
	_nSize = uint32(_minLocal) + ((_nSize - uint32(_minLocal)) % ((*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage + 72))) + 52))) - uint32(4)))
	if _nSize <= uint32(*(*uint16)(unsafe.Pointer(_pPage + 14))) {
		goto _11
	}

	_nSize = uint32(_minLocal)
_11:
	_nSize = uint32(_nSize + uint32(int32(4)+int32(uint16(int64(_pIter-_pCell)))))
_9:
	return uint16(_nSize)
}

// _985vdbeSorterRowkey is defined at sqlite3.c:89569:13
func _985vdbeSorterRowkey(tls crt.TLS, _pSorter uintptr /* *TVdbeSorter = SVdbeSorter */, _pnKey uintptr /* *int32 */) (r uintptr /* *void */) {
	var (
		_pKey    uintptr // *void
		_pReader uintptr // *TPmaReader = SPmaReader
	)
	if (*(*uint8)(unsafe.Pointer(_pSorter + 88))) == 0 {
		goto _1
	}

	if (*(*uint8)(unsafe.Pointer(_pSorter + 89))) == 0 {
		goto _3
	}

	_pReader = *(*uintptr)(unsafe.Pointer(_pSorter + 16))
	goto _4

_3:
	_pReader = (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pSorter + 24))) + 24))) + 80*uintptr(*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pSorter + 24))) + 16))) + 4)))
_4:
	*(*int32)(unsafe.Pointer(_pnKey)) = *(*int32)(unsafe.Pointer(_pReader + 20))
	_pKey = *(*uintptr)(unsafe.Pointer(_pReader + 40))
	goto _2

_1:
	*(*int32)(unsafe.Pointer(_pnKey)) = *(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pSorter + 56))))
	_pKey = *(*uintptr)(unsafe.Pointer(_pSorter + 56)) + 16*uintptr(1)
_2:
	return _pKey
}

// _986sqlite3VdbeRecordCompare is defined at sqlite3.c:76363:20
func _986sqlite3VdbeRecordCompare(tls crt.TLS, _nKey1 int32, _pKey1 uintptr /* *void */, _pPKey2 uintptr /* *TUnpackedRecord = SUnpackedRecord */) (r int32) {
	return _1202sqlite3VdbeRecordCompareWithSkip(tls, _nKey1, _pKey1, _pPKey2, int32(0))
}

// _987a [8]int16, escapes: true, sqlite3.c:29547:17
var _987a = ds + 8838

// _988vdbeSorterSort is defined at sqlite3.c:88307:12
func _988vdbeSorterSort(tls crt.TLS, _pTask uintptr /* *TSortSubtask = SSortSubtask */, _pList uintptr /* *TSorterList = SSorterList */) (r int32) {
	var (
		_i     int32
		_aSlot uintptr // **TSorterRecord = SSorterRecord
		_p     uintptr // *TSorterRecord = SSorterRecord
		_rc    int32
		_pNext uintptr // *TSorterRecord = SSorterRecord
	)
	_rc = _1203vdbeSortAllocUnpacked(tls, _pTask)
	if _rc == int32(0) {
		goto _1
	}

	return _rc

_1:
	_p = *(*uintptr)(unsafe.Pointer(_pList))
	*(*uintptr)(unsafe.Pointer(_pTask + 64)) = _1204vdbeSorterGetCompare(tls, *(*uintptr)(unsafe.Pointer(_pTask + 16)))
	_aSlot = _135sqlite3MallocZero(tls, uint64(512))
	if _aSlot != 0 {
		goto _2
	}

	return int32(7)

_2:
_3:
	if _p == 0 {
		goto _4
	}

	if (*(*uintptr)(unsafe.Pointer(_pList + 8))) == 0 {
		goto _5
	}

	if _p != (*(*uintptr)(unsafe.Pointer(_pList + 8))) {
		goto _7
	}

	_pNext = null
	goto _8

_7:
	_pNext = (*(*uintptr)(unsafe.Pointer(_pList + 8))) + uintptr(*(*int32)(unsafe.Pointer(_p + 8)))
_8:
	goto _6

_5:
	_pNext = *(*uintptr)(unsafe.Pointer(_p + 8))
_6:
	*(*uintptr)(unsafe.Pointer(_p + 8)) = null
	_i = int32(0)
_9:
	if (*(*uintptr)(unsafe.Pointer(_aSlot + 8*uintptr(_i)))) == 0 {
		goto _11
	}

	_p = _1205vdbeSorterMerge(tls, _pTask, _p, *(*uintptr)(unsafe.Pointer(_aSlot + 8*uintptr(_i))))
	*(*uintptr)(unsafe.Pointer(_aSlot + 8*uintptr(_i))) = null
	_i++
	goto _9

_11:
	*(*uintptr)(unsafe.Pointer(_aSlot + 8*uintptr(_i))) = _p
	_p = _pNext
	goto _3

_4:
	_p = null
	_i = int32(0)
_12:
	if _i >= int32(64) {
		goto _14
	}

	if (*(*uintptr)(unsafe.Pointer(_aSlot + 8*uintptr(_i)))) != 0 {
		goto _15
	}

	goto _13

_15:
	_p = func() uintptr {
		if _p != 0 {
			return _1205vdbeSorterMerge(tls, _pTask, _p, *(*uintptr)(unsafe.Pointer(_aSlot + 8*uintptr(_i))))
		}
		return *(*uintptr)(unsafe.Pointer(_aSlot + 8*uintptr(_i)))
	}()

_13:
	_i++
	goto _12

_14:
	*(*uintptr)(unsafe.Pointer(_pList)) = _p
	Xsqlite3_free(tls, _aSlot)

	return int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTask + 24))) + 19)))
}

// _989vdbeSorterFlushPMA is defined at sqlite3.c:88607:12
func _989vdbeSorterFlushPMA(tls crt.TLS, _pSorter uintptr /* *TVdbeSorter = SVdbeSorter */) (r int32) {
	var (
		_rc      int32
		_i       int32
		_pTask   uintptr // *TSortSubtask = SSortSubtask
		_nWorker int32
		_iTest   int32
		_aMem    uintptr // *Tu8 = uint8
		_pCtx    uintptr // *void
	)
	_rc = int32(0)
	_pTask = 0
	_nWorker = int32(*(*uint8)(unsafe.Pointer(_pSorter + 91))) - int32(1)
	*(*uint8)(unsafe.Pointer(_pSorter + 88)) = uint8(1)
	_i = int32(0)
_1:
	if _i >= _nWorker {
		goto _3
	}

	_iTest = ((int32(*(*uint8)(unsafe.Pointer(_pSorter + 90))) + _i) + int32(1)) % _nWorker
	_pTask = (_pSorter + 96) + 104*uintptr(_iTest)
	if (*(*int32)(unsafe.Pointer(_pTask + 8))) == 0 {
		goto _4
	}

	_rc = _1206vdbeSorterJoinThread(tls, _pTask)
_4:
	if _rc == int32(0) && (*(*uintptr)(unsafe.Pointer(_pTask))) != 0 {
		goto _5
	}

	goto _3

_5:
	_i++
	goto _1

_3:
	if _rc != int32(0) {
		goto _6
	}

	if _i != _nWorker {
		goto _7
	}

	_rc = _1207vdbeSorterListToPMA(tls, (_pSorter+96)+104*uintptr(_nWorker), _pSorter+56)
	goto _8

_7:
	_aMem = *(*uintptr)(unsafe.Pointer((_pTask + 32) + 8))
	_pCtx = _pTask

	*(*uint8)(unsafe.Pointer(_pSorter + 90)) = uint8(int64((_pTask - (_pSorter + 96)) / 104))
	*(*SSorterList)(unsafe.Pointer(_pTask + 32)) = *(*SSorterList)(unsafe.Pointer(_pSorter + 56))
	*(*uintptr)(unsafe.Pointer(_pSorter + 56)) = null
	*(*int32)(unsafe.Pointer((_pSorter + 56) + 16)) = int32(0)
	if _aMem == 0 {
		goto _9
	}

	*(*uintptr)(unsafe.Pointer((_pSorter + 56) + 8)) = _aMem
	*(*int32)(unsafe.Pointer(_pSorter + 84)) = _109sqlite3MallocSize(tls, _aMem)
	goto _10

_9:
	if (*(*uintptr)(unsafe.Pointer((_pSorter + 56) + 8))) == 0 {
		goto _11
	}

	*(*uintptr)(unsafe.Pointer((_pSorter + 56) + 8)) = _198sqlite3Malloc(tls, uint64(*(*int32)(unsafe.Pointer(_pSorter + 84))))
	if (*(*uintptr)(unsafe.Pointer((_pSorter + 56) + 8))) != 0 {
		goto _12
	}

	return int32(7)

_12:
_11:
_10:
	_rc = _1208vdbeSorterCreateThread(tls, _pTask, fp11(_1209vdbeSorterFlushThread), _pCtx)
_8:
_6:
	return _rc
}

// _990vdbeSorterJoinAll is defined at sqlite3.c:88052:12
func _990vdbeSorterJoinAll(tls crt.TLS, _pSorter uintptr /* *TVdbeSorter = SVdbeSorter */, _rcin int32) (r int32) {
	var (
		_rc    int32
		_i     int32
		_pTask uintptr // *TSortSubtask = SSortSubtask
		_rc2   int32
	)
	_rc = _rcin
	_i = int32(*(*uint8)(unsafe.Pointer(_pSorter + 91))) - int32(1)
_1:
	if _i < int32(0) {
		goto _3
	}

	_pTask = (_pSorter + 96) + 104*uintptr(_i)
	_rc2 = _1206vdbeSorterJoinThread(tls, _pTask)
	if _rc != int32(0) {
		goto _4
	}

	_rc = _rc2
_4:
	_i--
	goto _1

_3:
	return _rc
}

// _991vdbeSorterSetupMerge is defined at sqlite3.c:89397:12
func _991vdbeSorterSetupMerge(tls crt.TLS, _pSorter uintptr /* *TVdbeSorter = SVdbeSorter */) (r int32) {
	esc := crt.MustMalloc(8)
	var (
		_rc       int32
		_pTask0   uintptr // *TSortSubtask = SSortSubtask
		_pMain    = esc   // **TMergeEngine = SMergeEngine
		_db       uintptr // *Tsqlite3 = Ssqlite3
		_i        int32
		_xCompare uintptr // TSorterCompare = *func(crt.TLS, ...tr, int32, uintptr, int32) int32
		_iTask    int32
		_pReadr   uintptr // *TPmaReader = SPmaReader
		_pLast    uintptr // *TSortSubtask = SSortSubtask
		_pIncr    uintptr // *TIncrMerger = SIncrMerger
		_p        uintptr // *TPmaReader = SPmaReader
	)
	defer crt.Free(esc)
	_pTask0 = _pSorter + 96
	*(*uintptr)(unsafe.Pointer(_pMain)) = 0
	_db = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTask0 + 16))) + 32))
	_xCompare = _1204vdbeSorterGetCompare(tls, _pSorter)
	_i = int32(0)
_1:
	if _i >= int32(*(*uint8)(unsafe.Pointer(_pSorter + 91))) {
		goto _3
	}

	*(*uintptr)(unsafe.Pointer(((_pSorter + 96) + 104*uintptr(_i)) + 64)) = _xCompare
	_i++
	goto _1

_3:
	_rc = _1210vdbeSorterMergeTreeBuild(tls, _pSorter, _pMain)
	if _rc != int32(0) {
		goto _4
	}

	if (*(*uint8)(unsafe.Pointer(_pSorter + 89))) == 0 {
		goto _5
	}

	_pReadr = 0
	_pLast = (_pSorter + 96) + 104*uintptr(int32(*(*uint8)(unsafe.Pointer(_pSorter + 91)))-int32(1))
	_rc = _1203vdbeSortAllocUnpacked(tls, _pLast)
	if _rc != int32(0) {
		goto _7
	}

	_pReadr = _295sqlite3DbMallocZero(tls, _db, uint64(80))
	*(*uintptr)(unsafe.Pointer(_pSorter + 16)) = _pReadr
	if _pReadr != 0 {
		goto _8
	}

	_rc = int32(7)
_8:
_7:
	if _rc != int32(0) {
		goto _9
	}

	_rc = _1211vdbeIncrMergerNew(tls, _pLast, *(*uintptr)(unsafe.Pointer(_pMain)), _pReadr+72)
	if _rc != int32(0) {
		goto _10
	}

	_1212vdbeIncrMergerSetThreads(tls, *(*uintptr)(unsafe.Pointer(_pReadr + 72)))
	_iTask = int32(0)
_11:
	if _iTask >= (int32(*(*uint8)(unsafe.Pointer(_pSorter + 91))) - int32(1)) {
		goto _13
	}

	if set4(&_pIncr, *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pMain))) + 24))) + 80*uintptr(_iTask)) + 72))) == 0 {
		goto _14
	}

	_1212vdbeIncrMergerSetThreads(tls, _pIncr)

_14:
	_iTask++
	goto _11

_13:
	_iTask = int32(0)
_15:
	if _rc != int32(0) || _iTask >= int32(*(*uint8)(unsafe.Pointer(_pSorter + 91))) {
		goto _17
	}

	_p = (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pMain))) + 24))) + 80*uintptr(_iTask)

	_rc = _1213vdbePmaReaderIncrInit(tls, _p, int32(1))
	_iTask++
	goto _15

_17:
_10:
	*(*uintptr)(unsafe.Pointer(_pMain)) = null
_9:
	if _rc != int32(0) {
		goto _18
	}

	_rc = _1214vdbePmaReaderIncrMergeInit(tls, _pReadr, int32(2))
_18:
	goto _6

_5:
	_rc = _1215vdbeMergeEngineInit(tls, _pTask0, *(*uintptr)(unsafe.Pointer(_pMain)), int32(0))
	*(*uintptr)(unsafe.Pointer(_pSorter + 24)) = *(*uintptr)(unsafe.Pointer(_pMain))
	*(*uintptr)(unsafe.Pointer(_pMain)) = null
_6:
_4:
	if _rc == int32(0) {
		goto _19
	}

	_999vdbeMergeEngineFree(tls, *(*uintptr)(unsafe.Pointer(_pMain)))
_19:
	return _rc
}

type SSorterRecord struct {
	XnVal int32
	Xu    struct{ X int64 }
}

// _992vdbePmaReaderNext is defined at sqlite3.c:87590:12
func _992vdbePmaReaderNext(tls crt.TLS, _pReadr uintptr /* *TPmaReader = SPmaReader */) (r int32) {
	esc := crt.MustMalloc(8)
	var (
		_rc    int32
		_nRec  = esc   // *Tu64 = Tsqlite_uint64 = uint64
		_pIncr uintptr // *TIncrMerger = SIncrMerger
		_bEof  int32
	)
	defer crt.Free(esc)
	_rc = int32(0)
	*(*uint64)(unsafe.Pointer(_nRec)) = uint64(0)
	if (*(*int64)(unsafe.Pointer(_pReadr))) < (*(*int64)(unsafe.Pointer(_pReadr + 8))) {
		goto _1
	}

	_pIncr = *(*uintptr)(unsafe.Pointer(_pReadr + 72))
	_bEof = int32(1)
	if _pIncr == 0 {
		goto _2
	}

	_rc = _1216vdbeIncrSwap(tls, _pIncr)
	if _rc != int32(0) || (*(*int32)(unsafe.Pointer(_pIncr + 28))) != int32(0) {
		goto _3
	}

	_rc = _1217vdbePmaReaderSeek(tls, *(*uintptr)(unsafe.Pointer(_pIncr)), _pReadr, _pIncr+40, *(*int64)(unsafe.Pointer(_pIncr + 16)))
	_bEof = int32(0)
_3:
_2:
	if _bEof == 0 {
		goto _4
	}

	_998vdbePmaReaderClear(tls, _pReadr)
	return _rc

_4:
_1:
	if _rc != int32(0) {
		goto _5
	}

	_rc = _1218vdbePmaReadVarint(tls, _pReadr, _nRec)
_5:
	if _rc != int32(0) {
		goto _6
	}

	*(*int32)(unsafe.Pointer(_pReadr + 20)) = int32(*(*uint64)(unsafe.Pointer(_nRec)))
	_rc = _1219vdbePmaReadBlob(tls, _pReadr, int32(*(*uint64)(unsafe.Pointer(_nRec))), _pReadr+40)
_6:
	return _rc
}

// _993vdbeMergeEngineStep is defined at sqlite3.c:88522:12
func _993vdbeMergeEngineStep(tls crt.TLS, _pMerger uintptr /* *TMergeEngine = SMergeEngine */, _pbEof uintptr /* *int32 */) (r int32) {
	esc := crt.MustMalloc(4)
	var (
		_rc      int32
		_iPrev   int32
		_pTask   uintptr // *TSortSubtask = SSortSubtask
		_i       int32
		_pReadr1 uintptr // *TPmaReader = SPmaReader
		_pReadr2 uintptr // *TPmaReader = SPmaReader
		_bCached = esc   // *int32
		_iRes    int32
	)
	defer crt.Free(esc)
	_iPrev = *(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pMerger + 16))) + 4))
	_pTask = *(*uintptr)(unsafe.Pointer(_pMerger + 8))
	_rc = _992vdbePmaReaderNext(tls, (*(*uintptr)(unsafe.Pointer(_pMerger + 24)))+80*uintptr(_iPrev))
	if _rc != int32(0) {
		goto _1
	}

	*(*int32)(unsafe.Pointer(_bCached)) = int32(0)
	_pReadr1 = (*(*uintptr)(unsafe.Pointer(_pMerger + 24))) + 80*uintptr(_iPrev&int32(0xfffe))
	_pReadr2 = (*(*uintptr)(unsafe.Pointer(_pMerger + 24))) + 80*uintptr(_iPrev|int32(0x1))
	_i = ((*(*int32)(unsafe.Pointer(_pMerger))) + _iPrev) / int32(2)
_2:
	if _i <= int32(0) {
		goto _4
	}

	if (*(*uintptr)(unsafe.Pointer(_pReadr1 + 24))) != 0 {
		goto _5
	}

	_iRes = int32(1)
	goto _6

_5:
	if (*(*uintptr)(unsafe.Pointer(_pReadr2 + 24))) != 0 {
		goto _7
	}

	_iRes = int32(-1)
	goto _8

_7:
	_iRes = fn165(*(*uintptr)(unsafe.Pointer(_pTask + 64)))(tls, _pTask, _bCached, *(*uintptr)(unsafe.Pointer(_pReadr1 + 40)), *(*int32)(unsafe.Pointer(_pReadr1 + 20)), *(*uintptr)(unsafe.Pointer(_pReadr2 + 40)), *(*int32)(unsafe.Pointer(_pReadr2 + 20)))
_8:
_6:
	if _iRes >= int32(0) && (_iRes != int32(0) || _pReadr1 >= _pReadr2) {
		goto _9
	}

	*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pMerger + 16))) + 4*uintptr(_i))) = int32(int64((_pReadr1 - (*(*uintptr)(unsafe.Pointer(_pMerger + 24)))) / 80))
	_pReadr2 = (*(*uintptr)(unsafe.Pointer(_pMerger + 24))) + 80*uintptr(*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pMerger + 16))) + 4*uintptr(_i^int32(0x1)))))
	*(*int32)(unsafe.Pointer(_bCached)) = int32(0)
	goto _10

_9:
	if (*(*uintptr)(unsafe.Pointer(_pReadr1 + 24))) == 0 {
		goto _11
	}

	*(*int32)(unsafe.Pointer(_bCached)) = int32(0)
_11:
	*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pMerger + 16))) + 4*uintptr(_i))) = int32(int64((_pReadr2 - (*(*uintptr)(unsafe.Pointer(_pMerger + 24)))) / 80))
	_pReadr1 = (*(*uintptr)(unsafe.Pointer(_pMerger + 24))) + 80*uintptr(*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pMerger + 16))) + 4*uintptr(_i^int32(0x1)))))
_10:
	_i = _i / int32(2)
	goto _2

_4:
	*(*int32)(unsafe.Pointer(_pbEof)) = bool2int((*(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pMerger + 24))) + 80*uintptr(*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pMerger + 16))) + 4)))) + 24))) == 0)
_1:
	return func() int32 {
		if _rc == int32(0) {
			return int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTask + 24))) + 19)))
		}
		return _rc
	}()
}

// _994vdbeSorterRecordFree is defined at sqlite3.c:87940:13
func _994vdbeSorterRecordFree(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pRecord uintptr /* *TSorterRecord = SSorterRecord */) {
	var (
		_p     uintptr // *TSorterRecord = SSorterRecord
		_pNext uintptr // *TSorterRecord = SSorterRecord
	)
	_p = _pRecord
_1:
	if _p == 0 {
		goto _3
	}

	_pNext = *(*uintptr)(unsafe.Pointer(_p + 8))
	_181sqlite3DbFree(tls, _db, _p)
	_p = _pNext
	goto _1

_3:
}

// _995sqlite3HeapNearlyFull is defined at sqlite3.c:24962:20
func _995sqlite3HeapNearlyFull(tls crt.TLS) (r int32) {
	return *(*int32)(unsafe.Pointer(_107mem0 + 16))
}

// _996btreeDropTable is defined at sqlite3.c:68463:12
func _996btreeDropTable(tls crt.TLS, _p uintptr /* *TBtree = SBtree */, _iTable uint32, _piMoved uintptr /* *int32 */) (r int32) {
	esc := crt.MustMalloc(56)
	var (
		_rc          = esc      // *int32
		_pPage       = esc + 16 // **TMemPage = SMemPage
		_pBt         uintptr    // *TBtShared = SBtShared
		_maxRootPgno = esc + 32 // *TPgno = Tu32 = uint32
		_pMove       = esc + 48 // **TMemPage = SMemPage
	)
	defer crt.Free(esc)
	*(*uintptr)(unsafe.Pointer(_pPage)) = 0
	_pBt = *(*uintptr)(unsafe.Pointer(_p + 8))

	*(*int32)(unsafe.Pointer(_rc)) = _363btreeGetPage(tls, _pBt, _iTable, _pPage, int32(0))
	if (*(*int32)(unsafe.Pointer(_rc))) == 0 {
		goto _1
	}

	return *(*int32)(unsafe.Pointer(_rc))

_1:
	*(*int32)(unsafe.Pointer(_rc)) = _711sqlite3BtreeClearTable(tls, _p, int32(_iTable), null)
	if (*(*int32)(unsafe.Pointer(_rc))) == 0 {
		goto _2
	}

	_919releasePage(tls, *(*uintptr)(unsafe.Pointer(_pPage)))
	return *(*int32)(unsafe.Pointer(_rc))

_2:
	*(*int32)(unsafe.Pointer(_piMoved)) = int32(0)
	if (*(*uint8)(unsafe.Pointer(_pBt + 33))) == 0 {
		goto _3
	}

	_145sqlite3BtreeGetMeta(tls, _p, int32(4), _maxRootPgno)
	if _iTable != (*(*uint32)(unsafe.Pointer(_maxRootPgno))) {
		goto _5
	}

	_1220freePage(tls, *(*uintptr)(unsafe.Pointer(_pPage)), _rc)
	_919releasePage(tls, *(*uintptr)(unsafe.Pointer(_pPage)))
	if (*(*int32)(unsafe.Pointer(_rc))) == int32(0) {
		goto _7
	}

	return *(*int32)(unsafe.Pointer(_rc))

_7:
	goto _6

_5:
	_919releasePage(tls, *(*uintptr)(unsafe.Pointer(_pPage)))
	*(*int32)(unsafe.Pointer(_rc)) = _363btreeGetPage(tls, _pBt, *(*uint32)(unsafe.Pointer(_maxRootPgno)), _pMove, int32(0))
	if (*(*int32)(unsafe.Pointer(_rc))) == int32(0) {
		goto _8
	}

	return *(*int32)(unsafe.Pointer(_rc))

_8:
	*(*int32)(unsafe.Pointer(_rc)) = _920relocatePage(tls, _pBt, *(*uintptr)(unsafe.Pointer(_pMove)), uint8(1), uint32(0), _iTable, int32(0))
	_919releasePage(tls, *(*uintptr)(unsafe.Pointer(_pMove)))
	if (*(*int32)(unsafe.Pointer(_rc))) == int32(0) {
		goto _9
	}

	return *(*int32)(unsafe.Pointer(_rc))

_9:
	*(*uintptr)(unsafe.Pointer(_pMove)) = null
	*(*int32)(unsafe.Pointer(_rc)) = _363btreeGetPage(tls, _pBt, *(*uint32)(unsafe.Pointer(_maxRootPgno)), _pMove, int32(0))
	_1220freePage(tls, *(*uintptr)(unsafe.Pointer(_pMove)), _rc)
	_919releasePage(tls, *(*uintptr)(unsafe.Pointer(_pMove)))
	if (*(*int32)(unsafe.Pointer(_rc))) == int32(0) {
		goto _10
	}

	return *(*int32)(unsafe.Pointer(_rc))

_10:
	*(*int32)(unsafe.Pointer(_piMoved)) = int32(*(*uint32)(unsafe.Pointer(_maxRootPgno)))
_6:
	(*(*uint32)(unsafe.Pointer(_maxRootPgno)))--
_11:
	if (*(*uint32)(unsafe.Pointer(_maxRootPgno))) != (uint32(_149sqlite3PendingByte)/(*(*uint32)(unsafe.Pointer(_pBt + 48))))+uint32(1) && _595ptrmapPageno(tls, _pBt, *(*uint32)(unsafe.Pointer(_maxRootPgno))) != (*(*uint32)(unsafe.Pointer(_maxRootPgno))) {
		goto _12
	}

	(*(*uint32)(unsafe.Pointer(_maxRootPgno)))--
	goto _11

_12:
	*(*int32)(unsafe.Pointer(_rc)) = _156sqlite3BtreeUpdateMeta(tls, _p, int32(4), *(*uint32)(unsafe.Pointer(_maxRootPgno)))
	goto _4

_3:
	_1220freePage(tls, *(*uintptr)(unsafe.Pointer(_pPage)), _rc)
	_919releasePage(tls, *(*uintptr)(unsafe.Pointer(_pPage)))
_4:
	return *(*int32)(unsafe.Pointer(_rc))
}

// _997clearDatabasePage is defined at sqlite3.c:68348:12
func _997clearDatabasePage(tls crt.TLS, _pBt uintptr /* *TBtShared = SBtShared */, _pgno uint32, _freePageFlag int32, _pnChange uintptr /* *int32 */) (r int32) {
	esc := crt.MustMalloc(56)
	var (
		_pPage = esc      // **TMemPage = SMemPage
		_rc    = esc + 16 // *int32
		_pCell uintptr    // *uint8
		_i     int32
		_hdr   int32
		_info  = esc + 32 // *TCellInfo = SCellInfo
	)
	defer crt.Free(esc)

	if _pgno <= _332btreePagecount(tls, _pBt) {
		goto _1
	}

	return _556sqlite3CorruptError(tls, int32(68363))

_1:
	*(*int32)(unsafe.Pointer(_rc)) = _1187getAndInitPage(tls, _pBt, _pgno, _pPage, null, int32(0))
	if (*(*int32)(unsafe.Pointer(_rc))) == 0 {
		goto _2
	}

	return *(*int32)(unsafe.Pointer(_rc))

_2:
	if (*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage))) + 1))) == 0 {
		goto _3
	}

	*(*int32)(unsafe.Pointer(_rc)) = _556sqlite3CorruptError(tls, int32(68368))
	goto _cleardatabasepage_out

_3:
	*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage))) + 1)) = uint8(1)
	_hdr = int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage))) + 9)))
	_i = int32(0)
_4:
	if _i >= int32(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage))) + 22))) {
		goto _6
	}

	_pCell = (*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pPage)) + 80))) + uintptr(int32(*(*uint16)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pPage)) + 24)))&((int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pPage)) + 96))) + uintptr(int32(2)*_i))))<<(uint(8)%32))|int32(*(*uint8)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pPage)) + 96))) + uintptr(int32(2)*_i)) + 1)))))
	if (*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage))) + 8))) != 0 {
		goto _7
	}

	*(*int32)(unsafe.Pointer(_rc)) = _997clearDatabasePage(tls, _pBt, _328sqlite3Get4byte(tls, _pCell), int32(1), _pnChange)
	if (*(*int32)(unsafe.Pointer(_rc))) == 0 {
		goto _8
	}

	goto _cleardatabasepage_out

_8:
_7:
	*(*int32)(unsafe.Pointer(_rc)) = _980clearCell(tls, *(*uintptr)(unsafe.Pointer(_pPage)), _pCell, _info)
	if (*(*int32)(unsafe.Pointer(_rc))) == 0 {
		goto _9
	}

	goto _cleardatabasepage_out

_9:
	_i++
	goto _4

_6:
	if (*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage))) + 8))) != 0 {
		goto _10
	}

	*(*int32)(unsafe.Pointer(_rc)) = _997clearDatabasePage(tls, _pBt, _328sqlite3Get4byte(tls, (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage))) + 80)))+uintptr(_hdr+int32(8))), int32(1), _pnChange)
	if (*(*int32)(unsafe.Pointer(_rc))) == 0 {
		goto _12
	}

	goto _cleardatabasepage_out

_12:
	goto _11

_10:
	if _pnChange == 0 {
		goto _13
	}

	{
		p := &(*(*int32)(unsafe.Pointer(_pnChange)))
		*p = int32(int32(*p) + int32(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage))) + 22))))
	}
_13:
_11:
	if _freePageFlag == 0 {
		goto _14
	}

	_1220freePage(tls, *(*uintptr)(unsafe.Pointer(_pPage)), _rc)
	goto _15

_14:
	if set5(&(*(*int32)(unsafe.Pointer(_rc))), _161sqlite3PagerWrite(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage))) + 112)))) != int32(0) {
		goto _16
	}

	_561zeroPage(tls, *(*uintptr)(unsafe.Pointer(_pPage)), int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage))) + 80))) + uintptr(_hdr))))|int32(0x8))
_16:
_15:
	goto _cleardatabasepage_out
_cleardatabasepage_out:
	*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage))) + 1)) = uint8(0)
	_919releasePage(tls, *(*uintptr)(unsafe.Pointer(_pPage)))
	return *(*int32)(unsafe.Pointer(_rc))
}

// _998vdbePmaReaderClear is defined at sqlite3.c:87382:13
func _998vdbePmaReaderClear(tls crt.TLS, _pReadr uintptr /* *TPmaReader = SPmaReader */) {
	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_pReadr + 32)))
	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_pReadr + 48)))
	if (*(*uintptr)(unsafe.Pointer(_pReadr + 64))) == 0 {
		goto _1
	}

	_874sqlite3OsUnfetch(tls, *(*uintptr)(unsafe.Pointer(_pReadr + 24)), int64(0), *(*uintptr)(unsafe.Pointer(_pReadr + 64)))
_1:
	_1221vdbeIncrFree(tls, *(*uintptr)(unsafe.Pointer(_pReadr + 72)))
	crt.Xmemset(tls, _pReadr, int32(0), uint64(80))
}

// _999vdbeMergeEngineFree is defined at sqlite3.c:88105:13
func _999vdbeMergeEngineFree(tls crt.TLS, _pMerger uintptr /* *TMergeEngine = SMergeEngine */) {
	var _i int32

	if _pMerger == 0 {
		goto _1
	}

	_i = int32(0)
_2:
	if _i >= (*(*int32)(unsafe.Pointer(_pMerger))) {
		goto _4
	}

	_998vdbePmaReaderClear(tls, (*(*uintptr)(unsafe.Pointer(_pMerger + 24)))+80*uintptr(_i))
	_i++
	goto _2

_4:
_1:
	Xsqlite3_free(tls, _pMerger)
}

// _1000vdbeSortSubtaskCleanup is defined at sqlite3.c:87953:13
func _1000vdbeSortSubtaskCleanup(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pTask uintptr /* *TSortSubtask = SSortSubtask */) {
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_pTask + 24)))
	if (*(*uintptr)(unsafe.Pointer((_pTask + 32) + 8))) == 0 {
		goto _1
	}

	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer((_pTask + 32) + 8)))
	goto _2

_1:
	_994vdbeSorterRecordFree(tls, null, *(*uintptr)(unsafe.Pointer(_pTask + 32)))
_2:
	if (*(*uintptr)(unsafe.Pointer(_pTask + 72))) == 0 {
		goto _3
	}

	_1051sqlite3OsCloseFree(tls, *(*uintptr)(unsafe.Pointer(_pTask + 72)))
_3:
	if (*(*uintptr)(unsafe.Pointer(_pTask + 88))) == 0 {
		goto _4
	}

	_1051sqlite3OsCloseFree(tls, *(*uintptr)(unsafe.Pointer(_pTask + 88)))
_4:
	crt.Xmemset(tls, _pTask, int32(0), uint64(104))
}

// _1001corruptSchema is defined at sqlite3.c:116810:13
func _1001corruptSchema(tls crt.TLS, _pData uintptr /* *TInitData = struct{Xdb *Ssqlite...sg **int8;XiDb int32;Xrc int32;} */, _zObj uintptr /* *int8 */, _zExtra uintptr /* *int8 */) {
	var (
		_db uintptr // *Tsqlite3 = Ssqlite3
		_z  uintptr // *int8
	)
	_db = *(*uintptr)(unsafe.Pointer(_pData))
	if (*(*uint8)(unsafe.Pointer(_db + 97))) != 0 || ((*(*uint32)(unsafe.Pointer(_db + 48)))&uint32(0x1)) != uint32(0) {
		goto _1
	}

	if _zObj != 0 {
		goto _2
	}

	_zObj = ts + 7810 /* "?" */
_2:
	_z = _226sqlite3MPrintf(tls, _db, ts+22791 /* "malformed database schema (%s)" */, _zObj)
	if _zExtra == 0 {
		goto _3
	}

	_z = _226sqlite3MPrintf(tls, _db, ts+22822 /* "%z - %s" */, _z, _zExtra)
_3:
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pData + 8)))))
	*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pData + 8)))) = _z
_1:
	*(*int32)(unsafe.Pointer(_pData + 20)) = func() int32 {
		if (*(*uint8)(unsafe.Pointer(_db + 97))) != 0 {
			return int32(7)
		}
		return _556sqlite3CorruptError(tls, int32(116824))
	}()
}

// _1002sqlite3Atoi is defined at sqlite3.c:28883:20
func _1002sqlite3Atoi(tls crt.TLS, _z uintptr /* *int8 */) (r int32) {
	esc := crt.MustMalloc(4)
	var _x = esc // *int32
	defer crt.Free(esc)
	*(*int32)(unsafe.Pointer(_x)) = int32(0)
	if _z == 0 {
		goto _1
	}

	_1004sqlite3GetInt32(tls, _z, _x)
_1:
	return *(*int32)(unsafe.Pointer(_x))
}

// _1003sqlite3FindIndex is defined at sqlite3.c:101118:22
func _1003sqlite3FindIndex(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _zName uintptr /* *int8 */, _zDb uintptr /* *int8 */) (r uintptr /* *TIndex = SIndex */) {
	var (
		_p       uintptr // *TIndex = SIndex
		_i       int32
		_j       int32
		_pSchema uintptr // *TSchema = SSchema
	)
	_p = 0

	_i = int32(0)
_1:
	if _i >= (*(*int32)(unsafe.Pointer(_db + 40))) {
		goto _3
	}

	_j = func() int32 {
		if _i < int32(2) {
			return _i ^ int32(1)
		}
		return _i
	}()
	_pSchema = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_j)) + 24))

	if _zDb == 0 || _110sqlite3StrICmp(tls, _zDb, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_j)))) == 0 {
		goto _4
	}

	goto _2

_4:
	_p = _424sqlite3HashFind(tls, _pSchema+32, _zName)
	if _p == 0 {
		goto _5
	}

	goto _3

_5:
_2:
	_i++
	goto _1

_3:
	return _p
}

// _1004sqlite3GetInt32 is defined at sqlite3.c:28824:20
func _1004sqlite3GetInt32(tls crt.TLS, _zNum uintptr /* *int8 */, _pValue uintptr /* *int32 */) (r int32) {
	esc := crt.MustMalloc(4)
	var (
		_v   int64
		_i   int32
		_c   int32
		_neg int32
		_u   = esc // *Tu32 = uint32
	)
	defer crt.Free(esc)
	_v = int64(0)
	_neg = int32(0)
	if int32(*(*int8)(unsafe.Pointer(_zNum))) != int32('-') {
		goto _1
	}

	_neg = int32(1)
	_zNum++
	goto _2

_1:
	if int32(*(*int8)(unsafe.Pointer(_zNum))) != int32('+') {
		goto _3
	}

	_zNum++
	goto _4

_3:
	if int32(*(*int8)(unsafe.Pointer(_zNum))) != int32('0') || int32(*(*int8)(unsafe.Pointer(_zNum + 1))) != int32('x') && int32(*(*int8)(unsafe.Pointer(_zNum + 1))) != int32('X') || int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(uint8(*(*int8)(unsafe.Pointer(_zNum + 2)))))))&int32(0x8) == 0 {
		goto _5
	}

	*(*uint32)(unsafe.Pointer(_u)) = uint32(0)
	_zNum += uintptr(2)
_6:
	if int32(*(*int8)(unsafe.Pointer(_zNum))) != int32('0') {
		goto _7
	}

	_zNum++
	goto _6

_7:
	_i = int32(0)
_8:
	if int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(uint8(*(*int8)(unsafe.Pointer(_zNum + uintptr(_i))))))))&int32(0x8) == 0 || _i >= int32(8) {
		goto _10
	}

	*(*uint32)(unsafe.Pointer(_u)) = ((*(*uint32)(unsafe.Pointer(_u))) * uint32(16)) + uint32(_508sqlite3HexToInt(tls, int32(*(*int8)(unsafe.Pointer(_zNum + uintptr(_i))))))
	_i++
	goto _8

_10:
	if ((*(*uint32)(unsafe.Pointer(_u)))&uint32(0x80000000)) != uint32(0) || (int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(uint8(*(*int8)(unsafe.Pointer(_zNum + uintptr(_i))))))))&int32(0x8)) != int32(0) {
		goto _11
	}

	crt.Xmemcpy(tls, _pValue, _u, uint64(4))
	return int32(1)

	goto _12

_11:
	return int32(0)

_12:
_5:
_4:
_2:
	if int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(uint8(*(*int8)(unsafe.Pointer(_zNum)))))))&int32(0x4) != 0 {
		goto _13
	}

	return int32(0)

_13:
_14:
	if int32(*(*int8)(unsafe.Pointer(_zNum))) != int32('0') {
		goto _15
	}

	_zNum++
	goto _14

_15:
	_i = int32(0)
_16:
	if _i >= int32(11) || set5(&_c, int32(*(*int8)(unsafe.Pointer(_zNum + uintptr(_i))))-int32('0')) < int32(0) || _c > int32(9) {
		goto _18
	}

	_v = (_v * int64(10)) + int64(_c)
	_i++
	goto _16

_18:
	if _i <= int32(10) {
		goto _19
	}

	return int32(0)

_19:
	if (_v - int64(_neg)) <= int64(2147483647) {
		goto _20
	}

	return int32(0)

_20:
	if _neg == 0 {
		goto _21
	}

	_v = -_v
_21:
	*(*int32)(unsafe.Pointer(_pValue)) = int32(_v)
	return int32(1)
}

type SanalysisInfo struct {
	Xdb        uintptr // *Ssqlite3
	XzDatabase uintptr // *int8
}

// _1005analysisLoader is defined at sqlite3.c:99433:12
func _1005analysisLoader(tls crt.TLS, _pData uintptr /* *void */, _argc int32, _argv uintptr /* **int8 */, _NotUsed uintptr /* **int8 */) (r int32) {
	esc := crt.MustMalloc(104)
	var (
		_pInfo    uintptr // *TanalysisInfo = SanalysisInfo
		_pIndex   uintptr // *TIndex = SIndex
		_pTable   uintptr // *TTable = STable
		_z        uintptr // *int8
		_aiRowEst uintptr // *TtRowcnt = Tu32 = uint32
		_nCol     int32
		_fakeIdx  = esc // *TIndex = SIndex
	)
	defer crt.Free(esc)
	_pInfo = _pData

	if _argv != 0 && (*(*uintptr)(unsafe.Pointer(_argv))) != 0 && (*(*uintptr)(unsafe.Pointer(_argv + 16))) != 0 {
		goto _1
	}

	return int32(0)

_1:
	_pTable = _221sqlite3FindTable(tls, *(*uintptr)(unsafe.Pointer(_pInfo)), *(*uintptr)(unsafe.Pointer(_argv)), *(*uintptr)(unsafe.Pointer(_pInfo + 8)))
	if _pTable != 0 {
		goto _2
	}

	return int32(0)

_2:
	if (*(*uintptr)(unsafe.Pointer(_argv + 8))) != 0 {
		goto _3
	}

	_pIndex = null
	goto _4

_3:
	if Xsqlite3_stricmp(tls, *(*uintptr)(unsafe.Pointer(_argv)), *(*uintptr)(unsafe.Pointer(_argv + 8))) != int32(0) {
		goto _5
	}

	_pIndex = _1060sqlite3PrimaryKeyIndex(tls, _pTable)
	goto _6

_5:
	_pIndex = _1003sqlite3FindIndex(tls, *(*uintptr)(unsafe.Pointer(_pInfo)), *(*uintptr)(unsafe.Pointer(_argv + 8)), *(*uintptr)(unsafe.Pointer(_pInfo + 8)))
_6:
_4:
	_z = *(*uintptr)(unsafe.Pointer(_argv + 16))
	if _pIndex == 0 {
		goto _7
	}

	_aiRowEst = 0
	_nCol = int32(*(*uint16)(unsafe.Pointer(_pIndex + 94))) + int32(1)
	set63b(&(*(*uint8)(unsafe.Pointer(_pIndex + 99))), uint32(0))
	_1222decodeIntArray(tls, _z, _nCol, _aiRowEst, *(*uintptr)(unsafe.Pointer(_pIndex + 16)), _pIndex)
	set146b(&(*(*uint8)(unsafe.Pointer(_pIndex + 99))), uint32(1))
	if (*(*uintptr)(unsafe.Pointer(_pIndex + 72))) != 0 {
		goto _9
	}

	*(*int16)(unsafe.Pointer(_pTable + 72)) = *(*int16)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pIndex + 16))))
	{
		p := &(*(*uint32)(unsafe.Pointer(_pTable + 64)))
		*p = uint32(uint32(*p) | uint32(0x10))
	}
_9:
	goto _8

_7:
	*(*int16)(unsafe.Pointer(_fakeIdx + 92)) = *(*int16)(unsafe.Pointer(_pTable + 74))
	_1222decodeIntArray(tls, _z, int32(1), null, _pTable+72, _fakeIdx)
	*(*int16)(unsafe.Pointer(_pTable + 74)) = *(*int16)(unsafe.Pointer(_fakeIdx + 92))
	{
		p := &(*(*uint32)(unsafe.Pointer(_pTable + 64)))
		*p = uint32(uint32(*p) | uint32(0x10))
	}
_8:
	return int32(0)
}

// _1006sqlite3DefaultRowEst is defined at sqlite3.c:104150:21
func _1006sqlite3DefaultRowEst(tls crt.TLS, _pIdx uintptr /* *TIndex = SIndex */) {
	esc := crt.MustMalloc(10)
	var (
		_aVal  = esc   // *[5]int16
		_a     uintptr // *TLogEst = int16
		_nCopy int32
		_i     int32
	)
	defer crt.Free(esc)
	crt.Copy(_aVal, ts+22830, 10)
	_a = *(*uintptr)(unsafe.Pointer(_pIdx + 16))
	_nCopy = func() int32 {
		if int32(5) < int32(*(*uint16)(unsafe.Pointer(_pIdx + 94))) {
			return int32(5)
		}
		return int32(*(*uint16)(unsafe.Pointer(_pIdx + 94)))
	}()

	*(*int16)(unsafe.Pointer(_a)) = *(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 24))) + 72))
	if (*(*uintptr)(unsafe.Pointer(_pIdx + 72))) == 0 {
		goto _1
	}

	{
		p := &(*(*int16)(unsafe.Pointer(_a)))
		*p = int16(int32(*p) - int32(10))
	}
_1:
	if int32(*(*int16)(unsafe.Pointer(_a))) >= int32(33) {
		goto _2
	}

	*(*int16)(unsafe.Pointer(_a)) = int16(33)
_2:
	crt.Xmemcpy(tls, _a+2, _aVal, uint64(_nCopy)*uint64(2))
	_i = _nCopy + int32(1)
_3:
	if _i > int32(*(*uint16)(unsafe.Pointer(_pIdx + 94))) {
		goto _5
	}

	*(*int16)(unsafe.Pointer(_a + 2*uintptr(_i))) = int16(23)

	_i++
	goto _3

_5:
	if int32(*(*uint8)(unsafe.Pointer(_pIdx + 98))) == int32(0) {
		goto _6
	}

	*(*int16)(unsafe.Pointer(_a + 2*uintptr(*(*uint16)(unsafe.Pointer(_pIdx + 94))))) = int16(0)
_6:
}

// _1007freeIndex is defined at sqlite3.c:101138:13
func _1007freeIndex(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _p uintptr /* *TIndex = SIndex */) {
	_1223sqlite3DeleteIndexSamples(tls, _db, _p)
	_777sqlite3ExprDelete(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 72)))
	_551sqlite3ExprListDelete(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 80)))
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 32)))
	if (uint32((*(*uint8)(unsafe.Pointer(_p + 99)))>>4) << 31 >> 31) == 0 {
		goto _1
	}

	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 64)))
_1:
	_181sqlite3DbFree(tls, _db, _p)
}

// _1008tableOfTrigger is defined at sqlite3.c:124479:14
func _1008tableOfTrigger(tls crt.TLS, _pTrigger uintptr /* *TTrigger = STrigger */) (r uintptr /* *TTable = STable */) {
	return _424sqlite3HashFind(tls, (*(*uintptr)(unsafe.Pointer(_pTrigger + 48)))+8, *(*uintptr)(unsafe.Pointer(_pTrigger + 8)))
}

type SIntegrityCk struct {
	XpBt          uintptr // *SBtShared
	XpPager       uintptr // *SPager
	XaPgRef       uintptr // *uint8
	XnPage        uint32
	XmxErr        int32
	XnErr         int32
	XmallocFailed int32
	XzPfx         uintptr // *int8
	Xv1           int32
	Xv2           int32
	XerrMsg       SStrAccum
	Xheap         uintptr // *uint32
}

// _1009setPageReferenced is defined at sqlite3.c:68753:13
func _1009setPageReferenced(tls crt.TLS, _pCheck uintptr /* *TIntegrityCk = SIntegrityCk */, _iPg uint32) {
	{
		p := &(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pCheck + 16))) + uintptr(_iPg/uint32(8)))))
		*p = uint8(int32(*p) | (int32(1) << (uint(_iPg&uint32(0x7)) % 32)))
	}
}

// _1010checkList is defined at sqlite3.c:68816:13
func _1010checkList(tls crt.TLS, _pCheck uintptr /* *TIntegrityCk = SIntegrityCk */, _isFreeList int32, _iPage int32, _N int32) {
	esc := crt.MustMalloc(8)
	var (
		_i         int32
		_expected  int32
		_iFirst    int32
		_pOvflPage = esc   // **TDbPage = SPgHdr
		_pOvflData uintptr // *uint8
		_n         int32
		_iFreePage uint32
	)
	defer crt.Free(esc)
	_expected = _N
	_iFirst = _iPage
_1:
	if postinc24(&_N) <= int32(0) || (*(*int32)(unsafe.Pointer(_pCheck + 28))) == 0 {
		goto _2
	}

	if _iPage >= int32(1) {
		goto _3
	}

	_1014checkAppendMsg(tls, _pCheck, ts+22841 /* "%d of %d pages missing from over..." */, _N+int32(1), _expected, _iFirst)
	goto _2

_3:
	if _1224checkRef(tls, _pCheck, uint32(_iPage)) == 0 {
		goto _4
	}

	goto _2

_4:
	if _150sqlite3PagerGet(tls, *(*uintptr)(unsafe.Pointer(_pCheck + 8)), uint32(_iPage), _pOvflPage, int32(0)) == 0 {
		goto _5
	}

	_1014checkAppendMsg(tls, _pCheck, ts+22898 /* "failed to get page %d" */, _iPage)
	goto _2

_5:
	_pOvflData = _152sqlite3PagerGetData(tls, *(*uintptr)(unsafe.Pointer(_pOvflPage)))
	if _isFreeList == 0 {
		goto _6
	}

	_n = int32(_328sqlite3Get4byte(tls, _pOvflData+4))
	if (*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pCheck))) + 33))) == 0 {
		goto _8
	}

	_1011checkPtrmap(tls, _pCheck, uint32(_iPage), uint8(2), uint32(0))
_8:
	if _n <= ((int32(*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pCheck))) + 52))) / int32(4)) - int32(2)) {
		goto _9
	}

	_1014checkAppendMsg(tls, _pCheck, ts+22920 /* "freelist leaf count too big on p..." */, _iPage)
	_N--
	goto _10

_9:
	_i = int32(0)
_11:
	if _i >= _n {
		goto _13
	}

	_iFreePage = uint32(_328sqlite3Get4byte(tls, _pOvflData+uintptr(int32(8)+(_i*int32(4)))))
	if (*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pCheck))) + 33))) == 0 {
		goto _14
	}

	_1011checkPtrmap(tls, _pCheck, _iFreePage, uint8(2), uint32(0))
_14:
	_1224checkRef(tls, _pCheck, _iFreePage)
	_i++
	goto _11

_13:
	_N = int32(_N - _n)
_10:
	goto _7

_6:
	if (*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pCheck))) + 33))) == 0 || _N <= int32(0) {
		goto _15
	}

	_i = int32(_328sqlite3Get4byte(tls, _pOvflData))
	_1011checkPtrmap(tls, _pCheck, uint32(_i), uint8(4), uint32(_iPage))
_15:
_7:
	_iPage = int32(_328sqlite3Get4byte(tls, _pOvflData))
	_153sqlite3PagerUnref(tls, *(*uintptr)(unsafe.Pointer(_pOvflPage)))
	if _isFreeList == 0 || _N >= bool2int(_iPage != int32(0)) {
		goto _16
	}

	_1014checkAppendMsg(tls, _pCheck, ts+22959 /* "free-page count in header is too..." */)
_16:
	goto _1

_2:
}

// _1011checkPtrmap is defined at sqlite3.c:68787:13
func _1011checkPtrmap(tls crt.TLS, _pCheck uintptr /* *TIntegrityCk = SIntegrityCk */, _iChild uint32, _eType uint8, _iParent uint32) {
	esc := crt.MustMalloc(20)
	var (
		_rc            int32
		_ePtrmapType   = esc      // *Tu8 = uint8
		_iPtrmapParent = esc + 16 // *TPgno = Tu32 = uint32
	)
	defer crt.Free(esc)
	_rc = _917ptrmapGet(tls, *(*uintptr)(unsafe.Pointer(_pCheck)), _iChild, _ePtrmapType, _iPtrmapParent)
	if _rc == int32(0) {
		goto _1
	}

	if _rc != int32(7) && _rc != int32(3082) {
		goto _2
	}

	*(*int32)(unsafe.Pointer(_pCheck + 36)) = int32(1)
_2:
	_1014checkAppendMsg(tls, _pCheck, ts+22998 /* "Failed to read ptrmap key=%d" */, _iChild)
	return

_1:
	if int32(*(*uint8)(unsafe.Pointer(_ePtrmapType))) == int32(_eType) && (*(*uint32)(unsafe.Pointer(_iPtrmapParent))) == _iParent {
		goto _3
	}

	_1014checkAppendMsg(tls, _pCheck, ts+23027 /* "Bad ptr map entry key=%d expecte..." */, _iChild, int32(_eType), _iParent, int32(*(*uint8)(unsafe.Pointer(_ePtrmapType))), *(*uint32)(unsafe.Pointer(_iPtrmapParent)))
_3:
}

// _1012checkTreePage is defined at sqlite3.c:68952:12
func _1012checkTreePage(tls crt.TLS, _pCheck uintptr /* *TIntegrityCk = SIntegrityCk */, _iPage int32, _piMinKey uintptr /* *Ti64 = Tsqlite_int64 = int64 */, amaxKey int64) (r int32) {
	esc := crt.MustMalloc(72)
	var (
		_maxKey          = esc      // *int64
		_pPage           = esc + 16 // **TMemPage = SMemPage
		_i               int32
		_rc              int32
		_depth           int32
		_d2              int32
		_pgno            int32
		_nFrag           int32
		_hdr             int32
		_cellStart       int32
		_nCell           int32
		_doCoverageCheck int32
		_keyCanBeEqual   int32
		_data            uintptr // *Tu8 = uint8
		_pCell           uintptr // *Tu8 = uint8
		_pCellIdx        uintptr // *Tu8 = uint8
		_pBt             uintptr // *TBtShared = SBtShared
		_pc              uint32
		_usableSize      uint32
		_contentOffset   uint32
		_heap            uintptr    // *Tu32 = uint32
		_x               = esc + 32 // *Tu32 = uint32
		_prev            uint32
		_saved_zPfx      uintptr // *int8
		_saved_v1        int32
		_saved_v2        int32
		_savedIsInit     uint8
		_info            = esc + 48 // *TCellInfo = SCellInfo
		_nPage           int32
		_pgnoOvfl        uint32
		_size            uint32
		_1size           int32
		_j               int32
	)
	defer crt.Free(esc)
	*(*int64)(unsafe.Pointer(_maxKey)) = amaxKey
	*(*uintptr)(unsafe.Pointer(_pPage)) = 0
	_depth = int32(-1)
	_doCoverageCheck = int32(1)
	_keyCanBeEqual = int32(1)
	_heap = 0
	_prev = uint32(0)
	_saved_zPfx = *(*uintptr)(unsafe.Pointer(_pCheck + 40))
	_saved_v1 = *(*int32)(unsafe.Pointer(_pCheck + 48))
	_saved_v2 = *(*int32)(unsafe.Pointer(_pCheck + 52))
	_savedIsInit = uint8(0)
	_pBt = *(*uintptr)(unsafe.Pointer(_pCheck))
	_usableSize = *(*uint32)(unsafe.Pointer(_pBt + 52))
	if _iPage != int32(0) {
		goto _1
	}

	return int32(0)

_1:
	if _1224checkRef(tls, _pCheck, uint32(_iPage)) == 0 {
		goto _2
	}

	return int32(0)

_2:
	*(*uintptr)(unsafe.Pointer(_pCheck + 40)) = ts + 23081 /* "Page %d: " */
	*(*int32)(unsafe.Pointer(_pCheck + 48)) = _iPage
	if set5(&_rc, _363btreeGetPage(tls, _pBt, uint32(_iPage), _pPage, int32(0))) == int32(0) {
		goto _3
	}

	_1014checkAppendMsg(tls, _pCheck, ts+23091 /* "unable to get the page. error co..." */, _rc)
	goto _end_of_check

_3:
	_savedIsInit = *(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pPage))))
	*(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pPage)))) = uint8(0)
	if set5(&_rc, _851btreeInitPage(tls, *(*uintptr)(unsafe.Pointer(_pPage)))) == int32(0) {
		goto _4
	}

	_1014checkAppendMsg(tls, _pCheck, ts+23129 /* "btreeInitPage() returns error co..." */, _rc)
	goto _end_of_check

_4:
	_data = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage))) + 80))
	_hdr = int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage))) + 9)))
	*(*uintptr)(unsafe.Pointer(_pCheck + 40)) = ts + 23167 /* "On tree page %d cell %d: " */
	_contentOffset = uint32((((int32(*(*uint8)(unsafe.Pointer(_data + uintptr(_hdr+int32(5))))) << (uint(8) % 32)) | int32(*(*uint8)(unsafe.Pointer((_data + uintptr(_hdr+int32(5))) + 1))) - int32(1)) & int32(0xffff)) + int32(1))

	_nCell = (int32(*(*uint8)(unsafe.Pointer(_data + uintptr(_hdr+int32(3))))) << (uint(8) % 32)) | int32(*(*uint8)(unsafe.Pointer((_data + uintptr(_hdr+int32(3))) + 1)))

	_cellStart = (_hdr + int32(12)) - (int32(4) * int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage))) + 8))))

	_pCellIdx = _data + uintptr(_cellStart+(int32(2)*(_nCell-int32(1))))
	if (*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage))) + 8))) != 0 {
		goto _5
	}

	_pgno = int32(_328sqlite3Get4byte(tls, _data+uintptr(_hdr+int32(8))))
	if (*(*uint8)(unsafe.Pointer(_pBt + 33))) == 0 {
		goto _7
	}

	*(*uintptr)(unsafe.Pointer(_pCheck + 40)) = ts + 23193 /* "On page %d at right child: " */
	_1011checkPtrmap(tls, _pCheck, uint32(_pgno), uint8(5), uint32(_iPage))
_7:
	_depth = _1012checkTreePage(tls, _pCheck, _pgno, _maxKey, *(*int64)(unsafe.Pointer(_maxKey)))
	_keyCanBeEqual = int32(0)
	goto _6

_5:
	_heap = *(*uintptr)(unsafe.Pointer(_pCheck + 88))
	*(*uint32)(unsafe.Pointer(_heap)) = uint32(0)
_6:
	_i = _nCell - int32(1)
_8:
	if _i < int32(0) || (*(*int32)(unsafe.Pointer(_pCheck + 28))) == 0 {
		goto _10
	}

	*(*int32)(unsafe.Pointer(_pCheck + 52)) = _i

	_pc = uint32((int32(*(*uint8)(unsafe.Pointer(_pCellIdx))) << (uint(8) % 32)) | int32(*(*uint8)(unsafe.Pointer(_pCellIdx + 1))))
	_pCellIdx -= uintptr(2)
	if _pc >= _contentOffset && _pc <= (_usableSize-uint32(4)) {
		goto _11
	}

	_1014checkAppendMsg(tls, _pCheck, ts+23221 /* "Offset %d out of range %d..%d" */, _pc, _contentOffset, _usableSize-uint32(4))
	_doCoverageCheck = int32(0)
	goto _9

_11:
	_pCell = _data + uintptr(_pc)
	fn45(*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage))) + 128)))(tls, *(*uintptr)(unsafe.Pointer(_pPage)), _pCell, _info)
	if (_pc + uint32(*(*uint16)(unsafe.Pointer(_info + 22)))) <= _usableSize {
		goto _12
	}

	_1014checkAppendMsg(tls, _pCheck, ts+23251 /* "Extends off end of page" */)
	_doCoverageCheck = int32(0)
	goto _9

_12:
	if (*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage))) + 2))) == 0 {
		goto _13
	}

	if func() int32 {
		if _keyCanBeEqual != 0 {
			return bool2int((*(*int64)(unsafe.Pointer(_info))) > (*(*int64)(unsafe.Pointer(_maxKey))))
		}
		return bool2int((*(*int64)(unsafe.Pointer(_info))) >= (*(*int64)(unsafe.Pointer(_maxKey))))
	}() == 0 {
		goto _14
	}

	_1014checkAppendMsg(tls, _pCheck, ts+23275 /* "Rowid %lld out of order" */, *(*int64)(unsafe.Pointer(_info)))
_14:
	*(*int64)(unsafe.Pointer(_maxKey)) = *(*int64)(unsafe.Pointer(_info))
	_keyCanBeEqual = int32(0)
_13:
	if (*(*uint32)(unsafe.Pointer(_info + 16))) <= uint32(*(*uint16)(unsafe.Pointer(_info + 20))) {
		goto _15
	}

	_nPage = int32(((((*(*uint32)(unsafe.Pointer(_info + 16))) - uint32(*(*uint16)(unsafe.Pointer(_info + 20)))) + _usableSize) - uint32(5)) / (_usableSize - uint32(4)))
	_pgnoOvfl = uint32(_328sqlite3Get4byte(tls, _pCell+uintptr(int32(*(*uint16)(unsafe.Pointer(_info + 22)))-int32(4))))
	if (*(*uint8)(unsafe.Pointer(_pBt + 33))) == 0 {
		goto _16
	}

	_1011checkPtrmap(tls, _pCheck, _pgnoOvfl, uint8(3), uint32(_iPage))
_16:
	_1010checkList(tls, _pCheck, int32(0), int32(_pgnoOvfl), _nPage)
_15:
	if (*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage))) + 8))) != 0 {
		goto _17
	}

	_pgno = int32(_328sqlite3Get4byte(tls, _pCell))
	if (*(*uint8)(unsafe.Pointer(_pBt + 33))) == 0 {
		goto _19
	}

	_1011checkPtrmap(tls, _pCheck, uint32(_pgno), uint8(5), uint32(_iPage))
_19:
	_d2 = _1012checkTreePage(tls, _pCheck, _pgno, _maxKey, *(*int64)(unsafe.Pointer(_maxKey)))
	_keyCanBeEqual = int32(0)
	if _d2 == _depth {
		goto _20
	}

	_1014checkAppendMsg(tls, _pCheck, ts+23299 /* "Child page depth differs" */)
	_depth = _d2
_20:
	goto _18

_17:
	_1225btreeHeapInsert(tls, _heap, (_pc<<(uint(16)%32))|((_pc+uint32(*(*uint16)(unsafe.Pointer(_info + 22))))-uint32(1)))
_18:
_9:
	_i--
	goto _8

_10:
	*(*int64)(unsafe.Pointer(_piMinKey)) = *(*int64)(unsafe.Pointer(_maxKey))
	*(*uintptr)(unsafe.Pointer(_pCheck + 40)) = null
	if _doCoverageCheck == 0 || (*(*int32)(unsafe.Pointer(_pCheck + 28))) <= int32(0) {
		goto _21
	}

	if (*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage))) + 8))) != 0 {
		goto _22
	}

	_heap = *(*uintptr)(unsafe.Pointer(_pCheck + 88))
	*(*uint32)(unsafe.Pointer(_heap)) = uint32(0)
	_i = _nCell - int32(1)
_23:
	if _i < int32(0) {
		goto _25
	}

	_pc = uint32((int32(*(*uint8)(unsafe.Pointer(_data + uintptr(_cellStart+(_i*int32(2)))))) << (uint(8) % 32)) | int32(*(*uint8)(unsafe.Pointer((_data + uintptr(_cellStart+(_i*int32(2)))) + 1))))
	_size = uint32(fn144(*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage))) + 120)))(tls, *(*uintptr)(unsafe.Pointer(_pPage)), _data+uintptr(_pc)))
	_1225btreeHeapInsert(tls, _heap, (_pc<<(uint(16)%32))|((_pc+_size)-uint32(1)))
	_i--
	goto _23

_25:
_22:
	_i = (int32(*(*uint8)(unsafe.Pointer(_data + uintptr(_hdr+int32(1))))) << (uint(8) % 32)) | int32(*(*uint8)(unsafe.Pointer((_data + uintptr(_hdr+int32(1))) + 1)))
_26:
	if _i <= int32(0) {
		goto _27
	}

	_1size = (int32(*(*uint8)(unsafe.Pointer(_data + uintptr(_i+int32(2))))) << (uint(8) % 32)) | int32(*(*uint8)(unsafe.Pointer((_data + uintptr(_i+int32(2))) + 1)))

	_1225btreeHeapInsert(tls, _heap, (uint32(_i)<<(uint(16)%32))|uint32((_i+_1size)-int32(1)))
	_j = (int32(*(*uint8)(unsafe.Pointer(_data + uintptr(_i)))) << (uint(8) % 32)) | int32(*(*uint8)(unsafe.Pointer((_data + uintptr(_i)) + 1)))

	_i = _j
	goto _26

_27:
	_nFrag = int32(0)
	_prev = _contentOffset - uint32(1)
_28:
	if _1226btreeHeapPull(tls, _heap, _x) == 0 {
		goto _29
	}

	if (_prev & uint32(0xffff)) < ((*(*uint32)(unsafe.Pointer(_x))) >> (uint(16) % 32)) {
		goto _30
	}

	_1014checkAppendMsg(tls, _pCheck, ts+23324 /* "Multiple uses for byte %u of pag..." */, (*(*uint32)(unsafe.Pointer(_x)))>>(uint(16)%32), _iPage)
	goto _29

	goto _31

_30:
	_nFrag = int32(uint32(_nFrag) + ((((*(*uint32)(unsafe.Pointer(_x))) >> (uint(16) % 32)) - (_prev & uint32(0xffff))) - uint32(1)))
	_prev = *(*uint32)(unsafe.Pointer(_x))
_31:
	goto _28

_29:
	_nFrag = int32(uint32(_nFrag) + ((_usableSize - (_prev & uint32(0xffff))) - uint32(1)))
	if (*(*uint32)(unsafe.Pointer(_heap))) != uint32(0) || _nFrag == int32(*(*uint8)(unsafe.Pointer(_data + uintptr(_hdr+int32(7))))) {
		goto _32
	}

	_1014checkAppendMsg(tls, _pCheck, ts+23361 /* "Fragmentation of %d bytes report..." */, _nFrag, int32(*(*uint8)(unsafe.Pointer(_data + uintptr(_hdr+int32(7))))), _iPage)
_32:
_21:
	goto _end_of_check
_end_of_check:
	if _doCoverageCheck != 0 {
		goto _33
	}

	*(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pPage)))) = _savedIsInit
_33:
	_919releasePage(tls, *(*uintptr)(unsafe.Pointer(_pPage)))
	*(*uintptr)(unsafe.Pointer(_pCheck + 40)) = _saved_zPfx
	*(*int32)(unsafe.Pointer(_pCheck + 48)) = _saved_v1
	*(*int32)(unsafe.Pointer(_pCheck + 52)) = _saved_v2
	return _depth + int32(1)
}

// _1013getPageReferenced is defined at sqlite3.c:68745:12
func _1013getPageReferenced(tls crt.TLS, _pCheck uintptr /* *TIntegrityCk = SIntegrityCk */, _iPg uint32) (r int32) {
	return int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pCheck + 16))) + uintptr(_iPg/uint32(8))))) & (int32(1) << (uint(_iPg&uint32(0x7)) % 32))
}

// _1014checkAppendMsg is defined at sqlite3.c:68715:13
func _1014checkAppendMsg(tls crt.TLS, _pCheck uintptr /* *TIntegrityCk = SIntegrityCk */, _zFormat uintptr /* *int8 */, ap ...interface{}) {
	var _ap *[]interface{} // Tva_list = T__gnuc_va_list = T__...a_list = *struct{X_ [2]uintptr;}

	if (*(*int32)(unsafe.Pointer(_pCheck + 28))) != 0 {
		goto _1
	}

	return

_1:
	(*(*int32)(unsafe.Pointer(_pCheck + 28)))--
	(*(*int32)(unsafe.Pointer(_pCheck + 32)))++
	{
		x := ap
		_ap = &x
	}
	if (*(*uint32)(unsafe.Pointer((_pCheck + 56) + 24))) == 0 {
		goto _2
	}

	_301sqlite3StrAccumAppend(tls, _pCheck+56, ts+867 /* "\n" */, int32(1))
_2:
	if (*(*uintptr)(unsafe.Pointer(_pCheck + 40))) == 0 {
		goto _3
	}

	_807sqlite3XPrintf(tls, _pCheck+56, *(*uintptr)(unsafe.Pointer(_pCheck + 40)), *(*int32)(unsafe.Pointer(_pCheck + 48)), *(*int32)(unsafe.Pointer(_pCheck + 52)))
_3:
	_131sqlite3VXPrintf(tls, _pCheck+56, _zFormat, _ap)
	_ap = nil
	if int32(*(*uint8)(unsafe.Pointer((_pCheck + 56) + 28))) != int32(1) {
		goto _4
	}

	*(*int32)(unsafe.Pointer(_pCheck + 36)) = int32(1)
_4:
}

// _1015sqlite3RowSetInit is defined at sqlite3.c:46964:23
func _1015sqlite3RowSetInit(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pSpace uintptr /* *void */, _N uint32) (r uintptr /* *TRowSet = SRowSet */) {
	var _p uintptr // *TRowSet = SRowSet

	_p = _pSpace
	*(*uintptr)(unsafe.Pointer(_p)) = null
	*(*uintptr)(unsafe.Pointer(_p + 8)) = _db
	*(*uintptr)(unsafe.Pointer(_p + 16)) = null
	*(*uintptr)(unsafe.Pointer(_p + 24)) = null
	*(*uintptr)(unsafe.Pointer(_p + 40)) = null
	*(*uintptr)(unsafe.Pointer(_p + 32)) = uintptr(56) + _p
	*(*uint16)(unsafe.Pointer(_p + 48)) = uint16((uint64(_N) - uint64(56)) / uint64(24))
	*(*uint16)(unsafe.Pointer(_p + 50)) = uint16(0x1)
	*(*int32)(unsafe.Pointer(_p + 52)) = int32(0)
	return _p
}

type SRowSet struct {
	XpChunk  uintptr // *SRowSetChunk
	Xdb      uintptr // *Ssqlite3
	XpEntry  uintptr // *SRowSetEntry
	XpLast   uintptr // *SRowSetEntry
	XpFresh  uintptr // *SRowSetEntry
	XpForest uintptr // *SRowSetEntry
	XnFresh  uint16
	XrsFlags uint16
	XiBatch  int32
}

type SRowSetEntry struct {
	Xv      int64
	XpRight uintptr // *SRowSetEntry
	XpLeft  uintptr // *SRowSetEntry
}

// _1016rowSetEntryAlloc is defined at sqlite3.c:47007:27
func _1016rowSetEntryAlloc(tls crt.TLS, _p uintptr /* *TRowSet = SRowSet */) (r uintptr /* *SRowSetEntry */) {
	var _pNew uintptr // *SRowSetChunk

	if int32(*(*uint16)(unsafe.Pointer(_p + 48))) != int32(0) {
		goto _1
	}

	_pNew = _373sqlite3DbMallocRawNN(tls, *(*uintptr)(unsafe.Pointer(_p + 8)), uint64(1016))
	if _pNew != 0 {
		goto _2
	}

	return null

_2:
	*(*uintptr)(unsafe.Pointer(_pNew)) = *(*uintptr)(unsafe.Pointer(_p))
	*(*uintptr)(unsafe.Pointer(_p)) = _pNew
	*(*uintptr)(unsafe.Pointer(_p + 32)) = _pNew + 8
	*(*uint16)(unsafe.Pointer(_p + 48)) = uint16(42)
_1:
	(*(*uint16)(unsafe.Pointer(_p + 48)))--
	return postinc166(&(*(*uintptr)(unsafe.Pointer(_p + 32))))
}

// _1017rowSetEntrySort is defined at sqlite3.c:47098:27
func _1017rowSetEntrySort(tls crt.TLS, _pIn uintptr /* *SRowSetEntry */) (r uintptr /* *SRowSetEntry */) {
	esc := crt.MustMalloc(320)
	var (
		_i       uint32
		_pNext   uintptr // *SRowSetEntry
		_aBucket = esc   // *[40]*SRowSetEntry
	)
	defer crt.Free(esc)
	crt.Xmemset(tls, _aBucket, int32(0), uint64(320))
_1:
	if _pIn == 0 {
		goto _2
	}

	_pNext = *(*uintptr)(unsafe.Pointer(_pIn + 8))
	*(*uintptr)(unsafe.Pointer(_pIn + 8)) = null
	_i = uint32(0)
_3:
	if (*(*uintptr)(unsafe.Pointer(_aBucket + 8*uintptr(_i)))) == 0 {
		goto _5
	}

	_pIn = _1020rowSetEntryMerge(tls, *(*uintptr)(unsafe.Pointer(_aBucket + 8*uintptr(_i))), _pIn)
	*(*uintptr)(unsafe.Pointer(_aBucket + 8*uintptr(_i))) = null
	_i++
	goto _3

_5:
	*(*uintptr)(unsafe.Pointer(_aBucket + 8*uintptr(_i))) = _pIn
	_pIn = _pNext
	goto _1

_2:
	_pIn = *(*uintptr)(unsafe.Pointer(_aBucket))
	_i = uint32(1)
_6:
	if uint64(_i) >= uint64(40) {
		goto _8
	}

	if (*(*uintptr)(unsafe.Pointer(_aBucket + 8*uintptr(_i)))) != 0 {
		goto _9
	}

	goto _7

_9:
	_pIn = func() uintptr {
		if _pIn != 0 {
			return _1020rowSetEntryMerge(tls, _pIn, *(*uintptr)(unsafe.Pointer(_aBucket + 8*uintptr(_i))))
		}
		return *(*uintptr)(unsafe.Pointer(_aBucket + 8*uintptr(_i)))
	}()

_7:
	_i++
	goto _6

_8:
	return _pIn
}

// _1018rowSetListToTree is defined at sqlite3.c:47198:27
func _1018rowSetListToTree(tls crt.TLS, apList uintptr) (r uintptr /* *SRowSetEntry */) {
	esc := crt.MustMalloc(8)
	var (
		_pList  = esc // **SRowSetEntry
		_iDepth int32
		_p      uintptr // *SRowSetEntry
		_pLeft  uintptr // *SRowSetEntry
	)
	defer crt.Free(esc)
	*(*uintptr)(unsafe.Pointer(_pList)) = apList

	_p = *(*uintptr)(unsafe.Pointer(_pList))
	*(*uintptr)(unsafe.Pointer(_pList)) = *(*uintptr)(unsafe.Pointer(_p + 8))
	*(*uintptr)(unsafe.Pointer(_p + 16)) = set4(&(*(*uintptr)(unsafe.Pointer(_p + 8))), null)
	_iDepth = int32(1)
_1:
	if (*(*uintptr)(unsafe.Pointer(_pList))) == 0 {
		goto _3
	}

	_pLeft = _p
	_p = *(*uintptr)(unsafe.Pointer(_pList))
	*(*uintptr)(unsafe.Pointer(_pList)) = *(*uintptr)(unsafe.Pointer(_p + 8))
	*(*uintptr)(unsafe.Pointer(_p + 16)) = _pLeft
	*(*uintptr)(unsafe.Pointer(_p + 8)) = _1227rowSetNDeepTree(tls, _pList, _iDepth)
	_iDepth++
	goto _1

_3:
	return _p
}

// _1019rowSetTreeToList is defined at sqlite3.c:47127:13
func _1019rowSetTreeToList(tls crt.TLS, _pIn uintptr /* *SRowSetEntry */, _ppFirst uintptr /* **SRowSetEntry */, _ppLast uintptr /* **SRowSetEntry */) {
	esc := crt.MustMalloc(8)
	var _p = esc // **SRowSetEntry
	defer crt.Free(esc)

	if (*(*uintptr)(unsafe.Pointer(_pIn + 16))) == 0 {
		goto _1
	}

	_1019rowSetTreeToList(tls, *(*uintptr)(unsafe.Pointer(_pIn + 16)), _ppFirst, _p)
	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p))) + 8)) = _pIn
	goto _2

_1:
	*(*uintptr)(unsafe.Pointer(_ppFirst)) = _pIn
_2:
	if (*(*uintptr)(unsafe.Pointer(_pIn + 8))) == 0 {
		goto _3
	}

	_1019rowSetTreeToList(tls, *(*uintptr)(unsafe.Pointer(_pIn + 8)), _pIn+8, _ppLast)
	goto _4

_3:
	*(*uintptr)(unsafe.Pointer(_ppLast)) = _pIn
_4:
}

// _1020rowSetEntryMerge is defined at sqlite3.c:47063:27
func _1020rowSetEntryMerge(tls crt.TLS, _pA uintptr /* *SRowSetEntry */, _pB uintptr /* *SRowSetEntry */) (r uintptr /* *SRowSetEntry */) {
	esc := crt.MustMalloc(24)
	var (
		_head  = esc   // *SRowSetEntry
		_pTail uintptr // *SRowSetEntry
	)
	defer crt.Free(esc)
	_pTail = _head

_1:
	if (*(*int64)(unsafe.Pointer(_pA))) > (*(*int64)(unsafe.Pointer(_pB))) {
		goto _4
	}

	if (*(*int64)(unsafe.Pointer(_pA))) >= (*(*int64)(unsafe.Pointer(_pB))) {
		goto _6
	}

	_pTail = set4(&(*(*uintptr)(unsafe.Pointer(_pTail + 8))), _pA)
_6:
	_pA = *(*uintptr)(unsafe.Pointer(_pA + 8))
	if _pA != 0 {
		goto _7
	}

	*(*uintptr)(unsafe.Pointer(_pTail + 8)) = _pB
	goto _3

_7:
	goto _5

_4:
	_pTail = set4(&(*(*uintptr)(unsafe.Pointer(_pTail + 8))), _pB)
	_pB = *(*uintptr)(unsafe.Pointer(_pB + 8))
	if _pB != 0 {
		goto _8
	}

	*(*uintptr)(unsafe.Pointer(_pTail + 8)) = _pA
	goto _3

_8:
_5:
	goto _1

_3:
	return *(*uintptr)(unsafe.Pointer(_head + 8))
}

// _1021sqlite3BtreeCheckpoint is defined at sqlite3.c:69371:20
func _1021sqlite3BtreeCheckpoint(tls crt.TLS, _p uintptr /* *TBtree = SBtree */, _eMode int32, _pnLog uintptr /* *int32 */, _pnCkpt uintptr /* *int32 */) (r int32) {
	var (
		_rc  int32
		_pBt uintptr // *TBtShared = SBtShared
	)
	_rc = int32(0)
	if _p == 0 {
		goto _1
	}

	_pBt = *(*uintptr)(unsafe.Pointer(_p + 8))
	_139sqlite3BtreeEnter(tls, _p)
	if int32(*(*uint8)(unsafe.Pointer(_pBt + 36))) == int32(0) {
		goto _2
	}

	_rc = int32(6)
	goto _3

_2:
	_rc = _1228sqlite3PagerCheckpoint(tls, *(*uintptr)(unsafe.Pointer(_pBt)), *(*uintptr)(unsafe.Pointer(_p)), _eMode, _pnLog, _pnCkpt)
_3:
	_169sqlite3BtreeLeave(tls, _p)
_1:
	return _rc
}

// _1022pagerExclusiveLock is defined at sqlite3.c:54911:12
func _1022pagerExclusiveLock(tls crt.TLS, _pPager uintptr /* *TPager = SPager */) (r int32) {
	var _rc int32

	_rc = _558pagerLockDb(tls, _pPager, int32(4))
	if _rc == int32(0) {
		goto _1
	}

	_873pagerUnlockDb(tls, _pPager, int32(1))
_1:
	return _rc
}

// _1023azModeName [6]*int8, escapes: true, sqlite3.c:114558:15
var _1023azModeName = bss + 14032 // array of 6 pointer to char

func init() {
	*(*[6]uintptr)(unsafe.Pointer(_1023azModeName)) = [6]uintptr{
		0: ts + 23413, /* "delete" */
		1: ts + 23420, /* "persist" */
		2: ts + 4892,  /* "off" */
		3: ts + 23428, /* "truncate" */
		4: ts + 19640, /* "memory" */
		5: ts + 23437, /* "wal" */
	}
}

// _1024aCopy [10]uint8, escapes: true, sqlite3.c:126245:32
var _1024aCopy = ds + 8854

// _1025execSql is defined at sqlite3.c:125970:12
func _1025execSql(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pzErrMsg uintptr /* **int8 */, _zSql uintptr /* *int8 */) (r int32) {
	esc := crt.MustMalloc(8)
	var (
		_pStmt   = esc // **Tsqlite3_stmt = Ssqlite3_stmt
		_rc      int32
		_zSubSql uintptr // *int8
	)
	defer crt.Free(esc)
	_rc = Xsqlite3_prepare_v2(tls, _db, _zSql, int32(-1), _pStmt, null)
	if _rc == int32(0) {
		goto _1
	}

	return _rc

_1:
_2:
	if int32(100) != set5(&_rc, Xsqlite3_step(tls, *(*uintptr)(unsafe.Pointer(_pStmt)))) {
		goto _3
	}

	_zSubSql = Xsqlite3_column_text(tls, *(*uintptr)(unsafe.Pointer(_pStmt)), int32(0))

	if _zSubSql == 0 {
		goto _4
	}

	_rc = _1025execSql(tls, _db, _pzErrMsg, _zSubSql)
	if _rc == int32(0) {
		goto _5
	}

	goto _3

_5:
_4:
	goto _2

_3:
	if _rc != int32(101) {
		goto _6
	}

	_rc = int32(0)
_6:
	if _rc == 0 {
		goto _7
	}

	_766sqlite3SetString(tls, _pzErrMsg, _db, Xsqlite3_errmsg(tls, _db))
_7:
	Xsqlite3_finalize(tls, *(*uintptr)(unsafe.Pointer(_pStmt)))
	return _rc
}

// _1026sqlite3BtreeGetOptimalReserve is defined at sqlite3.c:62488:20
func _1026sqlite3BtreeGetOptimalReserve(tls crt.TLS, _p uintptr /* *TBtree = SBtree */) (r int32) {
	var _n int32

	_139sqlite3BtreeEnter(tls, _p)
	_n = _1229sqlite3BtreeGetReserveNoMutex(tls, _p)
	_169sqlite3BtreeLeave(tls, _p)
	return _n
}

// _1027sqlite3BtreeSetSpillSize is defined at sqlite3.c:62357:20
func _1027sqlite3BtreeSetSpillSize(tls crt.TLS, _p uintptr /* *TBtree = SBtree */, _mxPage int32) (r int32) {
	var (
		_pBt uintptr // *TBtShared = SBtShared
		_res int32
	)
	_pBt = *(*uintptr)(unsafe.Pointer(_p + 8))

	_139sqlite3BtreeEnter(tls, _p)
	_res = _1230sqlite3PagerSetSpillsize(tls, *(*uintptr)(unsafe.Pointer(_pBt)), _mxPage)
	_169sqlite3BtreeLeave(tls, _p)
	return _res
}

// _1028sqlite3BtreeSetPagerFlags is defined at sqlite3.c:62391:20
func _1028sqlite3BtreeSetPagerFlags(tls crt.TLS, _p uintptr /* *TBtree = SBtree */, _pgFlags uint32) (r int32) {
	var _pBt uintptr // *TBtShared = SBtShared

	_pBt = *(*uintptr)(unsafe.Pointer(_p + 8))

	_139sqlite3BtreeEnter(tls, _p)
	_1231sqlite3PagerSetFlags(tls, *(*uintptr)(unsafe.Pointer(_pBt)), _pgFlags)
	_169sqlite3BtreeLeave(tls, _p)
	return int32(0)
}

// _1029sqlite3BtreeSetAutoVacuum is defined at sqlite3.c:62552:20
func _1029sqlite3BtreeSetAutoVacuum(tls crt.TLS, _p uintptr /* *TBtree = SBtree */, _autoVacuum int32) (r int32) {
	var (
		_pBt uintptr // *TBtShared = SBtShared
		_rc  int32
		_av  uint8
	)
	_pBt = *(*uintptr)(unsafe.Pointer(_p + 8))
	_rc = int32(0)
	_av = uint8(_autoVacuum)
	_139sqlite3BtreeEnter(tls, _p)
	if (int32(*(*uint16)(unsafe.Pointer(_pBt + 38)))&int32(0x2)) == int32(0) || func() int32 {
		if _av != 0 {
			return int32(1)
		}
		return int32(0)
	}() == int32(*(*uint8)(unsafe.Pointer(_pBt + 33))) {
		goto _1
	}

	_rc = int32(8)
	goto _2

_1:
	*(*uint8)(unsafe.Pointer(_pBt + 33)) = uint8(func() int32 {
		if _av != 0 {
			return int32(1)
		}
		return int32(0)
	}())
	*(*uint8)(unsafe.Pointer(_pBt + 34)) = uint8(func() int32 {
		if int32(_av) == int32(2) {
			return int32(1)
		}
		return int32(0)
	}())
_2:
	_169sqlite3BtreeLeave(tls, _p)
	return _rc
}

// _1030sqlite3BtreeGetAutoVacuum is defined at sqlite3.c:62576:20
func _1030sqlite3BtreeGetAutoVacuum(tls crt.TLS, _p uintptr /* *TBtree = SBtree */) (r int32) {
	var _rc int32

	_139sqlite3BtreeEnter(tls, _p)
	_rc = func() int32 {
		if (*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 8))) + 33))) == 0 {
			return int32(0)
		}
		return func() int32 {
			if (*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 8))) + 34))) == 0 {
				return int32(1)
			}
			return int32(2)
		}()
	}()
	_169sqlite3BtreeLeave(tls, _p)
	return _rc
}

// _1031execSqlF is defined at sqlite3.c:125994:12
func _1031execSqlF(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pzErrMsg uintptr /* **int8 */, _zSql uintptr /* *int8 */, ap ...interface{}) (r int32) {
	var (
		_z  uintptr        // *int8
		_ap *[]interface{} // Tva_list = T__gnuc_va_list = T__...a_list = *struct{X_ [2]uintptr;}
		_rc int32
	)
	{
		x := ap
		_ap = &x
	}
	_z = _315sqlite3VMPrintf(tls, _db, _zSql, _ap)
	_ap = nil
	if _z != 0 {
		goto _1
	}

	return int32(7)

_1:
	_rc = _1025execSql(tls, _db, _pzErrMsg, _z)
	_181sqlite3DbFree(tls, _db, _z)
	return _rc
}

// _1032sqlite3BtreeCopyFile is defined at sqlite3.c:70362:20
func _1032sqlite3BtreeCopyFile(tls crt.TLS, _pTo uintptr /* *TBtree = SBtree */, _pFrom uintptr /* *TBtree = SBtree */) (r int32) {
	esc := crt.MustMalloc(88)
	var (
		_rc    int32
		_pFd   uintptr    // *Tsqlite3_file = Ssqlite3_file
		_b     = esc      // *Tsqlite3_backup = Ssqlite3_backup
		_nByte = esc + 80 // *Ti64 = Tsqlite_int64 = int64
	)
	defer crt.Free(esc)
	_139sqlite3BtreeEnter(tls, _pTo)
	_139sqlite3BtreeEnter(tls, _pFrom)

	_pFd = _159sqlite3PagerFile(tls, _141sqlite3BtreePager(tls, _pTo))
	if (*(*uintptr)(unsafe.Pointer(_pFd))) == 0 {
		goto _1
	}

	*(*int64)(unsafe.Pointer(_nByte)) = int64(_146sqlite3BtreeGetPageSize(tls, _pFrom)) * int64(_148sqlite3BtreeLastPage(tls, _pFrom))
	_rc = _235sqlite3OsFileControl(tls, _pFd, int32(11), _nByte)
	if _rc != int32(12) {
		goto _2
	}

	_rc = int32(0)
_2:
	if _rc == 0 {
		goto _3
	}

	goto _copy_finished

_3:
_1:
	crt.Xmemset(tls, _b, int32(0), uint64(72))
	*(*uintptr)(unsafe.Pointer(_b + 32)) = *(*uintptr)(unsafe.Pointer(_pFrom))
	*(*uintptr)(unsafe.Pointer(_b + 40)) = _pFrom
	*(*uintptr)(unsafe.Pointer(_b + 8)) = _pTo
	*(*uint32)(unsafe.Pointer(_b + 24)) = uint32(1)
	Xsqlite3_backup_step(tls, _b, int32(0x7fffffff))

	_rc = Xsqlite3_backup_finish(tls, _b)
	if _rc != int32(0) {
		goto _4
	}

	{
		p := &(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTo + 8))) + 38)))
		*p = uint16(int32(*p) & int32(-3))
	}
	goto _5

_4:
	_1232sqlite3PagerClearCache(tls, _141sqlite3BtreePager(tls, *(*uintptr)(unsafe.Pointer(_b + 8))))
_5:
	goto _copy_finished
_copy_finished:
	_169sqlite3BtreeLeave(tls, _pFrom)
	_169sqlite3BtreeLeave(tls, _pTo)
	return _rc
}

// _1033setSharedCacheTableLock is defined at sqlite3.c:59992:12
func _1033setSharedCacheTableLock(tls crt.TLS, _p uintptr /* *TBtree = SBtree */, _iTable uint32, _eLock uint8) (r int32) {
	var (
		_pBt   uintptr // *TBtShared = SBtShared
		_pLock uintptr // *TBtLock = SBtLock
		_pIter uintptr // *TBtLock = SBtLock
	)
	_pBt = *(*uintptr)(unsafe.Pointer(_p + 8))
	_pLock = 0

	_pIter = *(*uintptr)(unsafe.Pointer(_pBt + 112))
_1:
	if _pIter == 0 {
		goto _3
	}

	if (*(*uint32)(unsafe.Pointer(_pIter + 8))) != _iTable || (*(*uintptr)(unsafe.Pointer(_pIter))) != _p {
		goto _4
	}

	_pLock = _pIter
	goto _3

_4:
	_pIter = *(*uintptr)(unsafe.Pointer(_pIter + 16))
	goto _1

_3:
	if _pLock != 0 {
		goto _5
	}

	_pLock = _135sqlite3MallocZero(tls, uint64(24))
	if _pLock != 0 {
		goto _6
	}

	return int32(7)

_6:
	*(*uint32)(unsafe.Pointer(_pLock + 8)) = _iTable
	*(*uintptr)(unsafe.Pointer(_pLock)) = _p
	*(*uintptr)(unsafe.Pointer(_pLock + 16)) = *(*uintptr)(unsafe.Pointer(_pBt + 112))
	*(*uintptr)(unsafe.Pointer(_pBt + 112)) = _pLock
_5:
	if int32(_eLock) <= int32(*(*uint8)(unsafe.Pointer(_pLock + 12))) {
		goto _7
	}

	*(*uint8)(unsafe.Pointer(_pLock + 12)) = _eLock
_7:
	return int32(0)
}

// _1034growVTrans is defined at sqlite3.c:126973:12
func _1034growVTrans(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */) (r int32) {
	var (
		_ARRAY_INCR int32
		_aVTrans    uintptr // **TVTable = SVTable
		_nBytes     int32
	)
	_ARRAY_INCR = int32(5)
	if ((*(*int32)(unsafe.Pointer(_db + 444))) % _ARRAY_INCR) != int32(0) {
		goto _1
	}

	_nBytes = int32(uint64(8) * uint64((*(*int32)(unsafe.Pointer(_db + 444)))+_ARRAY_INCR))
	_aVTrans = _869sqlite3DbRealloc(tls, _db, *(*uintptr)(unsafe.Pointer(_db + 480)), uint64(_nBytes))
	if _aVTrans != 0 {
		goto _2
	}

	return int32(7)

_2:
	crt.Xmemset(tls, _aVTrans+8*uintptr(*(*int32)(unsafe.Pointer(_db + 444))), int32(0), uint64(8)*uint64(_ARRAY_INCR))
	*(*uintptr)(unsafe.Pointer(_db + 480)) = _aVTrans
_1:
	return int32(0)
}

// _1035addToVTrans is defined at sqlite3.c:126995:13
func _1035addToVTrans(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pVTab uintptr /* *TVTable = SVTable */) {
	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 480))) + 8*uintptr(postinc7(&(*(*int32)(unsafe.Pointer(_db + 444))))))) = _pVTab
	_1233sqlite3VtabLock(tls, _pVTab)
}

// _1036vtabCallConstructor is defined at sqlite3.c:126808:12
func _1036vtabCallConstructor(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pTab uintptr /* *TTable = STable */, _pMod uintptr /* *TModule = SModule */, _xConstruct uintptr /* *func(crt.TLS, uintptr, uintptr,...uintptr, uintptr, uintptr) int32 */, _pzErr uintptr /* **int8 */) (r int32) {
	esc := crt.MustMalloc(40)
	var (
		_sCtx        = esc   // *TVtabCtx = SVtabCtx
		_pVTable     uintptr // *TVTable = SVTable
		_rc          int32
		_azArg       uintptr // **int8
		_nArg        int32
		_zErr        = esc + 32 // **int8
		_zModuleName uintptr    // *int8
		_iDb         int32
		_pCtx        uintptr // *TVtabCtx = SVtabCtx
		_zFormat     uintptr // *int8
		_iCol        int32
		_oooHidden   uint8
		_zType       uintptr // *int8
		_nType       int32
		_i           int32
		_j           int32
		_nDel        int32
	)
	defer crt.Free(esc)
	_azArg = *(*uintptr)(unsafe.Pointer(_pTab + 88))
	_nArg = *(*int32)(unsafe.Pointer(_pTab + 84))
	*(*uintptr)(unsafe.Pointer(_zErr)) = 0
	_pCtx = *(*uintptr)(unsafe.Pointer(_db + 472))
_1:
	if _pCtx == 0 {
		goto _3
	}

	if (*(*uintptr)(unsafe.Pointer(_pCtx + 8))) != _pTab {
		goto _4
	}

	*(*uintptr)(unsafe.Pointer(_pzErr)) = _226sqlite3MPrintf(tls, _db, ts+23441 /* "vtable constructor called recurs..." */, *(*uintptr)(unsafe.Pointer(_pTab)))
	return int32(6)

_4:
	_pCtx = *(*uintptr)(unsafe.Pointer(_pCtx + 16))
	goto _1

_3:
	_zModuleName = _183sqlite3DbStrDup(tls, _db, *(*uintptr)(unsafe.Pointer(_pTab)))
	if _zModuleName != 0 {
		goto _5
	}

	return int32(7)

_5:
	_pVTable = _135sqlite3MallocZero(tls, uint64(48))
	if _pVTable != 0 {
		goto _6
	}

	_178sqlite3OomFault(tls, _db)
	_181sqlite3DbFree(tls, _db, _zModuleName)
	return int32(7)

_6:
	*(*uintptr)(unsafe.Pointer(_pVTable)) = _db
	*(*uintptr)(unsafe.Pointer(_pVTable + 8)) = _pMod
	_iDb = _1069sqlite3SchemaToIndex(tls, _db, *(*uintptr)(unsafe.Pointer(_pTab + 112)))
	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTab + 88))) + 8)) = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)))

	*(*uintptr)(unsafe.Pointer(_sCtx + 8)) = _pTab
	*(*uintptr)(unsafe.Pointer(_sCtx)) = _pVTable
	*(*uintptr)(unsafe.Pointer(_sCtx + 16)) = *(*uintptr)(unsafe.Pointer(_db + 472))
	*(*int32)(unsafe.Pointer(_sCtx + 24)) = int32(0)
	*(*uintptr)(unsafe.Pointer(_db + 472)) = _sCtx
	_rc = fn167(_xConstruct)(tls, _db, *(*uintptr)(unsafe.Pointer(_pMod + 16)), _nArg, _azArg, _pVTable+16, _zErr)
	*(*uintptr)(unsafe.Pointer(_db + 472)) = *(*uintptr)(unsafe.Pointer(_sCtx + 16))
	if _rc != int32(7) {
		goto _7
	}

	_178sqlite3OomFault(tls, _db)
_7:
	if int32(0) == _rc {
		goto _8
	}

	if (*(*uintptr)(unsafe.Pointer(_zErr))) != 0 {
		goto _10
	}

	*(*uintptr)(unsafe.Pointer(_pzErr)) = _226sqlite3MPrintf(tls, _db, ts+23483 /* "vtable constructor failed: %s" */, _zModuleName)
	goto _11

_10:
	*(*uintptr)(unsafe.Pointer(_pzErr)) = _226sqlite3MPrintf(tls, _db, ts+429 /* "%s" */, *(*uintptr)(unsafe.Pointer(_zErr)))
	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_zErr)))
_11:
	_181sqlite3DbFree(tls, _db, _pVTable)
	goto _9

_8:
	if *(*uintptr)(unsafe.Pointer(_pVTable + 16)) == 0 {
		goto _12
	}

	crt.Xmemset(tls, *(*uintptr)(unsafe.Pointer(_pVTable + 16)), int32(0), uint64(24))
	*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pVTable + 16)))) = *(*uintptr)(unsafe.Pointer(_pMod))
	*(*int32)(unsafe.Pointer(_pVTable + 24)) = int32(1)
	if (*(*int32)(unsafe.Pointer(_sCtx + 24))) != int32(0) {
		goto _13
	}

	_zFormat = ts + 23513 /* "vtable constructor did not decla..." */
	*(*uintptr)(unsafe.Pointer(_pzErr)) = _226sqlite3MPrintf(tls, _db, _zFormat, *(*uintptr)(unsafe.Pointer(_pTab)))
	_566sqlite3VtabUnlock(tls, _pVTable)
	_rc = int32(1)
	goto _14

_13:
	_oooHidden = uint8(0)
	*(*uintptr)(unsafe.Pointer(_pVTable + 40)) = *(*uintptr)(unsafe.Pointer(_pTab + 96))
	*(*uintptr)(unsafe.Pointer(_pTab + 96)) = _pVTable
	_iCol = int32(0)
_15:
	if _iCol >= int32(*(*int16)(unsafe.Pointer(_pTab + 70))) {
		goto _17
	}

	_zType = _223sqlite3ColumnType(tls, (*(*uintptr)(unsafe.Pointer(_pTab + 8)))+32*uintptr(_iCol), ts+4553 /* "" */)
	_i = int32(0)
	_nType = _211sqlite3Strlen30(tls, _zType)
	_i = int32(0)
_18:
	if _i >= _nType {
		goto _20
	}

	if int32(0) != Xsqlite3_strnicmp(tls, ts+23559 /* "hidden" */, _zType+uintptr(_i), int32(6)) || _i != int32(0) && int32(*(*int8)(unsafe.Pointer(_zType + uintptr(_i-int32(1))))) != int32(' ') || int32(*(*int8)(unsafe.Pointer(_zType + uintptr(_i+int32(6))))) != int32('\x00') && int32(*(*int8)(unsafe.Pointer(_zType + uintptr(_i+int32(6))))) != int32(' ') {
		goto _21
	}

	goto _20

_21:
	_i++
	goto _18

_20:
	if _i >= _nType {
		goto _22
	}

	_nDel = int32(6) + func() int32 {
		if (*(*int8)(unsafe.Pointer(_zType + uintptr(_i+int32(6))))) != 0 {
			return int32(1)
		}
		return int32(0)
	}()
	_j = _i
_24:
	if (_j + _nDel) > _nType {
		goto _26
	}

	*(*int8)(unsafe.Pointer(_zType + uintptr(_j))) = *(*int8)(unsafe.Pointer(_zType + uintptr(_j+_nDel)))
	_j++
	goto _24

_26:
	if int32(*(*int8)(unsafe.Pointer(_zType + uintptr(_i)))) != int32('\x00') || _i <= int32(0) {
		goto _27
	}

	*(*int8)(unsafe.Pointer(_zType + uintptr(_i-int32(1)))) = int8('\x00')
_27:
	{
		p := &(*(*uint8)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pTab + 8))) + 32*uintptr(_iCol)) + 27)))
		*p = uint8(int32(*p) | int32(0x2))
	}
	_oooHidden = uint8(0x80)
	goto _23

_22:
	{
		p := &(*(*uint32)(unsafe.Pointer(_pTab + 64)))
		*p = uint32(uint32(*p) | uint32(_oooHidden))
	}
_23:
	_iCol++
	goto _15

_17:
_14:
_12:
_9:
	_181sqlite3DbFree(tls, _db, _zModuleName)
	return _rc
}

// _1037sqlite3GetVTable is defined at sqlite3.c:126456:23
func _1037sqlite3GetVTable(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pTab uintptr /* *TTable = STable */) (r uintptr /* *TVTable = SVTable */) {
	var _pVtab uintptr // *TVTable = SVTable

	_pVtab = *(*uintptr)(unsafe.Pointer(_pTab + 96))
_1:
	if _pVtab == 0 || (*(*uintptr)(unsafe.Pointer(_pVtab))) == _db {
		goto _3
	}

	_pVtab = *(*uintptr)(unsafe.Pointer(_pVtab + 40))
	goto _1

_3:
	return _pVtab
}

// _1038vtabDisconnectAll is defined at sqlite3.c:126491:15
func _1038vtabDisconnectAll(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _p uintptr /* *TTable = STable */) (r uintptr /* *TVTable = SVTable */) {
	var (
		_pRet    uintptr // *TVTable = SVTable
		_pVTable uintptr // *TVTable = SVTable
		_db2     uintptr // *Tsqlite3 = Ssqlite3
		_pNext   uintptr // *TVTable = SVTable
	)
	_pRet = 0
	_pVTable = *(*uintptr)(unsafe.Pointer(_p + 96))
	*(*uintptr)(unsafe.Pointer(_p + 96)) = null

_1:
	if _pVTable == 0 {
		goto _2
	}

	_db2 = *(*uintptr)(unsafe.Pointer(_pVTable))
	_pNext = *(*uintptr)(unsafe.Pointer(_pVTable + 40))

	if _db2 != _db {
		goto _3
	}

	_pRet = _pVTable
	*(*uintptr)(unsafe.Pointer(_p + 96)) = _pRet
	*(*uintptr)(unsafe.Pointer(_pRet + 40)) = null
	goto _4

_3:
	*(*uintptr)(unsafe.Pointer(_pVTable + 40)) = *(*uintptr)(unsafe.Pointer(_db2 + 488))
	*(*uintptr)(unsafe.Pointer(_db2 + 488)) = _pVTable
_4:
	_pVTable = _pNext
	goto _1

_2:
	return _pRet
}

// _1039sqlite3PagerMaxPageCount is defined at sqlite3.c:51305:20
func _1039sqlite3PagerMaxPageCount(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _mxPage int32) (r int32) {
	if _mxPage <= int32(0) {
		goto _1
	}

	*(*uint32)(unsafe.Pointer(_pPager + 192)) = uint32(_mxPage)
_1:
	return int32(*(*uint32)(unsafe.Pointer(_pPager + 192)))
}

// _1040findNextHostParameter is defined at sqlite3.c:78901:12
func _1040findNextHostParameter(tls crt.TLS, _zSql uintptr /* *int8 */, _pnToken uintptr /* *int32 */) (r int32) {
	esc := crt.MustMalloc(4)
	var (
		_tokenType = esc // *int32
		_nTotal    int32
		_n         int32
	)
	defer crt.Free(esc)
	_nTotal = int32(0)
	*(*int32)(unsafe.Pointer(_pnToken)) = int32(0)
_1:
	if (*(*int8)(unsafe.Pointer(_zSql))) == 0 {
		goto _2
	}

	_n = _933sqlite3GetToken(tls, _zSql, _tokenType)

	if (*(*int32)(unsafe.Pointer(_tokenType))) != int32(135) {
		goto _3
	}

	*(*int32)(unsafe.Pointer(_pnToken)) = _n
	goto _2

_3:
	_nTotal = int32(_nTotal + _n)
	_zSql += uintptr(_n)
	goto _1

_2:
	return _nTotal
}

// _1041sqlite3VdbeParameterIndex is defined at sqlite3.c:78449:20
func _1041sqlite3VdbeParameterIndex(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */, _zName uintptr /* *int8 */, _nName int32) (r int32) {
	if _p != 0 && _zName != 0 {
		goto _1
	}

	return int32(0)

_1:
	return _1234sqlite3VListNameToNum(tls, *(*uintptr)(unsafe.Pointer(_p + 168)), _zName, _nName)
}

// _1042vdbeLeave is defined at sqlite3.c:73675:29
func _1042vdbeLeave(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */) {
	var (
		_i   int32
		_db  uintptr // *Tsqlite3 = Ssqlite3
		_aDb uintptr // *TDb = SDb
		_nDb int32
	)
	_db = *(*uintptr)(unsafe.Pointer(_p))
	_aDb = *(*uintptr)(unsafe.Pointer(_db + 32))
	_nDb = *(*int32)(unsafe.Pointer(_db + 40))
	_i = int32(0)
_1:
	if _i >= _nDb {
		goto _3
	}

	if _i == int32(1) || ((*(*uint32)(unsafe.Pointer(_p + 200)))&(uint32(1)<<(uint(_i)%32))) == uint32(0) || (*(*uintptr)(unsafe.Pointer((_aDb + 32*uintptr(_i)) + 8))) == 0 {
		goto _4
	}

	_169sqlite3BtreeLeave(tls, *(*uintptr)(unsafe.Pointer((_aDb + 32*uintptr(_i)) + 8)))
_4:
	_i++
	goto _1

_3:
}

// _1043sqlite3WalCallback is defined at sqlite3.c:58503:20
func _1043sqlite3WalCallback(tls crt.TLS, _pWal uintptr /* *TWal = SWal */) (r int32) {
	var _ret uint32

	_ret = uint32(0)
	if _pWal == 0 {
		goto _1
	}

	_ret = *(*uint32)(unsafe.Pointer(_pWal + 24))
	*(*uint32)(unsafe.Pointer(_pWal + 24)) = uint32(0)
_1:
	return int32(_ret)
}

// _1044sqlite3VdbeFrameDelete is defined at sqlite3.c:73786:21
func _1044sqlite3VdbeFrameDelete(tls crt.TLS, _p uintptr /* *TVdbeFrame = SVdbeFrame */) {
	var (
		_i     int32
		_aMem  uintptr // *TMem = Ssqlite3_value
		_apCsr uintptr // **TVdbeCursor = SVdbeCursor
	)
	_aMem = _p + 112
	_apCsr = _aMem + 56*uintptr(*(*int32)(unsafe.Pointer(_p + 96)))
	_i = int32(0)
_1:
	if _i >= (*(*int32)(unsafe.Pointer(_p + 100))) {
		goto _3
	}

	_684sqlite3VdbeFreeCursor(tls, *(*uintptr)(unsafe.Pointer(_p)), *(*uintptr)(unsafe.Pointer(_apCsr + 8*uintptr(_i))))
	_i++
	goto _1

_3:
	_624releaseMemArray(tls, _aMem, *(*int32)(unsafe.Pointer(_p + 96)))
	_739sqlite3VdbeDeleteAuxData(tls, *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_p)))), _p+72, int32(-1), int32(0))
	_181sqlite3DbFree(tls, *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_p)))), _p)
}

// _1045aMJNeeded [6]uint8, escapes: true, sqlite3.c:74440:23
var _1045aMJNeeded = ds + 8864

// _1046sqlite3VtabSync is defined at sqlite3.c:127201:20
func _1046sqlite3VtabSync(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _p uintptr /* *TVdbe = SVdbe */) (r int32) {
	var (
		_i       int32
		_rc      int32
		_aVTrans uintptr // **TVTable = SVTable
		_x       uintptr // *func(crt.TLS, uintptr) int32
		_pVtab   uintptr // *Tsqlite3_vtab = Ssqlite3_vtab
	)
	_rc = int32(0)
	_aVTrans = *(*uintptr)(unsafe.Pointer(_db + 480))
	*(*uintptr)(unsafe.Pointer(_db + 480)) = null
	_i = int32(0)
_1:
	if _rc != int32(0) || _i >= (*(*int32)(unsafe.Pointer(_db + 444))) {
		goto _3
	}

	_pVtab = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_aVTrans + 8*uintptr(_i)))) + 16))
	if _pVtab == 0 || set4(&_x, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pVtab))) + 120))) == 0 {
		goto _4
	}

	_rc = fn12(_x)(tls, _pVtab)
	_698sqlite3VtabImportErrmsg(tls, _p, _pVtab)
_4:
	_i++
	goto _1

_3:
	*(*uintptr)(unsafe.Pointer(_db + 480)) = _aVTrans
	return _rc
}

// _1047sqlite3BtreeGetFilename is defined at sqlite3.c:69336:27
func _1047sqlite3BtreeGetFilename(tls crt.TLS, _p uintptr /* *TBtree = SBtree */) (r uintptr /* *int8 */) {
	return _511sqlite3PagerFilename(tls, *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_p + 8)))), int32(1))
}

// _1048sqlite3VtabCommit is defined at sqlite3.c:127232:20
func _1048sqlite3VtabCommit(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */) (r int32) {
	_449callFinaliser(tls, _db, int32(128))
	return int32(0)
}

// _1049sqlite3OsOpenMalloc is defined at sqlite3.c:20976:20
func _1049sqlite3OsOpenMalloc(tls crt.TLS, _pVfs uintptr /* *Tsqlite3_vfs = Ssqlite3_vfs */, _zFile uintptr /* *int8 */, _ppFile uintptr /* **Tsqlite3_file = Ssqlite3_file */, _flags int32, _pOutFlags uintptr /* *int32 */) (r int32) {
	var (
		_rc    int32
		_pFile uintptr // *Tsqlite3_file = Ssqlite3_file
	)
	_pFile = _135sqlite3MallocZero(tls, uint64(*(*int32)(unsafe.Pointer(_pVfs + 4))))
	if _pFile == 0 {
		goto _1
	}

	_rc = _845sqlite3OsOpen(tls, _pVfs, _zFile, _pFile, _flags, _pOutFlags)
	if _rc == int32(0) {
		goto _3
	}

	Xsqlite3_free(tls, _pFile)
	goto _4

_3:
	*(*uintptr)(unsafe.Pointer(_ppFile)) = _pFile
_4:
	goto _2

_1:
	_rc = int32(7)
_2:
	return _rc
}

// _1050sqlite3BtreeGetJournalname is defined at sqlite3.c:69349:27
func _1050sqlite3BtreeGetJournalname(tls crt.TLS, _p uintptr /* *TBtree = SBtree */) (r uintptr /* *int8 */) {
	return _1235sqlite3PagerJournalname(tls, *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_p + 8)))))
}

// _1051sqlite3OsCloseFree is defined at sqlite3.c:20998:21
func _1051sqlite3OsCloseFree(tls crt.TLS, _pFile uintptr /* *Tsqlite3_file = Ssqlite3_file */) {
	_849sqlite3OsClose(tls, _pFile)
	Xsqlite3_free(tls, _pFile)
}

// _1052maxInt Ti64 = Tsqlite_int64 = int64, escapes: false, sqlite3.c:70877:20
var _1052maxInt = int64(9223372036854775807)

// _1053minInt Ti64 = Tsqlite_int64 = int64, escapes: false, sqlite3.c:70878:20
var _1053minInt = int64(-9223372036854775808)

// _1054pcache1Free is defined at sqlite3.c:45922:13
func _1054pcache1Free(tls crt.TLS, _p uintptr /* *void */) {
	var (
		_pSlot  uintptr // *TPgFreeslot = SPgFreeslot
		_nFreed int32
	)
	if _p != 0 {
		goto _1
	}

	return

_1:
	if uint64(_p) < uint64(*(*uintptr)(unsafe.Pointer(_275pcache1_g + 104))) || uint64(_p) >= uint64(*(*uintptr)(unsafe.Pointer(_275pcache1_g + 112))) {
		goto _2
	}

	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_275pcache1_g + 120)))
	_108sqlite3StatusDown(tls, int32(1), int32(1))
	_pSlot = _p
	*(*uintptr)(unsafe.Pointer(_pSlot)) = *(*uintptr)(unsafe.Pointer(_275pcache1_g + 128))
	*(*uintptr)(unsafe.Pointer(_275pcache1_g + 128)) = _pSlot
	(*(*int32)(unsafe.Pointer(_275pcache1_g + 136)))++
	*(*int32)(unsafe.Pointer(_275pcache1_g + 140)) = bool2int((*(*int32)(unsafe.Pointer(_275pcache1_g + 136))) < (*(*int32)(unsafe.Pointer(_275pcache1_g + 100))))

	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_275pcache1_g + 120)))
	goto _3

_2:
	_nFreed = int32(0)
	_nFreed = _109sqlite3MallocSize(tls, _p)
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_275pcache1_g + 120)))
	_108sqlite3StatusDown(tls, int32(2), _nFreed)
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_275pcache1_g + 120)))
	Xsqlite3_free(tls, _p)
_3:
}

// _1055pcache1Alloc is defined at sqlite3.c:45884:13
func _1055pcache1Alloc(tls crt.TLS, _nByte int32) (r uintptr /* *void */) {
	var (
		_p  uintptr // *void
		_sz int32
	)
	_p = 0

	if _nByte > (*(*int32)(unsafe.Pointer(_275pcache1_g + 92))) {
		goto _1
	}

	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_275pcache1_g + 120)))
	_p = *(*uintptr)(unsafe.Pointer(_275pcache1_g + 128))
	if _p == 0 {
		goto _2
	}

	*(*uintptr)(unsafe.Pointer(_275pcache1_g + 128)) = *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_275pcache1_g + 128))))
	(*(*int32)(unsafe.Pointer(_275pcache1_g + 136)))--
	*(*int32)(unsafe.Pointer(_275pcache1_g + 140)) = bool2int((*(*int32)(unsafe.Pointer(_275pcache1_g + 136))) < (*(*int32)(unsafe.Pointer(_275pcache1_g + 100))))

	_434sqlite3StatusHighwater(tls, int32(7), _nByte)
	_437sqlite3StatusUp(tls, int32(1), int32(1))
_2:
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_275pcache1_g + 120)))
_1:
	if _p != 0 {
		goto _3
	}

	_p = _198sqlite3Malloc(tls, uint64(_nByte))
	if _p == 0 {
		goto _4
	}

	_sz = _109sqlite3MallocSize(tls, _p)
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_275pcache1_g + 120)))
	_434sqlite3StatusHighwater(tls, int32(7), _nByte)
	_437sqlite3StatusUp(tls, int32(2), _sz)
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_275pcache1_g + 120)))
_4:
_3:
	return _p
}

// _1056sqlite3PcacheClear is defined at sqlite3.c:45373:21
func _1056sqlite3PcacheClear(tls crt.TLS, _pCache uintptr /* *TPCache = SPCache */) {
	_915sqlite3PcacheTruncate(tls, _pCache, uint32(0))
}

// _1057createAggContext is defined at sqlite3.c:77704:29
func _1057createAggContext(tls crt.TLS, _p uintptr /* *Tsqlite3_context = Ssqlite3_context */, _nByte int32) (r uintptr /* *void */) {
	var _pMem uintptr // *TMem = Ssqlite3_value

	_pMem = *(*uintptr)(unsafe.Pointer(_p + 16))

	if _nByte > int32(0) {
		goto _1
	}

	_643sqlite3VdbeMemSetNull(tls, _pMem)
	*(*uintptr)(unsafe.Pointer(_pMem + 16)) = null
	goto _2

_1:
	_628sqlite3VdbeMemClearAndResize(tls, _pMem, _nByte)
	*(*uint16)(unsafe.Pointer(_pMem + 8)) = uint16(0x2000)
	*(*uintptr)(unsafe.Pointer(_pMem)) = *(*uintptr)(unsafe.Pointer(_p + 8))
	if (*(*uintptr)(unsafe.Pointer(_pMem + 16))) == 0 {
		goto _3
	}

	crt.Xmemset(tls, *(*uintptr)(unsafe.Pointer(_pMem + 16)), int32(0), uint64(_nByte))
_3:
_2:
	return *(*uintptr)(unsafe.Pointer(_pMem + 16))
}

// _1058sqlite3VListNumToName is defined at sqlite3.c:29683:27
func _1058sqlite3VListNumToName(tls crt.TLS, _pIn uintptr /* *TVList = int32 */, _iVal int32) (r uintptr /* *int8 */) {
	var (
		_i  int32
		_mx int32
	)
	if _pIn != 0 {
		goto _1
	}

	return null

_1:
	_mx = *(*int32)(unsafe.Pointer(_pIn + 4))
	_i = int32(2)
_2:
	if (*(*int32)(unsafe.Pointer(_pIn + 4*uintptr(_i)))) != _iVal {
		goto _5
	}

	return _pIn + 4*uintptr(_i+int32(2))

_5:
	_i = int32(_i + (*(*int32)(unsafe.Pointer(_pIn + 4*uintptr(_i+int32(1))))))
	if _i < _mx {
		goto _2
	}

	return null
}

// _1059sqlite3Utf16to8 is defined at sqlite3.c:28035:21
func _1059sqlite3Utf16to8(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _z uintptr /* *void */, _nByte int32, _enc uint8) (r uintptr /* *int8 */) {
	esc := crt.MustMalloc(56)
	var _m = esc // *TMem = Ssqlite3_value
	defer crt.Free(esc)
	crt.Xmemset(tls, _m, int32(0), uint64(56))
	*(*uintptr)(unsafe.Pointer(_m + 40)) = _db
	_395sqlite3VdbeMemSetStr(tls, _m, _z, _nByte, _enc, null)
	_396sqlite3VdbeChangeEncoding(tls, _m, int32(1))
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _1
	}

	_397sqlite3VdbeMemRelease(tls, _m)
	*(*uintptr)(unsafe.Pointer(_m + 16)) = null
_1:
	return *(*uintptr)(unsafe.Pointer(_m + 16))
}

// _1060sqlite3PrimaryKeyIndex is defined at sqlite3.c:101509:22
func _1060sqlite3PrimaryKeyIndex(tls crt.TLS, _pTab uintptr /* *TTable = STable */) (r uintptr /* *TIndex = SIndex */) {
	var _p uintptr // *TIndex = SIndex

	_p = *(*uintptr)(unsafe.Pointer(_pTab + 16))
_1:
	if _p == 0 || int32(uint32(*(*uint8)(unsafe.Pointer(_p + 99)))<<30>>30) == int32(2) {
		goto _3
	}

	_p = *(*uintptr)(unsafe.Pointer(_p + 40))
	goto _1

_3:
	return _p
}

// _1061outOfMem [14]uint16, escapes: true, sqlite3.c:144253:20
var _1061outOfMem = ds + 8870

// _1062misuse [34]uint16, escapes: true, sqlite3.c:144256:20
var _1062misuse = ds + 8898

// _1063sqlite3_get_table_cb is defined at sqlite3.c:123795:12
func _1063sqlite3_get_table_cb(tls crt.TLS, _pArg uintptr /* *void */, _nCol int32, _argv uintptr /* **int8 */, _colv uintptr /* **int8 */) (r int32) {
	var (
		_p     uintptr // *TTabResult = struct{XazResult *...uint32;XnData uint32;Xrc int32;}
		_need  int32
		_i     int32
		_z     uintptr // *int8
		_azNew uintptr // **int8
		_n     int32
	)
	_p = _pArg
	if (*(*uint32)(unsafe.Pointer(_p + 20))) != uint32(0) || _argv == 0 {
		goto _1
	}

	_need = _nCol * int32(2)
	goto _2

_1:
	_need = _nCol
_2:
	if ((*(*uint32)(unsafe.Pointer(_p + 28))) + uint32(_need)) <= (*(*uint32)(unsafe.Pointer(_p + 16))) {
		goto _3
	}

	*(*uint32)(unsafe.Pointer(_p + 16)) = ((*(*uint32)(unsafe.Pointer(_p + 16))) * uint32(2)) + uint32(_need)
	_azNew = Xsqlite3_realloc64(tls, *(*uintptr)(unsafe.Pointer(_p)), uint64(uint64(8)*uint64(*(*uint32)(unsafe.Pointer(_p + 16)))))
	if _azNew != 0 {
		goto _4
	}

	goto _malloc_failed

_4:
	*(*uintptr)(unsafe.Pointer(_p)) = _azNew
_3:
	if (*(*uint32)(unsafe.Pointer(_p + 20))) != uint32(0) {
		goto _5
	}

	*(*uint32)(unsafe.Pointer(_p + 24)) = uint32(_nCol)
	_i = int32(0)
_7:
	if _i >= _nCol {
		goto _9
	}

	_z = Xsqlite3_mprintf(tls, ts+429 /* "%s" */, *(*uintptr)(unsafe.Pointer(_colv + 8*uintptr(_i))))
	if _z != 0 {
		goto _10
	}

	goto _malloc_failed

_10:
	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p))) + 8*uintptr(postinc53(&(*(*uint32)(unsafe.Pointer(_p + 28))))))) = _z
	_i++
	goto _7

_9:
	goto _6

_5:
	if int32(*(*uint32)(unsafe.Pointer(_p + 24))) == _nCol {
		goto _11
	}

	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_p + 8)))
	*(*uintptr)(unsafe.Pointer(_p + 8)) = Xsqlite3_mprintf(tls, ts+23566 /* "sqlite3_get_table() called with ..." */)
	*(*int32)(unsafe.Pointer(_p + 32)) = int32(1)
	return int32(1)

_11:
_6:
	if _argv == 0 {
		goto _12
	}

	_i = int32(0)
_13:
	if _i >= _nCol {
		goto _15
	}

	if (*(*uintptr)(unsafe.Pointer(_argv + 8*uintptr(_i)))) != 0 {
		goto _16
	}

	_z = null
	goto _17

_16:
	_n = _211sqlite3Strlen30(tls, *(*uintptr)(unsafe.Pointer(_argv + 8*uintptr(_i)))) + int32(1)
	_z = Xsqlite3_malloc64(tls, uint64(_n))
	if _z != 0 {
		goto _18
	}

	goto _malloc_failed

_18:
	crt.Xmemcpy(tls, _z, *(*uintptr)(unsafe.Pointer(_argv + 8*uintptr(_i))), uint64(_n))
_17:
	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p))) + 8*uintptr(postinc53(&(*(*uint32)(unsafe.Pointer(_p + 28))))))) = _z
	_i++
	goto _13

_15:
	(*(*uint32)(unsafe.Pointer(_p + 20)))++
_12:
	return int32(0)

	goto _malloc_failed
_malloc_failed:
	*(*int32)(unsafe.Pointer(_p + 32)) = int32(7)
	return int32(1)
}

// _1064sqlite3Prepare16 is defined at sqlite3.c:117586:12
func _1064sqlite3Prepare16(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _zSql uintptr /* *void */, _nBytes int32, _prepFlags uint32, _ppStmt uintptr /* **Tsqlite3_stmt = Ssqlite3_stmt */, _pzTail uintptr /* **void */) (r int32) {
	esc := crt.MustMalloc(8)
	var (
		_zSql8        uintptr // *int8
		_zTail8       = esc   // **int8
		_rc           int32
		_sz           int32
		_z            uintptr // *int8
		_chars_parsed int32
	)
	defer crt.Free(esc)
	*(*uintptr)(unsafe.Pointer(_zTail8)) = 0
	_rc = int32(0)
	*(*uintptr)(unsafe.Pointer(_ppStmt)) = null
	if _176sqlite3SafetyCheckOk(tls, _db) != 0 && _zSql != 0 {
		goto _1
	}

	return _29sqlite3MisuseError(tls, int32(117607))

_1:
	if _nBytes < int32(0) {
		goto _2
	}

	_z = _zSql
	_sz = int32(0)
_3:
	if _sz >= _nBytes || int32(*(*int8)(unsafe.Pointer(_z + uintptr(_sz)))) == int32(0) && int32(*(*int8)(unsafe.Pointer(_z + uintptr(_sz+int32(1))))) == int32(0) {
		goto _5
	}

	_sz = int32(_sz + int32(2))
	goto _3

_5:
	_nBytes = _sz
_2:
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	_zSql8 = _1059sqlite3Utf16to8(tls, _db, _zSql, _nBytes, uint8(2))
	if _zSql8 == 0 {
		goto _6
	}

	_rc = _190sqlite3LockAndPrepare(tls, _db, _zSql8, int32(-1), _prepFlags, null, _ppStmt, _zTail8)
_6:
	if (*(*uintptr)(unsafe.Pointer(_zTail8))) == 0 || _pzTail == 0 {
		goto _7
	}

	_chars_parsed = _810sqlite3Utf8CharLen(tls, _zSql8, int32(int64((*(*uintptr)(unsafe.Pointer(_zTail8)))-_zSql8)))
	*(*uintptr)(unsafe.Pointer(_pzTail)) = _zSql + uintptr(_1236sqlite3Utf16ByteLen(tls, _zSql, _chars_parsed))
_7:
	_181sqlite3DbFree(tls, _db, _zSql8)
	_rc = _182sqlite3ApiExit(tls, _db, _rc)
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	return _rc
}

// _1065sqlite3VdbeMemSetZeroBlob is defined at sqlite3.c:71121:21
func _1065sqlite3VdbeMemSetZeroBlob(tls crt.TLS, _pMem uintptr /* *TMem = Ssqlite3_value */, _n int32) {
	_397sqlite3VdbeMemRelease(tls, _pMem)
	*(*uint16)(unsafe.Pointer(_pMem + 8)) = uint16(16400)
	*(*int32)(unsafe.Pointer(_pMem + 12)) = int32(0)
	if _n >= int32(0) {
		goto _1
	}

	_n = int32(0)
_1:
	*(*int32)(unsafe.Pointer(_pMem)) = _n
	*(*uint8)(unsafe.Pointer(_pMem + 10)) = uint8(1)
	*(*uintptr)(unsafe.Pointer(_pMem + 16)) = null
}

type SIncrblob struct {
	XnByte   int32
	XiOffset int32
	XiCol    uint16
	XpCsr    uintptr // *SBtCursor
	XpStmt   uintptr // *Ssqlite3_stmt
	Xdb      uintptr // *Ssqlite3
	XzDb     uintptr // *int8
	XpTab    uintptr // *STable
}

// _1066iLn int32, escapes: false, sqlite3.c:86665:24
var _1066iLn int32

// _1067openBlob [6]SVdbeOpList, escapes: true, sqlite3.c:86666:31
var _1067openBlob = ds + 8966

// _1068sqlite3LocateTable is defined at sqlite3.c:101037:22
func _1068sqlite3LocateTable(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _flags uint32, _zName uintptr /* *int8 */, _zDbase uintptr /* *int8 */) (r uintptr /* *TTable = STable */) {
	var (
		_p    uintptr // *TTable = STable
		_zMsg uintptr // *int8
		_pMod uintptr // *TModule = SModule
	)
	if int32(0) == _1237sqlite3ReadSchema(tls, _pParse) {
		goto _1
	}

	return null

_1:
	_p = _221sqlite3FindTable(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _zName, _zDbase)
	if _p != 0 {
		goto _2
	}

	_zMsg = func() uintptr {
		if (_flags & uint32(0x1)) != 0 {
			return ts + 23631 /* "no such view" */
		}
		return ts + 23644 /* "no such table" */
	}()
	if _213sqlite3FindDbName(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _zDbase) >= int32(1) {
		goto _3
	}

	_pMod = _424sqlite3HashFind(tls, (*(*uintptr)(unsafe.Pointer(_pParse)))+448, _zName)
	if _pMod != 0 || Xsqlite3_strnicmp(tls, _zName, ts+23658 /* "pragma_" */, int32(7)) != int32(0) {
		goto _4
	}

	_pMod = _1238sqlite3PragmaVtabRegister(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _zName)
_4:
	if _pMod == 0 || _1239sqlite3VtabEponymousTableInit(tls, _pParse, _pMod) == 0 {
		goto _5
	}

	return *(*uintptr)(unsafe.Pointer(_pMod + 32))

_5:
_3:
	if (_flags & uint32(0x2)) != uint32(0) {
		goto _6
	}

	if _zDbase == 0 {
		goto _7
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+23666 /* "%s: %s.%s" */, _zMsg, _zDbase, _zName)
	goto _8

_7:
	_550sqlite3ErrorMsg(tls, _pParse, ts+23676 /* "%s: %s" */, _zMsg, _zName)
_8:
	*(*uint8)(unsafe.Pointer(_pParse + 29)) = uint8(1)
_6:
_2:
	return _p
}

// _1069sqlite3SchemaToIndex is defined at sqlite3.c:117249:20
func _1069sqlite3SchemaToIndex(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pSchema uintptr /* *TSchema = SSchema */) (r int32) {
	var _i int32

	_i = int32(-1000000)

	if _pSchema == 0 {
		goto _1
	}

	_i = int32(0)
_2:
	if _i >= (*(*int32)(unsafe.Pointer(_db + 40))) {
		goto _4
	}

	if (*(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_i)) + 24))) != _pSchema {
		goto _5
	}

	goto _4

_5:
	_i++
	goto _2

_4:
_1:
	return _i
}

// _1070sqlite3VdbeCreate is defined at sqlite3.c:72204:21
func _1070sqlite3VdbeCreate(tls crt.TLS, _pParse uintptr /* *TParse = SParse */) (r uintptr /* *TVdbe = SVdbe */) {
	var (
		_db uintptr // *Tsqlite3 = Ssqlite3
		_p  uintptr // *TVdbe = SVdbe
	)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_p = _373sqlite3DbMallocRawNN(tls, _db, uint64(288))
	if _p != 0 {
		goto _1
	}

	return null

_1:
	crt.Xmemset(tls, _p+104, int32(0), uint64(184))
	*(*uintptr)(unsafe.Pointer(_p)) = _db
	if (*(*uintptr)(unsafe.Pointer(_db + 8))) == 0 {
		goto _2
	}

	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 8))) + 8)) = _p
_2:
	*(*uintptr)(unsafe.Pointer(_p + 16)) = *(*uintptr)(unsafe.Pointer(_db + 8))
	*(*uintptr)(unsafe.Pointer(_p + 8)) = null
	*(*uintptr)(unsafe.Pointer(_db + 8)) = _p
	*(*uint32)(unsafe.Pointer(_p + 36)) = uint32(0x16bceaa5)
	*(*uintptr)(unsafe.Pointer(_p + 24)) = _pParse
	*(*uintptr)(unsafe.Pointer(_pParse + 16)) = _p

	_1240sqlite3VdbeAddOp2(tls, _p, int32(62), int32(0), int32(1))
	return _p
}

// _1071sqlite3VdbeAddOp4Int is defined at sqlite3.c:72506:20
func _1071sqlite3VdbeAddOp4Int(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */, _op int32, _p1 int32, _p2 int32, _p3 int32, _p4 int32) (r int32) {
	var (
		_addr int32
		_pOp  uintptr // *TVdbeOp = SVdbeOp
	)
	_addr = _1241sqlite3VdbeAddOp3(tls, _p, _op, _p1, _p2, _p3)
	if int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p))) + 97))) != int32(0) {
		goto _1
	}

	_pOp = (*(*uintptr)(unsafe.Pointer(_p + 104))) + 24*uintptr(_addr)
	*(*int8)(unsafe.Pointer(_pOp + 1)) = int8(-3)
	*(*int32)(unsafe.Pointer(_pOp + 16)) = _p4
_1:
	return _addr
}

// _1072sqlite3VdbeChangeP5 is defined at sqlite3.c:73005:21
func _1072sqlite3VdbeChangeP5(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */, _p5 uint16) {
	if (*(*int32)(unsafe.Pointer(_p + 184))) <= int32(0) {
		goto _1
	}

	*(*uint16)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_p + 104))) + 24*uintptr((*(*int32)(unsafe.Pointer(_p + 184)))-int32(1))) + 2)) = _p5
_1:
}

// _1073sqlite3VdbeAddOpList is defined at sqlite3.c:72917:23
func _1073sqlite3VdbeAddOpList(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */, _nOp int32, _aOp uintptr /* *TVdbeOpList = SVdbeOpList */, _iLineno int32) (r uintptr /* *TVdbeOp = SVdbeOp */) {
	var (
		_i      int32
		_pOut   uintptr // *TVdbeOp = SVdbeOp
		_pFirst uintptr // *TVdbeOp = SVdbeOp
	)

	if ((*(*int32)(unsafe.Pointer(_p + 184)))+_nOp) <= (*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 24))) + 60))) || _1242growOpArray(tls, _p, _nOp) == 0 {
		goto _1
	}

	return null

_1:
	_pFirst = set4(&_pOut, (*(*uintptr)(unsafe.Pointer(_p + 104)))+24*uintptr(*(*int32)(unsafe.Pointer(_p + 184))))
	_i = int32(0)
_2:
	if _i >= _nOp {
		goto _4
	}

	*(*uint8)(unsafe.Pointer(_pOut)) = *(*uint8)(unsafe.Pointer(_aOp))
	*(*int32)(unsafe.Pointer(_pOut + 4)) = int32(*(*int8)(unsafe.Pointer(_aOp + 1)))
	*(*int32)(unsafe.Pointer(_pOut + 8)) = int32(*(*int8)(unsafe.Pointer(_aOp + 2)))

	if (int32(*(*uint8)(unsafe.Pointer(_1243sqlite3OpcodeProperty + uintptr(*(*uint8)(unsafe.Pointer(_aOp))))))&int32(0x1)) == int32(0) || int32(*(*int8)(unsafe.Pointer(_aOp + 2))) <= int32(0) {
		goto _5
	}

	{
		p := &(*(*int32)(unsafe.Pointer(_pOut + 8)))
		*p = int32(int32(*p) + (*(*int32)(unsafe.Pointer(_p + 184))))
	}
_5:
	*(*int32)(unsafe.Pointer(_pOut + 12)) = int32(*(*int8)(unsafe.Pointer(_aOp + 3)))
	*(*int8)(unsafe.Pointer(_pOut + 1)) = int8(0)
	*(*uintptr)(unsafe.Pointer(_pOut + 16)) = null
	*(*uint16)(unsafe.Pointer(_pOut + 2)) = uint16(0)

	_i++
	_aOp += 4
	_pOut += 24
	goto _2

_4:
	{
		p := &(*(*int32)(unsafe.Pointer(_p + 184)))
		*p = int32(int32(*p) + _nOp)
	}
	return _pFirst
}

// _1074sqlite3VdbeUsesBtree is defined at sqlite3.c:73623:21
func _1074sqlite3VdbeUsesBtree(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */, _i int32) {
	{
		p := &*(*uint32)(unsafe.Pointer(_p + 196))
		*p = uint32(uint32(*p) | (uint32(1) << (uint(_i) % 32)))
	}
	if _i == int32(1) || _1244sqlite3BtreeSharable(tls, *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p))) + 32))) + 32*uintptr(_i)) + 8))) == 0 {
		goto _1
	}

	{
		p := &*(*uint32)(unsafe.Pointer(_p + 200))
		*p = uint32(uint32(*p) | (uint32(1) << (uint(_i) % 32)))
	}
_1:
}

// _1075sqlite3VdbeChangeP4 is defined at sqlite3.c:73176:21
func _1075sqlite3VdbeChangeP4(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */, _addr int32, azP4 uintptr, _n int32) {
	esc := crt.MustMalloc(8)
	var (
		_zP4 = esc   // **int8
		_pOp uintptr // *TOp = SVdbeOp
		_db  uintptr // *Tsqlite3 = Ssqlite3
	)
	defer crt.Free(esc)
	*(*uintptr)(unsafe.Pointer(_zP4)) = azP4

	_db = *(*uintptr)(unsafe.Pointer(_p))

	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _1
	}

	if _n == int32(-12) {
		goto _2
	}

	_1099freeP4(tls, _db, _n, *(*uintptr)(unsafe.Pointer(_zP4)))
_2:
	return

_1:
	if _addr >= int32(0) {
		goto _3
	}

	_addr = (*(*int32)(unsafe.Pointer(_p + 184))) - int32(1)
_3:
	_pOp = (*(*uintptr)(unsafe.Pointer(_p + 104))) + 24*uintptr(_addr)
	if _n < int32(0) && (*(*int8)(unsafe.Pointer(_pOp + 1))) == 0 {
		goto _4
	}

	_1245vdbeChangeP4Full(tls, _p, _pOp, *(*uintptr)(unsafe.Pointer(_zP4)), _n)
	return

_4:
	if _n != int32(-3) {
		goto _5
	}

	*(*int32)(unsafe.Pointer(_pOp + 16)) = int32(int64(*(*uintptr)(unsafe.Pointer(_zP4))))
	*(*int8)(unsafe.Pointer(_pOp + 1)) = int8(-3)
	goto _6

_5:
	if (*(*uintptr)(unsafe.Pointer(_zP4))) == 0 {
		goto _7
	}

	*(*uintptr)(unsafe.Pointer(_pOp + 16)) = *(*uintptr)(unsafe.Pointer(_zP4))
	*(*int8)(unsafe.Pointer(_pOp + 1)) = int8(_n)
	if _n != int32(-12) {
		goto _8
	}

	_1233sqlite3VtabLock(tls, *(*uintptr)(unsafe.Pointer(_zP4)))
_8:
_7:
_6:
}

// _1076sqlite3VdbeMakeReady is defined at sqlite3.c:74139:21
func _1076sqlite3VdbeMakeReady(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */, _pParse uintptr /* *TParse = SParse */) {
	esc := crt.MustMalloc(32)
	var (
		_db      uintptr // *Tsqlite3 = Ssqlite3
		_nVar    int32
		_nMem    int32
		_nCursor int32
		_nArg    = esc // *int32
		_n       int32
		_x       = esc + 16 // *SReusableSpace
	)
	defer crt.Free(esc)

	_db = *(*uintptr)(unsafe.Pointer(_p))

	_nVar = int32(*(*int16)(unsafe.Pointer(_pParse + 464)))
	_nMem = *(*int32)(unsafe.Pointer(_pParse + 56))
	_nCursor = *(*int32)(unsafe.Pointer(_pParse + 52))
	*(*int32)(unsafe.Pointer(_nArg)) = *(*int32)(unsafe.Pointer(_pParse + 136))
	_nMem = int32(_nMem + _nCursor)
	if _nCursor != int32(0) || _nMem <= int32(0) {
		goto _1
	}

	_nMem++
_1:
	_n = int32(((uint64(24) * uint64(*(*int32)(unsafe.Pointer(_p + 184)))) + uint64(7)) & uint64(18446744073709551608))
	*(*uintptr)(unsafe.Pointer(_x)) = (*(*uintptr)(unsafe.Pointer(_p + 104))) + uintptr(_n)

	*(*int32)(unsafe.Pointer(_x + 8)) = ((*(*int32)(unsafe.Pointer(_pParse + 64))) - _n) & int32(-8)

	_1246resolveP2Values(tls, _p, _nArg)
	set168b(&(*(*uint16)(unsafe.Pointer(_p + 194))), uint32(uint8(bool2int(((*(*uint8)(unsafe.Pointer(_pParse + 32))) != 0) && ((*(*uint8)(unsafe.Pointer(_pParse + 33))) != 0)))))
	if (*(*uint8)(unsafe.Pointer(_pParse + 467))) == 0 || _nMem >= int32(10) {
		goto _2
	}

	_nMem = int32(10)
_2:
	set42b(&(*(*uint16)(unsafe.Pointer(_p + 194))), uint32(0))
_3:
	*(*int32)(unsafe.Pointer(_x + 12)) = int32(0)
	*(*uintptr)(unsafe.Pointer(_p + 112)) = _1247allocSpace(tls, _x, *(*uintptr)(unsafe.Pointer(_p + 112)), int32(uint64(_nMem)*uint64(56)))
	*(*uintptr)(unsafe.Pointer(_p + 160)) = _1247allocSpace(tls, _x, *(*uintptr)(unsafe.Pointer(_p + 160)), int32(uint64(_nVar)*uint64(56)))
	*(*uintptr)(unsafe.Pointer(_p + 120)) = _1247allocSpace(tls, _x, *(*uintptr)(unsafe.Pointer(_p + 120)), int32(uint64(*(*int32)(unsafe.Pointer(_nArg)))*uint64(8)))
	*(*uintptr)(unsafe.Pointer(_p + 152)) = _1247allocSpace(tls, _x, *(*uintptr)(unsafe.Pointer(_p + 152)), int32(uint64(_nCursor)*uint64(8)))
	if (*(*int32)(unsafe.Pointer(_x + 12))) != int32(0) {
		goto _6
	}

	goto _5

_6:
	*(*uintptr)(unsafe.Pointer(_x)) = set4(&(*(*uintptr)(unsafe.Pointer(_p + 240))), _373sqlite3DbMallocRawNN(tls, _db, uint64(*(*int32)(unsafe.Pointer(_x + 12)))))
	*(*int32)(unsafe.Pointer(_x + 8)) = *(*int32)(unsafe.Pointer(_x + 12))
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _3
	}

	goto _5

_5:
	*(*uintptr)(unsafe.Pointer(_p + 168)) = *(*uintptr)(unsafe.Pointer(_pParse + 488))
	*(*uintptr)(unsafe.Pointer(_pParse + 488)) = null
	set169b(&(*(*uint16)(unsafe.Pointer(_p + 194))), uint32(*(*uint8)(unsafe.Pointer(_pParse + 467))))
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _7
	}

	*(*int16)(unsafe.Pointer(_p + 32)) = int16(0)
	*(*int32)(unsafe.Pointer(_p + 44)) = int32(0)
	*(*int32)(unsafe.Pointer(_p + 40)) = int32(0)
	goto _8

_7:
	*(*int32)(unsafe.Pointer(_p + 44)) = _nCursor
	*(*int16)(unsafe.Pointer(_p + 32)) = int16(_nVar)
	_937initMemArray(tls, *(*uintptr)(unsafe.Pointer(_p + 160)), _nVar, _db, uint16(0x1))
	*(*int32)(unsafe.Pointer(_p + 40)) = _nMem
	_937initMemArray(tls, *(*uintptr)(unsafe.Pointer(_p + 112)), _nMem, _db, uint16(0x80))
	crt.Xmemset(tls, *(*uintptr)(unsafe.Pointer(_p + 152)), int32(0), uint64(_nCursor)*uint64(8))
_8:
	_202sqlite3VdbeRewind(tls, _p)
}

// _1077blobSeekToRow is defined at sqlite3.c:86457:12
func _1077blobSeekToRow(tls crt.TLS, _p uintptr /* *TIncrblob = SIncrblob */, _iRow int64, _pzErr uintptr /* **int8 */) (r int32) {
	var (
		_rc   int32
		_zErr uintptr // *int8
		_v    uintptr // *TVdbe = SVdbe
		_pC   uintptr // *TVdbeCursor = SVdbeCursor
		_type uint32
	)
	_zErr = 0
	_v = *(*uintptr)(unsafe.Pointer(_p + 24))
	*(*uint16)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_v + 112))) + 56) + 8)) = uint16(0x4)
	*(*int64)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_v + 112))) + 56)) = int64(_iRow)
	if (*(*int32)(unsafe.Pointer(_v + 52))) <= int32(4) {
		goto _1
	}

	*(*int32)(unsafe.Pointer(_v + 52)) = int32(4)

	_rc = _385sqlite3VdbeExec(tls, _v)
	goto _2

_1:
	_rc = Xsqlite3_step(tls, *(*uintptr)(unsafe.Pointer(_p + 24)))
_2:
	if _rc != int32(100) {
		goto _3
	}

	_pC = *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_v + 152))))
	_type = func() uint32 {
		if int32(*(*uint16)(unsafe.Pointer(_pC + 74))) > int32(*(*uint16)(unsafe.Pointer(_p + 8))) {
			return *(*uint32)(unsafe.Pointer((_pC + 112) + 4*uintptr(*(*uint16)(unsafe.Pointer(_p + 8)))))
		}
		return uint32(0)
	}()
	if _type >= uint32(12) {
		goto _4
	}

	_zErr = _226sqlite3MPrintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+23683 /* "cannot open value of type %s" */, func() uintptr {
		if _type == uint32(0) {
			return ts + 21230 /* "null" */
		}
		return func() uintptr {
			if _type == uint32(7) {
				return ts + 21215 /* "real" */
			}
			return ts + 21207 /* "integer" */
		}()
	}())
	_rc = int32(1)
	Xsqlite3_finalize(tls, *(*uintptr)(unsafe.Pointer(_p + 24)))
	*(*uintptr)(unsafe.Pointer(_p + 24)) = null
	goto _5

_4:
	*(*int32)(unsafe.Pointer(_p + 4)) = int32(*(*uint32)(unsafe.Pointer((_pC + 112) + 4*uintptr(int32(*(*uint16)(unsafe.Pointer(_p + 8)))+int32(*(*int16)(unsafe.Pointer(_pC + 72)))))))
	*(*int32)(unsafe.Pointer(_p)) = int32(_668sqlite3VdbeSerialTypeLen(tls, _type))
	*(*uintptr)(unsafe.Pointer(_p + 16)) = *(*uintptr)(unsafe.Pointer(_pC + 48))
	_1248sqlite3BtreeIncrblobCursor(tls, *(*uintptr)(unsafe.Pointer(_p + 16)))
_5:
_3:
	if _rc != int32(100) {
		goto _6
	}

	_rc = int32(0)
	goto _7

_6:
	if (*(*uintptr)(unsafe.Pointer(_p + 24))) == 0 {
		goto _8
	}

	_rc = Xsqlite3_finalize(tls, *(*uintptr)(unsafe.Pointer(_p + 24)))
	*(*uintptr)(unsafe.Pointer(_p + 24)) = null
	if _rc != int32(0) {
		goto _9
	}

	_zErr = _226sqlite3MPrintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+23712 /* "no such rowid: %lld" */, _iRow)
	_rc = int32(1)
	goto _10

_9:
	_zErr = _226sqlite3MPrintf(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), ts+429 /* "%s" */, Xsqlite3_errmsg(tls, *(*uintptr)(unsafe.Pointer(_p + 32))))
_10:
_8:
_7:
	*(*uintptr)(unsafe.Pointer(_pzErr)) = _zErr
	return _rc
}

// _1078blobReadWrite is defined at sqlite3.c:86775:12
func _1078blobReadWrite(tls crt.TLS, _pBlob uintptr /* *Tsqlite3_blob = Ssqlite3_blob */, _z uintptr /* *void */, _n int32, _iOffset int32, _xCall uintptr /* *func(crt.TLS, uintptr, uint32, uint32, uintptr) int32 */) (r int32) {
	var (
		_rc int32
		_p  uintptr // *TIncrblob = SIncrblob
		_v  uintptr // *TVdbe = SVdbe
		_db uintptr // *Tsqlite3 = Ssqlite3
	)
	_p = _pBlob
	if _p != 0 {
		goto _1
	}

	return _29sqlite3MisuseError(tls, int32(86787))

_1:
	_db = *(*uintptr)(unsafe.Pointer(_p + 32))
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	_v = *(*uintptr)(unsafe.Pointer(_p + 24))
	if _n >= int32(0) && _iOffset >= int32(0) && (int64(_iOffset)+int64(_n)) <= int64(*(*int32)(unsafe.Pointer(_p))) {
		goto _2
	}

	_rc = int32(1)
	goto _3

_2:
	if _v != 0 {
		goto _4
	}

	_rc = int32(4)
	goto _5

_4:
	_1249sqlite3BtreeEnterCursor(tls, *(*uintptr)(unsafe.Pointer(_p + 16)))
	_rc = fn170(_xCall)(tls, *(*uintptr)(unsafe.Pointer(_p + 16)), uint32(_iOffset+(*(*int32)(unsafe.Pointer(_p + 4)))), uint32(_n), _z)
	_1250sqlite3BtreeLeaveCursor(tls, *(*uintptr)(unsafe.Pointer(_p + 16)))
	if _rc != int32(4) {
		goto _6
	}

	_179sqlite3VdbeFinalize(tls, _v)
	*(*uintptr)(unsafe.Pointer(_p + 24)) = null
	goto _7

_6:
	*(*int32)(unsafe.Pointer(_v + 56)) = _rc
_7:
_5:
_3:
	_136sqlite3Error(tls, _db, _rc)
	_rc = _182sqlite3ApiExit(tls, _db, _rc)
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_db + 24)))
	return _rc
}

// _1079sqlite3BtreePayloadChecked is defined at sqlite3.c:64467:20
func _1079sqlite3BtreePayloadChecked(tls crt.TLS, _pCur uintptr /* *TBtCursor = SBtCursor */, _offset uint32, _amt uint32, _pBuf uintptr /* *void */) (r int32) {
	if int32(*(*uint8)(unsafe.Pointer(_pCur))) != int32(1) {
		goto _1
	}

	return _972accessPayload(tls, _pCur, _offset, _amt, _pBuf, int32(0))

	goto _2

_1:
	return _1251accessPayloadChecked(tls, _pCur, _offset, _amt, _pBuf)

_2:
	return r
}

// _1080sqlite3BtreePutData is defined at sqlite3.c:69485:20
func _1080sqlite3BtreePutData(tls crt.TLS, _pCsr uintptr /* *TBtCursor = SBtCursor */, _offset uint32, _amt uint32, _z uintptr /* *void */) (r int32) {
	var _rc int32

	_rc = func() int32 {
		if int32(*(*uint8)(unsafe.Pointer(_pCsr))) >= int32(3) {
			return _1193btreeRestoreCursorPosition(tls, _pCsr)
		}
		return int32(0)
	}()
	if _rc == int32(0) {
		goto _1
	}

	return _rc

_1:
	if int32(*(*uint8)(unsafe.Pointer(_pCsr))) == int32(1) {
		goto _2
	}

	return int32(4)

_2:
	_360saveAllCursors(tls, *(*uintptr)(unsafe.Pointer(_pCsr + 16)), *(*uint32)(unsafe.Pointer(_pCsr + 80)), _pCsr)

	if (int32(*(*uint8)(unsafe.Pointer(_pCsr + 1))) & int32(0x1)) != int32(0) {
		goto _3
	}

	return int32(8)

_3:
	return _972accessPayload(tls, _pCsr, _offset, _amt, _z, int32(1))
}

// _1081sqlite3CompileOptions is defined at sqlite3.c:772:27
func _1081sqlite3CompileOptions(tls crt.TLS, _pnOpt uintptr /* *int32 */) (r uintptr /* **int8 */) {
	*(*int32)(unsafe.Pointer(_pnOpt)) = int32(2)
	return _1252sqlite3azCompileOpt
}

// _1082sqlite3IsIdChar is defined at sqlite3.c:141163:20
func _1082sqlite3IsIdChar(tls crt.TLS, _c uint8) (r int32) {
	return bool2int((int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(_c)))) & int32(0x46)) != int32(0))
}

// _1083aFlagOp [6]struct{Xop int32;Xmask uint32;}, escapes: true, sqlite3.c:142791:9
var _1083aFlagOp = ds + 8992

// _1084aMap [5]uint8, escapes: true, sqlite3.c:127507:30
var _1084aMap = ds + 9040

// _1085sqlite3BtreeIsReadonly is defined at sqlite3.c:69586:20
func _1085sqlite3BtreeIsReadonly(tls crt.TLS, _p uintptr /* *TBtree = SBtree */) (r int32) {
	return bool2int((int32(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 8))) + 38))) & int32(0x1)) != int32(0))
}

// _1086sqlite3PagerShrink is defined at sqlite3.c:51030:21
func _1086sqlite3PagerShrink(tls crt.TLS, _pPager uintptr /* *TPager = SPager */) {
	_1253sqlite3PcacheShrink(tls, *(*uintptr)(unsafe.Pointer(_pPager + 280)))
}

// _1087sqlite3GetBoolean is defined at sqlite3.c:114367:19
func _1087sqlite3GetBoolean(tls crt.TLS, _z uintptr /* *int8 */, _dflt uint8) (r uint8) {
	return uint8(bool2int(int32(_1254getSafetyLevel(tls, _z, int32(1), _dflt)) != int32(0)))
}

// _1088sqlite3DecOrHexToI64 is defined at sqlite3.c:28794:20
func _1088sqlite3DecOrHexToI64(tls crt.TLS, _z uintptr /* *int8 */, _pOut uintptr /* *Ti64 = Tsqlite_int64 = int64 */) (r int32) {
	esc := crt.MustMalloc(8)
	var (
		_u = esc // *Tu64 = Tsqlite_uint64 = uint64
		_i int32
		_k int32
	)
	defer crt.Free(esc)
	if int32(*(*int8)(unsafe.Pointer(_z))) != int32('0') || int32(*(*int8)(unsafe.Pointer(_z + 1))) != int32('x') && int32(*(*int8)(unsafe.Pointer(_z + 1))) != int32('X') {
		goto _1
	}

	*(*uint64)(unsafe.Pointer(_u)) = uint64(0)
	_i = int32(2)
_3:
	if int32(*(*int8)(unsafe.Pointer(_z + uintptr(_i)))) != int32('0') {
		goto _5
	}

	_i++
	goto _3

_5:
	_k = _i
_6:
	if int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(uint8(*(*int8)(unsafe.Pointer(_z + uintptr(_k))))))))&int32(0x8) == 0 {
		goto _8
	}

	*(*uint64)(unsafe.Pointer(_u)) = ((*(*uint64)(unsafe.Pointer(_u))) * uint64(16)) + uint64(_508sqlite3HexToInt(tls, int32(*(*int8)(unsafe.Pointer(_z + uintptr(_k))))))
	_k++
	goto _6

_8:
	crt.Xmemcpy(tls, _pOut, _u, uint64(8))
	if (int32(*(*int8)(unsafe.Pointer(_z + uintptr(_k)))) == int32(0)) && ((_k - _i) <= int32(16)) {
		return int32(0)
	}

	return int32(2)

	goto _2

_1:
	return _947sqlite3Atoi64(tls, _z, _pOut, _211sqlite3Strlen30(tls, _z), uint8(1))

_2:
	return r
}

// _1089invokeValueDestructor is defined at sqlite3.c:77230:12
func _1089invokeValueDestructor(tls crt.TLS, _p uintptr /* *void */, _xDel uintptr /* *func(crt.TLS, uintptr) */, _pCtx uintptr /* *Tsqlite3_context = Ssqlite3_context */) (r int32) {
	if _xDel != 0 {
		goto _1
	}

	goto _2

_1:
	if _xDel != uintptr(18446744073709551615) {
		goto _3
	}

	goto _4

_3:
	fn16(_xDel)(tls, _p)
_4:
_2:
	if _pCtx == 0 {
		goto _5
	}

	Xsqlite3_result_error_toobig(tls, _pCtx)
_5:
	return int32(18)
}

// _1090sqlite3PagerFlush is defined at sqlite3.c:52113:20
func _1090sqlite3PagerFlush(tls crt.TLS, _pPager uintptr /* *TPager = SPager */) (r int32) {
	var (
		_rc    int32
		_pList uintptr // *TPgHdr = SPgHdr
		_pNext uintptr // *TPgHdr = SPgHdr
	)
	_rc = *(*int32)(unsafe.Pointer(_pPager + 44))
	if (*(*uint8)(unsafe.Pointer(_pPager + 19))) != 0 {
		goto _1
	}

	_pList = _344sqlite3PcacheDirtyList(tls, *(*uintptr)(unsafe.Pointer(_pPager + 280)))

_2:
	if _rc != int32(0) || _pList == 0 {
		goto _3
	}

	_pNext = *(*uintptr)(unsafe.Pointer(_pList + 32))
	if int32(*(*int16)(unsafe.Pointer(_pList + 54))) != int32(0) {
		goto _4
	}

	_rc = _848pagerStress(tls, _pPager, _pList)
_4:
	_pList = _pNext
	goto _2

_3:
_1:
	return _rc
}

// _1091sqlite3VdbeMemSetPointer is defined at sqlite3.c:71162:21
func _1091sqlite3VdbeMemSetPointer(tls crt.TLS, _pMem uintptr /* *TMem = Ssqlite3_value */, _pPtr uintptr /* *void */, _zPType uintptr /* *int8 */, _xDestructor uintptr /* *func(crt.TLS, uintptr) */) {
	*(*uintptr)(unsafe.Pointer(_pMem)) = func() uintptr {
		if _zPType != 0 {
			return _zPType
		}
		return ts + 4553 /* "" */
	}()
	*(*uintptr)(unsafe.Pointer(_pMem + 16)) = _pPtr
	*(*uint16)(unsafe.Pointer(_pMem + 8)) = uint16(34305)
	*(*uint8)(unsafe.Pointer(_pMem + 11)) = uint8('p')
	*(*uintptr)(unsafe.Pointer(_pMem + 48)) = func() uintptr {
		if _xDestructor != 0 {
			return _xDestructor
		}
		return fp18(_1255sqlite3NoopDestructor)
	}()
}

// _1092nullElement THashElem = SHashElem, escapes: true, sqlite3.c:29868:19
var _1092nullElement = bss + 14080

type S_ht struct {
	Xcount int32
	Xchain uintptr // *SHashElem
}

// _1093strHash is defined at sqlite3.c:29768:21
func _1093strHash(tls crt.TLS, _z uintptr /* *int8 */) (r uint32) {
	var (
		_h uint32
		_c uint8
	)
	_h = uint32(0)
_1:
	if int32(set23(&_c, uint8(*(*int8)(unsafe.Pointer(postinc19(&_z)))))) == int32(0) {
		goto _2
	}

	_h = uint32(_h + uint32(*(*uint8)(unsafe.Pointer(_215sqlite3UpperToLower + uintptr(_c)))))
	_h = uint32(_h * uint32(0x9e3779b1))
	goto _1

_2:
	return _h
}

// _1094sqlite3SelectDelete is defined at sqlite3.c:117860:21
func _1094sqlite3SelectDelete(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _p uintptr /* *TSelect = SSelect */) {
	if _p == 0 {
		goto _1
	}

	_1256clearSelect(tls, _db, _p, int32(1))
_1:
}

// _1095sqlite3ExprDeleteNN is defined at sqlite3.c:92845:29
func _1095sqlite3ExprDeleteNN(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _p uintptr /* *TExpr = SExpr */) {
	if ((*(*uint32)(unsafe.Pointer(_p + 4))) & uint32(8404992)) != uint32(0) {
		goto _1
	}

	if (*(*uintptr)(unsafe.Pointer(_p + 16))) == 0 || int32(*(*uint8)(unsafe.Pointer(_p))) == int32(152) {
		goto _2
	}

	_1095sqlite3ExprDeleteNN(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 16)))
_2:
	if (*(*uintptr)(unsafe.Pointer(_p + 24))) == 0 {
		goto _3
	}

	_1095sqlite3ExprDeleteNN(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 24)))
	goto _4

_3:
	if ((*(*uint32)(unsafe.Pointer(_p + 4))) & uint32(0x800)) == uint32(0) {
		goto _5
	}

	_1094sqlite3SelectDelete(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 32)))
	goto _6

_5:
	_551sqlite3ExprListDelete(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 32)))
_6:
_4:
_1:
	if ((*(*uint32)(unsafe.Pointer(_p + 4))) & uint32(0x10000)) == uint32(0) {
		goto _7
	}

	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 8)))
_7:
	if ((*(*uint32)(unsafe.Pointer(_p + 4))) & uint32(0x8000)) != uint32(0) {
		goto _8
	}

	_376sqlite3DbFreeNN(tls, _db, _p)
_8:
}

// _1096sqlite3FkDelete is defined at sqlite3.c:109817:21
func _1096sqlite3FkDelete(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pTab uintptr /* *TTable = STable */) {
	var (
		_pFKey uintptr // *TFKey = SFKey
		_pNext uintptr // *TFKey = SFKey
		_p     uintptr // *void
		_z     uintptr // *int8
	)

	_pFKey = *(*uintptr)(unsafe.Pointer(_pTab + 32))
_1:
	if _pFKey == 0 {
		goto _3
	}

	if _db != 0 && (*(*uintptr)(unsafe.Pointer(_db + 672))) != 0 {
		goto _4
	}

	if (*(*uintptr)(unsafe.Pointer(_pFKey + 32))) == 0 {
		goto _5
	}

	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pFKey + 32))) + 24)) = *(*uintptr)(unsafe.Pointer(_pFKey + 24))
	goto _6

_5:
	_p = *(*uintptr)(unsafe.Pointer(_pFKey + 24))
	_z = func() uintptr {
		if _p != 0 {
			return *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pFKey + 24))) + 16))
		}
		return *(*uintptr)(unsafe.Pointer(_pFKey + 16))
	}()
	_841sqlite3HashInsert(tls, (*(*uintptr)(unsafe.Pointer(_pTab + 112)))+80, _z, _p)
_6:
	if (*(*uintptr)(unsafe.Pointer(_pFKey + 24))) == 0 {
		goto _7
	}

	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pFKey + 24))) + 32)) = *(*uintptr)(unsafe.Pointer(_pFKey + 32))
_7:
_4:
	_1257fkTriggerDelete(tls, _db, *(*uintptr)(unsafe.Pointer(_pFKey + 48)))
	_1257fkTriggerDelete(tls, _db, *(*uintptr)(unsafe.Pointer((_pFKey + 48) + 8)))
	_pNext = *(*uintptr)(unsafe.Pointer(_pFKey + 8))
	_181sqlite3DbFree(tls, _db, _pFKey)
	_pFKey = _pNext
	goto _1

_3:
}

// _1097sqlite3DeleteColumnNames is defined at sqlite3.c:101268:21
func _1097sqlite3DeleteColumnNames(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pTable uintptr /* *TTable = STable */) {
	var (
		_i    int32
		_pCol uintptr // *TColumn = SColumn
	)

	if set4(&_pCol, *(*uintptr)(unsafe.Pointer(_pTable + 8))) == 0 {
		goto _1
	}

	_i = int32(0)
_2:
	if _i >= int32(*(*int16)(unsafe.Pointer(_pTable + 70))) {
		goto _4
	}

	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_pCol)))
	_777sqlite3ExprDelete(tls, _db, *(*uintptr)(unsafe.Pointer(_pCol + 8)))
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_pCol + 16)))
	_i++
	_pCol += 32
	goto _2

_4:
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_pTable + 8)))
_1:
}

// _1098sqlite3VtabClear is defined at sqlite3.c:126600:21
func _1098sqlite3VtabClear(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _p uintptr /* *TTable = STable */) {
	var _i int32

	if _db != 0 && (*(*uintptr)(unsafe.Pointer(_db + 672))) != 0 {
		goto _1
	}

	_1038vtabDisconnectAll(tls, null, _p)
_1:
	if (*(*uintptr)(unsafe.Pointer(_p + 88))) == 0 {
		goto _2
	}

	_i = int32(0)
_3:
	if _i >= (*(*int32)(unsafe.Pointer(_p + 84))) {
		goto _5
	}

	if _i == int32(1) {
		goto _6
	}

	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 88))) + 8*uintptr(_i))))
_6:
	_i++
	goto _3

_5:
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 88)))
_2:
}

// _1099freeP4 is defined at sqlite3.c:73042:13
func _1099freeP4(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _p4type int32, _p4 uintptr /* *void */) {
	switch _p4type {
	case int32(-16):
		goto _2
	case int32(-13):
		goto _3
	case int32(-14):
		goto _4
	case int32(-7):
		goto _5
	case int32(-15):
		goto _6
	case int32(-9):
		goto _7
	case int32(-8):
		goto _8
	case int32(-11):
		goto _9
	case int32(-12):
		goto _10
	}
	goto _1

_2:
	_1258freeP4FuncCtx(tls, _db, _p4)
	goto _1

_3:
_4:
_5:
_6:
	_181sqlite3DbFree(tls, _db, _p4)
	goto _1

_7:
	if (*(*uintptr)(unsafe.Pointer(_db + 672))) != 0 {
		goto _11
	}

	_1259sqlite3KeyInfoUnref(tls, _p4)
_11:
	goto _1

_8:
	_1260freeEphemeralFunction(tls, _db, _p4)
	goto _1

_9:
	if (*(*uintptr)(unsafe.Pointer(_db + 672))) != 0 {
		goto _12
	}

	_371sqlite3ValueFree(tls, _p4)
	goto _13

_12:
	_1261freeP4Mem(tls, _db, _p4)
_13:
	goto _1

_10:
	if (*(*uintptr)(unsafe.Pointer(_db + 672))) != 0 {
		goto _14
	}

	_566sqlite3VtabUnlock(tls, _p4)
_14:
	goto _1

_1:
}

// _1100pcache1UnderMemoryPressure is defined at sqlite3.c:46070:12
func _1100pcache1UnderMemoryPressure(tls crt.TLS, _pCache uintptr /* *TPCache1 = SPCache1 */) (r int32) {
	if (*(*int32)(unsafe.Pointer(_275pcache1_g + 96))) == 0 || ((*(*int32)(unsafe.Pointer(_pCache + 16)))+(*(*int32)(unsafe.Pointer(_pCache + 20)))) > (*(*int32)(unsafe.Pointer(_275pcache1_g + 92))) {
		goto _1
	}

	return *(*int32)(unsafe.Pointer(_275pcache1_g + 140))

	goto _2

_1:
	return _995sqlite3HeapNearlyFull(tls)

_2:
	return r
}

// _1101pcache1AllocPage is defined at sqlite3.c:45972:15
func _1101pcache1AllocPage(tls crt.TLS, _pCache uintptr /* *TPCache1 = SPCache1 */, _benignMalloc int32) (r uintptr /* *TPgHdr1 = SPgHdr1 */) {
	var (
		_p   uintptr // *TPgHdr1 = SPgHdr1
		_pPg uintptr // *void
	)
	_p = 0

	if (*(*uintptr)(unsafe.Pointer(_pCache + 72))) == 0 && ((*(*uint32)(unsafe.Pointer(_pCache + 52))) != uint32(0) || _1262pcache1InitBulk(tls, _pCache) == 0) {
		goto _1
	}

	_p = *(*uintptr)(unsafe.Pointer(_pCache + 72))
	*(*uintptr)(unsafe.Pointer(_pCache + 72)) = *(*uintptr)(unsafe.Pointer(_p + 24))
	*(*uintptr)(unsafe.Pointer(_p + 24)) = null
	goto _2

_1:
	if _benignMalloc == 0 {
		goto _3
	}

	_523sqlite3BeginBenignMalloc(tls)
_3:
	_pPg = _1055pcache1Alloc(tls, *(*int32)(unsafe.Pointer(_pCache + 24)))
	_p = _pPg + uintptr(*(*int32)(unsafe.Pointer(_pCache + 16)))
	if _benignMalloc == 0 {
		goto _4
	}

	_524sqlite3EndBenignMalloc(tls)
_4:
	if _pPg != 0 {
		goto _5
	}

	return null

_5:
	*(*uintptr)(unsafe.Pointer(_p)) = _pPg
	*(*uintptr)(unsafe.Pointer(_p + 8)) = _p + 56
	*(*uint8)(unsafe.Pointer(_p + 20)) = uint8(0)
	*(*uint8)(unsafe.Pointer(_p + 21)) = uint8(0)
_2:
	*(*uint32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pCache + 8))))++
	return _p
}

// _1102staticMutexes [12]Ssqlite3_mutex, escapes: true, sqlite3.c:23901:24
var _1102staticMutexes = bss + 14112

// _1103__huge_valf T__huge_valf_t = struct{X int32}, escapes: true, huge_valf.h:51:22
var _1103__huge_valf = ds + 9048

// _1104sqlite3Dequote is defined at sqlite3.c:28376:21
func _1104sqlite3Dequote(tls crt.TLS, _z uintptr /* *int8 */) {
	var (
		_quote int8
		_i     int32
		_j     int32
	)
	if _z != 0 {
		goto _1
	}

	return

_1:
	_quote = *(*int8)(unsafe.Pointer(_z))
	if int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(uint8(_quote)))))&int32(0x80) != 0 {
		goto _2
	}

	return

_2:
	if int32(_quote) != int32('[') {
		goto _3
	}

	_quote = int8(']')
_3:
	_i = int32(1)
	_j = int32(0)
_4:
	if int32(*(*int8)(unsafe.Pointer(_z + uintptr(_i)))) != int32(_quote) {
		goto _7
	}

	if int32(*(*int8)(unsafe.Pointer(_z + uintptr(_i+int32(1))))) != int32(_quote) {
		goto _9
	}

	*(*int8)(unsafe.Pointer(_z + uintptr(postinc7(&_j)))) = _quote
	_i++
	goto _10

_9:
	goto _6

_10:
	goto _8

_7:
	*(*int8)(unsafe.Pointer(_z + uintptr(postinc7(&_j)))) = *(*int8)(unsafe.Pointer(_z + uintptr(_i)))
_8:
	_i++
	goto _4

_6:
	*(*int8)(unsafe.Pointer(_z + uintptr(_j))) = int8(0)
}

type SDateTime struct {
	XiJD      int64
	XY        int32
	XM        int32
	XD        int32
	Xh        int32
	Xm        int32
	Xtz       int32
	Xs        float64
	XvalidJD  int8
	XrawS     int8
	XvalidYMD int8
	XvalidHMS int8
	XvalidTZ  int8
	XtzSet    int8
	XisError  int8
}

// _1105isDate is defined at sqlite3.c:20313:12
func _1105isDate(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _argc int32, _argv uintptr /* **Tsqlite3_value = Ssqlite3_value */, _p uintptr /* *TDateTime = SDateTime */) (r int32) {
	var (
		_i     int32
		_n     int32
		_z     uintptr // *uint8
		_eType int32
	)
	crt.Xmemset(tls, _p, int32(0), uint64(48))
	if _argc != int32(0) {
		goto _1
	}

	return _1263setDateTimeToCurrent(tls, _context, _p)

_1:
	if set5(&_eType, Xsqlite3_value_type(tls, *(*uintptr)(unsafe.Pointer(_argv)))) != int32(2) && _eType != int32(1) {
		goto _2
	}

	_1264setRawDateNumber(tls, _p, Xsqlite3_value_double(tls, *(*uintptr)(unsafe.Pointer(_argv))))
	goto _3

_2:
	_z = Xsqlite3_value_text(tls, *(*uintptr)(unsafe.Pointer(_argv)))
	if _z != 0 && _1265parseDateOrTime(tls, _context, _z, _p) == 0 {
		goto _4
	}

	return int32(1)

_4:
_3:
	_i = int32(1)
_5:
	if _i >= _argc {
		goto _7
	}

	_z = Xsqlite3_value_text(tls, *(*uintptr)(unsafe.Pointer(_argv + 8*uintptr(_i))))
	_n = Xsqlite3_value_bytes(tls, *(*uintptr)(unsafe.Pointer(_argv + 8*uintptr(_i))))
	if _z != 0 && _1266parseModifier(tls, _context, _z, _n, _p) == 0 {
		goto _8
	}

	return int32(1)

_8:
	_i++
	goto _5

_7:
	_1106computeJD(tls, _p)
	if (*(*int8)(unsafe.Pointer(_p + 46))) == 0 && _1267validJulianDay(tls, *(*int64)(unsafe.Pointer(_p))) != 0 {
		goto _9
	}

	return int32(1)

_9:
	return int32(0)
}

// _1106computeJD is defined at sqlite3.c:19691:13
func _1106computeJD(tls crt.TLS, _p uintptr /* *TDateTime = SDateTime */) {
	var (
		_Y  int32
		_M  int32
		_D  int32
		_A  int32
		_B  int32
		_X1 int32
		_X2 int32
	)
	if (*(*int8)(unsafe.Pointer(_p + 40))) == 0 {
		goto _1
	}

	return

_1:
	if (*(*int8)(unsafe.Pointer(_p + 42))) == 0 {
		goto _2
	}

	_Y = *(*int32)(unsafe.Pointer(_p + 8))
	_M = *(*int32)(unsafe.Pointer(_p + 12))
	_D = *(*int32)(unsafe.Pointer(_p + 16))
	goto _3

_2:
	_Y = int32(2000)
	_M = int32(1)
	_D = int32(1)
_3:
	if _Y >= int32(-4713) && _Y <= int32(9999) && (*(*int8)(unsafe.Pointer(_p + 41))) == 0 {
		goto _4
	}

	_1268datetimeError(tls, _p)
	return

_4:
	if _M > int32(2) {
		goto _5
	}

	_Y--
	_M = int32(_M + int32(12))
_5:
	_A = _Y / int32(100)
	_B = (int32(2) - _A) + (_A / int32(4))
	_X1 = (int32(36525) * (_Y + int32(4716))) / int32(100)
	_X2 = (int32(306001) * (_M + int32(1))) / int32(10000)
	*(*int64)(unsafe.Pointer(_p)) = int64((float64(((_X1+_X2)+_D)+_B) - float64(1524.5)) * float64(86400000))
	*(*int8)(unsafe.Pointer(_p + 40)) = int8(1)
	if (*(*int8)(unsafe.Pointer(_p + 43))) == 0 {
		goto _6
	}

	{
		p := &(*(*int64)(unsafe.Pointer(_p)))
		*p = int64(int64(*p) + (int64(((*(*int32)(unsafe.Pointer(_p + 20)))*int32(3600000))+((*(*int32)(unsafe.Pointer(_p + 24)))*int32(60000))) + int64((*(*float64)(unsafe.Pointer(_p + 32)))*float64(1000))))
	}
	if (*(*int8)(unsafe.Pointer(_p + 44))) == 0 {
		goto _7
	}

	{
		p := &(*(*int64)(unsafe.Pointer(_p)))
		*p = int64(int64(*p) - int64((*(*int32)(unsafe.Pointer(_p + 28)))*int32(60000)))
	}
	*(*int8)(unsafe.Pointer(_p + 42)) = int8(0)
	*(*int8)(unsafe.Pointer(_p + 43)) = int8(0)
	*(*int8)(unsafe.Pointer(_p + 44)) = int8(0)
_7:
_6:
}

// _1107computeYMD is defined at sqlite3.c:19859:13
func _1107computeYMD(tls crt.TLS, _p uintptr /* *TDateTime = SDateTime */) {
	var (
		_Z  int32
		_A  int32
		_B  int32
		_C  int32
		_D  int32
		_E  int32
		_X1 int32
	)
	if (*(*int8)(unsafe.Pointer(_p + 42))) == 0 {
		goto _1
	}

	return

_1:
	if (*(*int8)(unsafe.Pointer(_p + 40))) != 0 {
		goto _2
	}

	*(*int32)(unsafe.Pointer(_p + 8)) = int32(2000)
	*(*int32)(unsafe.Pointer(_p + 12)) = int32(1)
	*(*int32)(unsafe.Pointer(_p + 16)) = int32(1)
	goto _3

_2:
	if _1267validJulianDay(tls, *(*int64)(unsafe.Pointer(_p))) != 0 {
		goto _4
	}

	_1268datetimeError(tls, _p)
	return

	goto _5

_4:
	_Z = int32(((*(*int64)(unsafe.Pointer(_p))) + int64(43200000)) / int64(86400000))
	_A = int32((float64(_Z) - float64(1.86721625e+06)) / float64(36524.25))
	_A = ((_Z + int32(1)) + _A) - (_A / int32(4))
	_B = _A + int32(1524)
	_C = int32((float64(_B) - float64(122.1)) / float64(365.25))
	_D = (int32(36525) * (_C & int32(32767))) / int32(100)
	_E = int32(float64(_B-_D) / float64(30.6001))
	_X1 = int32(float64(30.6001) * float64(_E))
	*(*int32)(unsafe.Pointer(_p + 16)) = (_B - _D) - _X1
	*(*int32)(unsafe.Pointer(_p + 12)) = func() int32 {
		if _E < int32(14) {
			return _E - int32(1)
		}
		return _E - int32(13)
	}()
	*(*int32)(unsafe.Pointer(_p + 8)) = func() int32 {
		if (*(*int32)(unsafe.Pointer(_p + 12))) > int32(2) {
			return _C - int32(4716)
		}
		return _C - int32(4715)
	}()
_5:
_3:
	*(*int8)(unsafe.Pointer(_p + 42)) = int8(1)
}

// _1108computeHMS is defined at sqlite3.c:19888:13
func _1108computeHMS(tls crt.TLS, _p uintptr /* *TDateTime = SDateTime */) {
	var _s int32

	if (*(*int8)(unsafe.Pointer(_p + 43))) == 0 {
		goto _1
	}

	return

_1:
	_1106computeJD(tls, _p)
	_s = int32(((*(*int64)(unsafe.Pointer(_p))) + int64(43200000)) % int64(86400000))
	*(*float64)(unsafe.Pointer(_p + 32)) = float64(_s) / float64(1000)
	_s = int32(*(*float64)(unsafe.Pointer(_p + 32)))
	{
		p := &(*(*float64)(unsafe.Pointer(_p + 32)))
		*p = float64(float64(*p) - float64(_s))
	}
	*(*int32)(unsafe.Pointer(_p + 20)) = _s / int32(3600)
	_s = int32(_s - ((*(*int32)(unsafe.Pointer(_p + 20))) * int32(3600)))
	*(*int32)(unsafe.Pointer(_p + 24)) = _s / int32(60)
	{
		p := &(*(*float64)(unsafe.Pointer(_p + 32)))
		*p = float64(float64(*p) + float64(_s-((*(*int32)(unsafe.Pointer(_p + 24)))*int32(60))))
	}
	*(*int8)(unsafe.Pointer(_p + 41)) = int8(0)
	*(*int8)(unsafe.Pointer(_p + 43)) = int8(1)
}

// _1109computeYMD_HMS is defined at sqlite3.c:19907:13
func _1109computeYMD_HMS(tls crt.TLS, _p uintptr /* *TDateTime = SDateTime */) {
	_1107computeYMD(tls, _p)
	_1108computeHMS(tls, _p)
}

// _1110posixIoFinderImpl is defined at sqlite3.c:35432:1
func _1110posixIoFinderImpl(tls crt.TLS, _z uintptr /* *int8 */, _p uintptr /* *TunixFile = SunixFile */) (r uintptr /* *Tsqlite3_io_methods = Ssqlite3_io_methods */) {
	return _1269posixIoMethods
}

type SunixFile struct {
	XpMethod               uintptr // *Ssqlite3_io_methods
	XpVfs                  uintptr // *Ssqlite3_vfs
	XpInode                uintptr // *SunixInodeInfo
	Xh                     int32
	XeFileLock             uint8
	XctrlFlags             uint16
	XlastErrno             int32
	XlockingContext        uintptr // uintptr
	XpPreallocatedUnused   uintptr // *SUnixUnusedFd
	XzPath                 uintptr // *int8
	XpShm                  uintptr // *SunixShm
	XszChunk               int32
	XnFetchOut             int32
	XmmapSize              int64
	XmmapSizeActual        int64
	XmmapSizeMax           int64
	XpMapRegion            uintptr // uintptr
	XsectorSize            int32
	XdeviceCharacteristics int32
}

type SUnixUnusedFd struct {
	Xfd    int32
	Xflags int32
	XpNext uintptr // *SUnixUnusedFd
}

// _1111randomnessPid Tpid_t = T__pid_t = int32, escapes: true, sqlite3.c:30433:14
var _1111randomnessPid = bss + 14592

// _1112findReusableFd is defined at sqlite3.c:35920:21
func _1112findReusableFd(tls crt.TLS, _zPath uintptr /* *int8 */, _flags int32) (r uintptr /* *TUnixUnusedFd = SUnixUnusedFd */) {
	esc := crt.MustMalloc(144)
	var (
		_pUnused uintptr // *TUnixUnusedFd = SUnixUnusedFd
		_sStat   = esc   // *Sstat64
		_pInode  uintptr // *TunixInodeInfo = SunixInodeInfo
		_pp      uintptr // **TUnixUnusedFd = SUnixUnusedFd
	)
	defer crt.Free(esc)
	_pUnused = 0
	_1123unixEnterMutex(tls)
	if _1270nUnusedFd <= uint32(0) || int32(0) != fn58(*(*uintptr)(unsafe.Pointer((_1118aSyscall + 96) + 8)))(tls, _zPath, _sStat) {
		goto _1
	}

	_pInode = _1271inodeList
_2:
	if _pInode == 0 || (*(*uint64)(unsafe.Pointer(_pInode))) == uint64(*(*uint64)(unsafe.Pointer(_sStat))) && (*(*uint64)(unsafe.Pointer(_pInode + 8))) == uint64(*(*uint64)(unsafe.Pointer(_sStat + 8))) {
		goto _3
	}

	_pInode = *(*uintptr)(unsafe.Pointer(_pInode + 56))
	goto _2

_3:
	if _pInode == 0 {
		goto _4
	}

	_pp = _pInode + 48
_5:
	if (*(*uintptr)(unsafe.Pointer(_pp))) == 0 || (*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pp)) + 4))) == _flags {
		goto _7
	}

	_pp = *(*uintptr)(unsafe.Pointer(_pp)) + 8
	goto _5

_7:
	_pUnused = *(*uintptr)(unsafe.Pointer(_pp))
	if _pUnused == 0 {
		goto _8
	}

	_1270nUnusedFd--
	*(*uintptr)(unsafe.Pointer(_pp)) = *(*uintptr)(unsafe.Pointer(_pUnused + 8))
_8:
_4:
_1:
	_1124unixLeaveMutex(tls)
	return _pUnused
}

// _1113unixGetTempname is defined at sqlite3.c:35870:12
func _1113unixGetTempname(tls crt.TLS, _nBuf int32, _zBuf uintptr /* *int8 */) (r int32) {
	esc := crt.MustMalloc(8)
	var (
		_zDir   uintptr // *int8
		_iLimit int32
		_r      = esc // *Tu64 = Tsqlite_uint64 = uint64
	)
	defer crt.Free(esc)
	_iLimit = int32(0)
	*(*int8)(unsafe.Pointer(_zBuf)) = int8(0)
	_zDir = _1272unixTempFileDir(tls)
	if _zDir != 0 {
		goto _1
	}

	return int32(6410)

_1:
_2:
	Xsqlite3_randomness(tls, int32(8), _r)

	*(*int8)(unsafe.Pointer(_zBuf + uintptr(_nBuf-int32(2)))) = int8(0)
	Xsqlite3_snprintf(tls, _nBuf, _zBuf, ts+23732 /* "%s/etilqs_%llx%c" */, _zDir, *(*uint64)(unsafe.Pointer(_r)), int32(0))
	if int32(*(*int8)(unsafe.Pointer(_zBuf + uintptr(_nBuf-int32(2))))) == int32(0) && postinc7(&_iLimit) <= int32(10) {
		goto _5
	}

	return int32(1)

_5:
	if fn50(*(*uintptr)(unsafe.Pointer((_1118aSyscall + 48) + 8)))(tls, _zBuf, int32(0)) == int32(0) {
		goto _2
	}

	return int32(0)
}

// _1114findCreateFileMode is defined at sqlite3.c:36006:12
func _1114findCreateFileMode(tls crt.TLS, _zPath uintptr /* *int8 */, _flags int32, _pMode uintptr /* *Tmode_t = T__mode_t = uint32 */, _pUid uintptr /* *Tuid_t = T__uid_t = uint32 */, _pGid uintptr /* *Tgid_t = T__gid_t = uint32 */) (r int32) {
	esc := crt.MustMalloc(513)
	var (
		_rc  int32
		_zDb = esc // *[513]int8
		_nDb int32
		_z   uintptr // *int8
	)
	defer crt.Free(esc)
	_rc = int32(0)
	*(*uint32)(unsafe.Pointer(_pMode)) = uint32(0)
	*(*uint32)(unsafe.Pointer(_pUid)) = uint32(0)
	*(*uint32)(unsafe.Pointer(_pGid)) = uint32(0)
	if (_flags & int32(526336)) == 0 {
		goto _1
	}

	_nDb = _211sqlite3Strlen30(tls, _zPath) - int32(1)
_3:
	if int32(*(*int8)(unsafe.Pointer(_zPath + uintptr(_nDb)))) == int32('-') {
		goto _4
	}

	if _nDb != int32(0) && int32(*(*int8)(unsafe.Pointer(_zPath + uintptr(_nDb)))) != int32('.') {
		goto _5
	}

	return int32(0)

_5:
	_nDb--
	goto _3

_4:
	crt.Xmemcpy(tls, _zDb, _zPath, uint64(_nDb))
	*(*int8)(unsafe.Pointer(_zDb + uintptr(_nDb))) = int8('\x00')
	_rc = _1273getFileMode(tls, _zDb, _pMode, _pUid, _pGid)
	goto _2

_1:
	if (_flags & int32(0x8)) == 0 {
		goto _6
	}

	*(*uint32)(unsafe.Pointer(_pMode)) = uint32(0600)
	goto _7

_6:
	if (_flags & int32(0x40)) == 0 {
		goto _8
	}

	_z = Xsqlite3_uri_parameter(tls, _zPath, ts+23749 /* "modeof" */)
	if _z == 0 {
		goto _9
	}

	_rc = _1273getFileMode(tls, _z, _pMode, _pUid, _pGid)
_9:
_8:
_7:
_2:
	return _rc
}

// _1115robust_open is defined at sqlite3.c:31014:12
func _1115robust_open(tls crt.TLS, _z uintptr /* *int8 */, _f int32, _m uint32) (r int32) {
	esc := crt.MustMalloc(144)
	var (
		_fd      int32
		_m2      uint32
		_statbuf = esc // *Sstat64
	)
	defer crt.Free(esc)
	_m2 = func() uint32 {
		if _m != 0 {
			return _m
		}
		return uint32(0644)
	}()
_1:
	_fd = fn171(*(*uintptr)(unsafe.Pointer(_1118aSyscall + 8)))(tls, _z, _f, int32(_m2))
	if _fd >= int32(0) {
		goto _3
	}

	if (*(*int32)(unsafe.Pointer(crt.X__errno_location(tls)))) != int32(4) {
		goto _4
	}

	goto _1

_4:
	goto _2

_3:
	if _fd < int32(3) {
		goto _5
	}

	goto _2

_5:
	fn48(*(*uintptr)(unsafe.Pointer((_1118aSyscall + 24) + 8)))(tls, _fd)
	Xsqlite3_log(tls, int32(28), ts+23756 /* "attempt to open \"%s\" as file des..." */, _z, _fd)
	_fd = int32(-1)
	if fn171(*(*uintptr)(unsafe.Pointer(_1118aSyscall + 8)))(tls, ts+23799 /* "/dev/null" */, _f, int32(_m)) >= int32(0) {
		goto _6
	}

	goto _2

_6:
	goto _1

_2:
	if _fd < int32(0) {
		goto _7
	}

	if _m == uint32(0) {
		goto _8
	}

	if fn172(*(*uintptr)(unsafe.Pointer((_1118aSyscall + 120) + 8)))(tls, _fd, _statbuf) != int32(0) || (*(*int64)(unsafe.Pointer(_statbuf + 48))) != int64(0) || ((*(*uint32)(unsafe.Pointer(_statbuf + 24)))&uint32(0777)) == uint32(_m) {
		goto _9
	}

	fn173(*(*uintptr)(unsafe.Pointer((_1118aSyscall + 336) + 8)))(tls, _fd, _m)
_9:
_8:
	fn174(*(*uintptr)(unsafe.Pointer((_1118aSyscall + 168) + 8)))(tls, _fd, int32(2), fn174(*(*uintptr)(unsafe.Pointer((_1118aSyscall + 168) + 8)))(tls, _fd, int32(1), int32(0))|int32(1))
_7:
	return _fd
}

// _1116unixLogErrorAtLine is defined at sqlite3.c:31513:12
func _1116unixLogErrorAtLine(tls crt.TLS, _errcode int32, _zFunc uintptr /* *int8 */, _zPath uintptr /* *int8 */, _iLine int32) (r int32) {
	var (
		_zErr   uintptr // *int8
		_iErrno int32
	)
	_iErrno = *(*int32)(unsafe.Pointer(crt.X__errno_location(tls)))
	_zErr = ts + 4553 /* "" */
	if _zPath != 0 {
		goto _1
	}

	_zPath = ts + 4553 /* "" */
_1:
	Xsqlite3_log(tls, _errcode, ts+23809 /* "os_unix.c:%d: (%d) %s(%s) - %s" */, _iLine, _iErrno, _zFunc, _zPath, _zErr)
	return _errcode
}

// _1117robustFchown is defined at sqlite3.c:30897:12
func _1117robustFchown(tls crt.TLS, _fd int32, _uid uint32, _gid uint32) (r int32) {
	if fn175(*(*uintptr)(unsafe.Pointer((_1118aSyscall + 504) + 8)))(tls) != 0 {
		return int32(0)
	}

	return fn176(*(*uintptr)(unsafe.Pointer((_1118aSyscall + 480) + 8)))(tls, _fd, _uid, _gid)
}

// _1118aSyscall [29]struct{XzName *int8;XpCurren....TLS);XpDefault *func(crt.TLS);}, escapes: true, sqlite3.c:30740:3
var _1118aSyscall = bss + 14600 // array of 29 struct{zName pointer to char; pCurrent sqlite3_syscall_ptr; pDefault sqlite3_syscall_ptr}

func init() {
	*(*[29]struct {
		XzName    uintptr // *int8
		XpCurrent uintptr // *func(crt.TLS)
		XpDefault uintptr // *func(crt.TLS)
	})(unsafe.Pointer(_1118aSyscall)) = [29]struct {
		XzName    uintptr // *int8
		XpCurrent uintptr // *func(crt.TLS)
		XpDefault uintptr // *func(crt.TLS)
	}{
		0:
		// *int8
		// *func(crt.TLS)
		// *func(crt.TLS)
		{
			XzName:    ts + 4771, /* "open" */
			XpCurrent: fp76(_1274posixOpen),
		},
		1:
		// *int8
		// *func(crt.TLS)
		// *func(crt.TLS)
		{
			XzName:    ts + 23840, /* "close" */
			XpCurrent: fp31(crt.Xclose),
		},
		2:
		// *int8
		// *func(crt.TLS)
		// *func(crt.TLS)
		{
			XzName:    ts + 17237, /* "access" */
			XpCurrent: fp26(crt.Xaccess),
		},
		3:
		// *int8
		// *func(crt.TLS)
		// *func(crt.TLS)
		{
			XzName:    ts + 23846, /* "getcwd" */
			XpCurrent: fp124(crt.Xgetcwd),
		},
		4:
		// *int8
		// *func(crt.TLS)
		// *func(crt.TLS)
		{
			XzName:    ts + 23853, /* "stat" */
			XpCurrent: fp56(crt.Xstat64),
		},
		5:
		// *int8
		// *func(crt.TLS)
		// *func(crt.TLS)
		{
			XzName:    ts + 23858, /* "fstat" */
			XpCurrent: fp177(crt.Xfstat64),
		},
		6:
		// *int8
		// *func(crt.TLS)
		// *func(crt.TLS)
		{
			XzName:    ts + 23864, /* "ftruncate" */
			XpCurrent: fp178(crt.Xftruncate64),
		},
		7:
		// *int8
		// *func(crt.TLS)
		// *func(crt.TLS)
		{
			XzName:    ts + 23874, /* "fcntl" */
			XpCurrent: fp179(crt.Xfcntl),
		},
		8:
		// *int8
		// *func(crt.TLS)
		// *func(crt.TLS)
		{
			XzName:    ts + 4943, /* "read" */
			XpCurrent: fp180(crt.Xread),
		},
		9:
		// *int8
		// *func(crt.TLS)
		// *func(crt.TLS)
		{
			XzName: ts + 23880, /* "pread" */
		},
		10:
		// *int8
		// *func(crt.TLS)
		// *func(crt.TLS)
		{
			XzName: ts + 23886, /* "pread64" */
		},
		11:
		// *int8
		// *func(crt.TLS)
		// *func(crt.TLS)
		{
			XzName:    ts + 23894, /* "write" */
			XpCurrent: fp180(crt.Xwrite),
		},
		12:
		// *int8
		// *func(crt.TLS)
		// *func(crt.TLS)
		{
			XzName: ts + 23900, /* "pwrite" */
		},
		13:
		// *int8
		// *func(crt.TLS)
		// *func(crt.TLS)
		{
			XzName: ts + 23907, /* "pwrite64" */
		},
		14:
		// *int8
		// *func(crt.TLS)
		// *func(crt.TLS)
		{
			XzName:    ts + 23916, /* "fchmod" */
			XpCurrent: fp181(crt.Xfchmod),
		},
		15:
		// *int8
		// *func(crt.TLS)
		// *func(crt.TLS)
		{
			XzName: ts + 23923, /* "fallocate" */
		},
		16:
		// *int8
		// *func(crt.TLS)
		// *func(crt.TLS)
		{
			XzName:    ts + 21339, /* "unlink" */
			XpCurrent: fp10(crt.Xunlink),
		},
		17:
		// *int8
		// *func(crt.TLS)
		// *func(crt.TLS)
		{
			XzName:    ts + 23933, /* "openDirectory" */
			XpCurrent: fp56(_1275openDirectory),
		},
		18:
		// *int8
		// *func(crt.TLS)
		// *func(crt.TLS)
		{
			XzName:    ts + 23947, /* "mkdir" */
			XpCurrent: fp182(crt.Xmkdir),
		},
		19:
		// *int8
		// *func(crt.TLS)
		// *func(crt.TLS)
		{
			XzName:    ts + 23953, /* "rmdir" */
			XpCurrent: fp10(crt.Xrmdir),
		},
		20:
		// *int8
		// *func(crt.TLS)
		// *func(crt.TLS)
		{
			XzName:    ts + 23959, /* "fchown" */
			XpCurrent: fp183(crt.Xfchown),
		},
		21:
		// *int8
		// *func(crt.TLS)
		// *func(crt.TLS)
		{
			XzName:    ts + 23966, /* "geteuid" */
			XpCurrent: fp184(crt.Xgeteuid),
		},
		22:
		// *int8
		// *func(crt.TLS)
		// *func(crt.TLS)
		{
			XzName:    ts + 23974, /* "mmap" */
			XpCurrent: fp185(crt.Xmmap64),
		},
		23:
		// *int8
		// *func(crt.TLS)
		// *func(crt.TLS)
		{
			XzName:    ts + 23979, /* "munmap" */
			XpCurrent: fp127(crt.Xmunmap),
		},
		24:
		// *int8
		// *func(crt.TLS)
		// *func(crt.TLS)
		{
			XzName: ts + 23986, /* "mremap" */
		},
		25:
		// *int8
		// *func(crt.TLS)
		// *func(crt.TLS)
		{
			XzName:    ts + 23993, /* "getpagesize" */
			XpCurrent: fp90(_1276unixGetpagesize),
		},
		26:
		// *int8
		// *func(crt.TLS)
		// *func(crt.TLS)
		{
			XzName:    ts + 21358, /* "readlink" */
			XpCurrent: fp186(crt.Xreadlink),
		},
		27:
		// *int8
		// *func(crt.TLS)
		// *func(crt.TLS)
		{
			XzName:    ts + 21352, /* "lstat" */
			XpCurrent: fp56(crt.Xlstat64),
		},
		28:
		// *int8
		// *func(crt.TLS)
		// *func(crt.TLS)
		{
			XzName:    ts + 24005, /* "ioctl" */
			XpCurrent: fp187(crt.Xioctl),
		},
	}
}

// _1119fillInUnixFile is defined at sqlite3.c:35660:12
func _1119fillInUnixFile(tls crt.TLS, _pVfs uintptr /* *Tsqlite3_vfs = Ssqlite3_vfs */, _h int32, _pId uintptr /* *Tsqlite3_file = Ssqlite3_file */, _zFilename uintptr /* *int8 */, _ctrlFlags int32) (r int32) {
	var (
		_pLockingStyle uintptr // *Tsqlite3_io_methods = Ssqlite3_io_methods
		_pNew          uintptr // *TunixFile = SunixFile
		_rc            int32
		_zLockFile     uintptr // *int8
		_nFilename     int32
	)
	_pNew = _pId
	_rc = int32(0)

	*(*int32)(unsafe.Pointer(_pNew + 24)) = _h
	*(*uintptr)(unsafe.Pointer(_pNew + 8)) = _pVfs
	*(*uintptr)(unsafe.Pointer(_pNew + 56)) = _zFilename
	*(*uint16)(unsafe.Pointer(_pNew + 30)) = uint16(uint8(_ctrlFlags))
	*(*int64)(unsafe.Pointer(_pNew + 96)) = *(*int64)(unsafe.Pointer(_28sqlite3Config + 312))
	if Xsqlite3_uri_boolean(tls, func() uintptr {
		if _ctrlFlags&int32(0x40) != 0 {
			return _zFilename
		}
		return null
	}(), ts+24011 /* "psow" */, int32(1)) == 0 {
		goto _1
	}

	{
		p := &(*(*uint16)(unsafe.Pointer(_pNew + 30)))
		*p = uint16(int32(*p) | int32(0x10))
	}
_1:
	if crt.Xstrcmp(tls, *(*uintptr)(unsafe.Pointer(_pVfs + 24)), ts+19605 /* "unix-excl" */) != int32(0) {
		goto _2
	}

	{
		p := &(*(*uint16)(unsafe.Pointer(_pNew + 30)))
		*p = uint16(int32(*p) | int32(0x1))
	}
_2:
	if (_ctrlFlags & int32(0x80)) == 0 {
		goto _3
	}

	_pLockingStyle = _1277nolockIoMethods
	goto _4

_3:
	_pLockingStyle = fn73(*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pVfs + 32)))))(tls, _zFilename, _pNew)
_4:
	if _pLockingStyle != _1269posixIoMethods {
		goto _5
	}

	_1123unixEnterMutex(tls)
	_rc = _1278findInodeInfo(tls, _pNew, _pNew+16)
	if _rc == int32(0) {
		goto _7
	}

	_1121robust_close(tls, _pNew, _h, int32(35738))
	_h = int32(-1)
_7:
	_1124unixLeaveMutex(tls)
	goto _6

_5:
	if _pLockingStyle != _1279dotlockIoMethods {
		goto _8
	}

	_nFilename = int32(crt.Xstrlen(tls, _zFilename)) + int32(6)
	_zLockFile = Xsqlite3_malloc64(tls, uint64(_nFilename))
	if _zLockFile != 0 {
		goto _9
	}

	_rc = int32(7)
	goto _10

_9:
	Xsqlite3_snprintf(tls, _nFilename, _zLockFile, ts+24016 /* "%s.lock" */, _zFilename)
_10:
	*(*uintptr)(unsafe.Pointer(_pNew + 40)) = _zLockFile
_8:
_6:
	_1280storeLastErrno(tls, _pNew, int32(0))
	if _rc == int32(0) {
		goto _11
	}

	if _h < int32(0) {
		goto _13
	}

	_1121robust_close(tls, _pNew, _h, int32(35823))
_13:
	goto _12

_11:
	*(*uintptr)(unsafe.Pointer(_pNew)) = _pLockingStyle
	_1281verifyDbFile(tls, _pNew)
_12:
	return _rc
}

// _1120full_fsync is defined at sqlite3.c:33812:12
func _1120full_fsync(tls crt.TLS, _fd int32, _fullSync int32, _dataOnly int32) (r int32) {
	var _rc int32

	_rc = crt.Xfdatasync(tls, _fd)

	goto _1

_1:
	return _rc
}

// _1121robust_close is defined at sqlite3.c:31578:13
func _1121robust_close(tls crt.TLS, _pFile uintptr /* *TunixFile = SunixFile */, _h int32, _lineno int32) {
	if fn48(*(*uintptr)(unsafe.Pointer((_1118aSyscall + 24) + 8)))(tls, _h) == 0 {
		goto _1
	}

	_1116unixLogErrorAtLine(tls, int32(4106), ts+23840 /* "close" */, func() uintptr {
		if _pFile != 0 {
			return *(*uintptr)(unsafe.Pointer(_pFile + 56))
		}
		return null
	}(), _lineno)
_1:
}

type Sstat64 struct {
	Xst_dev           uint64
	Xst_ino           uint64
	Xst_nlink         uint64
	Xst_mode          uint32
	Xst_uid           uint32
	Xst_gid           uint32
	X__pad0           int32
	Xst_rdev          uint64
	Xst_size          int64
	Xst_blksize       int64
	Xst_blocks        int64
	Xst_atime         int64
	Xst_atimensec     uint64
	Xst_mtime         int64
	Xst_mtimensec     uint64
	Xst_ctime         int64
	Xst_ctimensec     uint64
	X__glibc_reserved [3]int64
}

// _1122mkFullPathname is defined at sqlite3.c:36416:12
func _1122mkFullPathname(tls crt.TLS, _zPath uintptr /* *int8 */, _zOut uintptr /* *int8 */, _nOut int32) (r int32) {
	var (
		_nPath int32
		_iOff  int32
	)
	_nPath = _211sqlite3Strlen30(tls, _zPath)
	_iOff = int32(0)
	if int32(*(*int8)(unsafe.Pointer(_zPath))) == int32('/') {
		goto _1
	}

	if fn188(*(*uintptr)(unsafe.Pointer((_1118aSyscall + 72) + 8)))(tls, _zOut, uint64(_nOut-int32(2))) != 0 {
		goto _2
	}

	return _1116unixLogErrorAtLine(tls, _844sqlite3CantopenError(tls, int32(36425)), ts+23846 /* "getcwd" */, _zPath, int32(36425))

_2:
	_iOff = _211sqlite3Strlen30(tls, _zOut)
	*(*int8)(unsafe.Pointer(_zOut + uintptr(postinc7(&_iOff)))) = int8('/')
_1:
	if ((_iOff + _nPath) + int32(1)) <= _nOut {
		goto _3
	}

	*(*int8)(unsafe.Pointer(_zOut + uintptr(_iOff))) = int8('\x00')
	return _844sqlite3CantopenError(tls, int32(36434))

_3:
	Xsqlite3_snprintf(tls, _nOut-_iOff, _zOut+uintptr(_iOff), ts+429 /* "%s" */, _zPath)
	return int32(0)
}

// _1123unixEnterMutex is defined at sqlite3.c:31065:13
func _1123unixEnterMutex(tls crt.TLS) {
	Xsqlite3_mutex_enter(tls, _35sqlite3MutexAlloc(tls, int32(11)))
}

// _1124unixLeaveMutex is defined at sqlite3.c:31068:13
func _1124unixLeaveMutex(tls crt.TLS) {
	Xsqlite3_mutex_leave(tls, _35sqlite3MutexAlloc(tls, int32(11)))
}

// _1125unixEpoch Tsqlite3_int64 = Tsqlite_int64 = int64, escapes: false, sqlite3.c:36686:30
var _1125unixEpoch = int64(210866760000000)

// _1126nolockIoFinderImpl is defined at sqlite3.c:35442:1
func _1126nolockIoFinderImpl(tls crt.TLS, _z uintptr /* *int8 */, _p uintptr /* *TunixFile = SunixFile */) (r uintptr /* *Tsqlite3_io_methods = Ssqlite3_io_methods */) {
	return _1277nolockIoMethods
}

// _1127dotlockIoFinderImpl is defined at sqlite3.c:35452:1
func _1127dotlockIoFinderImpl(tls crt.TLS, _z uintptr /* *int8 */, _p uintptr /* *TunixFile = SunixFile */) (r uintptr /* *Tsqlite3_io_methods = Ssqlite3_io_methods */) {
	return _1279dotlockIoMethods
}

// _1128removeElementGivenHash is defined at sqlite3.c:29895:13
func _1128removeElementGivenHash(tls crt.TLS, _pH uintptr /* *THash = SHash */, _elem uintptr /* *THashElem = SHashElem */, _h uint32) {
	var _pEntry uintptr // *S_ht

	if (*(*uintptr)(unsafe.Pointer(_elem + 8))) == 0 {
		goto _1
	}

	*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_elem + 8)))) = *(*uintptr)(unsafe.Pointer(_elem))
	goto _2

_1:
	*(*uintptr)(unsafe.Pointer(_pH + 8)) = *(*uintptr)(unsafe.Pointer(_elem))
_2:
	if (*(*uintptr)(unsafe.Pointer(_elem))) == 0 {
		goto _3
	}

	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_elem))) + 8)) = *(*uintptr)(unsafe.Pointer(_elem + 8))
_3:
	if (*(*uintptr)(unsafe.Pointer(_pH + 16))) == 0 {
		goto _4
	}

	_pEntry = (*(*uintptr)(unsafe.Pointer(_pH + 16))) + 16*uintptr(_h)
	if (*(*uintptr)(unsafe.Pointer(_pEntry + 8))) != _elem {
		goto _5
	}

	*(*uintptr)(unsafe.Pointer(_pEntry + 8)) = *(*uintptr)(unsafe.Pointer(_elem))
_5:
	(*(*int32)(unsafe.Pointer(_pEntry)))--

_4:
	Xsqlite3_free(tls, _elem)
	(*(*uint32)(unsafe.Pointer(_pH + 4)))--
	if (*(*uint32)(unsafe.Pointer(_pH + 4))) != uint32(0) {
		goto _6
	}

	_369sqlite3HashClear(tls, _pH)
_6:
}

// _1129rehash is defined at sqlite3.c:29819:12
func _1129rehash(tls crt.TLS, _pH uintptr /* *THash = SHash */, _new_size uint32) (r int32) {
	var (
		_new_ht    uintptr // *S_ht
		_elem      uintptr // *THashElem = SHashElem
		_next_elem uintptr // *THashElem = SHashElem
		_h         uint32
	)
	if (uint64(_new_size) * uint64(16)) <= uint64(1024) {
		goto _1
	}

	_new_size = uint32(64)
_1:
	if _new_size != (*(*uint32)(unsafe.Pointer(_pH))) {
		goto _2
	}

	return int32(0)

_2:
	_523sqlite3BeginBenignMalloc(tls)
	_new_ht = _198sqlite3Malloc(tls, uint64(uint64(_new_size)*uint64(16)))
	_524sqlite3EndBenignMalloc(tls)
	if _new_ht != 0 {
		goto _3
	}

	return int32(0)

_3:
	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_pH + 16)))
	*(*uintptr)(unsafe.Pointer(_pH + 16)) = _new_ht
	*(*uint32)(unsafe.Pointer(_pH)) = set25(&_new_size, uint32(uint64(_109sqlite3MallocSize(tls, _new_ht))/uint64(16)))
	crt.Xmemset(tls, _new_ht, int32(0), uint64(_new_size)*uint64(16))
	_elem = *(*uintptr)(unsafe.Pointer(_pH + 8))
	*(*uintptr)(unsafe.Pointer(_pH + 8)) = null
_4:
	if _elem == 0 {
		goto _6
	}

	_h = _1093strHash(tls, *(*uintptr)(unsafe.Pointer(_elem + 24))) % _new_size
	_next_elem = *(*uintptr)(unsafe.Pointer(_elem))
	_1130insertElement(tls, _pH, _new_ht+16*uintptr(_h), _elem)
	_elem = _next_elem
	goto _4

_6:
	return int32(1)
}

// _1130insertElement is defined at sqlite3.c:29785:13
func _1130insertElement(tls crt.TLS, _pH uintptr /* *THash = SHash */, _pEntry uintptr /* *S_ht */, _pNew uintptr /* *THashElem = SHashElem */) {
	var _pHead uintptr // *THashElem = SHashElem

	if _pEntry == 0 {
		goto _1
	}

	_pHead = func() uintptr {
		if (*(*int32)(unsafe.Pointer(_pEntry))) != 0 {
			return *(*uintptr)(unsafe.Pointer(_pEntry + 8))
		}
		return null
	}()
	(*(*int32)(unsafe.Pointer(_pEntry)))++
	*(*uintptr)(unsafe.Pointer(_pEntry + 8)) = _pNew
	goto _2

_1:
	_pHead = null
_2:
	if _pHead == 0 {
		goto _3
	}

	*(*uintptr)(unsafe.Pointer(_pNew)) = _pHead
	*(*uintptr)(unsafe.Pointer(_pNew + 8)) = *(*uintptr)(unsafe.Pointer(_pHead + 8))
	if (*(*uintptr)(unsafe.Pointer(_pHead + 8))) == 0 {
		goto _5
	}

	*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pHead + 8)))) = _pNew
	goto _6

_5:
	*(*uintptr)(unsafe.Pointer(_pH + 8)) = _pNew
_6:
	*(*uintptr)(unsafe.Pointer(_pHead + 8)) = _pNew
	goto _4

_3:
	*(*uintptr)(unsafe.Pointer(_pNew)) = *(*uintptr)(unsafe.Pointer(_pH + 8))
	if (*(*uintptr)(unsafe.Pointer(_pH + 8))) == 0 {
		goto _7
	}

	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pH + 8))) + 8)) = _pNew
_7:
	*(*uintptr)(unsafe.Pointer(_pNew + 8)) = null
	*(*uintptr)(unsafe.Pointer(_pH + 8)) = _pNew
_4:
}

// _1131sqlite3PcachePageRefcount is defined at sqlite3.c:45474:20
func _1131sqlite3PcachePageRefcount(tls crt.TLS, _p uintptr /* *TPgHdr = SPgHdr */) (r int32) {
	return int32(*(*int16)(unsafe.Pointer(_p + 54)))
}

// _1132sqlite3WalCheckpoint is defined at sqlite3.c:58393:20
func _1132sqlite3WalCheckpoint(tls crt.TLS, _pWal uintptr /* *TWal = SWal */, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _eMode int32, _xBusy uintptr /* *func(crt.TLS, uintptr) int32 */, _pBusyArg uintptr /* *void */, _sync_flags int32, _nBuf int32, _zBuf uintptr /* *Tu8 = uint8 */, _pnLog uintptr /* *int32 */, _pnCkpt uintptr /* *int32 */) (r int32) {
	esc := crt.MustMalloc(4)
	var (
		_rc        int32
		_isChanged = esc // *int32
		_eMode2    int32
		_xBusy2    uintptr // *func(crt.TLS, uintptr) int32
	)
	defer crt.Free(esc)
	*(*int32)(unsafe.Pointer(_isChanged)) = int32(0)
	_eMode2 = _eMode
	_xBusy2 = _xBusy

	if (*(*uint8)(unsafe.Pointer(_pWal + 66))) == 0 {
		goto _1
	}

	return int32(8)

_1:
	_rc = _882walLockExclusive(tls, _pWal, int32(1), int32(1))
	if _rc == 0 {
		goto _2
	}

	return _rc

_2:
	*(*uint8)(unsafe.Pointer(_pWal + 65)) = uint8(1)
	if _eMode == int32(0) {
		goto _3
	}

	_rc = _1282walBusyLock(tls, _pWal, _xBusy, _pBusyArg, int32(0), int32(1))
	if _rc != int32(0) {
		goto _4
	}

	*(*uint8)(unsafe.Pointer(_pWal + 64)) = uint8(1)
	goto _5

_4:
	if _rc != int32(5) {
		goto _6
	}

	_eMode2 = int32(0)
	_xBusy2 = null
	_rc = int32(0)
_6:
_5:
_3:
	if _rc != int32(0) {
		goto _7
	}

	_rc = _1283walIndexReadHdr(tls, _pWal, _isChanged)
	if (*(*int32)(unsafe.Pointer(_isChanged))) == 0 || (*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pWal + 8))))))) < int32(3) {
		goto _8
	}

	_874sqlite3OsUnfetch(tls, *(*uintptr)(unsafe.Pointer(_pWal + 8)), int64(0), null)
_8:
_7:
	if _rc != int32(0) {
		goto _9
	}

	if (*(*uint32)(unsafe.Pointer((_pWal + 72) + 16))) == 0 || _1284walPagesize(tls, _pWal) == _nBuf {
		goto _10
	}

	_rc = _556sqlite3CorruptError(tls, int32(58468))
	goto _11

_10:
	_rc = _1285walCheckpoint(tls, _pWal, _db, _eMode2, _xBusy2, _pBusyArg, _sync_flags, _zBuf)
_11:
	if _rc != int32(0) && _rc != int32(5) {
		goto _12
	}

	if _pnLog == 0 {
		goto _13
	}

	*(*int32)(unsafe.Pointer(_pnLog)) = int32(*(*uint32)(unsafe.Pointer((_pWal + 72) + 16)))
_13:
	if _pnCkpt == 0 {
		goto _14
	}

	*(*int32)(unsafe.Pointer(_pnCkpt)) = int32(*(*uint32)(unsafe.Pointer(_1148walCkptInfo(tls, _pWal))))
_14:
_12:
_9:
	if (*(*int32)(unsafe.Pointer(_isChanged))) == 0 {
		goto _15
	}

	crt.Xmemset(tls, _pWal+72, int32(0), uint64(48))
_15:
	_916sqlite3WalEndWriteTransaction(tls, _pWal)
	_884walUnlockExclusive(tls, _pWal, int32(1), int32(1))
	*(*uint8)(unsafe.Pointer(_pWal + 65)) = uint8(0)
	return func() int32 {
		if (_rc == int32(0)) && (_eMode != _eMode2) {
			return int32(5)
		}
		return _rc
	}()
}

// _1133walIndexClose is defined at sqlite3.c:56366:13
func _1133walIndexClose(tls crt.TLS, _pWal uintptr /* *TWal = SWal */, _isDelete int32) {
	var _i int32

	if int32(*(*uint8)(unsafe.Pointer(_pWal + 63))) != int32(2) {
		goto _1
	}

	_i = int32(0)
_3:
	if _i >= (*(*int32)(unsafe.Pointer(_pWal + 40))) {
		goto _5
	}

	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pWal + 48))) + 8*uintptr(_i))))
	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pWal + 48))) + 8*uintptr(_i))) = null
	_i++
	goto _3

_5:
	goto _2

_1:
	_1286sqlite3OsShmUnmap(tls, *(*uintptr)(unsafe.Pointer(_pWal + 8)), _isDelete)
_2:
}

// _1134sqlite3WalEndReadTransaction is defined at sqlite3.c:57676:21
func _1134sqlite3WalEndReadTransaction(tls crt.TLS, _pWal uintptr /* *TWal = SWal */) {
	_916sqlite3WalEndWriteTransaction(tls, _pWal)
	if int32(*(*int16)(unsafe.Pointer(_pWal + 60))) < int32(0) {
		goto _1
	}

	_880walUnlockShared(tls, _pWal, int32(3)+int32(*(*int16)(unsafe.Pointer(_pWal + 60))))
	*(*int16)(unsafe.Pointer(_pWal + 60)) = int16(-1)
_1:
}

type SRowSetChunk struct {
	XpNextChunk uintptr // *SRowSetChunk
	XaEntry     [42]SRowSetEntry
}

// _1135dbReallocFinish is defined at sqlite3.c:25386:29
func _1135dbReallocFinish(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _p uintptr /* *void */, _n uint64) (r uintptr /* *void */) {
	var _pNew uintptr // *void

	_pNew = 0

	if int32(*(*uint8)(unsafe.Pointer(_db + 97))) != int32(0) {
		goto _1
	}

	if _614isLookaside(tls, _db, _p) == 0 {
		goto _2
	}

	_pNew = _373sqlite3DbMallocRawNN(tls, _db, _n)
	if _pNew == 0 {
		goto _4
	}

	crt.Xmemcpy(tls, _pNew, _p, uint64(*(*uint16)(unsafe.Pointer((_db + 352) + 4))))
	_181sqlite3DbFree(tls, _db, _p)
_4:
	goto _3

_2:
	_pNew = Xsqlite3_realloc64(tls, _p, _n)
	if _pNew != 0 {
		goto _5
	}

	_178sqlite3OomFault(tls, _db)
_5:
_3:
_1:
	return _pNew
}

type SExprList_item struct {
	XpExpr     uintptr
	XzName     uintptr
	XzSpan     uintptr
	XsortOrder uint8
	F25        uint8
	Xu         struct{ X int32 }
}

// _1136sqlite3OsCheckReservedLock is defined at sqlite3.c:20806:20
func _1136sqlite3OsCheckReservedLock(tls crt.TLS, _id uintptr /* *Tsqlite3_file = Ssqlite3_file */, _pResOut uintptr /* *int32 */) (r int32) {
	return fn58(*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_id))) + 72)))(tls, _id, _pResOut)
}

// _1137sqlite3OsUnlock is defined at sqlite3.c:20803:20
func _1137sqlite3OsUnlock(tls crt.TLS, _id uintptr /* *Tsqlite3_file = Ssqlite3_file */, _lockType int32) (r int32) {
	return fn50(*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_id))) + 64)))(tls, _id, _lockType)
}

// _1138sqlite3WalBeginReadTransaction is defined at sqlite3.c:57586:20
func _1138sqlite3WalBeginReadTransaction(tls crt.TLS, _pWal uintptr /* *TWal = SWal */, _pChanged uintptr /* *int32 */) (r int32) {
	var (
		_rc  int32
		_cnt int32
	)
	_cnt = int32(0)
_1:
	_rc = _1150walTryBeginRead(tls, _pWal, _pChanged, int32(0), preinc2(&_cnt))
	if _rc == int32(-1) {
		goto _1
	}

	return _rc
}

// _1139sqlite3WalDbsize is defined at sqlite3.c:57814:21
func _1139sqlite3WalDbsize(tls crt.TLS, _pWal uintptr /* *TWal = SWal */) (r uint32) {
	if _pWal == 0 || int32(*(*int16)(unsafe.Pointer(_pWal + 60))) < int32(0) {
		goto _1
	}

	return *(*uint32)(unsafe.Pointer((_pWal + 72) + 20))

_1:
	return uint32(0)
}

// _1140sqlite3WalOpen is defined at sqlite3.c:56393:20
func _1140sqlite3WalOpen(tls crt.TLS, _pVfs uintptr /* *Tsqlite3_vfs = Ssqlite3_vfs */, _pDbFd uintptr /* *Tsqlite3_file = Ssqlite3_file */, _zWalName uintptr /* *int8 */, _bNoShm int32, _mxWalSize int64, _ppWal uintptr /* **TWal = SWal */) (r int32) {
	esc := crt.MustMalloc(4)
	var (
		_rc    int32
		_pRet  uintptr // *TWal = SWal
		_flags = esc   // *int32
		_iDC   int32
	)
	defer crt.Free(esc)

	*(*uintptr)(unsafe.Pointer(_ppWal)) = null
	_pRet = _135sqlite3MallocZero(tls, uint64(uint64(144)+uint64(*(*int32)(unsafe.Pointer(_pVfs + 4)))))
	if _pRet != 0 {
		goto _1
	}

	return int32(7)

_1:
	*(*uintptr)(unsafe.Pointer(_pRet)) = _pVfs
	*(*uintptr)(unsafe.Pointer(_pRet + 16)) = _pRet + 144
	*(*uintptr)(unsafe.Pointer(_pRet + 8)) = _pDbFd
	*(*int16)(unsafe.Pointer(_pRet + 60)) = int16(-1)
	*(*int64)(unsafe.Pointer(_pRet + 32)) = _mxWalSize
	*(*uintptr)(unsafe.Pointer(_pRet + 128)) = _zWalName
	*(*uint8)(unsafe.Pointer(_pRet + 68)) = uint8(1)
	*(*uint8)(unsafe.Pointer(_pRet + 69)) = uint8(1)
	*(*uint8)(unsafe.Pointer(_pRet + 63)) = uint8(func() int32 {
		if _bNoShm != 0 {
			return int32(2)
		}
		return int32(0)
	}())
	*(*int32)(unsafe.Pointer(_flags)) = int32(524294)
	_rc = _845sqlite3OsOpen(tls, _pVfs, _zWalName, *(*uintptr)(unsafe.Pointer(_pRet + 16)), *(*int32)(unsafe.Pointer(_flags)), _flags)
	if _rc != int32(0) || ((*(*int32)(unsafe.Pointer(_flags)))&int32(0x1)) == 0 {
		goto _2
	}

	*(*uint8)(unsafe.Pointer(_pRet + 66)) = uint8(1)
_2:
	if _rc == int32(0) {
		goto _3
	}

	_1133walIndexClose(tls, _pRet, int32(0))
	_849sqlite3OsClose(tls, *(*uintptr)(unsafe.Pointer(_pRet + 16)))
	Xsqlite3_free(tls, _pRet)
	goto _4

_3:
	_iDC = _585sqlite3OsDeviceCharacteristics(tls, _pDbFd)
	if (_iDC & int32(0x400)) == 0 {
		goto _5
	}

	*(*uint8)(unsafe.Pointer(_pRet + 68)) = uint8(0)
_5:
	if (_iDC & int32(0x1000)) == 0 {
		goto _6
	}

	*(*uint8)(unsafe.Pointer(_pRet + 69)) = uint8(0)
_6:
	*(*uintptr)(unsafe.Pointer(_ppWal)) = _pRet
_4:
	return _rc
}

// _1141sqlite3OsShmLock is defined at sqlite3.c:20849:20
func _1141sqlite3OsShmLock(tls crt.TLS, _id uintptr /* *Tsqlite3_file = Ssqlite3_file */, _offset int32, _n int32, _flags int32) (r int32) {
	return fn189(*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_id))) + 112)))(tls, _id, _offset, _n, _flags)
}

// _1142btreeParseCellPtr is defined at sqlite3.c:60785:13
func _1142btreeParseCellPtr(tls crt.TLS, _pPage uintptr /* *TMemPage = SMemPage */, _pCell uintptr /* *Tu8 = uint8 */, _pInfo uintptr /* *TCellInfo = SCellInfo */) {
	esc := crt.MustMalloc(8)
	var (
		_pIter    uintptr // *Tu8 = uint8
		_nPayload uint32
		_iKey     = esc   // *Tu64 = Tsqlite_uint64 = uint64
		_pEnd     uintptr // *Tu8 = uint8
		_1pEnd    uintptr // *Tu8 = uint8
	)
	defer crt.Free(esc)

	_pIter = _pCell
	_nPayload = uint32(*(*uint8)(unsafe.Pointer(_pIter)))
	if _nPayload < uint32(0x80) {
		goto _1
	}

	_pEnd = _pIter + 8
	_nPayload = uint32(_nPayload & uint32(0x7f))
_2:
	_nPayload = (_nPayload << (uint(7) % 32)) | uint32(int32(*(*uint8)(unsafe.Pointer(preinc40(&_pIter))))&int32(0x7f))
	if (int32(*(*uint8)(unsafe.Pointer(_pIter))) >= int32(0x80)) && (_pIter < _pEnd) {
		goto _2
	}

_1:
	_pIter++
	*(*uint64)(unsafe.Pointer(_iKey)) = uint64(*(*uint8)(unsafe.Pointer(_pIter)))
	if (*(*uint64)(unsafe.Pointer(_iKey))) < uint64(0x80) {
		goto _5
	}

	_1pEnd = _pIter + 7
	*(*uint64)(unsafe.Pointer(_iKey)) = uint64((*(*uint64)(unsafe.Pointer(_iKey))) & uint64(0x7f))
_6:
	*(*uint64)(unsafe.Pointer(_iKey)) = ((*(*uint64)(unsafe.Pointer(_iKey))) << (uint(7) % 64)) | uint64(int32(*(*uint8)(unsafe.Pointer(preinc40(&_pIter))))&int32(0x7f))
	if int32(*(*uint8)(unsafe.Pointer(_pIter))) >= int32(0x80) {
		goto _8
	}

	goto _7

_8:
	if _pIter < _1pEnd {
		goto _9
	}

	*(*uint64)(unsafe.Pointer(_iKey)) = ((*(*uint64)(unsafe.Pointer(_iKey))) << (uint(8) % 64)) | uint64(*(*uint8)(unsafe.Pointer(preinc40(&_pIter))))
	goto _7

_9:
	goto _6

_7:
_5:
	_pIter++
	*(*int64)(unsafe.Pointer(_pInfo)) = *(*int64)(unsafe.Pointer(_iKey))
	*(*uint32)(unsafe.Pointer(_pInfo + 16)) = _nPayload
	*(*uintptr)(unsafe.Pointer(_pInfo + 8)) = _pIter
	if _nPayload > uint32(*(*uint16)(unsafe.Pointer(_pPage + 14))) {
		goto _10
	}

	*(*uint16)(unsafe.Pointer(_pInfo + 22)) = uint16(_nPayload + uint32(uint16(int64(_pIter-_pCell))))
	if int32(*(*uint16)(unsafe.Pointer(_pInfo + 22))) >= int32(4) {
		goto _12
	}

	*(*uint16)(unsafe.Pointer(_pInfo + 22)) = uint16(4)
_12:
	*(*uint16)(unsafe.Pointer(_pInfo + 20)) = uint16(_nPayload)
	goto _11

_10:
	_1287btreeParseCellAdjustSizeForOverflow(tls, _pPage, _pCell, _pInfo)
_11:
}

// _1143cellSizePtrNoPayload is defined at sqlite3.c:60958:12
func _1143cellSizePtrNoPayload(tls crt.TLS, _pPage uintptr /* *TMemPage = SMemPage */, _pCell uintptr /* *Tu8 = uint8 */) (r uint16) {
	var (
		_pIter uintptr // *Tu8 = uint8
		_pEnd  uintptr // *Tu8 = uint8
	)
	_pIter = _pCell + uintptr(4)

	_pEnd = _pIter + uintptr(9)
_1:
	if (int32(*(*uint8)(unsafe.Pointer(postinc19(&_pIter))))&int32(0x80)) == 0 || _pIter >= _pEnd {
		goto _2
	}

	goto _1

_2:
	return uint16(int64(_pIter - _pCell))
}

// _1144btreeParseCellPtrNoPayload is defined at sqlite3.c:60768:13
func _1144btreeParseCellPtrNoPayload(tls crt.TLS, _pPage uintptr /* *TMemPage = SMemPage */, _pCell uintptr /* *Tu8 = uint8 */, _pInfo uintptr /* *TCellInfo = SCellInfo */) {
	*(*uint16)(unsafe.Pointer(_pInfo + 22)) = uint16(int32(4) + int32(_956sqlite3GetVarint(tls, _pCell+4, _pInfo)))
	*(*uint32)(unsafe.Pointer(_pInfo + 16)) = uint32(0)
	*(*uint16)(unsafe.Pointer(_pInfo + 20)) = uint16(0)
	*(*uintptr)(unsafe.Pointer(_pInfo + 8)) = null
	return
}

// _1145btreeParseCellPtrIndex is defined at sqlite3.c:60853:13
func _1145btreeParseCellPtrIndex(tls crt.TLS, _pPage uintptr /* *TMemPage = SMemPage */, _pCell uintptr /* *Tu8 = uint8 */, _pInfo uintptr /* *TCellInfo = SCellInfo */) {
	var (
		_pIter    uintptr // *Tu8 = uint8
		_nPayload uint32
		_pEnd     uintptr // *Tu8 = uint8
	)

	_pIter = _pCell + uintptr(*(*uint8)(unsafe.Pointer(_pPage + 10)))
	_nPayload = uint32(*(*uint8)(unsafe.Pointer(_pIter)))
	if _nPayload < uint32(0x80) {
		goto _1
	}

	_pEnd = _pIter + 8
	_nPayload = uint32(_nPayload & uint32(0x7f))
_2:
	_nPayload = (_nPayload << (uint(7) % 32)) | uint32(int32(*(*uint8)(unsafe.Pointer(preinc40(&_pIter))))&int32(0x7f))
	if (int32(*(*uint8)(unsafe.Pointer(_pIter))) >= int32(0x80)) && (_pIter < _pEnd) {
		goto _2
	}

_1:
	_pIter++
	*(*int64)(unsafe.Pointer(_pInfo)) = int64(_nPayload)
	*(*uint32)(unsafe.Pointer(_pInfo + 16)) = _nPayload
	*(*uintptr)(unsafe.Pointer(_pInfo + 8)) = _pIter
	if _nPayload > uint32(*(*uint16)(unsafe.Pointer(_pPage + 14))) {
		goto _5
	}

	*(*uint16)(unsafe.Pointer(_pInfo + 22)) = uint16(_nPayload + uint32(uint16(int64(_pIter-_pCell))))
	if int32(*(*uint16)(unsafe.Pointer(_pInfo + 22))) >= int32(4) {
		goto _7
	}

	*(*uint16)(unsafe.Pointer(_pInfo + 22)) = uint16(4)
_7:
	*(*uint16)(unsafe.Pointer(_pInfo + 20)) = uint16(_nPayload)
	goto _6

_5:
	_1287btreeParseCellAdjustSizeForOverflow(tls, _pPage, _pCell, _pInfo)
_6:
}

// _1146pcacheFetchFinishWithInit is defined at sqlite3.c:45148:30
func _1146pcacheFetchFinishWithInit(tls crt.TLS, _pCache uintptr /* *TPCache = SPCache */, _pgno uint32, _pPage uintptr /* *Tsqlite3_pcache_page = Ssqlite3_pcache_page */) (r uintptr /* *TPgHdr = SPgHdr */) {
	var _pPgHdr uintptr // *TPgHdr = SPgHdr

	_pPgHdr = *(*uintptr)(unsafe.Pointer(_pPage + 8))

	crt.Xmemset(tls, _pPgHdr+32, int32(0), uint64(40))
	*(*uintptr)(unsafe.Pointer(_pPgHdr)) = _pPage
	*(*uintptr)(unsafe.Pointer(_pPgHdr + 8)) = *(*uintptr)(unsafe.Pointer(_pPage))
	*(*uintptr)(unsafe.Pointer(_pPgHdr + 16)) = _pPgHdr + 72
	crt.Xmemset(tls, *(*uintptr)(unsafe.Pointer(_pPgHdr + 16)), int32(0), uint64(8))
	*(*uintptr)(unsafe.Pointer(_pPgHdr + 24)) = _pCache
	*(*uint32)(unsafe.Pointer(_pPgHdr + 48)) = _pgno
	*(*uint16)(unsafe.Pointer(_pPgHdr + 52)) = uint16(0x1)
	return _892sqlite3PcacheFetchFinish(tls, _pCache, _pgno, _pPage)
}

type SMemJournal struct {
	XpMethod    uintptr // *Ssqlite3_io_methods
	XnChunkSize int32
	XnSpill     int32
	XnSize      int32
	XpFirst     uintptr // *SFileChunk
	Xendpoint   SFilePoint
	Xreadpoint  SFilePoint
	Xflags      int32
	XpVfs       uintptr // *Ssqlite3_vfs
	XzJournal   uintptr // *int8
}

// _1147MemJournalMethods Ssqlite3_io_methods, escapes: true, sqlite3.c:89981:40
var _1147MemJournalMethods = bss + 15296 // struct sqlite3_io_methods

func init() {
	*(*Ssqlite3_io_methods)(unsafe.Pointer(_1147MemJournalMethods)) = Ssqlite3_io_methods{
		XiVersion:  int32(1),
		XxClose:    fp10(_1288memjrnlClose),
		XxRead:     fp190(_1289memjrnlRead),
		XxWrite:    fp190(_1290memjrnlWrite),
		XxTruncate: fp117(_1291memjrnlTruncate),
		XxSync:     fp26(_1292memjrnlSync),
		XxFileSize: fp56(_1293memjrnlFileSize),
	}
}

type SWalCkptInfo struct {
	XnBackfill          uint32
	XaReadMark          [5]uint32
	XaLock              [8]uint8
	XnBackfillAttempted uint32
	XnotUsed0           uint32
}

// _1148walCkptInfo is defined at sqlite3.c:55695:29
func _1148walCkptInfo(tls crt.TLS, _pWal uintptr /* *TWal = SWal */) (r uintptr /* *TWalCkptInfo = SWalCkptInfo */) {
	return (*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pWal + 48))))) + 96
}

// _1149walRestartHdr is defined at sqlite3.c:56791:13
func _1149walRestartHdr(tls crt.TLS, _pWal uintptr /* *TWal = SWal */, asalt1 uint32) {
	esc := crt.MustMalloc(4)
	var (
		_salt1 = esc   // *uint32
		_pInfo uintptr // *TWalCkptInfo = SWalCkptInfo
		_i     int32
		_aSalt uintptr // *Tu32 = uint32
	)
	defer crt.Free(esc)
	*(*uint32)(unsafe.Pointer(_salt1)) = asalt1
	_pInfo = _1148walCkptInfo(tls, _pWal)
	_aSalt = (_pWal + 72) + 32
	(*(*uint32)(unsafe.Pointer(_pWal + 136)))++
	*(*uint32)(unsafe.Pointer((_pWal + 72) + 16)) = uint32(0)
	_329sqlite3Put4byte(tls, _aSalt, uint32(1)+_328sqlite3Get4byte(tls, _aSalt))
	crt.Xmemcpy(tls, ((_pWal+72)+32)+4, _salt1, uint64(4))
	_908walIndexWriteHdr(tls, _pWal)
	*(*uint32)(unsafe.Pointer(_pInfo)) = uint32(0)
	*(*uint32)(unsafe.Pointer(_pInfo + 32)) = uint32(0)
	*(*uint32)(unsafe.Pointer((_pInfo + 4) + 4)) = uint32(0)
	_i = int32(2)
_1:
	if _i >= int32(5) {
		goto _3
	}

	*(*uint32)(unsafe.Pointer((_pInfo + 4) + 4*uintptr(_i))) = uint32(0xffffffff)
	_i++
	goto _1

_3:
}

// _1150walTryBeginRead is defined at sqlite3.c:57295:12
func _1150walTryBeginRead(tls crt.TLS, _pWal uintptr /* *TWal = SWal */, _pChanged uintptr /* *int32 */, _useWal int32, _cnt int32) (r int32) {
	var (
		_pInfo      uintptr // *TWalCkptInfo = SWalCkptInfo
		_mxReadMark uint32
		_mxI        int32
		_i          int32
		_rc         int32
		_mxFrame    uint32
		_nDelay     int32
		_thisMark   uint32
	)
	_rc = int32(0)

	if _cnt <= int32(5) {
		goto _1
	}

	_nDelay = int32(1)
	if _cnt <= int32(100) {
		goto _2
	}

	return int32(15)

_2:
	if _cnt < int32(10) {
		goto _3
	}

	_nDelay = ((_cnt - int32(9)) * (_cnt - int32(9))) * int32(39)
_3:
	_218sqlite3OsSleep(tls, *(*uintptr)(unsafe.Pointer(_pWal)), _nDelay)
_1:
	if _useWal != 0 {
		goto _4
	}

	_rc = _1283walIndexReadHdr(tls, _pWal, _pChanged)
	if _rc != int32(5) {
		goto _5
	}

	if (*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pWal + 48))))) != 0 {
		goto _6
	}

	_rc = int32(-1)
	goto _7

_6:
	if int32(0) != set5(&_rc, _879walLockShared(tls, _pWal, int32(2))) {
		goto _8
	}

	_880walUnlockShared(tls, _pWal, int32(2))
	_rc = int32(-1)
	goto _9

_8:
	if _rc != int32(5) {
		goto _10
	}

	_rc = int32(261)
_10:
_9:
_7:
_5:
	if _rc == int32(0) {
		goto _11
	}

	return _rc

_11:
_4:
	_pInfo = _1148walCkptInfo(tls, _pWal)
	if _useWal != 0 || (*(*uint32)(unsafe.Pointer(_pInfo))) != (*(*uint32)(unsafe.Pointer((_pWal + 72) + 16))) {
		goto _12
	}

	_rc = _879walLockShared(tls, _pWal, int32(3))
	_1159walShmBarrier(tls, _pWal)
	if _rc != int32(0) {
		goto _13
	}

	if crt.Xmemcmp(tls, _883walIndexHdr(tls, _pWal), _pWal+72, uint64(48)) == 0 {
		goto _15
	}

	_880walUnlockShared(tls, _pWal, int32(3))
	return int32(-1)

_15:
	*(*int16)(unsafe.Pointer(_pWal + 60)) = int16(0)
	return int32(0)

	goto _14

_13:
	if _rc == int32(5) {
		goto _16
	}

	return _rc

_16:
_14:
_12:
	_mxReadMark = uint32(0)
	_mxI = int32(0)
	_mxFrame = *(*uint32)(unsafe.Pointer((_pWal + 72) + 16))
	_i = int32(1)
_17:
	if _i >= int32(5) {
		goto _19
	}

	_thisMark = *(*uint32)(unsafe.Pointer((_pInfo + 4) + 4*uintptr(_i)))
	if _mxReadMark > _thisMark || _thisMark > _mxFrame {
		goto _20
	}

	_mxReadMark = _thisMark
	_mxI = _i
_20:
	_i++
	goto _17

_19:
	if (int32(*(*uint8)(unsafe.Pointer(_pWal + 66)))&int32(2)) != int32(0) || _mxReadMark >= _mxFrame && _mxI != int32(0) {
		goto _21
	}

	_i = int32(1)
_22:
	if _i >= int32(5) {
		goto _24
	}

	_rc = _882walLockExclusive(tls, _pWal, int32(3)+_i, int32(1))
	if _rc != int32(0) {
		goto _25
	}

	_mxReadMark = set25(&(*(*uint32)(unsafe.Pointer((_pInfo + 4) + 4*uintptr(_i)))), _mxFrame)
	_mxI = _i
	_884walUnlockExclusive(tls, _pWal, int32(3)+_i, int32(1))
	goto _24

	goto _26

_25:
	if _rc == int32(5) {
		goto _27
	}

	return _rc

_27:
_26:
	_i++
	goto _22

_24:
_21:
	if _mxI != int32(0) {
		goto _28
	}

	if _rc == int32(5) {
		return int32(-1)
	}

	return int32(520)

_28:
	_rc = _879walLockShared(tls, _pWal, int32(3)+_mxI)
	if _rc == 0 {
		goto _29
	}

	if _rc == int32(5) {
		return int32(-1)
	}

	return _rc

_29:
	*(*uint32)(unsafe.Pointer(_pWal + 120)) = (*(*uint32)(unsafe.Pointer(_pInfo))) + uint32(1)
	_1159walShmBarrier(tls, _pWal)
	if (*(*uint32)(unsafe.Pointer((_pInfo + 4) + 4*uintptr(_mxI)))) == _mxReadMark && crt.Xmemcmp(tls, _883walIndexHdr(tls, _pWal), _pWal+72, uint64(48)) == 0 {
		goto _30
	}

	_880walUnlockShared(tls, _pWal, int32(3)+_mxI)
	return int32(-1)

	goto _31

_30:
	*(*int16)(unsafe.Pointer(_pWal + 60)) = int16(_mxI)
_31:
	return _rc
}

// _1151walFramePage is defined at sqlite3.c:56014:12
func _1151walFramePage(tls crt.TLS, _iFrame uint32) (r int32) {
	var _iHash int32

	_iHash = int32(((uint64(_iFrame+uint32(4096)) - uint64(4062)) - uint64(1)) / uint64(4096))

	return _iHash
}

// _1152walHashGet is defined at sqlite3.c:55976:12
func _1152walHashGet(tls crt.TLS, _pWal uintptr /* *TWal = SWal */, _iHash int32, _paHash uintptr /* **Tht_slot = Tu16 = uint16 */, _paPgno uintptr /* **Tu32 = uint32 */, _piZero uintptr /* *Tu32 = uint32 */) (r int32) {
	esc := crt.MustMalloc(8)
	var (
		_rc    int32
		_aPgno = esc // **Tu32 = uint32
		_iZero uint32
		_aHash uintptr // *Tht_slot = Tu16 = uint16
	)
	defer crt.Free(esc)
	_rc = _1294walIndexPage(tls, _pWal, _iHash, _aPgno)

	if _rc != int32(0) {
		goto _1
	}

	_aHash = (*(*uintptr)(unsafe.Pointer(_aPgno))) + 16384
	if _iHash != int32(0) {
		goto _2
	}

	*(*uintptr)(unsafe.Pointer(_aPgno)) = (*(*uintptr)(unsafe.Pointer(_aPgno))) + 136
	_iZero = uint32(0)
	goto _3

_2:
	_iZero = uint32(uint64(4062) + uint64((_iHash-int32(1))*int32(4096)))
_3:
	*(*uintptr)(unsafe.Pointer(_paPgno)) = (*(*uintptr)(unsafe.Pointer(_aPgno))) - 4
	*(*uintptr)(unsafe.Pointer(_paHash)) = _aHash
	*(*uint32)(unsafe.Pointer(_piZero)) = _iZero
_1:
	return _rc
}

// _1153walHash is defined at sqlite3.c:55953:12
func _1153walHash(tls crt.TLS, _iPage uint32) (r int32) {
	return int32((_iPage * uint32(383)) & uint32(8191))
}

// _1154walNextHash is defined at sqlite3.c:55958:12
func _1154walNextHash(tls crt.TLS, _iPriorHash int32) (r int32) {
	return (_iPriorHash + int32(1)) & int32(8191)
}

// _1155walEncodeFrame is defined at sqlite3.c:55804:13
func _1155walEncodeFrame(tls crt.TLS, _pWal uintptr /* *TWal = SWal */, _iPage uint32, _nTruncate uint32, _aData uintptr /* *Tu8 = uint8 */, _aFrame uintptr /* *Tu8 = uint8 */) {
	var (
		_nativeCksum int32
		_aCksum      uintptr // *Tu32 = uint32
	)
	_aCksum = (_pWal + 72) + 24

	_329sqlite3Put4byte(tls, _aFrame, _iPage)
	_329sqlite3Put4byte(tls, _aFrame+4, _nTruncate)
	if (*(*uint32)(unsafe.Pointer(_pWal + 124))) != uint32(0) {
		goto _1
	}

	crt.Xmemcpy(tls, _aFrame+8, (_pWal+72)+32, uint64(8))
	_nativeCksum = bool2int(int32(*(*uint8)(unsafe.Pointer((_pWal + 72) + 13))) == int32(0))
	_901walChecksumBytes(tls, _nativeCksum, _aFrame, int32(8), _aCksum, _aCksum)
	_901walChecksumBytes(tls, _nativeCksum, _aData, int32(*(*uint32)(unsafe.Pointer(_pWal + 56))), _aCksum, _aCksum)
	_329sqlite3Put4byte(tls, _aFrame+16, *(*uint32)(unsafe.Pointer(_aCksum)))
	_329sqlite3Put4byte(tls, _aFrame+20, *(*uint32)(unsafe.Pointer(_aCksum + 4)))
	goto _2

_1:
	crt.Xmemset(tls, _aFrame+8, int32(0), uint64(16))
_2:
}

// _1156walWriteToLog is defined at sqlite3.c:58049:12
func _1156walWriteToLog(tls crt.TLS, _p uintptr /* *TWalWriter = struct{XpWal *SWal...XsyncFlags int32;XszPage int32;} */, _pContent uintptr /* *void */, _iAmt int32, _iOffset int64) (r int32) {
	var (
		_rc        int32
		_iFirstAmt int32
	)
	if _iOffset >= (*(*int64)(unsafe.Pointer(_p + 16))) || (_iOffset+int64(_iAmt)) < (*(*int64)(unsafe.Pointer(_p + 16))) {
		goto _1
	}

	_iFirstAmt = int32((*(*int64)(unsafe.Pointer(_p + 16))) - _iOffset)
	_rc = _163sqlite3OsWrite(tls, *(*uintptr)(unsafe.Pointer(_p + 8)), _pContent, _iFirstAmt, _iOffset)
	if _rc == 0 {
		goto _2
	}

	return _rc

_2:
	_iOffset = int64(_iOffset + int64(_iFirstAmt))
	_iAmt = int32(_iAmt - _iFirstAmt)
	_pContent = uintptr(_iFirstAmt) + _pContent

	_rc = _354sqlite3OsSync(tls, *(*uintptr)(unsafe.Pointer(_p + 8)), (*(*int32)(unsafe.Pointer(_p + 24)))&int32(0x3))
	if _iAmt != int32(0) && _rc == 0 {
		goto _3
	}

	return _rc

_3:
_1:
	_rc = _163sqlite3OsWrite(tls, *(*uintptr)(unsafe.Pointer(_p + 8)), _pContent, _iAmt, _iOffset)
	return _rc
}

// _1157sqlite3OsSectorSize is defined at sqlite3.c:20841:20
func _1157sqlite3OsSectorSize(tls crt.TLS, _id uintptr /* *Tsqlite3_file = Ssqlite3_file */) (r int32) {
	var _xSectorSize uintptr // *func(crt.TLS, uintptr) int32

	_xSectorSize = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_id))) + 88))
	return func() int32 {
		if _xSectorSize != 0 {
			return fn12(_xSectorSize)(tls, _id)
		}
		return int32(4096)
	}()
}

// _1158walCleanupHash is defined at sqlite3.c:56048:13
func _1158walCleanupHash(tls crt.TLS, _pWal uintptr /* *TWal = SWal */) {
	esc := crt.MustMalloc(36)
	var (
		_aHash  = esc      // **Tht_slot = Tu16 = uint16
		_aPgno  = esc + 16 // **Tu32 = uint32
		_iZero  = esc + 32 // *Tu32 = uint32
		_iLimit int32
		_nByte  int32
		_i      int32
	)
	defer crt.Free(esc)
	*(*uintptr)(unsafe.Pointer(_aHash)) = 0
	*(*uintptr)(unsafe.Pointer(_aPgno)) = 0
	*(*uint32)(unsafe.Pointer(_iZero)) = uint32(0)
	_iLimit = int32(0)

	if (*(*uint32)(unsafe.Pointer((_pWal + 72) + 16))) != uint32(0) {
		goto _1
	}

	return

_1:
	_1152walHashGet(tls, _pWal, _1151walFramePage(tls, *(*uint32)(unsafe.Pointer((_pWal + 72) + 16))), _aHash, _aPgno, _iZero)
	_iLimit = int32((*(*uint32)(unsafe.Pointer((_pWal + 72) + 16))) - (*(*uint32)(unsafe.Pointer(_iZero))))

	_i = int32(0)
_2:
	if _i >= int32(8192) {
		goto _4
	}

	if int32(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_aHash))) + 2*uintptr(_i)))) <= _iLimit {
		goto _5
	}

	*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_aHash))) + 2*uintptr(_i))) = uint16(0)
_5:
	_i++
	goto _2

_4:
	_nByte = int32(int64(*(*uintptr)(unsafe.Pointer(_aHash)) - ((*(*uintptr)(unsafe.Pointer(_aPgno))) + 4*uintptr(_iLimit+int32(1)))))
	crt.Xmemset(tls, (*(*uintptr)(unsafe.Pointer(_aPgno)))+4*uintptr(_iLimit+int32(1)), int32(0), uint64(_nByte))
}

// _1159walShmBarrier is defined at sqlite3.c:55767:13
func _1159walShmBarrier(tls crt.TLS, _pWal uintptr /* *TWal = SWal */) {
	if int32(*(*uint8)(unsafe.Pointer(_pWal + 63))) == int32(2) {
		goto _1
	}

	_1295sqlite3OsShmBarrier(tls, *(*uintptr)(unsafe.Pointer(_pWal + 8)))
_1:
}

// _1160zeroHdr [28]int8, escapes: true, sqlite3.c:48885:25
var _1160zeroHdr = bss + 15448

// _1161btreeGetUnusedPage is defined at sqlite3.c:61824:12
func _1161btreeGetUnusedPage(tls crt.TLS, _pBt uintptr /* *TBtShared = SBtShared */, _pgno uint32, _ppPage uintptr /* **TMemPage = SMemPage */, _flags int32) (r int32) {
	var _rc int32

	_rc = _363btreeGetPage(tls, _pBt, _pgno, _ppPage, _flags)
	if _rc != int32(0) {
		goto _1
	}

	if _850sqlite3PagerPageRefcount(tls, *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_ppPage)) + 112))) <= int32(1) {
		goto _3
	}

	_919releasePage(tls, *(*uintptr)(unsafe.Pointer(_ppPage)))
	*(*uintptr)(unsafe.Pointer(_ppPage)) = null
	return _556sqlite3CorruptError(tls, int32(61835))

_3:
	*(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_ppPage)))) = uint8(0)
	goto _2

_1:
	*(*uintptr)(unsafe.Pointer(_ppPage)) = null
_2:
	return _rc
}

// _1162btreeGetHasContent is defined at sqlite3.c:60257:12
func _1162btreeGetHasContent(tls crt.TLS, _pBt uintptr /* *TBtShared = SBtShared */, _pgno uint32) (r int32) {
	var _p uintptr // *TBitvec = SBitvec

	_p = *(*uintptr)(unsafe.Pointer(_pBt + 88))
	return bool2int((_p != 0) && ((_pgno > uint32(_408sqlite3BitvecSize(tls, _p))) || (_407sqlite3BitvecTest(tls, _p, _pgno) != 0)))
}

// _1163sqlite3PagerMovepage is defined at sqlite3.c:54518:20
func _1163sqlite3PagerMovepage(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _pPg uintptr /* *TDbPage = SPgHdr */, _pgno uint32, _isCommit int32) (r int32) {
	esc := crt.MustMalloc(8)
	var (
		_pPgOld       uintptr // *TPgHdr = SPgHdr
		_needSyncPgno uint32
		_rc           int32
		_origPgno     uint32
		_pPgHdr       = esc // **TPgHdr = SPgHdr
	)
	defer crt.Free(esc)
	_needSyncPgno = uint32(0)

	if (*(*uint8)(unsafe.Pointer(_pPager + 16))) == 0 {
		goto _1
	}

	_rc = _161sqlite3PagerWrite(tls, _pPg)
	if _rc == 0 {
		goto _2
	}

	return _rc

_2:
_1:
	if (int32(*(*uint16)(unsafe.Pointer(_pPg + 52)))&int32(0x2)) == int32(0) || int32(0) == set5(&_rc, _339subjournalPageIfRequired(tls, _pPg)) {
		goto _3
	}

	return _rc

_3:
	if int32(*(*uint16)(unsafe.Pointer(_pPg + 52)))&int32(0x8) == 0 || _isCommit != 0 {
		goto _4
	}

	_needSyncPgno = *(*uint32)(unsafe.Pointer(_pPg + 48))

_4:
	{
		p := &(*(*uint16)(unsafe.Pointer(_pPg + 52)))
		*p = uint16(int32(*p) & int32(-9))
	}
	_pPgOld = _569sqlite3PagerLookup(tls, _pPager, _pgno)

	if _pPgOld == 0 {
		goto _5
	}

	{
		p := &(*(*uint16)(unsafe.Pointer(_pPg + 52)))
		*p = uint16(int32(*p) | (int32(*(*uint16)(unsafe.Pointer(_pPgOld + 52))) & int32(0x8)))
	}
	if (*(*uint8)(unsafe.Pointer(_pPager + 16))) == 0 {
		goto _6
	}

	_1296sqlite3PcacheMove(tls, _pPgOld, (*(*uint32)(unsafe.Pointer(_pPager + 28)))+uint32(1))
	goto _7

_6:
	_1174sqlite3PcacheDrop(tls, _pPgOld)
_7:
_5:
	_origPgno = *(*uint32)(unsafe.Pointer(_pPg + 48))
	_1296sqlite3PcacheMove(tls, _pPg, _pgno)
	_571sqlite3PcacheMakeDirty(tls, _pPg)
	if (*(*uint8)(unsafe.Pointer(_pPager + 16))) == 0 || _pPgOld == 0 {
		goto _8
	}

	_1296sqlite3PcacheMove(tls, _pPgOld, _origPgno)
	_335sqlite3PagerUnrefNotNull(tls, _pPgOld)
_8:
	if _needSyncPgno == 0 {
		goto _9
	}

	_rc = _150sqlite3PagerGet(tls, _pPager, _needSyncPgno, _pPgHdr, int32(0))
	if _rc == int32(0) {
		goto _10
	}

	if _needSyncPgno > (*(*uint32)(unsafe.Pointer(_pPager + 32))) {
		goto _11
	}

	_406sqlite3BitvecClear(tls, *(*uintptr)(unsafe.Pointer(_pPager + 64)), _needSyncPgno, *(*uintptr)(unsafe.Pointer(_pPager + 272)))
_11:
	return _rc

_10:
	{
		p := &(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPgHdr))) + 52)))
		*p = uint16(int32(*p) | int32(0x8))
	}
	_571sqlite3PcacheMakeDirty(tls, *(*uintptr)(unsafe.Pointer(_pPgHdr)))
	_335sqlite3PagerUnrefNotNull(tls, *(*uintptr)(unsafe.Pointer(_pPgHdr)))
_9:
	return int32(0)
}

// _1164setChildPtrmaps is defined at sqlite3.c:63083:12
func _1164setChildPtrmaps(tls crt.TLS, _pPage uintptr /* *TMemPage = SMemPage */) (r int32) {
	esc := crt.MustMalloc(4)
	var (
		_i          int32
		_nCell      int32
		_rc         = esc   // *int32
		_pBt        uintptr // *TBtShared = SBtShared
		_pgno       uint32
		_pCell      uintptr // *Tu8 = uint8
		_childPgno  uint32
		_1childPgno uint32
	)
	defer crt.Free(esc)
	_pBt = *(*uintptr)(unsafe.Pointer(_pPage + 72))
	_pgno = *(*uint32)(unsafe.Pointer(_pPage + 4))

	*(*int32)(unsafe.Pointer(_rc)) = func() int32 {
		if (*(*uint8)(unsafe.Pointer(_pPage))) != 0 {
			return int32(0)
		}
		return _851btreeInitPage(tls, _pPage)
	}()
	if (*(*int32)(unsafe.Pointer(_rc))) == int32(0) {
		goto _1
	}

	return *(*int32)(unsafe.Pointer(_rc))

_1:
	_nCell = int32(*(*uint16)(unsafe.Pointer(_pPage + 22)))
	_i = int32(0)
_2:
	if _i >= _nCell {
		goto _4
	}

	_pCell = (*(*uintptr)(unsafe.Pointer(_pPage + 80))) + uintptr(int32(*(*uint16)(unsafe.Pointer(_pPage + 24)))&((int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage + 96))) + uintptr(int32(2)*_i))))<<(uint(8)%32))|int32(*(*uint8)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pPage + 96))) + uintptr(int32(2)*_i)) + 1)))))
	_1198ptrmapPutOvflPtr(tls, _pPage, _pCell, _rc)
	if (*(*uint8)(unsafe.Pointer(_pPage + 8))) != 0 {
		goto _5
	}

	_childPgno = uint32(_328sqlite3Get4byte(tls, _pCell))
	_1165ptrmapPut(tls, _pBt, _childPgno, uint8(5), _pgno, _rc)
_5:
	_i++
	goto _2

_4:
	if (*(*uint8)(unsafe.Pointer(_pPage + 8))) != 0 {
		goto _6
	}

	_1childPgno = uint32(_328sqlite3Get4byte(tls, (*(*uintptr)(unsafe.Pointer(_pPage + 80)))+uintptr(int32(*(*uint8)(unsafe.Pointer(_pPage + 9)))+int32(8))))
	_1165ptrmapPut(tls, _pBt, _1childPgno, uint8(5), _pgno, _rc)
_6:
	return *(*int32)(unsafe.Pointer(_rc))
}

// _1165ptrmapPut is defined at sqlite3.c:60612:13
func _1165ptrmapPut(tls crt.TLS, _pBt uintptr /* *TBtShared = SBtShared */, _key uint32, _eType uint8, _parent uint32, _pRC uintptr /* *int32 */) {
	esc := crt.MustMalloc(8)
	var (
		_pDbPage = esc   // **TDbPage = SPgHdr
		_pPtrmap uintptr // *Tu8 = uint8
		_iPtrmap uint32
		_offset  int32
		_rc      int32
	)
	defer crt.Free(esc)
	if (*(*int32)(unsafe.Pointer(_pRC))) == 0 {
		goto _1
	}

	return

_1:
	if _key != uint32(0) {
		goto _2
	}

	*(*int32)(unsafe.Pointer(_pRC)) = _556sqlite3CorruptError(tls, int32(60627))
	return

_2:
	_iPtrmap = _595ptrmapPageno(tls, _pBt, _key)
	_rc = _150sqlite3PagerGet(tls, *(*uintptr)(unsafe.Pointer(_pBt)), _iPtrmap, _pDbPage, int32(0))
	if _rc == int32(0) {
		goto _3
	}

	*(*int32)(unsafe.Pointer(_pRC)) = _rc
	return

_3:
	_offset = int32(uint32(5) * ((_key - _iPtrmap) - uint32(1)))
	if _offset >= int32(0) {
		goto _4
	}

	*(*int32)(unsafe.Pointer(_pRC)) = _556sqlite3CorruptError(tls, int32(60638))
	goto _ptrmap_exit

_4:
	_pPtrmap = _152sqlite3PagerGetData(tls, *(*uintptr)(unsafe.Pointer(_pDbPage)))
	if int32(_eType) == int32(*(*uint8)(unsafe.Pointer(_pPtrmap + uintptr(_offset)))) && _328sqlite3Get4byte(tls, _pPtrmap+uintptr(_offset+int32(1))) == uint32(_parent) {
		goto _5
	}

	*(*int32)(unsafe.Pointer(_pRC)) = set5(&_rc, _161sqlite3PagerWrite(tls, *(*uintptr)(unsafe.Pointer(_pDbPage))))
	if _rc != int32(0) {
		goto _6
	}

	*(*uint8)(unsafe.Pointer(_pPtrmap + uintptr(_offset))) = _eType
	_329sqlite3Put4byte(tls, _pPtrmap+uintptr(_offset+int32(1)), _parent)
_6:
_5:
	goto _ptrmap_exit
_ptrmap_exit:
	_153sqlite3PagerUnref(tls, *(*uintptr)(unsafe.Pointer(_pDbPage)))
}

// _1166modifyPagePointer is defined at sqlite3.c:63128:12
func _1166modifyPagePointer(tls crt.TLS, _pPage uintptr /* *TMemPage = SMemPage */, _iFrom uint32, _iTo uint32, _eType uint8) (r int32) {
	esc := crt.MustMalloc(24)
	var (
		_i     int32
		_nCell int32
		_rc    int32
		_pCell uintptr // *Tu8 = uint8
		_info  = esc   // *TCellInfo = SCellInfo
	)
	defer crt.Free(esc)

	if int32(_eType) != int32(4) {
		goto _1
	}

	if _328sqlite3Get4byte(tls, *(*uintptr)(unsafe.Pointer(_pPage + 80))) == uint32(_iFrom) {
		goto _3
	}

	return _556sqlite3CorruptError(tls, int32(63134))

_3:
	_329sqlite3Put4byte(tls, *(*uintptr)(unsafe.Pointer(_pPage + 80)), _iTo)
	goto _2

_1:
	_rc = func() int32 {
		if (*(*uint8)(unsafe.Pointer(_pPage))) != 0 {
			return int32(0)
		}
		return _851btreeInitPage(tls, _pPage)
	}()
	if _rc == 0 {
		goto _4
	}

	return _rc

_4:
	_nCell = int32(*(*uint16)(unsafe.Pointer(_pPage + 22)))
	_i = int32(0)
_5:
	if _i >= _nCell {
		goto _7
	}

	_pCell = (*(*uintptr)(unsafe.Pointer(_pPage + 80))) + uintptr(int32(*(*uint16)(unsafe.Pointer(_pPage + 24)))&((int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage + 96))) + uintptr(int32(2)*_i))))<<(uint(8)%32))|int32(*(*uint8)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pPage + 96))) + uintptr(int32(2)*_i)) + 1)))))
	if int32(_eType) != int32(3) {
		goto _8
	}

	fn45(*(*uintptr)(unsafe.Pointer(_pPage + 128)))(tls, _pPage, _pCell, _info)
	if uint32(*(*uint16)(unsafe.Pointer(_info + 20))) >= (*(*uint32)(unsafe.Pointer(_info + 16))) {
		goto _10
	}

	if (_pCell + uintptr(*(*uint16)(unsafe.Pointer(_info + 22)))) <= ((*(*uintptr)(unsafe.Pointer(_pPage + 80))) + uintptr(*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage + 72))) + 52)))) {
		goto _11
	}

	return _556sqlite3CorruptError(tls, int32(63153))

_11:
	if _iFrom != uint32(_328sqlite3Get4byte(tls, (_pCell+uintptr(*(*uint16)(unsafe.Pointer(_info + 22))))-uintptr(4))) {
		goto _12
	}

	_329sqlite3Put4byte(tls, (_pCell+uintptr(*(*uint16)(unsafe.Pointer(_info + 22))))-uintptr(4), _iTo)
	goto _7

_12:
_10:
	goto _9

_8:
	if _328sqlite3Get4byte(tls, _pCell) != uint32(_iFrom) {
		goto _13
	}

	_329sqlite3Put4byte(tls, _pCell, _iTo)
	goto _7

_13:
_9:
	_i++
	goto _5

_7:
	if _i != _nCell {
		goto _14
	}

	if int32(_eType) == int32(5) && _328sqlite3Get4byte(tls, (*(*uintptr)(unsafe.Pointer(_pPage + 80)))+uintptr(int32(*(*uint8)(unsafe.Pointer(_pPage + 9)))+int32(8))) == uint32(_iFrom) {
		goto _15
	}

	return _556sqlite3CorruptError(tls, int32(63171))

_15:
	_329sqlite3Put4byte(tls, (*(*uintptr)(unsafe.Pointer(_pPage + 80)))+uintptr(int32(*(*uint8)(unsafe.Pointer(_pPage + 9)))+int32(8)), _iTo)
_14:
_2:
	return int32(0)
}

// _1167sqlite3BtreePayload is defined at sqlite3.c:64439:20
func _1167sqlite3BtreePayload(tls crt.TLS, _pCur uintptr /* *TBtCursor = SBtCursor */, _offset uint32, _amt uint32, _pBuf uintptr /* *void */) (r int32) {
	return _972accessPayload(tls, _pCur, _offset, _amt, _pBuf, int32(0))
}

// _1168pagerRollbackWal is defined at sqlite3.c:50620:12
func _1168pagerRollbackWal(tls crt.TLS, _pPager uintptr /* *TPager = SPager */) (r int32) {
	var (
		_rc    int32
		_pList uintptr // *TPgHdr = SPgHdr
		_pNext uintptr // *TPgHdr = SPgHdr
	)
	*(*uint32)(unsafe.Pointer(_pPager + 28)) = *(*uint32)(unsafe.Pointer(_pPager + 32))
	_rc = _1297sqlite3WalUndo(tls, *(*uintptr)(unsafe.Pointer(_pPager + 288)), fp182(_1298pagerUndoCallback), _pPager)
	_pList = _344sqlite3PcacheDirtyList(tls, *(*uintptr)(unsafe.Pointer(_pPager + 280)))
_1:
	if _pList == 0 || _rc != int32(0) {
		goto _2
	}

	_pNext = *(*uintptr)(unsafe.Pointer(_pList + 32))
	_rc = _1298pagerUndoCallback(tls, _pPager, *(*uint32)(unsafe.Pointer(_pList + 48)))
	_pList = _pNext
	goto _1

_2:
	return _rc
}

// _1169sqlite3WalSavepointUndo is defined at sqlite3.c:57949:20
func _1169sqlite3WalSavepointUndo(tls crt.TLS, _pWal uintptr /* *TWal = SWal */, _aWalData uintptr /* *Tu32 = uint32 */) (r int32) {
	var _rc int32

	_rc = int32(0)

	if (*(*uint32)(unsafe.Pointer(_aWalData + 12))) == (*(*uint32)(unsafe.Pointer(_pWal + 136))) {
		goto _1
	}

	*(*uint32)(unsafe.Pointer(_aWalData)) = uint32(0)
	*(*uint32)(unsafe.Pointer(_aWalData + 12)) = *(*uint32)(unsafe.Pointer(_pWal + 136))
_1:
	if (*(*uint32)(unsafe.Pointer(_aWalData))) >= (*(*uint32)(unsafe.Pointer((_pWal + 72) + 16))) {
		goto _2
	}

	*(*uint32)(unsafe.Pointer((_pWal + 72) + 16)) = *(*uint32)(unsafe.Pointer(_aWalData))
	*(*uint32)(unsafe.Pointer((_pWal + 72) + 24)) = *(*uint32)(unsafe.Pointer(_aWalData + 4))
	*(*uint32)(unsafe.Pointer(((_pWal + 72) + 24) + 4)) = *(*uint32)(unsafe.Pointer(_aWalData + 8))
	_1158walCleanupHash(tls, _pWal)
_2:
	return _rc
}

// _1170sqlite3OsFetch is defined at sqlite3.c:20872:20
func _1170sqlite3OsFetch(tls crt.TLS, _id uintptr /* *Tsqlite3_file = Ssqlite3_file */, _iOff int64, _iAmt int32, _pp uintptr /* **void */) (r int32) {
	return fn191(*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_id))) + 136)))(tls, _id, _iOff, _iAmt, _pp)
}

// _1171pagerAcquireMapPage is defined at sqlite3.c:51518:12
func _1171pagerAcquireMapPage(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _pgno uint32, _pData uintptr /* *void */, _ppPage uintptr /* **TPgHdr = SPgHdr */) (r int32) {
	var _p uintptr // *TPgHdr = SPgHdr

	if (*(*uintptr)(unsafe.Pointer(_pPager + 168))) == 0 {
		goto _1
	}

	*(*uintptr)(unsafe.Pointer(_ppPage)) = set4(&_p, *(*uintptr)(unsafe.Pointer(_pPager + 168)))
	*(*uintptr)(unsafe.Pointer(_pPager + 168)) = *(*uintptr)(unsafe.Pointer(_p + 32))
	*(*uintptr)(unsafe.Pointer(_p + 32)) = null

	crt.Xmemset(tls, *(*uintptr)(unsafe.Pointer(_p + 16)), int32(0), uint64(8))
	goto _2

_1:
	*(*uintptr)(unsafe.Pointer(_ppPage)) = set4(&_p, _135sqlite3MallocZero(tls, uint64(uint64(72)+uint64(*(*uint16)(unsafe.Pointer(_pPager + 176))))))
	if _p != 0 {
		goto _3
	}

	_874sqlite3OsUnfetch(tls, *(*uintptr)(unsafe.Pointer(_pPager + 72)), int64(_pgno-uint32(1))*int64(*(*int32)(unsafe.Pointer(_pPager + 188))), _pData)
	return int32(7)

_3:
	*(*uintptr)(unsafe.Pointer(_p + 16)) = _p + 72
	*(*uint16)(unsafe.Pointer(_p + 52)) = uint16(0x20)
	*(*int16)(unsafe.Pointer(_p + 54)) = int16(1)
	*(*uintptr)(unsafe.Pointer(_p + 40)) = _pPager
_2:
	*(*uint32)(unsafe.Pointer(_p + 48)) = _pgno
	*(*uintptr)(unsafe.Pointer(_p + 8)) = _pData
	(*(*int32)(unsafe.Pointer(_pPager + 152)))++
	return int32(0)
}

// _1172sqlite3PcacheFetchStress is defined at sqlite3.c:45092:20
func _1172sqlite3PcacheFetchStress(tls crt.TLS, _pCache uintptr /* *TPCache = SPCache */, _pgno uint32, _ppPage uintptr /* **Tsqlite3_pcache_page = Ssqlite3_pcache_page */) (r int32) {
	var (
		_pPg uintptr // *TPgHdr = SPgHdr
		_rc  int32
	)
	if int32(*(*uint8)(unsafe.Pointer(_pCache + 45))) != int32(2) {
		goto _1
	}

	return int32(0)

_1:
	if _775sqlite3PcachePagecount(tls, _pCache) <= (*(*int32)(unsafe.Pointer(_pCache + 32))) {
		goto _2
	}

	_pPg = *(*uintptr)(unsafe.Pointer(_pCache + 16))
_3:
	if _pPg == 0 || (*(*int16)(unsafe.Pointer(_pPg + 54))) == 0 && int32(*(*uint16)(unsafe.Pointer(_pPg + 52)))&int32(0x8) == 0 {
		goto _5
	}

	_pPg = *(*uintptr)(unsafe.Pointer(_pPg + 64))
	goto _3

_5:
	*(*uintptr)(unsafe.Pointer(_pCache + 16)) = _pPg
	if _pPg != 0 {
		goto _6
	}

	_pPg = *(*uintptr)(unsafe.Pointer(_pCache + 8))
_7:
	if _pPg == 0 || (*(*int16)(unsafe.Pointer(_pPg + 54))) == 0 {
		goto _9
	}

	_pPg = *(*uintptr)(unsafe.Pointer(_pPg + 64))
	goto _7

_9:
_6:
	if _pPg == 0 {
		goto _10
	}

	_rc = fn58(*(*uintptr)(unsafe.Pointer(_pCache + 48)))(tls, *(*uintptr)(unsafe.Pointer(_pCache + 56)), _pPg)
	if _rc == int32(0) || _rc == int32(5) {
		goto _11
	}

	return _rc

_11:
_10:
_2:
	*(*uintptr)(unsafe.Pointer(_ppPage)) = fn158(*(*uintptr)(unsafe.Pointer((_28sqlite3Config + 184) + 56)))(tls, *(*uintptr)(unsafe.Pointer(_pCache + 64)), _pgno, int32(2))
	if (*(*uintptr)(unsafe.Pointer(_ppPage))) == 0 {
		return int32(7)
	}

	return int32(0)
}

// _1173readDbPage is defined at sqlite3.c:50493:12
func _1173readDbPage(tls crt.TLS, _pPg uintptr /* *TPgHdr = SPgHdr */) (r int32) {
	esc := crt.MustMalloc(4)
	var (
		_pPager     uintptr // *TPager = SPager
		_rc         int32
		_iFrame     = esc // *Tu32 = uint32
		_iOffset    int64
		_dbFileVers uintptr // *Tu8 = uint8
	)
	defer crt.Free(esc)
	_pPager = *(*uintptr)(unsafe.Pointer(_pPg + 40))
	_rc = int32(0)
	*(*uint32)(unsafe.Pointer(_iFrame)) = uint32(0)

	if (*(*uintptr)(unsafe.Pointer(_pPager + 288))) == 0 {
		goto _1
	}

	_rc = _902sqlite3WalFindFrame(tls, *(*uintptr)(unsafe.Pointer(_pPager + 288)), *(*uint32)(unsafe.Pointer(_pPg + 48)), _iFrame)
	if _rc == 0 {
		goto _2
	}

	return _rc

_2:
_1:
	if (*(*uint32)(unsafe.Pointer(_iFrame))) == 0 {
		goto _3
	}

	_rc = _1299sqlite3WalReadFrame(tls, *(*uintptr)(unsafe.Pointer(_pPager + 288)), *(*uint32)(unsafe.Pointer(_iFrame)), *(*int32)(unsafe.Pointer(_pPager + 188)), *(*uintptr)(unsafe.Pointer(_pPg + 8)))
	goto _4

_3:
	_iOffset = int64((*(*uint32)(unsafe.Pointer(_pPg + 48)))-uint32(1)) * int64(*(*int32)(unsafe.Pointer(_pPager + 188)))
	_rc = _586sqlite3OsRead(tls, *(*uintptr)(unsafe.Pointer(_pPager + 72)), *(*uintptr)(unsafe.Pointer(_pPg + 8)), *(*int32)(unsafe.Pointer(_pPager + 188)), _iOffset)
	if _rc != int32(522) {
		goto _5
	}

	_rc = int32(0)
_5:
_4:
	if (*(*uint32)(unsafe.Pointer(_pPg + 48))) != uint32(1) {
		goto _6
	}

	if _rc == 0 {
		goto _7
	}

	crt.Xmemset(tls, _pPager+136, int32(0xff), uint64(16))
	goto _8

_7:
	_dbFileVers = (*(*uintptr)(unsafe.Pointer(_pPg + 8))) + 24
	crt.Xmemcpy(tls, _pPager+136, _dbFileVers, uint64(16))
_8:
_6:
	return _rc
}

// _1174sqlite3PcacheDrop is defined at sqlite3.c:45224:21
func _1174sqlite3PcacheDrop(tls crt.TLS, _p uintptr /* *TPgHdr = SPgHdr */) {
	if (int32(*(*uint16)(unsafe.Pointer(_p + 52))) & int32(0x2)) == 0 {
		goto _1
	}

	_888pcacheManageDirtyList(tls, _p, uint8(1))
_1:
	(*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 24))) + 24)))--
	fn157(*(*uintptr)(unsafe.Pointer((_28sqlite3Config + 184) + 64)))(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 24))) + 64)), *(*uintptr)(unsafe.Pointer(_p)), int32(1))
}

// _1175read32bits is defined at sqlite3.c:48587:12
func _1175read32bits(tls crt.TLS, _fd uintptr /* *Tsqlite3_file = Ssqlite3_file */, _offset int64, _pRes uintptr /* *Tu32 = uint32 */) (r int32) {
	esc := crt.MustMalloc(4)
	var (
		_ac = esc // *[4]uint8
		_rc int32
	)
	defer crt.Free(esc)
	_rc = _586sqlite3OsRead(tls, _fd, _ac, int32(4), _offset)
	if _rc != int32(0) {
		goto _1
	}

	*(*uint32)(unsafe.Pointer(_pRes)) = _328sqlite3Get4byte(tls, _ac)
_1:
	return _rc
}

type SyyStackEntry struct {
	Xstateno uint16
	Xmajor   uint8
	Xminor   struct {
		X int64
		_ [16]byte
	}
}

// _1176aiClass [256]uint8, escapes: true, sqlite3.c:140733:28
var _1176aiClass = ds + 9052

// _1177yy_find_shift_action is defined at sqlite3.c:138619:21
func _1177yy_find_shift_action(tls crt.TLS, _pParser uintptr /* *TyyParser = SyyParser */, _iLookAhead uint8) (r uint32) {
	var (
		_i         int32
		_stateno   int32
		_iFallback uint8
		_j         int32
	)
	_stateno = int32(*(*uint16)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pParser)))))
	if _stateno < int32(993) {
		goto _1
	}

	return uint32(_stateno)

_1:
_2:
	_i = int32(*(*int16)(unsafe.Pointer(_1300yy_shift_ofst + 2*uintptr(_stateno))))

	_i = int32(_i + int32(_iLookAhead))
	if _i >= int32(0) && _i < int32(1566) && int32(*(*uint8)(unsafe.Pointer(_1301yy_lookahead + uintptr(_i)))) == int32(_iLookAhead) {
		goto _5
	}

	if uint64(_iLookAhead) >= uint64(83) || int32(set23(&_iFallback, *(*uint8)(unsafe.Pointer(_1302yyFallback + uintptr(_iLookAhead))))) == int32(0) {
		goto _7
	}

	_iLookAhead = _iFallback
	goto _3

_7:
	_j = (_i - int32(_iLookAhead)) + int32(83)
	if _j < int32(0) || _j >= int32(1566) || int32(*(*uint8)(unsafe.Pointer(_1301yy_lookahead + uintptr(_j)))) != int32(83) || int32(_iLookAhead) <= int32(0) {
		goto _8
	}

	return uint32(*(*uint16)(unsafe.Pointer(_1303yy_action + 2*uintptr(_j))))

_8:
	return uint32(*(*uint16)(unsafe.Pointer(_1304yy_default + 2*uintptr(_stateno))))

	goto _6

_5:
	return uint32(*(*uint16)(unsafe.Pointer(_1303yy_action + 2*uintptr(_i))))

_6:
_3:
	if 1 != 0 {
		goto _2
	}
	return r
}

// _1178yy_shift is defined at sqlite3.c:138752:13
func _1178yy_shift(tls crt.TLS, _yypParser uintptr /* *TyyParser = SyyParser */, _yyNewState int32, _yyMajor int32, _yyMinor SToken) {
	var _yytos uintptr // *TyyStackEntry = SyyStackEntry

	*(*uintptr)(unsafe.Pointer(_yypParser)) += 32
	if (*(*uintptr)(unsafe.Pointer(_yypParser))) <= (*(*uintptr)(unsafe.Pointer(_yypParser + 3216))) {
		goto _1
	}

	*(*uintptr)(unsafe.Pointer(_yypParser)) -= 32
	_1305yyStackOverflow(tls, _yypParser)
	return

_1:
	if _yyNewState <= int32(454) {
		goto _2
	}

	_yyNewState = int32(_yyNewState + int32(329))
_2:
	_yytos = *(*uintptr)(unsafe.Pointer(_yypParser))
	*(*uint16)(unsafe.Pointer(_yytos)) = uint16(_yyNewState)
	*(*uint8)(unsafe.Pointer(_yytos + 2)) = uint8(_yyMajor)
	*(*SToken)(unsafe.Pointer(_yytos + 8)) = _yyMinor
}

// _1179yy_reduce is defined at sqlite3.c:139135:13
func _1179yy_reduce(tls crt.TLS, _yypParser uintptr /* *TyyParser = SyyParser */, _yyruleno uint32) {
	esc := crt.MustMalloc(144)
	var (
		_yygoto     int32
		_yyact      int32
		_yymsp      uintptr // *TyyStackEntry = SyyStackEntry
		_yysize     int32
		_pParse     uintptr // *TParse = SParse
		_yylhsminor struct {
			X int64
			_ [16]byte
		}
		_v         = esc      // *TExprSpan = SExprSpan
		_1v        = esc + 32 // *TExprSpan = SExprSpan
		_dest      = esc + 64 // *TSelectDest = SSelectDest
		_p         uintptr    // *TSelect = SSelect
		_pRhs      uintptr    // *TSelect = SSelect
		_pLhs      uintptr    // *TSelect = SSelect
		_pFrom     uintptr    // *TSrcList = SSrcList
		_x         = esc + 96 // *TToken = SToken
		_pRight    uintptr    // *TSelect = SSelect
		_pLeft     uintptr    // *TSelect = SSelect
		_2p        uintptr    // *TExpr = SExpr
		_3pRight   uintptr    // *TExpr = SExpr
		_4pLeft    uintptr    // *TExpr = SExpr
		_pDot      uintptr    // *TExpr = SExpr
		_pNew      uintptr    // *SSrcList_item
		_pOld      uintptr    // *SSrcList_item
		_pSubquery uintptr    // *TSelect = SSelect
		_temp1     uintptr    // *TExpr = SExpr
		_temp2     uintptr    // *TExpr = SExpr
		_5temp1    uintptr    // *TExpr = SExpr
		_6temp2    uintptr    // *TExpr = SExpr
		_temp3     uintptr    // *TExpr = SExpr
		_temp4     uintptr    // *TExpr = SExpr
		_n         uint32
		_t         = esc + 112 // *TToken = SToken
		_pList     uintptr     // *TExprList = SExprList
		_7pList    uintptr     // *TExprList = SExprList
		_bNot      int32
		_8pList    uintptr // *TExprList = SExprList
		_9bNot     int32
		_10pList   uintptr     // *TExprList = SExprList
		_pRHS      uintptr     // *TExpr = SExpr
		_pSrc      uintptr     // *TSrcList = SSrcList
		_pSelect   uintptr     // *TSelect = SSelect
		_11p       uintptr     // *TExpr = SExpr
		_all       = esc + 128 // *TToken = SToken
	)
	defer crt.Free(esc)
	_pParse = *(*uintptr)(unsafe.Pointer(_yypParser + 8))
	_yymsp = *(*uintptr)(unsafe.Pointer(_yypParser))
	if int32(*(*int8)(unsafe.Pointer((_1306yyRuleInfo + 2*uintptr(_yyruleno)) + 1))) != int32(0) {
		goto _1
	}

	if (*(*uintptr)(unsafe.Pointer(_yypParser))) < (*(*uintptr)(unsafe.Pointer(_yypParser + 3216))) {
		goto _2
	}

	_1305yyStackOverflow(tls, _yypParser)
	return

_2:
_1:
	switch _yyruleno {
	case uint32(0):
		goto _4
	case uint32(1):
		goto _5
	case uint32(2):
		goto _6
	case uint32(3):
		goto _7
	case uint32(4):
		goto _8
	case uint32(5):
		goto _9
	case uint32(6):
		goto _10
	case uint32(7):
		goto _11
	case uint32(8):
		goto _12
	case uint32(9):
		goto _13
	case uint32(10):
		goto _14
	case uint32(11):
		goto _15
	case uint32(12):
		goto _16
	case uint32(13):
		goto _17
	case uint32(14):
		goto _18
	case uint32(15):
		goto _19
	case uint32(18):
		goto _20
	case uint32(21):
		goto _21
	case uint32(41):
		goto _22
	case uint32(56):
		goto _23
	case uint32(66):
		goto _24
	case uint32(75):
		goto _25
	case uint32(89):
		goto _26
	case uint32(212):
		goto _27
	case uint32(16):
		goto _28
	case uint32(17):
		goto _29
	case uint32(42):
		goto _30
	case uint32(19):
		goto _31
	case uint32(20):
		goto _32
	case uint32(22):
		goto _33
	case uint32(23):
		goto _34
	case uint32(24):
		goto _35
	case uint32(59):
		goto _36
	case uint32(95):
		goto _37
	case uint32(25):
		goto _38
	case uint32(26):
		goto _39
	case uint32(27):
		goto _40
	case uint32(28):
		goto _41
	case uint32(61):
		goto _42
	case uint32(29):
		goto _43
	case uint32(31):
		goto _44
	case uint32(30):
		goto _45
	case uint32(32):
		goto _46
	case uint32(33):
		goto _47
	case uint32(34):
		goto _48
	case uint32(35):
		goto _49
	case uint32(36):
		goto _50
	case uint32(37):
		goto _51
	case uint32(38):
		goto _52
	case uint32(39):
		goto _53
	case uint32(40):
		goto _54
	case uint32(43):
		goto _55
	case uint32(44):
		goto _56
	case uint32(45):
		goto _57
	case uint32(46):
		goto _58
	case uint32(47):
		goto _59
	case uint32(48):
		goto _60
	case uint32(49):
		goto _61
	case uint32(50):
		goto _62
	case uint32(51):
		goto _63
	case uint32(52):
		goto _64
	case uint32(53):
		goto _65
	case uint32(54):
		goto _66
	case uint32(55):
		goto _67
	case uint32(70):
		goto _68
	case uint32(143):
		goto _69
	case uint32(57):
		goto _70
	case uint32(74):
		goto _71
	case uint32(184):
		goto _72
	case uint32(187):
		goto _73
	case uint32(213):
		goto _74
	case uint32(58):
		goto _75
	case uint32(60):
		goto _76
	case uint32(62):
		goto _77
	case uint32(63):
		goto _78
	case uint32(64):
		goto _79
	case uint32(65):
		goto _80
	case uint32(67):
		goto _81
	case uint32(69):
		goto _82
	case uint32(68):
		goto _83
	case uint32(71):
		goto _84
	case uint32(72):
		goto _85
	case uint32(144):
		goto _86
	case uint32(73):
		goto _87
	case uint32(76):
		goto _88
	case uint32(77):
		goto _89
	case uint32(78):
		goto _90
	case uint32(79):
		goto _91
	case uint32(80):
		goto _92
	case uint32(81):
		goto _93
	case uint32(83):
		goto _94
	case uint32(82):
		goto _95
	case uint32(84):
		goto _96
	case uint32(85):
		goto _97
	case uint32(86):
		goto _98
	case uint32(87):
		goto _99
	case uint32(88):
		goto _100
	case uint32(90):
		goto _101
	case uint32(118):
		goto _102
	case uint32(125):
		goto _103
	case uint32(200):
		goto _104
	case uint32(203):
		goto _105
	case uint32(208):
		goto _106
	case uint32(91):
		goto _107
	case uint32(92):
		goto _108
	case uint32(93):
		goto _109
	case uint32(94):
		goto _110
	case uint32(105):
		goto _111
	case uint32(222):
		goto _112
	case uint32(223):
		goto _113
	case uint32(96):
		goto _114
	case uint32(97):
		goto _115
	case uint32(98):
		goto _116
	case uint32(99):
		goto _117
	case uint32(100):
		goto _118
	case uint32(101):
		goto _119
	case uint32(102):
		goto _120
	case uint32(103):
		goto _121
	case uint32(104):
		goto _122
	case uint32(113):
		goto _123
	case uint32(106):
		goto _124
	case uint32(107):
		goto _125
	case uint32(108):
		goto _126
	case uint32(109):
		goto _127
	case uint32(110):
		goto _128
	case uint32(111):
		goto _129
	case uint32(128):
		goto _130
	case uint32(135):
		goto _131
	case uint32(196):
		goto _132
	case uint32(112):
		goto _133
	case uint32(127):
		goto _134
	case uint32(134):
		goto _135
	case uint32(197):
		goto _136
	case uint32(199):
		goto _137
	case uint32(114):
		goto _138
	case uint32(115):
		goto _139
	case uint32(116):
		goto _140
	case uint32(117):
		goto _141
	case uint32(145):
		goto _142
	case uint32(119):
		goto _143
	case uint32(126):
		goto _144
	case uint32(120):
		goto _145
	case uint32(121):
		goto _146
	case uint32(122):
		goto _147
	case uint32(123):
		goto _148
	case uint32(124):
		goto _149
	case uint32(129):
		goto _150
	case uint32(130):
		goto _151
	case uint32(131):
		goto _152
	case uint32(132):
		goto _153
	case uint32(133):
		goto _154
	case uint32(136):
		goto _155
	case uint32(137):
		goto _156
	case uint32(138):
		goto _157
	case uint32(139):
		goto _158
	case uint32(140):
		goto _159
	case uint32(141):
		goto _160
	case uint32(142):
		goto _161
	case uint32(146):
		goto _162
	case uint32(147):
		goto _163
	case uint32(148):
		goto _164
	case uint32(149):
		goto _165
	case uint32(150):
		goto _166
	case uint32(151):
		goto _167
	case uint32(152):
		goto _168
	case uint32(153):
		goto _169
	case uint32(154):
		goto _170
	case uint32(155):
		goto _171
	case uint32(156):
		goto _172
	case uint32(157):
		goto _173
	case uint32(158):
		goto _174
	case uint32(159):
		goto _175
	case uint32(160):
		goto _176
	case uint32(161):
		goto _177
	case uint32(162):
		goto _178
	case uint32(163):
		goto _179
	case uint32(164):
		goto _180
	case uint32(165):
		goto _181
	case uint32(166):
		goto _182
	case uint32(167):
		goto _183
	case uint32(168):
		goto _184
	case uint32(169):
		goto _185
	case uint32(170):
		goto _186
	case uint32(171):
		goto _187
	case uint32(172):
		goto _188
	case uint32(173):
		goto _189
	case uint32(174):
		goto _190
	case uint32(175):
		goto _191
	case uint32(176):
		goto _192
	case uint32(177):
		goto _193
	case uint32(178):
		goto _194
	case uint32(179):
		goto _195
	case uint32(180):
		goto _196
	case uint32(181):
		goto _197
	case uint32(182):
		goto _198
	case uint32(183):
		goto _199
	case uint32(186):
		goto _200
	case uint32(185):
		goto _201
	case uint32(188):
		goto _202
	case uint32(189):
		goto _203
	case uint32(190):
		goto _204
	case uint32(191):
		goto _205
	case uint32(192):
		goto _206
	case uint32(193):
		goto _207
	case uint32(194):
		goto _208
	case uint32(195):
		goto _209
	case uint32(198):
		goto _210
	case uint32(201):
		goto _211
	case uint32(202):
		goto _212
	case uint32(204):
		goto _213
	case uint32(209):
		goto _214
	case uint32(205):
		goto _215
	case uint32(206):
		goto _216
	case uint32(246):
		goto _217
	case uint32(207):
		goto _218
	case uint32(210):
		goto _219
	case uint32(211):
		goto _220
	case uint32(214):
		goto _221
	case uint32(215):
		goto _222
	case uint32(216):
		goto _223
	case uint32(217):
		goto _224
	case uint32(218):
		goto _225
	case uint32(219):
		goto _226
	case uint32(220):
		goto _227
	case uint32(221):
		goto _228
	case uint32(224):
		goto _229
	case uint32(225):
		goto _230
	case uint32(226):
		goto _231
	case uint32(227):
		goto _232
	case uint32(228):
		goto _233
	case uint32(229):
		goto _234
	case uint32(230):
		goto _235
	case uint32(231):
		goto _236
	case uint32(232):
		goto _237
	case uint32(251):
		goto _238
	case uint32(233):
		goto _239
	case uint32(252):
		goto _240
	case uint32(234):
		goto _241
	case uint32(235):
		goto _242
	case uint32(236):
		goto _243
	case uint32(237):
		goto _244
	case uint32(238):
		goto _245
	case uint32(239):
		goto _246
	case uint32(240):
		goto _247
	case uint32(241):
		goto _248
	case uint32(242):
		goto _249
	case uint32(243):
		goto _250
	case uint32(244):
		goto _251
	case uint32(245):
		goto _252
	case uint32(247):
		goto _253
	case uint32(248):
		goto _254
	case uint32(249):
		goto _255
	case uint32(250):
		goto _256
	case uint32(253):
		goto _257
	case uint32(254):
		goto _258
	case uint32(255):
		goto _259
	case uint32(256):
		goto _260
	case uint32(257):
		goto _261
	case uint32(258):
		goto _262
	case uint32(259):
		goto _263
	case uint32(260):
		goto _264
	case uint32(261):
		goto _265
	case uint32(262):
		goto _266
	case uint32(263):
		goto _267
	case uint32(264):
		goto _268
	case uint32(265):
		goto _269
	case uint32(266):
		goto _270
	case uint32(267):
		goto _271
	case uint32(268):
		goto _272
	case uint32(269):
		goto _273
	case uint32(270):
		goto _274
	case uint32(271):
		goto _275
	default:
		goto _276
	}
_4:
	*(*uint8)(unsafe.Pointer(_pParse + 467)) = uint8(1)
	goto _3

_5:
	*(*uint8)(unsafe.Pointer(_pParse + 467)) = uint8(2)
	goto _3

_6:
	_1307sqlite3FinishCoding(tls, _pParse)
	goto _3

_7:
	_1308sqlite3BeginTransaction(tls, _pParse, *(*int32)(unsafe.Pointer((_yymsp - 32) + 8)))
	goto _3

_8:
	*(*int32)(unsafe.Pointer((_yymsp + 32) + 8)) = int32(7)
	goto _3

_9:
_10:
_11:
	*(*int32)(unsafe.Pointer(_yymsp + 8)) = int32(*(*uint8)(unsafe.Pointer(_yymsp + 2)))
	goto _3

_12:
_13:
	_1309sqlite3EndTransaction(tls, _pParse, int32(*(*uint8)(unsafe.Pointer((_yymsp - 32) + 2))))
	goto _3

_14:
	_1310sqlite3Savepoint(tls, _pParse, int32(0), _yymsp+8)
	goto _3

_15:
	_1310sqlite3Savepoint(tls, _pParse, int32(1), _yymsp+8)
	goto _3

_16:
	_1310sqlite3Savepoint(tls, _pParse, int32(2), _yymsp+8)
	goto _3

_17:
	_1311sqlite3StartTable(tls, _pParse, (_yymsp-32)+8, _yymsp+8, *(*int32)(unsafe.Pointer((_yymsp - 128) + 8)), int32(0), int32(0), *(*int32)(unsafe.Pointer((_yymsp - 64) + 8)))
	goto _3

_18:
	_1312disableLookaside(tls, _pParse)
	goto _3

_19:
_20:
_21:
_22:
_23:
_24:
_25:
_26:
_27:
	*(*int32)(unsafe.Pointer((_yymsp + 32) + 8)) = int32(0)
	goto _3

_28:
	*(*int32)(unsafe.Pointer((_yymsp - 64) + 8)) = int32(1)
	goto _3

_29:
_30:
	*(*int32)(unsafe.Pointer(_yymsp + 8)) = int32(1)
	goto _3

_31:
	_1313sqlite3EndTable(tls, _pParse, (_yymsp-64)+8, (_yymsp-32)+8, uint8(*(*int32)(unsafe.Pointer(_yymsp + 8))), null)
	goto _3

_32:
	_1313sqlite3EndTable(tls, _pParse, null, null, uint8(0), *(*uintptr)(unsafe.Pointer(_yymsp + 8)))
	_1094sqlite3SelectDelete(tls, *(*uintptr)(unsafe.Pointer(_pParse)), *(*uintptr)(unsafe.Pointer(_yymsp + 8)))
	goto _3

_33:
	if (*(*uint32)(unsafe.Pointer(_yymsp + 8 + 8))) != uint32(5) || Xsqlite3_strnicmp(tls, *(*uintptr)(unsafe.Pointer(_yymsp + 8)), ts+20005 /* "rowid" */, int32(5)) != int32(0) {
		goto _277
	}

	*(*int32)(unsafe.Pointer((_yymsp - 32) + 8)) = int32(96)
	goto _278

_277:
	*(*int32)(unsafe.Pointer((_yymsp - 32) + 8)) = int32(0)
	_550sqlite3ErrorMsg(tls, _pParse, ts+24024 /* "unknown table option: %.*s" */, *(*uint32)(unsafe.Pointer(_yymsp + 8 + 8)), *(*uintptr)(unsafe.Pointer(_yymsp + 8)))
_278:
	goto _3

_34:
	_1314sqlite3AddColumn(tls, _pParse, (_yymsp-32)+8, _yymsp+8)
	goto _3

_35:
_36:
_37:
	*(*uint32)(unsafe.Pointer((_yymsp + 32) + 8 + 8)) = uint32(0)
	*(*uintptr)(unsafe.Pointer((_yymsp + 32) + 8)) = null
	goto _3

_38:
	*(*uint32)(unsafe.Pointer((_yymsp - 96) + 8 + 8)) = uint32(int32(int64((*(*uintptr)(unsafe.Pointer(_yymsp + 8))) + uintptr(*(*uint32)(unsafe.Pointer(_yymsp + 8 + 8))) - (*(*uintptr)(unsafe.Pointer((_yymsp - 96) + 8))))))
	goto _3

_39:
	*(*uint32)(unsafe.Pointer((_yymsp - 160) + 8 + 8)) = uint32(int32(int64((*(*uintptr)(unsafe.Pointer(_yymsp + 8))) + uintptr(*(*uint32)(unsafe.Pointer(_yymsp + 8 + 8))) - (*(*uintptr)(unsafe.Pointer((_yymsp - 160) + 8))))))
	goto _3

_40:
	*(*uint32)(unsafe.Pointer((_yymsp - 32) + 8 + 8)) = (*(*uint32)(unsafe.Pointer(_yymsp + 8 + 8))) + uint32(int32(int64((*(*uintptr)(unsafe.Pointer(_yymsp + 8)))-(*(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8))))))
	goto _3

_41:
_42:
	*(*SToken)(unsafe.Pointer(_pParse + 104)) = *(*SToken)(unsafe.Pointer(_yymsp + 8))
	goto _3

_43:
_44:
	_1315sqlite3AddDefaultValue(tls, _pParse, _yymsp+8)
	goto _3

_45:
	_1315sqlite3AddDefaultValue(tls, _pParse, (_yymsp-32)+8)
	goto _3

_46:
	*(*uintptr)(unsafe.Pointer(_v)) = _1316sqlite3PExpr(tls, _pParse, int32(148), *(*uintptr)(unsafe.Pointer(_yymsp + 8)), null)
	*(*uintptr)(unsafe.Pointer(_v + 8)) = *(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8))
	*(*uintptr)(unsafe.Pointer(_v + 16)) = *(*uintptr)(unsafe.Pointer(_yymsp + 8 + 16))
	_1315sqlite3AddDefaultValue(tls, _pParse, _v)
	goto _3

_47:
	_1317spanExpr(tls, _1v, _pParse, int32(97), *(*SToken)(unsafe.Pointer(_yymsp + 8)))
	_1315sqlite3AddDefaultValue(tls, _pParse, _1v)
	goto _3

_48:
	_1318sqlite3AddNotNull(tls, _pParse, *(*int32)(unsafe.Pointer(_yymsp + 8)))
	goto _3

_49:
	_1319sqlite3AddPrimaryKey(tls, _pParse, null, *(*int32)(unsafe.Pointer((_yymsp - 32) + 8)), *(*int32)(unsafe.Pointer(_yymsp + 8)), *(*int32)(unsafe.Pointer((_yymsp - 64) + 8)))
	goto _3

_50:
	_1320sqlite3CreateIndex(tls, _pParse, null, null, null, null, *(*int32)(unsafe.Pointer(_yymsp + 8)), null, null, int32(0), int32(0), uint8(1))
	goto _3

_51:
	_1321sqlite3AddCheckConstraint(tls, _pParse, *(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8)))
	goto _3

_52:
	_1322sqlite3CreateForeignKey(tls, _pParse, null, (_yymsp-64)+8, *(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8)), *(*int32)(unsafe.Pointer(_yymsp + 8)))
	goto _3

_53:
	_1323sqlite3DeferForeignKey(tls, _pParse, *(*int32)(unsafe.Pointer(_yymsp + 8)))
	goto _3

_54:
	_1324sqlite3AddCollateType(tls, _pParse, _yymsp+8)
	goto _3

_55:
	*(*int32)(unsafe.Pointer((_yymsp + 32) + 8)) = int32(0)
	goto _3

_56:
	*(*int32)(unsafe.Pointer((_yymsp - 32) + 8)) = ((*(*int32)(unsafe.Pointer((_yymsp - 32) + 8))) & (^*(*int32)(unsafe.Pointer(_yymsp + 8 + 4)))) | (*(*int32)(unsafe.Pointer(_yymsp + 8)))
	goto _3

_57:
	*(*int32)(unsafe.Pointer((_yymsp - 32) + 8)) = int32(0)
	*(*int32)(unsafe.Pointer((_yymsp - 32) + 8 + 4)) = int32(0x0)
	goto _3

_58:
	*(*int32)(unsafe.Pointer((_yymsp - 64) + 8)) = int32(0)
	*(*int32)(unsafe.Pointer((_yymsp - 64) + 8 + 4)) = int32(0x0)
	goto _3

_59:
	*(*int32)(unsafe.Pointer((_yymsp - 64) + 8)) = *(*int32)(unsafe.Pointer(_yymsp + 8))
	*(*int32)(unsafe.Pointer((_yymsp - 64) + 8 + 4)) = int32(0xff)
	goto _3

_60:
	*(*int32)(unsafe.Pointer((_yymsp - 64) + 8)) = (*(*int32)(unsafe.Pointer(_yymsp + 8))) << (uint(8) % 32)
	*(*int32)(unsafe.Pointer((_yymsp - 64) + 8 + 4)) = int32(0xff00)
	goto _3

_61:
	*(*int32)(unsafe.Pointer((_yymsp - 32) + 8)) = int32(7)
	goto _3

_62:
	*(*int32)(unsafe.Pointer((_yymsp - 32) + 8)) = int32(8)
	goto _3

_63:
	*(*int32)(unsafe.Pointer(_yymsp + 8)) = int32(9)
	goto _3

_64:
	*(*int32)(unsafe.Pointer(_yymsp + 8)) = int32(6)
	goto _3

_65:
	*(*int32)(unsafe.Pointer((_yymsp - 32) + 8)) = int32(0)
	goto _3

_66:
	*(*int32)(unsafe.Pointer((_yymsp - 64) + 8)) = int32(0)
	goto _3

_67:
_68:
_69:
	*(*int32)(unsafe.Pointer((_yymsp - 32) + 8)) = *(*int32)(unsafe.Pointer(_yymsp + 8))
	goto _3

_70:
_71:
_72:
_73:
_74:
	*(*int32)(unsafe.Pointer((_yymsp - 32) + 8)) = int32(1)
	goto _3

_75:
	*(*int32)(unsafe.Pointer((_yymsp - 32) + 8)) = int32(0)
	goto _3

_76:
	*(*uint32)(unsafe.Pointer((_pParse + 104) + 8)) = uint32(0)
	goto _3

_77:
	_1319sqlite3AddPrimaryKey(tls, _pParse, *(*uintptr)(unsafe.Pointer((_yymsp - 96) + 8)), *(*int32)(unsafe.Pointer(_yymsp + 8)), *(*int32)(unsafe.Pointer((_yymsp - 64) + 8)), int32(0))
	goto _3

_78:
	_1320sqlite3CreateIndex(tls, _pParse, null, null, null, *(*uintptr)(unsafe.Pointer((_yymsp - 64) + 8)), *(*int32)(unsafe.Pointer(_yymsp + 8)), null, null, int32(0), int32(0), uint8(1))
	goto _3

_79:
	_1321sqlite3AddCheckConstraint(tls, _pParse, *(*uintptr)(unsafe.Pointer((_yymsp - 64) + 8)))
	goto _3

_80:
	_1322sqlite3CreateForeignKey(tls, _pParse, *(*uintptr)(unsafe.Pointer((_yymsp - 192) + 8)), (_yymsp-96)+8, *(*uintptr)(unsafe.Pointer((_yymsp - 64) + 8)), *(*int32)(unsafe.Pointer((_yymsp - 32) + 8)))
	_1323sqlite3DeferForeignKey(tls, _pParse, *(*int32)(unsafe.Pointer(_yymsp + 8)))
	goto _3

_81:
_82:
	*(*int32)(unsafe.Pointer((_yymsp + 32) + 8)) = int32(10)
	goto _3

_83:
	*(*int32)(unsafe.Pointer((_yymsp - 64) + 8)) = *(*int32)(unsafe.Pointer(_yymsp + 8))
	goto _3

_84:
	*(*int32)(unsafe.Pointer(_yymsp + 8)) = int32(4)
	goto _3

_85:
_86:
	*(*int32)(unsafe.Pointer(_yymsp + 8)) = int32(5)
	goto _3

_87:
	_1325sqlite3DropTable(tls, _pParse, *(*uintptr)(unsafe.Pointer(_yymsp + 8)), int32(0), *(*int32)(unsafe.Pointer((_yymsp - 32) + 8)))
	goto _3

_88:
	_1326sqlite3CreateView(tls, _pParse, (_yymsp-256)+8, (_yymsp-128)+8, (_yymsp-96)+8, *(*uintptr)(unsafe.Pointer((_yymsp - 64) + 8)), *(*uintptr)(unsafe.Pointer(_yymsp + 8)), *(*int32)(unsafe.Pointer((_yymsp - 224) + 8)), *(*int32)(unsafe.Pointer((_yymsp - 160) + 8)))
	goto _3

_89:
	_1325sqlite3DropTable(tls, _pParse, *(*uintptr)(unsafe.Pointer(_yymsp + 8)), int32(1), *(*int32)(unsafe.Pointer((_yymsp - 32) + 8)))
	goto _3

_90:
	crt.Copy(_dest, ts+24051, 32)
	_1327sqlite3Select(tls, _pParse, *(*uintptr)(unsafe.Pointer(_yymsp + 8)), _dest)
	_1094sqlite3SelectDelete(tls, *(*uintptr)(unsafe.Pointer(_pParse)), *(*uintptr)(unsafe.Pointer(_yymsp + 8)))
	goto _3

_91:
	_p = *(*uintptr)(unsafe.Pointer(_yymsp + 8))
	if _p == 0 {
		goto _279
	}

	*(*uintptr)(unsafe.Pointer(_p + 104)) = *(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8))
	_1328parserDoubleLinkSelect(tls, _pParse, _p)
	goto _280

_279:
	_936sqlite3WithDelete(tls, *(*uintptr)(unsafe.Pointer(_pParse)), *(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8)))
_280:
	*(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8)) = _p
	goto _3

_92:
	_pRhs = *(*uintptr)(unsafe.Pointer(_yymsp + 8))
	_pLhs = *(*uintptr)(unsafe.Pointer((_yymsp - 64) + 8))
	if _pRhs == 0 || (*(*uintptr)(unsafe.Pointer(_pRhs + 72))) == 0 {
		goto _281
	}

	*(*uint32)(unsafe.Pointer(_x + 8)) = uint32(0)
	_1328parserDoubleLinkSelect(tls, _pParse, _pRhs)
	_pFrom = _1329sqlite3SrcListAppendFromTerm(tls, _pParse, null, null, null, _x, _pRhs, null, null)
	_pRhs = _1330sqlite3SelectNew(tls, _pParse, null, _pFrom, null, null, null, null, uint32(0), null, null)
_281:
	if _pRhs == 0 {
		goto _282
	}

	*(*uint8)(unsafe.Pointer(_pRhs + 8)) = uint8(*(*int32)(unsafe.Pointer((_yymsp - 32) + 8)))
	*(*uintptr)(unsafe.Pointer(_pRhs + 72)) = _pLhs
	if _pLhs == 0 {
		goto _284
	}

	{
		p := &(*(*uint32)(unsafe.Pointer(_pLhs + 12)))
		*p = uint32(uint32(*p) & uint32(4294966271))
	}
_284:
	{
		p := &(*(*uint32)(unsafe.Pointer(_pRhs + 12)))
		*p = uint32(uint32(*p) & uint32(4294966271))
	}
	if (*(*int32)(unsafe.Pointer((_yymsp - 32) + 8))) == int32(116) {
		goto _285
	}

	*(*uint8)(unsafe.Pointer(_pParse + 34)) = uint8(1)
_285:
	goto _283

_282:
	_1094sqlite3SelectDelete(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _pLhs)
_283:
	*(*uintptr)(unsafe.Pointer((_yymsp - 64) + 8)) = _pRhs
	goto _3

_93:
_94:
	*(*int32)(unsafe.Pointer(_yymsp + 8)) = int32(*(*uint8)(unsafe.Pointer(_yymsp + 2)))
	goto _3

_95:
	*(*int32)(unsafe.Pointer((_yymsp - 32) + 8)) = int32(116)
	goto _3

_96:
	*(*uintptr)(unsafe.Pointer((_yymsp - 256) + 8)) = _1330sqlite3SelectNew(tls, _pParse, *(*uintptr)(unsafe.Pointer((_yymsp - 192) + 8)), *(*uintptr)(unsafe.Pointer((_yymsp - 160) + 8)), *(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8)), *(*uintptr)(unsafe.Pointer((_yymsp - 96) + 8)), *(*uintptr)(unsafe.Pointer((_yymsp - 64) + 8)), *(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8)), uint32(*(*int32)(unsafe.Pointer((_yymsp - 224) + 8))), *(*uintptr)(unsafe.Pointer(_yymsp + 8)), *(*uintptr)(unsafe.Pointer(_yymsp + 8 + 8)))
	goto _3

_97:
	*(*uintptr)(unsafe.Pointer((_yymsp - 96) + 8)) = _1330sqlite3SelectNew(tls, _pParse, *(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8)), null, null, null, null, null, uint32(0x200), null, null)
	goto _3

_98:
	_pLeft = *(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8))
	_pRight = _1330sqlite3SelectNew(tls, _pParse, *(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8)), null, null, null, null, null, uint32(1536), null, null)
	if _pLeft == 0 {
		goto _286
	}

	{
		p := &(*(*uint32)(unsafe.Pointer(_pLeft + 12)))
		*p = uint32(uint32(*p) & uint32(4294966271))
	}
_286:
	if _pRight == 0 {
		goto _287
	}

	*(*uint8)(unsafe.Pointer(_pRight + 8)) = uint8(116)
	*(*uintptr)(unsafe.Pointer(_pRight + 72)) = _pLeft
	*(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8)) = _pRight
	goto _288

_287:
	*(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8)) = _pLeft
_288:
	goto _3

_99:
	*(*int32)(unsafe.Pointer(_yymsp + 8)) = int32(0x1)
	goto _3

_100:
	*(*int32)(unsafe.Pointer(_yymsp + 8)) = int32(0x2)
	goto _3

_101:
_102:
_103:
_104:
_105:
_106:
	*(*uintptr)(unsafe.Pointer((_yymsp + 32) + 8)) = null
	goto _3

_107:
	*(*uintptr)(unsafe.Pointer((_yymsp - 64) + 8)) = _1331sqlite3ExprListAppend(tls, _pParse, *(*uintptr)(unsafe.Pointer((_yymsp - 64) + 8)), *(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8)))
	if (*(*uint32)(unsafe.Pointer(_yymsp + 8 + 8))) <= uint32(0) {
		goto _289
	}

	_1332sqlite3ExprListSetName(tls, _pParse, *(*uintptr)(unsafe.Pointer((_yymsp - 64) + 8)), _yymsp+8, int32(1))
_289:
	_1333sqlite3ExprListSetSpan(tls, _pParse, *(*uintptr)(unsafe.Pointer((_yymsp - 64) + 8)), (_yymsp-32)+8)
	goto _3

_108:
	_2p = _1334sqlite3Expr(tls, *(*uintptr)(unsafe.Pointer(_pParse)), int32(154), null)
	*(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8)) = _1331sqlite3ExprListAppend(tls, _pParse, *(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8)), _2p)
	goto _3

_109:
	_3pRight = _1316sqlite3PExpr(tls, _pParse, int32(154), null, null)
	_4pLeft = _1335sqlite3ExprAlloc(tls, *(*uintptr)(unsafe.Pointer(_pParse)), int32(59), (_yymsp-64)+8, int32(1))
	_pDot = _1316sqlite3PExpr(tls, _pParse, int32(122), _4pLeft, _3pRight)
	*(*uintptr)(unsafe.Pointer((_yymsp - 96) + 8)) = _1331sqlite3ExprListAppend(tls, _pParse, *(*uintptr)(unsafe.Pointer((_yymsp - 96) + 8)), _pDot)
	goto _3

_110:
_111:
_112:
_113:
	*(*SToken)(unsafe.Pointer((_yymsp - 32) + 8)) = *(*SToken)(unsafe.Pointer(_yymsp + 8))
	goto _3

_114:
	*(*uintptr)(unsafe.Pointer((_yymsp + 32) + 8)) = _295sqlite3DbMallocZero(tls, *(*uintptr)(unsafe.Pointer(_pParse)), uint64(120))
	goto _3

_115:
	*(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8)) = *(*uintptr)(unsafe.Pointer(_yymsp + 8))
	_1336sqlite3SrcListShiftJoinType(tls, *(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8)))
	goto _3

_116:
	if (*(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8))) == 0 || (*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8))))) <= int32(0) {
		goto _290
	}

	*(*uint8)(unsafe.Pointer((((*(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8))) + 8) + 112*uintptr((*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8)))))-int32(1))) + 60)) = uint8(*(*int32)(unsafe.Pointer(_yymsp + 8)))
_290:
	goto _3

_117:
	*(*uintptr)(unsafe.Pointer((_yymsp + 32) + 8)) = null
	goto _3

_118:
	*(*uintptr)(unsafe.Pointer((_yymsp - 192) + 8)) = _1329sqlite3SrcListAppendFromTerm(tls, _pParse, *(*uintptr)(unsafe.Pointer((_yymsp - 192) + 8)), (_yymsp-160)+8, (_yymsp-128)+8, (_yymsp-96)+8, null, *(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8)), *(*uintptr)(unsafe.Pointer(_yymsp + 8)))
	_1337sqlite3SrcListIndexedBy(tls, _pParse, *(*uintptr)(unsafe.Pointer((_yymsp - 192) + 8)), (_yymsp-64)+8)
	goto _3

_119:
	*(*uintptr)(unsafe.Pointer((_yymsp - 256) + 8)) = _1329sqlite3SrcListAppendFromTerm(tls, _pParse, *(*uintptr)(unsafe.Pointer((_yymsp - 256) + 8)), (_yymsp-224)+8, (_yymsp-192)+8, (_yymsp-64)+8, null, *(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8)), *(*uintptr)(unsafe.Pointer(_yymsp + 8)))
	_1338sqlite3SrcListFuncArgs(tls, _pParse, *(*uintptr)(unsafe.Pointer((_yymsp - 256) + 8)), *(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8)))
	goto _3

_120:
	*(*uintptr)(unsafe.Pointer((_yymsp - 192) + 8)) = _1329sqlite3SrcListAppendFromTerm(tls, _pParse, *(*uintptr)(unsafe.Pointer((_yymsp - 192) + 8)), null, null, (_yymsp-64)+8, *(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8)), *(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8)), *(*uintptr)(unsafe.Pointer(_yymsp + 8)))
	goto _3

_121:
	if (*(*uintptr)(unsafe.Pointer((_yymsp - 192) + 8))) != 0 || (*(*uint32)(unsafe.Pointer((_yymsp - 64) + 8 + 8))) != uint32(0) || (*(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8))) != 0 || (*(*uintptr)(unsafe.Pointer(_yymsp + 8))) != 0 {
		goto _291
	}

	*(*uintptr)(unsafe.Pointer((_yymsp - 192) + 8)) = *(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8))
	goto _292

_291:
	if (*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8))))) != int32(1) {
		goto _293
	}

	*(*uintptr)(unsafe.Pointer((_yymsp - 192) + 8)) = _1329sqlite3SrcListAppendFromTerm(tls, _pParse, *(*uintptr)(unsafe.Pointer((_yymsp - 192) + 8)), null, null, (_yymsp-64)+8, null, *(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8)), *(*uintptr)(unsafe.Pointer(_yymsp + 8)))
	if (*(*uintptr)(unsafe.Pointer((_yymsp - 192) + 8))) == 0 {
		goto _295
	}

	_pNew = ((*(*uintptr)(unsafe.Pointer((_yymsp - 192) + 8))) + 8) + 112*uintptr((*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer((_yymsp - 192) + 8)))))-int32(1))
	_pOld = (*(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8))) + 8
	*(*uintptr)(unsafe.Pointer(_pNew + 16)) = *(*uintptr)(unsafe.Pointer(_pOld + 16))
	*(*uintptr)(unsafe.Pointer(_pNew + 8)) = *(*uintptr)(unsafe.Pointer(_pOld + 8))
	*(*uintptr)(unsafe.Pointer(_pNew + 40)) = *(*uintptr)(unsafe.Pointer(_pOld + 40))
	*(*uintptr)(unsafe.Pointer(_pOld + 16)) = set4(&(*(*uintptr)(unsafe.Pointer(_pOld + 8))), null)
	*(*uintptr)(unsafe.Pointer(_pOld + 40)) = null
_295:
	_1339sqlite3SrcListDelete(tls, *(*uintptr)(unsafe.Pointer(_pParse)), *(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8)))
	goto _294

_293:
	_1336sqlite3SrcListShiftJoinType(tls, *(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8)))
	_pSubquery = _1330sqlite3SelectNew(tls, _pParse, null, *(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8)), null, null, null, null, uint32(0x800), null, null)
	*(*uintptr)(unsafe.Pointer((_yymsp - 192) + 8)) = _1329sqlite3SrcListAppendFromTerm(tls, _pParse, *(*uintptr)(unsafe.Pointer((_yymsp - 192) + 8)), null, null, (_yymsp-64)+8, _pSubquery, *(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8)), *(*uintptr)(unsafe.Pointer(_yymsp + 8)))
_294:
_292:
	goto _3

_122:
_123:
	*(*uintptr)(unsafe.Pointer((_yymsp + 32) + 8)) = null
	*(*uint32)(unsafe.Pointer((_yymsp + 32) + 8 + 8)) = uint32(0)
	goto _3

_124:
	*(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8)) = _1340sqlite3SrcListAppend(tls, *(*uintptr)(unsafe.Pointer(_pParse)), null, (_yymsp-32)+8, _yymsp+8)
	goto _3

_125:
	*(*int32)(unsafe.Pointer(_yymsp + 8)) = int32(0x1)
	goto _3

_126:
	*(*int32)(unsafe.Pointer((_yymsp - 32) + 8)) = _1341sqlite3JoinType(tls, _pParse, (_yymsp-32)+8, null, null)
	goto _3

_127:
	*(*int32)(unsafe.Pointer((_yymsp - 64) + 8)) = _1341sqlite3JoinType(tls, _pParse, (_yymsp-64)+8, (_yymsp-32)+8, null)
	goto _3

_128:
	*(*int32)(unsafe.Pointer((_yymsp - 96) + 8)) = _1341sqlite3JoinType(tls, _pParse, (_yymsp-96)+8, (_yymsp-64)+8, (_yymsp-32)+8)
	goto _3

_129:
_130:
_131:
_132:
	*(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8)) = *(*uintptr)(unsafe.Pointer(_yymsp + 8))
	goto _3

_133:
_134:
_135:
_136:
_137:
	*(*uintptr)(unsafe.Pointer((_yymsp + 32) + 8)) = null
	goto _3

_138:
	*(*SToken)(unsafe.Pointer((_yymsp - 64) + 8)) = *(*SToken)(unsafe.Pointer(_yymsp + 8))
	goto _3

_139:
	*(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8)) = null
	*(*uint32)(unsafe.Pointer((_yymsp - 32) + 8 + 8)) = uint32(1)
	goto _3

_140:
	*(*uintptr)(unsafe.Pointer((_yymsp - 96) + 8)) = *(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8))
	goto _3

_141:
_142:
	*(*uintptr)(unsafe.Pointer((_yymsp + 32) + 8)) = null
	goto _3

_143:
_144:
	*(*uintptr)(unsafe.Pointer((_yymsp - 64) + 8)) = *(*uintptr)(unsafe.Pointer(_yymsp + 8))
	goto _3

_145:
	*(*uintptr)(unsafe.Pointer((_yymsp - 96) + 8)) = _1331sqlite3ExprListAppend(tls, _pParse, *(*uintptr)(unsafe.Pointer((_yymsp - 96) + 8)), *(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8)))
	_1342sqlite3ExprListSetSortOrder(tls, *(*uintptr)(unsafe.Pointer((_yymsp - 96) + 8)), *(*int32)(unsafe.Pointer(_yymsp + 8)))
	goto _3

_146:
	*(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8)) = _1331sqlite3ExprListAppend(tls, _pParse, null, *(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8)))
	_1342sqlite3ExprListSetSortOrder(tls, *(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8)), *(*int32)(unsafe.Pointer(_yymsp + 8)))
	goto _3

_147:
	*(*int32)(unsafe.Pointer(_yymsp + 8)) = int32(0)
	goto _3

_148:
	*(*int32)(unsafe.Pointer(_yymsp + 8)) = int32(1)
	goto _3

_149:
	*(*int32)(unsafe.Pointer((_yymsp + 32) + 8)) = int32(-1)
	goto _3

_150:
	*(*uintptr)(unsafe.Pointer((_yymsp + 32) + 8)) = null
	*(*uintptr)(unsafe.Pointer((_yymsp + 32) + 8 + 8)) = null
	goto _3

_151:
	*(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8)) = *(*uintptr)(unsafe.Pointer(_yymsp + 8))
	*(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8 + 8)) = null
	goto _3

_152:
	*(*uintptr)(unsafe.Pointer((_yymsp - 96) + 8)) = *(*uintptr)(unsafe.Pointer((_yymsp - 64) + 8))
	*(*uintptr)(unsafe.Pointer((_yymsp - 96) + 8 + 8)) = *(*uintptr)(unsafe.Pointer(_yymsp + 8))
	goto _3

_153:
	*(*uintptr)(unsafe.Pointer((_yymsp - 96) + 8 + 8)) = *(*uintptr)(unsafe.Pointer((_yymsp - 64) + 8))
	*(*uintptr)(unsafe.Pointer((_yymsp - 96) + 8)) = *(*uintptr)(unsafe.Pointer(_yymsp + 8))
	goto _3

_154:
	_1343sqlite3WithPush(tls, _pParse, *(*uintptr)(unsafe.Pointer((_yymsp - 160) + 8)), uint8(1))
	_1337sqlite3SrcListIndexedBy(tls, _pParse, *(*uintptr)(unsafe.Pointer((_yymsp - 64) + 8)), (_yymsp-32)+8)
	_1344sqlite3DeleteFrom(tls, _pParse, *(*uintptr)(unsafe.Pointer((_yymsp - 64) + 8)), *(*uintptr)(unsafe.Pointer(_yymsp + 8)))
	goto _3

_155:
	_1343sqlite3WithPush(tls, _pParse, *(*uintptr)(unsafe.Pointer((_yymsp - 224) + 8)), uint8(1))
	_1337sqlite3SrcListIndexedBy(tls, _pParse, *(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8)), (_yymsp-96)+8)
	_1345sqlite3ExprListCheckLength(tls, _pParse, *(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8)), ts+24084 /* "set list" */)
	_1346sqlite3Update(tls, _pParse, *(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8)), *(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8)), *(*uintptr)(unsafe.Pointer(_yymsp + 8)), *(*int32)(unsafe.Pointer((_yymsp - 160) + 8)))
	goto _3

_156:
	*(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8)) = _1331sqlite3ExprListAppend(tls, _pParse, *(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8)), *(*uintptr)(unsafe.Pointer(_yymsp + 8)))
	_1332sqlite3ExprListSetName(tls, _pParse, *(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8)), (_yymsp-64)+8, int32(1))
	goto _3

_157:
	*(*uintptr)(unsafe.Pointer((_yymsp - 192) + 8)) = _1347sqlite3ExprListAppendVector(tls, _pParse, *(*uintptr)(unsafe.Pointer((_yymsp - 192) + 8)), *(*uintptr)(unsafe.Pointer((_yymsp - 96) + 8)), *(*uintptr)(unsafe.Pointer(_yymsp + 8)))
	goto _3

_158:
	*(*uintptr)(unsafe.Pointer(uintptr(unsafe.Pointer(&_yylhsminor)))) = _1331sqlite3ExprListAppend(tls, _pParse, null, *(*uintptr)(unsafe.Pointer(_yymsp + 8)))
	_1332sqlite3ExprListSetName(tls, _pParse, *(*uintptr)(unsafe.Pointer(uintptr(unsafe.Pointer(&_yylhsminor)))), (_yymsp-64)+8, int32(1))
	*(*uintptr)(unsafe.Pointer((_yymsp - 64) + 8)) = *(*uintptr)(unsafe.Pointer(uintptr(unsafe.Pointer(&_yylhsminor))))
	goto _3

_159:
	*(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8)) = _1347sqlite3ExprListAppendVector(tls, _pParse, null, *(*uintptr)(unsafe.Pointer((_yymsp - 96) + 8)), *(*uintptr)(unsafe.Pointer(_yymsp + 8)))
	goto _3

_160:
	_1343sqlite3WithPush(tls, _pParse, *(*uintptr)(unsafe.Pointer((_yymsp - 160) + 8)), uint8(1))
	_1348sqlite3Insert(tls, _pParse, *(*uintptr)(unsafe.Pointer((_yymsp - 64) + 8)), *(*uintptr)(unsafe.Pointer(_yymsp + 8)), *(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8)), *(*int32)(unsafe.Pointer((_yymsp - 128) + 8)))
	goto _3

_161:
	_1343sqlite3WithPush(tls, _pParse, *(*uintptr)(unsafe.Pointer((_yymsp - 192) + 8)), uint8(1))
	_1348sqlite3Insert(tls, _pParse, *(*uintptr)(unsafe.Pointer((_yymsp - 96) + 8)), null, *(*uintptr)(unsafe.Pointer((_yymsp - 64) + 8)), *(*int32)(unsafe.Pointer((_yymsp - 160) + 8)))
	goto _3

_162:
	*(*uintptr)(unsafe.Pointer((_yymsp - 64) + 8)) = *(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8))
	goto _3

_163:
	*(*uintptr)(unsafe.Pointer((_yymsp - 64) + 8)) = _1349sqlite3IdListAppend(tls, *(*uintptr)(unsafe.Pointer(_pParse)), *(*uintptr)(unsafe.Pointer((_yymsp - 64) + 8)), _yymsp+8)
	goto _3

_164:
	*(*uintptr)(unsafe.Pointer(_yymsp + 8)) = _1349sqlite3IdListAppend(tls, *(*uintptr)(unsafe.Pointer(_pParse)), null, _yymsp+8)
	goto _3

_165:
	_1350spanSet(tls, (_yymsp-64)+8, (_yymsp-64)+8, _yymsp+8)
	*(*uintptr)(unsafe.Pointer((_yymsp - 64) + 8)) = *(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8))
	goto _3

_166:
_167:
	_1317spanExpr(tls, _yymsp+8, _pParse, int32(59), *(*SToken)(unsafe.Pointer(_yymsp + 8)))
	goto _3

_168:
	_temp1 = _1335sqlite3ExprAlloc(tls, *(*uintptr)(unsafe.Pointer(_pParse)), int32(59), (_yymsp-64)+8, int32(1))
	_temp2 = _1335sqlite3ExprAlloc(tls, *(*uintptr)(unsafe.Pointer(_pParse)), int32(59), _yymsp+8, int32(1))
	_1350spanSet(tls, (_yymsp-64)+8, (_yymsp-64)+8, _yymsp+8)
	*(*uintptr)(unsafe.Pointer((_yymsp - 64) + 8)) = _1316sqlite3PExpr(tls, _pParse, int32(122), _temp1, _temp2)
	goto _3

_169:
	_5temp1 = _1335sqlite3ExprAlloc(tls, *(*uintptr)(unsafe.Pointer(_pParse)), int32(59), (_yymsp-128)+8, int32(1))
	_6temp2 = _1335sqlite3ExprAlloc(tls, *(*uintptr)(unsafe.Pointer(_pParse)), int32(59), (_yymsp-64)+8, int32(1))
	_temp3 = _1335sqlite3ExprAlloc(tls, *(*uintptr)(unsafe.Pointer(_pParse)), int32(59), _yymsp+8, int32(1))
	_temp4 = _1316sqlite3PExpr(tls, _pParse, int32(122), _6temp2, _temp3)
	_1350spanSet(tls, (_yymsp-128)+8, (_yymsp-128)+8, _yymsp+8)
	*(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8)) = _1316sqlite3PExpr(tls, _pParse, int32(122), _5temp1, _temp4)
	goto _3

_170:
_171:
	_1317spanExpr(tls, _yymsp+8, _pParse, int32(*(*uint8)(unsafe.Pointer(_yymsp + 2))), *(*SToken)(unsafe.Pointer(_yymsp + 8)))
	goto _3

_172:
	*(*uintptr)(unsafe.Pointer(uintptr(unsafe.Pointer(&_yylhsminor)))) = _1335sqlite3ExprAlloc(tls, *(*uintptr)(unsafe.Pointer(_pParse)), int32(134), _yymsp+8, int32(1))
	*(*uintptr)(unsafe.Pointer(uintptr(unsafe.Pointer(&_yylhsminor)) + 8)) = *(*uintptr)(unsafe.Pointer(_yymsp + 8))
	*(*uintptr)(unsafe.Pointer(uintptr(unsafe.Pointer(&_yylhsminor)) + 16)) = (*(*uintptr)(unsafe.Pointer(_yymsp + 8))) + uintptr(*(*uint32)(unsafe.Pointer(_yymsp + 8 + 8)))
	*(*SExprSpan)(unsafe.Pointer(_yymsp + 8)) = *(*SExprSpan)(unsafe.Pointer(uintptr(unsafe.Pointer(&_yylhsminor))))
	goto _3

_173:
	if int32(*(*int8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_yymsp + 8))))) == int32('#') && int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(uint8(*(*int8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_yymsp + 8))) + 1)))))))&int32(0x4) != 0 {
		goto _296
	}

	_n = *(*uint32)(unsafe.Pointer(_yymsp + 8 + 8))
	_1317spanExpr(tls, _yymsp+8, _pParse, int32(135), *(*SToken)(unsafe.Pointer(_yymsp + 8)))
	_1351sqlite3ExprAssignVarNumber(tls, _pParse, *(*uintptr)(unsafe.Pointer(_yymsp + 8)), _n)
	goto _297

_296:
	*(*SToken)(unsafe.Pointer(_t)) = *(*SToken)(unsafe.Pointer(_yymsp + 8))

	_1350spanSet(tls, _yymsp+8, _t, _t)
	if int32(*(*uint8)(unsafe.Pointer(_pParse + 30))) != int32(0) {
		goto _298
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+24093 /* "near \"%T\": syntax error" */, _t)
	*(*uintptr)(unsafe.Pointer(_yymsp + 8)) = null
	goto _299

_298:
	*(*uintptr)(unsafe.Pointer(_yymsp + 8)) = _1316sqlite3PExpr(tls, _pParse, int32(150), null, null)
	if (*(*uintptr)(unsafe.Pointer(_yymsp + 8))) == 0 {
		goto _300
	}

	_1004sqlite3GetInt32(tls, (*(*uintptr)(unsafe.Pointer(_t)))+1, (*(*uintptr)(unsafe.Pointer(_yymsp + 8)))+44)
_300:
_299:
_297:
	goto _3

_174:
	*(*uintptr)(unsafe.Pointer((_yymsp - 64) + 8)) = _1352sqlite3ExprAddCollateToken(tls, _pParse, *(*uintptr)(unsafe.Pointer((_yymsp - 64) + 8)), _yymsp+8, int32(1))
	*(*uintptr)(unsafe.Pointer((_yymsp - 64) + 8 + 16)) = (*(*uintptr)(unsafe.Pointer(_yymsp + 8))) + uintptr(*(*uint32)(unsafe.Pointer(_yymsp + 8 + 8)))
	goto _3

_175:
	_1350spanSet(tls, (_yymsp-160)+8, (_yymsp-160)+8, _yymsp+8)
	*(*uintptr)(unsafe.Pointer((_yymsp - 160) + 8)) = _1335sqlite3ExprAlloc(tls, *(*uintptr)(unsafe.Pointer(_pParse)), int32(36), (_yymsp-32)+8, int32(1))
	_1353sqlite3ExprAttachSubtrees(tls, *(*uintptr)(unsafe.Pointer(_pParse)), *(*uintptr)(unsafe.Pointer((_yymsp - 160) + 8)), *(*uintptr)(unsafe.Pointer((_yymsp - 96) + 8)), null)
	goto _3

_176:
	if (*(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8))) == 0 || (*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8))))) <= (*(*int32)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pParse))) + 124) + 24))) {
		goto _301
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+24117 /* "too many arguments on function %..." */, (_yymsp-128)+8)
_301:
	*(*uintptr)(unsafe.Pointer(uintptr(unsafe.Pointer(&_yylhsminor)))) = _1354sqlite3ExprFunction(tls, _pParse, *(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8)), (_yymsp-128)+8)
	_1350spanSet(tls, uintptr(unsafe.Pointer(&_yylhsminor)), (_yymsp-128)+8, _yymsp+8)
	if (*(*int32)(unsafe.Pointer((_yymsp - 64) + 8))) != int32(0x1) || (*(*uintptr)(unsafe.Pointer(uintptr(unsafe.Pointer(&_yylhsminor))))) == 0 {
		goto _302
	}

	{
		p := &(*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(uintptr(unsafe.Pointer(&_yylhsminor))))) + 4)))
		*p = uint32(uint32(*p) | uint32(0x10))
	}
_302:
	*(*SExprSpan)(unsafe.Pointer((_yymsp - 128) + 8)) = *(*SExprSpan)(unsafe.Pointer(uintptr(unsafe.Pointer(&_yylhsminor))))
	goto _3

_177:
	*(*uintptr)(unsafe.Pointer(uintptr(unsafe.Pointer(&_yylhsminor)))) = _1354sqlite3ExprFunction(tls, _pParse, null, (_yymsp-96)+8)
	_1350spanSet(tls, uintptr(unsafe.Pointer(&_yylhsminor)), (_yymsp-96)+8, _yymsp+8)
	*(*SExprSpan)(unsafe.Pointer((_yymsp - 96) + 8)) = *(*SExprSpan)(unsafe.Pointer(uintptr(unsafe.Pointer(&_yylhsminor))))
	goto _3

_178:
	*(*uintptr)(unsafe.Pointer(uintptr(unsafe.Pointer(&_yylhsminor)))) = _1354sqlite3ExprFunction(tls, _pParse, null, _yymsp+8)
	_1350spanSet(tls, uintptr(unsafe.Pointer(&_yylhsminor)), _yymsp+8, _yymsp+8)
	*(*SExprSpan)(unsafe.Pointer(_yymsp + 8)) = *(*SExprSpan)(unsafe.Pointer(uintptr(unsafe.Pointer(&_yylhsminor))))
	goto _3

_179:
	_pList = _1331sqlite3ExprListAppend(tls, _pParse, *(*uintptr)(unsafe.Pointer((_yymsp - 96) + 8)), *(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8)))
	*(*uintptr)(unsafe.Pointer(uintptr(unsafe.Pointer(&_yylhsminor)))) = _1316sqlite3PExpr(tls, _pParse, int32(151), null, null)
	if (*(*uintptr)(unsafe.Pointer(uintptr(unsafe.Pointer(&_yylhsminor))))) == 0 {
		goto _303
	}

	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(uintptr(unsafe.Pointer(&_yylhsminor))))) + 32)) = _pList
	_1350spanSet(tls, uintptr(unsafe.Pointer(&_yylhsminor)), (_yymsp-128)+8, _yymsp+8)
	goto _304

_303:
	_551sqlite3ExprListDelete(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _pList)
_304:
	*(*SExprSpan)(unsafe.Pointer((_yymsp - 128) + 8)) = *(*SExprSpan)(unsafe.Pointer(uintptr(unsafe.Pointer(&_yylhsminor))))
	goto _3

_180:
_181:
_182:
_183:
_184:
_185:
_186:
_187:
	_1355spanBinaryExpr(tls, _pParse, int32(*(*uint8)(unsafe.Pointer((_yymsp - 32) + 2))), (_yymsp-64)+8, _yymsp+8)
	goto _3

_188:
	*(*SToken)(unsafe.Pointer((_yymsp - 32) + 8)) = *(*SToken)(unsafe.Pointer(_yymsp + 8))
	{
		p := &(*(*uint32)(unsafe.Pointer((_yymsp - 32) + 8 + 8)))
		*p = uint32(uint32(*p) | uint32(0x80000000))
	}
	goto _3

_189:
	_bNot = int32((*(*uint32)(unsafe.Pointer((_yymsp - 32) + 8 + 8))) & uint32(0x80000000))
	{
		p := &(*(*uint32)(unsafe.Pointer((_yymsp - 32) + 8 + 8)))
		*p = uint32(uint32(*p) & uint32(0x7fffffff))
	}
	_7pList = _1331sqlite3ExprListAppend(tls, _pParse, null, *(*uintptr)(unsafe.Pointer(_yymsp + 8)))
	_7pList = _1331sqlite3ExprListAppend(tls, _pParse, _7pList, *(*uintptr)(unsafe.Pointer((_yymsp - 64) + 8)))
	*(*uintptr)(unsafe.Pointer((_yymsp - 64) + 8)) = _1354sqlite3ExprFunction(tls, _pParse, _7pList, (_yymsp-32)+8)
	_1356exprNot(tls, _pParse, _bNot, (_yymsp-64)+8)
	*(*uintptr)(unsafe.Pointer((_yymsp - 64) + 8 + 16)) = *(*uintptr)(unsafe.Pointer(_yymsp + 8 + 16))
	if (*(*uintptr)(unsafe.Pointer((_yymsp - 64) + 8))) == 0 {
		goto _305
	}

	{
		p := &(*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((_yymsp - 64) + 8))) + 4)))
		*p = uint32(uint32(*p) | uint32(0x80))
	}
_305:
	goto _3

_190:
	_9bNot = int32((*(*uint32)(unsafe.Pointer((_yymsp - 96) + 8 + 8))) & uint32(0x80000000))
	{
		p := &(*(*uint32)(unsafe.Pointer((_yymsp - 96) + 8 + 8)))
		*p = uint32(uint32(*p) & uint32(0x7fffffff))
	}
	_8pList = _1331sqlite3ExprListAppend(tls, _pParse, null, *(*uintptr)(unsafe.Pointer((_yymsp - 64) + 8)))
	_8pList = _1331sqlite3ExprListAppend(tls, _pParse, _8pList, *(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8)))
	_8pList = _1331sqlite3ExprListAppend(tls, _pParse, _8pList, *(*uintptr)(unsafe.Pointer(_yymsp + 8)))
	*(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8)) = _1354sqlite3ExprFunction(tls, _pParse, _8pList, (_yymsp-96)+8)
	_1356exprNot(tls, _pParse, _9bNot, (_yymsp-128)+8)
	*(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8 + 16)) = *(*uintptr)(unsafe.Pointer(_yymsp + 8 + 16))
	if (*(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8))) == 0 {
		goto _306
	}

	{
		p := &(*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8))) + 4)))
		*p = uint32(uint32(*p) | uint32(0x80))
	}
_306:
	goto _3

_191:
	_1357spanUnaryPostfix(tls, _pParse, int32(*(*uint8)(unsafe.Pointer(_yymsp + 2))), (_yymsp-32)+8, _yymsp+8)
	goto _3

_192:
	_1357spanUnaryPostfix(tls, _pParse, int32(51), (_yymsp-64)+8, _yymsp+8)
	goto _3

_193:
	_1355spanBinaryExpr(tls, _pParse, int32(45), (_yymsp-64)+8, _yymsp+8)
	_1358binaryToUnaryIfNull(tls, _pParse, *(*uintptr)(unsafe.Pointer(_yymsp + 8)), *(*uintptr)(unsafe.Pointer((_yymsp - 64) + 8)), int32(50))
	goto _3

_194:
	_1355spanBinaryExpr(tls, _pParse, int32(143), (_yymsp-96)+8, _yymsp+8)
	_1358binaryToUnaryIfNull(tls, _pParse, *(*uintptr)(unsafe.Pointer(_yymsp + 8)), *(*uintptr)(unsafe.Pointer((_yymsp - 96) + 8)), int32(51))
	goto _3

_195:
_196:
	_1359spanUnaryPrefix(tls, (_yymsp-32)+8, _pParse, int32(*(*uint8)(unsafe.Pointer((_yymsp - 32) + 2))), _yymsp+8, (_yymsp-32)+8)
	goto _3

_197:
	_1359spanUnaryPrefix(tls, (_yymsp-32)+8, _pParse, int32(148), _yymsp+8, (_yymsp-32)+8)
	goto _3

_198:
	_1359spanUnaryPrefix(tls, (_yymsp-32)+8, _pParse, int32(149), _yymsp+8, (_yymsp-32)+8)
	goto _3

_199:
_200:
	*(*int32)(unsafe.Pointer(_yymsp + 8)) = int32(0)
	goto _3

_201:
	_10pList = _1331sqlite3ExprListAppend(tls, _pParse, null, *(*uintptr)(unsafe.Pointer((_yymsp - 64) + 8)))
	_10pList = _1331sqlite3ExprListAppend(tls, _pParse, _10pList, *(*uintptr)(unsafe.Pointer(_yymsp + 8)))
	*(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8)) = _1316sqlite3PExpr(tls, _pParse, int32(48), *(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8)), null)
	if (*(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8))) == 0 {
		goto _307
	}

	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8))) + 32)) = _10pList
	goto _308

_307:
	_551sqlite3ExprListDelete(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _10pList)
_308:
	_1356exprNot(tls, _pParse, *(*int32)(unsafe.Pointer((_yymsp - 96) + 8)), (_yymsp-128)+8)
	*(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8 + 16)) = *(*uintptr)(unsafe.Pointer(_yymsp + 8 + 16))
	goto _3

_202:
	if (*(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8))) != 0 {
		goto _309
	}

	_777sqlite3ExprDelete(tls, *(*uintptr)(unsafe.Pointer(_pParse)), *(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8)))
	*(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8)) = _1335sqlite3ExprAlloc(tls, *(*uintptr)(unsafe.Pointer(_pParse)), int32(134), _1360sqlite3IntTokens+16*uintptr(*(*int32)(unsafe.Pointer((_yymsp - 96) + 8))), int32(1))
	goto _310

_309:
	if (*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8))))) != int32(1) {
		goto _311
	}

	_pRHS = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8))) + 8))
	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8))) + 8)) = null
	_551sqlite3ExprListDelete(tls, *(*uintptr)(unsafe.Pointer(_pParse)), *(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8)))
	if _pRHS == 0 {
		goto _313
	}

	{
		p := &(*(*uint32)(unsafe.Pointer(_pRHS + 4)))
		*p = uint32(uint32(*p) & uint32(4294967039))
	}
	{
		p := &(*(*uint32)(unsafe.Pointer(_pRHS + 4)))
		*p = uint32(uint32(*p) | uint32(0x200))
	}
_313:
	*(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8)) = _1316sqlite3PExpr(tls, _pParse, func() int32 {
		if (*(*int32)(unsafe.Pointer((_yymsp - 96) + 8))) != 0 {
			return int32(52)
		}
		return int32(53)
	}(), *(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8)), _pRHS)
	goto _312

_311:
	*(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8)) = _1316sqlite3PExpr(tls, _pParse, int32(49), *(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8)), null)
	if (*(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8))) == 0 {
		goto _314
	}

	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8))) + 32)) = *(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8))
	_1361sqlite3ExprSetHeightAndFlags(tls, _pParse, *(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8)))
	goto _315

_314:
	_551sqlite3ExprListDelete(tls, *(*uintptr)(unsafe.Pointer(_pParse)), *(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8)))
_315:
	_1356exprNot(tls, _pParse, *(*int32)(unsafe.Pointer((_yymsp - 96) + 8)), (_yymsp-128)+8)
_312:
_310:
	*(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8 + 16)) = (*(*uintptr)(unsafe.Pointer(_yymsp + 8))) + uintptr(*(*uint32)(unsafe.Pointer(_yymsp + 8 + 8)))
	goto _3

_203:
	_1350spanSet(tls, (_yymsp-64)+8, (_yymsp-64)+8, _yymsp+8)
	*(*uintptr)(unsafe.Pointer((_yymsp - 64) + 8)) = _1316sqlite3PExpr(tls, _pParse, int32(119), null, null)
	_1362sqlite3PExprAddSelect(tls, _pParse, *(*uintptr)(unsafe.Pointer((_yymsp - 64) + 8)), *(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8)))
	goto _3

_204:
	*(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8)) = _1316sqlite3PExpr(tls, _pParse, int32(49), *(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8)), null)
	_1362sqlite3PExprAddSelect(tls, _pParse, *(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8)), *(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8)))
	_1356exprNot(tls, _pParse, *(*int32)(unsafe.Pointer((_yymsp - 96) + 8)), (_yymsp-128)+8)
	*(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8 + 16)) = (*(*uintptr)(unsafe.Pointer(_yymsp + 8))) + uintptr(*(*uint32)(unsafe.Pointer(_yymsp + 8 + 8)))
	goto _3

_205:
	_pSrc = _1340sqlite3SrcListAppend(tls, *(*uintptr)(unsafe.Pointer(_pParse)), null, (_yymsp-64)+8, (_yymsp-32)+8)
	_pSelect = _1330sqlite3SelectNew(tls, _pParse, null, _pSrc, null, null, null, null, uint32(0), null, null)
	if (*(*uintptr)(unsafe.Pointer(_yymsp + 8))) == 0 {
		goto _316
	}

	_1338sqlite3SrcListFuncArgs(tls, _pParse, func() uintptr {
		if _pSelect != 0 {
			return _pSrc
		}
		return null
	}(), *(*uintptr)(unsafe.Pointer(_yymsp + 8)))
_316:
	*(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8)) = _1316sqlite3PExpr(tls, _pParse, int32(49), *(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8)), null)
	_1362sqlite3PExprAddSelect(tls, _pParse, *(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8)), _pSelect)
	_1356exprNot(tls, _pParse, *(*int32)(unsafe.Pointer((_yymsp - 96) + 8)), (_yymsp-128)+8)
	*(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8 + 16)) = func() uintptr {
		if (*(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8))) != 0 {
			return (*(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8))) + uintptr(*(*uint32)(unsafe.Pointer((_yymsp - 32) + 8 + 8)))
		}
		return (*(*uintptr)(unsafe.Pointer((_yymsp - 64) + 8))) + uintptr(*(*uint32)(unsafe.Pointer((_yymsp - 64) + 8 + 8)))
	}()
	goto _3

_206:
	_1350spanSet(tls, (_yymsp-96)+8, (_yymsp-96)+8, _yymsp+8)
	_11p = set4(&(*(*uintptr)(unsafe.Pointer((_yymsp - 96) + 8))), _1316sqlite3PExpr(tls, _pParse, int32(20), null, null))
	_1362sqlite3PExprAddSelect(tls, _pParse, _11p, *(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8)))
	goto _3

_207:
	_1350spanSet(tls, (_yymsp-128)+8, (_yymsp-128)+8, _yymsp+8)
	*(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8)) = _1316sqlite3PExpr(tls, _pParse, int32(136), *(*uintptr)(unsafe.Pointer((_yymsp - 96) + 8)), null)
	if (*(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8))) == 0 {
		goto _317
	}

	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8))) + 32)) = func() uintptr {
		if (*(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8))) != 0 {
			return _1331sqlite3ExprListAppend(tls, _pParse, *(*uintptr)(unsafe.Pointer((_yymsp - 64) + 8)), *(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8)))
		}
		return *(*uintptr)(unsafe.Pointer((_yymsp - 64) + 8))
	}()
	_1361sqlite3ExprSetHeightAndFlags(tls, _pParse, *(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8)))
	goto _318

_317:
	_551sqlite3ExprListDelete(tls, *(*uintptr)(unsafe.Pointer(_pParse)), *(*uintptr)(unsafe.Pointer((_yymsp - 64) + 8)))
	_777sqlite3ExprDelete(tls, *(*uintptr)(unsafe.Pointer(_pParse)), *(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8)))
_318:
	goto _3

_208:
	*(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8)) = _1331sqlite3ExprListAppend(tls, _pParse, *(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8)), *(*uintptr)(unsafe.Pointer((_yymsp - 64) + 8)))
	*(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8)) = _1331sqlite3ExprListAppend(tls, _pParse, *(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8)), *(*uintptr)(unsafe.Pointer(_yymsp + 8)))
	goto _3

_209:
	*(*uintptr)(unsafe.Pointer((_yymsp - 96) + 8)) = _1331sqlite3ExprListAppend(tls, _pParse, null, *(*uintptr)(unsafe.Pointer((_yymsp - 64) + 8)))
	*(*uintptr)(unsafe.Pointer((_yymsp - 96) + 8)) = _1331sqlite3ExprListAppend(tls, _pParse, *(*uintptr)(unsafe.Pointer((_yymsp - 96) + 8)), *(*uintptr)(unsafe.Pointer(_yymsp + 8)))
	goto _3

_210:
	*(*uintptr)(unsafe.Pointer(_yymsp + 8)) = *(*uintptr)(unsafe.Pointer(_yymsp + 8))
	goto _3

_211:
	*(*uintptr)(unsafe.Pointer((_yymsp - 64) + 8)) = _1331sqlite3ExprListAppend(tls, _pParse, *(*uintptr)(unsafe.Pointer((_yymsp - 64) + 8)), *(*uintptr)(unsafe.Pointer(_yymsp + 8)))
	goto _3

_212:
	*(*uintptr)(unsafe.Pointer(_yymsp + 8)) = _1331sqlite3ExprListAppend(tls, _pParse, null, *(*uintptr)(unsafe.Pointer(_yymsp + 8)))
	goto _3

_213:
_214:
	*(*uintptr)(unsafe.Pointer((_yymsp - 64) + 8)) = *(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8))
	goto _3

_215:
	_1320sqlite3CreateIndex(tls, _pParse, (_yymsp-224)+8, (_yymsp-192)+8, _1340sqlite3SrcListAppend(tls, *(*uintptr)(unsafe.Pointer(_pParse)), null, (_yymsp-128)+8, null), *(*uintptr)(unsafe.Pointer((_yymsp - 64) + 8)), *(*int32)(unsafe.Pointer((_yymsp - 320) + 8)), (_yymsp-352)+8, *(*uintptr)(unsafe.Pointer(_yymsp + 8)), int32(0), *(*int32)(unsafe.Pointer((_yymsp - 256) + 8)), uint8(0))
	goto _3

_216:
_217:
	*(*int32)(unsafe.Pointer(_yymsp + 8)) = int32(2)
	goto _3

_218:
	*(*int32)(unsafe.Pointer((_yymsp + 32) + 8)) = int32(0)
	goto _3

_219:
	*(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8)) = _1363parserAddExprIdListTerm(tls, _pParse, *(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8)), (_yymsp-64)+8, *(*int32)(unsafe.Pointer((_yymsp - 32) + 8)), *(*int32)(unsafe.Pointer(_yymsp + 8)))
	goto _3

_220:
	*(*uintptr)(unsafe.Pointer((_yymsp - 64) + 8)) = _1363parserAddExprIdListTerm(tls, _pParse, null, (_yymsp-64)+8, *(*int32)(unsafe.Pointer((_yymsp - 32) + 8)), *(*int32)(unsafe.Pointer(_yymsp + 8)))
	goto _3

_221:
	_1364sqlite3DropIndex(tls, _pParse, *(*uintptr)(unsafe.Pointer(_yymsp + 8)), *(*int32)(unsafe.Pointer((_yymsp - 32) + 8)))
	goto _3

_222:
	_1365sqlite3Vacuum(tls, _pParse, null)
	goto _3

_223:
	_1365sqlite3Vacuum(tls, _pParse, _yymsp+8)
	goto _3

_224:
	_1366sqlite3Pragma(tls, _pParse, (_yymsp-32)+8, _yymsp+8, null, int32(0))
	goto _3

_225:
	_1366sqlite3Pragma(tls, _pParse, (_yymsp-96)+8, (_yymsp-64)+8, _yymsp+8, int32(0))
	goto _3

_226:
	_1366sqlite3Pragma(tls, _pParse, (_yymsp-128)+8, (_yymsp-96)+8, (_yymsp-32)+8, int32(0))
	goto _3

_227:
	_1366sqlite3Pragma(tls, _pParse, (_yymsp-96)+8, (_yymsp-64)+8, _yymsp+8, int32(1))
	goto _3

_228:
	_1366sqlite3Pragma(tls, _pParse, (_yymsp-128)+8, (_yymsp-96)+8, (_yymsp-32)+8, int32(1))
	goto _3

_229:
	*(*uintptr)(unsafe.Pointer(_all)) = *(*uintptr)(unsafe.Pointer((_yymsp - 96) + 8))
	*(*uint32)(unsafe.Pointer(_all + 8)) = uint32(int32(int64((*(*uintptr)(unsafe.Pointer(_yymsp + 8)))-(*(*uintptr)(unsafe.Pointer((_yymsp - 96) + 8)))))) + (*(*uint32)(unsafe.Pointer(_yymsp + 8 + 8)))
	_1367sqlite3FinishTrigger(tls, _pParse, *(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8)), _all)
	goto _3

_230:
	_1368sqlite3BeginTrigger(tls, _pParse, (_yymsp-224)+8, (_yymsp-192)+8, *(*int32)(unsafe.Pointer((_yymsp - 160) + 8)), *(*int32)(unsafe.Pointer((_yymsp - 128) + 8)), *(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8 + 8)), *(*uintptr)(unsafe.Pointer((_yymsp - 64) + 8)), *(*uintptr)(unsafe.Pointer(_yymsp + 8)), *(*int32)(unsafe.Pointer((_yymsp - 320) + 8)), *(*int32)(unsafe.Pointer((_yymsp - 256) + 8)))
	*(*SToken)(unsafe.Pointer((_yymsp - 320) + 8)) = func() SToken {
		if (*(*uint32)(unsafe.Pointer((_yymsp - 192) + 8 + 8))) == uint32(0) {
			return *(*SToken)(unsafe.Pointer((_yymsp - 224) + 8))
		}
		return *(*SToken)(unsafe.Pointer((_yymsp - 192) + 8))
	}()
	goto _3

_231:
	*(*int32)(unsafe.Pointer(_yymsp + 8)) = int32(*(*uint8)(unsafe.Pointer(_yymsp + 2)))
	goto _3

_232:
	*(*int32)(unsafe.Pointer((_yymsp - 32) + 8)) = int32(64)
	goto _3

_233:
	*(*int32)(unsafe.Pointer((_yymsp + 32) + 8)) = int32(33)
	goto _3

_234:
_235:
	*(*int32)(unsafe.Pointer(_yymsp + 8)) = int32(*(*uint8)(unsafe.Pointer(_yymsp + 2)))
	*(*uintptr)(unsafe.Pointer(_yymsp + 8 + 8)) = null
	goto _3

_236:
	*(*int32)(unsafe.Pointer((_yymsp - 64) + 8)) = int32(110)
	*(*uintptr)(unsafe.Pointer((_yymsp - 64) + 8 + 8)) = *(*uintptr)(unsafe.Pointer(_yymsp + 8))
	goto _3

_237:
_238:
	*(*uintptr)(unsafe.Pointer((_yymsp + 32) + 8)) = null
	goto _3

_239:
_240:
	*(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8)) = *(*uintptr)(unsafe.Pointer(_yymsp + 8))
	goto _3

_241:
	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((_yymsp - 64) + 8))) + 64))) + 56)) = *(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8))
	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((_yymsp - 64) + 8))) + 64)) = *(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8))
	goto _3

_242:
	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8))) + 64)) = *(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8))
	goto _3

_243:
	*(*SToken)(unsafe.Pointer((_yymsp - 64) + 8)) = *(*SToken)(unsafe.Pointer(_yymsp + 8))
	_550sqlite3ErrorMsg(tls, _pParse, ts+24151 /* "qualified table names are not al..." */)
	goto _3

_244:
	_550sqlite3ErrorMsg(tls, _pParse, ts+24246 /* "the INDEXED BY clause is not all..." */)
	goto _3

_245:
	_550sqlite3ErrorMsg(tls, _pParse, ts+24330 /* "the NOT INDEXED clause is not al..." */)
	goto _3

_246:
	*(*uintptr)(unsafe.Pointer((_yymsp - 192) + 8)) = _1369sqlite3TriggerUpdateStep(tls, *(*uintptr)(unsafe.Pointer(_pParse)), (_yymsp-128)+8, *(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8)), *(*uintptr)(unsafe.Pointer(_yymsp + 8)), uint8(*(*int32)(unsafe.Pointer((_yymsp - 160) + 8))))
	goto _3

_247:
	*(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8)) = _1370sqlite3TriggerInsertStep(tls, *(*uintptr)(unsafe.Pointer(_pParse)), (_yymsp-64)+8, *(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8)), *(*uintptr)(unsafe.Pointer(_yymsp + 8)), uint8(*(*int32)(unsafe.Pointer((_yymsp - 128) + 8))))
	goto _3

_248:
	*(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8)) = _1371sqlite3TriggerDeleteStep(tls, *(*uintptr)(unsafe.Pointer(_pParse)), (_yymsp-64)+8, *(*uintptr)(unsafe.Pointer(_yymsp + 8)))
	goto _3

_249:
	*(*uintptr)(unsafe.Pointer(_yymsp + 8)) = _1372sqlite3TriggerSelectStep(tls, *(*uintptr)(unsafe.Pointer(_pParse)), *(*uintptr)(unsafe.Pointer(_yymsp + 8)))
	goto _3

_250:
	_1350spanSet(tls, (_yymsp-96)+8, (_yymsp-96)+8, _yymsp+8)
	*(*uintptr)(unsafe.Pointer((_yymsp - 96) + 8)) = _1316sqlite3PExpr(tls, _pParse, int32(70), null, null)
	if (*(*uintptr)(unsafe.Pointer((_yymsp - 96) + 8))) == 0 {
		goto _319
	}

	*(*int8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((_yymsp - 96) + 8))) + 1)) = int8(4)
_319:
	goto _3

_251:
	_1350spanSet(tls, (_yymsp-160)+8, (_yymsp-160)+8, _yymsp+8)
	*(*uintptr)(unsafe.Pointer((_yymsp - 160) + 8)) = _1335sqlite3ExprAlloc(tls, *(*uintptr)(unsafe.Pointer(_pParse)), int32(70), (_yymsp-32)+8, int32(1))
	if (*(*uintptr)(unsafe.Pointer((_yymsp - 160) + 8))) == 0 {
		goto _320
	}

	*(*int8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((_yymsp - 160) + 8))) + 1)) = int8(*(*int32)(unsafe.Pointer((_yymsp - 96) + 8)))
_320:
	goto _3

_252:
	*(*int32)(unsafe.Pointer(_yymsp + 8)) = int32(1)
	goto _3

_253:
	*(*int32)(unsafe.Pointer(_yymsp + 8)) = int32(3)
	goto _3

_254:
	_1373sqlite3DropTrigger(tls, _pParse, *(*uintptr)(unsafe.Pointer(_yymsp + 8)), *(*int32)(unsafe.Pointer((_yymsp - 32) + 8)))
	goto _3

_255:
	_1374sqlite3Attach(tls, _pParse, *(*uintptr)(unsafe.Pointer((_yymsp - 96) + 8)), *(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8)), *(*uintptr)(unsafe.Pointer(_yymsp + 8)))
	goto _3

_256:
	_1375sqlite3Detach(tls, _pParse, *(*uintptr)(unsafe.Pointer(_yymsp + 8)))
	goto _3

_257:
	_1376sqlite3Reindex(tls, _pParse, null, null)
	goto _3

_258:
	_1376sqlite3Reindex(tls, _pParse, (_yymsp-32)+8, _yymsp+8)
	goto _3

_259:
	_1377sqlite3Analyze(tls, _pParse, null, null)
	goto _3

_260:
	_1377sqlite3Analyze(tls, _pParse, (_yymsp-32)+8, _yymsp+8)
	goto _3

_261:
	_1378sqlite3AlterRenameTable(tls, _pParse, *(*uintptr)(unsafe.Pointer((_yymsp - 96) + 8)), _yymsp+8)
	goto _3

_262:
	*(*uint32)(unsafe.Pointer((_yymsp - 32) + 8 + 8)) = uint32(int32(int64((*(*uintptr)(unsafe.Pointer(_pParse + 448)))-(*(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8)))))) + (*(*uint32)(unsafe.Pointer((_pParse + 448) + 8)))
	_1379sqlite3AlterFinishAddColumn(tls, _pParse, (_yymsp-32)+8)
	goto _3

_263:
	_1312disableLookaside(tls, _pParse)
	_1380sqlite3AlterBeginAddColumn(tls, _pParse, *(*uintptr)(unsafe.Pointer(_yymsp + 8)))
	goto _3

_264:
	_1381sqlite3VtabFinishParse(tls, _pParse, null)
	goto _3

_265:
	_1381sqlite3VtabFinishParse(tls, _pParse, _yymsp+8)
	goto _3

_266:
	_1382sqlite3VtabBeginParse(tls, _pParse, (_yymsp-96)+8, (_yymsp-64)+8, _yymsp+8, *(*int32)(unsafe.Pointer((_yymsp - 128) + 8)))
	goto _3

_267:
	_1383sqlite3VtabArgInit(tls, _pParse)
	goto _3

_268:
_269:
_270:
	_1384sqlite3VtabArgExtend(tls, _pParse, _yymsp+8)
	goto _3

_271:
	*(*uintptr)(unsafe.Pointer((_yymsp + 32) + 8)) = null
	goto _3

_272:
	*(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8)) = *(*uintptr)(unsafe.Pointer(_yymsp + 8))
	goto _3

_273:
	*(*uintptr)(unsafe.Pointer((_yymsp - 64) + 8)) = *(*uintptr)(unsafe.Pointer(_yymsp + 8))
	goto _3

_274:
	*(*uintptr)(unsafe.Pointer((_yymsp - 160) + 8)) = _1385sqlite3WithAdd(tls, _pParse, null, (_yymsp-160)+8, *(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8)), *(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8)))
	goto _3

_275:
	*(*uintptr)(unsafe.Pointer((_yymsp - 224) + 8)) = _1385sqlite3WithAdd(tls, _pParse, *(*uintptr)(unsafe.Pointer((_yymsp - 224) + 8)), (_yymsp-160)+8, *(*uintptr)(unsafe.Pointer((_yymsp - 128) + 8)), *(*uintptr)(unsafe.Pointer((_yymsp - 32) + 8)))
	goto _3

_276:
	goto _3

_3:
	_yygoto = int32(*(*uint8)(unsafe.Pointer(_1306yyRuleInfo + 2*uintptr(_yyruleno))))
	_yysize = int32(*(*int8)(unsafe.Pointer((_1306yyRuleInfo + 2*uintptr(_yyruleno)) + 1)))
	_yyact = _1386yy_find_reduce_action(tls, int32(*(*uint16)(unsafe.Pointer(_yymsp + 32*uintptr(_yysize)))), uint8(_yygoto))

	if _yyact != int32(1323) {
		goto _321
	}

	*(*uintptr)(unsafe.Pointer(_yypParser)) += 32 * uintptr(_yysize)
	_1387yy_accept(tls, _yypParser)
	goto _322

_321:
	_yymsp += 32 * uintptr(_yysize+int32(1))
	*(*uintptr)(unsafe.Pointer(_yypParser)) = _yymsp
	*(*uint16)(unsafe.Pointer(_yymsp)) = uint16(_yyact)
	*(*uint8)(unsafe.Pointer(_yymsp + 2)) = uint8(_yygoto)
_322:
}

// _1180yy_syntax_error is defined at sqlite3.c:140459:13
func _1180yy_syntax_error(tls crt.TLS, _yypParser uintptr /* *TyyParser = SyyParser */, _yymajor int32, ayyminor SToken) {
	esc := crt.MustMalloc(16)
	var (
		_yyminor = esc   // *SToken
		_pParse  uintptr // *TParse = SParse
	)
	defer crt.Free(esc)
	*(*SToken)(unsafe.Pointer(_yyminor)) = ayyminor
	_pParse = *(*uintptr)(unsafe.Pointer(_yypParser + 8))

	_550sqlite3ErrorMsg(tls, _pParse, ts+24093 /* "near \"%T\": syntax error" */, _yyminor)
	*(*uintptr)(unsafe.Pointer(_yypParser + 8)) = _pParse
}

// _1181yy_destructor is defined at sqlite3.c:138456:13
func _1181yy_destructor(tls crt.TLS, _yypParser uintptr /* *TyyParser = SyyParser */, _yymajor uint8, _yypminor uintptr /* *TYYMINORTYPE = struct{X int64; _ [16]byte} */) {
	var _pParse uintptr // *TParse = SParse

	_pParse = *(*uintptr)(unsafe.Pointer(_yypParser + 8))
	switch int32(_yymajor) {
	case int32(163):
		goto _2
	case int32(194):
		goto _3
	case int32(195):
		goto _4
	case int32(206):
		goto _5
	case int32(172):
		goto _6
	case int32(173):
		goto _7
	case int32(177):
		goto _8
	case int32(186):
		goto _9
	case int32(187):
		goto _10
	case int32(199):
		goto _11
	case int32(202):
		goto _12
	case int32(204):
		goto _13
	case int32(207):
		goto _14
	case int32(208):
		goto _15
	case int32(209):
		goto _16
	case int32(218):
		goto _17
	case int32(224):
		goto _18
	case int32(226):
		goto _19
	case int32(193):
		goto _20
	case int32(200):
		goto _21
	case int32(211):
		goto _22
	case int32(212):
		goto _23
	case int32(196):
		goto _24
	case int32(250):
		goto _25
	case int32(201):
		goto _26
	case int32(203):
		goto _27
	case int32(215):
		goto _28
	case int32(225):
		goto _29
	case int32(227):
		goto _30
	case int32(236):
		goto _31
	case int32(241):
		goto _32
	case int32(216):
		goto _33
	case int32(217):
		goto _34
	case int32(220):
		goto _35
	case int32(232):
		goto _36
	case int32(237):
		goto _37
	case int32(234):
		goto _38
	default:
		goto _39
	}
_2:
_3:
_4:
_5:
	_1094sqlite3SelectDelete(tls, *(*uintptr)(unsafe.Pointer(_pParse)), *(*uintptr)(unsafe.Pointer(_yypminor)))
	goto _1

_6:
_7:
	_777sqlite3ExprDelete(tls, *(*uintptr)(unsafe.Pointer(_pParse)), *(*uintptr)(unsafe.Pointer(_yypminor)))
	goto _1

_8:
_9:
_10:
_11:
_12:
_13:
_14:
_15:
_16:
_17:
_18:
_19:
	_551sqlite3ExprListDelete(tls, *(*uintptr)(unsafe.Pointer(_pParse)), *(*uintptr)(unsafe.Pointer(_yypminor)))
	goto _1

_20:
_21:
_22:
_23:
	_1339sqlite3SrcListDelete(tls, *(*uintptr)(unsafe.Pointer(_pParse)), *(*uintptr)(unsafe.Pointer(_yypminor)))
	goto _1

_24:
_25:
	_936sqlite3WithDelete(tls, *(*uintptr)(unsafe.Pointer(_pParse)), *(*uintptr)(unsafe.Pointer(_yypminor)))
	goto _1

_26:
_27:
_28:
_29:
_30:
_31:
_32:
	_777sqlite3ExprDelete(tls, *(*uintptr)(unsafe.Pointer(_pParse)), *(*uintptr)(unsafe.Pointer(_yypminor)))
	goto _1

_33:
_34:
_35:
	_778sqlite3IdListDelete(tls, *(*uintptr)(unsafe.Pointer(_pParse)), *(*uintptr)(unsafe.Pointer(_yypminor)))
	goto _1

_36:
_37:
	_776sqlite3DeleteTriggerStep(tls, *(*uintptr)(unsafe.Pointer(_pParse)), *(*uintptr)(unsafe.Pointer(_yypminor)))
	goto _1

_38:
	_778sqlite3IdListDelete(tls, *(*uintptr)(unsafe.Pointer(_pParse)), *(*uintptr)(unsafe.Pointer(_yypminor + 8)))
	goto _1

_39:
	goto _1

_1:
}

// _1182yy_pop_parser_stack is defined at sqlite3.c:138558:13
func _1182yy_pop_parser_stack(tls crt.TLS, _pParser uintptr /* *TyyParser = SyyParser */) {
	var _yytos uintptr // *TyyStackEntry = SyyStackEntry

	_yytos = postinc192(&(*(*uintptr)(unsafe.Pointer(_pParser))))
	_1181yy_destructor(tls, _pParser, *(*uint8)(unsafe.Pointer(_yytos + 2)), _yytos+8)
}

type SCte struct {
	XzName   uintptr
	XpCols   uintptr
	XpSelect uintptr
	XzCteErr uintptr
}

// _1183compare2pow63 is defined at sqlite3.c:28670:12
func _1183compare2pow63(tls crt.TLS, _zNum uintptr /* *int8 */, _incr int32) (r int32) {
	var (
		_c     int32
		_i     int32
		_pow63 uintptr // *int8
	)
	_c = int32(0)
	_pow63 = ts + 24415 /* "922337203685477580" */
	_i = int32(0)
_1:
	if _c != int32(0) || _i >= int32(18) {
		goto _3
	}

	_c = (int32(*(*int8)(unsafe.Pointer(_zNum + uintptr(_i*_incr)))) - int32(*(*int8)(unsafe.Pointer(_pow63 + uintptr(_i))))) * int32(10)
	_i++
	goto _1

_3:
	if _c != int32(0) {
		goto _4
	}

	_c = int32(*(*int8)(unsafe.Pointer(_zNum + uintptr(int32(18)*_incr)))) - int32('8')
_4:
	return _c
}

// _1184isAllZero is defined at sqlite3.c:75957:12
func _1184isAllZero(tls crt.TLS, _z uintptr /* *int8 */, _n int32) (r int32) {
	var _i int32

	_i = int32(0)
_1:
	if _i >= _n {
		goto _3
	}

	if (*(*int8)(unsafe.Pointer(_z + uintptr(_i)))) == 0 {
		goto _4
	}

	return int32(0)

_4:
	_i++
	goto _1

_3:
	return int32(1)
}

// _1185sqlite3BtreeCursorRestore is defined at sqlite3.c:60539:20
func _1185sqlite3BtreeCursorRestore(tls crt.TLS, _pCur uintptr /* *TBtCursor = SBtCursor */, _pDifferentRow uintptr /* *int32 */) (r int32) {
	var _rc int32

	_rc = func() int32 {
		if int32(*(*uint8)(unsafe.Pointer(_pCur))) >= int32(3) {
			return _1193btreeRestoreCursorPosition(tls, _pCur)
		}
		return int32(0)
	}()
	if _rc == 0 {
		goto _1
	}

	*(*int32)(unsafe.Pointer(_pDifferentRow)) = int32(1)
	return _rc

_1:
	if int32(*(*uint8)(unsafe.Pointer(_pCur))) == int32(1) {
		goto _2
	}

	*(*int32)(unsafe.Pointer(_pDifferentRow)) = int32(1)
	goto _3

_2:
	*(*int32)(unsafe.Pointer(_pDifferentRow)) = int32(0)
_3:
	return int32(0)
}

// _1186btreeParseCell is defined at sqlite3.c:60890:13
func _1186btreeParseCell(tls crt.TLS, _pPage uintptr /* *TMemPage = SMemPage */, _iCell int32, _pInfo uintptr /* *TCellInfo = SCellInfo */) {
	fn45(*(*uintptr)(unsafe.Pointer(_pPage + 128)))(tls, _pPage, (*(*uintptr)(unsafe.Pointer(_pPage + 80)))+uintptr(int32(*(*uint16)(unsafe.Pointer(_pPage + 24)))&((int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage + 96))) + uintptr(int32(2)*_iCell))))<<(uint(8)%32))|int32(*(*uint8)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pPage + 96))) + uintptr(int32(2)*_iCell)) + 1))))), _pInfo)
}

// _1187getAndInitPage is defined at sqlite3.c:61733:12
func _1187getAndInitPage(tls crt.TLS, _pBt uintptr /* *TBtShared = SBtShared */, _pgno uint32, _ppPage uintptr /* **TMemPage = SMemPage */, _pCur uintptr /* *TBtCursor = SBtCursor */, _bReadOnly int32) (r int32) {
	esc := crt.MustMalloc(8)
	var (
		_rc      int32
		_pDbPage = esc // **TDbPage = SPgHdr
	)
	defer crt.Free(esc)

	if _pgno <= _332btreePagecount(tls, _pBt) {
		goto _1
	}

	_rc = _556sqlite3CorruptError(tls, int32(61748))
	goto _getAndInitPage_error

_1:
	_rc = _150sqlite3PagerGet(tls, *(*uintptr)(unsafe.Pointer(_pBt)), _pgno, _pDbPage, _bReadOnly)
	if _rc == 0 {
		goto _2
	}

	goto _getAndInitPage_error

_2:
	*(*uintptr)(unsafe.Pointer(_ppPage)) = _334sqlite3PagerGetExtra(tls, *(*uintptr)(unsafe.Pointer(_pDbPage)))
	if int32(*(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_ppPage))))) != int32(0) {
		goto _3
	}

	_605btreePageFromDbPage(tls, *(*uintptr)(unsafe.Pointer(_pDbPage)), _pgno, _pBt)
	_rc = _851btreeInitPage(tls, *(*uintptr)(unsafe.Pointer(_ppPage)))
	if _rc == int32(0) {
		goto _4
	}

	_919releasePage(tls, *(*uintptr)(unsafe.Pointer(_ppPage)))
	goto _getAndInitPage_error

_4:
_3:
	if _pCur == 0 || int32(*(*uint16)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_ppPage)) + 22))) >= int32(1) && int32(*(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_ppPage)) + 2))) == int32(*(*uint8)(unsafe.Pointer(_pCur + 89))) {
		goto _5
	}

	_rc = _556sqlite3CorruptError(tls, int32(61770))
	_919releasePage(tls, *(*uintptr)(unsafe.Pointer(_ppPage)))
	goto _getAndInitPage_error

_5:
	return int32(0)

	goto _getAndInitPage_error
_getAndInitPage_error:
	if _pCur == 0 {
		goto _6
	}

	(*(*int8)(unsafe.Pointer(_pCur + 88)))--
	*(*uintptr)(unsafe.Pointer(_pCur + 144)) = *(*uintptr)(unsafe.Pointer((_pCur + 152) + 8*uintptr(*(*int8)(unsafe.Pointer(_pCur + 88)))))
_6:
	return _rc
}

// _1188allocateTempSpace is defined at sqlite3.c:62236:13
func _1188allocateTempSpace(tls crt.TLS, _pBt uintptr /* *TBtShared = SBtShared */) {
	if (*(*uintptr)(unsafe.Pointer(_pBt + 128))) != 0 {
		goto _1
	}

	*(*uintptr)(unsafe.Pointer(_pBt + 128)) = _755sqlite3PageMalloc(tls, int32(*(*uint32)(unsafe.Pointer(_pBt + 48))))
	if (*(*uintptr)(unsafe.Pointer(_pBt + 128))) == 0 {
		goto _2
	}

	crt.Xmemset(tls, *(*uintptr)(unsafe.Pointer(_pBt + 128)), int32(0), uint64(8))
	*(*uintptr)(unsafe.Pointer(_pBt + 128)) += uintptr(4)
_2:
_1:
}

type SPmaReader struct {
	XiReadOff int64
	XiEof     int64
	XnAlloc   int32
	XnKey     int32
	XpFd      uintptr // *Ssqlite3_file
	XaAlloc   uintptr // *uint8
	XaKey     uintptr // *uint8
	XaBuffer  uintptr // *uint8
	XnBuffer  int32
	XaMap     uintptr // *uint8
	XpIncr    uintptr // *SIncrMerger
}

type SMergeEngine struct {
	XnTree  int32
	XpTask  uintptr // *SSortSubtask
	XaTree  uintptr // *int32
	XaReadr uintptr // *SPmaReader
}

type SSorterList struct {
	XpList   uintptr // *SSorterRecord
	XaMemory uintptr // *uint8
	XszPMA   int32
}

type SSQLiteThread struct {
	Xtid   uint64
	Xdone  int32
	XpOut  uintptr // uintptr
	XxTask uintptr // *func(crt.TLS, uintptr) uintptr
	XpIn   uintptr // uintptr
}

type SSorterFile struct {
	XpFd  uintptr // *Ssqlite3_file
	XiEof int64
}

// _1189vdbeRecordCompareInt is defined at sqlite3.c:76380:12
func _1189vdbeRecordCompareInt(tls crt.TLS, _nKey1 int32, _pKey1 uintptr /* *void */, _pPKey2 uintptr /* *TUnpackedRecord = SUnpackedRecord */) (r int32) {
	esc := crt.MustMalloc(24)
	var (
		_aKey        uintptr // *Tu8 = uint8
		_serial_type int32
		_res         int32
		_y           = esc      // *Tu32 = uint32
		_x           = esc + 16 // *Tu64 = Tsqlite_uint64 = uint64
		_v           int64
		_lhs         int64
	)
	defer crt.Free(esc)
	_aKey = _pKey1 + uintptr(int32(*(*uint8)(unsafe.Pointer(_pKey1)))&int32(0x3f))
	_serial_type = int32(*(*uint8)(unsafe.Pointer(_pKey1 + 1)))

	switch _serial_type {
	case int32(1):
		goto _2
	case int32(2):
		goto _3
	case int32(3):
		goto _4
	case int32(4):
		goto _5
	case int32(5):
		goto _6
	case int32(6):
		goto _7
	case int32(8):
		goto _8
	case int32(9):
		goto _9
	case int32(0):
		goto _10
	case int32(7):
		goto _11
	default:
		goto _12
	}
_2:
	_lhs = int64(int8(*(*uint8)(unsafe.Pointer(_aKey))))
	goto _1

_3:
	_lhs = int64((int32(256) * int32(int8(*(*uint8)(unsafe.Pointer(_aKey))))) | int32(*(*uint8)(unsafe.Pointer(_aKey + 1))))
	goto _1

_4:
	_lhs = int64(((int32(65536) * int32(int8(*(*uint8)(unsafe.Pointer(_aKey))))) | (int32(*(*uint8)(unsafe.Pointer(_aKey + 1))) << (uint(8) % 32))) | int32(*(*uint8)(unsafe.Pointer(_aKey + 2))))
	goto _1

_5:
	*(*uint32)(unsafe.Pointer(_y)) = (((uint32(*(*uint8)(unsafe.Pointer(_aKey))) << (uint(24) % 32)) | uint32(int32(*(*uint8)(unsafe.Pointer(_aKey + 1)))<<(uint(16)%32))) | uint32(int32(*(*uint8)(unsafe.Pointer(_aKey + 2)))<<(uint(8)%32))) | uint32(*(*uint8)(unsafe.Pointer(_aKey + 3)))
	_lhs = int64(*(*int32)(unsafe.Pointer(_y)))
	goto _1

_6:
	_lhs = int64((((uint32(*(*uint8)(unsafe.Pointer(_aKey + uintptr(2))))<<(uint(24)%32))|uint32(int32(*(*uint8)(unsafe.Pointer(_aKey + uintptr(2) + 1)))<<(uint(16)%32)))|uint32(int32(*(*uint8)(unsafe.Pointer(_aKey + uintptr(2) + 2)))<<(uint(8)%32)))|uint32(*(*uint8)(unsafe.Pointer(_aKey + uintptr(2) + 3)))) + (int64(4294967296) * int64((int32(256)*int32(int8(*(*uint8)(unsafe.Pointer(_aKey)))))|int32(*(*uint8)(unsafe.Pointer(_aKey + 1)))))
	goto _1

_7:
	*(*uint64)(unsafe.Pointer(_x)) = uint64((((uint32(*(*uint8)(unsafe.Pointer(_aKey))) << (uint(24) % 32)) | uint32(int32(*(*uint8)(unsafe.Pointer(_aKey + 1)))<<(uint(16)%32))) | uint32(int32(*(*uint8)(unsafe.Pointer(_aKey + 2)))<<(uint(8)%32))) | uint32(*(*uint8)(unsafe.Pointer(_aKey + 3))))
	*(*uint64)(unsafe.Pointer(_x)) = ((*(*uint64)(unsafe.Pointer(_x))) << (uint(32) % 64)) | uint64((((uint32(*(*uint8)(unsafe.Pointer(_aKey + uintptr(4))))<<(uint(24)%32))|uint32(int32(*(*uint8)(unsafe.Pointer(_aKey + uintptr(4) + 1)))<<(uint(16)%32)))|uint32(int32(*(*uint8)(unsafe.Pointer(_aKey + uintptr(4) + 2)))<<(uint(8)%32)))|uint32(*(*uint8)(unsafe.Pointer(_aKey + uintptr(4) + 3))))
	_lhs = *(*int64)(unsafe.Pointer(_x))
	goto _1

_8:
	_lhs = int64(0)
	goto _1

_9:
	_lhs = int64(1)
	goto _1

_10:
_11:
	return _986sqlite3VdbeRecordCompare(tls, _nKey1, _pKey1, _pPKey2)

_12:
	return _986sqlite3VdbeRecordCompare(tls, _nKey1, _pKey1, _pPKey2)

_1:
	_v = *(*int64)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pPKey2 + 8))))
	if _v <= _lhs {
		goto _13
	}

	_res = int32(*(*int8)(unsafe.Pointer(_pPKey2 + 20)))
	goto _14

_13:
	if _v >= _lhs {
		goto _15
	}

	_res = int32(*(*int8)(unsafe.Pointer(_pPKey2 + 21)))
	goto _16

_15:
	if int32(*(*uint16)(unsafe.Pointer(_pPKey2 + 16))) <= int32(1) {
		goto _17
	}

	_res = _1202sqlite3VdbeRecordCompareWithSkip(tls, _nKey1, _pKey1, _pPKey2, int32(1))
	goto _18

_17:
	_res = int32(*(*int8)(unsafe.Pointer(_pPKey2 + 18)))
	*(*uint8)(unsafe.Pointer(_pPKey2 + 22)) = uint8(1)
_18:
_16:
_14:
	return _res
}

// _1190vdbeRecordCompareString is defined at sqlite3.c:76474:12
func _1190vdbeRecordCompareString(tls crt.TLS, _nKey1 int32, _pKey1 uintptr /* *void */, _pPKey2 uintptr /* *TUnpackedRecord = SUnpackedRecord */) (r int32) {
	esc := crt.MustMalloc(4)
	var (
		_aKey1       uintptr // *Tu8 = uint8
		_serial_type = esc   // *int32
		_res         int32
		_nCmp        int32
		_nStr        int32
		_szHdr       int32
	)
	defer crt.Free(esc)
	_aKey1 = _pKey1

	if int32(*(*uint8)(unsafe.Pointer(_aKey1 + 1))) < int32(0x80) {
		*(*int32)(unsafe.Pointer(_serial_type)) = int32(uint32(*(*uint8)(unsafe.Pointer(_aKey1 + 1))))
	} else {
		_665sqlite3GetVarint32(tls, _aKey1+1, _serial_type)
	}
	if (*(*int32)(unsafe.Pointer(_serial_type))) >= int32(12) {
		goto _1
	}

	_res = int32(*(*int8)(unsafe.Pointer(_pPKey2 + 20)))
	goto _2

_1:
	if (*(*int32)(unsafe.Pointer(_serial_type)))&int32(0x1) != 0 {
		goto _3
	}

	_res = int32(*(*int8)(unsafe.Pointer(_pPKey2 + 21)))
	goto _4

_3:
	_szHdr = int32(*(*uint8)(unsafe.Pointer(_aKey1)))
	_nStr = ((*(*int32)(unsafe.Pointer(_serial_type))) - int32(12)) / int32(2)
	if (_szHdr + _nStr) <= _nKey1 {
		goto _5
	}

	*(*uint8)(unsafe.Pointer(_pPKey2 + 19)) = uint8(_556sqlite3CorruptError(tls, int32(76496)))
	return int32(0)

_5:
	_nCmp = func() int32 {
		if (*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pPKey2 + 8)) + 12))) < _nStr {
			return *(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pPKey2 + 8)) + 12))
		}
		return _nStr
	}()
	_res = crt.Xmemcmp(tls, _aKey1+uintptr(_szHdr), *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pPKey2 + 8)) + 16)), uint64(_nCmp))
	if _res != int32(0) {
		goto _6
	}

	_res = _nStr - (*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pPKey2 + 8)) + 12)))
	if _res != int32(0) {
		goto _8
	}

	if int32(*(*uint16)(unsafe.Pointer(_pPKey2 + 16))) <= int32(1) {
		goto _10
	}

	_res = _1202sqlite3VdbeRecordCompareWithSkip(tls, _nKey1, _pKey1, _pPKey2, int32(1))
	goto _11

_10:
	_res = int32(*(*int8)(unsafe.Pointer(_pPKey2 + 18)))
	*(*uint8)(unsafe.Pointer(_pPKey2 + 22)) = uint8(1)
_11:
	goto _9

_8:
	if _res <= int32(0) {
		goto _12
	}

	_res = int32(*(*int8)(unsafe.Pointer(_pPKey2 + 21)))
	goto _13

_12:
	_res = int32(*(*int8)(unsafe.Pointer(_pPKey2 + 20)))
_13:
_9:
	goto _7

_6:
	if _res <= int32(0) {
		goto _14
	}

	_res = int32(*(*int8)(unsafe.Pointer(_pPKey2 + 21)))
	goto _15

_14:
	_res = int32(*(*int8)(unsafe.Pointer(_pPKey2 + 20)))
_15:
_7:
_4:
_2:
	return _res
}

// _1191copyPayload is defined at sqlite3.c:64186:12
func _1191copyPayload(tls crt.TLS, _pPayload uintptr /* *void */, _pBuf uintptr /* *void */, _nByte int32, _eOp int32, _pDbPage uintptr /* *TDbPage = SPgHdr */) (r int32) {
	var _rc int32

	if _eOp == 0 {
		goto _1
	}

	_rc = _161sqlite3PagerWrite(tls, _pDbPage)
	if _rc == int32(0) {
		goto _3
	}

	return _rc

_3:
	crt.Xmemcpy(tls, _pPayload, _pBuf, uint64(_nByte))
	goto _2

_1:
	crt.Xmemcpy(tls, _pBuf, _pPayload, uint64(_nByte))
_2:
	return int32(0)
}

// _1192getOverflowPage is defined at sqlite3.c:64118:12
func _1192getOverflowPage(tls crt.TLS, _pBt uintptr /* *TBtShared = SBtShared */, _ovfl uint32, _ppPage uintptr /* **TMemPage = SMemPage */, _pPgnoNext uintptr /* *TPgno = Tu32 = uint32 */) (r int32) {
	esc := crt.MustMalloc(33)
	var (
		_next   uint32
		_pPage  = esc // **TMemPage = SMemPage
		_rc     int32
		_pgno   = esc + 16 // *TPgno = Tu32 = uint32
		_iGuess uint32
		_eType  = esc + 32 // *Tu8 = uint8
	)
	defer crt.Free(esc)
	_next = uint32(0)
	*(*uintptr)(unsafe.Pointer(_pPage)) = 0
	_rc = int32(0)

	if (*(*uint8)(unsafe.Pointer(_pBt + 33))) == 0 {
		goto _1
	}

	_iGuess = _ovfl + uint32(1)
_2:
	if _595ptrmapPageno(tls, _pBt, _iGuess) != _iGuess && _iGuess != (uint32(_149sqlite3PendingByte)/(*(*uint32)(unsafe.Pointer(_pBt + 48))))+uint32(1) {
		goto _3
	}

	_iGuess++
	goto _2

_3:
	if _iGuess > _332btreePagecount(tls, _pBt) {
		goto _4
	}

	_rc = _917ptrmapGet(tls, _pBt, _iGuess, _eType, _pgno)
	if _rc != int32(0) || int32(*(*uint8)(unsafe.Pointer(_eType))) != int32(4) || (*(*uint32)(unsafe.Pointer(_pgno))) != _ovfl {
		goto _5
	}

	_next = _iGuess
	_rc = int32(101)
_5:
_4:
_1:
	if _rc != int32(0) {
		goto _6
	}

	_rc = _363btreeGetPage(tls, _pBt, _ovfl, _pPage, func() int32 {
		if _ppPage == 0 {
			return int32(0x2)
		}
		return int32(0)
	}())

	if _rc != int32(0) {
		goto _7
	}

	_next = uint32(_328sqlite3Get4byte(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage))) + 80))))
_7:
_6:
	*(*uint32)(unsafe.Pointer(_pPgnoNext)) = _next
	if _ppPage == 0 {
		goto _8
	}

	*(*uintptr)(unsafe.Pointer(_ppPage)) = *(*uintptr)(unsafe.Pointer(_pPage))
	goto _9

_8:
	_919releasePage(tls, *(*uintptr)(unsafe.Pointer(_pPage)))
_9:
	return func() int32 {
		if _rc == int32(101) {
			return int32(0)
		}
		return _rc
	}()
}

// _1193btreeRestoreCursorPosition is defined at sqlite3.c:60472:12
func _1193btreeRestoreCursorPosition(tls crt.TLS, _pCur uintptr /* *TBtCursor = SBtCursor */) (r int32) {
	esc := crt.MustMalloc(4)
	var (
		_rc       int32
		_skipNext = esc // *int32
	)
	defer crt.Free(esc)

	if int32(*(*uint8)(unsafe.Pointer(_pCur))) != int32(4) {
		goto _1
	}

	return *(*int32)(unsafe.Pointer(_pCur + 84))

_1:
	*(*uint8)(unsafe.Pointer(_pCur)) = uint8(0)
	_rc = _978btreeMoveto(tls, _pCur, *(*uintptr)(unsafe.Pointer(_pCur + 72)), *(*int64)(unsafe.Pointer(_pCur + 64)), int32(0), _skipNext)
	if _rc != int32(0) {
		goto _2
	}

	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_pCur + 72)))
	*(*uintptr)(unsafe.Pointer(_pCur + 72)) = null

	{
		p := &(*(*int32)(unsafe.Pointer(_pCur + 84)))
		*p = int32(int32(*p) | (*(*int32)(unsafe.Pointer(_skipNext))))
	}
	if (*(*int32)(unsafe.Pointer(_pCur + 84))) == 0 || int32(*(*uint8)(unsafe.Pointer(_pCur))) != int32(1) {
		goto _3
	}

	*(*uint8)(unsafe.Pointer(_pCur)) = uint8(2)
_3:
_2:
	return _rc
}

// _1194btreePageLookup is defined at sqlite3.c:61697:16
func _1194btreePageLookup(tls crt.TLS, _pBt uintptr /* *TBtShared = SBtShared */, _pgno uint32) (r uintptr /* *TMemPage = SMemPage */) {
	var _pDbPage uintptr // *TDbPage = SPgHdr

	_pDbPage = _569sqlite3PagerLookup(tls, *(*uintptr)(unsafe.Pointer(_pBt)), _pgno)
	if _pDbPage == 0 {
		goto _1
	}

	return _605btreePageFromDbPage(tls, _pDbPage, _pgno, _pBt)

_1:
	return null
}

// _1195freePage2 is defined at sqlite3.c:65688:12
func _1195freePage2(tls crt.TLS, _pBt uintptr /* *TBtShared = SBtShared */, _pMemPage uintptr /* *TMemPage = SMemPage */, _iPage uint32) (r int32) {
	esc := crt.MustMalloc(36)
	var (
		_pTrunk = esc // **TMemPage = SMemPage
		_iTrunk uint32
		_pPage1 uintptr    // *TMemPage = SMemPage
		_pPage  = esc + 16 // **TMemPage = SMemPage
		_rc     = esc + 32 // *int32
		_nFree  int32
		_nLeaf  uint32
	)
	defer crt.Free(esc)
	*(*uintptr)(unsafe.Pointer(_pTrunk)) = 0
	_iTrunk = uint32(0)
	_pPage1 = *(*uintptr)(unsafe.Pointer(_pBt + 24))

	if _iPage >= uint32(2) {
		goto _1
	}

	return _556sqlite3CorruptError(tls, int32(65700))

_1:
	if _pMemPage == 0 {
		goto _2
	}

	*(*uintptr)(unsafe.Pointer(_pPage)) = _pMemPage
	_1388sqlite3PagerRef(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage))) + 112)))
	goto _3

_2:
	*(*uintptr)(unsafe.Pointer(_pPage)) = _1194btreePageLookup(tls, _pBt, _iPage)
_3:
	*(*int32)(unsafe.Pointer(_rc)) = _161sqlite3PagerWrite(tls, *(*uintptr)(unsafe.Pointer(_pPage1 + 112)))
	if (*(*int32)(unsafe.Pointer(_rc))) == 0 {
		goto _4
	}

	goto _freepage_out

_4:
	_nFree = int32(_328sqlite3Get4byte(tls, (*(*uintptr)(unsafe.Pointer(_pPage1 + 80)))+36))
	_329sqlite3Put4byte(tls, (*(*uintptr)(unsafe.Pointer(_pPage1 + 80)))+36, uint32(_nFree+int32(1)))
	if (int32(*(*uint16)(unsafe.Pointer(_pBt + 38))) & int32(0x4)) == 0 {
		goto _5
	}

	if ((*(*uintptr)(unsafe.Pointer(_pPage))) != 0 || set5(&(*(*int32)(unsafe.Pointer(_rc))), _363btreeGetPage(tls, _pBt, _iPage, _pPage, int32(0))) == int32(0)) && set5(&(*(*int32)(unsafe.Pointer(_rc))), _161sqlite3PagerWrite(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage))) + 112)))) == int32(0) {
		goto _6
	}

	goto _freepage_out

_6:
	crt.Xmemset(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage))) + 80)), int32(0), uint64(*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage))) + 72))) + 48))))
_5:
	if *(*uint8)(unsafe.Pointer(_pBt + 33)) == 0 {
		goto _7
	}

	_1165ptrmapPut(tls, _pBt, _iPage, uint8(2), uint32(0), _rc)
	if (*(*int32)(unsafe.Pointer(_rc))) == 0 {
		goto _8
	}

	goto _freepage_out

_8:
_7:
	if _nFree == int32(0) {
		goto _9
	}

	_iTrunk = uint32(_328sqlite3Get4byte(tls, (*(*uintptr)(unsafe.Pointer(_pPage1 + 80)))+32))
	*(*int32)(unsafe.Pointer(_rc)) = _363btreeGetPage(tls, _pBt, _iTrunk, _pTrunk, int32(0))
	if (*(*int32)(unsafe.Pointer(_rc))) == int32(0) {
		goto _10
	}

	goto _freepage_out

_10:
	_nLeaf = _328sqlite3Get4byte(tls, (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTrunk))) + 80)))+4)

	if _nLeaf <= ((*(*uint32)(unsafe.Pointer(_pBt + 52)) / uint32(4)) - uint32(2)) {
		goto _11
	}

	*(*int32)(unsafe.Pointer(_rc)) = _556sqlite3CorruptError(tls, int32(65753))
	goto _freepage_out

_11:
	if _nLeaf >= ((*(*uint32)(unsafe.Pointer(_pBt + 52)) / uint32(4)) - uint32(8)) {
		goto _12
	}

	*(*int32)(unsafe.Pointer(_rc)) = _161sqlite3PagerWrite(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTrunk))) + 112)))
	if (*(*int32)(unsafe.Pointer(_rc))) != int32(0) {
		goto _13
	}

	_329sqlite3Put4byte(tls, (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTrunk))) + 80)))+4, _nLeaf+uint32(1))
	_329sqlite3Put4byte(tls, (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTrunk))) + 80)))+uintptr(uint32(8)+(_nLeaf*uint32(4))), _iPage)
	if (*(*uintptr)(unsafe.Pointer(_pPage))) == 0 || (int32(*(*uint16)(unsafe.Pointer(_pBt + 38)))&int32(0x4)) != int32(0) {
		goto _14
	}

	_1389sqlite3PagerDontWrite(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage))) + 112)))
_14:
	*(*int32)(unsafe.Pointer(_rc)) = _1390btreeSetHasContent(tls, _pBt, _iPage)
_13:
	goto _freepage_out

_12:
_9:
	if (*(*uintptr)(unsafe.Pointer(_pPage))) != 0 || int32(0) == set5(&(*(*int32)(unsafe.Pointer(_rc))), _363btreeGetPage(tls, _pBt, _iPage, _pPage, int32(0))) {
		goto _15
	}

	goto _freepage_out

_15:
	*(*int32)(unsafe.Pointer(_rc)) = _161sqlite3PagerWrite(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage))) + 112)))
	if (*(*int32)(unsafe.Pointer(_rc))) == int32(0) {
		goto _16
	}

	goto _freepage_out

_16:
	_329sqlite3Put4byte(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage))) + 80)), _iTrunk)
	_329sqlite3Put4byte(tls, (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage))) + 80)))+4, uint32(0))
	_329sqlite3Put4byte(tls, (*(*uintptr)(unsafe.Pointer(_pPage1 + 80)))+32, _iPage)
	goto _freepage_out
_freepage_out:
	if (*(*uintptr)(unsafe.Pointer(_pPage))) == 0 {
		goto _17
	}

	*(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pPage)))) = uint8(0)
_17:
	_919releasePage(tls, *(*uintptr)(unsafe.Pointer(_pPage)))
	_919releasePage(tls, *(*uintptr)(unsafe.Pointer(_pTrunk)))
	return *(*int32)(unsafe.Pointer(_rc))
}

// _1196freeSpace is defined at sqlite3.c:61312:12
func _1196freeSpace(tls crt.TLS, _pPage uintptr /* *TMemPage = SMemPage */, _iStart uint16, _iSize uint16) (r int32) {
	var (
		_iPtr      uint16
		_iFreeBlk  uint16
		_hdr       uint8
		_nFrag     uint8
		_iOrigSize uint16
		_x         uint16
		_iEnd      uint32
		_data      uintptr // *uint8
		_iPtrEnd   int32
	)
	_nFrag = uint8(0)
	_iOrigSize = _iSize
	_iEnd = uint32(int32(_iStart) + int32(_iSize))
	_data = *(*uintptr)(unsafe.Pointer(_pPage + 80))

	_hdr = *(*uint8)(unsafe.Pointer(_pPage + 9))
	_iPtr = uint16(int32(_hdr) + int32(1))
	if int32(*(*uint8)(unsafe.Pointer(_data + uintptr(int32(_iPtr)+int32(1))))) != int32(0) || int32(*(*uint8)(unsafe.Pointer(_data + uintptr(_iPtr)))) != int32(0) {
		goto _1
	}

	_iFreeBlk = uint16(0)
	goto _2

_1:
_3:
	if int32(set60(&_iFreeBlk, uint16((int32(*(*uint8)(unsafe.Pointer(_data + uintptr(_iPtr))))<<(uint(8)%32))|int32(*(*uint8)(unsafe.Pointer((_data + uintptr(_iPtr)) + 1)))))) >= int32(_iStart) {
		goto _4
	}

	if int32(_iFreeBlk) >= (int32(_iPtr) + int32(4)) {
		goto _5
	}

	if int32(_iFreeBlk) != int32(0) {
		goto _6
	}

	goto _4

_6:
	return _556sqlite3CorruptError(tls, int32(61341))

_5:
	_iPtr = _iFreeBlk
	goto _3

_4:
	if uint32(_iFreeBlk) <= ((*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage + 72))) + 52))) - uint32(4)) {
		goto _7
	}

	return _556sqlite3CorruptError(tls, int32(61346))

_7:
	if _iFreeBlk == 0 || (_iEnd+uint32(3)) < uint32(_iFreeBlk) {
		goto _8
	}

	_nFrag = uint8(uint32(_iFreeBlk) - _iEnd)
	if _iEnd <= uint32(_iFreeBlk) {
		goto _9
	}

	return _556sqlite3CorruptError(tls, int32(61358))

_9:
	_iEnd = uint32(int32(_iFreeBlk) + ((int32(*(*uint8)(unsafe.Pointer(_data + uintptr(int32(_iFreeBlk)+int32(2))))) << (uint(8) % 32)) | int32(*(*uint8)(unsafe.Pointer((_data + uintptr(int32(_iFreeBlk)+int32(2))) + 1)))))
	if _iEnd <= (*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage + 72))) + 52))) {
		goto _10
	}

	return _556sqlite3CorruptError(tls, int32(61361))

_10:
	_iSize = uint16(_iEnd - uint32(_iStart))
	_iFreeBlk = uint16((int32(*(*uint8)(unsafe.Pointer(_data + uintptr(_iFreeBlk)))) << (uint(8) % 32)) | int32(*(*uint8)(unsafe.Pointer((_data + uintptr(_iFreeBlk)) + 1))))
_8:
	if int32(_iPtr) <= (int32(_hdr) + int32(1)) {
		goto _11
	}

	_iPtrEnd = int32(_iPtr) + ((int32(*(*uint8)(unsafe.Pointer(_data + uintptr(int32(_iPtr)+int32(2))))) << (uint(8) % 32)) | int32(*(*uint8)(unsafe.Pointer((_data + uintptr(int32(_iPtr)+int32(2))) + 1))))
	if (_iPtrEnd + int32(3)) < int32(_iStart) {
		goto _12
	}

	if _iPtrEnd <= int32(_iStart) {
		goto _13
	}

	return _556sqlite3CorruptError(tls, int32(61374))

_13:
	_nFrag = uint8(int32(_nFrag) + (int32(_iStart) - _iPtrEnd))
	_iSize = uint16(_iEnd - uint32(_iPtr))
	_iStart = _iPtr
_12:
_11:
	if int32(_nFrag) <= int32(*(*uint8)(unsafe.Pointer(_data + uintptr(int32(_hdr)+int32(7))))) {
		goto _14
	}

	return _556sqlite3CorruptError(tls, int32(61380))

_14:
	{
		p := &(*(*uint8)(unsafe.Pointer(_data + uintptr(int32(_hdr)+int32(7)))))
		*p = uint8(int32(*p) - int32(_nFrag))
	}
_2:
	_x = uint16((int32(*(*uint8)(unsafe.Pointer(_data + uintptr(int32(_hdr)+int32(5))))) << (uint(8) % 32)) | int32(*(*uint8)(unsafe.Pointer((_data + uintptr(int32(_hdr)+int32(5))) + 1))))
	if int32(_iStart) > int32(_x) {
		goto _15
	}

	if int32(_iStart) >= int32(_x) && int32(_iPtr) == (int32(_hdr)+int32(1)) {
		goto _17
	}

	return _556sqlite3CorruptError(tls, int32(61388))

_17:
	*(*uint8)(unsafe.Pointer(_data + uintptr(int32(_hdr)+int32(1)))) = uint8(int32(_iFreeBlk) >> (uint(8) % 32))
	*(*uint8)(unsafe.Pointer((_data + uintptr(int32(_hdr)+int32(1))) + 1)) = uint8(_iFreeBlk)
	*(*uint8)(unsafe.Pointer(_data + uintptr(int32(_hdr)+int32(5)))) = uint8(_iEnd >> (uint(8) % 32))
	*(*uint8)(unsafe.Pointer((_data + uintptr(int32(_hdr)+int32(5))) + 1)) = uint8(_iEnd)
	goto _16

_15:
	*(*uint8)(unsafe.Pointer(_data + uintptr(_iPtr))) = uint8(int32(_iStart) >> (uint(8) % 32))
	*(*uint8)(unsafe.Pointer((_data + uintptr(_iPtr)) + 1)) = uint8(_iStart)
_16:
	if (int32(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage + 72))) + 38))) & int32(0xc)) == 0 {
		goto _18
	}

	crt.Xmemset(tls, _data+uintptr(_iStart), int32(0), uint64(_iSize))
_18:
	*(*uint8)(unsafe.Pointer(_data + uintptr(_iStart))) = uint8(int32(_iFreeBlk) >> (uint(8) % 32))
	*(*uint8)(unsafe.Pointer((_data + uintptr(_iStart)) + 1)) = uint8(_iFreeBlk)
	*(*uint8)(unsafe.Pointer(_data + uintptr(int32(_iStart)+int32(2)))) = uint8(int32(_iSize) >> (uint(8) % 32))
	*(*uint8)(unsafe.Pointer((_data + uintptr(int32(_iStart)+int32(2))) + 1)) = uint8(_iSize)
	{
		p := &(*(*uint16)(unsafe.Pointer(_pPage + 20)))
		*p = uint16(int32(*p) + int32(_iOrigSize))
	}
	return int32(0)
}

// _1197allocateSpace is defined at sqlite3.c:61222:12
func _1197allocateSpace(tls crt.TLS, _pPage uintptr /* *TMemPage = SMemPage */, _nByte int32, _pIdx uintptr /* *int32 */) (r int32) {
	esc := crt.MustMalloc(4)
	var (
		_hdr    int32
		_data   uintptr // *Tu8 = uint8
		_top    int32
		_rc     = esc // *int32
		_gap    int32
		_pSpace uintptr // *Tu8 = uint8
	)
	defer crt.Free(esc)
	_hdr = int32(*(*uint8)(unsafe.Pointer(_pPage + 9)))
	_data = *(*uintptr)(unsafe.Pointer(_pPage + 80))
	*(*int32)(unsafe.Pointer(_rc)) = int32(0)

	_gap = int32(*(*uint16)(unsafe.Pointer(_pPage + 18))) + (int32(2) * int32(*(*uint16)(unsafe.Pointer(_pPage + 22))))

	_top = (int32(*(*uint8)(unsafe.Pointer(_data + uintptr(_hdr+int32(5))))) << (uint(8) % 32)) | int32(*(*uint8)(unsafe.Pointer((_data + uintptr(_hdr+int32(5))) + 1)))

	if _gap <= _top {
		goto _1
	}

	if _top != int32(0) || (*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage + 72))) + 52))) != uint32(65536) {
		goto _2
	}

	_top = int32(65536)
	goto _3

_2:
	return _556sqlite3CorruptError(tls, int32(61251))

_3:
_1:
	if (*(*uint8)(unsafe.Pointer(_data + uintptr(_hdr+int32(2))))) == 0 && (*(*uint8)(unsafe.Pointer(_data + uintptr(_hdr+int32(1))))) == 0 || (_gap+int32(2)) > _top {
		goto _4
	}

	_pSpace = _1391pageFindSlot(tls, _pPage, _nByte, _rc)
	if _pSpace == 0 {
		goto _5
	}

	*(*int32)(unsafe.Pointer(_pIdx)) = int32(int64(_pSpace - _data))
	return int32(0)

	goto _6

_5:
	if (*(*int32)(unsafe.Pointer(_rc))) == 0 {
		goto _7
	}

	return *(*int32)(unsafe.Pointer(_rc))

_7:
_6:
_4:
	if ((_gap + int32(2)) + _nByte) <= _top {
		goto _8
	}

	*(*int32)(unsafe.Pointer(_rc)) = _1392defragmentPage(tls, _pPage, func() int32 {
		if int32(4) < (int32(*(*uint16)(unsafe.Pointer(_pPage + 20))) - (int32(2) + _nByte)) {
			return int32(4)
		}
		return int32(*(*uint16)(unsafe.Pointer(_pPage + 20))) - (int32(2) + _nByte)
	}())
	if (*(*int32)(unsafe.Pointer(_rc))) == 0 {
		goto _9
	}

	return *(*int32)(unsafe.Pointer(_rc))

_9:
	_top = (((int32(*(*uint8)(unsafe.Pointer(_data + uintptr(_hdr+int32(5))))) << (uint(8) % 32)) | int32(*(*uint8)(unsafe.Pointer((_data + uintptr(_hdr+int32(5))) + 1))) - int32(1)) & int32(0xffff)) + int32(1)

_8:
	_top = int32(_top - _nByte)
	*(*uint8)(unsafe.Pointer(_data + uintptr(_hdr+int32(5)))) = uint8(_top >> (uint(8) % 32))
	*(*uint8)(unsafe.Pointer((_data + uintptr(_hdr+int32(5))) + 1)) = uint8(_top)

	*(*int32)(unsafe.Pointer(_pIdx)) = _top
	return int32(0)
}

// _1198ptrmapPutOvflPtr is defined at sqlite3.c:60995:13
func _1198ptrmapPutOvflPtr(tls crt.TLS, _pPage uintptr /* *TMemPage = SMemPage */, _pCell uintptr /* *Tu8 = uint8 */, _pRC uintptr /* *int32 */) {
	esc := crt.MustMalloc(24)
	var (
		_info = esc // *TCellInfo = SCellInfo
		_ovfl uint32
	)
	defer crt.Free(esc)
	if (*(*int32)(unsafe.Pointer(_pRC))) == 0 {
		goto _1
	}

	return

_1:
	fn45(*(*uintptr)(unsafe.Pointer(_pPage + 128)))(tls, _pPage, _pCell, _info)
	if uint32(*(*uint16)(unsafe.Pointer(_info + 20))) >= (*(*uint32)(unsafe.Pointer(_info + 16))) {
		goto _2
	}

	_ovfl = uint32(_328sqlite3Get4byte(tls, _pCell+uintptr(int32(*(*uint16)(unsafe.Pointer(_info + 22)))-int32(4))))
	_1165ptrmapPut(tls, *(*uintptr)(unsafe.Pointer(_pPage + 72)), _ovfl, uint8(3), *(*uint32)(unsafe.Pointer(_pPage + 4)), _pRC)
_2:
}

// _1199balance_deeper is defined at sqlite3.c:67593:12
func _1199balance_deeper(tls crt.TLS, _pRoot uintptr /* *TMemPage = SMemPage */, _ppChild uintptr /* **TMemPage = SMemPage */) (r int32) {
	esc := crt.MustMalloc(36)
	var (
		_rc        = esc      // *int32
		_pChild    = esc + 16 // **TMemPage = SMemPage
		_pgnoChild = esc + 32 // *TPgno = Tu32 = uint32
		_pBt       uintptr    // *TBtShared = SBtShared
	)
	defer crt.Free(esc)
	*(*uintptr)(unsafe.Pointer(_pChild)) = 0
	*(*uint32)(unsafe.Pointer(_pgnoChild)) = uint32(0)
	_pBt = *(*uintptr)(unsafe.Pointer(_pRoot + 72))

	*(*int32)(unsafe.Pointer(_rc)) = _161sqlite3PagerWrite(tls, *(*uintptr)(unsafe.Pointer(_pRoot + 112)))
	if (*(*int32)(unsafe.Pointer(_rc))) != int32(0) {
		goto _1
	}

	*(*int32)(unsafe.Pointer(_rc)) = _918allocateBtreePage(tls, _pBt, _pChild, _pgnoChild, *(*uint32)(unsafe.Pointer(_pRoot + 4)), uint8(0))
	_1393copyNodeContent(tls, _pRoot, *(*uintptr)(unsafe.Pointer(_pChild)), _rc)
	if *(*uint8)(unsafe.Pointer(_pBt + 33)) == 0 {
		goto _2
	}

	_1165ptrmapPut(tls, _pBt, *(*uint32)(unsafe.Pointer(_pgnoChild)), uint8(5), *(*uint32)(unsafe.Pointer(_pRoot + 4)), _rc)
_2:
_1:
	if (*(*int32)(unsafe.Pointer(_rc))) == 0 {
		goto _3
	}

	*(*uintptr)(unsafe.Pointer(_ppChild)) = null
	_919releasePage(tls, *(*uintptr)(unsafe.Pointer(_pChild)))
	return *(*int32)(unsafe.Pointer(_rc))

_3:
	crt.Xmemcpy(tls, (*(*uintptr)(unsafe.Pointer(_pChild)))+26, _pRoot+26, uint64(*(*uint8)(unsafe.Pointer(_pRoot + 12)))*uint64(2))
	crt.Xmemcpy(tls, (*(*uintptr)(unsafe.Pointer(_pChild)))+40, _pRoot+40, uint64(*(*uint8)(unsafe.Pointer(_pRoot + 12)))*uint64(8))
	*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pChild))) + 12)) = *(*uint8)(unsafe.Pointer(_pRoot + 12))
	_561zeroPage(tls, _pRoot, int32(*(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pChild))) + 80)))))&int32(-9))
	_329sqlite3Put4byte(tls, (*(*uintptr)(unsafe.Pointer(_pRoot + 80)))+uintptr(int32(*(*uint8)(unsafe.Pointer(_pRoot + 9)))+int32(8)), *(*uint32)(unsafe.Pointer(_pgnoChild)))
	*(*uintptr)(unsafe.Pointer(_ppChild)) = *(*uintptr)(unsafe.Pointer(_pChild))
	return int32(0)
}

// _1200balance_quick is defined at sqlite3.c:66607:12
func _1200balance_quick(tls crt.TLS, _pParent uintptr /* *TMemPage = SMemPage */, _pPage uintptr /* *TMemPage = SMemPage */, _pSpace uintptr /* *Tu8 = uint8 */) (r int32) {
	esc := crt.MustMalloc(66)
	var (
		_pBt     uintptr    // *TBtShared = SBtShared
		_pNew    = esc      // **TMemPage = SMemPage
		_rc      = esc + 16 // *int32
		_pgnoNew = esc + 32 // *TPgno = Tu32 = uint32
		_pOut    uintptr    // *Tu8 = uint8
		_pCell   = esc + 48 // **Tu8 = uint8
		_szCell  = esc + 64 // *Tu16 = uint16
		_pStop   uintptr    // *Tu8 = uint8
	)
	defer crt.Free(esc)
	_pBt = *(*uintptr)(unsafe.Pointer(_pPage + 72))

	if int32(*(*uint16)(unsafe.Pointer(_pPage + 22))) != int32(0) {
		goto _1
	}

	return _556sqlite3CorruptError(tls, int32(66618))

_1:
	*(*int32)(unsafe.Pointer(_rc)) = _918allocateBtreePage(tls, _pBt, _pNew, _pgnoNew, uint32(0), uint8(0))
	if (*(*int32)(unsafe.Pointer(_rc))) != int32(0) {
		goto _2
	}

	_pOut = _pSpace + 4
	*(*uintptr)(unsafe.Pointer(_pCell)) = *(*uintptr)(unsafe.Pointer(_pPage + 40))
	*(*uint16)(unsafe.Pointer(_szCell)) = fn144(*(*uintptr)(unsafe.Pointer(_pPage + 120)))(tls, _pPage, *(*uintptr)(unsafe.Pointer(_pCell)))

	_561zeroPage(tls, *(*uintptr)(unsafe.Pointer(_pNew)), int32(13))
	*(*int32)(unsafe.Pointer(_rc)) = _1394rebuildPage(tls, *(*uintptr)(unsafe.Pointer(_pNew)), int32(1), _pCell, _szCell)
	if *(*int32)(unsafe.Pointer(_rc)) == 0 {
		goto _3
	}

	return *(*int32)(unsafe.Pointer(_rc))

_3:
	*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pNew))) + 20)) = uint16((((*(*uint32)(unsafe.Pointer(_pBt + 52))) - uint32(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pNew))) + 18)))) - uint32(2)) - uint32(*(*uint16)(unsafe.Pointer(_szCell))))
	if *(*uint8)(unsafe.Pointer(_pBt + 33)) == 0 {
		goto _4
	}

	_1165ptrmapPut(tls, _pBt, *(*uint32)(unsafe.Pointer(_pgnoNew)), uint8(5), *(*uint32)(unsafe.Pointer(_pParent + 4)), _rc)
	if int32(*(*uint16)(unsafe.Pointer(_szCell))) <= int32(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pNew))) + 16))) {
		goto _5
	}

	_1198ptrmapPutOvflPtr(tls, *(*uintptr)(unsafe.Pointer(_pNew)), *(*uintptr)(unsafe.Pointer(_pCell)), _rc)
_5:
_4:
	*(*uintptr)(unsafe.Pointer(_pCell)) = (*(*uintptr)(unsafe.Pointer(_pPage + 80))) + uintptr(int32(*(*uint16)(unsafe.Pointer(_pPage + 24)))&((int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage + 96))) + uintptr(int32(2)*(int32(*(*uint16)(unsafe.Pointer(_pPage + 22)))-int32(1))))))<<(uint(8)%32))|int32(*(*uint8)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pPage + 96))) + uintptr(int32(2)*(int32(*(*uint16)(unsafe.Pointer(_pPage + 22)))-int32(1)))) + 1)))))
	_pStop = (*(*uintptr)(unsafe.Pointer(_pCell))) + 9
_6:
	if int32(*(*uint8)(unsafe.Pointer(postinc19(&(*(*uintptr)(unsafe.Pointer(_pCell)))))))&int32(0x80) == 0 || (*(*uintptr)(unsafe.Pointer(_pCell))) >= _pStop {
		goto _7
	}

	goto _6

_7:
	_pStop = (*(*uintptr)(unsafe.Pointer(_pCell))) + 9
_8:
	if int32(set23(&(*(*uint8)(unsafe.Pointer(postinc19(&_pOut)))), *(*uint8)(unsafe.Pointer(postinc19(&(*(*uintptr)(unsafe.Pointer(_pCell))))))))&int32(0x80) == 0 || (*(*uintptr)(unsafe.Pointer(_pCell))) >= _pStop {
		goto _9
	}

	goto _8

_9:
	if (*(*int32)(unsafe.Pointer(_rc))) != int32(0) {
		goto _10
	}

	_982insertCell(tls, _pParent, int32(*(*uint16)(unsafe.Pointer(_pParent + 22))), _pSpace, int32(int64(_pOut-_pSpace)), null, *(*uint32)(unsafe.Pointer(_pPage + 4)), _rc)
_10:
	_329sqlite3Put4byte(tls, (*(*uintptr)(unsafe.Pointer(_pParent + 80)))+uintptr(int32(*(*uint8)(unsafe.Pointer(_pParent + 9)))+int32(8)), *(*uint32)(unsafe.Pointer(_pgnoNew)))
	_919releasePage(tls, *(*uintptr)(unsafe.Pointer(_pNew)))
_2:
	return *(*int32)(unsafe.Pointer(_rc))
}

// _1201balance_nonroot is defined at sqlite3.c:66832:12
func _1201balance_nonroot(tls crt.TLS, _pParent uintptr /* *TMemPage = SMemPage */, _iParentIdx int32, _aOvflSpace uintptr /* *Tu8 = uint8 */, _isRoot int32, _bBulk int32) (r int32) {
	esc := crt.MustMalloc(392)
	var (
		_pBt            uintptr // *TBtShared = SBtShared
		_nMaxCells      int32
		_nNew           int32
		_nOld           int32
		_i              int32
		_j              int32
		_k              int32
		_nxDiv          int32
		_rc             = esc // *int32
		_leafCorrection uint16
		_leafData       int32
		_usableSpace    int32
		_pageFlags      int32
		_iSpace1        int32
		_iOvflSpace     int32
		_szScratch      int32
		_apOld          = esc + 16  // *[3]*SMemPage
		_apNew          = esc + 48  // *[5]*SMemPage
		_pRight         uintptr     // *Tu8 = uint8
		_apDiv          = esc + 96  // *[2]*uint8
		_cntNew         = esc + 112 // *[5]int32
		_cntOld         = esc + 144 // *[5]int32
		_szNew          = esc + 176 // *[5]int32
		_aSpace1        uintptr     // *Tu8 = uint8
		_pgno           = esc + 208 // *TPgno = Tu32 = uint32
		_abDone         = esc + 224 // *[5]uint8
		_aPgno          = esc + 240 // *[5]uint32
		_aPgOrder       = esc + 272 // *[5]uint32
		_aPgFlags       = esc + 304 // *[5]uint16
		_b              = esc + 320 // *TCellArray = SCellArray
		_iOff           int32
		_pOld           uintptr // *TMemPage = SMemPage
		_limit          int32
		_aData          uintptr // *Tu8 = uint8
		_maskPage       uint16
		_piCell         uintptr // *Tu8 = uint8
		_piEnd          uintptr // *Tu8 = uint8
		_sz             uint16
		_pTemp          uintptr // *Tu8 = uint8
		_p              uintptr // *TMemPage = SMemPage
		_1sz            int32
		_szRight        int32
		_szLeft         int32
		_r              int32
		_d              int32
		_pNew           = esc + 352 // **TMemPage = SMemPage
		_iBest          int32
		_2pOld          uintptr // *TMemPage = SMemPage
		_3pNew          uintptr // *TMemPage = SMemPage
		_aOld           uintptr // *Tu8 = uint8
		_cntOldNext     int32
		_usableSize     int32
		_iNew           int32
		_iOld           int32
		_pCell          uintptr // *Tu8 = uint8
		_4pOld          uintptr // *TMemPage = SMemPage
		_5pCell         uintptr // *Tu8 = uint8
		_6pTemp         uintptr // *Tu8 = uint8
		_7sz            int32
		_8pNew          uintptr     // *TMemPage = SMemPage
		_info           = esc + 368 // *TCellInfo = SCellInfo
		_iPg            int32
		_9iNew          int32
		_10iOld         int32
		_nNewCell       int32
		_key            uint32
	)
	defer crt.Free(esc)
	_nMaxCells = int32(0)
	_nNew = int32(0)
	*(*int32)(unsafe.Pointer(_rc)) = int32(0)
	_iSpace1 = int32(0)
	_iOvflSpace = int32(0)
	crt.Xmemset(tls, _abDone, int32(0), uint64(5))
	*(*int32)(unsafe.Pointer(_b)) = int32(0)
	*(*uintptr)(unsafe.Pointer(_b + 16)) = null
	_pBt = *(*uintptr)(unsafe.Pointer(_pParent + 72))

	if _aOvflSpace != 0 {
		goto _1
	}

	return int32(7)

_1:
	_i = int32(*(*uint8)(unsafe.Pointer(_pParent + 12))) + int32(*(*uint16)(unsafe.Pointer(_pParent + 22)))
	if _i >= int32(2) {
		goto _2
	}

	_nxDiv = int32(0)
	goto _3

_2:
	if _iParentIdx != int32(0) {
		goto _4
	}

	_nxDiv = int32(0)
	goto _5

_4:
	if _iParentIdx != _i {
		goto _6
	}

	_nxDiv = (_i - int32(2)) + _bBulk
	goto _7

_6:
	_nxDiv = _iParentIdx - int32(1)
_7:
_5:
	_i = int32(2) - _bBulk
_3:
	_nOld = _i + int32(1)
	if ((_i + _nxDiv) - int32(*(*uint8)(unsafe.Pointer(_pParent + 12)))) != int32(*(*uint16)(unsafe.Pointer(_pParent + 22))) {
		goto _8
	}

	_pRight = (*(*uintptr)(unsafe.Pointer(_pParent + 80))) + uintptr(int32(*(*uint8)(unsafe.Pointer(_pParent + 9)))+int32(8))
	goto _9

_8:
	_pRight = (*(*uintptr)(unsafe.Pointer(_pParent + 80))) + uintptr(int32(*(*uint16)(unsafe.Pointer(_pParent + 24)))&((int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pParent + 96))) + uintptr(int32(2)*((_i+_nxDiv)-int32(*(*uint8)(unsafe.Pointer(_pParent + 12))))))))<<(uint(8)%32))|int32(*(*uint8)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pParent + 96))) + uintptr(int32(2)*((_i+_nxDiv)-int32(*(*uint8)(unsafe.Pointer(_pParent + 12)))))) + 1)))))
_9:
	*(*uint32)(unsafe.Pointer(_pgno)) = uint32(_328sqlite3Get4byte(tls, _pRight))
_10:
	*(*int32)(unsafe.Pointer(_rc)) = _1187getAndInitPage(tls, _pBt, *(*uint32)(unsafe.Pointer(_pgno)), _apOld+8*uintptr(_i), null, int32(0))
	if (*(*int32)(unsafe.Pointer(_rc))) == 0 {
		goto _12
	}

	crt.Xmemset(tls, _apOld, int32(0), uint64(_i+int32(1))*uint64(8))
	goto _balance_cleanup

_12:
	_nMaxCells = int32(_nMaxCells + ((int32(1) + int32(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_apOld + 8*uintptr(_i)))) + 22)))) + int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_apOld + 8*uintptr(_i)))) + 12)))))
	if postinc24(&_i) != int32(0) {
		goto _13
	}

	goto _11

_13:
	if (*(*uint8)(unsafe.Pointer(_pParent + 12))) == 0 || (_i+_nxDiv) != int32(*(*uint16)(unsafe.Pointer(_pParent + 26))) {
		goto _14
	}

	*(*uintptr)(unsafe.Pointer(_apDiv + 8*uintptr(_i))) = *(*uintptr)(unsafe.Pointer(_pParent + 40))
	*(*uint32)(unsafe.Pointer(_pgno)) = uint32(_328sqlite3Get4byte(tls, *(*uintptr)(unsafe.Pointer(_apDiv + 8*uintptr(_i)))))
	*(*int32)(unsafe.Pointer(_szNew + 4*uintptr(_i))) = int32(fn144(*(*uintptr)(unsafe.Pointer(_pParent + 120)))(tls, _pParent, *(*uintptr)(unsafe.Pointer(_apDiv + 8*uintptr(_i)))))
	*(*uint8)(unsafe.Pointer(_pParent + 12)) = uint8(0)
	goto _15

_14:
	*(*uintptr)(unsafe.Pointer(_apDiv + 8*uintptr(_i))) = (*(*uintptr)(unsafe.Pointer(_pParent + 80))) + uintptr(int32(*(*uint16)(unsafe.Pointer(_pParent + 24)))&((int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pParent + 96))) + uintptr(int32(2)*((_i+_nxDiv)-int32(*(*uint8)(unsafe.Pointer(_pParent + 12))))))))<<(uint(8)%32))|int32(*(*uint8)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pParent + 96))) + uintptr(int32(2)*((_i+_nxDiv)-int32(*(*uint8)(unsafe.Pointer(_pParent + 12)))))) + 1)))))
	*(*uint32)(unsafe.Pointer(_pgno)) = uint32(_328sqlite3Get4byte(tls, *(*uintptr)(unsafe.Pointer(_apDiv + 8*uintptr(_i)))))
	*(*int32)(unsafe.Pointer(_szNew + 4*uintptr(_i))) = int32(fn144(*(*uintptr)(unsafe.Pointer(_pParent + 120)))(tls, _pParent, *(*uintptr)(unsafe.Pointer(_apDiv + 8*uintptr(_i)))))
	if (int32(*(*uint16)(unsafe.Pointer(_pBt + 38))) & int32(0xc)) == 0 {
		goto _16
	}

	_iOff = int32(int64(*(*uintptr)(unsafe.Pointer(_apDiv + 8*uintptr(_i))))) - int32(int64(*(*uintptr)(unsafe.Pointer(_pParent + 80))))
	if (_iOff + (*(*int32)(unsafe.Pointer(_szNew + 4*uintptr(_i))))) <= int32(*(*uint32)(unsafe.Pointer(_pBt + 52))) {
		goto _17
	}

	*(*int32)(unsafe.Pointer(_rc)) = _556sqlite3CorruptError(tls, int32(66959))
	crt.Xmemset(tls, _apOld, int32(0), uint64(_i+int32(1))*uint64(8))
	goto _balance_cleanup

	goto _18

_17:
	crt.Xmemcpy(tls, _aOvflSpace+uintptr(_iOff), *(*uintptr)(unsafe.Pointer(_apDiv + 8*uintptr(_i))), uint64(*(*int32)(unsafe.Pointer(_szNew + 4*uintptr(_i)))))
	*(*uintptr)(unsafe.Pointer(_apDiv + 8*uintptr(_i))) = _aOvflSpace + uintptr(int64((*(*uintptr)(unsafe.Pointer(_apDiv + 8*uintptr(_i))))-(*(*uintptr)(unsafe.Pointer(_pParent + 80)))))
_18:
_16:
	_981dropCell(tls, _pParent, (_i+_nxDiv)-int32(*(*uint8)(unsafe.Pointer(_pParent + 12))), *(*int32)(unsafe.Pointer(_szNew + 4*uintptr(_i))), _rc)
_15:
	goto _10

_11:
	_nMaxCells = (_nMaxCells + int32(3)) & int32(-4)
	_szScratch = int32(((uint64(_nMaxCells) * uint64(8)) + (uint64(_nMaxCells) * uint64(2))) + uint64(*(*uint32)(unsafe.Pointer(_pBt + 48))))

	*(*uintptr)(unsafe.Pointer(_b + 16)) = _177sqlite3DbMallocRaw(tls, null, uint64(_szScratch))
	if (*(*uintptr)(unsafe.Pointer(_b + 16))) != 0 {
		goto _19
	}

	*(*int32)(unsafe.Pointer(_rc)) = int32(7)
	goto _balance_cleanup

_19:
	*(*uintptr)(unsafe.Pointer(_b + 24)) = (*(*uintptr)(unsafe.Pointer(_b + 16))) + 8*uintptr(_nMaxCells)
	_aSpace1 = (*(*uintptr)(unsafe.Pointer(_b + 24))) + 2*uintptr(_nMaxCells)

	*(*uintptr)(unsafe.Pointer(_b + 8)) = *(*uintptr)(unsafe.Pointer(_apOld))
	_leafCorrection = uint16(int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_b + 8))) + 8))) * int32(4))
	_leafData = int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_b + 8))) + 3)))
	_i = int32(0)
_20:
	if _i >= _nOld {
		goto _22
	}

	_pOld = *(*uintptr)(unsafe.Pointer(_apOld + 8*uintptr(_i)))
	_limit = int32(*(*uint16)(unsafe.Pointer(_pOld + 22)))
	_aData = *(*uintptr)(unsafe.Pointer(_pOld + 80))
	_maskPage = *(*uint16)(unsafe.Pointer(_pOld + 24))
	_piCell = _aData + uintptr(*(*uint16)(unsafe.Pointer(_pOld + 18)))
	if int32(*(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pOld + 80))))) == int32(*(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_apOld))) + 80))))) {
		goto _23
	}

	*(*int32)(unsafe.Pointer(_rc)) = _556sqlite3CorruptError(tls, int32(67024))
	goto _balance_cleanup

_23:
	crt.Xmemset(tls, (*(*uintptr)(unsafe.Pointer(_b + 24)))+2*uintptr(*(*int32)(unsafe.Pointer(_b))), int32(0), uint64(2)*uint64(_limit+int32(*(*uint8)(unsafe.Pointer(_pOld + 12)))))
	if int32(*(*uint8)(unsafe.Pointer(_pOld + 12))) <= int32(0) {
		goto _24
	}

	_limit = int32(*(*uint16)(unsafe.Pointer(_pOld + 26)))
	_j = int32(0)
_25:
	if _j >= _limit {
		goto _27
	}

	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_b + 16))) + 8*uintptr(*(*int32)(unsafe.Pointer(_b))))) = _aData + uintptr(int32(_maskPage)&((int32(*(*uint8)(unsafe.Pointer(_piCell)))<<(uint(8)%32))|int32(*(*uint8)(unsafe.Pointer(_piCell + 1)))))
	_piCell += uintptr(2)
	(*(*int32)(unsafe.Pointer(_b)))++
	_j++
	goto _25

_27:
	_k = int32(0)
_28:
	if _k >= int32(*(*uint8)(unsafe.Pointer(_pOld + 12))) {
		goto _30
	}

	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_b + 16))) + 8*uintptr(*(*int32)(unsafe.Pointer(_b))))) = *(*uintptr)(unsafe.Pointer((_pOld + 40) + 8*uintptr(_k)))
	(*(*int32)(unsafe.Pointer(_b)))++
	_k++
	goto _28

_30:
_24:
	_piEnd = (_aData + uintptr(*(*uint16)(unsafe.Pointer(_pOld + 18)))) + uintptr(int32(2)*int32(*(*uint16)(unsafe.Pointer(_pOld + 22))))
_31:
	if _piCell >= _piEnd {
		goto _32
	}

	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_b + 16))) + 8*uintptr(*(*int32)(unsafe.Pointer(_b))))) = _aData + uintptr(int32(_maskPage)&((int32(*(*uint8)(unsafe.Pointer(_piCell)))<<(uint(8)%32))|int32(*(*uint8)(unsafe.Pointer(_piCell + 1)))))
	_piCell += uintptr(2)
	(*(*int32)(unsafe.Pointer(_b)))++
	goto _31

_32:
	*(*int32)(unsafe.Pointer(_cntOld + 4*uintptr(_i))) = *(*int32)(unsafe.Pointer(_b))
	if _i >= (_nOld-int32(1)) || _leafData != 0 {
		goto _33
	}

	_sz = uint16(*(*int32)(unsafe.Pointer(_szNew + 4*uintptr(_i))))

	*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_b + 24))) + 2*uintptr(*(*int32)(unsafe.Pointer(_b))))) = _sz
	_pTemp = _aSpace1 + uintptr(_iSpace1)
	_iSpace1 = int32(_iSpace1 + int32(_sz))

	crt.Xmemcpy(tls, _pTemp, *(*uintptr)(unsafe.Pointer(_apDiv + 8*uintptr(_i))), uint64(_sz))
	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_b + 16))) + 8*uintptr(*(*int32)(unsafe.Pointer(_b))))) = _pTemp + uintptr(_leafCorrection)

	*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_b + 24))) + 2*uintptr(*(*int32)(unsafe.Pointer(_b))))) = uint16(int32(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_b + 24))) + 2*uintptr(*(*int32)(unsafe.Pointer(_b)))))) - int32(_leafCorrection))
	if (*(*uint8)(unsafe.Pointer(_pOld + 8))) != 0 {
		goto _34
	}

	crt.Xmemcpy(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_b + 16))) + 8*uintptr(*(*int32)(unsafe.Pointer(_b))))), (*(*uintptr)(unsafe.Pointer(_pOld + 80)))+8, uint64(4))
	goto _35

_34:
_36:
	if int32(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_b + 24))) + 2*uintptr(*(*int32)(unsafe.Pointer(_b)))))) >= int32(4) {
		goto _37
	}

	*(*uint8)(unsafe.Pointer(_aSpace1 + uintptr(postinc7(&_iSpace1)))) = uint8(0x0)
	(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_b + 24))) + 2*uintptr(*(*int32)(unsafe.Pointer(_b))))))++
	goto _36

_37:
_35:
	(*(*int32)(unsafe.Pointer(_b)))++
_33:
	_i++
	goto _20

_22:
	_usableSpace = int32(((*(*uint32)(unsafe.Pointer(_pBt + 52))) - uint32(12)) + uint32(_leafCorrection))
	_i = int32(0)
_38:
	if _i >= _nOld {
		goto _40
	}

	_p = *(*uintptr)(unsafe.Pointer(_apOld + 8*uintptr(_i)))
	*(*int32)(unsafe.Pointer(_szNew + 4*uintptr(_i))) = _usableSpace - int32(*(*uint16)(unsafe.Pointer(_p + 20)))
	_j = int32(0)
_41:
	if _j >= int32(*(*uint8)(unsafe.Pointer(_p + 12))) {
		goto _43
	}

	{
		p := &(*(*int32)(unsafe.Pointer(_szNew + 4*uintptr(_i))))
		*p = int32(int32(*p) + (int32(2) + int32(fn144(*(*uintptr)(unsafe.Pointer(_p + 120)))(tls, _p, *(*uintptr)(unsafe.Pointer((_p + 40) + 8*uintptr(_j)))))))
	}
	_j++
	goto _41

_43:
	*(*int32)(unsafe.Pointer(_cntNew + 4*uintptr(_i))) = *(*int32)(unsafe.Pointer(_cntOld + 4*uintptr(_i)))
	_i++
	goto _38

_40:
	_k = _nOld
	_i = int32(0)
_44:
	if _i >= _k {
		goto _46
	}

_47:
	if (*(*int32)(unsafe.Pointer(_szNew + 4*uintptr(_i)))) <= _usableSpace {
		goto _48
	}

	if (_i + int32(1)) < _k {
		goto _49
	}

	_k = _i + int32(2)
	if _k <= int32(5) {
		goto _50
	}

	*(*int32)(unsafe.Pointer(_rc)) = _556sqlite3CorruptError(tls, int32(67133))
	goto _balance_cleanup

_50:
	*(*int32)(unsafe.Pointer(_szNew + 4*uintptr(_k-int32(1)))) = int32(0)
	*(*int32)(unsafe.Pointer(_cntNew + 4*uintptr(_k-int32(1)))) = *(*int32)(unsafe.Pointer(_b))
_49:
	_1sz = int32(2) + int32(_1395cachedCellSize(tls, _b, (*(*int32)(unsafe.Pointer(_cntNew + 4*uintptr(_i))))-int32(1)))
	{
		p := &(*(*int32)(unsafe.Pointer(_szNew + 4*uintptr(_i))))
		*p = int32(int32(*p) - _1sz)
	}
	if _leafData != 0 {
		goto _51
	}

	if (*(*int32)(unsafe.Pointer(_cntNew + 4*uintptr(_i)))) >= (*(*int32)(unsafe.Pointer(_b))) {
		goto _52
	}

	_1sz = int32(2) + int32(_1395cachedCellSize(tls, _b, *(*int32)(unsafe.Pointer(_cntNew + 4*uintptr(_i)))))
	goto _53

_52:
	_1sz = int32(0)
_53:
_51:
	{
		p := &(*(*int32)(unsafe.Pointer(_szNew + 4*uintptr(_i+int32(1)))))
		*p = int32(int32(*p) + _1sz)
	}
	(*(*int32)(unsafe.Pointer(_cntNew + 4*uintptr(_i))))--
	goto _47

_48:
_54:
	if (*(*int32)(unsafe.Pointer(_cntNew + 4*uintptr(_i)))) >= (*(*int32)(unsafe.Pointer(_b))) {
		goto _55
	}

	_1sz = int32(2) + int32(_1395cachedCellSize(tls, _b, *(*int32)(unsafe.Pointer(_cntNew + 4*uintptr(_i)))))
	if ((*(*int32)(unsafe.Pointer(_szNew + 4*uintptr(_i)))) + _1sz) <= _usableSpace {
		goto _56
	}

	goto _55

_56:
	{
		p := &(*(*int32)(unsafe.Pointer(_szNew + 4*uintptr(_i))))
		*p = int32(int32(*p) + _1sz)
	}
	(*(*int32)(unsafe.Pointer(_cntNew + 4*uintptr(_i))))++
	if _leafData != 0 {
		goto _57
	}

	if (*(*int32)(unsafe.Pointer(_cntNew + 4*uintptr(_i)))) >= (*(*int32)(unsafe.Pointer(_b))) {
		goto _58
	}

	_1sz = int32(2) + int32(_1395cachedCellSize(tls, _b, *(*int32)(unsafe.Pointer(_cntNew + 4*uintptr(_i)))))
	goto _59

_58:
	_1sz = int32(0)
_59:
_57:
	{
		p := &(*(*int32)(unsafe.Pointer(_szNew + 4*uintptr(_i+int32(1)))))
		*p = int32(int32(*p) - _1sz)
	}
	goto _54

_55:
	if (*(*int32)(unsafe.Pointer(_cntNew + 4*uintptr(_i)))) < (*(*int32)(unsafe.Pointer(_b))) {
		goto _60
	}

	_k = _i + int32(1)
	goto _61

_60:
	if (*(*int32)(unsafe.Pointer(_cntNew + 4*uintptr(_i)))) > func() int32 {
		if _i > int32(0) {
			return *(*int32)(unsafe.Pointer(_cntNew + 4*uintptr(_i-int32(1))))
		}
		return int32(0)
	}() {
		goto _62
	}

	*(*int32)(unsafe.Pointer(_rc)) = _556sqlite3CorruptError(tls, int32(67166))
	goto _balance_cleanup

_62:
_61:
	_i++
	goto _44

_46:
	_i = _k - int32(1)
_63:
	if _i <= int32(0) {
		goto _65
	}

	_szRight = *(*int32)(unsafe.Pointer(_szNew + 4*uintptr(_i)))
	_szLeft = *(*int32)(unsafe.Pointer(_szNew + 4*uintptr(_i-int32(1))))
	_r = (*(*int32)(unsafe.Pointer(_cntNew + 4*uintptr(_i-int32(1))))) - int32(1)
	_d = (_r + int32(1)) - _leafData
	_1395cachedCellSize(tls, _b, _d)
_66:
	_1395cachedCellSize(tls, _b, _r)
	if _szRight == int32(0) || _bBulk == 0 && ((_szRight+int32(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_b + 24))) + 2*uintptr(_d)))))+int32(2)) <= (_szLeft-(int32(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_b + 24))) + 2*uintptr(_r))))+func() int32 {
		if _i == (_k - int32(1)) {
			return int32(0)
		}
		return int32(2)
	}())) {
		goto _69
	}

	goto _68

_69:
	_szRight = int32(_szRight + (int32(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_b + 24))) + 2*uintptr(_d)))) + int32(2)))
	_szLeft = int32(_szLeft - (int32(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_b + 24))) + 2*uintptr(_r)))) + int32(2)))
	*(*int32)(unsafe.Pointer(_cntNew + 4*uintptr(_i-int32(1)))) = _r
	_r--
	_d--
	if _r >= int32(0) {
		goto _66
	}

	goto _68

_68:
	*(*int32)(unsafe.Pointer(_szNew + 4*uintptr(_i))) = _szRight
	*(*int32)(unsafe.Pointer(_szNew + 4*uintptr(_i-int32(1)))) = _szLeft
	if (*(*int32)(unsafe.Pointer(_cntNew + 4*uintptr(_i-int32(1))))) > func() int32 {
		if _i > int32(1) {
			return *(*int32)(unsafe.Pointer(_cntNew + 4*uintptr(_i-int32(2))))
		}
		return int32(0)
	}() {
		goto _70
	}

	*(*int32)(unsafe.Pointer(_rc)) = _556sqlite3CorruptError(tls, int32(67208))
	goto _balance_cleanup

_70:
	_i--
	goto _63

_65:
	_pageFlags = int32(*(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_apOld))) + 80)))))
	_i = int32(0)
_71:
	if _i >= _k {
		goto _73
	}

	if _i >= _nOld {
		goto _74
	}

	*(*uintptr)(unsafe.Pointer(_pNew)) = set4(&(*(*uintptr)(unsafe.Pointer(_apNew + 8*uintptr(_i)))), *(*uintptr)(unsafe.Pointer(_apOld + 8*uintptr(_i))))
	*(*uintptr)(unsafe.Pointer(_apOld + 8*uintptr(_i))) = null
	*(*int32)(unsafe.Pointer(_rc)) = _161sqlite3PagerWrite(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pNew))) + 112)))
	_nNew++
	if (*(*int32)(unsafe.Pointer(_rc))) == 0 {
		goto _76
	}

	goto _balance_cleanup

_76:
	goto _75

_74:
	*(*int32)(unsafe.Pointer(_rc)) = _918allocateBtreePage(tls, _pBt, _pNew, _pgno, func() uint32 {
		if _bBulk != 0 {
			return uint32(1)
		}
		return *(*uint32)(unsafe.Pointer(_pgno))
	}(), uint8(0))
	if (*(*int32)(unsafe.Pointer(_rc))) == 0 {
		goto _77
	}

	goto _balance_cleanup

_77:
	_561zeroPage(tls, *(*uintptr)(unsafe.Pointer(_pNew)), _pageFlags)
	*(*uintptr)(unsafe.Pointer(_apNew + 8*uintptr(_i))) = *(*uintptr)(unsafe.Pointer(_pNew))
	_nNew++
	*(*int32)(unsafe.Pointer(_cntOld + 4*uintptr(_i))) = *(*int32)(unsafe.Pointer(_b))
	if *(*uint8)(unsafe.Pointer(_pBt + 33)) == 0 {
		goto _78
	}

	_1165ptrmapPut(tls, _pBt, *(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pNew))) + 4)), uint8(5), *(*uint32)(unsafe.Pointer(_pParent + 4)), _rc)
	if (*(*int32)(unsafe.Pointer(_rc))) == int32(0) {
		goto _79
	}

	goto _balance_cleanup

_79:
_78:
_75:
	_i++
	goto _71

_73:
	_i = int32(0)
_80:
	if _i >= _nNew {
		goto _82
	}

	*(*uint32)(unsafe.Pointer(_aPgOrder + 4*uintptr(_i))) = set25(&(*(*uint32)(unsafe.Pointer(_aPgno + 4*uintptr(_i)))), *(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_apNew + 8*uintptr(_i)))) + 4)))
	*(*uint16)(unsafe.Pointer(_aPgFlags + 2*uintptr(_i))) = *(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_apNew + 8*uintptr(_i)))) + 112))) + 52))
	_j = int32(0)
_83:
	if _j >= _i {
		goto _85
	}

	if (*(*uint32)(unsafe.Pointer(_aPgno + 4*uintptr(_j)))) != (*(*uint32)(unsafe.Pointer(_aPgno + 4*uintptr(_i)))) {
		goto _86
	}

	*(*int32)(unsafe.Pointer(_rc)) = _556sqlite3CorruptError(tls, int32(67282))
	goto _balance_cleanup

_86:
	_j++
	goto _83

_85:
	_i++
	goto _80

_82:
	_i = int32(0)
_87:
	if _i >= _nNew {
		goto _89
	}

	_iBest = int32(0)
	_j = int32(1)
_90:
	if _j >= _nNew {
		goto _92
	}

	if (*(*uint32)(unsafe.Pointer(_aPgOrder + 4*uintptr(_j)))) >= (*(*uint32)(unsafe.Pointer(_aPgOrder + 4*uintptr(_iBest)))) {
		goto _93
	}

	_iBest = _j
_93:
	_j++
	goto _90

_92:
	*(*uint32)(unsafe.Pointer(_pgno)) = *(*uint32)(unsafe.Pointer(_aPgOrder + 4*uintptr(_iBest)))
	*(*uint32)(unsafe.Pointer(_aPgOrder + 4*uintptr(_iBest))) = uint32(0xffffffff)
	if _iBest == _i {
		goto _94
	}

	if _iBest <= _i {
		goto _95
	}

	_1396sqlite3PagerRekey(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_apNew + 8*uintptr(_iBest)))) + 112)), ((*(*uint32)(unsafe.Pointer(_pBt + 60)))+uint32(_iBest))+uint32(1), uint16(0))
_95:
	_1396sqlite3PagerRekey(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_apNew + 8*uintptr(_i)))) + 112)), *(*uint32)(unsafe.Pointer(_pgno)), *(*uint16)(unsafe.Pointer(_aPgFlags + 2*uintptr(_iBest))))
	*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_apNew + 8*uintptr(_i)))) + 4)) = *(*uint32)(unsafe.Pointer(_pgno))
_94:
	_i++
	goto _87

_89:
	_329sqlite3Put4byte(tls, _pRight, *(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_apNew + 8*uintptr(_nNew-int32(1))))) + 4)))
	if (_pageFlags&int32(0x8)) != int32(0) || _nOld == _nNew {
		goto _96
	}

	_2pOld = *(*uintptr)(unsafe.Pointer(func() uintptr {
		if _nNew > _nOld {
			return _apNew
		}
		return _apOld
	}() + 8*uintptr(_nOld-int32(1))))
	crt.Xmemcpy(tls, (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_apNew + 8*uintptr(_nNew-int32(1))))) + 80)))+8, (*(*uintptr)(unsafe.Pointer(_2pOld + 80)))+8, uint64(4))
_96:
	if *(*uint8)(unsafe.Pointer(_pBt + 33)) == 0 {
		goto _97
	}

	_3pNew = *(*uintptr)(unsafe.Pointer(_apNew))
	_aOld = *(*uintptr)(unsafe.Pointer(_3pNew + 80))
	_cntOldNext = int32(*(*uint16)(unsafe.Pointer(_3pNew + 22))) + int32(*(*uint8)(unsafe.Pointer(_3pNew + 12)))
	_usableSize = int32(*(*uint32)(unsafe.Pointer(_pBt + 52)))
	_iNew = int32(0)
	_iOld = int32(0)
	_i = int32(0)
_98:
	if _i >= (*(*int32)(unsafe.Pointer(_b))) {
		goto _100
	}

	_pCell = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_b + 16))) + 8*uintptr(_i)))
	if _i != _cntOldNext {
		goto _101
	}

	_4pOld = func() uintptr {
		if preinc2(&_iOld) < _nNew {
			return *(*uintptr)(unsafe.Pointer(_apNew + 8*uintptr(_iOld)))
		}
		return *(*uintptr)(unsafe.Pointer(_apOld + 8*uintptr(_iOld)))
	}()
	_cntOldNext = int32(_cntOldNext + ((int32(*(*uint16)(unsafe.Pointer(_4pOld + 22))) + int32(*(*uint8)(unsafe.Pointer(_4pOld + 12)))) + bool2int(_leafData == 0)))
	_aOld = *(*uintptr)(unsafe.Pointer(_4pOld + 80))
_101:
	if _i != (*(*int32)(unsafe.Pointer(_cntNew + 4*uintptr(_iNew)))) {
		goto _102
	}

	_3pNew = *(*uintptr)(unsafe.Pointer(_apNew + 8*uintptr(preinc2(&_iNew))))
	if _leafData != 0 {
		goto _103
	}

	goto _99

_103:
_102:
	if _iOld < _nNew && (*(*uint32)(unsafe.Pointer(_3pNew + 4))) == (*(*uint32)(unsafe.Pointer(_aPgno + 4*uintptr(_iOld)))) && (uint64(_pCell) >= uint64(_aOld) && uint64(_pCell) < uint64(_aOld+uintptr(_usableSize))) {
		goto _104
	}

	if _leafCorrection != 0 {
		goto _105
	}

	_1165ptrmapPut(tls, _pBt, _328sqlite3Get4byte(tls, _pCell), uint8(5), *(*uint32)(unsafe.Pointer(_3pNew + 4)), _rc)
_105:
	if int32(_1395cachedCellSize(tls, _b, _i)) <= int32(*(*uint16)(unsafe.Pointer(_3pNew + 16))) {
		goto _106
	}

	_1198ptrmapPutOvflPtr(tls, _3pNew, _pCell, _rc)
_106:
	if (*(*int32)(unsafe.Pointer(_rc))) == 0 {
		goto _107
	}

	goto _balance_cleanup

_107:
_104:
_99:
	_i++
	goto _98

_100:
_97:
	_i = int32(0)
_108:
	if _i >= (_nNew - int32(1)) {
		goto _110
	}

	_8pNew = *(*uintptr)(unsafe.Pointer(_apNew + 8*uintptr(_i)))
	_j = *(*int32)(unsafe.Pointer(_cntNew + 4*uintptr(_i)))

	_5pCell = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_b + 16))) + 8*uintptr(_j)))
	_7sz = int32(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_b + 24))) + 2*uintptr(_j)))) + int32(_leafCorrection)
	_6pTemp = _aOvflSpace + uintptr(_iOvflSpace)
	if (*(*uint8)(unsafe.Pointer(_8pNew + 8))) != 0 {
		goto _111
	}

	crt.Xmemcpy(tls, (*(*uintptr)(unsafe.Pointer(_8pNew + 80)))+8, _5pCell, uint64(4))
	goto _112

_111:
	if _leafData == 0 {
		goto _113
	}

	_j--
	fn45(*(*uintptr)(unsafe.Pointer(_8pNew + 128)))(tls, _8pNew, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_b + 16))) + 8*uintptr(_j))), _info)
	_5pCell = _6pTemp
	_7sz = int32(4) + _672sqlite3PutVarint(tls, _5pCell+4, uint64(*(*int64)(unsafe.Pointer(_info))))
	_6pTemp = null
	goto _114

_113:
	_5pCell -= uintptr(4)
	if int32(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_b + 24))) + 2*uintptr(_j)))) != int32(4) {
		goto _115
	}

	_7sz = int32(fn144(*(*uintptr)(unsafe.Pointer(_pParent + 120)))(tls, _pParent, _5pCell))
_115:
_114:
_112:
	_iOvflSpace = int32(_iOvflSpace + _7sz)

	_982insertCell(tls, _pParent, _nxDiv+_i, _5pCell, _7sz, _6pTemp, *(*uint32)(unsafe.Pointer(_8pNew + 4)), _rc)
	if (*(*int32)(unsafe.Pointer(_rc))) == int32(0) {
		goto _116
	}

	goto _balance_cleanup

_116:
	_i++
	goto _108

_110:
	_i = int32(1) - _nNew
_117:
	if _i >= _nNew {
		goto _119
	}

	_iPg = func() int32 {
		if _i < int32(0) {
			return -_i
		}
		return _i
	}()

	if (*(*uint8)(unsafe.Pointer(_abDone + uintptr(_iPg)))) == 0 {
		goto _120
	}

	goto _118

_120:
	if _i < int32(0) && (*(*int32)(unsafe.Pointer(_cntOld + 4*uintptr(_iPg-int32(1))))) < (*(*int32)(unsafe.Pointer(_cntNew + 4*uintptr(_iPg-int32(1))))) {
		goto _121
	}

	if _iPg != int32(0) {
		goto _122
	}

	_9iNew = set5(&_10iOld, int32(0))
	_nNewCell = *(*int32)(unsafe.Pointer(_cntNew))
	goto _123

_122:
	_10iOld = func() int32 {
		if _iPg < _nOld {
			return (*(*int32)(unsafe.Pointer(_cntOld + 4*uintptr(_iPg-int32(1))))) + bool2int(_leafData == 0)
		}
		return *(*int32)(unsafe.Pointer(_b))
	}()
	_9iNew = (*(*int32)(unsafe.Pointer(_cntNew + 4*uintptr(_iPg-int32(1))))) + bool2int(_leafData == 0)
	_nNewCell = (*(*int32)(unsafe.Pointer(_cntNew + 4*uintptr(_iPg)))) - _9iNew
_123:
	*(*int32)(unsafe.Pointer(_rc)) = _1397editPage(tls, *(*uintptr)(unsafe.Pointer(_apNew + 8*uintptr(_iPg))), _10iOld, _9iNew, _nNewCell, _b)
	if (*(*int32)(unsafe.Pointer(_rc))) == 0 {
		goto _124
	}

	goto _balance_cleanup

_124:
	(*(*uint8)(unsafe.Pointer(_abDone + uintptr(_iPg))))++
	*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_apNew + 8*uintptr(_iPg)))) + 20)) = uint16(_usableSpace - (*(*int32)(unsafe.Pointer(_szNew + 4*uintptr(_iPg)))))

_121:
_118:
	_i++
	goto _117

_119:
	if _isRoot == 0 || int32(*(*uint16)(unsafe.Pointer(_pParent + 22))) != int32(0) || int32(*(*uint8)(unsafe.Pointer(_pParent + 9))) > int32(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_apNew))) + 20))) {
		goto _125
	}

	*(*int32)(unsafe.Pointer(_rc)) = _1392defragmentPage(tls, *(*uintptr)(unsafe.Pointer(_apNew)), int32(-1))

	_1393copyNodeContent(tls, *(*uintptr)(unsafe.Pointer(_apNew)), _pParent, _rc)
	_1220freePage(tls, *(*uintptr)(unsafe.Pointer(_apNew)), _rc)
	goto _126

_125:
	if *(*uint8)(unsafe.Pointer(_pBt + 33)) == 0 || _leafCorrection != 0 {
		goto _127
	}

	_i = int32(0)
_128:
	if _i >= _nNew {
		goto _130
	}

	_key = _328sqlite3Get4byte(tls, (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_apNew + 8*uintptr(_i)))) + 80)))+8)
	_1165ptrmapPut(tls, _pBt, _key, uint8(5), *(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_apNew + 8*uintptr(_i)))) + 4)), _rc)
	_i++
	goto _128

_130:
_127:
_126:
	_i = _nNew
_131:
	if _i >= _nOld {
		goto _133
	}

	_1220freePage(tls, *(*uintptr)(unsafe.Pointer(_apOld + 8*uintptr(_i))), _rc)
	_i++
	goto _131

_133:
	goto _balance_cleanup
_balance_cleanup:
	_181sqlite3DbFree(tls, null, *(*uintptr)(unsafe.Pointer(_b + 16)))
	_i = int32(0)
_134:
	if _i >= _nOld {
		goto _136
	}

	_919releasePage(tls, *(*uintptr)(unsafe.Pointer(_apOld + 8*uintptr(_i))))
	_i++
	goto _134

_136:
	_i = int32(0)
_137:
	if _i >= _nNew {
		goto _139
	}

	_919releasePage(tls, *(*uintptr)(unsafe.Pointer(_apNew + 8*uintptr(_i))))
	_i++
	goto _137

_139:
	return *(*int32)(unsafe.Pointer(_rc))
}

// _1202sqlite3VdbeRecordCompareWithSkip is defined at sqlite3.c:76177:20
func _1202sqlite3VdbeRecordCompareWithSkip(tls crt.TLS, _nKey1 int32, _pKey1 uintptr /* *void */, _pPKey2 uintptr /* *TUnpackedRecord = SUnpackedRecord */, _bSkip int32) (r int32) {
	esc := crt.MustMalloc(100)
	var (
		_d1          uint32
		_i           int32
		_szHdr1      = esc // *Tu32 = uint32
		_idx1        uint32
		_rc          int32
		_pRhs        uintptr    // *TMem = Ssqlite3_value
		_pKeyInfo    uintptr    // *TKeyInfo = SKeyInfo
		_aKey1       uintptr    // *uint8
		_mem1        = esc + 16 // *TMem = Ssqlite3_value
		_s1          = esc + 80 // *Tu32 = uint32
		_serial_type = esc + 96 // *Tu32 = uint32
		_lhs         int64
		_rhs         int64
		_nCmp        int32
		_nStr        int32
		_1nCmp       int32
	)
	defer crt.Free(esc)
	_rc = int32(0)
	_pRhs = *(*uintptr)(unsafe.Pointer(_pPKey2 + 8))
	_pKeyInfo = *(*uintptr)(unsafe.Pointer(_pPKey2))
	_aKey1 = _pKey1
	if _bSkip == 0 {
		goto _1
	}

	_idx1 = uint32(int32(1) + int32(uint8(func() int32 {
		if int32(*(*uint8)(unsafe.Pointer(_aKey1 + 1))) < int32(0x80) {
			return func() int32 {
				*(*uint32)(unsafe.Pointer(_s1)) = uint32(*(*uint8)(unsafe.Pointer(_aKey1 + 1)))
				return int32(1)
			}()
		}
		return int32(_665sqlite3GetVarint32(tls, _aKey1+1, _s1))
	}())))
	*(*uint32)(unsafe.Pointer(_szHdr1)) = uint32(*(*uint8)(unsafe.Pointer(_aKey1)))
	_d1 = (*(*uint32)(unsafe.Pointer(_szHdr1))) + _668sqlite3VdbeSerialTypeLen(tls, *(*uint32)(unsafe.Pointer(_s1)))
	_i = int32(1)
	_pRhs += 56
	goto _2

_1:
	_idx1 = uint32(uint8(func() int32 {
		if int32(*(*uint8)(unsafe.Pointer(_aKey1))) < int32(0x80) {
			return func() int32 {
				*(*uint32)(unsafe.Pointer(_szHdr1)) = uint32(*(*uint8)(unsafe.Pointer(_aKey1)))
				return int32(1)
			}()
		}
		return int32(_665sqlite3GetVarint32(tls, _aKey1, _szHdr1))
	}()))
	_d1 = *(*uint32)(unsafe.Pointer(_szHdr1))
	if _d1 <= uint32(_nKey1) {
		goto _3
	}

	*(*uint8)(unsafe.Pointer(_pPKey2 + 19)) = uint8(_556sqlite3CorruptError(tls, int32(76206)))
	return int32(0)

_3:
	_i = int32(0)
_2:
_4:
	if (int32(*(*uint16)(unsafe.Pointer(_pRhs + 8))) & int32(0x4)) == 0 {
		goto _7
	}

	*(*uint32)(unsafe.Pointer(_serial_type)) = uint32(*(*uint8)(unsafe.Pointer(_aKey1 + uintptr(_idx1))))
	if (*(*uint32)(unsafe.Pointer(_serial_type))) < uint32(10) {
		goto _9
	}

	_rc = int32(1)
	goto _10

_9:
	if (*(*uint32)(unsafe.Pointer(_serial_type))) != uint32(0) {
		goto _11
	}

	_rc = int32(-1)
	goto _12

_11:
	if (*(*uint32)(unsafe.Pointer(_serial_type))) != uint32(7) {
		goto _13
	}

	_669sqlite3VdbeSerialGet(tls, _aKey1+uintptr(_d1), *(*uint32)(unsafe.Pointer(_serial_type)), _mem1)
	_rc = -_948sqlite3IntFloatCompare(tls, *(*int64)(unsafe.Pointer(_pRhs)), *(*float64)(unsafe.Pointer(_mem1)))
	goto _14

_13:
	_lhs = _1398vdbeRecordDecodeInt(tls, *(*uint32)(unsafe.Pointer(_serial_type)), _aKey1+uintptr(_d1))
	_rhs = *(*int64)(unsafe.Pointer(_pRhs))
	if _lhs >= _rhs {
		goto _15
	}

	_rc = int32(-1)
	goto _16

_15:
	if _lhs <= _rhs {
		goto _17
	}

	_rc = int32(1)
_17:
_16:
_14:
_12:
_10:
	goto _8

_7:
	if (int32(*(*uint16)(unsafe.Pointer(_pRhs + 8))) & int32(0x8)) == 0 {
		goto _18
	}

	*(*uint32)(unsafe.Pointer(_serial_type)) = uint32(*(*uint8)(unsafe.Pointer(_aKey1 + uintptr(_idx1))))
	if (*(*uint32)(unsafe.Pointer(_serial_type))) < uint32(10) {
		goto _20
	}

	_rc = int32(1)
	goto _21

_20:
	if (*(*uint32)(unsafe.Pointer(_serial_type))) != uint32(0) {
		goto _22
	}

	_rc = int32(-1)
	goto _23

_22:
	_669sqlite3VdbeSerialGet(tls, _aKey1+uintptr(_d1), *(*uint32)(unsafe.Pointer(_serial_type)), _mem1)
	if (*(*uint32)(unsafe.Pointer(_serial_type))) != uint32(7) {
		goto _24
	}

	if (*(*float64)(unsafe.Pointer(_mem1))) >= (*(*float64)(unsafe.Pointer(_pRhs))) {
		goto _26
	}

	_rc = int32(-1)
	goto _27

_26:
	if (*(*float64)(unsafe.Pointer(_mem1))) <= (*(*float64)(unsafe.Pointer(_pRhs))) {
		goto _28
	}

	_rc = int32(1)
_28:
_27:
	goto _25

_24:
	_rc = _948sqlite3IntFloatCompare(tls, *(*int64)(unsafe.Pointer(_mem1)), *(*float64)(unsafe.Pointer(_pRhs)))
_25:
_23:
_21:
	goto _19

_18:
	if (int32(*(*uint16)(unsafe.Pointer(_pRhs + 8))) & int32(0x2)) == 0 {
		goto _29
	}

	if int32(*(*uint8)(unsafe.Pointer(_aKey1 + uintptr(_idx1)))) < int32(0x80) {
		*(*uint32)(unsafe.Pointer(_serial_type)) = uint32(*(*uint8)(unsafe.Pointer(_aKey1 + uintptr(_idx1))))
	} else {
		_665sqlite3GetVarint32(tls, _aKey1+uintptr(_idx1), _serial_type)
	}
	if (*(*uint32)(unsafe.Pointer(_serial_type))) >= uint32(12) {
		goto _31
	}

	_rc = int32(-1)
	goto _32

_31:
	if (*(*uint32)(unsafe.Pointer(_serial_type)))&uint32(0x1) != 0 {
		goto _33
	}

	_rc = int32(1)
	goto _34

_33:
	*(*int32)(unsafe.Pointer(_mem1 + 12)) = int32(((*(*uint32)(unsafe.Pointer(_serial_type))) - uint32(12)) / uint32(2))
	if (_d1 + uint32(*(*int32)(unsafe.Pointer(_mem1 + 12)))) <= uint32(_nKey1) {
		goto _35
	}

	*(*uint8)(unsafe.Pointer(_pPKey2 + 19)) = uint8(_556sqlite3CorruptError(tls, int32(76281)))
	return int32(0)

	goto _36

_35:
	if (*(*uintptr)(unsafe.Pointer((_pKeyInfo + 32) + 8*uintptr(_i)))) == 0 {
		goto _37
	}

	*(*uint8)(unsafe.Pointer(_mem1 + 10)) = *(*uint8)(unsafe.Pointer(_pKeyInfo + 4))
	*(*uintptr)(unsafe.Pointer(_mem1 + 40)) = *(*uintptr)(unsafe.Pointer(_pKeyInfo + 16))
	*(*uint16)(unsafe.Pointer(_mem1 + 8)) = uint16(0x2)
	*(*uintptr)(unsafe.Pointer(_mem1 + 16)) = _aKey1 + uintptr(_d1)
	_rc = _949vdbeCompareMemString(tls, _mem1, _pRhs, *(*uintptr)(unsafe.Pointer((_pKeyInfo + 32) + 8*uintptr(_i))), _pPKey2+19)
	goto _38

_37:
	_nCmp = func() int32 {
		if (*(*int32)(unsafe.Pointer(_mem1 + 12))) < (*(*int32)(unsafe.Pointer(_pRhs + 12))) {
			return *(*int32)(unsafe.Pointer(_mem1 + 12))
		}
		return *(*int32)(unsafe.Pointer(_pRhs + 12))
	}()
	_rc = crt.Xmemcmp(tls, _aKey1+uintptr(_d1), *(*uintptr)(unsafe.Pointer(_pRhs + 16)), uint64(_nCmp))
	if _rc != int32(0) {
		goto _39
	}

	_rc = (*(*int32)(unsafe.Pointer(_mem1 + 12))) - (*(*int32)(unsafe.Pointer(_pRhs + 12)))
_39:
_38:
_36:
_34:
_32:
	goto _30

_29:
	if (int32(*(*uint16)(unsafe.Pointer(_pRhs + 8))) & int32(0x10)) == 0 {
		goto _40
	}

	if int32(*(*uint8)(unsafe.Pointer(_aKey1 + uintptr(_idx1)))) < int32(0x80) {
		*(*uint32)(unsafe.Pointer(_serial_type)) = uint32(*(*uint8)(unsafe.Pointer(_aKey1 + uintptr(_idx1))))
	} else {
		_665sqlite3GetVarint32(tls, _aKey1+uintptr(_idx1), _serial_type)
	}
	if (*(*uint32)(unsafe.Pointer(_serial_type))) >= uint32(12) && (*(*uint32)(unsafe.Pointer(_serial_type)))&uint32(0x1) == 0 {
		goto _42
	}

	_rc = int32(-1)
	goto _43

_42:
	_nStr = int32(((*(*uint32)(unsafe.Pointer(_serial_type))) - uint32(12)) / uint32(2))
	if (_d1 + uint32(_nStr)) <= uint32(_nKey1) {
		goto _44
	}

	*(*uint8)(unsafe.Pointer(_pPKey2 + 19)) = uint8(_556sqlite3CorruptError(tls, int32(76311)))
	return int32(0)

	goto _45

_44:
	if (int32(*(*uint16)(unsafe.Pointer(_pRhs + 8))) & int32(0x4000)) == 0 {
		goto _46
	}

	if _1184isAllZero(tls, _aKey1+uintptr(_d1), _nStr) != 0 {
		goto _48
	}

	_rc = int32(1)
	goto _49

_48:
	_rc = _nStr - (*(*int32)(unsafe.Pointer(_pRhs)))
_49:
	goto _47

_46:
	_1nCmp = func() int32 {
		if _nStr < (*(*int32)(unsafe.Pointer(_pRhs + 12))) {
			return _nStr
		}
		return *(*int32)(unsafe.Pointer(_pRhs + 12))
	}()
	_rc = crt.Xmemcmp(tls, _aKey1+uintptr(_d1), *(*uintptr)(unsafe.Pointer(_pRhs + 16)), uint64(_1nCmp))
	if _rc != int32(0) {
		goto _50
	}

	_rc = _nStr - (*(*int32)(unsafe.Pointer(_pRhs + 12)))
_50:
_47:
_45:
_43:
	goto _41

_40:
	*(*uint32)(unsafe.Pointer(_serial_type)) = uint32(*(*uint8)(unsafe.Pointer(_aKey1 + uintptr(_idx1))))
	_rc = bool2int((*(*uint32)(unsafe.Pointer(_serial_type))) != uint32(0))
_41:
_30:
_19:
_8:
	if _rc == int32(0) {
		goto _51
	}

	if (*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pKeyInfo + 24))) + uintptr(_i)))) == 0 {
		goto _52
	}

	_rc = -_rc
_52:
	return _rc

_51:
	_i++
	_pRhs += 56
	_d1 = uint32(_d1 + _668sqlite3VdbeSerialTypeLen(tls, *(*uint32)(unsafe.Pointer(_serial_type))))
	_idx1 = uint32(_idx1 + uint32(_671sqlite3VarintLen(tls, uint64(*(*uint32)(unsafe.Pointer(_serial_type))))))
	if ((_idx1 < *(*uint32)(unsafe.Pointer(_szHdr1))) && (_i < int32(*(*uint16)(unsafe.Pointer(_pPKey2 + 16))))) && (_d1 <= uint32(_nKey1)) {
		goto _4
	}

	*(*uint8)(unsafe.Pointer(_pPKey2 + 22)) = uint8(1)
	return int32(*(*int8)(unsafe.Pointer(_pPKey2 + 18)))
}

// _1203vdbeSortAllocUnpacked is defined at sqlite3.c:88237:12
func _1203vdbeSortAllocUnpacked(tls crt.TLS, _pTask uintptr /* *TSortSubtask = SSortSubtask */) (r int32) {
	if (*(*uintptr)(unsafe.Pointer(_pTask + 24))) != 0 {
		goto _1
	}

	*(*uintptr)(unsafe.Pointer(_pTask + 24)) = _690sqlite3VdbeAllocUnpackedRecord(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTask + 16))) + 40)))
	if (*(*uintptr)(unsafe.Pointer(_pTask + 24))) != 0 {
		goto _2
	}

	return int32(7)

_2:
	*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTask + 24))) + 16)) = *(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTask + 16))) + 40))) + 6))
	*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTask + 24))) + 19)) = uint8(0)
_1:
	return int32(0)
}

// _1204vdbeSorterGetCompare is defined at sqlite3.c:88293:22
func _1204vdbeSorterGetCompare(tls crt.TLS, _p uintptr /* *TVdbeSorter = SVdbeSorter */) (r uintptr /* TSorterCompare = *func(crt.TLS, ...tr, int32, uintptr, int32) int32 */) {
	if int32(*(*uint8)(unsafe.Pointer(_p + 92))) != int32(0x1) {
		goto _1
	}

	return fp193(_1399vdbeSorterCompareInt)

	goto _2

_1:
	if int32(*(*uint8)(unsafe.Pointer(_p + 92))) != int32(0x2) {
		goto _3
	}

	return fp193(_1400vdbeSorterCompareText)

_3:
_2:
	return fp193(_1401vdbeSorterCompare)
}

// _1205vdbeSorterMerge is defined at sqlite3.c:88251:21
func _1205vdbeSorterMerge(tls crt.TLS, _pTask uintptr /* *TSortSubtask = SSortSubtask */, _p1 uintptr /* *TSorterRecord = SSorterRecord */, _p2 uintptr /* *TSorterRecord = SSorterRecord */) (r uintptr /* *TSorterRecord = SSorterRecord */) {
	esc := crt.MustMalloc(20)
	var (
		_pFinal  = esc      // **TSorterRecord = SSorterRecord
		_pp      uintptr    // **TSorterRecord = SSorterRecord
		_bCached = esc + 16 // *int32
		_res     int32
	)
	defer crt.Free(esc)
	*(*uintptr)(unsafe.Pointer(_pFinal)) = 0
	_pp = _pFinal
	*(*int32)(unsafe.Pointer(_bCached)) = int32(0)

_1:
	_res = fn165(*(*uintptr)(unsafe.Pointer(_pTask + 64)))(tls, _pTask, _bCached, _p1+16*uintptr(1), *(*int32)(unsafe.Pointer(_p1)), _p2+16*uintptr(1), *(*int32)(unsafe.Pointer(_p2)))
	if _res > int32(0) {
		goto _4
	}

	*(*uintptr)(unsafe.Pointer(_pp)) = _p1
	_pp = _p1 + 8
	_p1 = *(*uintptr)(unsafe.Pointer(_p1 + 8))
	if _p1 != 0 {
		goto _6
	}

	*(*uintptr)(unsafe.Pointer(_pp)) = _p2
	goto _3

_6:
	goto _5

_4:
	*(*uintptr)(unsafe.Pointer(_pp)) = _p2
	_pp = _p2 + 8
	_p2 = *(*uintptr)(unsafe.Pointer(_p2 + 8))
	*(*int32)(unsafe.Pointer(_bCached)) = int32(0)
	if _p2 != 0 {
		goto _7
	}

	*(*uintptr)(unsafe.Pointer(_pp)) = _p1
	goto _3

_7:
_5:
	goto _1

_3:
	return *(*uintptr)(unsafe.Pointer(_pFinal))
}

// _1206vdbeSorterJoinThread is defined at sqlite3.c:88018:12
func _1206vdbeSorterJoinThread(tls crt.TLS, _pTask uintptr /* *TSortSubtask = SSortSubtask */) (r int32) {
	esc := crt.MustMalloc(8)
	var (
		_rc   int32
		_pRet = esc // **void
	)
	defer crt.Free(esc)
	_rc = int32(0)
	if (*(*uintptr)(unsafe.Pointer(_pTask))) == 0 {
		goto _1
	}

	*(*uintptr)(unsafe.Pointer(_pRet)) = uintptr(1)
	_1402sqlite3ThreadJoin(tls, *(*uintptr)(unsafe.Pointer(_pTask)), _pRet)
	_rc = int32(int64(*(*uintptr)(unsafe.Pointer(_pRet))))

	*(*int32)(unsafe.Pointer(_pTask + 8)) = int32(0)
	*(*uintptr)(unsafe.Pointer(_pTask)) = null
_1:
	return _rc
}

// _1207vdbeSorterListToPMA is defined at sqlite3.c:88458:12
func _1207vdbeSorterListToPMA(tls crt.TLS, _pTask uintptr /* *TSortSubtask = SSortSubtask */, _pList uintptr /* *TSorterList = SSorterList */) (r int32) {
	esc := crt.MustMalloc(48)
	var (
		_db     uintptr // *Tsqlite3 = Ssqlite3
		_rc     int32
		_writer = esc   // *TPmaWriter = SPmaWriter
		_p      uintptr // *TSorterRecord = SSorterRecord
		_pNext  uintptr // *TSorterRecord = SSorterRecord
	)
	defer crt.Free(esc)
	_db = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTask + 16))) + 32))
	_rc = int32(0)
	crt.Xmemset(tls, _writer, int32(0), uint64(48))

	if (*(*uintptr)(unsafe.Pointer(_pTask + 72))) != 0 {
		goto _1
	}

	_rc = _1403vdbeSorterOpenTempFile(tls, _db, int64(0), _pTask+72)

_1:
	if _rc != int32(0) {
		goto _2
	}

	_1404vdbeSorterExtendFile(tls, _db, *(*uintptr)(unsafe.Pointer(_pTask + 72)), ((*(*int64)(unsafe.Pointer((_pTask + 72) + 8)))+int64(*(*int32)(unsafe.Pointer(_pList + 16))))+int64(9))
_2:
	if _rc != int32(0) {
		goto _3
	}

	_rc = _988vdbeSorterSort(tls, _pTask, _pList)
_3:
	if _rc != int32(0) {
		goto _4
	}

	_pNext = 0
	_1405vdbePmaWriterInit(tls, *(*uintptr)(unsafe.Pointer(_pTask + 72)), _writer, *(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTask + 16))) + 12)), *(*int64)(unsafe.Pointer((_pTask + 72) + 8)))
	(*(*int32)(unsafe.Pointer(_pTask + 56)))++
	_1406vdbePmaWriteVarint(tls, _writer, uint64(*(*int32)(unsafe.Pointer(_pList + 16))))
	_p = *(*uintptr)(unsafe.Pointer(_pList))
_5:
	if _p == 0 {
		goto _7
	}

	_pNext = *(*uintptr)(unsafe.Pointer(_p + 8))
	_1406vdbePmaWriteVarint(tls, _writer, uint64(*(*int32)(unsafe.Pointer(_p))))
	_1407vdbePmaWriteBlob(tls, _writer, _p+16*uintptr(1), *(*int32)(unsafe.Pointer(_p)))
	if (*(*uintptr)(unsafe.Pointer(_pList + 8))) != 0 {
		goto _8
	}

	Xsqlite3_free(tls, _p)
_8:
	_p = _pNext
	goto _5

_7:
	*(*uintptr)(unsafe.Pointer(_pList)) = _p
	_rc = _1408vdbePmaWriterFinish(tls, _writer, (_pTask+72)+8)
_4:
	return _rc
}

// _1208vdbeSorterCreateThread is defined at sqlite3.c:88039:12
func _1208vdbeSorterCreateThread(tls crt.TLS, _pTask uintptr /* *TSortSubtask = SSortSubtask */, _xTask uintptr /* *func(crt.TLS, uintptr) uintptr */, _pIn uintptr /* *void */) (r int32) {
	return _1409sqlite3ThreadCreate(tls, _pTask, _xTask, _pIn)
}

// _1209vdbeSorterFlushThread is defined at sqlite3.c:88593:13
func _1209vdbeSorterFlushThread(tls crt.TLS, _pCtx uintptr /* *void */) (r uintptr /* *void */) {
	var (
		_pTask uintptr // *TSortSubtask = SSortSubtask
		_rc    int32
	)
	_pTask = _pCtx

	_rc = _1207vdbeSorterListToPMA(tls, _pTask, _pTask+32)
	*(*int32)(unsafe.Pointer(_pTask + 8)) = int32(1)
	return uintptr(int64(_rc))
}

type SIncrMerger struct {
	XpTask      uintptr // *SSortSubtask
	XpMerger    uintptr // *SMergeEngine
	XiStartOff  int64
	XmxSz       int32
	XbEof       int32
	XbUseThread int32
	XaFile      [2]SSorterFile
}

// _1210vdbeSorterMergeTreeBuild is defined at sqlite3.c:89318:12
func _1210vdbeSorterMergeTreeBuild(tls crt.TLS, _pSorter uintptr /* *TVdbeSorter = SVdbeSorter */, _ppOut uintptr /* **TMergeEngine = SMergeEngine */) (r int32) {
	esc := crt.MustMalloc(40)
	var (
		_pMain    uintptr // *TMergeEngine = SMergeEngine
		_rc       int32
		_iTask    int32
		_pTask    uintptr // *TSortSubtask = SSortSubtask
		_pRoot    = esc   // **TMergeEngine = SMergeEngine
		_nDepth   int32
		_iReadOff = esc + 16 // *Ti64 = Tsqlite_int64 = int64
		_i        int32
		_iSeq     int32
		_pMerger  = esc + 32 // **TMergeEngine = SMergeEngine
		_nReader  int32
	)
	defer crt.Free(esc)
	_pMain = 0
	_rc = int32(0)

	if int32(*(*uint8)(unsafe.Pointer(_pSorter + 91))) <= int32(1) {
		goto _1
	}

	_pMain = _1410vdbeMergeEngineNew(tls, int32(*(*uint8)(unsafe.Pointer(_pSorter + 91))))
	if _pMain != 0 {
		goto _2
	}

	_rc = int32(7)
_2:
_1:
	_iTask = int32(0)
_3:
	if _rc != int32(0) || _iTask >= int32(*(*uint8)(unsafe.Pointer(_pSorter + 91))) {
		goto _5
	}

	_pTask = (_pSorter + 96) + 104*uintptr(_iTask)

	if 0 == 0 && (*(*int32)(unsafe.Pointer(_pTask + 56))) == 0 {
		goto _6
	}

	*(*uintptr)(unsafe.Pointer(_pRoot)) = 0
	_nDepth = _1411vdbeSorterTreeDepth(tls, *(*int32)(unsafe.Pointer(_pTask + 56)))
	*(*int64)(unsafe.Pointer(_iReadOff)) = int64(0)
	if (*(*int32)(unsafe.Pointer(_pTask + 56))) > int32(16) {
		goto _7
	}

	_rc = _1412vdbeMergeEngineLevel0(tls, _pTask, *(*int32)(unsafe.Pointer(_pTask + 56)), _iReadOff, _pRoot)
	goto _8

_7:
	_iSeq = int32(0)
	*(*uintptr)(unsafe.Pointer(_pRoot)) = _1410vdbeMergeEngineNew(tls, int32(16))
	if (*(*uintptr)(unsafe.Pointer(_pRoot))) != 0 {
		goto _9
	}

	_rc = int32(7)
_9:
	_i = int32(0)
_10:
	if _i >= (*(*int32)(unsafe.Pointer(_pTask + 56))) || _rc != int32(0) {
		goto _12
	}

	*(*uintptr)(unsafe.Pointer(_pMerger)) = 0
	_nReader = func() int32 {
		if ((*(*int32)(unsafe.Pointer(_pTask + 56))) - _i) < int32(16) {
			return (*(*int32)(unsafe.Pointer(_pTask + 56))) - _i
		}
		return int32(16)
	}()
	_rc = _1412vdbeMergeEngineLevel0(tls, _pTask, _nReader, _iReadOff, _pMerger)
	if _rc != int32(0) {
		goto _13
	}

	_rc = _1413vdbeSorterAddToTree(tls, _pTask, _nDepth, postinc7(&_iSeq), *(*uintptr)(unsafe.Pointer(_pRoot)), *(*uintptr)(unsafe.Pointer(_pMerger)))
_13:
	_i = int32(_i + int32(16))
	goto _10

_12:
_8:
	if _rc != int32(0) {
		goto _14
	}

	if _pMain == 0 {
		goto _16
	}

	_rc = _1211vdbeIncrMergerNew(tls, _pTask, *(*uintptr)(unsafe.Pointer(_pRoot)), ((*(*uintptr)(unsafe.Pointer(_pMain + 24)))+80*uintptr(_iTask))+72)
	goto _17

_16:
	_pMain = *(*uintptr)(unsafe.Pointer(_pRoot))
_17:
	goto _15

_14:
	_999vdbeMergeEngineFree(tls, *(*uintptr)(unsafe.Pointer(_pRoot)))
_15:
_6:
	_iTask++
	goto _3

_5:
	if _rc == int32(0) {
		goto _18
	}

	_999vdbeMergeEngineFree(tls, _pMain)
	_pMain = null
_18:
	*(*uintptr)(unsafe.Pointer(_ppOut)) = _pMain
	return _rc
}

// _1211vdbeIncrMergerNew is defined at sqlite3.c:88897:12
func _1211vdbeIncrMergerNew(tls crt.TLS, _pTask uintptr /* *TSortSubtask = SSortSubtask */, _pMerger uintptr /* *TMergeEngine = SMergeEngine */, _ppOut uintptr /* **TIncrMerger = SIncrMerger */) (r int32) {
	var (
		_rc    int32
		_pIncr uintptr // *TIncrMerger = SIncrMerger
	)
	_rc = int32(0)
	_pIncr = set4(&(*(*uintptr)(unsafe.Pointer(_ppOut))), func() uintptr {
		if _208sqlite3FaultSim(tls, int32(100)) != 0 {
			return null
		}
		return _135sqlite3MallocZero(tls, uint64(72))
	}())
	if _pIncr == 0 {
		goto _1
	}

	*(*uintptr)(unsafe.Pointer(_pIncr + 8)) = _pMerger
	*(*uintptr)(unsafe.Pointer(_pIncr)) = _pTask
	*(*int32)(unsafe.Pointer(_pIncr + 24)) = func() int32 {
		if ((*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTask + 16))) + 8))) + int32(9)) > ((*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTask + 16))) + 4))) / int32(2)) {
			return (*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTask + 16))) + 8))) + int32(9)
		}
		return (*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTask + 16))) + 4))) / int32(2)
	}()
	{
		p := &(*(*int64)(unsafe.Pointer((_pTask + 88) + 8)))
		*p = int64(int64(*p) + int64(*(*int32)(unsafe.Pointer(_pIncr + 24))))
	}
	goto _2

_1:
	_999vdbeMergeEngineFree(tls, _pMerger)
	_rc = int32(7)
_2:
	return _rc
}

// _1212vdbeIncrMergerSetThreads is defined at sqlite3.c:88921:13
func _1212vdbeIncrMergerSetThreads(tls crt.TLS, _pIncr uintptr /* *TIncrMerger = SIncrMerger */) {
	*(*int32)(unsafe.Pointer(_pIncr + 32)) = int32(1)
	{
		p := &(*(*int64)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pIncr))) + 88) + 8)))
		*p = int64(int64(*p) - int64(*(*int32)(unsafe.Pointer(_pIncr + 24))))
	}
}

// _1213vdbePmaReaderIncrInit is defined at sqlite3.c:89175:12
func _1213vdbePmaReaderIncrInit(tls crt.TLS, _pReadr uintptr /* *TPmaReader = SPmaReader */, _eMode int32) (r int32) {
	var (
		_pIncr uintptr // *TIncrMerger = SIncrMerger
		_rc    int32
		_pCtx  uintptr // *void
	)
	_pIncr = *(*uintptr)(unsafe.Pointer(_pReadr + 72))
	_rc = int32(0)
	if _pIncr == 0 {
		goto _1
	}

	if (*(*int32)(unsafe.Pointer(_pIncr + 32))) == 0 {
		goto _2
	}

	_pCtx = _pReadr
	_rc = _1208vdbeSorterCreateThread(tls, *(*uintptr)(unsafe.Pointer(_pIncr)), fp11(_1414vdbePmaReaderBgIncrInit), _pCtx)
	goto _3

_2:
	_rc = _1214vdbePmaReaderIncrMergeInit(tls, _pReadr, _eMode)
_3:
_1:
	return _rc
}

// _1214vdbePmaReaderIncrMergeInit is defined at sqlite3.c:89087:12
func _1214vdbePmaReaderIncrMergeInit(tls crt.TLS, _pReadr uintptr /* *TPmaReader = SPmaReader */, _eMode int32) (r int32) {
	var (
		_rc    int32
		_pIncr uintptr // *TIncrMerger = SIncrMerger
		_pTask uintptr // *TSortSubtask = SSortSubtask
		_db    uintptr // *Tsqlite3 = Ssqlite3
		_mxSz  int32
	)
	_rc = int32(0)
	_pIncr = *(*uintptr)(unsafe.Pointer(_pReadr + 72))
	_pTask = *(*uintptr)(unsafe.Pointer(_pIncr))
	_db = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTask + 16))) + 32))

	_rc = _1215vdbeMergeEngineInit(tls, _pTask, *(*uintptr)(unsafe.Pointer(_pIncr + 8)), _eMode)
	if _rc != int32(0) {
		goto _1
	}

	_mxSz = *(*int32)(unsafe.Pointer(_pIncr + 24))
	if (*(*int32)(unsafe.Pointer(_pIncr + 32))) == 0 {
		goto _2
	}

	_rc = _1403vdbeSorterOpenTempFile(tls, _db, int64(_mxSz), _pIncr+40)
	if _rc != int32(0) {
		goto _4
	}

	_rc = _1403vdbeSorterOpenTempFile(tls, _db, int64(_mxSz), (_pIncr+40)+16)
_4:
	goto _3

_2:
	if (*(*uintptr)(unsafe.Pointer(_pTask + 88))) != 0 {
		goto _5
	}

	_rc = _1403vdbeSorterOpenTempFile(tls, _db, *(*int64)(unsafe.Pointer((_pTask + 88) + 8)), _pTask+88)
	*(*int64)(unsafe.Pointer((_pTask + 88) + 8)) = int64(0)
_5:
	if _rc != int32(0) {
		goto _6
	}

	*(*uintptr)(unsafe.Pointer((_pIncr + 40) + 16)) = *(*uintptr)(unsafe.Pointer(_pTask + 88))
	*(*int64)(unsafe.Pointer(_pIncr + 16)) = *(*int64)(unsafe.Pointer((_pTask + 88) + 8))
	{
		p := &(*(*int64)(unsafe.Pointer((_pTask + 88) + 8)))
		*p = int64(int64(*p) + int64(_mxSz))
	}
_6:
_3:
_1:
	if _rc != int32(0) || (*(*int32)(unsafe.Pointer(_pIncr + 32))) == 0 {
		goto _7
	}

	_rc = _1415vdbeIncrPopulate(tls, _pIncr)
_7:
	if _rc != int32(0) || 0 == 0 && _eMode == int32(1) {
		goto _8
	}

	_rc = _992vdbePmaReaderNext(tls, _pReadr)
_8:
	return _rc
}

// _1215vdbeMergeEngineInit is defined at sqlite3.c:89016:12
func _1215vdbeMergeEngineInit(tls crt.TLS, _pTask uintptr /* *TSortSubtask = SSortSubtask */, _pMerger uintptr /* *TMergeEngine = SMergeEngine */, _eMode int32) (r int32) {
	var (
		_rc    int32
		_i     int32
		_nTree int32
	)
	_rc = int32(0)
	_nTree = *(*int32)(unsafe.Pointer(_pMerger))

	*(*uintptr)(unsafe.Pointer(_pMerger + 8)) = _pTask
	_i = int32(0)
_1:
	if _i >= _nTree {
		goto _3
	}

	if 1 == 0 || _eMode != int32(2) {
		goto _4
	}

	_rc = _992vdbePmaReaderNext(tls, (*(*uintptr)(unsafe.Pointer(_pMerger + 24)))+80*uintptr((_nTree-_i)-int32(1)))
	goto _5

_4:
	_rc = _1213vdbePmaReaderIncrInit(tls, (*(*uintptr)(unsafe.Pointer(_pMerger + 24)))+80*uintptr(_i), int32(0))
_5:
	if _rc == int32(0) {
		goto _6
	}

	return _rc

_6:
	_i++
	goto _1

_3:
	_i = (*(*int32)(unsafe.Pointer(_pMerger))) - int32(1)
_7:
	if _i <= int32(0) {
		goto _9
	}

	_1416vdbeMergeEngineCompare(tls, _pMerger, _i)
	_i--
	goto _7

_9:
	return int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTask + 24))) + 19)))
}

// _1216vdbeIncrSwap is defined at sqlite3.c:88858:12
func _1216vdbeIncrSwap(tls crt.TLS, _pIncr uintptr /* *TIncrMerger = SIncrMerger */) (r int32) {
	var (
		_rc int32
		_f0 SSorterFile
	)
	_rc = int32(0)
	if (*(*int32)(unsafe.Pointer(_pIncr + 32))) == 0 {
		goto _1
	}

	_rc = _1206vdbeSorterJoinThread(tls, *(*uintptr)(unsafe.Pointer(_pIncr)))
	if _rc != int32(0) {
		goto _3
	}

	_f0 = *(*SSorterFile)(unsafe.Pointer(_pIncr + 40))
	*(*SSorterFile)(unsafe.Pointer(_pIncr + 40)) = *(*SSorterFile)(unsafe.Pointer((_pIncr + 40) + 16))
	*(*SSorterFile)(unsafe.Pointer((_pIncr + 40) + 16)) = _f0
_3:
	if _rc != int32(0) {
		goto _4
	}

	if (*(*int64)(unsafe.Pointer(_pIncr + 40 + 8))) != (*(*int64)(unsafe.Pointer(_pIncr + 16))) {
		goto _5
	}

	*(*int32)(unsafe.Pointer(_pIncr + 28)) = int32(1)
	goto _6

_5:
	_rc = _1417vdbeIncrBgPopulate(tls, _pIncr)
_6:
_4:
	goto _2

_1:
	_rc = _1415vdbeIncrPopulate(tls, _pIncr)
	*(*SSorterFile)(unsafe.Pointer(_pIncr + 40)) = *(*SSorterFile)(unsafe.Pointer((_pIncr + 40) + 16))
	if (*(*int64)(unsafe.Pointer(_pIncr + 40 + 8))) != (*(*int64)(unsafe.Pointer(_pIncr + 16))) {
		goto _7
	}

	*(*int32)(unsafe.Pointer(_pIncr + 28)) = int32(1)
_7:
_2:
	return _rc
}

// _1217vdbePmaReaderSeek is defined at sqlite3.c:87543:12
func _1217vdbePmaReaderSeek(tls crt.TLS, _pTask uintptr /* *TSortSubtask = SSortSubtask */, _pReadr uintptr /* *TPmaReader = SPmaReader */, _pFile uintptr /* *TSorterFile = SSorterFile */, _iOff int64) (r int32) {
	var (
		_rc    int32
		_pgsz  int32
		_iBuf  int32
		_nRead int32
	)
	_rc = int32(0)

	if _208sqlite3FaultSim(tls, int32(201)) == 0 {
		goto _1
	}

	return int32(266)

_1:
	if (*(*uintptr)(unsafe.Pointer(_pReadr + 64))) == 0 {
		goto _2
	}

	_874sqlite3OsUnfetch(tls, *(*uintptr)(unsafe.Pointer(_pReadr + 24)), int64(0), *(*uintptr)(unsafe.Pointer(_pReadr + 64)))
	*(*uintptr)(unsafe.Pointer(_pReadr + 64)) = null
_2:
	*(*int64)(unsafe.Pointer(_pReadr)) = _iOff
	*(*int64)(unsafe.Pointer(_pReadr + 8)) = *(*int64)(unsafe.Pointer(_pFile + 8))
	*(*uintptr)(unsafe.Pointer(_pReadr + 24)) = *(*uintptr)(unsafe.Pointer(_pFile))
	_rc = _1418vdbeSorterMapFile(tls, _pTask, _pFile, _pReadr+64)
	if _rc != int32(0) || (*(*uintptr)(unsafe.Pointer(_pReadr + 64))) != 0 {
		goto _3
	}

	_pgsz = *(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTask + 16))) + 12))
	_iBuf = int32((*(*int64)(unsafe.Pointer(_pReadr))) % int64(_pgsz))
	if (*(*uintptr)(unsafe.Pointer(_pReadr + 48))) != 0 {
		goto _4
	}

	*(*uintptr)(unsafe.Pointer(_pReadr + 48)) = _198sqlite3Malloc(tls, uint64(_pgsz))
	if (*(*uintptr)(unsafe.Pointer(_pReadr + 48))) != 0 {
		goto _5
	}

	_rc = int32(7)
_5:
	*(*int32)(unsafe.Pointer(_pReadr + 56)) = _pgsz
_4:
	if _rc != int32(0) || _iBuf == 0 {
		goto _6
	}

	_nRead = _pgsz - _iBuf
	if ((*(*int64)(unsafe.Pointer(_pReadr))) + int64(_nRead)) <= (*(*int64)(unsafe.Pointer(_pReadr + 8))) {
		goto _7
	}

	_nRead = int32((*(*int64)(unsafe.Pointer(_pReadr + 8))) - (*(*int64)(unsafe.Pointer(_pReadr))))
_7:
	_rc = _586sqlite3OsRead(tls, *(*uintptr)(unsafe.Pointer(_pReadr + 24)), (*(*uintptr)(unsafe.Pointer(_pReadr + 48)))+uintptr(_iBuf), _nRead, *(*int64)(unsafe.Pointer(_pReadr)))
_6:
_3:
	return _rc
}

// _1218vdbePmaReadVarint is defined at sqlite3.c:87493:12
func _1218vdbePmaReadVarint(tls crt.TLS, _p uintptr /* *TPmaReader = SPmaReader */, _pnOut uintptr /* *Tu64 = Tsqlite_uint64 = uint64 */) (r int32) {
	esc := crt.MustMalloc(24)
	var (
		_iBuf    int32
		_aVarint = esc      // *[16]uint8
		_a       = esc + 16 // **Tu8 = uint8
		_i       int32
		_rc      int32
	)
	defer crt.Free(esc)
	if (*(*uintptr)(unsafe.Pointer(_p + 64))) == 0 {
		goto _1
	}

	{
		p := &(*(*int64)(unsafe.Pointer(_p)))
		*p = int64(int64(*p) + int64(_956sqlite3GetVarint(tls, (*(*uintptr)(unsafe.Pointer(_p + 64)))+uintptr(*(*int64)(unsafe.Pointer(_p))), _pnOut)))
	}
	goto _2

_1:
	_iBuf = int32((*(*int64)(unsafe.Pointer(_p))) % int64(*(*int32)(unsafe.Pointer(_p + 56))))
	if _iBuf == 0 || ((*(*int32)(unsafe.Pointer(_p + 56)))-_iBuf) < int32(9) {
		goto _3
	}

	{
		p := &(*(*int64)(unsafe.Pointer(_p)))
		*p = int64(int64(*p) + int64(_956sqlite3GetVarint(tls, (*(*uintptr)(unsafe.Pointer(_p + 48)))+uintptr(_iBuf), _pnOut)))
	}
	goto _4

_3:
	_i = int32(0)
_5:
	_rc = _1219vdbePmaReadBlob(tls, _p, int32(1), _a)
	if _rc == 0 {
		goto _8
	}

	return _rc

_8:
	*(*uint8)(unsafe.Pointer(_aVarint + uintptr(postinc7(&_i)&int32(0xf)))) = *(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_a))))
	if (int32(*(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_a))))) & int32(0x80)) != int32(0) {
		goto _5
	}

	_956sqlite3GetVarint(tls, _aVarint, _pnOut)
_4:
_2:
	return int32(0)
}

// _1219vdbePmaReadBlob is defined at sqlite3.c:87399:12
func _1219vdbePmaReadBlob(tls crt.TLS, _p uintptr /* *TPmaReader = SPmaReader */, _nByte int32, _ppOut uintptr /* **Tu8 = uint8 */) (r int32) {
	esc := crt.MustMalloc(8)
	var (
		_iBuf   int32
		_nAvail int32
		_nRead  int32
		_rc     int32
		_nRem   int32
		_aNew   uintptr // *Tu8 = uint8
		_nNew   int32
		_1rc    int32
		_nCopy  int32
		_aNext  = esc // **Tu8 = uint8
	)
	defer crt.Free(esc)
	if (*(*uintptr)(unsafe.Pointer(_p + 64))) == 0 {
		goto _1
	}

	*(*uintptr)(unsafe.Pointer(_ppOut)) = (*(*uintptr)(unsafe.Pointer(_p + 64))) + uintptr(*(*int64)(unsafe.Pointer(_p)))
	{
		p := &(*(*int64)(unsafe.Pointer(_p)))
		*p = int64(int64(*p) + int64(_nByte))
	}
	return int32(0)

_1:
	_iBuf = int32((*(*int64)(unsafe.Pointer(_p))) % int64(*(*int32)(unsafe.Pointer(_p + 56))))
	if _iBuf != int32(0) {
		goto _2
	}

	if ((*(*int64)(unsafe.Pointer(_p + 8))) - (*(*int64)(unsafe.Pointer(_p)))) <= int64(*(*int32)(unsafe.Pointer(_p + 56))) {
		goto _3
	}

	_nRead = *(*int32)(unsafe.Pointer(_p + 56))
	goto _4

_3:
	_nRead = int32((*(*int64)(unsafe.Pointer(_p + 8))) - (*(*int64)(unsafe.Pointer(_p))))
_4:
	_rc = _586sqlite3OsRead(tls, *(*uintptr)(unsafe.Pointer(_p + 24)), *(*uintptr)(unsafe.Pointer(_p + 48)), _nRead, *(*int64)(unsafe.Pointer(_p)))

	if _rc == int32(0) {
		goto _5
	}

	return _rc

_5:
_2:
	_nAvail = (*(*int32)(unsafe.Pointer(_p + 56))) - _iBuf
	if _nByte > _nAvail {
		goto _6
	}

	*(*uintptr)(unsafe.Pointer(_ppOut)) = (*(*uintptr)(unsafe.Pointer(_p + 48))) + uintptr(_iBuf)
	{
		p := &(*(*int64)(unsafe.Pointer(_p)))
		*p = int64(int64(*p) + int64(_nByte))
	}
	goto _7

_6:
	if (*(*int32)(unsafe.Pointer(_p + 16))) >= _nByte {
		goto _8
	}

	_nNew = func() int32 {
		if int32(128) > ((*(*int32)(unsafe.Pointer(_p + 16))) * int32(2)) {
			return int32(128)
		}
		return (*(*int32)(unsafe.Pointer(_p + 16))) * int32(2)
	}()
_9:
	if _nByte <= _nNew {
		goto _10
	}

	_nNew = _nNew * int32(2)
	goto _9

_10:
	_aNew = _230sqlite3Realloc(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), uint64(_nNew))
	if _aNew != 0 {
		goto _11
	}

	return int32(7)

_11:
	*(*int32)(unsafe.Pointer(_p + 16)) = _nNew
	*(*uintptr)(unsafe.Pointer(_p + 32)) = _aNew
_8:
	crt.Xmemcpy(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), (*(*uintptr)(unsafe.Pointer(_p + 48)))+uintptr(_iBuf), uint64(_nAvail))
	{
		p := &(*(*int64)(unsafe.Pointer(_p)))
		*p = int64(int64(*p) + int64(_nAvail))
	}
	_nRem = _nByte - _nAvail
_12:
	if _nRem <= int32(0) {
		goto _13
	}

	_nCopy = _nRem
	if _nRem <= (*(*int32)(unsafe.Pointer(_p + 56))) {
		goto _14
	}

	_nCopy = *(*int32)(unsafe.Pointer(_p + 56))
_14:
	_1rc = _1219vdbePmaReadBlob(tls, _p, _nCopy, _aNext)
	if _1rc == int32(0) {
		goto _15
	}

	return _1rc

_15:
	crt.Xmemcpy(tls, (*(*uintptr)(unsafe.Pointer(_p + 32)))+uintptr(_nByte-_nRem), *(*uintptr)(unsafe.Pointer(_aNext)), uint64(_nCopy))
	_nRem = int32(_nRem - _nCopy)
	goto _12

_13:
	*(*uintptr)(unsafe.Pointer(_ppOut)) = *(*uintptr)(unsafe.Pointer(_p + 32))
_7:
	return int32(0)
}

// _1220freePage is defined at sqlite3.c:65816:13
func _1220freePage(tls crt.TLS, _pPage uintptr /* *TMemPage = SMemPage */, _pRC uintptr /* *int32 */) {
	if (*(*int32)(unsafe.Pointer(_pRC))) != int32(0) {
		goto _1
	}

	*(*int32)(unsafe.Pointer(_pRC)) = _1195freePage2(tls, *(*uintptr)(unsafe.Pointer(_pPage + 72)), _pPage, *(*uint32)(unsafe.Pointer(_pPage + 4)))
_1:
}

// _1221vdbeIncrFree is defined at sqlite3.c:88119:13
func _1221vdbeIncrFree(tls crt.TLS, _pIncr uintptr /* *TIncrMerger = SIncrMerger */) {
	if _pIncr == 0 {
		goto _1
	}

	if (*(*int32)(unsafe.Pointer(_pIncr + 32))) == 0 {
		goto _2
	}

	_1206vdbeSorterJoinThread(tls, *(*uintptr)(unsafe.Pointer(_pIncr)))
	if (*(*uintptr)(unsafe.Pointer(_pIncr + 40))) == 0 {
		goto _3
	}

	_1051sqlite3OsCloseFree(tls, *(*uintptr)(unsafe.Pointer(_pIncr + 40)))
_3:
	if (*(*uintptr)(unsafe.Pointer((_pIncr + 40) + 16))) == 0 {
		goto _4
	}

	_1051sqlite3OsCloseFree(tls, *(*uintptr)(unsafe.Pointer((_pIncr + 40) + 16)))
_4:
_2:
	_999vdbeMergeEngineFree(tls, *(*uintptr)(unsafe.Pointer(_pIncr + 8)))
	Xsqlite3_free(tls, _pIncr)
_1:
}

// _1222decodeIntArray is defined at sqlite3.c:99362:13
func _1222decodeIntArray(tls crt.TLS, _zIntArray uintptr /* *int8 */, _nOut int32, _aOut uintptr /* *TtRowcnt = Tu32 = uint32 */, _aLog uintptr /* *TLogEst = int16 */, _pIndex uintptr /* *TIndex = SIndex */) {
	var (
		_z uintptr // *int8
		_c int32
		_i int32
		_v uint32
	)
	_z = _zIntArray

	_i = int32(0)
_1:
	if (*(*int8)(unsafe.Pointer(_z))) == 0 || _i >= _nOut {
		goto _3
	}

	_v = uint32(0)
_4:
	if set5(&_c, int32(*(*int8)(unsafe.Pointer(_z)))) < int32('0') || _c > int32('9') {
		goto _5
	}

	_v = ((_v * uint32(10)) + uint32(_c)) - uint32('0')
	_z++
	goto _4

_5:
	*(*int16)(unsafe.Pointer(_aLog + 2*uintptr(_i))) = _703sqlite3LogEst(tls, uint64(_v))
	if int32(*(*int8)(unsafe.Pointer(_z))) != int32(' ') {
		goto _6
	}

	_z++
_6:
	_i++
	goto _1

_3:
	set63b(&(*(*uint8)(unsafe.Pointer(_pIndex + 99))), uint32(0))
	set194b(&(*(*uint8)(unsafe.Pointer(_pIndex + 99))), uint32(0))
_7:
	if (*(*int8)(unsafe.Pointer(_z))) == 0 {
		goto _8
	}

	if Xsqlite3_strglob(tls, ts+24434 /* "unordered*" */, _z) != int32(0) {
		goto _9
	}

	set63b(&(*(*uint8)(unsafe.Pointer(_pIndex + 99))), uint32(1))
	goto _10

_9:
	if Xsqlite3_strglob(tls, ts+24445 /* "sz=[0-9]*" */, _z) != int32(0) {
		goto _11
	}

	*(*int16)(unsafe.Pointer(_pIndex + 92)) = _703sqlite3LogEst(tls, uint64(_1002sqlite3Atoi(tls, _z+uintptr(3))))
	goto _12

_11:
	if Xsqlite3_strglob(tls, ts+24455 /* "noskipscan*" */, _z) != int32(0) {
		goto _13
	}

	set194b(&(*(*uint8)(unsafe.Pointer(_pIndex + 99))), uint32(1))
_13:
_12:
_10:
_14:
	if int32(*(*int8)(unsafe.Pointer(_z))) == int32(0) || int32(*(*int8)(unsafe.Pointer(_z))) == int32(' ') {
		goto _15
	}

	_z++
	goto _14

_15:
_16:
	if int32(*(*int8)(unsafe.Pointer(_z))) != int32(' ') {
		goto _17
	}

	_z++
	goto _16

_17:
	goto _7

_8:
}

// _1223sqlite3DeleteIndexSamples is defined at sqlite3.c:99496:21
func _1223sqlite3DeleteIndexSamples(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pIdx uintptr /* *TIndex = SIndex */) {
}

// _1224checkRef is defined at sqlite3.c:68767:12
func _1224checkRef(tls crt.TLS, _pCheck uintptr /* *TIntegrityCk = SIntegrityCk */, _iPage uint32) (r int32) {
	if _iPage != uint32(0) {
		goto _1
	}

	return int32(1)

_1:
	if _iPage <= (*(*uint32)(unsafe.Pointer(_pCheck + 24))) {
		goto _2
	}

	_1014checkAppendMsg(tls, _pCheck, ts+24467 /* "invalid page number %d" */, _iPage)
	return int32(1)

_2:
	if _1013getPageReferenced(tls, _pCheck, _iPage) == 0 {
		goto _3
	}

	_1014checkAppendMsg(tls, _pCheck, ts+24490 /* "2nd reference to page %d" */, _iPage)
	return int32(1)

_3:
	_1009setPageReferenced(tls, _pCheck, _iPage)
	return int32(0)
}

// _1225btreeHeapInsert is defined at sqlite3.c:68908:13
func _1225btreeHeapInsert(tls crt.TLS, _aHeap uintptr /* *Tu32 = uint32 */, _x uint32) {
	var (
		_j uint32
		_i uint32
	)
	_i = preinc195(&(*(*uint32)(unsafe.Pointer(_aHeap))))
	*(*uint32)(unsafe.Pointer(_aHeap + 4*uintptr(_i))) = _x
_1:
	if set25(&_j, _i/uint32(2)) <= uint32(0) || (*(*uint32)(unsafe.Pointer(_aHeap + 4*uintptr(_j)))) <= (*(*uint32)(unsafe.Pointer(_aHeap + 4*uintptr(_i)))) {
		goto _2
	}

	_x = *(*uint32)(unsafe.Pointer(_aHeap + 4*uintptr(_j)))
	*(*uint32)(unsafe.Pointer(_aHeap + 4*uintptr(_j))) = *(*uint32)(unsafe.Pointer(_aHeap + 4*uintptr(_i)))
	*(*uint32)(unsafe.Pointer(_aHeap + 4*uintptr(_i))) = _x
	_i = _j
	goto _1

_2:
}

// _1226btreeHeapPull is defined at sqlite3.c:68918:12
func _1226btreeHeapPull(tls crt.TLS, _aHeap uintptr /* *Tu32 = uint32 */, _pOut uintptr /* *Tu32 = uint32 */) (r int32) {
	var (
		_j uint32
		_i uint32
		_x uint32
	)
	if set25(&_x, *(*uint32)(unsafe.Pointer(_aHeap))) != uint32(0) {
		goto _1
	}

	return int32(0)

_1:
	*(*uint32)(unsafe.Pointer(_pOut)) = *(*uint32)(unsafe.Pointer(_aHeap + 4))
	*(*uint32)(unsafe.Pointer(_aHeap + 4)) = *(*uint32)(unsafe.Pointer(_aHeap + 4*uintptr(_x)))
	*(*uint32)(unsafe.Pointer(_aHeap + 4*uintptr(_x))) = uint32(0xffffffff)
	(*(*uint32)(unsafe.Pointer(_aHeap)))--
	_i = uint32(1)
_2:
	if set25(&_j, _i*uint32(2)) > (*(*uint32)(unsafe.Pointer(_aHeap))) {
		goto _3
	}

	if (*(*uint32)(unsafe.Pointer(_aHeap + 4*uintptr(_j)))) <= (*(*uint32)(unsafe.Pointer(_aHeap + 4*uintptr(_j+uint32(1))))) {
		goto _4
	}

	_j++
_4:
	if (*(*uint32)(unsafe.Pointer(_aHeap + 4*uintptr(_i)))) >= (*(*uint32)(unsafe.Pointer(_aHeap + 4*uintptr(_j)))) {
		goto _5
	}

	goto _3

_5:
	_x = *(*uint32)(unsafe.Pointer(_aHeap + 4*uintptr(_i)))
	*(*uint32)(unsafe.Pointer(_aHeap + 4*uintptr(_i))) = *(*uint32)(unsafe.Pointer(_aHeap + 4*uintptr(_j)))
	*(*uint32)(unsafe.Pointer(_aHeap + 4*uintptr(_j))) = _x
	_i = _j
	goto _2

_3:
	return int32(1)
}

// _1227rowSetNDeepTree is defined at sqlite3.c:47162:27
func _1227rowSetNDeepTree(tls crt.TLS, _ppList uintptr /* **SRowSetEntry */, _iDepth int32) (r uintptr /* *SRowSetEntry */) {
	var (
		_p     uintptr // *SRowSetEntry
		_pLeft uintptr // *SRowSetEntry
	)
	if (*(*uintptr)(unsafe.Pointer(_ppList))) != 0 {
		goto _1
	}

	return null

_1:
	if _iDepth <= int32(1) {
		goto _2
	}

	_pLeft = _1227rowSetNDeepTree(tls, _ppList, _iDepth-int32(1))
	_p = *(*uintptr)(unsafe.Pointer(_ppList))
	if _p != 0 {
		goto _4
	}

	return _pLeft

_4:
	*(*uintptr)(unsafe.Pointer(_p + 16)) = _pLeft
	*(*uintptr)(unsafe.Pointer(_ppList)) = *(*uintptr)(unsafe.Pointer(_p + 8))
	*(*uintptr)(unsafe.Pointer(_p + 8)) = _1227rowSetNDeepTree(tls, _ppList, _iDepth-int32(1))
	goto _3

_2:
	_p = *(*uintptr)(unsafe.Pointer(_ppList))
	*(*uintptr)(unsafe.Pointer(_ppList)) = *(*uintptr)(unsafe.Pointer(_p + 8))
	*(*uintptr)(unsafe.Pointer(_p + 16)) = set4(&(*(*uintptr)(unsafe.Pointer(_p + 8))), null)
_3:
	return _p
}

// _1228sqlite3PagerCheckpoint is defined at sqlite3.c:54874:20
func _1228sqlite3PagerCheckpoint(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _eMode int32, _pnLog uintptr /* *int32 */, _pnCkpt uintptr /* *int32 */) (r int32) {
	var _rc int32

	_rc = int32(0)
	if (*(*uintptr)(unsafe.Pointer(_pPager + 288))) == 0 {
		goto _1
	}

	_rc = _1132sqlite3WalCheckpoint(tls, *(*uintptr)(unsafe.Pointer(_pPager + 288)), _db, _eMode, func() uintptr {
		if _eMode == int32(0) {
			return null
		}
		return *(*uintptr)(unsafe.Pointer(_pPager + 224))
	}(), *(*uintptr)(unsafe.Pointer(_pPager + 232)), int32(*(*uint8)(unsafe.Pointer(_pPager + 15))), *(*int32)(unsafe.Pointer(_pPager + 188)), *(*uintptr)(unsafe.Pointer(_pPager + 272)), _pnLog, _pnCkpt)
_1:
	return _rc
}

// _1229sqlite3BtreeGetReserveNoMutex is defined at sqlite3.c:62472:20
func _1229sqlite3BtreeGetReserveNoMutex(tls crt.TLS, _p uintptr /* *TBtree = SBtree */) (r int32) {
	var _n int32

	_n = int32((*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 8))) + 48))) - (*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 8))) + 52))))
	return _n
}

// _1230sqlite3PagerSetSpillsize is defined at sqlite3.c:50999:20
func _1230sqlite3PagerSetSpillsize(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _mxPage int32) (r int32) {
	return _1419sqlite3PcacheSetSpillsize(tls, *(*uintptr)(unsafe.Pointer(_pPager + 280)), _mxPage)
}

// _1231sqlite3PagerSetFlags is defined at sqlite3.c:51086:21
func _1231sqlite3PagerSetFlags(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _pgFlags uint32) {
	var _level uint32

	_level = _pgFlags & uint32(0x7)
	if (*(*uint8)(unsafe.Pointer(_pPager + 16))) == 0 {
		goto _1
	}

	*(*uint8)(unsafe.Pointer(_pPager + 11)) = uint8(1)
	*(*uint8)(unsafe.Pointer(_pPager + 12)) = uint8(0)
	*(*uint8)(unsafe.Pointer(_pPager + 13)) = uint8(0)
	goto _2

_1:
	*(*uint8)(unsafe.Pointer(_pPager + 11)) = uint8(func() int32 {
		if _level == uint32(0x1) {
			return int32(1)
		}
		return int32(0)
	}())
	*(*uint8)(unsafe.Pointer(_pPager + 12)) = uint8(func() int32 {
		if _level >= uint32(0x3) {
			return int32(1)
		}
		return int32(0)
	}())
	*(*uint8)(unsafe.Pointer(_pPager + 13)) = uint8(func() int32 {
		if _level == uint32(0x4) {
			return int32(1)
		}
		return int32(0)
	}())
_2:
	if (*(*uint8)(unsafe.Pointer(_pPager + 11))) == 0 {
		goto _3
	}

	*(*uint8)(unsafe.Pointer(_pPager + 14)) = uint8(0)
	goto _4

_3:
	if (_pgFlags & uint32(0x8)) == 0 {
		goto _5
	}

	*(*uint8)(unsafe.Pointer(_pPager + 14)) = uint8(0x3)
	goto _6

_5:
	*(*uint8)(unsafe.Pointer(_pPager + 14)) = uint8(0x2)
_6:
_4:
	*(*uint8)(unsafe.Pointer(_pPager + 15)) = uint8(int32(*(*uint8)(unsafe.Pointer(_pPager + 14))) << (uint(2) % 32))
	if (*(*uint8)(unsafe.Pointer(_pPager + 12))) == 0 {
		goto _7
	}

	{
		p := &(*(*uint8)(unsafe.Pointer(_pPager + 15)))
		*p = uint8(int32(*p) | int32(*(*uint8)(unsafe.Pointer(_pPager + 14))))
	}
_7:
	if _pgFlags&uint32(0x10) == 0 || (*(*uint8)(unsafe.Pointer(_pPager + 11))) != 0 {
		goto _8
	}

	{
		p := &(*(*uint8)(unsafe.Pointer(_pPager + 15)))
		*p = uint8(int32(*p) | int32(12))
	}
_8:
	if (_pgFlags & uint32(0x20)) == 0 {
		goto _9
	}

	{
		p := &(*(*uint8)(unsafe.Pointer(_pPager + 24)))
		*p = uint8(int32(*p) & int32(-2))
	}
	goto _10

_9:
	{
		p := &(*(*uint8)(unsafe.Pointer(_pPager + 24)))
		*p = uint8(int32(*p) | int32(0x1))
	}
_10:
}

// _1232sqlite3PagerClearCache is defined at sqlite3.c:54859:21
func _1232sqlite3PagerClearCache(tls crt.TLS, _pPager uintptr /* *TPager = SPager */) {
	if int32(*(*uint8)(unsafe.Pointer(_pPager + 16))) != int32(0) {
		goto _1
	}

	_756pager_reset(tls, _pPager)
_1:
}

// _1233sqlite3VtabLock is defined at sqlite3.c:126446:21
func _1233sqlite3VtabLock(tls crt.TLS, _pVTab uintptr /* *TVTable = SVTable */) {
	(*(*int32)(unsafe.Pointer(_pVTab + 24)))++
}

// _1234sqlite3VListNameToNum is defined at sqlite3.c:29699:20
func _1234sqlite3VListNameToNum(tls crt.TLS, _pIn uintptr /* *TVList = int32 */, _zName uintptr /* *int8 */, _nName int32) (r int32) {
	var (
		_i  int32
		_mx int32
		_z  uintptr // *int8
	)
	if _pIn != 0 {
		goto _1
	}

	return int32(0)

_1:
	_mx = *(*int32)(unsafe.Pointer(_pIn + 4))
	_i = int32(2)
_2:
	_z = _pIn + 4*uintptr(_i+int32(2))
	if crt.Xstrncmp(tls, _z, _zName, uint64(_nName)) != int32(0) || int32(*(*int8)(unsafe.Pointer(_z + uintptr(_nName)))) != int32(0) {
		goto _5
	}

	return *(*int32)(unsafe.Pointer(_pIn + 4*uintptr(_i)))

_5:
	_i = int32(_i + (*(*int32)(unsafe.Pointer(_pIn + 4*uintptr(_i+int32(1))))))
	if _i < _mx {
		goto _2
	}

	return int32(0)
}

// _1235sqlite3PagerJournalname is defined at sqlite3.c:54444:27
func _1235sqlite3PagerJournalname(tls crt.TLS, _pPager uintptr /* *TPager = SPager */) (r uintptr /* *int8 */) {
	return *(*uintptr)(unsafe.Pointer(_pPager + 216))
}

// _1236sqlite3Utf16ByteLen is defined at sqlite3.c:28056:20
func _1236sqlite3Utf16ByteLen(tls crt.TLS, _zIn uintptr /* *void */, _nChar int32) (r int32) {
	var (
		_c   int32
		_z   uintptr // *uint8
		_n   int32
		_c2  int32
		_    = _c2
		_1c2 int32
	)
	_z = _zIn
	_n = int32(0)

	goto _1

_3:
	if _n >= _nChar {
		goto _4
	}

	if _c < int32(0xd800) || _c >= int32(0xe000) || 1 == 0 {
		goto _5
	}

	_c2 = int32(*(*uint8)(unsafe.Pointer(postinc19(&_z)))) << (uint(8) % 32)
_5:
	goto _3

_4:
	goto _2

_1:
_6:
	if _n >= _nChar {
		goto _7
	}

	_c = int32(*(*uint8)(unsafe.Pointer(postinc19(&_z))))
	_c = int32(_c + (int32(*(*uint8)(unsafe.Pointer(postinc19(&_z)))) << (uint(8) % 32)))
	if _c < int32(0xd800) || _c >= int32(0xe000) || 1 == 0 {
		goto _8
	}

	_1c2 = int32(*(*uint8)(unsafe.Pointer(postinc19(&_z))))
	_1c2 = int32(_1c2 + (int32(*(*uint8)(unsafe.Pointer(postinc19(&_z)))) << (uint(8) % 32)))
	_c = ((_1c2 & int32(0x3ff)) + ((_c & int32(0x3f)) << (uint(10) % 32))) + (((_c & int32(0x3c0)) + int32(0x40)) << (uint(10) % 32))
_8:
	_n++
	goto _6

_7:
_2:
	return int32(int64(_z - _zIn))
}

type SVdbeOpList struct {
	Xopcode uint8
	Xp1     int8
	Xp2     int8
	Xp3     int8
}

// _1237sqlite3ReadSchema is defined at sqlite3.c:117180:20
func _1237sqlite3ReadSchema(tls crt.TLS, _pParse uintptr /* *TParse = SParse */) (r int32) {
	var (
		_rc int32
		_db uintptr // *Tsqlite3 = Ssqlite3
	)
	_rc = int32(0)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))

	if (*(*uint8)(unsafe.Pointer((_db + 176) + 5))) != 0 {
		goto _1
	}

	_rc = _220sqlite3Init(tls, _db, _pParse+8)
_1:
	if _rc == int32(0) {
		goto _2
	}

	*(*int32)(unsafe.Pointer(_pParse + 24)) = _rc
	(*(*int32)(unsafe.Pointer(_pParse + 48)))++
_2:
	return _rc
}

// _1238sqlite3PragmaVtabRegister is defined at sqlite3.c:116773:23
func _1238sqlite3PragmaVtabRegister(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _zName uintptr /* *int8 */) (r uintptr /* *TModule = SModule */) {
	var _pName uintptr // *TPragmaName = struct{XzName *in...XnPragCName uint8;XiArg uint32;}

	_pName = _1420pragmaLocate(tls, _zName+uintptr(7))
	if _pName != 0 {
		goto _1
	}

	return null

_1:
	if (int32(*(*uint8)(unsafe.Pointer(_pName + 9))) & int32(48)) != int32(0) {
		goto _2
	}

	return null

_2:
	return _862sqlite3VtabCreateModule(tls, _db, _zName, _1421pragmaVtabModule, _pName, null)
}

// _1239sqlite3VtabEponymousTableInit is defined at sqlite3.c:127450:20
func _1239sqlite3VtabEponymousTableInit(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pMod uintptr /* *TModule = SModule */) (r int32) {
	esc := crt.MustMalloc(8)
	var (
		_pModule uintptr // *Tsqlite3_module = Ssqlite3_module
		_pTab    uintptr // *TTable = STable
		_zErr    = esc   // **int8
		_rc      int32
		_db      uintptr // *Tsqlite3 = Ssqlite3
	)
	defer crt.Free(esc)
	_pModule = *(*uintptr)(unsafe.Pointer(_pMod))
	*(*uintptr)(unsafe.Pointer(_zErr)) = 0
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	if (*(*uintptr)(unsafe.Pointer(_pMod + 32))) == 0 {
		goto _1
	}

	return int32(1)

_1:
	if (*(*uintptr)(unsafe.Pointer(_pModule + 8))) == 0 || (*(*uintptr)(unsafe.Pointer(_pModule + 8))) == (*(*uintptr)(unsafe.Pointer(_pModule + 16))) {
		goto _2
	}

	return int32(0)

_2:
	_pTab = _295sqlite3DbMallocZero(tls, _db, uint64(128))
	if _pTab != 0 {
		goto _3
	}

	return int32(0)

_3:
	*(*uintptr)(unsafe.Pointer(_pTab)) = _183sqlite3DbStrDup(tls, _db, *(*uintptr)(unsafe.Pointer(_pMod + 8)))
	if (*(*uintptr)(unsafe.Pointer(_pTab))) != 0 {
		goto _4
	}

	_181sqlite3DbFree(tls, _db, _pTab)
	return int32(0)

_4:
	*(*uintptr)(unsafe.Pointer(_pMod + 32)) = _pTab
	*(*uint32)(unsafe.Pointer(_pTab + 60)) = uint32(1)
	*(*uintptr)(unsafe.Pointer(_pTab + 112)) = *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_db + 32)) + 24))

	*(*int16)(unsafe.Pointer(_pTab + 68)) = int16(-1)
	_1422addModuleArgument(tls, _db, _pTab, _183sqlite3DbStrDup(tls, _db, *(*uintptr)(unsafe.Pointer(_pTab))))
	_1422addModuleArgument(tls, _db, _pTab, null)
	_1422addModuleArgument(tls, _db, _pTab, _183sqlite3DbStrDup(tls, _db, *(*uintptr)(unsafe.Pointer(_pTab))))
	_rc = _1036vtabCallConstructor(tls, _db, _pTab, _pMod, *(*uintptr)(unsafe.Pointer(_pModule + 16)), _zErr)
	if _rc == 0 {
		goto _5
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+429 /* "%s" */, *(*uintptr)(unsafe.Pointer(_zErr)))
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_zErr)))
	_370sqlite3VtabEponymousTableClear(tls, _db, _pMod)
	return int32(0)

_5:
	return int32(1)
}

// _1240sqlite3VdbeAddOp2 is defined at sqlite3.c:72406:20
func _1240sqlite3VdbeAddOp2(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */, _op int32, _p1 int32, _p2 int32) (r int32) {
	return _1241sqlite3VdbeAddOp3(tls, _p, _op, _p1, _p2, int32(0))
}

// _1241sqlite3VdbeAddOp3 is defined at sqlite3.c:72355:20
func _1241sqlite3VdbeAddOp3(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */, _op int32, _p1 int32, _p2 int32, _p3 int32) (r int32) {
	var (
		_i   int32
		_pOp uintptr // *TVdbeOp = SVdbeOp
	)
	_i = *(*int32)(unsafe.Pointer(_p + 184))

	if (*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 24))) + 60))) > _i {
		goto _1
	}

	return _1423growOp3(tls, _p, _op, _p1, _p2, _p3)

_1:
	(*(*int32)(unsafe.Pointer(_p + 184)))++
	_pOp = (*(*uintptr)(unsafe.Pointer(_p + 104))) + 24*uintptr(_i)
	*(*uint8)(unsafe.Pointer(_pOp)) = uint8(_op)
	*(*uint16)(unsafe.Pointer(_pOp + 2)) = uint16(0)
	*(*int32)(unsafe.Pointer(_pOp + 4)) = _p1
	*(*int32)(unsafe.Pointer(_pOp + 8)) = _p2
	*(*int32)(unsafe.Pointer(_pOp + 12)) = _p3
	*(*uintptr)(unsafe.Pointer(_pOp + 16)) = null
	*(*int8)(unsafe.Pointer(_pOp + 1)) = int8(0)
	return _i
}

// _1242growOpArray is defined at sqlite3.c:72287:12
func _1242growOpArray(tls crt.TLS, _v uintptr /* *TVdbe = SVdbe */, _nOp int32) (r int32) {
	var (
		_pNew uintptr // *TVdbeOp = SVdbeOp
		_p    uintptr // *TParse = SParse
		_nNew int32
	)
	_p = *(*uintptr)(unsafe.Pointer(_v + 24))
	_nNew = func() int32 {
		if (*(*int32)(unsafe.Pointer(_p + 60))) != 0 {
			return (*(*int32)(unsafe.Pointer(_p + 60))) * int32(2)
		}
		return int32(42)
	}()

	if _nNew <= (*(*int32)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_p))) + 124) + 20))) {
		goto _1
	}

	_178sqlite3OomFault(tls, *(*uintptr)(unsafe.Pointer(_p)))
	return int32(7)

_1:
	_pNew = _869sqlite3DbRealloc(tls, *(*uintptr)(unsafe.Pointer(_p)), *(*uintptr)(unsafe.Pointer(_v + 104)), uint64(uint64(_nNew)*uint64(24)))
	if _pNew == 0 {
		goto _2
	}

	*(*int32)(unsafe.Pointer(_p + 64)) = _744sqlite3DbMallocSize(tls, *(*uintptr)(unsafe.Pointer(_p)), _pNew)
	*(*int32)(unsafe.Pointer(_p + 60)) = int32(uint64(*(*int32)(unsafe.Pointer(_p + 64))) / uint64(24))
	*(*uintptr)(unsafe.Pointer(_v + 104)) = _pNew
_2:
	return func() int32 {
		if _pNew != 0 {
			return int32(0)
		}
		return int32(7)
	}()
}

// _1243sqlite3OpcodeProperty [168]uint8, escapes: true, sqlite3.c:18491:36
var _1243sqlite3OpcodeProperty = ds + 9308

// _1244sqlite3BtreeSharable is defined at sqlite3.c:69599:20
func _1244sqlite3BtreeSharable(tls crt.TLS, _p uintptr /* *TBtree = SBtree */) (r int32) {
	return int32(*(*uint8)(unsafe.Pointer(_p + 17)))
}

// _1245vdbeChangeP4Full is defined at sqlite3.c:73157:29
func _1245vdbeChangeP4Full(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */, _pOp uintptr /* *TOp = SVdbeOp */, _zP4 uintptr /* *int8 */, _n int32) {
	if (*(*int8)(unsafe.Pointer(_pOp + 1))) == 0 {
		goto _1
	}

	_1099freeP4(tls, *(*uintptr)(unsafe.Pointer(_p)), int32(*(*int8)(unsafe.Pointer(_pOp + 1))), *(*uintptr)(unsafe.Pointer(_pOp + 16)))
	*(*int8)(unsafe.Pointer(_pOp + 1)) = int8(0)
	*(*uintptr)(unsafe.Pointer(_pOp + 16)) = null
_1:
	if _n >= int32(0) {
		goto _2
	}

	_1075sqlite3VdbeChangeP4(tls, _p, int32(int64((_pOp-(*(*uintptr)(unsafe.Pointer(_p + 104))))/24)), _zP4, _n)
	goto _3

_2:
	if _n != int32(0) {
		goto _4
	}

	_n = _211sqlite3Strlen30(tls, _zP4)
_4:
	*(*uintptr)(unsafe.Pointer(_pOp + 16)) = _618sqlite3DbStrNDup(tls, *(*uintptr)(unsafe.Pointer(_p)), _zP4, uint64(_n))
	*(*int8)(unsafe.Pointer(_pOp + 1)) = int8(-7)
_3:
}

type SReusableSpace struct {
	XpSpace  uintptr // *uint8
	XnFree   int32
	XnNeeded int32
}

// _1246resolveP2Values is defined at sqlite3.c:72748:13
func _1246resolveP2Values(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */, _pMaxFuncArgs uintptr /* *int32 */) {
	var (
		_nMaxArgs int32
		_pOp      uintptr // *TOp = SVdbeOp
		_pParse   uintptr // *TParse = SParse
		_aLabel   uintptr // *int32
		_n        int32
	)
	_nMaxArgs = *(*int32)(unsafe.Pointer(_pMaxFuncArgs))
	_pParse = *(*uintptr)(unsafe.Pointer(_p + 24))
	_aLabel = *(*uintptr)(unsafe.Pointer(_pParse + 88))
	set196b(&(*(*uint16)(unsafe.Pointer(_p + 194))), uint32(1))
	set197b(&(*(*uint16)(unsafe.Pointer(_p + 194))), uint32(0))
	_pOp = (*(*uintptr)(unsafe.Pointer(_p + 104))) + 24*uintptr((*(*int32)(unsafe.Pointer(_p + 184)))-int32(1))
_1:
	if int32(*(*uint8)(unsafe.Pointer(_pOp))) > int32(62) {
		goto _3
	}

	switch int32(*(*uint8)(unsafe.Pointer(_pOp))) {
	case int32(2):
		goto _5
	case int32(1):
		goto _6
	case int32(0):
		goto _7
	case int32(8):
		goto _8
	case int32(10):
		goto _9
	case int32(9):
		goto _10
	case int32(7):
		goto _11
	case int32(5):
		goto _12
	case int32(3):
		goto _13
	case int32(6):
		goto _14
	case int32(4):
		goto _15
	case int32(12):
		goto _16
	case int32(11):
		goto _17
	default:
		goto _18
	}
_5:
	if (*(*int32)(unsafe.Pointer(_pOp + 8))) == int32(0) {
		goto _19
	}

	set196b(&(*(*uint16)(unsafe.Pointer(_p + 194))), uint32(0))
_19:
_6:
_7:
	set197b(&(*(*uint16)(unsafe.Pointer(_p + 194))), uint32(1))
	goto _4

_8:
_9:
_10:
	set196b(&(*(*uint16)(unsafe.Pointer(_p + 194))), uint32(0))
	set197b(&(*(*uint16)(unsafe.Pointer(_p + 194))), uint32(1))
	goto _4

_11:
_12:
_13:
	*(*uintptr)(unsafe.Pointer(_pOp + 16)) = fp26(_687sqlite3BtreeNext)
	*(*int8)(unsafe.Pointer(_pOp + 1)) = int8(-5)

	goto _4

_14:
_15:
	*(*uintptr)(unsafe.Pointer(_pOp + 16)) = fp26(_688sqlite3BtreePrevious)
	*(*int8)(unsafe.Pointer(_pOp + 1)) = int8(-5)

	goto _4

_16:
	if (*(*int32)(unsafe.Pointer(_pOp + 8))) <= _nMaxArgs {
		goto _20
	}

	_nMaxArgs = *(*int32)(unsafe.Pointer(_pOp + 8))
_20:
	goto _4

_17:
	_n = *(*int32)(unsafe.Pointer((_pOp - 24) + 4))
	if _n <= _nMaxArgs {
		goto _21
	}

	_nMaxArgs = _n
_21:
_18:
	if (*(*int32)(unsafe.Pointer(_pOp + 8))) >= int32(0) {
		goto _22
	}

	*(*int32)(unsafe.Pointer(_pOp + 8)) = *(*int32)(unsafe.Pointer(_aLabel + 4*uintptr(int32(-1)-(*(*int32)(unsafe.Pointer(_pOp + 8))))))
_22:
	goto _4

_4:
_3:
	if _pOp != (*(*uintptr)(unsafe.Pointer(_p + 104))) {
		goto _23
	}

	goto _2

_23:
	_pOp -= 24
	goto _1

_2:
	_181sqlite3DbFree(tls, *(*uintptr)(unsafe.Pointer(_p)), *(*uintptr)(unsafe.Pointer(_pParse + 88)))
	*(*uintptr)(unsafe.Pointer(_pParse + 88)) = null
	*(*int32)(unsafe.Pointer(_pParse + 80)) = int32(0)
	*(*int32)(unsafe.Pointer(_pMaxFuncArgs)) = _nMaxArgs
}

// _1247allocSpace is defined at sqlite3.c:74063:13
func _1247allocSpace(tls crt.TLS, _p uintptr /* *SReusableSpace */, _pBuf uintptr /* *void */, _nByte int32) (r uintptr /* *void */) {
	if _pBuf != 0 {
		goto _1
	}

	_nByte = (_nByte + int32(7)) & int32(-8)
	if _nByte > (*(*int32)(unsafe.Pointer(_p + 8))) {
		goto _2
	}

	{
		p := &(*(*int32)(unsafe.Pointer(_p + 8)))
		*p = int32(int32(*p) - _nByte)
	}
	_pBuf = (*(*uintptr)(unsafe.Pointer(_p))) + uintptr(*(*int32)(unsafe.Pointer(_p + 8)))
	goto _3

_2:
	{
		p := &(*(*int32)(unsafe.Pointer(_p + 12)))
		*p = int32(int32(*p) + _nByte)
	}
_3:
_1:
	return _pBuf
}

// _1248sqlite3BtreeIncrblobCursor is defined at sqlite3.c:69533:21
func _1248sqlite3BtreeIncrblobCursor(tls crt.TLS, _pCur uintptr /* *TBtCursor = SBtCursor */) {
	{
		p := &(*(*uint8)(unsafe.Pointer(_pCur + 1)))
		*p = uint8(int32(*p) | int32(0x10))
	}
	*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pCur + 8))) + 19)) = uint8(1)
}

// _1249sqlite3BtreeEnterCursor is defined at sqlite3.c:59660:21
func _1249sqlite3BtreeEnterCursor(tls crt.TLS, _pCur uintptr /* *TBtCursor = SBtCursor */) {
	_139sqlite3BtreeEnter(tls, *(*uintptr)(unsafe.Pointer(_pCur + 8)))
}

// _1250sqlite3BtreeLeaveCursor is defined at sqlite3.c:59664:21
func _1250sqlite3BtreeLeaveCursor(tls crt.TLS, _pCur uintptr /* *TBtCursor = SBtCursor */) {
	_169sqlite3BtreeLeave(tls, *(*uintptr)(unsafe.Pointer(_pCur + 8)))
}

// _1251accessPayloadChecked is defined at sqlite3.c:64453:28
func _1251accessPayloadChecked(tls crt.TLS, _pCur uintptr /* *TBtCursor = SBtCursor */, _offset uint32, _amt uint32, _pBuf uintptr /* *void */) (r int32) {
	var _rc int32

	if int32(*(*uint8)(unsafe.Pointer(_pCur))) != int32(0) {
		goto _1
	}

	return int32(4)

_1:
	_rc = _1193btreeRestoreCursorPosition(tls, _pCur)
	if _rc != 0 {
		return _rc
	}

	return _972accessPayload(tls, _pCur, _offset, _amt, _pBuf, int32(0))
}

// _1252sqlite3azCompileOpt [2]*int8, escapes: true, sqlite3.c:66:19
var _1252sqlite3azCompileOpt = bss + 15480 // array of 2 pointer to char

func init() {
	*(*[2]uintptr)(unsafe.Pointer(_1252sqlite3azCompileOpt)) = [2]uintptr{
		0: ts + 24515, /* "HAVE_ISNAN" */
		1: ts + 24526, /* "THREADSAFE=1" */
	}
}

// _1253sqlite3PcacheShrink is defined at sqlite3.c:45527:21
func _1253sqlite3PcacheShrink(tls crt.TLS, _pCache uintptr /* *TPCache = SPCache */) {
	fn16(*(*uintptr)(unsafe.Pointer((_28sqlite3Config + 184) + 96)))(tls, *(*uintptr)(unsafe.Pointer(_pCache + 64)))
}

// _1254getSafetyLevel is defined at sqlite3.c:114342:11
func _1254getSafetyLevel(tls crt.TLS, _z uintptr /* *int8 */, _omitFull int32, _dflt uint8) (r uint8) {
	var (
		_i int32
		_n int32
	)
	if int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(uint8(*(*int8)(unsafe.Pointer(_z)))))))&int32(0x4) == 0 {
		goto _1
	}

	return uint8(_1002sqlite3Atoi(tls, _z))

_1:
	_n = _211sqlite3Strlen30(tls, _z)
	_i = int32(0)
_2:
	if _i >= int32(8) {
		goto _4
	}

	if int32(*(*uint8)(unsafe.Pointer(_1426iLength + uintptr(_i)))) != _n || Xsqlite3_strnicmp(tls, _1424zText+uintptr(*(*uint8)(unsafe.Pointer(_1425iOffset + uintptr(_i)))), _z, _n) != int32(0) || _omitFull != 0 && int32(*(*uint8)(unsafe.Pointer(_1427iValue + uintptr(_i)))) > int32(1) {
		goto _5
	}

	return *(*uint8)(unsafe.Pointer(_1427iValue + uintptr(_i)))

_5:
	_i++
	goto _2

_4:
	return _dflt
}

// _1255sqlite3NoopDestructor is defined at sqlite3.c:71156:13
func _1255sqlite3NoopDestructor(tls crt.TLS, _p uintptr /* *void */) {
}

// _1256clearSelect is defined at sqlite3.c:117754:13
func _1256clearSelect(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _p uintptr /* *TSelect = SSelect */, _bFree int32) {
	var _pPrior uintptr // *TSelect = SSelect

_1:
	if _p == 0 {
		goto _2
	}

	_pPrior = *(*uintptr)(unsafe.Pointer(_p + 72))
	_551sqlite3ExprListDelete(tls, _db, *(*uintptr)(unsafe.Pointer(_p)))
	_1339sqlite3SrcListDelete(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 32)))
	_777sqlite3ExprDelete(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 40)))
	_551sqlite3ExprListDelete(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 48)))
	_777sqlite3ExprDelete(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 56)))
	_551sqlite3ExprListDelete(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 64)))
	_777sqlite3ExprDelete(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 88)))
	_777sqlite3ExprDelete(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 96)))
	if *(*uintptr)(unsafe.Pointer(_p + 104)) == 0 {
		goto _3
	}

	_936sqlite3WithDelete(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 104)))
_3:
	if _bFree == 0 {
		goto _4
	}

	_376sqlite3DbFreeNN(tls, _db, _p)
_4:
	_p = _pPrior
	_bFree = int32(1)
	goto _1

_2:
}

// _1257fkTriggerDelete is defined at sqlite3.c:109110:13
func _1257fkTriggerDelete(tls crt.TLS, _dbMem uintptr /* *Tsqlite3 = Ssqlite3 */, _p uintptr /* *TTrigger = STrigger */) {
	var _pStep uintptr // *TTriggerStep = STriggerStep

	if _p == 0 {
		goto _1
	}

	_pStep = *(*uintptr)(unsafe.Pointer(_p + 56))
	_777sqlite3ExprDelete(tls, _dbMem, *(*uintptr)(unsafe.Pointer(_pStep + 32)))
	_551sqlite3ExprListDelete(tls, _dbMem, *(*uintptr)(unsafe.Pointer(_pStep + 40)))
	_1094sqlite3SelectDelete(tls, _dbMem, *(*uintptr)(unsafe.Pointer(_pStep + 16)))
	_777sqlite3ExprDelete(tls, _dbMem, *(*uintptr)(unsafe.Pointer(_p + 24)))
	_181sqlite3DbFree(tls, _dbMem, _p)
_1:
}

// _1258freeP4FuncCtx is defined at sqlite3.c:73038:29
func _1258freeP4FuncCtx(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _p uintptr /* *Tsqlite3_context = Ssqlite3_context */) {
	_1260freeEphemeralFunction(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 8)))
	_376sqlite3DbFreeNN(tls, _db, _p)
}

// _1259sqlite3KeyInfoUnref is defined at sqlite3.c:118741:21
func _1259sqlite3KeyInfoUnref(tls crt.TLS, _p uintptr /* *TKeyInfo = SKeyInfo */) {
	if _p == 0 {
		goto _1
	}

	(*(*uint32)(unsafe.Pointer(_p)))--
	if (*(*uint32)(unsafe.Pointer(_p))) != uint32(0) {
		goto _2
	}

	_376sqlite3DbFreeNN(tls, *(*uintptr)(unsafe.Pointer(_p + 16)), _p)
_2:
_1:
}

// _1260freeEphemeralFunction is defined at sqlite3.c:73023:13
func _1260freeEphemeralFunction(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pDef uintptr /* *TFuncDef = SFuncDef */) {
	if (int32(*(*uint16)(unsafe.Pointer(_pDef + 2))) & int32(0x10)) == int32(0) {
		goto _1
	}

	_376sqlite3DbFreeNN(tls, _db, _pDef)
_1:
}

// _1261freeP4Mem is defined at sqlite3.c:73034:29
func _1261freeP4Mem(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _p uintptr /* *TMem = Ssqlite3_value */) {
	if (*(*int32)(unsafe.Pointer(_p + 32))) == 0 {
		goto _1
	}

	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 24)))
_1:
	_376sqlite3DbFreeNN(tls, _db, _p)
}

// _1262pcache1InitBulk is defined at sqlite3.c:45842:12
func _1262pcache1InitBulk(tls crt.TLS, _pCache uintptr /* *TPCache1 = SPCache1 */) (r int32) {
	var (
		_szBulk int64
		_zBulk  uintptr // *int8
		_nBulk  int32
		_pX     uintptr // *TPgHdr1 = SPgHdr1
	)
	if (*(*int32)(unsafe.Pointer(_275pcache1_g + 88))) != int32(0) {
		goto _1
	}

	return int32(0)

_1:
	if (*(*uint32)(unsafe.Pointer(_pCache + 36))) >= uint32(3) {
		goto _2
	}

	return int32(0)

_2:
	_523sqlite3BeginBenignMalloc(tls)
	if (*(*int32)(unsafe.Pointer(_275pcache1_g + 88))) <= int32(0) {
		goto _3
	}

	_szBulk = int64(*(*int32)(unsafe.Pointer(_pCache + 24))) * int64(*(*int32)(unsafe.Pointer(_275pcache1_g + 88)))
	goto _4

_3:
	_szBulk = int64(-1024) * int64(*(*int32)(unsafe.Pointer(_275pcache1_g + 88)))
_4:
	if _szBulk <= (int64(*(*int32)(unsafe.Pointer(_pCache + 24))) * int64(*(*uint32)(unsafe.Pointer(_pCache + 36)))) {
		goto _5
	}

	_szBulk = int64(*(*int32)(unsafe.Pointer(_pCache + 24))) * int64(*(*uint32)(unsafe.Pointer(_pCache + 36)))
_5:
	_zBulk = set4(&(*(*uintptr)(unsafe.Pointer(_pCache + 80))), _198sqlite3Malloc(tls, uint64(_szBulk)))
	_524sqlite3EndBenignMalloc(tls)
	if _zBulk == 0 {
		goto _6
	}

	_nBulk = _109sqlite3MallocSize(tls, _zBulk) / (*(*int32)(unsafe.Pointer(_pCache + 24)))
_7:
	_pX = _zBulk + uintptr(*(*int32)(unsafe.Pointer(_pCache + 16)))
	*(*uintptr)(unsafe.Pointer(_pX)) = _zBulk
	*(*uintptr)(unsafe.Pointer(_pX + 8)) = _pX + 56
	*(*uint8)(unsafe.Pointer(_pX + 20)) = uint8(1)
	*(*uint8)(unsafe.Pointer(_pX + 21)) = uint8(0)
	*(*uintptr)(unsafe.Pointer(_pX + 24)) = *(*uintptr)(unsafe.Pointer(_pCache + 72))
	*(*uintptr)(unsafe.Pointer(_pCache + 72)) = _pX
	_zBulk += uintptr(*(*int32)(unsafe.Pointer(_pCache + 24)))
	if preinc47(&_nBulk) != 0 {
		goto _7
	}

_6:
	return bool2int((*(*uintptr)(unsafe.Pointer(_pCache + 72))) != 0)
}

// _1263setDateTimeToCurrent is defined at sqlite3.c:19778:12
func _1263setDateTimeToCurrent(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _p uintptr /* *TDateTime = SDateTime */) (r int32) {
	*(*int64)(unsafe.Pointer(_p)) = _1428sqlite3StmtCurrentTime(tls, _context)
	if (*(*int64)(unsafe.Pointer(_p))) <= int64(0) {
		goto _1
	}

	*(*int8)(unsafe.Pointer(_p + 40)) = int8(1)
	return int32(0)

	goto _2

_1:
	return int32(1)

_2:
	return r
}

// _1264setRawDateNumber is defined at sqlite3.c:19794:13
func _1264setRawDateNumber(tls crt.TLS, _p uintptr /* *TDateTime = SDateTime */, _r float64) {
	*(*float64)(unsafe.Pointer(_p + 32)) = _r
	*(*int8)(unsafe.Pointer(_p + 41)) = int8(1)
	if _r < float64(0) || _r >= float64(5.3734845e+06) {
		goto _1
	}

	*(*int64)(unsafe.Pointer(_p)) = int64((_r * float64(8.64e+07)) + float64(0.5))
	*(*int8)(unsafe.Pointer(_p + 40)) = int8(1)
_1:
}

// _1265parseDateOrTime is defined at sqlite3.c:19819:12
func _1265parseDateOrTime(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _zDate uintptr /* *int8 */, _p uintptr /* *TDateTime = SDateTime */) (r int32) {
	esc := crt.MustMalloc(8)
	var _r = esc // *float64
	defer crt.Free(esc)
	if _1429parseYyyyMmDd(tls, _zDate, _p) != int32(0) {
		goto _1
	}

	return int32(0)

	goto _2

_1:
	if _1430parseHhMmSs(tls, _zDate, _p) != int32(0) {
		goto _3
	}

	return int32(0)

	goto _4

_3:
	if _110sqlite3StrICmp(tls, _zDate, ts+24539 /* "now" */) != int32(0) || _1431sqlite3NotPureFunc(tls, _context) == 0 {
		goto _5
	}

	return _1263setDateTimeToCurrent(tls, _context, _p)

	goto _6

_5:
	if _808sqlite3AtoF(tls, _zDate, _r, _211sqlite3Strlen30(tls, _zDate), uint8(1)) == 0 {
		goto _7
	}

	_1264setRawDateNumber(tls, _p, *(*float64)(unsafe.Pointer(_r)))
	return int32(0)

_7:
_6:
_4:
_2:
	return int32(1)
}

// _1266parseModifier is defined at sqlite3.c:20096:12
func _1266parseModifier(tls crt.TLS, _pCtx uintptr /* *Tsqlite3_context = Ssqlite3_context */, _z uintptr /* *int8 */, _n int32, _p uintptr /* *TDateTime = SDateTime */) (r int32) {
	esc := crt.MustMalloc(80)
	var (
		_rc       = esc      // *int32
		_r        = esc + 16 // *float64
		_c1       int64
		_Z        int64
		_rRounder float64
		_i        int32
		_z2       uintptr    // *int8
		_tx       = esc + 32 // *TDateTime = SDateTime
		_day      int64
		_x        int32
		_y        int32
	)
	defer crt.Free(esc)
	*(*int32)(unsafe.Pointer(_rc)) = int32(1)
	switch int32(*(*uint8)(unsafe.Pointer(_215sqlite3UpperToLower + uintptr(uint8(*(*int8)(unsafe.Pointer(_z))))))) {
	case int32('l'):
		goto _2
	case int32('u'):
		goto _3
	case int32('w'):
		goto _4
	case int32('s'):
		goto _5
	case int32('+'):
		goto _6
	case int32('-'):
		goto _7
	case int32('0'):
		goto _8
	case int32('1'):
		goto _9
	case int32('2'):
		goto _10
	case int32('3'):
		goto _11
	case int32('4'):
		goto _12
	case int32('5'):
		goto _13
	case int32('6'):
		goto _14
	case int32('7'):
		goto _15
	case int32('8'):
		goto _16
	case int32('9'):
		goto _17
	default:
		goto _18
	}
_2:
	if Xsqlite3_stricmp(tls, _z, ts+24543 /* "localtime" */) != int32(0) || _1431sqlite3NotPureFunc(tls, _pCtx) == 0 {
		goto _19
	}

	_1106computeJD(tls, _p)
	{
		p := &(*(*int64)(unsafe.Pointer(_p)))
		*p = int64(int64(*p) + _1432localtimeOffset(tls, _p, _pCtx, _rc))
	}
	_1433clearYMD_HMS_TZ(tls, _p)
_19:
	goto _1

_3:
	if Xsqlite3_stricmp(tls, _z, ts+24553 /* "unixepoch" */) != int32(0) || (*(*int8)(unsafe.Pointer(_p + 41))) == 0 {
		goto _20
	}

	*(*float64)(unsafe.Pointer(_r)) = ((*(*float64)(unsafe.Pointer(_p + 32))) * float64(1000)) + float64(2.1086676e+14)
	if (*(*float64)(unsafe.Pointer(_r))) < float64(0) || (*(*float64)(unsafe.Pointer(_r))) >= float64(4.642690608e+14) {
		goto _22
	}

	_1433clearYMD_HMS_TZ(tls, _p)
	*(*int64)(unsafe.Pointer(_p)) = int64(*(*float64)(unsafe.Pointer(_r)))
	*(*int8)(unsafe.Pointer(_p + 40)) = int8(1)
	*(*int8)(unsafe.Pointer(_p + 41)) = int8(0)
	*(*int32)(unsafe.Pointer(_rc)) = int32(0)
_22:
	goto _21

_20:
	if Xsqlite3_stricmp(tls, _z, ts+24563 /* "utc" */) != int32(0) || _1431sqlite3NotPureFunc(tls, _pCtx) == 0 {
		goto _23
	}

	if int32(*(*int8)(unsafe.Pointer(_p + 45))) != int32(0) {
		goto _24
	}

	_1106computeJD(tls, _p)
	_c1 = _1432localtimeOffset(tls, _p, _pCtx, _rc)
	if (*(*int32)(unsafe.Pointer(_rc))) != int32(0) {
		goto _26
	}

	{
		p := &(*(*int64)(unsafe.Pointer(_p)))
		*p = int64(int64(*p) - _c1)
	}
	_1433clearYMD_HMS_TZ(tls, _p)
	{
		p := &(*(*int64)(unsafe.Pointer(_p)))
		*p = int64(int64(*p) + (_c1 - _1432localtimeOffset(tls, _p, _pCtx, _rc)))
	}
_26:
	*(*int8)(unsafe.Pointer(_p + 45)) = int8(1)
	goto _25

_24:
	*(*int32)(unsafe.Pointer(_rc)) = int32(0)
_25:
_23:
_21:
	goto _1

_4:
	if Xsqlite3_strnicmp(tls, _z, ts+24567 /* "weekday " */, int32(8)) != int32(0) || _808sqlite3AtoF(tls, _z+8, _r, _211sqlite3Strlen30(tls, _z+8), uint8(1)) == 0 || float64(set5(&_n, int32(*(*float64)(unsafe.Pointer(_r))))) != (*(*float64)(unsafe.Pointer(_r))) || _n < int32(0) || (*(*float64)(unsafe.Pointer(_r))) >= float64(7) {
		goto _27
	}

	_1109computeYMD_HMS(tls, _p)
	*(*int8)(unsafe.Pointer(_p + 44)) = int8(0)
	*(*int8)(unsafe.Pointer(_p + 40)) = int8(0)
	_1106computeJD(tls, _p)
	_Z = (((*(*int64)(unsafe.Pointer(_p))) + int64(129600000)) / int64(86400000)) % int64(7)
	if _Z <= int64(_n) {
		goto _28
	}

	_Z = int64(_Z - int64(7))
_28:
	{
		p := &(*(*int64)(unsafe.Pointer(_p)))
		*p = int64(int64(*p) + ((int64(_n) - _Z) * int64(86400000)))
	}
	_1433clearYMD_HMS_TZ(tls, _p)
	*(*int32)(unsafe.Pointer(_rc)) = int32(0)
_27:
	goto _1

_5:
	if Xsqlite3_strnicmp(tls, _z, ts+24576 /* "start of " */, int32(9)) == int32(0) {
		goto _29
	}

	goto _1

_29:
	if (*(*int8)(unsafe.Pointer(_p + 40))) != 0 || (*(*int8)(unsafe.Pointer(_p + 42))) != 0 || (*(*int8)(unsafe.Pointer(_p + 43))) != 0 {
		goto _30
	}

	goto _1

_30:
	_z += uintptr(9)
	_1107computeYMD(tls, _p)
	*(*int8)(unsafe.Pointer(_p + 43)) = int8(1)
	*(*int32)(unsafe.Pointer(_p + 20)) = set5(&(*(*int32)(unsafe.Pointer(_p + 24))), int32(0))
	*(*float64)(unsafe.Pointer(_p + 32)) = float64(0)
	*(*int8)(unsafe.Pointer(_p + 41)) = int8(0)
	*(*int8)(unsafe.Pointer(_p + 44)) = int8(0)
	*(*int8)(unsafe.Pointer(_p + 40)) = int8(0)
	if Xsqlite3_stricmp(tls, _z, ts+24586 /* "month" */) != int32(0) {
		goto _31
	}

	*(*int32)(unsafe.Pointer(_p + 16)) = int32(1)
	*(*int32)(unsafe.Pointer(_rc)) = int32(0)
	goto _32

_31:
	if Xsqlite3_stricmp(tls, _z, ts+24592 /* "year" */) != int32(0) {
		goto _33
	}

	*(*int32)(unsafe.Pointer(_p + 12)) = int32(1)
	*(*int32)(unsafe.Pointer(_p + 16)) = int32(1)
	*(*int32)(unsafe.Pointer(_rc)) = int32(0)
	goto _34

_33:
	if Xsqlite3_stricmp(tls, _z, ts+24597 /* "day" */) != int32(0) {
		goto _35
	}

	*(*int32)(unsafe.Pointer(_rc)) = int32(0)
_35:
_34:
_32:
	goto _1

_6:
_7:
_8:
_9:
_10:
_11:
_12:
_13:
_14:
_15:
_16:
_17:
	_n = int32(1)
_36:
	if (*(*int8)(unsafe.Pointer(_z + uintptr(_n)))) == 0 || int32(*(*int8)(unsafe.Pointer(_z + uintptr(_n)))) == int32(':') || int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(uint8(*(*int8)(unsafe.Pointer(_z + uintptr(_n))))))))&int32(0x1) != 0 {
		goto _38
	}

	_n++
	goto _36

_38:
	if _808sqlite3AtoF(tls, _z, _r, _n, uint8(1)) != 0 {
		goto _39
	}

	*(*int32)(unsafe.Pointer(_rc)) = int32(1)
	goto _1

_39:
	if int32(*(*int8)(unsafe.Pointer(_z + uintptr(_n)))) != int32(':') {
		goto _40
	}

	_z2 = _z
	if int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(uint8(*(*int8)(unsafe.Pointer(_z2)))))))&int32(0x4) != 0 {
		goto _41
	}

	_z2++
_41:
	crt.Xmemset(tls, _tx, int32(0), uint64(48))
	if _1430parseHhMmSs(tls, _z2, _tx) == 0 {
		goto _42
	}

	goto _1

_42:
	_1106computeJD(tls, _tx)
	{
		p := &(*(*int64)(unsafe.Pointer(_tx)))
		*p = int64(int64(*p) - int64(43200000))
	}
	_day = (*(*int64)(unsafe.Pointer(_tx))) / int64(86400000)
	{
		p := &(*(*int64)(unsafe.Pointer(_tx)))
		*p = int64(int64(*p) - (_day * int64(86400000)))
	}
	if int32(*(*int8)(unsafe.Pointer(_z))) != int32('-') {
		goto _43
	}

	*(*int64)(unsafe.Pointer(_tx)) = -(*(*int64)(unsafe.Pointer(_tx)))
_43:
	_1106computeJD(tls, _p)
	_1433clearYMD_HMS_TZ(tls, _p)
	{
		p := &(*(*int64)(unsafe.Pointer(_p)))
		*p = int64(int64(*p) + (*(*int64)(unsafe.Pointer(_tx))))
	}
	*(*int32)(unsafe.Pointer(_rc)) = int32(0)
	goto _1

_40:
	_z += uintptr(_n)
_44:
	if int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(uint8(*(*int8)(unsafe.Pointer(_z)))))))&int32(0x1) == 0 {
		goto _45
	}

	_z++
	goto _44

_45:
	_n = _211sqlite3Strlen30(tls, _z)
	if _n <= int32(10) && _n >= int32(3) {
		goto _46
	}

	goto _1

_46:
	if int32(*(*uint8)(unsafe.Pointer(_215sqlite3UpperToLower + uintptr(uint8(*(*int8)(unsafe.Pointer(_z + uintptr(_n-int32(1))))))))) != int32('s') {
		goto _47
	}

	_n--
_47:
	_1106computeJD(tls, _p)
	*(*int32)(unsafe.Pointer(_rc)) = int32(1)
	_rRounder = func() float64 {
		if (*(*float64)(unsafe.Pointer(_r))) < float64(0) {
			return float64(-0.5)
		}
		return float64(0.5)
	}()
	_i = int32(0)
_48:
	if _i >= int32(6) {
		goto _50
	}

	if int32(*(*uint8)(unsafe.Pointer((_1434aXformType + 32*uintptr(_i)) + 1))) != _n || Xsqlite3_strnicmp(tls, *(*uintptr)(unsafe.Pointer((_1434aXformType + 32*uintptr(_i)) + 8)), _z, _n) != int32(0) || (*(*float64)(unsafe.Pointer(_r))) <= (-(*(*float64)(unsafe.Pointer((_1434aXformType + 32*uintptr(_i)) + 16)))) || (*(*float64)(unsafe.Pointer(_r))) >= (*(*float64)(unsafe.Pointer((_1434aXformType + 32*uintptr(_i)) + 16))) {
		goto _51
	}

	switch int32(*(*uint8)(unsafe.Pointer(_1434aXformType + 32*uintptr(_i)))) {
	case int32(1):
		goto _53
	case int32(2):
		goto _54
	}
	goto _52

_53:
	_1109computeYMD_HMS(tls, _p)
	{
		p := &(*(*int32)(unsafe.Pointer(_p + 12)))
		*p = int32(int32(*p) + int32(*(*float64)(unsafe.Pointer(_r))))
	}
	_x = func() int32 {
		if (*(*int32)(unsafe.Pointer(_p + 12))) > int32(0) {
			return ((*(*int32)(unsafe.Pointer(_p + 12))) - int32(1)) / int32(12)
		}
		return ((*(*int32)(unsafe.Pointer(_p + 12))) - int32(12)) / int32(12)
	}()
	{
		p := &(*(*int32)(unsafe.Pointer(_p + 8)))
		*p = int32(int32(*p) + _x)
	}
	{
		p := &(*(*int32)(unsafe.Pointer(_p + 12)))
		*p = int32(int32(*p) - (_x * int32(12)))
	}
	*(*int8)(unsafe.Pointer(_p + 40)) = int8(0)
	*(*float64)(unsafe.Pointer(_r)) = float64((*(*float64)(unsafe.Pointer(_r))) - float64(int32(*(*float64)(unsafe.Pointer(_r)))))
	goto _52

_54:
	_y = int32(*(*float64)(unsafe.Pointer(_r)))
	_1109computeYMD_HMS(tls, _p)
	{
		p := &(*(*int32)(unsafe.Pointer(_p + 8)))
		*p = int32(int32(*p) + _y)
	}
	*(*int8)(unsafe.Pointer(_p + 40)) = int8(0)
	*(*float64)(unsafe.Pointer(_r)) = float64((*(*float64)(unsafe.Pointer(_r))) - float64(int32(*(*float64)(unsafe.Pointer(_r)))))
	goto _52

_52:
	_1106computeJD(tls, _p)
	{
		p := &(*(*int64)(unsafe.Pointer(_p)))
		*p = int64(int64(*p) + int64(((*(*float64)(unsafe.Pointer(_r)))*(*(*float64)(unsafe.Pointer((_1434aXformType + 32*uintptr(_i)) + 24))))+_rRounder))
	}
	*(*int32)(unsafe.Pointer(_rc)) = int32(0)
	goto _50

_51:
	_i++
	goto _48

_50:
	_1433clearYMD_HMS_TZ(tls, _p)
	goto _1

_18:
	goto _1

_1:
	return *(*int32)(unsafe.Pointer(_rc))
}

// _1267validJulianDay is defined at sqlite3.c:19852:12
func _1267validJulianDay(tls crt.TLS, _iJD int64) (r int32) {
	return bool2int((_iJD >= int64(0)) && (_iJD <= int64(464269060799999)))
}

// _1268datetimeError is defined at sqlite3.c:19680:13
func _1268datetimeError(tls crt.TLS, _p uintptr /* *TDateTime = SDateTime */) {
	crt.Xmemset(tls, _p, int32(0), uint64(48))
	*(*int8)(unsafe.Pointer(_p + 46)) = int8(1)
}

// _1269posixIoMethods Tsqlite3_io_methods = Ssqlite3_io_methods, escapes: true, sqlite3.c:35432:1
var _1269posixIoMethods = bss + 15496 // sqlite3_io_methods

func init() {
	*(*Ssqlite3_io_methods)(unsafe.Pointer(_1269posixIoMethods)) = Ssqlite3_io_methods{
		XiVersion:               int32(3),
		XxClose:                 fp10(_1435unixClose),
		XxRead:                  fp190(_1436unixRead),
		XxWrite:                 fp190(_1437unixWrite),
		XxTruncate:              fp117(_1438unixTruncate),
		XxSync:                  fp26(_1439unixSync),
		XxFileSize:              fp56(_1440unixFileSize),
		XxLock:                  fp26(_1441unixLock),
		XxUnlock:                fp26(_1442unixUnlock),
		XxCheckReservedLock:     fp56(_1443unixCheckReservedLock),
		XxFileControl:           fp78(_1444unixFileControl),
		XxSectorSize:            fp10(_1445unixSectorSize),
		XxDeviceCharacteristics: fp10(_1446unixDeviceCharacteristics),
		XxShmMap:                fp198(_1447unixShmMap),
		XxShmLock:               fp199(_1448unixShmLock),
		XxShmBarrier:            fp18(_1449unixShmBarrier),
		XxShmUnmap:              fp26(_1450unixShmUnmap),
		XxFetch:                 fp200(_1451unixFetch),
		XxUnfetch:               fp201(_1452unixUnfetch),
	}
}

type SunixInodeInfo struct {
	XfileId       SunixFileId
	XnShared      int32
	XeFileLock    uint8
	XbProcessLock uint8
	XnRef         int32
	XpShmNode     uintptr // *SunixShmNode
	XnLock        int32
	XpUnused      uintptr // *SUnixUnusedFd
	XpNext        uintptr // *SunixInodeInfo
	XpPrev        uintptr // *SunixInodeInfo
}

type SunixShm struct {
	XpShmNode   uintptr // *SunixShmNode
	XpNext      uintptr // *SunixShm
	XhasMutex   uint8
	Xid         uint8
	XsharedMask uint16
	XexclMask   uint16
}

// _1270nUnusedFd uint32, escapes: false, sqlite3.c:31494:21
var _1270nUnusedFd uint32

// _1271inodeList *TunixInodeInfo = SunixInodeInfo, escapes: false, sqlite3.c:31493:22
var _1271inodeList uintptr

// _1272unixTempFileDir is defined at sqlite3.c:35836:19
func _1272unixTempFileDir(tls crt.TLS) (r uintptr /* *int8 */) {
	esc := crt.MustMalloc(144)
	var (
		_i    uint32
		_buf  = esc   // *Sstat64
		_zDir uintptr // *int8
	)
	defer crt.Free(esc)
	_i = uint32(0)
	_zDir = Xsqlite3_temp_directory
	if (*(*uintptr)(unsafe.Pointer(_1453azDirs))) != 0 {
		goto _1
	}

	*(*uintptr)(unsafe.Pointer(_1453azDirs)) = crt.Xgetenv(tls, ts+24601 /* "SQLITE_TMPDIR" */)
_1:
	if (*(*uintptr)(unsafe.Pointer(_1453azDirs + 8))) != 0 {
		goto _2
	}

	*(*uintptr)(unsafe.Pointer(_1453azDirs + 8)) = crt.Xgetenv(tls, ts+24615 /* "TMPDIR" */)
_2:
_3:
	if _zDir == 0 || fn58(*(*uintptr)(unsafe.Pointer((_1118aSyscall + 96) + 8)))(tls, _zDir, _buf) != int32(0) || ((*(*uint32)(unsafe.Pointer(_buf + 24)))&uint32(0170000)) != uint32(040000) || fn50(*(*uintptr)(unsafe.Pointer((_1118aSyscall + 48) + 8)))(tls, _zDir, int32(03)) != int32(0) {
		goto _5
	}

	return _zDir

_5:
	if uint64(_i) < uint64(6) {
		goto _6
	}

	goto _4

_6:
	_zDir = *(*uintptr)(unsafe.Pointer(_1453azDirs + 8*uintptr(postinc53(&_i))))
	goto _3

_4:
	return null
}

// _1273getFileMode is defined at sqlite3.c:35967:12
func _1273getFileMode(tls crt.TLS, _zFile uintptr /* *int8 */, _pMode uintptr /* *Tmode_t = T__mode_t = uint32 */, _pUid uintptr /* *Tuid_t = T__uid_t = uint32 */, _pGid uintptr /* *Tgid_t = T__gid_t = uint32 */) (r int32) {
	esc := crt.MustMalloc(144)
	var (
		_sStat = esc // *Sstat64
		_rc    int32
	)
	defer crt.Free(esc)
	_rc = int32(0)
	if int32(0) != fn58(*(*uintptr)(unsafe.Pointer((_1118aSyscall + 96) + 8)))(tls, _zFile, _sStat) {
		goto _1
	}

	*(*uint32)(unsafe.Pointer(_pMode)) = uint32((*(*uint32)(unsafe.Pointer(_sStat + 24))) & uint32(0777))
	*(*uint32)(unsafe.Pointer(_pUid)) = uint32(*(*uint32)(unsafe.Pointer(_sStat + 28)))
	*(*uint32)(unsafe.Pointer(_pGid)) = uint32(*(*uint32)(unsafe.Pointer(_sStat + 32)))
	goto _2

_1:
	_rc = int32(1802)
_2:
	return _rc
}

// _1274posixOpen is defined at sqlite3.c:30722:12
func _1274posixOpen(tls crt.TLS, _zFile uintptr /* *int8 */, _flags int32, _mode int32) (r int32) {
	return crt.Xopen64(tls, _zFile, _flags, _mode)
}

// _1275openDirectory is defined at sqlite3.c:33908:12
func _1275openDirectory(tls crt.TLS, _zFilename uintptr /* *int8 */, _pFd uintptr /* *int32 */) (r int32) {
	esc := crt.MustMalloc(513)
	var (
		_ii       int32
		_fd       int32
		_zDirname = esc // *[513]int8
	)
	defer crt.Free(esc)
	_fd = int32(-1)
	Xsqlite3_snprintf(tls, int32(512), _zDirname, ts+429 /* "%s" */, _zFilename)
	_ii = int32(crt.Xstrlen(tls, _zDirname))
_1:
	if _ii <= int32(0) || int32(*(*int8)(unsafe.Pointer(_zDirname + uintptr(_ii)))) == int32('/') {
		goto _3
	}

	_ii--
	goto _1

_3:
	if _ii <= int32(0) {
		goto _4
	}

	*(*int8)(unsafe.Pointer(_zDirname + uintptr(_ii))) = int8('\x00')
	goto _5

_4:
	if int32(*(*int8)(unsafe.Pointer(_zDirname))) == int32('/') {
		goto _6
	}

	*(*int8)(unsafe.Pointer(_zDirname)) = int8('.')
_6:
	*(*int8)(unsafe.Pointer(_zDirname + 1)) = int8(0)
_5:
	_fd = _1115robust_open(tls, _zDirname, int32(0), uint32(0))
	if _fd < int32(0) {
		goto _7
	}

_7:
	*(*int32)(unsafe.Pointer(_pFd)) = _fd
	if _fd < int32(0) {
		goto _8
	}

	return int32(0)

_8:
	return _1116unixLogErrorAtLine(tls, _844sqlite3CantopenError(tls, int32(33927)), ts+23933 /* "openDirectory" */, _zDirname, int32(33927))
}

// _1276unixGetpagesize is defined at sqlite3.c:34426:12
func _1276unixGetpagesize(tls crt.TLS) (r int32) {
	return int32(crt.Xsysconf(tls, int32(30)))
}

// _1277nolockIoMethods Tsqlite3_io_methods = Ssqlite3_io_methods, escapes: true, sqlite3.c:35442:1
var _1277nolockIoMethods = bss + 15648 // sqlite3_io_methods

func init() {
	*(*Ssqlite3_io_methods)(unsafe.Pointer(_1277nolockIoMethods)) = Ssqlite3_io_methods{
		XiVersion:               int32(3),
		XxClose:                 fp10(_1454nolockClose),
		XxRead:                  fp190(_1436unixRead),
		XxWrite:                 fp190(_1437unixWrite),
		XxTruncate:              fp117(_1438unixTruncate),
		XxSync:                  fp26(_1439unixSync),
		XxFileSize:              fp56(_1440unixFileSize),
		XxLock:                  fp26(_1455nolockLock),
		XxUnlock:                fp26(_1456nolockUnlock),
		XxCheckReservedLock:     fp56(_1457nolockCheckReservedLock),
		XxFileControl:           fp78(_1444unixFileControl),
		XxSectorSize:            fp10(_1445unixSectorSize),
		XxDeviceCharacteristics: fp10(_1446unixDeviceCharacteristics),
		XxShmLock:               fp199(_1448unixShmLock),
		XxShmBarrier:            fp18(_1449unixShmBarrier),
		XxShmUnmap:              fp26(_1450unixShmUnmap),
		XxFetch:                 fp200(_1451unixFetch),
		XxUnfetch:               fp201(_1452unixUnfetch),
	}
}

// _1278findInodeInfo is defined at sqlite3.c:31650:12
func _1278findInodeInfo(tls crt.TLS, _pFile uintptr /* *TunixFile = SunixFile */, _ppInode uintptr /* **TunixInodeInfo = SunixInodeInfo */) (r int32) {
	esc := crt.MustMalloc(160)
	var (
		_rc      int32
		_fd      int32
		_fileId  = esc      // *SunixFileId
		_statbuf = esc + 16 // *Sstat64
		_pInode  uintptr    // *TunixInodeInfo = SunixInodeInfo
	)
	defer crt.Free(esc)
	_pInode = 0

	_fd = *(*int32)(unsafe.Pointer(_pFile + 24))
	_rc = fn172(*(*uintptr)(unsafe.Pointer((_1118aSyscall + 120) + 8)))(tls, _fd, _statbuf)
	if _rc == int32(0) {
		goto _1
	}

	_1280storeLastErrno(tls, _pFile, *(*int32)(unsafe.Pointer(crt.X__errno_location(tls))))
	return int32(10)

_1:
	crt.Xmemset(tls, _fileId, int32(0), uint64(16))
	*(*uint64)(unsafe.Pointer(_fileId)) = uint64(*(*uint64)(unsafe.Pointer(_statbuf)))
	*(*uint64)(unsafe.Pointer(_fileId + 8)) = uint64(*(*uint64)(unsafe.Pointer(_statbuf + 8)))

	_pInode = _1271inodeList
_2:
	if _pInode == 0 || crt.Xmemcmp(tls, _fileId, _pInode, uint64(16)) == 0 {
		goto _3
	}

	_pInode = *(*uintptr)(unsafe.Pointer(_pInode + 56))
	goto _2

_3:
	if _pInode != 0 {
		goto _4
	}

	_pInode = Xsqlite3_malloc64(tls, uint64(72))
	if _pInode != 0 {
		goto _6
	}

	return int32(7)

_6:
	crt.Xmemset(tls, _pInode, int32(0), uint64(72))
	crt.Xmemcpy(tls, _pInode, _fileId, uint64(16))
	*(*int32)(unsafe.Pointer(_pInode + 24)) = int32(1)
	*(*uintptr)(unsafe.Pointer(_pInode + 56)) = _1271inodeList
	*(*uintptr)(unsafe.Pointer(_pInode + 64)) = null
	if _1271inodeList == 0 {
		goto _7
	}

	*(*uintptr)(unsafe.Pointer(_1271inodeList + 64)) = _pInode
_7:
	_1271inodeList = _pInode
	goto _5

_4:
	(*(*int32)(unsafe.Pointer(_pInode + 24)))++
_5:
	*(*uintptr)(unsafe.Pointer(_ppInode)) = _pInode
	return int32(0)
}

// _1279dotlockIoMethods Tsqlite3_io_methods = Ssqlite3_io_methods, escapes: true, sqlite3.c:35452:1
var _1279dotlockIoMethods = bss + 15800 // sqlite3_io_methods

func init() {
	*(*Ssqlite3_io_methods)(unsafe.Pointer(_1279dotlockIoMethods)) = Ssqlite3_io_methods{
		XiVersion:               int32(1),
		XxClose:                 fp10(_1458dotlockClose),
		XxRead:                  fp190(_1436unixRead),
		XxWrite:                 fp190(_1437unixWrite),
		XxTruncate:              fp117(_1438unixTruncate),
		XxSync:                  fp26(_1439unixSync),
		XxFileSize:              fp56(_1440unixFileSize),
		XxLock:                  fp26(_1459dotlockLock),
		XxUnlock:                fp26(_1460dotlockUnlock),
		XxCheckReservedLock:     fp56(_1461dotlockCheckReservedLock),
		XxFileControl:           fp78(_1444unixFileControl),
		XxSectorSize:            fp10(_1445unixSectorSize),
		XxDeviceCharacteristics: fp10(_1446unixDeviceCharacteristics),
		XxShmLock:               fp199(_1448unixShmLock),
		XxShmBarrier:            fp18(_1449unixShmBarrier),
		XxShmUnmap:              fp26(_1450unixShmUnmap),
		XxFetch:                 fp200(_1451unixFetch),
		XxUnfetch:               fp201(_1452unixUnfetch),
	}
}

// _1280storeLastErrno is defined at sqlite3.c:31589:13
func _1280storeLastErrno(tls crt.TLS, _pFile uintptr /* *TunixFile = SunixFile */, _error int32) {
	*(*int32)(unsafe.Pointer(_pFile + 32)) = _error
}

// _1281verifyDbFile is defined at sqlite3.c:31755:13
func _1281verifyDbFile(tls crt.TLS, _pFile uintptr /* *TunixFile = SunixFile */) {
	esc := crt.MustMalloc(144)
	var (
		_buf = esc // *Sstat64
		_rc  int32
	)
	defer crt.Free(esc)
	if (int32(*(*uint16)(unsafe.Pointer(_pFile + 30))) & int32(0x80)) == 0 {
		goto _1
	}

	return

_1:
	_rc = fn172(*(*uintptr)(unsafe.Pointer((_1118aSyscall + 120) + 8)))(tls, *(*int32)(unsafe.Pointer(_pFile + 24)), _buf)
	if _rc == int32(0) {
		goto _2
	}

	Xsqlite3_log(tls, int32(28), ts+24622 /* "cannot fstat db file %s" */, *(*uintptr)(unsafe.Pointer(_pFile + 56)))
	return

_2:
	if (*(*uint64)(unsafe.Pointer(_buf + 16))) != uint64(0) {
		goto _3
	}

	Xsqlite3_log(tls, int32(28), ts+24646 /* "file unlinked while open: %s" */, *(*uintptr)(unsafe.Pointer(_pFile + 56)))
	return

_3:
	if (*(*uint64)(unsafe.Pointer(_buf + 16))) <= uint64(1) {
		goto _4
	}

	Xsqlite3_log(tls, int32(28), ts+24675 /* "multiple links to file: %s" */, *(*uintptr)(unsafe.Pointer(_pFile + 56)))
	return

_4:
	if _1462fileHasMoved(tls, _pFile) == 0 {
		goto _5
	}

	Xsqlite3_log(tls, int32(28), ts+24702 /* "file renamed while open: %s" */, *(*uintptr)(unsafe.Pointer(_pFile + 56)))
	return

_5:
}

// _1282walBusyLock is defined at sqlite3.c:56752:12
func _1282walBusyLock(tls crt.TLS, _pWal uintptr /* *TWal = SWal */, _xBusy uintptr /* *func(crt.TLS, uintptr) int32 */, _pBusyArg uintptr /* *void */, _lockIdx int32, _n int32) (r int32) {
	var _rc int32

_1:
	_rc = _882walLockExclusive(tls, _pWal, _lockIdx, _n)
	if ((_xBusy != 0) && (_rc == int32(5))) && (fn12(_xBusy)(tls, _pBusyArg) != 0) {
		goto _1
	}

	return _rc
}

// _1283walIndexReadHdr is defined at sqlite3.c:57178:12
func _1283walIndexReadHdr(tls crt.TLS, _pWal uintptr /* *TWal = SWal */, _pChanged uintptr /* *int32 */) (r int32) {
	esc := crt.MustMalloc(8)
	var (
		_rc     int32
		_badHdr int32
		_page0  = esc // **Tu32 = uint32
	)
	defer crt.Free(esc)

	_rc = _1294walIndexPage(tls, _pWal, int32(0), _page0)
	if _rc == int32(0) {
		goto _1
	}

	return _rc

_1:
	_badHdr = func() int32 {
		if (*(*uintptr)(unsafe.Pointer(_page0))) != 0 {
			return _1463walIndexTryHdr(tls, _pWal, _pChanged)
		}
		return int32(1)
	}()

	if _badHdr == 0 {
		goto _2
	}

	if (int32(*(*uint8)(unsafe.Pointer(_pWal + 66))) & int32(2)) == 0 {
		goto _3
	}

	if int32(0) != set5(&_rc, _879walLockShared(tls, _pWal, int32(0))) {
		goto _5
	}

	_880walUnlockShared(tls, _pWal, int32(0))
	_rc = int32(264)
_5:
	goto _4

_3:
	if int32(0) != set5(&_rc, _882walLockExclusive(tls, _pWal, int32(0), int32(1))) {
		goto _6
	}

	*(*uint8)(unsafe.Pointer(_pWal + 64)) = uint8(1)
	if int32(0) != set5(&_rc, _1294walIndexPage(tls, _pWal, int32(0), _page0)) {
		goto _7
	}

	_badHdr = _1463walIndexTryHdr(tls, _pWal, _pChanged)
	if _badHdr == 0 {
		goto _8
	}

	_rc = _1464walIndexRecover(tls, _pWal)
	*(*int32)(unsafe.Pointer(_pChanged)) = int32(1)
_8:
_7:
	*(*uint8)(unsafe.Pointer(_pWal + 64)) = uint8(0)
	_884walUnlockExclusive(tls, _pWal, int32(0), int32(1))
_6:
_4:
_2:
	if _badHdr != int32(0) || (*(*uint32)(unsafe.Pointer(_pWal + 72))) == uint32(3007000) {
		goto _9
	}

	_rc = _844sqlite3CantopenError(tls, int32(57233))
_9:
	return _rc
}

// _1284walPagesize is defined at sqlite3.c:56770:12
func _1284walPagesize(tls crt.TLS, _pWal uintptr /* *TWal = SWal */) (r int32) {
	return (int32(*(*uint16)(unsafe.Pointer((_pWal + 72) + 14))) & int32(0xfe00)) + ((int32(*(*uint16)(unsafe.Pointer((_pWal + 72) + 14))) & int32(0x1)) << (uint(16) % 32))
}

// _1285walCheckpoint is defined at sqlite3.c:56838:12
func _1285walCheckpoint(tls crt.TLS, _pWal uintptr /* *TWal = SWal */, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _eMode int32, _xBusy uintptr /* *func(crt.TLS, uintptr) int32 */, _pBusyArg uintptr /* *void */, _sync_flags int32, _zBuf uintptr /* *Tu8 = uint8 */) (r int32) {
	esc := crt.MustMalloc(84)
	var (
		_rc          int32
		_szPage      int32
		_pIter       = esc      // **TWalIterator = SWalIterator
		_iDbpage     = esc + 16 // *Tu32 = uint32
		_iFrame      = esc + 32 // *Tu32 = uint32
		_mxSafeFrame uint32
		_mxPage      uint32
		_i           int32
		_pInfo       uintptr // *TWalCkptInfo = SWalCkptInfo
		_y           uint32
		_nSize       = esc + 48 // *Ti64 = Tsqlite_int64 = int64
		_nBackfill   uint32
		_nReq        = esc + 64 // *Ti64 = Tsqlite_int64 = int64
		_iOffset     int64
		_szDb        int64
		_salt1       = esc + 80 // *Tu32 = uint32
	)
	defer crt.Free(esc)
	_rc = int32(0)
	*(*uintptr)(unsafe.Pointer(_pIter)) = 0
	*(*uint32)(unsafe.Pointer(_iDbpage)) = uint32(0)
	*(*uint32)(unsafe.Pointer(_iFrame)) = uint32(0)
	_szPage = _1284walPagesize(tls, _pWal)
	_pInfo = _1148walCkptInfo(tls, _pWal)
	if (*(*uint32)(unsafe.Pointer(_pInfo))) >= (*(*uint32)(unsafe.Pointer((_pWal + 72) + 16))) {
		goto _1
	}

	_rc = _1465walIteratorInit(tls, _pWal, _pIter)
	if _rc == int32(0) {
		goto _2
	}

	return _rc

_2:
	_mxSafeFrame = *(*uint32)(unsafe.Pointer((_pWal + 72) + 16))
	_mxPage = *(*uint32)(unsafe.Pointer((_pWal + 72) + 20))
	_i = int32(1)
_3:
	if _i >= int32(5) {
		goto _5
	}

	_y = *(*uint32)(unsafe.Pointer((_pInfo + 4) + 4*uintptr(_i)))
	if _mxSafeFrame <= _y {
		goto _6
	}

	_rc = _1282walBusyLock(tls, _pWal, _xBusy, _pBusyArg, int32(3)+_i, int32(1))
	if _rc != int32(0) {
		goto _7
	}

	*(*uint32)(unsafe.Pointer((_pInfo + 4) + 4*uintptr(_i))) = func() uint32 {
		if _i == int32(1) {
			return _mxSafeFrame
		}
		return uint32(0xffffffff)
	}()
	_884walUnlockExclusive(tls, _pWal, int32(3)+_i, int32(1))
	goto _8

_7:
	if _rc != int32(5) {
		goto _9
	}

	_mxSafeFrame = _y
	_xBusy = null
	goto _10

_9:
	goto _walcheckpoint_out

_10:
_8:
_6:
	_i++
	goto _3

_5:
	if (*(*uint32)(unsafe.Pointer(_pInfo))) >= _mxSafeFrame || set5(&_rc, _1282walBusyLock(tls, _pWal, _xBusy, _pBusyArg, int32(3), int32(1))) != int32(0) {
		goto _11
	}

	_nBackfill = *(*uint32)(unsafe.Pointer(_pInfo))
	*(*uint32)(unsafe.Pointer(_pInfo + 32)) = _mxSafeFrame
	_rc = _354sqlite3OsSync(tls, *(*uintptr)(unsafe.Pointer(_pWal + 16)), (_sync_flags>>(uint(2)%32))&int32(0x3))
	if _rc != int32(0) {
		goto _12
	}

	*(*int64)(unsafe.Pointer(_nReq)) = int64(_mxPage) * int64(_szPage)
	_rc = _352sqlite3OsFileSize(tls, *(*uintptr)(unsafe.Pointer(_pWal + 8)), _nSize)
	if _rc != int32(0) || (*(*int64)(unsafe.Pointer(_nSize))) >= (*(*int64)(unsafe.Pointer(_nReq))) {
		goto _13
	}

	_521sqlite3OsFileControlHint(tls, *(*uintptr)(unsafe.Pointer(_pWal + 8)), int32(5), _nReq)
_13:
_12:
_14:
	if _rc != int32(0) || int32(0) != _1466walIteratorNext(tls, *(*uintptr)(unsafe.Pointer(_pIter)), _iDbpage, _iFrame) {
		goto _15
	}

	if (*(*int32)(unsafe.Pointer(_db + 344))) == 0 {
		goto _16
	}

	_rc = func() int32 {
		if (*(*uint8)(unsafe.Pointer(_db + 97))) != 0 {
			return int32(7)
		}
		return int32(9)
	}()
	goto _15

_16:
	if (*(*uint32)(unsafe.Pointer(_iFrame))) > _nBackfill && (*(*uint32)(unsafe.Pointer(_iFrame))) <= _mxSafeFrame && (*(*uint32)(unsafe.Pointer(_iDbpage))) <= _mxPage {
		goto _17
	}

	goto _14

_17:
	_iOffset = (int64(32) + (int64((*(*uint32)(unsafe.Pointer(_iFrame)))-uint32(1)) * int64(_szPage+int32(24)))) + int64(24)
	_rc = _586sqlite3OsRead(tls, *(*uintptr)(unsafe.Pointer(_pWal + 16)), _zBuf, _szPage, _iOffset)
	if _rc == int32(0) {
		goto _18
	}

	goto _15

_18:
	_iOffset = int64((*(*uint32)(unsafe.Pointer(_iDbpage)))-uint32(1)) * int64(_szPage)
	_rc = _163sqlite3OsWrite(tls, *(*uintptr)(unsafe.Pointer(_pWal + 8)), _zBuf, _szPage, _iOffset)
	if _rc == int32(0) {
		goto _19
	}

	goto _15

_19:
	goto _14

_15:
	if _rc != int32(0) {
		goto _20
	}

	if _mxSafeFrame != (*(*uint32)(unsafe.Pointer(_883walIndexHdr(tls, _pWal) + 16))) {
		goto _21
	}

	_szDb = int64(*(*uint32)(unsafe.Pointer((_pWal + 72) + 20))) * int64(_szPage)
	_rc = _353sqlite3OsTruncate(tls, *(*uintptr)(unsafe.Pointer(_pWal + 8)), _szDb)
	if _rc != int32(0) {
		goto _22
	}

	_rc = _354sqlite3OsSync(tls, *(*uintptr)(unsafe.Pointer(_pWal + 8)), (_sync_flags>>(uint(2)%32))&int32(0x3))
_22:
_21:
	if _rc != int32(0) {
		goto _23
	}

	*(*uint32)(unsafe.Pointer(_pInfo)) = _mxSafeFrame
_23:
_20:
	_884walUnlockExclusive(tls, _pWal, int32(3), int32(1))
_11:
	if _rc != int32(5) {
		goto _24
	}

	_rc = int32(0)
_24:
_1:
	if _rc != int32(0) || _eMode == int32(0) {
		goto _25
	}

	if (*(*uint32)(unsafe.Pointer(_pInfo))) >= (*(*uint32)(unsafe.Pointer((_pWal + 72) + 16))) {
		goto _26
	}

	_rc = int32(5)
	goto _27

_26:
	if _eMode < int32(2) {
		goto _28
	}

	Xsqlite3_randomness(tls, int32(4), _salt1)

	_rc = _1282walBusyLock(tls, _pWal, _xBusy, _pBusyArg, int32(4), int32(4))
	if _rc != int32(0) {
		goto _29
	}

	if _eMode != int32(3) {
		goto _30
	}

	_1149walRestartHdr(tls, _pWal, *(*uint32)(unsafe.Pointer(_salt1)))
	_rc = _353sqlite3OsTruncate(tls, *(*uintptr)(unsafe.Pointer(_pWal + 16)), int64(0))
_30:
	_884walUnlockExclusive(tls, _pWal, int32(4), int32(4))
_29:
_28:
_27:
_25:
	goto _walcheckpoint_out
_walcheckpoint_out:
	_1467walIteratorFree(tls, *(*uintptr)(unsafe.Pointer(_pIter)))
	return _rc
}

// _1286sqlite3OsShmUnmap is defined at sqlite3.c:20855:20
func _1286sqlite3OsShmUnmap(tls crt.TLS, _id uintptr /* *Tsqlite3_file = Ssqlite3_file */, _deleteFlag int32) (r int32) {
	return fn50(*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_id))) + 128)))(tls, _id, _deleteFlag)
}

// _1287btreeParseCellAdjustSizeForOverflow is defined at sqlite3.c:60723:29
func _1287btreeParseCellAdjustSizeForOverflow(tls crt.TLS, _pPage uintptr /* *TMemPage = SMemPage */, _pCell uintptr /* *Tu8 = uint8 */, _pInfo uintptr /* *TCellInfo = SCellInfo */) {
	var (
		_minLocal int32
		_maxLocal int32
		_surplus  int32
	)
	_minLocal = int32(*(*uint16)(unsafe.Pointer(_pPage + 16)))
	_maxLocal = int32(*(*uint16)(unsafe.Pointer(_pPage + 14)))
	_surplus = int32(uint32(_minLocal) + (((*(*uint32)(unsafe.Pointer(_pInfo + 16))) - uint32(_minLocal)) % ((*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage + 72))) + 52))) - uint32(4))))
	if _surplus > _maxLocal {
		goto _1
	}

	*(*uint16)(unsafe.Pointer(_pInfo + 20)) = uint16(_surplus)
	goto _2

_1:
	*(*uint16)(unsafe.Pointer(_pInfo + 20)) = uint16(_minLocal)
_2:
	*(*uint16)(unsafe.Pointer(_pInfo + 22)) = uint16(int32(uint16(int64((*(*uintptr)(unsafe.Pointer(_pInfo + 8)))+uintptr(*(*uint16)(unsafe.Pointer(_pInfo + 20)))-_pCell))) + int32(4))
}

type SFileChunk struct {
	XpNext  uintptr // *SFileChunk
	XzChunk [8]uint8
}

type SFilePoint struct {
	XiOffset int64
	XpChunk  uintptr // *SFileChunk
}

// _1288memjrnlClose is defined at sqlite3.c:89952:12
func _1288memjrnlClose(tls crt.TLS, _pJfd uintptr /* *Tsqlite3_file = Ssqlite3_file */) (r int32) {
	var _p uintptr // *TMemJournal = SMemJournal

	_p = _pJfd
	_1468memjrnlFreeChunks(tls, _p)
	return int32(0)
}

// _1289memjrnlRead is defined at sqlite3.c:89753:12
func _1289memjrnlRead(tls crt.TLS, _pJfd uintptr /* *Tsqlite3_file = Ssqlite3_file */, _zBuf uintptr /* *void */, _iAmt int32, _iOfst int64) (r int32) {
	var (
		_p            uintptr // *TMemJournal = SMemJournal
		_zOut         uintptr // *Tu8 = uint8
		_nRead        int32
		_iChunkOffset int32
		_pChunk       uintptr // *TFileChunk = SFileChunk
		_iOff         int64
		_iSpace       int32
		_nCopy        int32
	)
	_p = _pJfd
	_zOut = _zBuf
	_nRead = _iAmt

	if (*(*int64)(unsafe.Pointer(_p + 48))) == int64(_iOfst) && _iOfst != int64(0) {
		goto _1
	}

	_iOff = int64(0)
	_pChunk = *(*uintptr)(unsafe.Pointer(_p + 24))
_3:
	if _pChunk == 0 || (_iOff+int64(*(*int32)(unsafe.Pointer(_p + 8)))) > int64(_iOfst) {
		goto _5
	}

	_iOff = int64(_iOff + int64(*(*int32)(unsafe.Pointer(_p + 8))))
	_pChunk = *(*uintptr)(unsafe.Pointer(_pChunk))
	goto _3

_5:
	goto _2

_1:
	_pChunk = *(*uintptr)(unsafe.Pointer((_p + 48) + 8))

_2:
	_iChunkOffset = int32(_iOfst % int64(*(*int32)(unsafe.Pointer(_p + 8))))
_6:
	_iSpace = (*(*int32)(unsafe.Pointer(_p + 8))) - _iChunkOffset
	_nCopy = func() int32 {
		if _nRead < ((*(*int32)(unsafe.Pointer(_p + 8))) - _iChunkOffset) {
			return _nRead
		}
		return (*(*int32)(unsafe.Pointer(_p + 8))) - _iChunkOffset
	}()
	crt.Xmemcpy(tls, _zOut, _pChunk+8+uintptr(_iChunkOffset), uint64(_nCopy))
	_zOut += uintptr(_nCopy)
	_nRead = int32(_nRead - _iSpace)
	_iChunkOffset = int32(0)
	if ((_nRead >= int32(0)) && (set4(&_pChunk, *(*uintptr)(unsafe.Pointer(_pChunk))) != 0)) && (_nRead > int32(0)) {
		goto _6
	}

	*(*int64)(unsafe.Pointer(_p + 48)) = int64(func() int64 {
		if _pChunk != 0 {
			return _iOfst + int64(_iAmt)
		}
		return int64(0)
	}())
	*(*uintptr)(unsafe.Pointer((_p + 48) + 8)) = _pChunk
	return int32(0)
}

// _1290memjrnlWrite is defined at sqlite3.c:89857:12
func _1290memjrnlWrite(tls crt.TLS, _pJfd uintptr /* *Tsqlite3_file = Ssqlite3_file */, _zBuf uintptr /* *void */, _iAmt int32, _iOfst int64) (r int32) {
	var (
		_p            uintptr // *TMemJournal = SMemJournal
		_nWrite       int32
		_zWrite       uintptr // *Tu8 = uint8
		_rc           int32
		_pChunk       uintptr // *TFileChunk = SFileChunk
		_iChunkOffset int32
		_iSpace       int32
		_pNew         uintptr // *TFileChunk = SFileChunk
	)
	_p = _pJfd
	_nWrite = _iAmt
	_zWrite = _zBuf
	if (*(*int32)(unsafe.Pointer(_p + 12))) <= int32(0) || (int64(_iAmt)+_iOfst) <= int64(*(*int32)(unsafe.Pointer(_p + 12))) {
		goto _1
	}

	_rc = _1469memjrnlCreateFile(tls, _p)
	if _rc != int32(0) {
		goto _3
	}

	_rc = _163sqlite3OsWrite(tls, _pJfd, _zBuf, _iAmt, _iOfst)
_3:
	return _rc

	goto _2

_1:
_4:
	if _nWrite <= int32(0) {
		goto _5
	}

	_pChunk = *(*uintptr)(unsafe.Pointer((_p + 32) + 8))
	_iChunkOffset = int32((*(*int64)(unsafe.Pointer(_p + 32))) % int64(*(*int32)(unsafe.Pointer(_p + 8))))
	_iSpace = func() int32 {
		if _nWrite < ((*(*int32)(unsafe.Pointer(_p + 8))) - _iChunkOffset) {
			return _nWrite
		}
		return (*(*int32)(unsafe.Pointer(_p + 8))) - _iChunkOffset
	}()
	if _iChunkOffset != int32(0) {
		goto _6
	}

	_pNew = Xsqlite3_malloc(tls, int32(uint64(16)+uint64((*(*int32)(unsafe.Pointer(_p + 8)))-int32(8))))
	if _pNew != 0 {
		goto _7
	}

	return int32(3082)

_7:
	*(*uintptr)(unsafe.Pointer(_pNew)) = null
	if _pChunk == 0 {
		goto _8
	}

	*(*uintptr)(unsafe.Pointer(_pChunk)) = _pNew
	goto _9

_8:
	*(*uintptr)(unsafe.Pointer(_p + 24)) = _pNew
_9:
	*(*uintptr)(unsafe.Pointer((_p + 32) + 8)) = _pNew
_6:
	crt.Xmemcpy(tls, (*(*uintptr)(unsafe.Pointer((_p + 32) + 8)))+8+uintptr(_iChunkOffset), _zWrite, uint64(_iSpace))
	_zWrite += uintptr(_iSpace)
	_nWrite = int32(_nWrite - _iSpace)
	{
		p := &(*(*int64)(unsafe.Pointer(_p + 32)))
		*p = int64(int64(*p) + int64(_iSpace))
	}
	goto _4

_5:
	*(*int32)(unsafe.Pointer(_p + 16)) = int32(int64(_iAmt) + _iOfst)
_2:
	return int32(0)
}

// _1291memjrnlTruncate is defined at sqlite3.c:89936:12
func _1291memjrnlTruncate(tls crt.TLS, _pJfd uintptr /* *Tsqlite3_file = Ssqlite3_file */, _size int64) (r int32) {
	var _p uintptr // *TMemJournal = SMemJournal

	_p = _pJfd
	if _size != int64(0) {
		goto _1
	}

	_1468memjrnlFreeChunks(tls, _p)
	*(*int32)(unsafe.Pointer(_p + 16)) = int32(0)
	*(*uintptr)(unsafe.Pointer((_p + 32) + 8)) = null
	*(*int64)(unsafe.Pointer(_p + 32)) = int64(0)
	*(*uintptr)(unsafe.Pointer((_p + 48) + 8)) = null
	*(*int64)(unsafe.Pointer(_p + 48)) = int64(0)
_1:
	return int32(0)
}

// _1292memjrnlSync is defined at sqlite3.c:89964:12
func _1292memjrnlSync(tls crt.TLS, _pJfd uintptr /* *Tsqlite3_file = Ssqlite3_file */, _flags int32) (r int32) {
	return int32(0)
}

// _1293memjrnlFileSize is defined at sqlite3.c:89972:12
func _1293memjrnlFileSize(tls crt.TLS, _pJfd uintptr /* *Tsqlite3_file = Ssqlite3_file */, _pSize uintptr /* *Tsqlite_int64 = int64 */) (r int32) {
	var _p uintptr // *TMemJournal = SMemJournal

	_p = _pJfd
	*(*int64)(unsafe.Pointer(_pSize)) = int64(int64(*(*int64)(unsafe.Pointer(_p + 32))))
	return int32(0)
}

// _1294walIndexPage is defined at sqlite3.c:55653:12
func _1294walIndexPage(tls crt.TLS, _pWal uintptr /* *TWal = SWal */, _iPage int32, _ppPage uintptr /* **Tu32 = uint32 */) (r int32) {
	var (
		_rc    int32
		_nByte int32
		_apNew uintptr // **Tu32 = uint32
	)
	_rc = int32(0)
	if (*(*int32)(unsafe.Pointer(_pWal + 40))) > _iPage {
		goto _1
	}

	_nByte = int32(uint64(8) * uint64(_iPage+int32(1)))
	_apNew = Xsqlite3_realloc64(tls, *(*uintptr)(unsafe.Pointer(_pWal + 48)), uint64(_nByte))
	if _apNew != 0 {
		goto _2
	}

	*(*uintptr)(unsafe.Pointer(_ppPage)) = null
	return int32(7)

_2:
	crt.Xmemset(tls, _apNew+8*uintptr(*(*int32)(unsafe.Pointer(_pWal + 40))), int32(0), uint64(8)*uint64((_iPage+int32(1))-(*(*int32)(unsafe.Pointer(_pWal + 40)))))
	*(*uintptr)(unsafe.Pointer(_pWal + 48)) = _apNew
	*(*int32)(unsafe.Pointer(_pWal + 40)) = _iPage + int32(1)
_1:
	if (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pWal + 48))) + 8*uintptr(_iPage)))) != 0 {
		goto _3
	}

	if int32(*(*uint8)(unsafe.Pointer(_pWal + 63))) != int32(2) {
		goto _4
	}

	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pWal + 48))) + 8*uintptr(_iPage))) = _135sqlite3MallocZero(tls, uint64(32768))
	if (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pWal + 48))) + 8*uintptr(_iPage)))) != 0 {
		goto _6
	}

	_rc = int32(7)
_6:
	goto _5

_4:
	_rc = _1470sqlite3OsShmMap(tls, *(*uintptr)(unsafe.Pointer(_pWal + 8)), _iPage, int32(32768), int32(*(*uint8)(unsafe.Pointer(_pWal + 64))), (*(*uintptr)(unsafe.Pointer(_pWal + 48)))+8*uintptr(_iPage))
	if _rc != int32(8) {
		goto _7
	}

	{
		p := &(*(*uint8)(unsafe.Pointer(_pWal + 66)))
		*p = uint8(int32(*p) | int32(2))
	}
	_rc = int32(0)
_7:
_5:
_3:
	*(*uintptr)(unsafe.Pointer(_ppPage)) = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pWal + 48))) + 8*uintptr(_iPage)))

	return _rc
}

// _1295sqlite3OsShmBarrier is defined at sqlite3.c:20852:21
func _1295sqlite3OsShmBarrier(tls crt.TLS, _id uintptr /* *Tsqlite3_file = Ssqlite3_file */) {
	fn16(*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_id))) + 120)))(tls, _id)
}

// _1296sqlite3PcacheMove is defined at sqlite3.c:45309:21
func _1296sqlite3PcacheMove(tls crt.TLS, _p uintptr /* *TPgHdr = SPgHdr */, _newPgno uint32) {
	var _pCache uintptr // *TPCache = SPCache

	_pCache = *(*uintptr)(unsafe.Pointer(_p + 24))

	fn202(*(*uintptr)(unsafe.Pointer((_28sqlite3Config + 184) + 72)))(tls, *(*uintptr)(unsafe.Pointer(_pCache + 64)), *(*uintptr)(unsafe.Pointer(_p)), *(*uint32)(unsafe.Pointer(_p + 48)), _newPgno)
	*(*uint32)(unsafe.Pointer(_p + 48)) = _newPgno
	if int32(*(*uint16)(unsafe.Pointer(_p + 52)))&int32(0x2) == 0 || int32(*(*uint16)(unsafe.Pointer(_p + 52)))&int32(0x8) == 0 {
		goto _1
	}

	_888pcacheManageDirtyList(tls, _p, uint8(3))
_1:
}

// _1297sqlite3WalUndo is defined at sqlite3.c:57895:20
func _1297sqlite3WalUndo(tls crt.TLS, _pWal uintptr /* *TWal = SWal */, _xUndo uintptr /* *func(crt.TLS, uintptr, uint32) int32 */, _pUndoCtx uintptr /* *void */) (r int32) {
	var (
		_rc     int32
		_iMax   uint32
		_iFrame uint32
	)
	_rc = int32(0)
	if *(*uint8)(unsafe.Pointer(_pWal + 64)) == 0 {
		goto _1
	}

	_iMax = uint32(*(*uint32)(unsafe.Pointer((_pWal + 72) + 16)))
	crt.Xmemcpy(tls, _pWal+72, _883walIndexHdr(tls, _pWal), uint64(48))
	_iFrame = uint32((*(*uint32)(unsafe.Pointer((_pWal + 72) + 16))) + uint32(1))
_2:
	if _rc != int32(0) || _iFrame > _iMax {
		goto _4
	}

	_rc = fn203(_xUndo)(tls, _pUndoCtx, _1471walFramePgno(tls, _pWal, _iFrame))
	_iFrame++
	goto _2

_4:
	if _iMax == uint32(*(*uint32)(unsafe.Pointer((_pWal + 72) + 16))) {
		goto _5
	}

	_1158walCleanupHash(tls, _pWal)
_5:
_1:
	return _rc
}

// _1298pagerUndoCallback is defined at sqlite3.c:50585:12
func _1298pagerUndoCallback(tls crt.TLS, _pCtx uintptr /* *void */, _iPg uint32) (r int32) {
	var (
		_rc     int32
		_pPager uintptr // *TPager = SPager
		_pPg    uintptr // *TPgHdr = SPgHdr
	)
	_rc = int32(0)
	_pPager = _pCtx

	_pPg = _569sqlite3PagerLookup(tls, _pPager, _iPg)
	if _pPg == 0 {
		goto _1
	}

	if _1131sqlite3PcachePageRefcount(tls, _pPg) != int32(1) {
		goto _2
	}

	_1174sqlite3PcacheDrop(tls, _pPg)
	goto _3

_2:
	_rc = _1173readDbPage(tls, _pPg)
	if _rc != int32(0) {
		goto _4
	}

	fn16(*(*uintptr)(unsafe.Pointer(_pPager + 256)))(tls, _pPg)
_4:
	_335sqlite3PagerUnrefNotNull(tls, _pPg)
_3:
_1:
	_343sqlite3BackupRestart(tls, *(*uintptr)(unsafe.Pointer(_pPager + 112)))
	return _rc
}

// _1299sqlite3WalReadFrame is defined at sqlite3.c:57794:20
func _1299sqlite3WalReadFrame(tls crt.TLS, _pWal uintptr /* *TWal = SWal */, _iRead uint32, _nOut int32, _pOut uintptr /* *Tu8 = uint8 */) (r int32) {
	var (
		_sz      int32
		_iOffset int64
	)
	_sz = int32(*(*uint16)(unsafe.Pointer((_pWal + 72) + 14)))
	_sz = (_sz & int32(0xfe00)) + ((_sz & int32(0x1)) << (uint(16) % 32))
	_iOffset = (int64(32) + (int64(_iRead-uint32(1)) * int64(_sz+int32(24)))) + int64(24)
	return _586sqlite3OsRead(tls, *(*uintptr)(unsafe.Pointer(_pWal + 16)), _pOut, func() int32 {
		if _nOut > _sz {
			return _sz
		}
		return _nOut
	}(), _iOffset)
}

// _1300yy_shift_ofst [455]int16, escapes: true, sqlite3.c:137633:20
var _1300yy_shift_ofst = ds + 9476

// _1301yy_lookahead [1566]uint8, escapes: true, sqlite3.c:137470:25
var _1301yy_lookahead = ds + 10386

// _1302yyFallback [83]uint8, escapes: true, sqlite3.c:137785:25
var _1302yyFallback = ds + 11952

// _1303yy_action [1566]uint16, escapes: true, sqlite3.c:137311:27
var _1303yy_action = ds + 12036

// _1304yy_default [455]uint16, escapes: true, sqlite3.c:137720:27
var _1304yy_default = ds + 15168

// _1305yyStackOverflow is defined at sqlite3.c:138712:13
func _1305yyStackOverflow(tls crt.TLS, _yypParser uintptr /* *TyyParser = SyyParser */) {
	var _pParse uintptr // *TParse = SParse

	_pParse = *(*uintptr)(unsafe.Pointer(_yypParser + 8))
_1:
	if (*(*uintptr)(unsafe.Pointer(_yypParser))) <= (_yypParser + 16) {
		goto _2
	}

	_1182yy_pop_parser_stack(tls, _yypParser)
	goto _1

_2:
	_550sqlite3ErrorMsg(tls, _pParse, ts+24730 /* "parser stack overflow" */)
	*(*uintptr)(unsafe.Pointer(_yypParser + 8)) = _pParse
}

type SExprSpan struct {
	XpExpr  uintptr // *SExpr
	XzStart uintptr // *int8
	XzEnd   uintptr // *int8
}

type SSelectDest struct {
	XeDest    uint8
	XiSDParm  int32
	XiSdst    int32
	XnSdst    int32
	XzAffSdst uintptr // *int8
	XpOrderBy uintptr // *SExprList
}

// _1306yyRuleInfo [329]struct{Xlhs uint8;Xnrhs int8;}, escapes: true, sqlite3.c:138797:3
var _1306yyRuleInfo = ds + 16078

// _1307sqlite3FinishCoding is defined at sqlite3.c:100830:21
func _1307sqlite3FinishCoding(tls crt.TLS, _pParse uintptr /* *TParse = SParse */) {
	var (
		_db      uintptr // *Tsqlite3 = Ssqlite3
		_v       uintptr // *TVdbe = SVdbe
		_iDb     int32
		_i       int32
		_pSchema uintptr // *TSchema = SSchema
		_vtab    uintptr // *int8
		_pEL     uintptr // *TExprList = SExprList
	)

	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	if (*(*uint8)(unsafe.Pointer(_pParse + 30))) == 0 {
		goto _1
	}

	return

_1:
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 && (*(*int32)(unsafe.Pointer(_pParse + 48))) == 0 {
		goto _2
	}

	if (*(*int32)(unsafe.Pointer(_pParse + 24))) != int32(0) {
		goto _3
	}

	*(*int32)(unsafe.Pointer(_pParse + 24)) = int32(1)
_3:
	return

_2:
	_v = _1472sqlite3GetVdbe(tls, _pParse)

	if _v == 0 {
		goto _4
	}

	_1473sqlite3VdbeAddOp0(tls, _v, int32(66))
	if int32(*(*uint8)(unsafe.Pointer(_db + 97))) != int32(0) || (*(*uint32)(unsafe.Pointer(_pParse + 124))) == uint32(0) && (*(*uintptr)(unsafe.Pointer(_pParse + 96))) == 0 {
		goto _5
	}

	_1474sqlite3VdbeJumpHere(tls, _v, int32(0))
	_iDb = int32(0)
_6:
	if _iDb >= (*(*int32)(unsafe.Pointer(_db + 40))) {
		goto _8
	}

	if bool2int(((*(*uint32)(unsafe.Pointer(_pParse + 124)))&(uint32(1)<<(uint(_iDb)%32))) != uint32(0)) != int32(0) {
		goto _9
	}

	goto _7

_9:
	_1074sqlite3VdbeUsesBtree(tls, _v, _iDb)
	_pSchema = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)) + 24))
	_1071sqlite3VdbeAddOp4Int(tls, _v, int32(2), _iDb, bool2int(((*(*uint32)(unsafe.Pointer(_pParse + 120)))&(uint32(1)<<(uint(_iDb)%32))) != uint32(0)), *(*int32)(unsafe.Pointer(_pSchema)), *(*int32)(unsafe.Pointer(_pSchema + 4)))
	if int32(*(*uint8)(unsafe.Pointer((_db + 176) + 5))) != int32(0) {
		goto _10
	}

	_1072sqlite3VdbeChangeP5(tls, _v, uint16(1))
_10:
_7:
	_iDb++
	goto _6

_8:
	_i = int32(0)
_11:
	if _i >= (*(*int32)(unsafe.Pointer(_pParse + 472))) {
		goto _13
	}

	_vtab = _1037sqlite3GetVTable(tls, _db, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pParse + 552))) + 8*uintptr(_i))))
	_1475sqlite3VdbeAddOp4(tls, _v, int32(153), int32(0), int32(0), int32(0), _vtab, int32(-12))
	_i++
	goto _11

_13:
	*(*int32)(unsafe.Pointer(_pParse + 472)) = int32(0)
	_1476codeTableLocks(tls, _pParse)
	_1477sqlite3AutoincrementBegin(tls, _pParse)
	if (*(*uintptr)(unsafe.Pointer(_pParse + 96))) == 0 {
		goto _14
	}

	_pEL = *(*uintptr)(unsafe.Pointer(_pParse + 96))
	*(*uint8)(unsafe.Pointer(_pParse + 35)) = uint8(0)
	_i = int32(0)
_15:
	if _i >= (*(*int32)(unsafe.Pointer(_pEL))) {
		goto _17
	}

	_1478sqlite3ExprCode(tls, _pParse, *(*uintptr)(unsafe.Pointer((_pEL + 8) + 32*uintptr(_i))), *(*int32)(unsafe.Pointer(((_pEL + 8) + 32*uintptr(_i)) + 28)))
	_i++
	goto _15

_17:
_14:
	_1479sqlite3VdbeGoto(tls, _v, int32(1))
_5:
_4:
	if _v == 0 || (*(*int32)(unsafe.Pointer(_pParse + 48))) != int32(0) || (*(*uint8)(unsafe.Pointer(_db + 97))) != 0 {
		goto _18
	}

	if (*(*uintptr)(unsafe.Pointer(_pParse + 152))) == 0 || (*(*int32)(unsafe.Pointer(_pParse + 52))) != int32(0) {
		goto _20
	}

	*(*int32)(unsafe.Pointer(_pParse + 52)) = int32(1)
_20:
	_1076sqlite3VdbeMakeReady(tls, _v, _pParse)
	*(*int32)(unsafe.Pointer(_pParse + 24)) = int32(101)
	goto _19

_18:
	*(*int32)(unsafe.Pointer(_pParse + 24)) = int32(1)
_19:
}

// _1308sqlite3BeginTransaction is defined at sqlite3.c:104643:21
func _1308sqlite3BeginTransaction(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _type int32) {
	var (
		_db uintptr // *Tsqlite3 = Ssqlite3
		_v  uintptr // *TVdbe = SVdbe
		_i  int32
	)

	_db = *(*uintptr)(unsafe.Pointer(_pParse))

	if _1480sqlite3AuthCheck(tls, _pParse, int32(22), ts+3817 /* "BEGIN" */, null, null) == 0 {
		goto _1
	}

	return

_1:
	_v = _1472sqlite3GetVdbe(tls, _pParse)
	if _v != 0 {
		goto _2
	}

	return

_2:
	if _type == int32(7) {
		goto _3
	}

	_i = int32(0)
_4:
	if _i >= (*(*int32)(unsafe.Pointer(_db + 40))) {
		goto _6
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(2), _i, bool2int(_type == int32(9))+int32(1))
	_1074sqlite3VdbeUsesBtree(tls, _v, _i)
	_i++
	goto _4

_6:
_3:
	_1473sqlite3VdbeAddOp0(tls, _v, int32(1))
}

// _1309sqlite3EndTransaction is defined at sqlite3.c:104670:21
func _1309sqlite3EndTransaction(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _eType int32) {
	var (
		_v          uintptr // *TVdbe = SVdbe
		_isRollback int32
	)

	_isRollback = bool2int(_eType == int32(12))
	if _1480sqlite3AuthCheck(tls, _pParse, int32(22), func() uintptr {
		if _isRollback != 0 {
			return ts + 16533 /* "ROLLBACK" */
		}
		return ts + 3977 /* "COMMIT" */
	}(), null, null) == 0 {
		goto _1
	}

	return

_1:
	_v = _1472sqlite3GetVdbe(tls, _pParse)
	if _v == 0 {
		goto _2
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(1), int32(1), _isRollback)
_2:
}

// _1310sqlite3Savepoint is defined at sqlite3.c:104692:21
func _1310sqlite3Savepoint(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _op int32, _pName uintptr /* *TToken = SToken */) {
	var (
		_zName uintptr // *int8
		_v     uintptr // *TVdbe = SVdbe
	)
	_zName = _1482sqlite3NameFromToken(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _pName)
	if _zName == 0 {
		goto _1
	}

	_v = _1472sqlite3GetVdbe(tls, _pParse)

	if _v != 0 && _1480sqlite3AuthCheck(tls, _pParse, int32(32), *(*uintptr)(unsafe.Pointer(_1481az + 8*uintptr(_op))), _zName, null) == 0 {
		goto _2
	}

	_181sqlite3DbFree(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _zName)
	return

_2:
	_1475sqlite3VdbeAddOp4(tls, _v, int32(0), _op, int32(0), int32(0), _zName, int32(-7))
_1:
}

// _1311sqlite3StartTable is defined at sqlite3.c:101543:21
func _1311sqlite3StartTable(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pName1 uintptr /* *TToken = SToken */, _pName2 uintptr /* *TToken = SToken */, _isTemp int32, _isView int32, _isVirtual int32, _noErr int32) {
	esc := crt.MustMalloc(8)
	var (
		_pTable     uintptr // *TTable = STable
		_zName      uintptr // *int8
		_db         uintptr // *Tsqlite3 = Ssqlite3
		_v          uintptr // *TVdbe = SVdbe
		_iDb        int32
		_pName      = esc   // **TToken = SToken
		_zDb        uintptr // *int8
		_1zDb       uintptr // *int8
		_addr1      int32
		_fileFormat int32
		_reg1       int32
		_reg2       int32
		_reg3       int32
	)
	defer crt.Free(esc)
	_zName = 0
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	if (*(*uint8)(unsafe.Pointer((_db + 176) + 5))) == 0 || (*(*int32)(unsafe.Pointer(_db + 176))) != int32(1) {
		goto _1
	}

	_iDb = int32(*(*uint8)(unsafe.Pointer((_db + 176) + 4)))
	_zName = _183sqlite3DbStrDup(tls, _db, func() uintptr {
		if (1 != 0) && (_iDb == int32(1)) {
			return ts + 5250 /* "sqlite_temp_master" */
		}
		return ts + 5127 /* "sqlite_master" */
	}())
	*(*uintptr)(unsafe.Pointer(_pName)) = _pName1
	goto _2

_1:
	_iDb = _1485sqlite3TwoPartName(tls, _pParse, _pName1, _pName2, _pName)
	if _iDb >= int32(0) {
		goto _3
	}

	return

_3:
	if 1 == 0 || _isTemp == 0 || (*(*uint32)(unsafe.Pointer(_pName2 + 8))) <= uint32(0) || _iDb == int32(1) {
		goto _4
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+24752 /* "temporary table name must be unq..." */)
	return

_4:
	if 1 == 0 || _isTemp == 0 {
		goto _5
	}

	_iDb = int32(1)
_5:
	_zName = _1482sqlite3NameFromToken(tls, _db, *(*uintptr)(unsafe.Pointer(_pName)))
_2:
	*(*SToken)(unsafe.Pointer(_pParse + 432)) = *(*SToken)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pName))))
	if _zName != 0 {
		goto _6
	}

	return

_6:
	if int32(0) == _1486sqlite3CheckObjectName(tls, _pParse, _zName) {
		goto _7
	}

	goto _begin_table_error

_7:
	if int32(*(*uint8)(unsafe.Pointer((_db + 176) + 4))) != int32(1) {
		goto _8
	}

	_isTemp = int32(1)
_8:
	_zDb = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)))
	if _1480sqlite3AuthCheck(tls, _pParse, int32(18), func() uintptr {
		if (1 != 0) && (_isTemp == int32(1)) {
			return ts + 5250 /* "sqlite_temp_master" */
		}
		return ts + 5127 /* "sqlite_master" */
	}(), null, _zDb) == 0 {
		goto _9
	}

	goto _begin_table_error

_9:
	if _isVirtual != 0 || _1480sqlite3AuthCheck(tls, _pParse, int32(*(*uint8)(unsafe.Pointer(_1483aCode + uintptr(_isTemp+(int32(2)*_isView))))), _zName, null, _zDb) == 0 {
		goto _10
	}

	goto _begin_table_error

_10:
	if *(*uint8)(unsafe.Pointer(_pParse + 468)) != 0 {
		goto _11
	}

	_1zDb = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)))
	if int32(0) == _1237sqlite3ReadSchema(tls, _pParse) {
		goto _12
	}

	goto _begin_table_error

_12:
	_pTable = _221sqlite3FindTable(tls, _db, _zName, _1zDb)
	if _pTable == 0 {
		goto _13
	}

	if _noErr != 0 {
		goto _14
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+24793 /* "table %T already exists" */, *(*uintptr)(unsafe.Pointer(_pName)))
	goto _15

_14:
	_1487sqlite3CodeVerifySchema(tls, _pParse, _iDb)
_15:
	goto _begin_table_error

_13:
	if _1003sqlite3FindIndex(tls, _db, _zName, _1zDb) == 0 {
		goto _16
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+24817 /* "there is already an index named ..." */, _zName)
	goto _begin_table_error

_16:
_11:
	_pTable = _295sqlite3DbMallocZero(tls, _db, uint64(128))
	if _pTable != 0 {
		goto _17
	}

	*(*int32)(unsafe.Pointer(_pParse + 24)) = int32(7)
	(*(*int32)(unsafe.Pointer(_pParse + 48)))++
	goto _begin_table_error

_17:
	*(*uintptr)(unsafe.Pointer(_pTable)) = _zName
	*(*int16)(unsafe.Pointer(_pTable + 68)) = int16(-1)
	*(*uintptr)(unsafe.Pointer(_pTable + 112)) = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)) + 24))
	*(*uint32)(unsafe.Pointer(_pTable + 60)) = uint32(1)
	*(*int16)(unsafe.Pointer(_pTable + 72)) = int16(200)

	*(*uintptr)(unsafe.Pointer(_pParse + 512)) = _pTable
	if (*(*uint8)(unsafe.Pointer(_pParse + 30))) != 0 || crt.Xstrcmp(tls, _zName, ts+6945 /* "sqlite_sequence" */) != int32(0) {
		goto _18
	}

	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTable + 112))) + 104)) = _pTable
_18:
	if (*(*uint8)(unsafe.Pointer((_db + 176) + 5))) != 0 || set4(&_v, _1472sqlite3GetVdbe(tls, _pParse)) == 0 {
		goto _19
	}

	_1488sqlite3BeginWriteOperation(tls, _pParse, int32(1), _iDb)
	if _isVirtual == 0 {
		goto _20
	}

	_1473sqlite3VdbeAddOp0(tls, _v, int32(153))
_20:
	_reg1 = set5(&(*(*int32)(unsafe.Pointer(_pParse + 128))), preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56)))))
	_reg2 = set5(&(*(*int32)(unsafe.Pointer(_pParse + 132))), preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56)))))
	_reg3 = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))
	_1241sqlite3VdbeAddOp3(tls, _v, int32(101), _iDb, _reg3, int32(2))
	_1074sqlite3VdbeUsesBtree(tls, _v, _iDb)
	_addr1 = _1489sqlite3VdbeAddOp1(tls, _v, int32(21), _reg3)
	_fileFormat = func() int32 {
		if ((*(*uint32)(unsafe.Pointer(_db + 48))) & uint32(0x2)) != uint32(0) {
			return int32(1)
		}
		return int32(4)
	}()
	_1241sqlite3VdbeAddOp3(tls, _v, int32(102), _iDb, int32(2), _fileFormat)
	_1241sqlite3VdbeAddOp3(tls, _v, int32(102), _iDb, int32(5), int32(*(*uint8)(unsafe.Pointer(_db + 94))))
	_1474sqlite3VdbeJumpHere(tls, _v, _addr1)
	if _isView == 0 && _isVirtual == 0 {
		goto _21
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(67), int32(0), _reg2)
	goto _22

_21:
	*(*int32)(unsafe.Pointer(_pParse + 176)) = _1241sqlite3VdbeAddOp3(tls, _v, int32(135), _iDb, _reg2, int32(1))
_22:
	_1490sqlite3OpenMasterTable(tls, _pParse, _iDb)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(115), int32(0), _reg1)
	_1475sqlite3VdbeAddOp4(tls, _v, int32(72), int32(6), _reg3, int32(0), _1484nullRow, int32(-1))
	_1241sqlite3VdbeAddOp3(tls, _v, int32(116), int32(0), _reg3, _reg1)
	_1072sqlite3VdbeChangeP5(tls, _v, uint16(0x8))
	_1473sqlite3VdbeAddOp0(tls, _v, int32(112))
_19:
	return

	goto _begin_table_error
_begin_table_error:
	_181sqlite3DbFree(tls, _db, _zName)
	return
}

// _1312disableLookaside is defined at sqlite3.c:136996:13
func _1312disableLookaside(tls crt.TLS, _pParse uintptr /* *TParse = SParse */) {
	(*(*uint8)(unsafe.Pointer(_pParse + 36)))++
	(*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pParse))) + 352)))++
}

// _1313sqlite3EndTable is defined at sqlite3.c:102535:21
func _1313sqlite3EndTable(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pCons uintptr /* *TToken = SToken */, _pEnd uintptr /* *TToken = SToken */, _tabOpts uint8, _pSelect uintptr /* *TSelect = SSelect */) {
	esc := crt.MustMalloc(32)
	var (
		_p           uintptr // *TTable = STable
		_db          uintptr // *Tsqlite3 = Ssqlite3
		_iDb         int32
		_pIdx        uintptr // *TIndex = SIndex
		_n           int32
		_v           uintptr // *TVdbe = SVdbe
		_zType       uintptr // *int8
		_zType2      uintptr // *int8
		_zStmt       uintptr // *int8
		_dest        = esc   // *TSelectDest = SSelectDest
		_regYield    int32
		_addrTop     int32
		_regRec      int32
		_regRowid    int32
		_addrInsLoop int32
		_pSelTab     uintptr // *TTable = STable
		_pEnd2       uintptr // *TToken = SToken
		_pDb         uintptr // *TDb = SDb
		_pOld        uintptr // *TTable = STable
		_pSchema     uintptr // *TSchema = SSchema
		_zName       uintptr // *int8
		_nName       int32
	)
	defer crt.Free(esc)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	if _pEnd != 0 || _pSelect != 0 {
		goto _1
	}

	return

_1:
	_p = *(*uintptr)(unsafe.Pointer(_pParse + 512))
	if _p != 0 {
		goto _2
	}

	return

_2:
	if (*(*uint8)(unsafe.Pointer((_db + 176) + 5))) == 0 {
		goto _3
	}

	*(*int32)(unsafe.Pointer(_p + 56)) = *(*int32)(unsafe.Pointer(_db + 176))
	if (*(*int32)(unsafe.Pointer(_p + 56))) != int32(1) {
		goto _4
	}

	{
		p := &(*(*uint32)(unsafe.Pointer(_p + 64)))
		*p = uint32(uint32(*p) | uint32(0x1))
	}
_4:
_3:
	if (int32(_tabOpts) & int32(0x20)) == 0 {
		goto _5
	}

	if (*(*uint32)(unsafe.Pointer(_p + 64)))&uint32(0x8) == 0 {
		goto _6
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+24852 /* "AUTOINCREMENT not allowed on WIT..." */)
	return

_6:
	if ((*(*uint32)(unsafe.Pointer(_p + 64))) & uint32(0x4)) != uint32(0) {
		goto _7
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+24902 /* "PRIMARY KEY missing on table %s" */, *(*uintptr)(unsafe.Pointer(_p)))
	goto _8

_7:
	{
		p := &(*(*uint32)(unsafe.Pointer(_p + 64)))
		*p = uint32(uint32(*p) | uint32(96))
	}
	_1491convertToWithoutRowidTable(tls, _pParse, _p)
_8:
_5:
	_iDb = _1069sqlite3SchemaToIndex(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 112)))
	if (*(*uintptr)(unsafe.Pointer(_p + 48))) == 0 {
		goto _9
	}

	_1492sqlite3ResolveSelfReference(tls, _pParse, _p, int32(0x4), null, *(*uintptr)(unsafe.Pointer(_p + 48)))
_9:
	_1493estimateTableWidth(tls, _p)
	_pIdx = *(*uintptr)(unsafe.Pointer(_p + 16))
_10:
	if _pIdx == 0 {
		goto _12
	}

	_1494estimateIndexWidth(tls, _pIdx)
	_pIdx = *(*uintptr)(unsafe.Pointer(_pIdx + 40))
	goto _10

_12:
	if (*(*uint8)(unsafe.Pointer((_db + 176) + 5))) != 0 {
		goto _13
	}

	_v = _1472sqlite3GetVdbe(tls, _pParse)
	if _v != 0 {
		goto _14
	}

	return

_14:
	_1489sqlite3VdbeAddOp1(tls, _v, int32(112), int32(0))
	if (*(*uintptr)(unsafe.Pointer(_p + 24))) != 0 {
		goto _15
	}

	_zType = ts + 4602   /* "table" */
	_zType2 = ts + 12801 /* "TABLE" */
	goto _16

_15:
	_zType = ts + 24934  /* "view" */
	_zType2 = ts + 12826 /* "VIEW" */
_16:
	if _pSelect == 0 {
		goto _17
	}

	_regYield = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))
	_regRec = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))
	_regRowid = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))

	_1495sqlite3MayAbort(tls, _pParse)
	_1241sqlite3VdbeAddOp3(tls, _v, int32(105), int32(1), *(*int32)(unsafe.Pointer(_pParse + 132)), _iDb)
	_1072sqlite3VdbeChangeP5(tls, _v, uint16(0x10))
	*(*int32)(unsafe.Pointer(_pParse + 52)) = int32(2)
	_addrTop = _1496sqlite3VdbeCurrentAddr(tls, _v) + int32(1)
	_1241sqlite3VdbeAddOp3(tls, _v, int32(15), _regYield, int32(0), _addrTop)
	_1497sqlite3SelectDestInit(tls, _dest, int32(13), _regYield)
	_1327sqlite3Select(tls, _pParse, _pSelect, _dest)
	_1498sqlite3VdbeEndCoroutine(tls, _v, _regYield)
	_1474sqlite3VdbeJumpHere(tls, _v, _addrTop-int32(1))
	if (*(*int32)(unsafe.Pointer(_pParse + 48))) == 0 {
		goto _18
	}

	return

_18:
	_pSelTab = _1499sqlite3ResultSetOfSelect(tls, _pParse, _pSelect)
	if _pSelTab != 0 {
		goto _19
	}

	return

_19:
	*(*int16)(unsafe.Pointer(_p + 70)) = *(*int16)(unsafe.Pointer(_pSelTab + 70))
	*(*uintptr)(unsafe.Pointer(_p + 8)) = *(*uintptr)(unsafe.Pointer(_pSelTab + 8))
	*(*int16)(unsafe.Pointer(_pSelTab + 70)) = int16(0)
	*(*uintptr)(unsafe.Pointer(_pSelTab + 8)) = null
	_430sqlite3DeleteTable(tls, _db, _pSelTab)
	_addrInsLoop = _1489sqlite3VdbeAddOp1(tls, _v, int32(16), *(*int32)(unsafe.Pointer(_dest + 4)))
	_1241sqlite3VdbeAddOp3(tls, _v, int32(99), *(*int32)(unsafe.Pointer(_dest + 8)), *(*int32)(unsafe.Pointer(_dest + 12)), _regRec)
	_1500sqlite3TableAffinity(tls, _v, _p, int32(0))
	_1240sqlite3VdbeAddOp2(tls, _v, int32(115), int32(1), _regRowid)
	_1241sqlite3VdbeAddOp3(tls, _v, int32(116), int32(1), _regRec, _regRowid)
	_1479sqlite3VdbeGoto(tls, _v, _addrInsLoop)
	_1474sqlite3VdbeJumpHere(tls, _v, _addrInsLoop)
	_1489sqlite3VdbeAddOp1(tls, _v, int32(112), int32(1))
_17:
	if _pSelect == 0 {
		goto _20
	}

	_zStmt = _1501createTableStmt(tls, _db, _p)
	goto _21

_20:
	_pEnd2 = func() uintptr {
		if _tabOpts != 0 {
			return _pParse + 448
		}
		return _pEnd
	}()
	_n = int32(int64((*(*uintptr)(unsafe.Pointer(_pEnd2))) - (*(*uintptr)(unsafe.Pointer(_pParse + 432)))))
	if int32(*(*int8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pEnd2))))) == int32(';') {
		goto _22
	}

	_n = int32(uint32(_n) + (*(*uint32)(unsafe.Pointer(_pEnd2 + 8))))
_22:
	_zStmt = _226sqlite3MPrintf(tls, _db, ts+24939 /* "CREATE %s %.*s" */, _zType2, _n, *(*uintptr)(unsafe.Pointer(_pParse + 432)))
_21:
	_1502sqlite3NestedParse(tls, _pParse, ts+24954 /* "UPDATE %Q.%s SET type='%s', name..." */, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb))), ts+5127 /* "sqlite_master" */, _zType, *(*uintptr)(unsafe.Pointer(_p)), *(*uintptr)(unsafe.Pointer(_p)), *(*int32)(unsafe.Pointer(_pParse + 132)), _zStmt, *(*int32)(unsafe.Pointer(_pParse + 128)))
	_181sqlite3DbFree(tls, _db, _zStmt)
	_1503sqlite3ChangeCookie(tls, _pParse, _iDb)
	if ((*(*uint32)(unsafe.Pointer(_p + 64))) & uint32(0x8)) == uint32(0) {
		goto _23
	}

	_pDb = (*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)

	if (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pDb + 24))) + 104))) != 0 {
		goto _24
	}

	_1502sqlite3NestedParse(tls, _pParse, ts+25041 /* "CREATE TABLE %Q.sqlite_sequence(..." */, *(*uintptr)(unsafe.Pointer(_pDb)))
_24:
_23:
	_1504sqlite3VdbeAddParseSchemaOp(tls, _v, _iDb, _226sqlite3MPrintf(tls, _db, ts+25083 /* "tbl_name='%q' AND type!='trigger..." */, *(*uintptr)(unsafe.Pointer(_p))))
_13:
	if (*(*uint8)(unsafe.Pointer((_db + 176) + 5))) == 0 {
		goto _25
	}

	_pSchema = *(*uintptr)(unsafe.Pointer(_p + 112))

	_pOld = _841sqlite3HashInsert(tls, _pSchema+8, *(*uintptr)(unsafe.Pointer(_p)), _p)
	if _pOld == 0 {
		goto _26
	}

	_178sqlite3OomFault(tls, _db)
	return

_26:
	*(*uintptr)(unsafe.Pointer(_pParse + 512)) = null
	{
		p := &(*(*uint32)(unsafe.Pointer(_db + 44)))
		*p = uint32(uint32(*p) | uint32(0x1))
	}
	if (*(*uintptr)(unsafe.Pointer(_p + 24))) != 0 {
		goto _27
	}

	_zName = *(*uintptr)(unsafe.Pointer(_pParse + 432))

	if (*(*uintptr)(unsafe.Pointer(_pCons))) != 0 {
		goto _28
	}

	_pCons = _pEnd
_28:
	_nName = int32(int64(*(*uintptr)(unsafe.Pointer(_pCons)) - _zName))
	*(*int32)(unsafe.Pointer(_p + 80)) = int32(13) + _810sqlite3Utf8CharLen(tls, _zName, _nName)
_27:
_25:
}

// _1314sqlite3AddColumn is defined at sqlite3.c:101756:21
func _1314sqlite3AddColumn(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pName uintptr /* *TToken = SToken */, _pType uintptr /* *TToken = SToken */) {
	var (
		_p     uintptr // *TTable = STable
		_i     int32
		_z     uintptr // *int8
		_zType uintptr // *int8
		_pCol  uintptr // *TColumn = SColumn
		_db    uintptr // *Tsqlite3 = Ssqlite3
		_aNew  uintptr // *TColumn = SColumn
	)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	if set4(&_p, *(*uintptr)(unsafe.Pointer(_pParse + 512))) != 0 {
		goto _1
	}

	return

_1:
	if (int32(*(*int16)(unsafe.Pointer(_p + 70))) + int32(1)) <= (*(*int32)(unsafe.Pointer((_db + 124) + 8))) {
		goto _2
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+25117 /* "too many columns on %s" */, *(*uintptr)(unsafe.Pointer(_p)))
	return

_2:
	_z = _177sqlite3DbMallocRaw(tls, _db, uint64(((*(*uint32)(unsafe.Pointer(_pName + 8)))+(*(*uint32)(unsafe.Pointer(_pType + 8))))+uint32(2)))
	if _z != 0 {
		goto _3
	}

	return

_3:
	crt.Xmemcpy(tls, _z, *(*uintptr)(unsafe.Pointer(_pName)), uint64(*(*uint32)(unsafe.Pointer(_pName + 8))))
	*(*int8)(unsafe.Pointer(_z + uintptr(*(*uint32)(unsafe.Pointer(_pName + 8))))) = int8(0)
	_1104sqlite3Dequote(tls, _z)
	_i = int32(0)
_4:
	if _i >= int32(*(*int16)(unsafe.Pointer(_p + 70))) {
		goto _6
	}

	if Xsqlite3_stricmp(tls, _z, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 8))) + 32*uintptr(_i)))) != int32(0) {
		goto _7
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+25140 /* "duplicate column name: %s" */, _z)
	_181sqlite3DbFree(tls, _db, _z)
	return

_7:
	_i++
	goto _4

_6:
	if (int32(*(*int16)(unsafe.Pointer(_p + 70))) & int32(0x7)) != int32(0) {
		goto _8
	}

	_aNew = _869sqlite3DbRealloc(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 8)), uint64(uint64(int32(*(*int16)(unsafe.Pointer(_p + 70)))+int32(8))*uint64(32)))
	if _aNew != 0 {
		goto _9
	}

	_181sqlite3DbFree(tls, _db, _z)
	return

_9:
	*(*uintptr)(unsafe.Pointer(_p + 8)) = _aNew
_8:
	_pCol = (*(*uintptr)(unsafe.Pointer(_p + 8))) + 32*uintptr(*(*int16)(unsafe.Pointer(_p + 70)))
	crt.Xmemset(tls, _pCol, int32(0), uint64(32))
	*(*uintptr)(unsafe.Pointer(_pCol)) = _z
	if (*(*uint32)(unsafe.Pointer(_pType + 8))) != uint32(0) {
		goto _10
	}

	*(*int8)(unsafe.Pointer(_pCol + 25)) = int8('A')
	*(*uint8)(unsafe.Pointer(_pCol + 26)) = uint8(1)
	goto _11

_10:
	_zType = (_z + uintptr(_211sqlite3Strlen30(tls, _z))) + uintptr(1)
	crt.Xmemcpy(tls, _zType, *(*uintptr)(unsafe.Pointer(_pType)), uint64(*(*uint32)(unsafe.Pointer(_pType + 8))))
	*(*int8)(unsafe.Pointer(_zType + uintptr(*(*uint32)(unsafe.Pointer(_pType + 8))))) = int8(0)
	_1104sqlite3Dequote(tls, _zType)
	*(*int8)(unsafe.Pointer(_pCol + 25)) = _1505sqlite3AffinityType(tls, _zType, _pCol+26)
	{
		p := &(*(*uint8)(unsafe.Pointer(_pCol + 27)))
		*p = uint8(int32(*p) | int32(0x4))
	}
_11:
	(*(*int16)(unsafe.Pointer(_p + 70)))++
	*(*uint32)(unsafe.Pointer((_pParse + 104) + 8)) = uint32(0)
}

// _1315sqlite3AddDefaultValue is defined at sqlite3.c:101922:21
func _1315sqlite3AddDefaultValue(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pSpan uintptr /* *TExprSpan = SExprSpan */) {
	esc := crt.MustMalloc(72)
	var (
		_p    uintptr // *TTable = STable
		_pCol uintptr // *TColumn = SColumn
		_db   uintptr // *Tsqlite3 = Ssqlite3
		_x    = esc   // *TExpr = SExpr
	)
	defer crt.Free(esc)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_p = *(*uintptr)(unsafe.Pointer(_pParse + 512))
	if _p == 0 {
		goto _1
	}

	_pCol = (*(*uintptr)(unsafe.Pointer(_p + 8))) + 32*uintptr(int32(*(*int16)(unsafe.Pointer(_p + 70)))-int32(1))
	if _1506sqlite3ExprIsConstantOrFunction(tls, *(*uintptr)(unsafe.Pointer(_pSpan)), *(*uint8)(unsafe.Pointer((_db + 176) + 5))) != 0 {
		goto _2
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+25166 /* "default value of column [%s] is ..." */, *(*uintptr)(unsafe.Pointer(_pCol)))
	goto _3

_2:
	_777sqlite3ExprDelete(tls, _db, *(*uintptr)(unsafe.Pointer(_pCol + 8)))
	crt.Xmemset(tls, _x, int32(0), uint64(72))
	*(*uint8)(unsafe.Pointer(_x)) = uint8(155)
	*(*uintptr)(unsafe.Pointer(_x + 8)) = _618sqlite3DbStrNDup(tls, _db, *(*uintptr)(unsafe.Pointer(_pSpan + 8)), uint64(int32(int64((*(*uintptr)(unsafe.Pointer(_pSpan + 16)))-(*(*uintptr)(unsafe.Pointer(_pSpan + 8)))))))
	*(*uintptr)(unsafe.Pointer(_x + 16)) = *(*uintptr)(unsafe.Pointer(_pSpan))
	*(*uint32)(unsafe.Pointer(_x + 4)) = uint32(0x1000)
	*(*uintptr)(unsafe.Pointer(_pCol + 8)) = _1507sqlite3ExprDup(tls, _db, _x, int32(0x1))
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_x + 8)))
_3:
_1:
	_777sqlite3ExprDelete(tls, _db, *(*uintptr)(unsafe.Pointer(_pSpan)))
}

// _1316sqlite3PExpr is defined at sqlite3.c:92650:21
func _1316sqlite3PExpr(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _op int32, _pLeft uintptr /* *TExpr = SExpr */, _pRight uintptr /* *TExpr = SExpr */) (r uintptr /* *TExpr = SExpr */) {
	var _p uintptr // *TExpr = SExpr

	if _op != int32(44) || (*(*int32)(unsafe.Pointer(_pParse + 48))) != int32(0) {
		goto _1
	}

	_p = _1508sqlite3ExprAnd(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _pLeft, _pRight)
	goto _2

_1:
	_p = _373sqlite3DbMallocRawNN(tls, *(*uintptr)(unsafe.Pointer(_pParse)), uint64(72))
	if _p == 0 {
		goto _3
	}

	crt.Xmemset(tls, _p, int32(0), uint64(72))
	*(*uint8)(unsafe.Pointer(_p)) = uint8(_op & int32(0xff))
	*(*int16)(unsafe.Pointer(_p + 50)) = int16(-1)
_3:
	_1353sqlite3ExprAttachSubtrees(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _p, _pLeft, _pRight)
_2:
	if _p == 0 {
		goto _4
	}

	_1509sqlite3ExprCheckHeight(tls, _pParse, *(*int32)(unsafe.Pointer(_p + 40)))
_4:
	return _p
}

// _1317spanExpr is defined at sqlite3.c:137037:15
func _1317spanExpr(tls crt.TLS, _pOut uintptr /* *TExprSpan = SExprSpan */, _pParse uintptr /* *TParse = SParse */, _op int32, _t SToken) {
	var _p uintptr // *TExpr = SExpr

	_p = _373sqlite3DbMallocRawNN(tls, *(*uintptr)(unsafe.Pointer(_pParse)), uint64((uint64(72)+uint64(*(*uint32)(unsafe.Pointer(uintptr(unsafe.Pointer(&_t)) + 8))))+uint64(1)))
	if _p == 0 {
		goto _1
	}

	crt.Xmemset(tls, _p, int32(0), uint64(72))
	*(*uint8)(unsafe.Pointer(_p)) = uint8(_op)
	*(*uint32)(unsafe.Pointer(_p + 4)) = uint32(0x800000)
	*(*int16)(unsafe.Pointer(_p + 50)) = int16(-1)
	*(*uintptr)(unsafe.Pointer(_p + 8)) = _p + 72
	crt.Xmemcpy(tls, *(*uintptr)(unsafe.Pointer(_p + 8)), *(*uintptr)(unsafe.Pointer(uintptr(unsafe.Pointer(&_t)))), uint64(*(*uint32)(unsafe.Pointer(uintptr(unsafe.Pointer(&_t)) + 8))))
	*(*int8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 8))) + uintptr(*(*uint32)(unsafe.Pointer(uintptr(unsafe.Pointer(&_t)) + 8))))) = int8(0)
	if int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(uint8(*(*int8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_p + 8)))))))))&int32(0x80) == 0 {
		goto _2
	}

	if int32(*(*int8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_p + 8))))) != int32('"') {
		goto _3
	}

	{
		p := &(*(*uint32)(unsafe.Pointer(_p + 4)))
		*p = uint32(uint32(*p) | uint32(0x40))
	}
_3:
	_1104sqlite3Dequote(tls, *(*uintptr)(unsafe.Pointer(_p + 8)))
_2:
	*(*int32)(unsafe.Pointer(_p + 40)) = int32(1)
_1:
	*(*uintptr)(unsafe.Pointer(_pOut)) = _p
	*(*uintptr)(unsafe.Pointer(_pOut + 8)) = *(*uintptr)(unsafe.Pointer(uintptr(unsafe.Pointer(&_t))))
	*(*uintptr)(unsafe.Pointer(_pOut + 16)) = (*(*uintptr)(unsafe.Pointer(uintptr(unsafe.Pointer(&_t))))) + uintptr(*(*uint32)(unsafe.Pointer(uintptr(unsafe.Pointer(&_t)) + 8)))
}

// _1318sqlite3AddNotNull is defined at sqlite3.c:101817:21
func _1318sqlite3AddNotNull(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _onError int32) {
	var _p uintptr // *TTable = STable

	_p = *(*uintptr)(unsafe.Pointer(_pParse + 512))
	if _p != 0 && int32(*(*int16)(unsafe.Pointer(_p + 70))) >= int32(1) {
		goto _1
	}

	return

_1:
	*(*uint8)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_p + 8))) + 32*uintptr(int32(*(*int16)(unsafe.Pointer(_p + 70)))-int32(1))) + 24)) = uint8(_onError)
	{
		p := &(*(*uint32)(unsafe.Pointer(_p + 64)))
		*p = uint32(uint32(*p) | uint32(0x200))
	}
}

// _1319sqlite3AddPrimaryKey is defined at sqlite3.c:101994:21
func _1319sqlite3AddPrimaryKey(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pList uintptr /* *TExprList = SExprList */, _onError int32, _autoInc int32, _sortOrder int32) {
	var (
		_pTab   uintptr // *TTable = STable
		_pCol   uintptr // *TColumn = SColumn
		_iCol   int32
		_i      int32
		_nTerm  int32
		_pCExpr uintptr // *TExpr = SExpr
		_zCName uintptr // *int8
	)
	_pTab = *(*uintptr)(unsafe.Pointer(_pParse + 512))
	_pCol = 0
	_iCol = int32(-1)
	if _pTab != 0 {
		goto _1
	}

	goto _primary_key_exit

_1:
	if ((*(*uint32)(unsafe.Pointer(_pTab + 64))) & uint32(0x4)) == 0 {
		goto _2
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+25211 /* "table \"%s\" has more than one pri..." */, *(*uintptr)(unsafe.Pointer(_pTab)))
	goto _primary_key_exit

_2:
	{
		p := &(*(*uint32)(unsafe.Pointer(_pTab + 64)))
		*p = uint32(uint32(*p) | uint32(0x4))
	}
	if _pList != 0 {
		goto _3
	}

	_iCol = int32(*(*int16)(unsafe.Pointer(_pTab + 70))) - int32(1)
	_pCol = (*(*uintptr)(unsafe.Pointer(_pTab + 8))) + 32*uintptr(_iCol)
	{
		p := &(*(*uint8)(unsafe.Pointer(_pCol + 27)))
		*p = uint8(int32(*p) | int32(0x1))
	}
	_nTerm = int32(1)
	goto _4

_3:
	_nTerm = *(*int32)(unsafe.Pointer(_pList))
	_i = int32(0)
_5:
	if _i >= _nTerm {
		goto _7
	}

	_pCExpr = _1510sqlite3ExprSkipCollate(tls, *(*uintptr)(unsafe.Pointer((_pList + 8) + 32*uintptr(_i))))

	_1511sqlite3StringToId(tls, _pCExpr)
	if int32(*(*uint8)(unsafe.Pointer(_pCExpr))) != int32(59) {
		goto _8
	}

	_zCName = *(*uintptr)(unsafe.Pointer(_pCExpr + 8))
	_iCol = int32(0)
_9:
	if _iCol >= int32(*(*int16)(unsafe.Pointer(_pTab + 70))) {
		goto _11
	}

	if _110sqlite3StrICmp(tls, _zCName, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTab + 8))) + 32*uintptr(_iCol)))) != int32(0) {
		goto _12
	}

	_pCol = (*(*uintptr)(unsafe.Pointer(_pTab + 8))) + 32*uintptr(_iCol)
	{
		p := &(*(*uint8)(unsafe.Pointer(_pCol + 27)))
		*p = uint8(int32(*p) | int32(0x1))
	}
	goto _11

_12:
	_iCol++
	goto _9

_11:
_8:
	_i++
	goto _5

_7:
_4:
	if _nTerm != int32(1) || _pCol == 0 || _110sqlite3StrICmp(tls, _223sqlite3ColumnType(tls, _pCol, ts+4553 /* "" */), ts+10145 /* "INTEGER" */) != int32(0) || _sortOrder == int32(1) {
		goto _13
	}

	*(*int16)(unsafe.Pointer(_pTab + 68)) = int16(_iCol)
	*(*uint8)(unsafe.Pointer(_pTab + 76)) = uint8(_onError)

	{
		p := &(*(*uint32)(unsafe.Pointer(_pTab + 64)))
		*p = uint32(uint32(*p) | uint32(_autoInc*int32(0x8)))
	}
	if _pList == 0 {
		goto _15
	}

	*(*uint8)(unsafe.Pointer(_pParse + 466)) = *(*uint8)(unsafe.Pointer(_pList + 8 + 24))
_15:
	goto _14

_13:
	if _autoInc == 0 {
		goto _16
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+25252 /* "AUTOINCREMENT is only allowed on..." */)
	goto _17

_16:
	_1320sqlite3CreateIndex(tls, _pParse, null, null, null, _pList, _onError, null, null, _sortOrder, int32(0), uint8(2))
	_pList = null
_17:
_14:
	goto _primary_key_exit
_primary_key_exit:
	_551sqlite3ExprListDelete(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _pList)
	return
}

// _1320sqlite3CreateIndex is defined at sqlite3.c:103592:21
func _1320sqlite3CreateIndex(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pName1 uintptr /* *TToken = SToken */, _pName2 uintptr /* *TToken = SToken */, _pTblName uintptr /* *TSrcList = SSrcList */, _pList uintptr /* *TExprList = SExprList */, _onError int32, _pStart uintptr /* *TToken = SToken */, _pPIWhere uintptr /* *TExpr = SExpr */, _sortOrder int32, _ifNotExist int32, _idxType uint8) {
	esc := crt.MustMalloc(96)
	var (
		_pTab               uintptr // *TTable = STable
		_pIndex             uintptr // *TIndex = SIndex
		_zName              uintptr // *int8
		_nName              int32
		_i                  int32
		_j                  int32
		_sFix               = esc // *TDbFixer = SDbFixer
		_sortOrderMask      int32
		_db                 uintptr // *Tsqlite3 = Ssqlite3
		_pDb                uintptr // *TDb = SDb
		_iDb                int32
		_pName              = esc + 48 // **TToken = SToken
		_pListItem          uintptr    // *SExprList_item
		_nExtra             int32
		_nExtraCol          int32
		_zExtra             = esc + 64 // **int8
		_pPk                uintptr    // *TIndex = SIndex
		_n                  int32
		_pLoop              uintptr    // *TIndex = SIndex
		_zDb                uintptr    // *int8
		_prevCol            = esc + 80 // *TToken = SToken
		_pExpr              uintptr    // *TExpr = SExpr
		_pCExpr             uintptr    // *TExpr = SExpr
		_requestedSortOrder int32
		_zColl              uintptr // *int8
		_pCopy              uintptr // *TExprList = SExprList
		_nColl              int32
		_x                  int32
		_pIdx               uintptr // *TIndex = SIndex
		_k                  int32
		_z1                 uintptr // *int8
		_z2                 uintptr // *int8
		_p                  uintptr // *TIndex = SIndex
		_v                  uintptr // *TVdbe = SVdbe
		_zStmt              uintptr // *int8
		_iMem               int32
		_1n                 int32
		_pOther             uintptr // *TIndex = SIndex
	)
	defer crt.Free(esc)
	_pTab = 0
	_pIndex = 0
	_zName = 0
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	*(*uintptr)(unsafe.Pointer(_pName)) = 0
	_nExtra = int32(0)
	*(*uintptr)(unsafe.Pointer(_zExtra)) = 0
	_pPk = 0
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 && (*(*int32)(unsafe.Pointer(_pParse + 48))) <= int32(0) {
		goto _1
	}

	goto _exit_create_index

_1:
	if *(*uint8)(unsafe.Pointer(_pParse + 468)) == 0 || int32(_idxType) == int32(2) {
		goto _2
	}

	goto _exit_create_index

_2:
	if int32(0) == _1237sqlite3ReadSchema(tls, _pParse) {
		goto _3
	}

	goto _exit_create_index

_3:
	if _pTblName == 0 {
		goto _4
	}

	_iDb = _1485sqlite3TwoPartName(tls, _pParse, _pName1, _pName2, _pName)
	if _iDb >= int32(0) {
		goto _6
	}

	goto _exit_create_index

_6:
	if (*(*uint8)(unsafe.Pointer((_db + 176) + 5))) != 0 {
		goto _7
	}

	_pTab = _1512sqlite3SrcListLookup(tls, _pParse, _pTblName)
	if (*(*uint32)(unsafe.Pointer(_pName2 + 8))) != uint32(0) || _pTab == 0 || (*(*uintptr)(unsafe.Pointer(_pTab + 112))) != (*(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32) + 24))) {
		goto _8
	}

	_iDb = int32(1)
_8:
_7:
	_1513sqlite3FixInit(tls, _sFix, _pParse, _iDb, ts+25308 /* "index" */, *(*uintptr)(unsafe.Pointer(_pName)))
	if _1514sqlite3FixSrcList(tls, _sFix, _pTblName) == 0 {
		goto _9
	}

_9:
	_pTab = _1515sqlite3LocateTableItem(tls, _pParse, uint32(0), _pTblName+8)

	if _pTab != 0 {
		goto _10
	}

	goto _exit_create_index

_10:
	if _iDb != int32(1) || (*(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)) + 24))) == (*(*uintptr)(unsafe.Pointer(_pTab + 112))) {
		goto _11
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+25314 /* "cannot create a TEMP index on no..." */, *(*uintptr)(unsafe.Pointer(_pTab)))
	goto _exit_create_index

_11:
	if ((*(*uint32)(unsafe.Pointer(_pTab + 64))) & uint32(0x20)) == uint32(0) {
		goto _12
	}

	_pPk = _1060sqlite3PrimaryKeyIndex(tls, _pTab)
_12:
	goto _5

_4:
	_pTab = *(*uintptr)(unsafe.Pointer(_pParse + 512))
	if _pTab != 0 {
		goto _13
	}

	goto _exit_create_index

_13:
	_iDb = _1069sqlite3SchemaToIndex(tls, _db, *(*uintptr)(unsafe.Pointer(_pTab + 112)))
_5:
	_pDb = (*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)

	if Xsqlite3_strnicmp(tls, *(*uintptr)(unsafe.Pointer(_pTab)), ts+6844 /* "sqlite_" */, int32(7)) != int32(0) || int32(*(*uint8)(unsafe.Pointer((_db + 176) + 5))) != int32(0) || Xsqlite3_strnicmp(tls, (*(*uintptr)(unsafe.Pointer(_pTab)))+7, ts+25364 /* "altertab_" */, int32(9)) == int32(0) {
		goto _14
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+25374 /* "table %s may not be indexed" */, *(*uintptr)(unsafe.Pointer(_pTab)))
	goto _exit_create_index

_14:
	if (*(*uintptr)(unsafe.Pointer(_pTab + 24))) == 0 {
		goto _15
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+25402 /* "views may not be indexed" */)
	goto _exit_create_index

_15:
	if *(*int32)(unsafe.Pointer(_pTab + 84)) == 0 {
		goto _16
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+25427 /* "virtual tables may not be indexe..." */)
	goto _exit_create_index

_16:
	if (*(*uintptr)(unsafe.Pointer(_pName))) == 0 {
		goto _17
	}

	_zName = _1482sqlite3NameFromToken(tls, _db, *(*uintptr)(unsafe.Pointer(_pName)))
	if _zName != 0 {
		goto _19
	}

	goto _exit_create_index

_19:
	if int32(0) == _1486sqlite3CheckObjectName(tls, _pParse, _zName) {
		goto _20
	}

	goto _exit_create_index

_20:
	if (*(*uint8)(unsafe.Pointer((_db + 176) + 5))) != 0 {
		goto _21
	}

	if _221sqlite3FindTable(tls, _db, _zName, null) == 0 {
		goto _22
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+25461 /* "there is already a table named %..." */, _zName)
	goto _exit_create_index

_22:
_21:
	if _1003sqlite3FindIndex(tls, _db, _zName, *(*uintptr)(unsafe.Pointer(_pDb))) == 0 {
		goto _23
	}

	if _ifNotExist != 0 {
		goto _24
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+25495 /* "index %s already exists" */, _zName)
	goto _25

_24:
	_1487sqlite3CodeVerifySchema(tls, _pParse, _iDb)
_25:
	goto _exit_create_index

_23:
	goto _18

_17:
	_pLoop = *(*uintptr)(unsafe.Pointer(_pTab + 16))
	_n = int32(1)
_26:
	if _pLoop == 0 {
		goto _28
	}

	_pLoop = *(*uintptr)(unsafe.Pointer(_pLoop + 40))
	_n++
	goto _26

_28:
	_zName = _226sqlite3MPrintf(tls, _db, ts+25519 /* "sqlite_autoindex_%s_%d" */, *(*uintptr)(unsafe.Pointer(_pTab)), _n)
	if _zName != 0 {
		goto _29
	}

	goto _exit_create_index

_29:
	if *(*uint8)(unsafe.Pointer(_pParse + 468)) == 0 {
		goto _30
	}

	(*(*int8)(unsafe.Pointer(_zName + 7)))++
_30:
_18:
	_zDb = *(*uintptr)(unsafe.Pointer(_pDb))
	if _1480sqlite3AuthCheck(tls, _pParse, int32(18), func() uintptr {
		if (1 != 0) && (_iDb == int32(1)) {
			return ts + 5250 /* "sqlite_temp_master" */
		}
		return ts + 5127 /* "sqlite_master" */
	}(), null, _zDb) == 0 {
		goto _31
	}

	goto _exit_create_index

_31:
	_i = int32(1)
	if 1 == 0 || _iDb != int32(1) {
		goto _32
	}

	_i = int32(3)
_32:
	if _1480sqlite3AuthCheck(tls, _pParse, _i, _zName, *(*uintptr)(unsafe.Pointer(_pTab)), _zDb) == 0 {
		goto _33
	}

	goto _exit_create_index

_33:
	if _pList != 0 {
		goto _34
	}

	_1516sqlite3TokenInit(tls, _prevCol, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTab + 8))) + 32*uintptr(int32(*(*int16)(unsafe.Pointer(_pTab + 70)))-int32(1)))))
	_pList = _1331sqlite3ExprListAppend(tls, _pParse, null, _1335sqlite3ExprAlloc(tls, _db, int32(59), _prevCol, int32(0)))
	if _pList != 0 {
		goto _36
	}

	goto _exit_create_index

_36:
	_1342sqlite3ExprListSetSortOrder(tls, _pList, _sortOrder)
	goto _35

_34:
	_1345sqlite3ExprListCheckLength(tls, _pParse, _pList, ts+25308 /* "index" */)
_35:
	_i = int32(0)
_37:
	if _i >= (*(*int32)(unsafe.Pointer(_pList))) {
		goto _39
	}

	_pExpr = *(*uintptr)(unsafe.Pointer((_pList + 8) + 32*uintptr(_i)))

	if int32(*(*uint8)(unsafe.Pointer(_pExpr))) != int32(94) {
		goto _40
	}

	_nExtra = int32(_nExtra + (int32(1) + _211sqlite3Strlen30(tls, *(*uintptr)(unsafe.Pointer(_pExpr + 8)))))
_40:
	_i++
	goto _37

_39:
	_nName = _211sqlite3Strlen30(tls, _zName)
	_nExtraCol = func() int32 {
		if _pPk != 0 {
			return int32(*(*uint16)(unsafe.Pointer(_pPk + 94)))
		}
		return int32(1)
	}()
	_pIndex = _1517sqlite3AllocateIndexObject(tls, _db, int16((*(*int32)(unsafe.Pointer(_pList)))+_nExtraCol), (_nName+_nExtra)+int32(1), _zExtra)
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _41
	}

	goto _exit_create_index

_41:
	*(*uintptr)(unsafe.Pointer(_pIndex)) = *(*uintptr)(unsafe.Pointer(_zExtra))
	*(*uintptr)(unsafe.Pointer(_zExtra)) += uintptr(_nName + int32(1))
	crt.Xmemcpy(tls, *(*uintptr)(unsafe.Pointer(_pIndex)), _zName, uint64(_nName+int32(1)))
	*(*uintptr)(unsafe.Pointer(_pIndex + 24)) = _pTab
	*(*uint8)(unsafe.Pointer(_pIndex + 98)) = uint8(_onError)
	set204b(&(*(*uint8)(unsafe.Pointer(_pIndex + 99))), uint32(bool2int(_onError != int32(0))))
	set205b(&(*(*uint8)(unsafe.Pointer(_pIndex + 99))), uint32(_idxType))
	*(*uintptr)(unsafe.Pointer(_pIndex + 48)) = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)) + 24))
	*(*uint16)(unsafe.Pointer(_pIndex + 94)) = uint16(*(*int32)(unsafe.Pointer(_pList)))
	if _pPIWhere == 0 {
		goto _42
	}

	_1492sqlite3ResolveSelfReference(tls, _pParse, _pTab, int32(0x2), _pPIWhere, null)
	*(*uintptr)(unsafe.Pointer(_pIndex + 72)) = _pPIWhere
	_pPIWhere = null
_42:
	if int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pDb + 24))) + 112))) < int32(4) {
		goto _43
	}

	_sortOrderMask = int32(-1)
	goto _44

_43:
	_sortOrderMask = int32(0)
_44:
	_i = int32(0)
	_pListItem = _pList + 8
_45:
	if _i >= (*(*int32)(unsafe.Pointer(_pList))) {
		goto _47
	}

	_1511sqlite3StringToId(tls, *(*uintptr)(unsafe.Pointer(_pListItem)))
	_1492sqlite3ResolveSelfReference(tls, _pParse, _pTab, int32(0x20), *(*uintptr)(unsafe.Pointer(_pListItem)), null)
	if (*(*int32)(unsafe.Pointer(_pParse + 48))) == 0 {
		goto _48
	}

	goto _exit_create_index

_48:
	_pCExpr = _1510sqlite3ExprSkipCollate(tls, *(*uintptr)(unsafe.Pointer(_pListItem)))
	if int32(*(*uint8)(unsafe.Pointer(_pCExpr))) == int32(145) {
		goto _49
	}

	if _pTab != (*(*uintptr)(unsafe.Pointer(_pParse + 512))) {
		goto _51
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+25542 /* "expressions prohibited in PRIMAR..." */)
	goto _exit_create_index

_51:
	if (*(*uintptr)(unsafe.Pointer(_pIndex + 80))) != 0 {
		goto _52
	}

	_pCopy = _1518sqlite3ExprListDup(tls, _db, _pList, int32(0))
	*(*uintptr)(unsafe.Pointer(_pIndex + 80)) = _pCopy
	if (*(*uint8)(unsafe.Pointer(_db + 97))) != 0 {
		goto _53
	}

	_pListItem = (_pCopy + 8) + 32*uintptr(_i)
_53:
_52:
	_j = int32(-2)
	*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIndex + 8))) + 2*uintptr(_i))) = int16(-2)
	set204b(&(*(*uint8)(unsafe.Pointer(_pIndex + 99))), uint32(0))
	goto _50

_49:
	_j = int32(*(*int16)(unsafe.Pointer(_pCExpr + 48)))

	if _j >= int32(0) {
		goto _54
	}

	_j = int32(*(*int16)(unsafe.Pointer(_pTab + 68)))
	goto _55

_54:
	if int32(*(*uint8)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pTab + 8))) + 32*uintptr(_j)) + 24))) != int32(0) {
		goto _56
	}

	set204b(&(*(*uint8)(unsafe.Pointer(_pIndex + 99))), uint32(0))
_56:
_55:
	*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIndex + 8))) + 2*uintptr(_i))) = int16(_j)
_50:
	_zColl = null
	if int32(*(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pListItem))))) != int32(94) {
		goto _57
	}

	_zColl = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pListItem))) + 8))
	_nColl = _211sqlite3Strlen30(tls, _zColl) + int32(1)

	crt.Xmemcpy(tls, *(*uintptr)(unsafe.Pointer(_zExtra)), _zColl, uint64(_nColl))
	_zColl = *(*uintptr)(unsafe.Pointer(_zExtra))
	*(*uintptr)(unsafe.Pointer(_zExtra)) += uintptr(_nColl)
	_nExtra = int32(_nExtra - _nColl)
	goto _58

_57:
	if _j < int32(0) {
		goto _59
	}

	_zColl = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pTab + 8))) + 32*uintptr(_j)) + 16))
_59:
_58:
	if _zColl != 0 {
		goto _60
	}

	_zColl = _224sqlite3StrBINARY
_60:
	if (*(*uint8)(unsafe.Pointer((_db + 176) + 5))) != 0 || _1519sqlite3LocateCollSeq(tls, _pParse, _zColl) != 0 {
		goto _61
	}

	goto _exit_create_index

_61:
	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIndex + 64))) + 8*uintptr(_i))) = _zColl
	_requestedSortOrder = int32(*(*uint8)(unsafe.Pointer(_pListItem + 24))) & _sortOrderMask
	*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIndex + 56))) + uintptr(_i))) = uint8(_requestedSortOrder)
	_i++
	_pListItem += 32
	goto _45

_47:
	if _pPk == 0 {
		goto _62
	}

	_j = int32(0)
_64:
	if _j >= int32(*(*uint16)(unsafe.Pointer(_pPk + 94))) {
		goto _66
	}

	_x = int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPk + 8))) + 2*uintptr(_j))))

	if _1520hasColumn(tls, *(*uintptr)(unsafe.Pointer(_pIndex + 8)), int32(*(*uint16)(unsafe.Pointer(_pIndex + 94))), _x) == 0 {
		goto _67
	}

	(*(*uint16)(unsafe.Pointer(_pIndex + 96)))--
	goto _68

_67:
	*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIndex + 8))) + 2*uintptr(_i))) = int16(_x)
	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIndex + 64))) + 8*uintptr(_i))) = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPk + 64))) + 8*uintptr(_j)))
	*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIndex + 56))) + uintptr(_i))) = *(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPk + 56))) + uintptr(_j)))
	_i++
_68:
	_j++
	goto _64

_66:
	goto _63

_62:
	*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIndex + 8))) + 2*uintptr(_i))) = int16(-1)
	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIndex + 64))) + 8*uintptr(_i))) = _224sqlite3StrBINARY
_63:
	_1006sqlite3DefaultRowEst(tls, _pIndex)
	if (*(*uintptr)(unsafe.Pointer(_pParse + 512))) != 0 {
		goto _69
	}

	_1494estimateIndexWidth(tls, _pIndex)
_69:
	if _pTblName == 0 || int32(*(*uint16)(unsafe.Pointer(_pIndex + 96))) < int32(*(*int16)(unsafe.Pointer(_pTab + 70))) {
		goto _70
	}

	set206b(&(*(*uint8)(unsafe.Pointer(_pIndex + 99))), uint32(1))
	_j = int32(0)
_71:
	if _j >= int32(*(*int16)(unsafe.Pointer(_pTab + 70))) {
		goto _73
	}

	if _j != int32(*(*int16)(unsafe.Pointer(_pTab + 68))) {
		goto _74
	}

	goto _72

_74:
	if int32(_1521sqlite3ColumnOfIndex(tls, _pIndex, int16(_j))) < int32(0) {
		goto _75
	}

	goto _72

_75:
	set206b(&(*(*uint8)(unsafe.Pointer(_pIndex + 99))), uint32(0))
	goto _73

_72:
	_j++
	goto _71

_73:
_70:
	if _pTab != (*(*uintptr)(unsafe.Pointer(_pParse + 512))) {
		goto _76
	}

	_pIdx = *(*uintptr)(unsafe.Pointer(_pTab + 16))
_77:
	if _pIdx == 0 {
		goto _79
	}

	if int32(*(*uint16)(unsafe.Pointer(_pIdx + 94))) == int32(*(*uint16)(unsafe.Pointer(_pIndex + 94))) {
		goto _80
	}

	goto _78

_80:
	_k = int32(0)
_81:
	if _k >= int32(*(*uint16)(unsafe.Pointer(_pIdx + 94))) {
		goto _83
	}

	if int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 8))) + 2*uintptr(_k)))) == int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIndex + 8))) + 2*uintptr(_k)))) {
		goto _84
	}

	goto _83

_84:
	_z1 = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 64))) + 8*uintptr(_k)))
	_z2 = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIndex + 64))) + 8*uintptr(_k)))
	if _110sqlite3StrICmp(tls, _z1, _z2) == 0 {
		goto _85
	}

	goto _83

_85:
	_k++
	goto _81

_83:
	if _k != int32(*(*uint16)(unsafe.Pointer(_pIdx + 94))) {
		goto _86
	}

	if int32(*(*uint8)(unsafe.Pointer(_pIdx + 98))) == int32(*(*uint8)(unsafe.Pointer(_pIndex + 98))) {
		goto _87
	}

	if int32(*(*uint8)(unsafe.Pointer(_pIdx + 98))) == int32(10) || int32(*(*uint8)(unsafe.Pointer(_pIndex + 98))) == int32(10) {
		goto _88
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+25603 /* "conflicting ON CONFLICT clauses ..." */, int32(0))
_88:
	if int32(*(*uint8)(unsafe.Pointer(_pIdx + 98))) != int32(10) {
		goto _89
	}

	*(*uint8)(unsafe.Pointer(_pIdx + 98)) = *(*uint8)(unsafe.Pointer(_pIndex + 98))
_89:
_87:
	if int32(_idxType) != int32(2) {
		goto _90
	}

	set205b(&(*(*uint8)(unsafe.Pointer(_pIdx + 99))), uint32(_idxType))
_90:
	goto _exit_create_index

_86:
_78:
	_pIdx = *(*uintptr)(unsafe.Pointer(_pIdx + 40))
	goto _77

_79:
_76:
	if (*(*uint8)(unsafe.Pointer((_db + 176) + 5))) == 0 {
		goto _91
	}

	_p = _841sqlite3HashInsert(tls, (*(*uintptr)(unsafe.Pointer(_pIndex + 48)))+32, *(*uintptr)(unsafe.Pointer(_pIndex)), _pIndex)
	if _p == 0 {
		goto _93
	}

	_178sqlite3OomFault(tls, _db)
	goto _exit_create_index

_93:
	{
		p := &(*(*uint32)(unsafe.Pointer(_db + 44)))
		*p = uint32(uint32(*p) | uint32(0x1))
	}
	if _pTblName == 0 {
		goto _94
	}

	*(*int32)(unsafe.Pointer(_pIndex + 88)) = *(*int32)(unsafe.Pointer(_db + 176))
_94:
	goto _92

_91:
	if ((*(*uint32)(unsafe.Pointer(_pTab + 64)))&uint32(0x20)) != uint32(0) && _pTblName == 0 {
		goto _95
	}

	_iMem = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))
	_v = _1472sqlite3GetVdbe(tls, _pParse)
	if _v != 0 {
		goto _96
	}

	goto _exit_create_index

_96:
	_1488sqlite3BeginWriteOperation(tls, _pParse, int32(1), _iDb)
	*(*int32)(unsafe.Pointer(_pIndex + 88)) = _1473sqlite3VdbeAddOp0(tls, _v, int32(166))
	_1241sqlite3VdbeAddOp3(tls, _v, int32(135), _iDb, _iMem, int32(2))
	if _pStart == 0 {
		goto _97
	}

	_1n = int32(uint32(int32(int64((*(*uintptr)(unsafe.Pointer(_pParse + 448)))-(*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pName)))))))) + (*(*uint32)(unsafe.Pointer((_pParse + 448) + 8))))
	if int32(*(*int8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pName))))) + uintptr(_1n-int32(1))))) != int32(';') {
		goto _99
	}

	_1n--
_99:
	_zStmt = _226sqlite3MPrintf(tls, _db, ts+25645 /* "CREATE%s INDEX %.*s" */, func() uintptr {
		if _onError == int32(0) {
			return ts + 4553 /* "" */
		}
		return ts + 25665 /* " UNIQUE" */
	}(), _1n, *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pName)))))
	goto _98

_97:
	_zStmt = null
_98:
	_1502sqlite3NestedParse(tls, _pParse, ts+25673 /* "INSERT INTO %Q.%s VALUES('index'..." */, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb))), ts+5127 /* "sqlite_master" */, *(*uintptr)(unsafe.Pointer(_pIndex)), *(*uintptr)(unsafe.Pointer(_pTab)), _iMem, _zStmt)
	_181sqlite3DbFree(tls, _db, _zStmt)
	if _pTblName == 0 {
		goto _100
	}

	_1522sqlite3RefillIndex(tls, _pParse, _pIndex, _iMem)
	_1503sqlite3ChangeCookie(tls, _pParse, _iDb)
	_1504sqlite3VdbeAddParseSchemaOp(tls, _v, _iDb, _226sqlite3MPrintf(tls, _db, ts+25721 /* "name='%q' AND type='index'" */, *(*uintptr)(unsafe.Pointer(_pIndex))))
	_1473sqlite3VdbeAddOp0(tls, _v, int32(151))
_100:
	_1474sqlite3VdbeJumpHere(tls, _v, *(*int32)(unsafe.Pointer(_pIndex + 88)))
_95:
_92:
	if (*(*uint8)(unsafe.Pointer((_db + 176) + 5))) == 0 && _pTblName != 0 {
		goto _101
	}

	if _onError == int32(5) && (*(*uintptr)(unsafe.Pointer(_pTab + 16))) != 0 && int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTab + 16))) + 98))) != int32(5) {
		goto _102
	}

	*(*uintptr)(unsafe.Pointer(_pIndex + 40)) = *(*uintptr)(unsafe.Pointer(_pTab + 16))
	*(*uintptr)(unsafe.Pointer(_pTab + 16)) = _pIndex
	goto _103

_102:
	_pOther = *(*uintptr)(unsafe.Pointer(_pTab + 16))
_104:
	if (*(*uintptr)(unsafe.Pointer(_pOther + 40))) == 0 || int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pOther + 40))) + 98))) == int32(5) {
		goto _105
	}

	_pOther = *(*uintptr)(unsafe.Pointer(_pOther + 40))
	goto _104

_105:
	*(*uintptr)(unsafe.Pointer(_pIndex + 40)) = *(*uintptr)(unsafe.Pointer(_pOther + 40))
	*(*uintptr)(unsafe.Pointer(_pOther + 40)) = _pIndex
_103:
	_pIndex = null
_101:
	goto _exit_create_index
_exit_create_index:
	if _pIndex == 0 {
		goto _106
	}

	_1007freeIndex(tls, _db, _pIndex)
_106:
	_777sqlite3ExprDelete(tls, _db, _pPIWhere)
	_551sqlite3ExprListDelete(tls, _db, _pList)
	_1339sqlite3SrcListDelete(tls, _db, _pTblName)
	_181sqlite3DbFree(tls, _db, _zName)
}

// _1321sqlite3AddCheckConstraint is defined at sqlite3.c:102064:21
func _1321sqlite3AddCheckConstraint(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pCheckExpr uintptr /* *TExpr = SExpr */) {
	var (
		_pTab uintptr // *TTable = STable
		_db   uintptr // *Tsqlite3 = Ssqlite3
	)
	_pTab = *(*uintptr)(unsafe.Pointer(_pParse + 512))
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	if _pTab == 0 || *(*uint8)(unsafe.Pointer(_pParse + 468)) != 0 || _1085sqlite3BtreeIsReadonly(tls, *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(*(*uint8)(unsafe.Pointer((_db + 176) + 4)))) + 8))) != 0 {
		goto _1
	}

	*(*uintptr)(unsafe.Pointer(_pTab + 48)) = _1331sqlite3ExprListAppend(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pTab + 48)), _pCheckExpr)
	if (*(*uint32)(unsafe.Pointer((_pParse + 104) + 8))) == 0 {
		goto _3
	}

	_1332sqlite3ExprListSetName(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pTab + 48)), _pParse+104, int32(1))
_3:
	goto _2

_1:
	_777sqlite3ExprDelete(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _pCheckExpr)
_2:
}

// _1322sqlite3CreateForeignKey is defined at sqlite3.c:103323:21
func _1322sqlite3CreateForeignKey(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pFromCol uintptr /* *TExprList = SExprList */, _pTo uintptr /* *TToken = SToken */, _pToCol uintptr /* *TExprList = SExprList */, _flags int32) {
	var (
		_db      uintptr // *Tsqlite3 = Ssqlite3
		_pFKey   uintptr // *TFKey = SFKey
		_pNextTo uintptr // *TFKey = SFKey
		_p       uintptr // *TTable = STable
		_nByte   int32
		_i       int32
		_nCol    int32
		_z       uintptr // *int8
		_iCol    int32
		_j       int32
		_n       int32
	)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_pFKey = 0
	_p = *(*uintptr)(unsafe.Pointer(_pParse + 512))

	if _p != 0 && *(*uint8)(unsafe.Pointer(_pParse + 468)) == 0 {
		goto _1
	}

	goto _fk_end

_1:
	if _pFromCol != 0 {
		goto _2
	}

	_iCol = int32(*(*int16)(unsafe.Pointer(_p + 70))) - int32(1)
	if _iCol >= int32(0) {
		goto _4
	}

	goto _fk_end

_4:
	if _pToCol == 0 || (*(*int32)(unsafe.Pointer(_pToCol))) == int32(1) {
		goto _5
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+25748 /* "foreign key on %s should referen..." */, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 8))) + 32*uintptr(_iCol))), _pTo)
	goto _fk_end

_5:
	_nCol = int32(1)
	goto _3

_2:
	if _pToCol == 0 || (*(*int32)(unsafe.Pointer(_pToCol))) == (*(*int32)(unsafe.Pointer(_pFromCol))) {
		goto _6
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+25811 /* "number of columns in foreign key..." */)
	goto _fk_end

	goto _7

_6:
	_nCol = *(*int32)(unsafe.Pointer(_pFromCol))
_7:
_3:
	_nByte = int32(((uint64(80) + (uint64(_nCol-int32(1)) * uint64(16))) + uint64(*(*uint32)(unsafe.Pointer(_pTo + 8)))) + uint64(1))
	if _pToCol == 0 {
		goto _8
	}

	_i = int32(0)
_9:
	if _i >= (*(*int32)(unsafe.Pointer(_pToCol))) {
		goto _11
	}

	_nByte = int32(_nByte + (_211sqlite3Strlen30(tls, *(*uintptr)(unsafe.Pointer(((_pToCol + 8) + 32*uintptr(_i)) + 8))) + int32(1)))
	_i++
	goto _9

_11:
_8:
	_pFKey = _295sqlite3DbMallocZero(tls, _db, uint64(_nByte))
	if _pFKey != 0 {
		goto _12
	}

	goto _fk_end

_12:
	*(*uintptr)(unsafe.Pointer(_pFKey)) = _p
	*(*uintptr)(unsafe.Pointer(_pFKey + 8)) = *(*uintptr)(unsafe.Pointer(_p + 32))
	_z = (_pFKey + 64) + 16*uintptr(_nCol)
	*(*uintptr)(unsafe.Pointer(_pFKey + 16)) = _z
	crt.Xmemcpy(tls, _z, *(*uintptr)(unsafe.Pointer(_pTo)), uint64(*(*uint32)(unsafe.Pointer(_pTo + 8))))
	*(*int8)(unsafe.Pointer(_z + uintptr(*(*uint32)(unsafe.Pointer(_pTo + 8))))) = int8(0)
	_1104sqlite3Dequote(tls, _z)
	_z += uintptr((*(*uint32)(unsafe.Pointer(_pTo + 8))) + uint32(1))
	*(*int32)(unsafe.Pointer(_pFKey + 40)) = _nCol
	if _pFromCol != 0 {
		goto _13
	}

	*(*int32)(unsafe.Pointer(_pFKey + 64)) = int32(*(*int16)(unsafe.Pointer(_p + 70))) - int32(1)
	goto _14

_13:
	_i = int32(0)
_15:
	if _i >= _nCol {
		goto _17
	}

	_j = int32(0)
_18:
	if _j >= int32(*(*int16)(unsafe.Pointer(_p + 70))) {
		goto _20
	}

	if _110sqlite3StrICmp(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 8))) + 32*uintptr(_j))), *(*uintptr)(unsafe.Pointer(((_pFromCol + 8) + 32*uintptr(_i)) + 8))) != int32(0) {
		goto _21
	}

	*(*int32)(unsafe.Pointer((_pFKey + 64) + 16*uintptr(_i))) = _j
	goto _20

_21:
	_j++
	goto _18

_20:
	if _j < int32(*(*int16)(unsafe.Pointer(_p + 70))) {
		goto _22
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+25905 /* "unknown column \"%s\" in foreign k..." */, *(*uintptr)(unsafe.Pointer(((_pFromCol + 8) + 32*uintptr(_i)) + 8)))
	goto _fk_end

_22:
	_i++
	goto _15

_17:
_14:
	if _pToCol == 0 {
		goto _23
	}

	_i = int32(0)
_24:
	if _i >= _nCol {
		goto _26
	}

	_n = _211sqlite3Strlen30(tls, *(*uintptr)(unsafe.Pointer(((_pToCol + 8) + 32*uintptr(_i)) + 8)))
	*(*uintptr)(unsafe.Pointer(((_pFKey + 64) + 16*uintptr(_i)) + 8)) = _z
	crt.Xmemcpy(tls, _z, *(*uintptr)(unsafe.Pointer(((_pToCol + 8) + 32*uintptr(_i)) + 8)), uint64(_n))
	*(*int8)(unsafe.Pointer(_z + uintptr(_n))) = int8(0)
	_z += uintptr(_n + int32(1))
	_i++
	goto _24

_26:
_23:
	*(*uint8)(unsafe.Pointer(_pFKey + 44)) = uint8(0)
	*(*uint8)(unsafe.Pointer(_pFKey + 45)) = uint8(_flags & int32(0xff))
	*(*uint8)(unsafe.Pointer((_pFKey + 45) + 1)) = uint8((_flags >> (uint(8) % 32)) & int32(0xff))

	_pNextTo = _841sqlite3HashInsert(tls, (*(*uintptr)(unsafe.Pointer(_p + 112)))+80, *(*uintptr)(unsafe.Pointer(_pFKey + 16)), _pFKey)
	if _pNextTo != _pFKey {
		goto _27
	}

	_178sqlite3OomFault(tls, _db)
	goto _fk_end

_27:
	if _pNextTo == 0 {
		goto _28
	}

	*(*uintptr)(unsafe.Pointer(_pFKey + 24)) = _pNextTo
	*(*uintptr)(unsafe.Pointer(_pNextTo + 32)) = _pFKey
_28:
	*(*uintptr)(unsafe.Pointer(_p + 32)) = _pFKey
	_pFKey = null
	goto _fk_end
_fk_end:
	_181sqlite3DbFree(tls, _db, _pFKey)
	_551sqlite3ExprListDelete(tls, _db, _pFromCol)
	_551sqlite3ExprListDelete(tls, _db, _pToCol)
}

// _1323sqlite3DeferForeignKey is defined at sqlite3.c:103444:21
func _1323sqlite3DeferForeignKey(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _isDeferred int32) {
	var (
		_pTab  uintptr // *TTable = STable
		_pFKey uintptr // *TFKey = SFKey
	)
	if set4(&_pTab, *(*uintptr)(unsafe.Pointer(_pParse + 512))) != 0 && set4(&_pFKey, *(*uintptr)(unsafe.Pointer(_pTab + 32))) != 0 {
		goto _1
	}

	return

_1:
	*(*uint8)(unsafe.Pointer(_pFKey + 44)) = uint8(_isDeferred)
}

// _1324sqlite3AddCollateType is defined at sqlite3.c:102089:21
func _1324sqlite3AddCollateType(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pToken uintptr /* *TToken = SToken */) {
	var (
		_p     uintptr // *TTable = STable
		_i     int32
		_zColl uintptr // *int8
		_db    uintptr // *Tsqlite3 = Ssqlite3
		_pIdx  uintptr // *TIndex = SIndex
	)
	if set4(&_p, *(*uintptr)(unsafe.Pointer(_pParse + 512))) != 0 {
		goto _1
	}

	return

_1:
	_i = int32(*(*int16)(unsafe.Pointer(_p + 70))) - int32(1)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_zColl = _1482sqlite3NameFromToken(tls, _db, _pToken)
	if _zColl != 0 {
		goto _2
	}

	return

_2:
	if _1519sqlite3LocateCollSeq(tls, _pParse, _zColl) == 0 {
		goto _3
	}

	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_p + 8))) + 32*uintptr(_i)) + 16)))
	*(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_p + 8))) + 32*uintptr(_i)) + 16)) = _zColl
	_pIdx = *(*uintptr)(unsafe.Pointer(_p + 16))
_5:
	if _pIdx == 0 {
		goto _7
	}

	if int32(*(*int16)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pIdx + 8))))) != _i {
		goto _8
	}

	*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pIdx + 64)))) = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_p + 8))) + 32*uintptr(_i)) + 16))
_8:
	_pIdx = *(*uintptr)(unsafe.Pointer(_pIdx + 40))
	goto _5

_7:
	goto _4

_3:
	_181sqlite3DbFree(tls, _db, _zColl)
_4:
}

// _1325sqlite3DropTable is defined at sqlite3.c:103207:21
func _1325sqlite3DropTable(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pName uintptr /* *TSrcList = SSrcList */, _isView int32, _noErr int32) {
	var (
		_pTab  uintptr // *TTable = STable
		_v     uintptr // *TVdbe = SVdbe
		_db    uintptr // *Tsqlite3 = Ssqlite3
		_iDb   int32
		_code  int32
		_zTab  uintptr // *int8
		_zDb   uintptr // *int8
		_zArg2 uintptr // *int8
	)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _1
	}

	goto _exit_drop_table

_1:
	if _1237sqlite3ReadSchema(tls, _pParse) == 0 {
		goto _2
	}

	goto _exit_drop_table

_2:
	if _noErr == 0 {
		goto _3
	}

	(*(*uint8)(unsafe.Pointer(_db + 101)))++
_3:
	_pTab = _1515sqlite3LocateTableItem(tls, _pParse, uint32(_isView), _pName+8)
	if _noErr == 0 {
		goto _4
	}

	(*(*uint8)(unsafe.Pointer(_db + 101)))--
_4:
	if _pTab != 0 {
		goto _5
	}

	if _noErr == 0 {
		goto _6
	}

	_1523sqlite3CodeVerifyNamedSchema(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pName + 8 + 8)))
_6:
	goto _exit_drop_table

_5:
	_iDb = _1069sqlite3SchemaToIndex(tls, _db, *(*uintptr)(unsafe.Pointer(_pTab + 112)))

	if *(*int32)(unsafe.Pointer(_pTab + 84)) == 0 || _1524sqlite3ViewGetColumnNames(tls, _pParse, _pTab) == 0 {
		goto _7
	}

	goto _exit_drop_table

_7:
	_zTab = func() uintptr {
		if (1 != 0) && (_iDb == int32(1)) {
			return ts + 5250 /* "sqlite_temp_master" */
		}
		return ts + 5127 /* "sqlite_master" */
	}()
	_zDb = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)))
	_zArg2 = 0
	if _1480sqlite3AuthCheck(tls, _pParse, int32(9), _zTab, null, _zDb) == 0 {
		goto _8
	}

	goto _exit_drop_table

_8:
	if _isView == 0 {
		goto _9
	}

	if 1 == 0 || _iDb != int32(1) {
		goto _11
	}

	_code = int32(15)
	goto _12

_11:
	_code = int32(17)
_12:
	goto _10

_9:
	if *(*int32)(unsafe.Pointer(_pTab + 84)) == 0 {
		goto _13
	}

	_code = int32(30)
	_zArg2 = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_1037sqlite3GetVTable(tls, _db, _pTab) + 8))) + 8))
	goto _14

_13:
	if 1 == 0 || _iDb != int32(1) {
		goto _15
	}

	_code = int32(13)
	goto _16

_15:
	_code = int32(11)
_16:
_14:
_10:
	if _1480sqlite3AuthCheck(tls, _pParse, _code, *(*uintptr)(unsafe.Pointer(_pTab)), _zArg2, _zDb) == 0 {
		goto _17
	}

	goto _exit_drop_table

_17:
	if _1480sqlite3AuthCheck(tls, _pParse, int32(9), *(*uintptr)(unsafe.Pointer(_pTab)), null, _zDb) == 0 {
		goto _18
	}

	goto _exit_drop_table

_18:
	if Xsqlite3_strnicmp(tls, *(*uintptr)(unsafe.Pointer(_pTab)), ts+6844 /* "sqlite_" */, int32(7)) != int32(0) || Xsqlite3_strnicmp(tls, *(*uintptr)(unsafe.Pointer(_pTab)), ts+25951 /* "sqlite_stat" */, int32(11)) == int32(0) {
		goto _19
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+25963 /* "table %s may not be dropped" */, *(*uintptr)(unsafe.Pointer(_pTab)))
	goto _exit_drop_table

_19:
	if _isView == 0 || (*(*uintptr)(unsafe.Pointer(_pTab + 24))) != 0 {
		goto _20
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+25991 /* "use DROP TABLE to delete table %..." */, *(*uintptr)(unsafe.Pointer(_pTab)))
	goto _exit_drop_table

_20:
	if _isView != 0 || (*(*uintptr)(unsafe.Pointer(_pTab + 24))) == 0 {
		goto _21
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+26025 /* "use DROP VIEW to delete view %s" */, *(*uintptr)(unsafe.Pointer(_pTab)))
	goto _exit_drop_table

_21:
	_v = _1472sqlite3GetVdbe(tls, _pParse)
	if _v == 0 {
		goto _22
	}

	_1488sqlite3BeginWriteOperation(tls, _pParse, int32(1), _iDb)
	_1525sqlite3ClearStatTables(tls, _pParse, _iDb, ts+26057 /* "tbl" */, *(*uintptr)(unsafe.Pointer(_pTab)))
	_1526sqlite3FkDropTable(tls, _pParse, _pName, _pTab)
	_1527sqlite3CodeDropTable(tls, _pParse, _pTab, _iDb, _isView)
_22:
	goto _exit_drop_table
_exit_drop_table:
	_1339sqlite3SrcListDelete(tls, _db, _pName)
}

// _1326sqlite3CreateView is defined at sqlite3.c:102777:21
func _1326sqlite3CreateView(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pBegin uintptr /* *TToken = SToken */, _pName1 uintptr /* *TToken = SToken */, _pName2 uintptr /* *TToken = SToken */, _pCNames uintptr /* *TExprList = SExprList */, _pSelect uintptr /* *TSelect = SSelect */, _isTemp int32, _noErr int32) {
	esc := crt.MustMalloc(72)
	var (
		_p     uintptr // *TTable = STable
		_n     int32
		_z     uintptr    // *int8
		_sEnd  = esc      // *TToken = SToken
		_sFix  = esc + 16 // *TDbFixer = SDbFixer
		_pName = esc + 64 // **TToken = SToken
		_iDb   int32
		_db    uintptr // *Tsqlite3 = Ssqlite3
	)
	defer crt.Free(esc)
	*(*uintptr)(unsafe.Pointer(_pName)) = 0
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	if int32(*(*int16)(unsafe.Pointer(_pParse + 464))) <= int32(0) {
		goto _1
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+26061 /* "parameters are not allowed in vi..." */)
	goto _create_view_fail

_1:
	_1311sqlite3StartTable(tls, _pParse, _pName1, _pName2, _isTemp, int32(1), int32(0), _noErr)
	_p = *(*uintptr)(unsafe.Pointer(_pParse + 512))
	if _p != 0 && (*(*int32)(unsafe.Pointer(_pParse + 48))) == 0 {
		goto _2
	}

	goto _create_view_fail

_2:
	_1485sqlite3TwoPartName(tls, _pParse, _pName1, _pName2, _pName)
	_iDb = _1069sqlite3SchemaToIndex(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 112)))
	_1513sqlite3FixInit(tls, _sFix, _pParse, _iDb, ts+24934 /* "view" */, *(*uintptr)(unsafe.Pointer(_pName)))
	if _1528sqlite3FixSelect(tls, _sFix, _pSelect) == 0 {
		goto _3
	}

	goto _create_view_fail

_3:
	*(*uintptr)(unsafe.Pointer(_p + 24)) = _1529sqlite3SelectDup(tls, _db, _pSelect, int32(0x1))
	*(*uintptr)(unsafe.Pointer(_p + 48)) = _1518sqlite3ExprListDup(tls, _db, _pCNames, int32(0x1))
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _4
	}

	goto _create_view_fail

_4:
	*(*SToken)(unsafe.Pointer(_sEnd)) = *(*SToken)(unsafe.Pointer(_pParse + 448))

	if int32(*(*int8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_sEnd))))) == int32(';') {
		goto _5
	}

	*(*uintptr)(unsafe.Pointer(_sEnd)) += uintptr(*(*uint32)(unsafe.Pointer(_sEnd + 8)))
_5:
	*(*uint32)(unsafe.Pointer(_sEnd + 8)) = uint32(0)
	_n = int32(int64((*(*uintptr)(unsafe.Pointer(_sEnd))) - (*(*uintptr)(unsafe.Pointer(_pBegin)))))

	_z = *(*uintptr)(unsafe.Pointer(_pBegin))
_6:
	if int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(uint8(*(*int8)(unsafe.Pointer(_z + uintptr(_n-int32(1)))))))))&int32(0x1) == 0 {
		goto _7
	}

	_n--
	goto _6

_7:
	*(*uintptr)(unsafe.Pointer(_sEnd)) = _z + uintptr(_n-int32(1))
	*(*uint32)(unsafe.Pointer(_sEnd + 8)) = uint32(1)
	_1313sqlite3EndTable(tls, _pParse, null, _sEnd, uint8(0), null)
	goto _create_view_fail
_create_view_fail:
	_1094sqlite3SelectDelete(tls, _db, _pSelect)
	_551sqlite3ExprListDelete(tls, _db, _pCNames)
	return
}

// _1327sqlite3Select is defined at sqlite3.c:122805:20
func _1327sqlite3Select(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _p uintptr /* *TSelect = SSelect */, _pDest uintptr /* *TSelectDest = SSelectDest */) (r int32) {
	esc := crt.MustMalloc(232)
	var (
		_i                 int32
		_j                 int32
		_pWInfo            uintptr // *TWhereInfo = SWhereInfo
		_v                 uintptr // *TVdbe = SVdbe
		_isAgg             int32
		_pEList            uintptr // *TExprList = SExprList
		_pTabList          uintptr // *TSrcList = SSrcList
		_pWhere            uintptr // *TExpr = SExpr
		_pGroupBy          uintptr // *TExprList = SExprList
		_pHaving           uintptr // *TExpr = SExpr
		_rc                int32
		_sDistinct         = esc      // *TDistinctCtx = SDistinctCtx
		_sSort             = esc + 16 // *TSortCtx = SSortCtx
		_sAggInfo          = esc + 64 // *TAggInfo = SAggInfo
		_iEnd              int32
		_db                uintptr // *Tsqlite3 = Ssqlite3
		_iRestoreSelectId  int32
		_pItem             uintptr     // *SSrcList_item
		_pSub              uintptr     // *TSelect = SSelect
		_pTab              uintptr     // *TTable = STable
		_1pItem            uintptr     // *SSrcList_item
		_dest              = esc + 128 // *TSelectDest = SSelectDest
		_2pSub             uintptr     // *TSelect = SSelect
		_zSavedAuthContext uintptr     // *int8
		_addrTop           int32
		_topAddr           int32
		_onceAddr          int32
		_retAddr           int32
		_pPrior            uintptr // *SSrcList_item
		_pKeyInfo          uintptr // *TKeyInfo = SKeyInfo
		_wctrlFlags        uint16
		_sNC               = esc + 160 // *TNameContext = SNameContext
		_iAMem             int32
		_iBMem             int32
		_iUseFlag          int32
		_iAbortFlag        int32
		_groupBySort       int32
		_addrEnd           int32
		_sortPTab          int32
		_sortOut           int32
		_orderByGrp        int32
		_k                 int32
		_3pItem            uintptr // *SExprList_item
		_4pKeyInfo         uintptr // *TKeyInfo = SKeyInfo
		_addr1             int32
		_addrOutputRow     int32
		_regOutputRow      int32
		_addrSetAbort      int32
		_addrTopOfLoop     int32
		_addrSortingIdx    int32
		_addrReset         int32
		_regReset          int32
		_regBase           int32
		_regRecord         int32
		_nCol              int32
		_nGroupBy          int32
		_pCol              uintptr // *SAggInfo_col
		_r1                int32
		_pDel              uintptr // *TExprList = SExprList
		_5pTab             uintptr // *TTable = STable
		_iDb               int32
		_iCsr              int32
		_pIdx              uintptr // *TIndex = SIndex
		_6pKeyInfo         uintptr // *TKeyInfo = SKeyInfo
		_pBest             uintptr // *TIndex = SIndex
		_iRoot             int32
		_pMinMax           = esc + 224 // **TExprList = SExprList
		_flag              uint8
	)
	defer crt.Free(esc)
	_pEList = 0
	_rc = int32(1)
	_iRestoreSelectId = *(*int32)(unsafe.Pointer(_pParse + 480))
	*(*int32)(unsafe.Pointer(_pParse + 480)) = postinc7(&(*(*int32)(unsafe.Pointer(_pParse + 484))))
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	if _p != 0 && (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 && (*(*int32)(unsafe.Pointer(_pParse + 48))) == 0 {
		goto _1
	}

	return int32(1)

_1:
	if _1480sqlite3AuthCheck(tls, _pParse, int32(21), null, null, null) == 0 {
		goto _2
	}

	return int32(1)

_2:
	crt.Xmemset(tls, _sAggInfo, int32(0), uint64(64))

	if int32(*(*uint8)(unsafe.Pointer(_pDest))) > int32(8) {
		goto _3
	}

	_551sqlite3ExprListDelete(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 64)))
	*(*uintptr)(unsafe.Pointer(_p + 64)) = null
	{
		p := &(*(*uint32)(unsafe.Pointer(_p + 12)))
		*p = uint32(uint32(*p) & uint32(4294967294))
	}
_3:
	_1530sqlite3SelectPrep(tls, _pParse, _p, null)
	crt.Xmemset(tls, _sSort, int32(0), uint64(40))
	*(*uintptr)(unsafe.Pointer(_sSort)) = *(*uintptr)(unsafe.Pointer(_p + 64))
	_pTabList = *(*uintptr)(unsafe.Pointer(_p + 32))
	if (*(*int32)(unsafe.Pointer(_pParse + 48))) == 0 && (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _4
	}

	goto _select_end

_4:
	_isAgg = bool2int(((*(*uint32)(unsafe.Pointer(_p + 12))) & uint32(0x8)) != uint32(0))
	_v = _1472sqlite3GetVdbe(tls, _pParse)
	if _v != 0 {
		goto _5
	}

	goto _select_end

_5:
	if int32(*(*uint8)(unsafe.Pointer(_pDest))) != int32(9) {
		goto _6
	}

	_1531generateColumnNames(tls, _pParse, _p)
_6:
	_i = int32(0)
_7:
	if (*(*uintptr)(unsafe.Pointer(_p + 72))) != 0 || _i >= (*(*int32)(unsafe.Pointer(_pTabList))) {
		goto _9
	}

	_pItem = (_pTabList + 8) + 112*uintptr(_i)
	_pSub = *(*uintptr)(unsafe.Pointer(_pItem + 40))
	_pTab = *(*uintptr)(unsafe.Pointer(_pItem + 32))
	if _pSub != 0 {
		goto _10
	}

	goto _8

_10:
	if int32(*(*int16)(unsafe.Pointer(_pTab + 70))) == (*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pSub))))) {
		goto _11
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+26097 /* "expected %d columns for '%s' but..." */, int32(*(*int16)(unsafe.Pointer(_pTab + 70))), *(*uintptr)(unsafe.Pointer(_pTab)), *(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pSub)))))
	goto _select_end

_11:
	if ((*(*uint32)(unsafe.Pointer(_pSub + 12))) & uint32(0x8)) == uint32(0) {
		goto _12
	}

	goto _8

_12:
	if (*(*uintptr)(unsafe.Pointer(_pSub + 64))) == 0 || _i != int32(0) || (*(*int32)(unsafe.Pointer(_pTabList))) != int32(1) && (int32(*(*uint8)(unsafe.Pointer(((_pTabList + 8) + 112) + 60)))&int32(10)) == int32(0) {
		goto _13
	}

	goto _8

_13:
	if _1532flattenSubquery(tls, _pParse, _p, _i, _isAgg) == 0 {
		goto _14
	}

	_i = int32(-1)
_14:
	_pTabList = *(*uintptr)(unsafe.Pointer(_p + 32))
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _15
	}

	goto _select_end

_15:
	if int32(*(*uint8)(unsafe.Pointer(_pDest))) <= int32(8) {
		goto _16
	}

	*(*uintptr)(unsafe.Pointer(_sSort)) = *(*uintptr)(unsafe.Pointer(_p + 64))
_16:
_8:
	_i++
	goto _7

_9:
	if (*(*uintptr)(unsafe.Pointer(_p + 72))) == 0 {
		goto _17
	}

	_rc = _1533multiSelect(tls, _pParse, _p, _pDest)
	*(*int32)(unsafe.Pointer(_pParse + 480)) = _iRestoreSelectId
	return _rc

_17:
	_i = int32(0)
_18:
	if _i >= (*(*int32)(unsafe.Pointer(_pTabList))) {
		goto _20
	}

	_1pItem = (_pTabList + 8) + 112*uintptr(_i)
	if (*(*uint64)(unsafe.Pointer(_1pItem + 88))) != uint64(0) {
		goto _21
	}

	_1480sqlite3AuthCheck(tls, _pParse, int32(20), *(*uintptr)(unsafe.Pointer(_1pItem + 16)), ts+4553 /* "" */, *(*uintptr)(unsafe.Pointer(_1pItem + 8)))
_21:
	_2pSub = *(*uintptr)(unsafe.Pointer(_1pItem + 40))
	if _2pSub != 0 {
		goto _22
	}

	goto _19

_22:
	if (*(*int32)(unsafe.Pointer(_1pItem + 48))) == 0 {
		goto _23
	}

	if int32(uint32((*(*uint8)(unsafe.Pointer((_1pItem + 60) + 1)))>>4)<<31>>31) != int32(0) {
		goto _24
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(14), *(*int32)(unsafe.Pointer(_1pItem + 52)), *(*int32)(unsafe.Pointer(_1pItem + 48)))
_24:
	goto _19

_23:
	{
		p := &(*(*int32)(unsafe.Pointer(_pParse + 476)))
		*p = int32(int32(*p) + _1534sqlite3SelectExprHeight(tls, _p))
	}
	if (int32(*(*uint8)(unsafe.Pointer(_1pItem + 60)))&int32(0x20)) != int32(0) || _1535pushDownWhereTerms(tls, _pParse, _2pSub, *(*uintptr)(unsafe.Pointer(_p + 40)), *(*int32)(unsafe.Pointer(_1pItem + 64))) == 0 {
		goto _25
	}

_25:
	_zSavedAuthContext = *(*uintptr)(unsafe.Pointer(_pParse + 528))
	*(*uintptr)(unsafe.Pointer(_pParse + 528)) = *(*uintptr)(unsafe.Pointer(_1pItem + 16))
	if _i != int32(0) || (*(*int32)(unsafe.Pointer(_pTabList))) != int32(1) && (int32(*(*uint8)(unsafe.Pointer(((_pTabList + 8) + 112) + 60)))&int32(10)) == int32(0) {
		goto _26
	}

	_addrTop = _1496sqlite3VdbeCurrentAddr(tls, _v) + int32(1)
	*(*int32)(unsafe.Pointer(_1pItem + 52)) = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))
	_1241sqlite3VdbeAddOp3(tls, _v, int32(15), *(*int32)(unsafe.Pointer(_1pItem + 52)), int32(0), _addrTop)
	*(*int32)(unsafe.Pointer(_1pItem + 48)) = _addrTop
	_1497sqlite3SelectDestInit(tls, _dest, int32(13), *(*int32)(unsafe.Pointer(_1pItem + 52)))
	*(*uint8)(unsafe.Pointer(_1pItem + 62)) = uint8(*(*int32)(unsafe.Pointer(_pParse + 484)))
	_1327sqlite3Select(tls, _pParse, _2pSub, _dest)
	*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_1pItem + 32))) + 72)) = *(*int16)(unsafe.Pointer(_2pSub + 10))
	set207b(&(*(*uint8)(unsafe.Pointer((_1pItem + 60) + 1))), uint32(1))
	*(*int32)(unsafe.Pointer(_1pItem + 56)) = *(*int32)(unsafe.Pointer(_dest + 8))
	_1498sqlite3VdbeEndCoroutine(tls, _v, *(*int32)(unsafe.Pointer(_1pItem + 52)))
	_1474sqlite3VdbeJumpHere(tls, _v, _addrTop-int32(1))
	_1536sqlite3ClearTempRegCache(tls, _pParse)
	goto _27

_26:
	_onceAddr = int32(0)

	*(*int32)(unsafe.Pointer(_1pItem + 52)) = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))
	_topAddr = _1240sqlite3VdbeAddOp2(tls, _v, int32(67), int32(0), *(*int32)(unsafe.Pointer(_1pItem + 52)))
	*(*int32)(unsafe.Pointer(_1pItem + 48)) = _topAddr + int32(1)
	if int32(uint32((*(*uint8)(unsafe.Pointer((_1pItem + 60) + 1)))>>3)<<31>>31) != int32(0) {
		goto _28
	}

	_onceAddr = _1473sqlite3VdbeAddOp0(tls, _v, int32(20))
	goto _29

_28:
_29:
	_pPrior = _1537isSelfJoinView(tls, _pTabList, _1pItem)
	if _pPrior == 0 {
		goto _30
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(106), *(*int32)(unsafe.Pointer(_1pItem + 64)), *(*int32)(unsafe.Pointer(_pPrior + 64)))
	*(*uint8)(unsafe.Pointer(_1pItem + 62)) = *(*uint8)(unsafe.Pointer(_pPrior + 62))

	*(*int16)(unsafe.Pointer(_2pSub + 10)) = *(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPrior + 40))) + 10))
	goto _31

_30:
	_1497sqlite3SelectDestInit(tls, _dest, int32(12), *(*int32)(unsafe.Pointer(_1pItem + 64)))
	*(*uint8)(unsafe.Pointer(_1pItem + 62)) = uint8(*(*int32)(unsafe.Pointer(_pParse + 484)))
	_1327sqlite3Select(tls, _pParse, _2pSub, _dest)
_31:
	*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_1pItem + 32))) + 72)) = *(*int16)(unsafe.Pointer(_2pSub + 10))
	if _onceAddr == 0 {
		goto _32
	}

	_1474sqlite3VdbeJumpHere(tls, _v, _onceAddr)
_32:
	_retAddr = _1489sqlite3VdbeAddOp1(tls, _v, int32(63), *(*int32)(unsafe.Pointer(_1pItem + 52)))
	_1538sqlite3VdbeChangeP1(tls, _v, uint32(_topAddr), _retAddr)
	_1536sqlite3ClearTempRegCache(tls, _pParse)
_27:
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _33
	}

	goto _select_end

_33:
	{
		p := &(*(*int32)(unsafe.Pointer(_pParse + 476)))
		*p = int32(int32(*p) - _1534sqlite3SelectExprHeight(tls, _p))
	}
	*(*uintptr)(unsafe.Pointer(_pParse + 528)) = _zSavedAuthContext

_19:
	_i++
	goto _18

_20:
	_pEList = *(*uintptr)(unsafe.Pointer(_p))
	_pWhere = *(*uintptr)(unsafe.Pointer(_p + 40))
	_pGroupBy = *(*uintptr)(unsafe.Pointer(_p + 48))
	_pHaving = *(*uintptr)(unsafe.Pointer(_p + 56))
	*(*uint8)(unsafe.Pointer(_sDistinct)) = uint8(bool2int(((*(*uint32)(unsafe.Pointer(_p + 12))) & uint32(0x1)) != uint32(0)))
	if ((*(*uint32)(unsafe.Pointer(_p + 12)))&uint32(9)) != uint32(0x1) || _1539sqlite3ExprListCompare(tls, *(*uintptr)(unsafe.Pointer(_sSort)), _pEList, int32(-1)) != int32(0) {
		goto _34
	}

	{
		p := &(*(*uint32)(unsafe.Pointer(_p + 12)))
		*p = uint32(uint32(*p) & uint32(4294967294))
	}
	_pGroupBy = set4(&(*(*uintptr)(unsafe.Pointer(_p + 48))), _1518sqlite3ExprListDup(tls, _db, _pEList, int32(0)))

_34:
	if (*(*uintptr)(unsafe.Pointer(_sSort))) == 0 {
		goto _35
	}

	_pKeyInfo = _1540keyInfoFromExprList(tls, _pParse, *(*uintptr)(unsafe.Pointer(_sSort)), int32(0), *(*int32)(unsafe.Pointer(_pEList)))
	*(*int32)(unsafe.Pointer(_sSort + 12)) = postinc7(&(*(*int32)(unsafe.Pointer(_pParse + 52))))
	*(*int32)(unsafe.Pointer(_sSort + 24)) = _1475sqlite3VdbeAddOp4(tls, _v, int32(108), *(*int32)(unsafe.Pointer(_sSort + 12)), ((*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_sSort)))))+int32(1))+(*(*int32)(unsafe.Pointer(_pEList))), int32(0), _pKeyInfo, int32(-9))
	goto _36

_35:
	*(*int32)(unsafe.Pointer(_sSort + 24)) = int32(-1)
_36:
	if int32(*(*uint8)(unsafe.Pointer(_pDest))) != int32(12) {
		goto _37
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(108), *(*int32)(unsafe.Pointer(_pDest + 4)), *(*int32)(unsafe.Pointer(_pEList)))
_37:
	_iEnd = _1541sqlite3VdbeMakeLabel(tls, _v)
	if ((*(*uint32)(unsafe.Pointer(_p + 12))) & uint32(0x4000)) != uint32(0) {
		goto _38
	}

	*(*int16)(unsafe.Pointer(_p + 10)) = int16(320)
_38:
	_1542computeLimitRegisters(tls, _pParse, _p, _iEnd)
	if (*(*int32)(unsafe.Pointer(_p + 16))) != int32(0) || (*(*int32)(unsafe.Pointer(_sSort + 24))) < int32(0) {
		goto _39
	}

	_1543sqlite3VdbeChangeOpcode(tls, _v, uint32(*(*int32)(unsafe.Pointer(_sSort + 24))), uint8(109))
	{
		p := &(*(*uint8)(unsafe.Pointer(_sSort + 32)))
		*p = uint8(int32(*p) | int32(0x1))
	}
_39:
	if ((*(*uint32)(unsafe.Pointer(_p + 12))) & uint32(0x1)) == 0 {
		goto _40
	}

	*(*int32)(unsafe.Pointer(_sDistinct + 4)) = postinc7(&(*(*int32)(unsafe.Pointer(_pParse + 52))))
	*(*int32)(unsafe.Pointer(_sDistinct + 8)) = _1475sqlite3VdbeAddOp4(tls, _v, int32(108), *(*int32)(unsafe.Pointer(_sDistinct + 4)), int32(0), int32(0), _1540keyInfoFromExprList(tls, _pParse, *(*uintptr)(unsafe.Pointer(_p)), int32(0), int32(0)), int32(-9))
	_1072sqlite3VdbeChangeP5(tls, _v, uint16(8))
	*(*uint8)(unsafe.Pointer(_sDistinct + 1)) = uint8(3)
	goto _41

_40:
	*(*uint8)(unsafe.Pointer(_sDistinct + 1)) = uint8(0)
_41:
	if _isAgg != 0 || _pGroupBy != 0 {
		goto _42
	}

	_wctrlFlags = uint16(func() int32 {
		if (*(*uint8)(unsafe.Pointer(_sDistinct))) != 0 {
			return int32(0x100)
		}
		return int32(0)
	}())

	_wctrlFlags = uint16(uint32(_wctrlFlags) | ((*(*uint32)(unsafe.Pointer(_p + 12))) & uint32(0x4000)))
	_pWInfo = _1544sqlite3WhereBegin(tls, _pParse, _pTabList, _pWhere, *(*uintptr)(unsafe.Pointer(_sSort)), *(*uintptr)(unsafe.Pointer(_p)), _wctrlFlags, int32(*(*int16)(unsafe.Pointer(_p + 10))))
	if _pWInfo != 0 {
		goto _44
	}

	goto _select_end

_44:
	if int32(_1545sqlite3WhereOutputRowCount(tls, _pWInfo)) >= int32(*(*int16)(unsafe.Pointer(_p + 10))) {
		goto _45
	}

	*(*int16)(unsafe.Pointer(_p + 10)) = _1545sqlite3WhereOutputRowCount(tls, _pWInfo)
_45:
	if (*(*uint8)(unsafe.Pointer(_sDistinct))) == 0 || _1546sqlite3WhereIsDistinct(tls, _pWInfo) == 0 {
		goto _46
	}

	*(*uint8)(unsafe.Pointer(_sDistinct + 1)) = uint8(_1546sqlite3WhereIsDistinct(tls, _pWInfo))
_46:
	if (*(*uintptr)(unsafe.Pointer(_sSort))) == 0 {
		goto _47
	}

	*(*int32)(unsafe.Pointer(_sSort + 8)) = _1547sqlite3WhereIsOrdered(tls, _pWInfo)
	*(*uint8)(unsafe.Pointer(_sSort + 33)) = uint8(_1548sqlite3WhereOrderedInnerLoop(tls, _pWInfo))
	if (*(*int32)(unsafe.Pointer(_sSort + 8))) != (*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_sSort))))) {
		goto _48
	}

	*(*uintptr)(unsafe.Pointer(_sSort)) = null
_48:
_47:
	if (*(*int32)(unsafe.Pointer(_sSort + 24))) < int32(0) || (*(*uintptr)(unsafe.Pointer(_sSort))) != 0 {
		goto _49
	}

	_1549sqlite3VdbeChangeToNoop(tls, _v, *(*int32)(unsafe.Pointer(_sSort + 24)))
_49:
	_1550selectInnerLoop(tls, _pParse, _p, int32(-1), _sSort, _sDistinct, _pDest, _1551sqlite3WhereContinueLabel(tls, _pWInfo), _1552sqlite3WhereBreakLabel(tls, _pWInfo))
	_1553sqlite3WhereEnd(tls, _pWInfo)
	goto _43

_42:
	_sortPTab = int32(0)
	_sortOut = int32(0)
	_orderByGrp = int32(0)
	if _pGroupBy == 0 {
		goto _50
	}

	_k = *(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_p))))
	_3pItem = (*(*uintptr)(unsafe.Pointer(_p))) + 8
_52:
	if _k <= int32(0) {
		goto _54
	}

	*(*uint16)(unsafe.Pointer(_3pItem + 28 + 2)) = uint16(0)
	_k--
	_3pItem += 32
	goto _52

_54:
	_k = *(*int32)(unsafe.Pointer(_pGroupBy))
	_3pItem = _pGroupBy + 8
_55:
	if _k <= int32(0) {
		goto _57
	}

	*(*uint16)(unsafe.Pointer(_3pItem + 28 + 2)) = uint16(0)
	_k--
	_3pItem += 32
	goto _55

_57:
	if int32(*(*int16)(unsafe.Pointer(_p + 10))) <= int32(66) {
		goto _58
	}

	*(*int16)(unsafe.Pointer(_p + 10)) = int16(66)
_58:
	goto _51

_50:
	*(*int16)(unsafe.Pointer(_p + 10)) = int16(0)
_51:
	if _1539sqlite3ExprListCompare(tls, _pGroupBy, *(*uintptr)(unsafe.Pointer(_sSort)), int32(-1)) != int32(0) {
		goto _59
	}

	_orderByGrp = int32(1)
_59:
	_addrEnd = _1541sqlite3VdbeMakeLabel(tls, _v)
	crt.Xmemset(tls, _sNC, int32(0), uint64(56))
	*(*uintptr)(unsafe.Pointer(_sNC)) = _pParse
	*(*uintptr)(unsafe.Pointer(_sNC + 8)) = _pTabList
	*(*uintptr)(unsafe.Pointer(_sNC + 24)) = _sAggInfo
	*(*int32)(unsafe.Pointer(_sAggInfo + 16)) = (*(*int32)(unsafe.Pointer(_pParse + 56))) + int32(1)
	*(*int32)(unsafe.Pointer(_sAggInfo + 12)) = func() int32 {
		if _pGroupBy != 0 {
			return *(*int32)(unsafe.Pointer(_pGroupBy))
		}
		return int32(0)
	}()
	*(*uintptr)(unsafe.Pointer(_sAggInfo + 24)) = _pGroupBy
	_1554sqlite3ExprAnalyzeAggList(tls, _sNC, _pEList)
	_1554sqlite3ExprAnalyzeAggList(tls, _sNC, *(*uintptr)(unsafe.Pointer(_sSort)))
	if _pHaving == 0 {
		goto _60
	}

	if _pGroupBy == 0 {
		goto _61
	}

	_1555havingToWhere(tls, _pParse, _pGroupBy, _pHaving, _p+40)
	_pWhere = *(*uintptr)(unsafe.Pointer(_p + 40))
_61:
	_1556sqlite3ExprAnalyzeAggregates(tls, _sNC, _pHaving)
_60:
	*(*int32)(unsafe.Pointer(_sAggInfo + 44)) = *(*int32)(unsafe.Pointer(_sAggInfo + 40))
	_i = int32(0)
_62:
	if _i >= (*(*int32)(unsafe.Pointer(_sAggInfo + 56))) {
		goto _64
	}

	{
		p := &(*(*uint16)(unsafe.Pointer(_sNC + 48)))
		*p = uint16(int32(*p) | int32(0x8))
	}
	_1554sqlite3ExprAnalyzeAggList(tls, _sNC, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_sAggInfo + 48))) + 24*uintptr(_i)))) + 32)))
	{
		p := &(*(*uint16)(unsafe.Pointer(_sNC + 48)))
		*p = uint16(int32(*p) & int32(-9))
	}
	_i++
	goto _62

_64:
	*(*int32)(unsafe.Pointer(_sAggInfo + 20)) = *(*int32)(unsafe.Pointer(_pParse + 56))
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _65
	}

	goto _select_end

_65:
	if _pGroupBy == 0 {
		goto _66
	}

	*(*int32)(unsafe.Pointer(_sAggInfo + 4)) = postinc7(&(*(*int32)(unsafe.Pointer(_pParse + 52))))
	_4pKeyInfo = _1540keyInfoFromExprList(tls, _pParse, _pGroupBy, int32(0), *(*int32)(unsafe.Pointer(_sAggInfo + 40)))
	_addrSortingIdx = _1475sqlite3VdbeAddOp4(tls, _v, int32(109), *(*int32)(unsafe.Pointer(_sAggInfo + 4)), *(*int32)(unsafe.Pointer(_sAggInfo + 12)), int32(0), _4pKeyInfo, int32(-9))
	_iUseFlag = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))
	_iAbortFlag = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))
	_regOutputRow = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))
	_addrOutputRow = _1541sqlite3VdbeMakeLabel(tls, _v)
	_regReset = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))
	_addrReset = _1541sqlite3VdbeMakeLabel(tls, _v)
	_iAMem = (*(*int32)(unsafe.Pointer(_pParse + 56))) + int32(1)
	{
		p := &(*(*int32)(unsafe.Pointer(_pParse + 56)))
		*p = int32(int32(*p) + (*(*int32)(unsafe.Pointer(_pGroupBy))))
	}
	_iBMem = (*(*int32)(unsafe.Pointer(_pParse + 56))) + int32(1)
	{
		p := &(*(*int32)(unsafe.Pointer(_pParse + 56)))
		*p = int32(int32(*p) + (*(*int32)(unsafe.Pointer(_pGroupBy))))
	}
	_1240sqlite3VdbeAddOp2(tls, _v, int32(67), int32(0), _iAbortFlag)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(67), int32(0), _iUseFlag)
	_1241sqlite3VdbeAddOp3(tls, _v, int32(70), int32(0), _iAMem, (_iAMem+(*(*int32)(unsafe.Pointer(_pGroupBy))))-int32(1))
	_1240sqlite3VdbeAddOp2(tls, _v, int32(14), _regReset, _addrReset)
	_pWInfo = _1544sqlite3WhereBegin(tls, _pParse, _pTabList, _pWhere, _pGroupBy, null, uint16(int32(0x40)|func() int32 {
		if _orderByGrp != 0 {
			return int32(0x200)
		}
		return int32(0)
	}()), int32(0))
	if _pWInfo != 0 {
		goto _68
	}

	goto _select_end

_68:
	if _1547sqlite3WhereIsOrdered(tls, _pWInfo) != (*(*int32)(unsafe.Pointer(_pGroupBy))) {
		goto _69
	}

	_groupBySort = int32(0)
	goto _70

_69:
	_1557explainTempTable(tls, _pParse, func() uintptr {
		if ((*(*uint8)(unsafe.Pointer(_sDistinct))) != 0) && (((*(*uint32)(unsafe.Pointer(_p + 12))) & uint32(0x1)) == uint32(0)) {
			return ts + 16178 /* "DISTINCT" */
		}
		return ts + 26137 /* "GROUP BY" */
	}())
	_groupBySort = int32(1)
	_nGroupBy = *(*int32)(unsafe.Pointer(_pGroupBy))
	_nCol = _nGroupBy
	_j = _nGroupBy
	_i = int32(0)
_71:
	if _i >= (*(*int32)(unsafe.Pointer(_sAggInfo + 40))) {
		goto _73
	}

	if (*(*int32)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_sAggInfo + 32))) + 32*uintptr(_i)) + 16))) < _j {
		goto _74
	}

	_nCol++
	_j++
_74:
	_i++
	goto _71

_73:
	_regBase = _1558sqlite3GetTempRange(tls, _pParse, _nCol)
	_1559sqlite3ExprCacheClear(tls, _pParse)
	_1560sqlite3ExprCodeExprList(tls, _pParse, _pGroupBy, _regBase, int32(0), uint8(0))
	_j = _nGroupBy
	_i = int32(0)
_75:
	if _i >= (*(*int32)(unsafe.Pointer(_sAggInfo + 40))) {
		goto _77
	}

	_pCol = (*(*uintptr)(unsafe.Pointer(_sAggInfo + 32))) + 32*uintptr(_i)
	if (*(*int32)(unsafe.Pointer(_pCol + 16))) < _j {
		goto _78
	}

	_r1 = _j + _regBase
	_1561sqlite3ExprCodeGetColumnToReg(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pCol)), *(*int32)(unsafe.Pointer(_pCol + 12)), *(*int32)(unsafe.Pointer(_pCol + 8)), _r1)
	_j++
_78:
	_i++
	goto _75

_77:
	_regRecord = _1562sqlite3GetTempReg(tls, _pParse)
	_1241sqlite3VdbeAddOp3(tls, _v, int32(99), _regBase, _nCol, _regRecord)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(126), *(*int32)(unsafe.Pointer(_sAggInfo + 4)), _regRecord)
	_1563sqlite3ReleaseTempReg(tls, _pParse, _regRecord)
	_1564sqlite3ReleaseTempRange(tls, _pParse, _regBase, _nCol)
	_1553sqlite3WhereEnd(tls, _pWInfo)
	*(*int32)(unsafe.Pointer(_sAggInfo + 8)) = set5(&_sortPTab, postinc7(&(*(*int32)(unsafe.Pointer(_pParse + 52)))))
	_sortOut = _1562sqlite3GetTempReg(tls, _pParse)
	_1241sqlite3VdbeAddOp3(tls, _v, int32(111), _sortPTab, _sortOut, _nCol)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(35), *(*int32)(unsafe.Pointer(_sAggInfo + 4)), _addrEnd)
	*(*uint8)(unsafe.Pointer(_sAggInfo + 1)) = uint8(1)
	_1559sqlite3ExprCacheClear(tls, _pParse)
_70:
	if _orderByGrp == 0 || (int32(*(*uint16)(unsafe.Pointer(_db + 92)))&int32(0x4)) != int32(0) || _groupBySort == 0 && _1565sqlite3WhereIsSorted(tls, _pWInfo) == 0 {
		goto _79
	}

	*(*uintptr)(unsafe.Pointer(_sSort)) = null
	_1549sqlite3VdbeChangeToNoop(tls, _v, *(*int32)(unsafe.Pointer(_sSort + 24)))
_79:
	_addrTopOfLoop = _1496sqlite3VdbeCurrentAddr(tls, _v)
	_1559sqlite3ExprCacheClear(tls, _pParse)
	if _groupBySort == 0 {
		goto _80
	}

	_1241sqlite3VdbeAddOp3(tls, _v, int32(121), *(*int32)(unsafe.Pointer(_sAggInfo + 4)), _sortOut, _sortPTab)
_80:
	_j = int32(0)
_81:
	if _j >= (*(*int32)(unsafe.Pointer(_pGroupBy))) {
		goto _83
	}

	if _groupBySort == 0 {
		goto _84
	}

	_1241sqlite3VdbeAddOp3(tls, _v, int32(96), _sortPTab, _j, _iBMem+_j)
	goto _85

_84:
	*(*uint8)(unsafe.Pointer(_sAggInfo)) = uint8(1)
	_1478sqlite3ExprCode(tls, _pParse, *(*uintptr)(unsafe.Pointer((_pGroupBy + 8) + 32*uintptr(_j))), _iBMem+_j)
_85:
	_j++
	goto _81

_83:
	_1475sqlite3VdbeAddOp4(tls, _v, int32(94), _iAMem, _iBMem, *(*int32)(unsafe.Pointer(_pGroupBy)), _1566sqlite3KeyInfoRef(tls, _4pKeyInfo), int32(-9))
	_addr1 = _1496sqlite3VdbeCurrentAddr(tls, _v)
	_1241sqlite3VdbeAddOp3(tls, _v, int32(18), _addr1+int32(1), int32(0), _addr1+int32(1))
	_1567sqlite3ExprCodeMove(tls, _pParse, _iBMem, _iAMem, *(*int32)(unsafe.Pointer(_pGroupBy)))
	_1240sqlite3VdbeAddOp2(tls, _v, int32(14), _regOutputRow, _addrOutputRow)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(48), _iAbortFlag, _addrEnd)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(14), _regReset, _addrReset)
	_1474sqlite3VdbeJumpHere(tls, _v, _addr1)
	_1568updateAccumulator(tls, _pParse, _sAggInfo)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(67), int32(1), _iUseFlag)
	if _groupBySort == 0 {
		goto _86
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(3), *(*int32)(unsafe.Pointer(_sAggInfo + 4)), _addrTopOfLoop)
	goto _87

_86:
	_1553sqlite3WhereEnd(tls, _pWInfo)
	_1549sqlite3VdbeChangeToNoop(tls, _v, _addrSortingIdx)
_87:
	_1240sqlite3VdbeAddOp2(tls, _v, int32(14), _regOutputRow, _addrOutputRow)
	_1479sqlite3VdbeGoto(tls, _v, _addrEnd)
	_addrSetAbort = _1496sqlite3VdbeCurrentAddr(tls, _v)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(67), int32(1), _iAbortFlag)
	_1489sqlite3VdbeAddOp1(tls, _v, int32(63), _regOutputRow)
	_1569sqlite3VdbeResolveLabel(tls, _v, _addrOutputRow)
	_addrOutputRow = _1496sqlite3VdbeCurrentAddr(tls, _v)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(48), _iUseFlag, _addrOutputRow+int32(2))
	_1489sqlite3VdbeAddOp1(tls, _v, int32(63), _regOutputRow)
	_1570finalizeAggFunctions(tls, _pParse, _sAggInfo)
	_1571sqlite3ExprIfFalse(tls, _pParse, _pHaving, _addrOutputRow+int32(1), int32(0x10))
	_1550selectInnerLoop(tls, _pParse, _p, int32(-1), _sSort, _sDistinct, _pDest, _addrOutputRow+int32(1), _addrSetAbort)
	_1489sqlite3VdbeAddOp1(tls, _v, int32(63), _regOutputRow)
	_1569sqlite3VdbeResolveLabel(tls, _v, _addrReset)
	_1572resetAccumulator(tls, _pParse, _sAggInfo)
	_1489sqlite3VdbeAddOp1(tls, _v, int32(63), _regReset)
	goto _67

_66:
	_pDel = 0
	if set4(&_5pTab, _1573isSimpleCount(tls, _p, _sAggInfo)) == 0 {
		goto _88
	}

	_iDb = _1069sqlite3SchemaToIndex(tls, *(*uintptr)(unsafe.Pointer(_pParse)), *(*uintptr)(unsafe.Pointer(_5pTab + 112)))
	_iCsr = postinc7(&(*(*int32)(unsafe.Pointer(_pParse + 52))))
	_6pKeyInfo = 0
	_pBest = 0
	_iRoot = *(*int32)(unsafe.Pointer(_5pTab + 56))
	_1487sqlite3CodeVerifySchema(tls, _pParse, _iDb)
	_1574sqlite3TableLock(tls, _pParse, _iDb, *(*int32)(unsafe.Pointer(_5pTab + 56)), uint8(0), *(*uintptr)(unsafe.Pointer(_5pTab)))
	if ((*(*uint32)(unsafe.Pointer(_5pTab + 64))) & uint32(0x20)) == uint32(0) {
		goto _90
	}

	_pBest = _1060sqlite3PrimaryKeyIndex(tls, _5pTab)
_90:
	_pIdx = *(*uintptr)(unsafe.Pointer(_5pTab + 16))
_91:
	if _pIdx == 0 {
		goto _93
	}

	if int32(uint32((*(*uint8)(unsafe.Pointer(_pIdx + 99)))>>2)<<31>>31) != int32(0) || int32(*(*int16)(unsafe.Pointer(_pIdx + 92))) >= int32(*(*int16)(unsafe.Pointer(_5pTab + 74))) || (*(*uintptr)(unsafe.Pointer(_pIdx + 72))) != 0 || _pBest != 0 && int32(*(*int16)(unsafe.Pointer(_pIdx + 92))) >= int32(*(*int16)(unsafe.Pointer(_pBest + 92))) {
		goto _94
	}

	_pBest = _pIdx
_94:
	_pIdx = *(*uintptr)(unsafe.Pointer(_pIdx + 40))
	goto _91

_93:
	if _pBest == 0 {
		goto _95
	}

	_iRoot = *(*int32)(unsafe.Pointer(_pBest + 88))
	_6pKeyInfo = _1575sqlite3KeyInfoOfIndex(tls, _pParse, _pBest)
_95:
	_1071sqlite3VdbeAddOp4Int(tls, _v, int32(104), _iCsr, _iRoot, _iDb, int32(1))
	if _6pKeyInfo == 0 {
		goto _96
	}

	_1075sqlite3VdbeChangeP4(tls, _v, int32(-1), _6pKeyInfo, int32(-9))
_96:
	_1240sqlite3VdbeAddOp2(tls, _v, int32(100), _iCsr, *(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_sAggInfo + 48)) + 16)))
	_1489sqlite3VdbeAddOp1(tls, _v, int32(112), _iCsr)
	_1576explainSimpleCount(tls, _pParse, _5pTab, _pBest)
	goto _89

_88:
	*(*uintptr)(unsafe.Pointer(_pMinMax)) = 0
	_flag = uint8(0x0)

	if (*(*uintptr)(unsafe.Pointer(_p + 56))) != 0 {
		goto _97
	}

	_flag = _1577minMaxQuery(tls, _sAggInfo, _pMinMax)
_97:
	if _flag == 0 {
		goto _98
	}

	*(*uintptr)(unsafe.Pointer(_pMinMax)) = _1518sqlite3ExprListDup(tls, _db, *(*uintptr)(unsafe.Pointer(_pMinMax)), int32(0))
	_pDel = *(*uintptr)(unsafe.Pointer(_pMinMax))

	if (*(*uint8)(unsafe.Pointer(_db + 97))) != 0 {
		goto _99
	}

	*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pMinMax))) + 8 + 24)) = uint8(func() int32 {
		if int32(_flag) != int32(0x1) {
			return int32(1)
		}
		return int32(0)
	}())
	*(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pMinMax))) + 8)))) = uint8(145)
_99:
_98:
	_1572resetAccumulator(tls, _pParse, _sAggInfo)
	_pWInfo = _1544sqlite3WhereBegin(tls, _pParse, _pTabList, _pWhere, *(*uintptr)(unsafe.Pointer(_pMinMax)), null, uint16(_flag), int32(0))
	if _pWInfo != 0 {
		goto _100
	}

	_551sqlite3ExprListDelete(tls, _db, _pDel)
	goto _select_end

_100:
	_1568updateAccumulator(tls, _pParse, _sAggInfo)

	if _1547sqlite3WhereIsOrdered(tls, _pWInfo) <= int32(0) {
		goto _101
	}

	_1479sqlite3VdbeGoto(tls, _v, _1552sqlite3WhereBreakLabel(tls, _pWInfo))
_101:
	_1553sqlite3WhereEnd(tls, _pWInfo)
	_1570finalizeAggFunctions(tls, _pParse, _sAggInfo)
_89:
	*(*uintptr)(unsafe.Pointer(_sSort)) = null
	_1571sqlite3ExprIfFalse(tls, _pParse, _pHaving, _addrEnd, int32(0x10))
	_1550selectInnerLoop(tls, _pParse, _p, int32(-1), null, null, _pDest, _addrEnd, _addrEnd)
	_551sqlite3ExprListDelete(tls, _db, _pDel)
_67:
	_1569sqlite3VdbeResolveLabel(tls, _v, _addrEnd)
_43:
	if int32(*(*uint8)(unsafe.Pointer(_sDistinct + 1))) != int32(3) {
		goto _102
	}

	_1557explainTempTable(tls, _pParse, ts+16178 /* "DISTINCT" */)
_102:
	if (*(*uintptr)(unsafe.Pointer(_sSort))) == 0 {
		goto _103
	}

	_1557explainTempTable(tls, _pParse, func() uintptr {
		if (*(*int32)(unsafe.Pointer(_sSort + 8))) > int32(0) {
			return ts + 26146 /* "RIGHT PART OF ORDER BY" */
		}
		return ts + 26169 /* "ORDER BY" */
	}())
	_1578generateSortTail(tls, _pParse, _p, _sSort, *(*int32)(unsafe.Pointer(_pEList)), _pDest)
_103:
	_1569sqlite3VdbeResolveLabel(tls, _v, _iEnd)
	_rc = bool2int((*(*int32)(unsafe.Pointer(_pParse + 48))) > int32(0))
	goto _select_end
_select_end:
	*(*int32)(unsafe.Pointer(_pParse + 480)) = _iRestoreSelectId
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_sAggInfo + 32)))
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_sAggInfo + 48)))
	return _rc
}

// _1328parserDoubleLinkSelect is defined at sqlite3.c:137007:15
func _1328parserDoubleLinkSelect(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _p uintptr /* *TSelect = SSelect */) {
	var (
		_pNext    uintptr // *TSelect = SSelect
		_pLoop    uintptr // *TSelect = SSelect
		_mxSelect int32
		_cnt      int32
	)
	if (*(*uintptr)(unsafe.Pointer(_p + 72))) == 0 {
		goto _1
	}

	_pNext = 0
	_cnt = int32(0)
	_pLoop = _p
_2:
	if _pLoop == 0 {
		goto _4
	}

	*(*uintptr)(unsafe.Pointer(_pLoop + 80)) = _pNext
	{
		p := &(*(*uint32)(unsafe.Pointer(_pLoop + 12)))
		*p = uint32(uint32(*p) | uint32(0x100))
	}
	_pNext = _pLoop
	_pLoop = *(*uintptr)(unsafe.Pointer(_pLoop + 72))
	_cnt++
	goto _2

_4:
	if ((*(*uint32)(unsafe.Pointer(_p + 12)))&uint32(0x400)) != uint32(0) || set5(&_mxSelect, *(*int32)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pParse))) + 124) + 16))) <= int32(0) || _cnt <= _mxSelect {
		goto _5
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+26178 /* "too many terms in compound SELEC..." */)
_5:
_1:
}

// _1329sqlite3SrcListAppendFromTerm is defined at sqlite3.c:104534:24
func _1329sqlite3SrcListAppendFromTerm(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _p uintptr /* *TSrcList = SSrcList */, _pTable uintptr /* *TToken = SToken */, _pDatabase uintptr /* *TToken = SToken */, _pAlias uintptr /* *TToken = SToken */, _pSubquery uintptr /* *TSelect = SSelect */, _pOn uintptr /* *TExpr = SExpr */, _pUsing uintptr /* *TIdList = SIdList */) (r uintptr /* *TSrcList = SSrcList */) {
	var (
		_pItem uintptr // *SSrcList_item
		_db    uintptr // *Tsqlite3 = Ssqlite3
	)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	if _p != 0 || _pOn == 0 && _pUsing == 0 {
		goto _1
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+26212 /* "a JOIN clause is required before..." */, func() uintptr {
		if _pOn != 0 {
			return ts + 16434 /* "ON" */
		}
		return ts + 16586 /* "USING" */
	}())
	goto _append_from_error

_1:
	_p = _1340sqlite3SrcListAppend(tls, _db, _p, _pTable, _pDatabase)
	if _p != 0 && (*(*int32)(unsafe.Pointer(_p))) != int32(0) {
		goto _2
	}

	goto _append_from_error

_2:
	_pItem = (_p + 8) + 112*uintptr((*(*int32)(unsafe.Pointer(_p)))-int32(1))

	if (*(*uint32)(unsafe.Pointer(_pAlias + 8))) == 0 {
		goto _3
	}

	*(*uintptr)(unsafe.Pointer(_pItem + 24)) = _1482sqlite3NameFromToken(tls, _db, _pAlias)
_3:
	*(*uintptr)(unsafe.Pointer(_pItem + 40)) = _pSubquery
	*(*uintptr)(unsafe.Pointer(_pItem + 72)) = _pOn
	*(*uintptr)(unsafe.Pointer(_pItem + 80)) = _pUsing
	return _p

	goto _append_from_error
_append_from_error:
	_777sqlite3ExprDelete(tls, _db, _pOn)
	_778sqlite3IdListDelete(tls, _db, _pUsing)
	_1094sqlite3SelectDelete(tls, _db, _pSubquery)
	return null
}

// _1330sqlite3SelectNew is defined at sqlite3.c:117788:23
func _1330sqlite3SelectNew(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pEList uintptr /* *TExprList = SExprList */, _pSrc uintptr /* *TSrcList = SSrcList */, _pWhere uintptr /* *TExpr = SExpr */, _pGroupBy uintptr /* *TExprList = SExprList */, _pHaving uintptr /* *TExpr = SExpr */, _pOrderBy uintptr /* *TExprList = SExprList */, _selFlags uint32, _pLimit uintptr /* *TExpr = SExpr */, _pOffset uintptr /* *TExpr = SExpr */) (r uintptr /* *TSelect = SSelect */) {
	esc := crt.MustMalloc(112)
	var (
		_pNew    uintptr // *TSelect = SSelect
		_standin = esc   // *TSelect = SSelect
	)
	defer crt.Free(esc)
	_pNew = _373sqlite3DbMallocRawNN(tls, *(*uintptr)(unsafe.Pointer(_pParse)), uint64(112))
	if _pNew != 0 {
		goto _1
	}

	_pNew = _standin
_1:
	if _pEList != 0 {
		goto _2
	}

	_pEList = _1331sqlite3ExprListAppend(tls, _pParse, null, _1334sqlite3Expr(tls, *(*uintptr)(unsafe.Pointer(_pParse)), int32(154), null))
_2:
	*(*uintptr)(unsafe.Pointer(_pNew)) = _pEList
	*(*uint8)(unsafe.Pointer(_pNew + 8)) = uint8(119)
	*(*uint32)(unsafe.Pointer(_pNew + 12)) = _selFlags
	*(*int32)(unsafe.Pointer(_pNew + 16)) = int32(0)
	*(*int32)(unsafe.Pointer(_pNew + 20)) = int32(0)
	*(*int32)(unsafe.Pointer(_pNew + 24)) = int32(-1)
	*(*int32)(unsafe.Pointer((_pNew + 24) + 4)) = int32(-1)
	*(*int16)(unsafe.Pointer(_pNew + 10)) = int16(0)
	if _pSrc != 0 {
		goto _3
	}

	_pSrc = _295sqlite3DbMallocZero(tls, *(*uintptr)(unsafe.Pointer(_pParse)), uint64(120))
_3:
	*(*uintptr)(unsafe.Pointer(_pNew + 32)) = _pSrc
	*(*uintptr)(unsafe.Pointer(_pNew + 40)) = _pWhere
	*(*uintptr)(unsafe.Pointer(_pNew + 48)) = _pGroupBy
	*(*uintptr)(unsafe.Pointer(_pNew + 56)) = _pHaving
	*(*uintptr)(unsafe.Pointer(_pNew + 64)) = _pOrderBy
	*(*uintptr)(unsafe.Pointer(_pNew + 72)) = null
	*(*uintptr)(unsafe.Pointer(_pNew + 80)) = null
	*(*uintptr)(unsafe.Pointer(_pNew + 88)) = _pLimit
	*(*uintptr)(unsafe.Pointer(_pNew + 96)) = _pOffset
	*(*uintptr)(unsafe.Pointer(_pNew + 104)) = null

	if (*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pParse))) + 97))) == 0 {
		goto _4
	}

	_1256clearSelect(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _pNew, bool2int(_pNew != _standin))
	_pNew = null
	goto _5

_4:
_5:
	return _pNew
}

// _1331sqlite3ExprListAppend is defined at sqlite3.c:93304:25
func _1331sqlite3ExprListAppend(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pList uintptr /* *TExprList = SExprList */, _pExpr uintptr /* *TExpr = SExpr */) (r uintptr /* *TExprList = SExprList */) {
	var (
		_pItem uintptr // *SExprList_item
		_db    uintptr // *Tsqlite3 = Ssqlite3
		_pNew  uintptr // *TExprList = SExprList
	)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))

	if _pList != 0 {
		goto _1
	}

	_pList = _373sqlite3DbMallocRawNN(tls, _db, uint64(40))
	if _pList != 0 {
		goto _3
	}

	goto _no_mem

_3:
	*(*int32)(unsafe.Pointer(_pList)) = int32(0)
	goto _2

_1:
	if ((*(*int32)(unsafe.Pointer(_pList))) & ((*(*int32)(unsafe.Pointer(_pList))) - int32(1))) != int32(0) {
		goto _4
	}

	_pNew = _869sqlite3DbRealloc(tls, _db, _pList, uint64(uint64(40)+(uint64((int32(2)*(*(*int32)(unsafe.Pointer(_pList))))-int32(1))*uint64(32))))
	if _pNew != 0 {
		goto _5
	}

	goto _no_mem

_5:
	_pList = _pNew
_4:
_2:
	_pItem = (_pList + 8) + 32*uintptr(postinc7(&(*(*int32)(unsafe.Pointer(_pList)))))

	crt.Xmemset(tls, _pItem+8, int32(0), uint64(24))
	*(*uintptr)(unsafe.Pointer(_pItem)) = _pExpr
	return _pList

	goto _no_mem
_no_mem:
	_777sqlite3ExprDelete(tls, _db, _pExpr)
	_551sqlite3ExprListDelete(tls, _db, _pList)
	return null
}

// _1332sqlite3ExprListSetName is defined at sqlite3.c:93431:21
func _1332sqlite3ExprListSetName(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pList uintptr /* *TExprList = SExprList */, _pName uintptr /* *TToken = SToken */, _dequote int32) {
	var _pItem uintptr // *SExprList_item

	if _pList == 0 {
		goto _1
	}

	_pItem = (_pList + 8) + 32*uintptr((*(*int32)(unsafe.Pointer(_pList)))-int32(1))

	*(*uintptr)(unsafe.Pointer(_pItem + 8)) = _618sqlite3DbStrNDup(tls, *(*uintptr)(unsafe.Pointer(_pParse)), *(*uintptr)(unsafe.Pointer(_pName)), uint64(*(*uint32)(unsafe.Pointer(_pName + 8))))
	if _dequote == 0 {
		goto _2
	}

	_1104sqlite3Dequote(tls, *(*uintptr)(unsafe.Pointer(_pItem + 8)))
_2:
_1:
}

// _1333sqlite3ExprListSetSpan is defined at sqlite3.c:93456:21
func _1333sqlite3ExprListSetSpan(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pList uintptr /* *TExprList = SExprList */, _pSpan uintptr /* *TExprSpan = SExprSpan */) {
	var (
		_db    uintptr // *Tsqlite3 = Ssqlite3
		_pItem uintptr // *SExprList_item
	)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))

	if _pList == 0 {
		goto _1
	}

	_pItem = (_pList + 8) + 32*uintptr((*(*int32)(unsafe.Pointer(_pList)))-int32(1))

	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_pItem + 16)))
	*(*uintptr)(unsafe.Pointer(_pItem + 16)) = _618sqlite3DbStrNDup(tls, _db, *(*uintptr)(unsafe.Pointer(_pSpan + 8)), uint64(int32(int64((*(*uintptr)(unsafe.Pointer(_pSpan + 16)))-(*(*uintptr)(unsafe.Pointer(_pSpan + 8)))))))
_1:
}

// _1334sqlite3Expr is defined at sqlite3.c:92603:21
func _1334sqlite3Expr(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _op int32, _zToken uintptr /* *int8 */) (r uintptr /* *TExpr = SExpr */) {
	esc := crt.MustMalloc(16)
	var _x = esc // *TToken = SToken
	defer crt.Free(esc)
	*(*uintptr)(unsafe.Pointer(_x)) = _zToken
	*(*uint32)(unsafe.Pointer(_x + 8)) = uint32(_211sqlite3Strlen30(tls, _zToken))
	return _1335sqlite3ExprAlloc(tls, _db, _op, _x, int32(0))
}

// _1335sqlite3ExprAlloc is defined at sqlite3.c:92554:21
func _1335sqlite3ExprAlloc(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _op int32, _pToken uintptr /* *TToken = SToken */, _dequote int32) (r uintptr /* *TExpr = SExpr */) {
	esc := crt.MustMalloc(4)
	var (
		_pNew   uintptr // *TExpr = SExpr
		_nExtra int32
		_iValue = esc // *int32
	)
	defer crt.Free(esc)
	_nExtra = int32(0)
	*(*int32)(unsafe.Pointer(_iValue)) = int32(0)

	if _pToken == 0 {
		goto _1
	}

	if _op == int32(134) && (*(*uintptr)(unsafe.Pointer(_pToken))) != 0 && _1004sqlite3GetInt32(tls, *(*uintptr)(unsafe.Pointer(_pToken)), _iValue) != int32(0) {
		goto _2
	}

	_nExtra = int32((*(*uint32)(unsafe.Pointer(_pToken + 8))) + uint32(1))

_2:
_1:
	_pNew = _373sqlite3DbMallocRawNN(tls, _db, uint64(uint64(72)+uint64(_nExtra)))
	if _pNew == 0 {
		goto _3
	}

	crt.Xmemset(tls, _pNew, int32(0), uint64(72))
	*(*uint8)(unsafe.Pointer(_pNew)) = uint8(_op)
	*(*int16)(unsafe.Pointer(_pNew + 50)) = int16(-1)
	if _pToken == 0 {
		goto _4
	}

	if _nExtra != int32(0) {
		goto _5
	}

	{
		p := &(*(*uint32)(unsafe.Pointer(_pNew + 4)))
		*p = uint32(uint32(*p) | uint32(8389632))
	}
	*(*int32)(unsafe.Pointer(_pNew + 8)) = *(*int32)(unsafe.Pointer(_iValue))
	goto _6

_5:
	*(*uintptr)(unsafe.Pointer(_pNew + 8)) = _pNew + 72

	if (*(*uint32)(unsafe.Pointer(_pToken + 8))) == 0 {
		goto _7
	}

	crt.Xmemcpy(tls, *(*uintptr)(unsafe.Pointer(_pNew + 8)), *(*uintptr)(unsafe.Pointer(_pToken)), uint64(*(*uint32)(unsafe.Pointer(_pToken + 8))))
_7:
	*(*int8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pNew + 8))) + uintptr(*(*uint32)(unsafe.Pointer(_pToken + 8))))) = int8(0)
	if _dequote == 0 || int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(uint8(*(*int8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pNew + 8)))))))))&int32(0x80) == 0 {
		goto _8
	}

	if int32(*(*int8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pNew + 8))))) != int32('"') {
		goto _9
	}

	{
		p := &(*(*uint32)(unsafe.Pointer(_pNew + 4)))
		*p = uint32(uint32(*p) | uint32(0x40))
	}
_9:
	_1104sqlite3Dequote(tls, *(*uintptr)(unsafe.Pointer(_pNew + 8)))
_8:
_6:
_4:
	*(*int32)(unsafe.Pointer(_pNew + 40)) = int32(1)
_3:
	return _pNew
}

// _1336sqlite3SrcListShiftJoinType is defined at sqlite3.c:104630:21
func _1336sqlite3SrcListShiftJoinType(tls crt.TLS, _p uintptr /* *TSrcList = SSrcList */) {
	var _i int32

	if _p == 0 {
		goto _1
	}

	_i = (*(*int32)(unsafe.Pointer(_p))) - int32(1)
_2:
	if _i <= int32(0) {
		goto _4
	}

	*(*uint8)(unsafe.Pointer(((_p + 8) + 112*uintptr(_i)) + 60)) = *(*uint8)(unsafe.Pointer(((_p + 8) + 112*uintptr(_i-int32(1))) + 60))
	_i--
	goto _2

_4:
	*(*uint8)(unsafe.Pointer(_p + 8 + 60)) = uint8(0)
_1:
}

// _1337sqlite3SrcListIndexedBy is defined at sqlite3.c:104578:21
func _1337sqlite3SrcListIndexedBy(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _p uintptr /* *TSrcList = SSrcList */, _pIndexedBy uintptr /* *TToken = SToken */) {
	var _pItem uintptr // *SSrcList_item

	if _p == 0 || (*(*uint32)(unsafe.Pointer(_pIndexedBy + 8))) <= uint32(0) {
		goto _1
	}

	_pItem = (_p + 8) + 112*uintptr((*(*int32)(unsafe.Pointer(_p)))-int32(1))

	if (*(*uint32)(unsafe.Pointer(_pIndexedBy + 8))) != uint32(1) || (*(*uintptr)(unsafe.Pointer(_pIndexedBy))) != 0 {
		goto _2
	}

	set64b(&(*(*uint8)(unsafe.Pointer((_pItem + 60) + 1))), uint32(1))
	goto _3

_2:
	*(*uintptr)(unsafe.Pointer(_pItem + 96)) = _1482sqlite3NameFromToken(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _pIndexedBy)
	set66b(&(*(*uint8)(unsafe.Pointer((_pItem + 60) + 1))), uint32(1))
_3:
_1:
}

// _1338sqlite3SrcListFuncArgs is defined at sqlite3.c:104602:21
func _1338sqlite3SrcListFuncArgs(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _p uintptr /* *TSrcList = SSrcList */, _pList uintptr /* *TExprList = SExprList */) {
	var _pItem uintptr // *SSrcList_item

	if _p == 0 {
		goto _1
	}

	_pItem = (_p + 8) + 112*uintptr((*(*int32)(unsafe.Pointer(_p)))-int32(1))

	*(*uintptr)(unsafe.Pointer(_pItem + 96)) = _pList
	set63b(&(*(*uint8)(unsafe.Pointer((_pItem + 60) + 1))), uint32(1))
	goto _2

_1:
	_551sqlite3ExprListDelete(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _pList)
_2:
}

// _1339sqlite3SrcListDelete is defined at sqlite3.c:104500:21
func _1339sqlite3SrcListDelete(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pList uintptr /* *TSrcList = SSrcList */) {
	var (
		_i     int32
		_pItem uintptr // *SSrcList_item
	)
	if _pList != 0 {
		goto _1
	}

	return

_1:
	_pItem = _pList + 8
	_i = int32(0)
_2:
	if _i >= (*(*int32)(unsafe.Pointer(_pList))) {
		goto _4
	}

	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_pItem + 8)))
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_pItem + 16)))
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_pItem + 24)))
	if (uint32((*(*uint8)(unsafe.Pointer((_pItem + 60) + 1)))>>1) << 31 >> 31) == 0 {
		goto _5
	}

	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_pItem + 96)))
_5:
	if (uint32((*(*uint8)(unsafe.Pointer((_pItem + 60) + 1)))>>2) << 31 >> 31) == 0 {
		goto _6
	}

	_551sqlite3ExprListDelete(tls, _db, *(*uintptr)(unsafe.Pointer(_pItem + 96)))
_6:
	_430sqlite3DeleteTable(tls, _db, *(*uintptr)(unsafe.Pointer(_pItem + 32)))
	_1094sqlite3SelectDelete(tls, _db, *(*uintptr)(unsafe.Pointer(_pItem + 40)))
	_777sqlite3ExprDelete(tls, _db, *(*uintptr)(unsafe.Pointer(_pItem + 72)))
	_778sqlite3IdListDelete(tls, _db, *(*uintptr)(unsafe.Pointer(_pItem + 80)))
	_i++
	_pItem += 112
	goto _2

_4:
	_376sqlite3DbFreeNN(tls, _db, _pList)
}

// _1340sqlite3SrcListAppend is defined at sqlite3.c:104442:24
func _1340sqlite3SrcListAppend(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pList uintptr /* *TSrcList = SSrcList */, _pTable uintptr /* *TToken = SToken */, _pDatabase uintptr /* *TToken = SToken */) (r uintptr /* *TSrcList = SSrcList */) {
	var _pItem uintptr // *SSrcList_item

	if _pList != 0 {
		goto _1
	}

	_pList = _373sqlite3DbMallocRawNN(tls, _db, uint64(120))
	if _pList != 0 {
		goto _3
	}

	return null

_3:
	*(*uint32)(unsafe.Pointer(_pList + 4)) = uint32(1)
	*(*int32)(unsafe.Pointer(_pList)) = int32(1)
	crt.Xmemset(tls, _pList+8, int32(0), uint64(112))
	*(*int32)(unsafe.Pointer(_pList + 8 + 64)) = int32(-1)
	goto _2

_1:
	_pList = _1579sqlite3SrcListEnlarge(tls, _db, _pList, int32(1), *(*int32)(unsafe.Pointer(_pList)))
_2:
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _4
	}

	_1339sqlite3SrcListDelete(tls, _db, _pList)
	return null

_4:
	_pItem = (_pList + 8) + 112*uintptr((*(*int32)(unsafe.Pointer(_pList)))-int32(1))
	if _pDatabase == 0 || (*(*uintptr)(unsafe.Pointer(_pDatabase))) != 0 {
		goto _5
	}

	_pDatabase = null
_5:
	if _pDatabase == 0 {
		goto _6
	}

	*(*uintptr)(unsafe.Pointer(_pItem + 16)) = _1482sqlite3NameFromToken(tls, _db, _pDatabase)
	*(*uintptr)(unsafe.Pointer(_pItem + 8)) = _1482sqlite3NameFromToken(tls, _db, _pTable)
	goto _7

_6:
	*(*uintptr)(unsafe.Pointer(_pItem + 16)) = _1482sqlite3NameFromToken(tls, _db, _pTable)
	*(*uintptr)(unsafe.Pointer(_pItem + 8)) = null
_7:
	return _pList
}

// _1341sqlite3JoinType is defined at sqlite3.c:117889:20
func _1341sqlite3JoinType(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pA uintptr /* *TToken = SToken */, _pB uintptr /* *TToken = SToken */, _pC uintptr /* *TToken = SToken */) (r int32) {
	esc := crt.MustMalloc(24)
	var (
		_jointype int32
		_apAll    = esc   // *[3]*SToken
		_p        uintptr // *TToken = SToken
		_i        int32
		_j        int32
		_zSp      uintptr // *int8
	)
	defer crt.Free(esc)
	_jointype = int32(0)
	*(*uintptr)(unsafe.Pointer(_apAll)) = _pA
	*(*uintptr)(unsafe.Pointer(_apAll + 8)) = _pB
	*(*uintptr)(unsafe.Pointer(_apAll + 16)) = _pC
	_i = int32(0)
_1:
	if _i >= int32(3) || (*(*uintptr)(unsafe.Pointer(_apAll + 8*uintptr(_i)))) == 0 {
		goto _3
	}

	_p = *(*uintptr)(unsafe.Pointer(_apAll + 8*uintptr(_i)))
	_j = int32(0)
_4:
	if _j >= int32(7) {
		goto _6
	}

	if (*(*uint32)(unsafe.Pointer(_p + 8))) != uint32(*(*uint8)(unsafe.Pointer((_1581aKeyword + 3*uintptr(_j)) + 1))) || Xsqlite3_strnicmp(tls, *(*uintptr)(unsafe.Pointer(_p)), _1580zKeyText+uintptr(*(*uint8)(unsafe.Pointer(_1581aKeyword + 3*uintptr(_j)))), int32(*(*uint32)(unsafe.Pointer(_p + 8)))) != int32(0) {
		goto _7
	}

	_jointype = int32(_jointype | int32(*(*uint8)(unsafe.Pointer((_1581aKeyword + 3*uintptr(_j)) + 2))))
	goto _6

_7:
	_j++
	goto _4

_6:
	if _j < int32(7) {
		goto _8
	}

	_jointype = int32(_jointype | int32(0x40))
	goto _3

_8:
	_i++
	goto _1

_3:
	if (_jointype&int32(33)) != int32(33) && (_jointype&int32(0x40)) == int32(0) {
		goto _9
	}

	_zSp = ts + 4582 /* " " */

	if _pC != 0 {
		goto _11
	}

	_zSp++
_11:
	_550sqlite3ErrorMsg(tls, _pParse, ts+26248 /* "unknown or unsupported join type..." */, _pA, _pB, _zSp, _pC)
	_jointype = int32(0x1)
	goto _10

_9:
	if (_jointype&int32(0x20)) == int32(0) || (_jointype&int32(24)) == int32(0x8) {
		goto _12
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+26292 /* "RIGHT and FULL OUTER JOINs are n..." */)
	_jointype = int32(0x1)
_12:
_10:
	return _jointype
}

// _1342sqlite3ExprListSetSortOrder is defined at sqlite3.c:93412:21
func _1342sqlite3ExprListSetSortOrder(tls crt.TLS, _p uintptr /* *TExprList = SExprList */, _iSortOrder int32) {
	if _p != 0 {
		goto _1
	}

	return

_1:
	if _iSortOrder >= int32(0) {
		goto _2
	}

	return

_2:
	*(*uint8)(unsafe.Pointer(((_p + 8) + 32*uintptr((*(*int32)(unsafe.Pointer(_p)))-int32(1))) + 24)) = uint8(_iSortOrder)
}

// _1343sqlite3WithPush is defined at sqlite3.c:121834:21
func _1343sqlite3WithPush(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pWith uintptr /* *TWith = SWith */, _bFree uint8) {
	if _pWith == 0 {
		goto _1
	}

	*(*uintptr)(unsafe.Pointer(_pWith + 8)) = *(*uintptr)(unsafe.Pointer(_pParse + 576))
	*(*uintptr)(unsafe.Pointer(_pParse + 576)) = _pWith
	if _bFree == 0 {
		goto _2
	}

	*(*uintptr)(unsafe.Pointer(_pParse + 584)) = _pWith
_2:
_1:
}

// _1344sqlite3DeleteFrom is defined at sqlite3.c:105837:21
func _1344sqlite3DeleteFrom(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pTabList uintptr /* *TSrcList = SSrcList */, _pWhere uintptr /* *TExpr = SExpr */) {
	esc := crt.MustMalloc(120)
	var (
		_v            uintptr // *TVdbe = SVdbe
		_pTab         uintptr // *TTable = STable
		_i            int32
		_pWInfo       uintptr // *TWhereInfo = SWhereInfo
		_pIdx         uintptr // *TIndex = SIndex
		_iTabCur      int32
		_iDataCur     = esc      // *int32
		_iIdxCur      = esc + 16 // *int32
		_nIdx         int32
		_db           uintptr    // *Tsqlite3 = Ssqlite3
		_sContext     = esc + 32 // *TAuthContext = SAuthContext
		_sNC          = esc + 48 // *TNameContext = SNameContext
		_iDb          int32
		_memCnt       int32
		_rcauth       int32
		_eOnePass     int32
		_aiCurOnePass = esc + 112 // *[2]int32
		_aToOpen      uintptr     // *Tu8 = uint8
		_pPk          uintptr     // *TIndex = SIndex
		_iPk          int32
		_nPk          int16
		_iKey         int32
		_nKey         int16
		_iEphCur      int32
		_iRowSet      int32
		_addrBypass   int32
		_addrLoop     int32
		_addrEphOpen  int32
		_bComplex     int32
		_isView       int32
		_pTrigger     uintptr // *TTrigger = STrigger
		_wcf          uint16
		_iAddrOnce    int32
		_pVTab        uintptr // *int8
		_count        int32
	)
	defer crt.Free(esc)
	*(*int32)(unsafe.Pointer(_iDataCur)) = int32(0)
	*(*int32)(unsafe.Pointer(_iIdxCur)) = int32(0)
	_memCnt = int32(-1)
	_aToOpen = 0
	_iPk = int32(0)
	_nPk = int16(1)
	_iEphCur = int32(0)
	_iRowSet = int32(0)
	_addrBypass = int32(0)
	_addrLoop = int32(0)
	_addrEphOpen = int32(0)
	crt.Xmemset(tls, _sContext, int32(0), uint64(16))
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	if (*(*int32)(unsafe.Pointer(_pParse + 48))) == 0 && (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _1
	}

	goto _delete_from_cleanup

_1:
	_pTab = _1512sqlite3SrcListLookup(tls, _pParse, _pTabList)
	if _pTab != 0 {
		goto _2
	}

	goto _delete_from_cleanup

_2:
	_pTrigger = _1582sqlite3TriggersExist(tls, _pParse, _pTab, int32(109), null, null)
	_isView = bool2int((*(*uintptr)(unsafe.Pointer(_pTab + 24))) != 0)
	_bComplex = bool2int((_pTrigger != 0) || (_1583sqlite3FkRequired(tls, _pParse, _pTab, null, int32(0)) != 0))
	if _1524sqlite3ViewGetColumnNames(tls, _pParse, _pTab) == 0 {
		goto _3
	}

	goto _delete_from_cleanup

_3:
	if _1584sqlite3IsReadOnly(tls, _pParse, _pTab, func() int32 {
		if _pTrigger != 0 {
			return int32(1)
		}
		return int32(0)
	}()) == 0 {
		goto _4
	}

	goto _delete_from_cleanup

_4:
	_iDb = _1069sqlite3SchemaToIndex(tls, _db, *(*uintptr)(unsafe.Pointer(_pTab + 112)))

	_rcauth = _1480sqlite3AuthCheck(tls, _pParse, int32(9), *(*uintptr)(unsafe.Pointer(_pTab)), null, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb))))

	if _rcauth != int32(1) {
		goto _5
	}

	goto _delete_from_cleanup

_5:
	_iTabCur = set5(&(*(*int32)(unsafe.Pointer(_pTabList + 8 + 64))), postinc7(&(*(*int32)(unsafe.Pointer(_pParse + 52)))))
	_nIdx = int32(0)
	_pIdx = *(*uintptr)(unsafe.Pointer(_pTab + 16))
_6:
	if _pIdx == 0 {
		goto _8
	}

	(*(*int32)(unsafe.Pointer(_pParse + 52)))++
	_pIdx = *(*uintptr)(unsafe.Pointer(_pIdx + 40))
	_nIdx++
	goto _6

_8:
	if _isView == 0 {
		goto _9
	}

	_1585sqlite3AuthContextPush(tls, _pParse, _sContext, *(*uintptr)(unsafe.Pointer(_pTab)))
_9:
	_v = _1472sqlite3GetVdbe(tls, _pParse)
	if _v != 0 {
		goto _10
	}

	goto _delete_from_cleanup

_10:
	if int32(*(*uint8)(unsafe.Pointer(_pParse + 30))) != int32(0) {
		goto _11
	}

	_1586sqlite3VdbeCountChanges(tls, _v)
_11:
	_1488sqlite3BeginWriteOperation(tls, _pParse, int32(1), _iDb)
	if _isView == 0 {
		goto _12
	}

	_1587sqlite3MaterializeView(tls, _pParse, _pTab, _pWhere, _iTabCur)
	*(*int32)(unsafe.Pointer(_iDataCur)) = set5(&(*(*int32)(unsafe.Pointer(_iIdxCur))), _iTabCur)
_12:
	crt.Xmemset(tls, _sNC, int32(0), uint64(56))
	*(*uintptr)(unsafe.Pointer(_sNC)) = _pParse
	*(*uintptr)(unsafe.Pointer(_sNC + 8)) = _pTabList
	if _1588sqlite3ResolveExprNames(tls, _sNC, _pWhere) == 0 {
		goto _13
	}

	goto _delete_from_cleanup

_13:
	if ((*(*uint32)(unsafe.Pointer(_db + 48))) & uint32(0x80)) == 0 {
		goto _14
	}

	_memCnt = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))
	_1240sqlite3VdbeAddOp2(tls, _v, int32(67), int32(0), _memCnt)
_14:
	if _rcauth != int32(0) || _pWhere != 0 || _bComplex != 0 || *(*int32)(unsafe.Pointer(_pTab + 84)) != 0 {
		goto _15
	}

	_1574sqlite3TableLock(tls, _pParse, _iDb, *(*int32)(unsafe.Pointer(_pTab + 56)), uint8(1), *(*uintptr)(unsafe.Pointer(_pTab)))
	if ((*(*uint32)(unsafe.Pointer(_pTab + 64))) & uint32(0x20)) != uint32(0) {
		goto _17
	}

	_1475sqlite3VdbeAddOp4(tls, _v, int32(133), *(*int32)(unsafe.Pointer(_pTab + 56)), _iDb, _memCnt, *(*uintptr)(unsafe.Pointer(_pTab)), int32(-1))
_17:
	_pIdx = *(*uintptr)(unsafe.Pointer(_pTab + 16))
_18:
	if _pIdx == 0 {
		goto _20
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(133), *(*int32)(unsafe.Pointer(_pIdx + 88)), _iDb)
	_pIdx = *(*uintptr)(unsafe.Pointer(_pIdx + 40))
	goto _18

_20:
	goto _16

_15:
	_wcf = uint16(1044)
	if (int32(*(*uint16)(unsafe.Pointer(_sNC + 48))) & int32(0x40)) == 0 {
		goto _21
	}

	_bComplex = int32(1)
_21:
	_wcf = uint16(int32(_wcf) | func() int32 {
		if _bComplex != 0 {
			return int32(0)
		}
		return int32(0x8)
	}())
	if ((*(*uint32)(unsafe.Pointer(_pTab + 64))) & uint32(0x20)) != uint32(0) {
		goto _22
	}

	_pPk = null
	_nPk = int16(1)
	_iRowSet = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))
	_1240sqlite3VdbeAddOp2(tls, _v, int32(70), int32(0), _iRowSet)
	goto _23

_22:
	_pPk = _1060sqlite3PrimaryKeyIndex(tls, _pTab)

	_nPk = int16(*(*uint16)(unsafe.Pointer(_pPk + 94)))
	_iPk = (*(*int32)(unsafe.Pointer(_pParse + 56))) + int32(1)
	{
		p := &(*(*int32)(unsafe.Pointer(_pParse + 56)))
		*p = int32(int32(*p) + int32(_nPk))
	}
	_iEphCur = postinc7(&(*(*int32)(unsafe.Pointer(_pParse + 52))))
	_addrEphOpen = _1240sqlite3VdbeAddOp2(tls, _v, int32(108), _iEphCur, int32(_nPk))
	_1589sqlite3VdbeSetP4KeyInfo(tls, _pParse, _pPk)
_23:
	_pWInfo = _1544sqlite3WhereBegin(tls, _pParse, _pTabList, _pWhere, null, null, _wcf, _iTabCur+int32(1))
	if _pWInfo != 0 {
		goto _24
	}

	goto _delete_from_cleanup

_24:
	_eOnePass = _1590sqlite3WhereOkOnePass(tls, _pWInfo, _aiCurOnePass)

	if ((*(*uint32)(unsafe.Pointer(_db + 48))) & uint32(0x80)) == 0 {
		goto _25
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(80), _memCnt, int32(1))
_25:
	if _pPk == 0 {
		goto _26
	}

	_i = int32(0)
_28:
	if _i >= int32(_nPk) {
		goto _30
	}

	_1591sqlite3ExprCodeGetColumnOfTable(tls, _v, _pTab, _iTabCur, int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPk + 8))) + 2*uintptr(_i)))), _iPk+_i)
	_i++
	goto _28

_30:
	_iKey = _iPk
	goto _27

_26:
	_iKey = (*(*int32)(unsafe.Pointer(_pParse + 56))) + int32(1)
	_iKey = _1592sqlite3ExprCodeGetColumn(tls, _pParse, _pTab, int32(-1), _iTabCur, _iKey, uint8(0))
	if _iKey <= (*(*int32)(unsafe.Pointer(_pParse + 56))) {
		goto _31
	}

	*(*int32)(unsafe.Pointer(_pParse + 56)) = _iKey
_31:
_27:
	if _eOnePass == int32(0) {
		goto _32
	}

	_nKey = _nPk
	_aToOpen = _373sqlite3DbMallocRawNN(tls, _db, uint64(_nIdx+int32(2)))
	if _aToOpen != 0 {
		goto _34
	}

	_1553sqlite3WhereEnd(tls, _pWInfo)
	goto _delete_from_cleanup

_34:
	crt.Xmemset(tls, _aToOpen, int32(1), uint64(_nIdx+int32(1)))
	*(*uint8)(unsafe.Pointer(_aToOpen + uintptr(_nIdx+int32(1)))) = uint8(0)
	if (*(*int32)(unsafe.Pointer(_aiCurOnePass))) < int32(0) {
		goto _35
	}

	*(*uint8)(unsafe.Pointer(_aToOpen + uintptr((*(*int32)(unsafe.Pointer(_aiCurOnePass)))-_iTabCur))) = uint8(0)
_35:
	if (*(*int32)(unsafe.Pointer(_aiCurOnePass + 4))) < int32(0) {
		goto _36
	}

	*(*uint8)(unsafe.Pointer(_aToOpen + uintptr((*(*int32)(unsafe.Pointer(_aiCurOnePass + 4)))-_iTabCur))) = uint8(0)
_36:
	if _addrEphOpen == 0 {
		goto _37
	}

	_1549sqlite3VdbeChangeToNoop(tls, _v, _addrEphOpen)
_37:
	goto _33

_32:
	if _pPk == 0 {
		goto _38
	}

	_iKey = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))
	_nKey = int16(0)
	_1475sqlite3VdbeAddOp4(tls, _v, int32(99), _iPk, int32(_nPk), _iKey, _1593sqlite3IndexAffinityStr(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _pPk), int32(_nPk))
	_1071sqlite3VdbeAddOp4Int(tls, _v, int32(127), _iEphCur, _iKey, _iPk, int32(_nPk))
	goto _39

_38:
	_nKey = int16(1)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(143), _iRowSet, _iKey)
_39:
_33:
	if _eOnePass == int32(0) {
		goto _40
	}

	_addrBypass = _1541sqlite3VdbeMakeLabel(tls, _v)
	goto _41

_40:
	_1553sqlite3WhereEnd(tls, _pWInfo)
_41:
	if _isView != 0 {
		goto _42
	}

	_iAddrOnce = int32(0)
	if _eOnePass != int32(2) {
		goto _43
	}

	_iAddrOnce = _1473sqlite3VdbeAddOp0(tls, _v, int32(20))
_43:
	_1594sqlite3OpenTableAndIndices(tls, _pParse, _pTab, int32(105), uint8(0x8), _iTabCur, _aToOpen, _iDataCur, _iIdxCur)

	if _eOnePass != int32(2) {
		goto _44
	}

	_1474sqlite3VdbeJumpHere(tls, _v, _iAddrOnce)
_44:
_42:
	if _eOnePass == int32(0) {
		goto _45
	}

	if *(*int32)(unsafe.Pointer(_pTab + 84)) != 0 || (*(*uint8)(unsafe.Pointer(_aToOpen + uintptr((*(*int32)(unsafe.Pointer(_iDataCur)))-_iTabCur)))) == 0 {
		goto _47
	}

	_1071sqlite3VdbeAddOp4Int(tls, _v, int32(29), *(*int32)(unsafe.Pointer(_iDataCur)), _addrBypass, _iKey, int32(_nKey))
_47:
	goto _46

_45:
	if _pPk == 0 {
		goto _48
	}

	_addrLoop = _1489sqlite3VdbeAddOp1(tls, _v, int32(37), _iEphCur)
	if *(*int32)(unsafe.Pointer(_pTab + 84)) == 0 {
		goto _50
	}

	_1241sqlite3VdbeAddOp3(tls, _v, int32(96), _iEphCur, int32(0), _iKey)
	goto _51

_50:
	_1240sqlite3VdbeAddOp2(tls, _v, int32(122), _iEphCur, _iKey)
_51:
	goto _49

_48:
	_addrLoop = _1241sqlite3VdbeAddOp3(tls, _v, int32(42), _iRowSet, int32(0), _iKey)

_49:
_46:
	if *(*int32)(unsafe.Pointer(_pTab + 84)) == 0 {
		goto _52
	}

	_pVTab = _1037sqlite3GetVTable(tls, _db, _pTab)
	_1595sqlite3VtabMakeWritable(tls, _pParse, _pTab)
	_1475sqlite3VdbeAddOp4(tls, _v, int32(12), int32(0), int32(1), _iKey, _pVTab, int32(-12))
	_1072sqlite3VdbeChangeP5(tls, _v, uint16(2))

	_1495sqlite3MayAbort(tls, _pParse)
	if _eOnePass != int32(1) || (*(*uintptr)(unsafe.Pointer(_pParse + 160))) != 0 {
		goto _54
	}

	*(*uint8)(unsafe.Pointer(_pParse + 32)) = uint8(0)
_54:
	goto _53

_52:
	_count = bool2int(int32(*(*uint8)(unsafe.Pointer(_pParse + 30))) == int32(0))
	_1596sqlite3GenerateRowDelete(tls, _pParse, _pTab, _pTrigger, *(*int32)(unsafe.Pointer(_iDataCur)), *(*int32)(unsafe.Pointer(_iIdxCur)), _iKey, _nKey, uint8(_count), uint8(10), uint8(_eOnePass), *(*int32)(unsafe.Pointer(_aiCurOnePass + 4)))
_53:
	if _eOnePass == int32(0) {
		goto _55
	}

	_1569sqlite3VdbeResolveLabel(tls, _v, _addrBypass)
	_1553sqlite3WhereEnd(tls, _pWInfo)
	goto _56

_55:
	if _pPk == 0 {
		goto _57
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(7), _iEphCur, _addrLoop+int32(1))
	_1474sqlite3VdbeJumpHere(tls, _v, _addrLoop)
	goto _58

_57:
	_1479sqlite3VdbeGoto(tls, _v, _addrLoop)
	_1474sqlite3VdbeJumpHere(tls, _v, _addrLoop)
_58:
_56:
_16:
	if int32(*(*uint8)(unsafe.Pointer(_pParse + 30))) != int32(0) || (*(*uintptr)(unsafe.Pointer(_pParse + 168))) != 0 {
		goto _59
	}

	_1597sqlite3AutoincrementEnd(tls, _pParse)
_59:
	if (*(*uint32)(unsafe.Pointer(_db + 48)))&uint32(0x80) == 0 || (*(*uint8)(unsafe.Pointer(_pParse + 30))) != 0 || (*(*uintptr)(unsafe.Pointer(_pParse + 168))) != 0 {
		goto _60
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(78), _memCnt, int32(1))
	_621sqlite3VdbeSetNumCols(tls, _v, int32(1))
	_622sqlite3VdbeSetColName(tls, _v, int32(0), int32(0), ts+26347 /* "rows deleted" */, null)
_60:
	goto _delete_from_cleanup
_delete_from_cleanup:
	_1598sqlite3AuthContextPop(tls, _sContext)
	_1339sqlite3SrcListDelete(tls, _db, _pTabList)
	_777sqlite3ExprDelete(tls, _db, _pWhere)
	_181sqlite3DbFree(tls, _db, _aToOpen)
	return
}

// _1345sqlite3ExprListCheckLength is defined at sqlite3.c:93477:21
func _1345sqlite3ExprListCheckLength(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pEList uintptr /* *TExprList = SExprList */, _zObject uintptr /* *int8 */) {
	var _mx int32

	_mx = *(*int32)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pParse))) + 124) + 8))
	if _pEList == 0 || (*(*int32)(unsafe.Pointer(_pEList))) <= _mx {
		goto _1
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+26360 /* "too many columns in %s" */, _zObject)
_1:
}

// _1346sqlite3Update is defined at sqlite3.c:125146:21
func _1346sqlite3Update(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pTabList uintptr /* *TSrcList = SSrcList */, _pChanges uintptr /* *TExprList = SExprList */, _pWhere uintptr /* *TExpr = SExpr */, _onError int32) {
	esc := crt.MustMalloc(116)
	var (
		_i             int32
		_j             int32
		_pTab          uintptr // *TTable = STable
		_addrTop       int32
		_pWInfo        uintptr // *TWhereInfo = SWhereInfo
		_v             uintptr // *TVdbe = SVdbe
		_pIdx          uintptr // *TIndex = SIndex
		_pPk           uintptr // *TIndex = SIndex
		_nIdx          int32
		_iBaseCur      int32
		_iDataCur      int32
		_iIdxCur       int32
		_db            uintptr // *Tsqlite3 = Ssqlite3
		_aRegIdx       uintptr // *int32
		_aXRef         uintptr // *int32
		_aToOpen       uintptr // *Tu8 = uint8
		_chngPk        uint8
		_chngRowid     uint8
		_chngKey       uint8
		_pRowidExpr    uintptr    // *TExpr = SExpr
		_sContext      = esc      // *TAuthContext = SAuthContext
		_sNC           = esc + 16 // *TNameContext = SNameContext
		_iDb           int32
		_eOnePass      int32
		_hasFK         int32
		_labelBreak    int32
		_labelContinue int32
		_flags         int32
		_isView        int32
		_pTrigger      uintptr    // *TTrigger = STrigger
		_tmask         = esc + 80 // *int32
		_newmask       int32
		_iEph          int32
		_nKey          int32
		_aiCurOnePass  = esc + 96 // *[2]int32
		_addrOpen      int32
		_iPk           int32
		_nPk           int16
		_bReplace      = esc + 112 // *int32
		_regRowCount   int32
		_regOldRowid   int32
		_regNewRowid   int32
		_regNew        int32
		_regOld        int32
		_regRowSet     int32
		_regKey        int32
		_rc            int32
		_reg           int32
		_iIdxCol       int16
		_iCur          int32
		_addrOnce      int32
		_oldmask       uint32
		_addr1         int32
	)
	defer crt.Free(esc)
	_addrTop = int32(0)
	_aRegIdx = 0
	_aXRef = 0
	_pRowidExpr = 0
	_iEph = int32(0)
	_nKey = int32(0)
	_addrOpen = int32(0)
	_iPk = int32(0)
	_nPk = int16(0)
	*(*int32)(unsafe.Pointer(_bReplace)) = int32(0)
	_regRowCount = int32(0)
	_regOldRowid = int32(0)
	_regNewRowid = int32(0)
	_regNew = int32(0)
	_regOld = int32(0)
	_regRowSet = int32(0)
	_regKey = int32(0)
	crt.Xmemset(tls, _sContext, int32(0), uint64(16))
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	if (*(*int32)(unsafe.Pointer(_pParse + 48))) == 0 && (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _1
	}

	goto _update_cleanup

_1:
	_pTab = _1512sqlite3SrcListLookup(tls, _pParse, _pTabList)
	if _pTab != 0 {
		goto _2
	}

	goto _update_cleanup

_2:
	_iDb = _1069sqlite3SchemaToIndex(tls, *(*uintptr)(unsafe.Pointer(_pParse)), *(*uintptr)(unsafe.Pointer(_pTab + 112)))
	_pTrigger = _1582sqlite3TriggersExist(tls, _pParse, _pTab, int32(110), _pChanges, _tmask)
	_isView = bool2int((*(*uintptr)(unsafe.Pointer(_pTab + 24))) != 0)

	if _1524sqlite3ViewGetColumnNames(tls, _pParse, _pTab) == 0 {
		goto _3
	}

	goto _update_cleanup

_3:
	if _1584sqlite3IsReadOnly(tls, _pParse, _pTab, *(*int32)(unsafe.Pointer(_tmask))) == 0 {
		goto _4
	}

	goto _update_cleanup

_4:
	*(*int32)(unsafe.Pointer(_pTabList + 8 + 64)) = set5(&_iBaseCur, set5(&_iDataCur, postinc7(&(*(*int32)(unsafe.Pointer(_pParse + 52))))))
	_iIdxCur = _iDataCur + int32(1)
	_pPk = func() uintptr {
		if ((*(*uint32)(unsafe.Pointer(_pTab + 64))) & uint32(0x20)) == uint32(0) {
			return null
		}
		return _1060sqlite3PrimaryKeyIndex(tls, _pTab)
	}()
	_nIdx = int32(0)
	_pIdx = *(*uintptr)(unsafe.Pointer(_pTab + 16))
_5:
	if _pIdx == 0 {
		goto _7
	}

	if int32(uint32(*(*uint8)(unsafe.Pointer(_pIdx + 99)))<<30>>30) != int32(2) || _pPk == 0 {
		goto _8
	}

	_iDataCur = *(*int32)(unsafe.Pointer(_pParse + 52))
	*(*int32)(unsafe.Pointer(_pTabList + 8 + 64)) = _iDataCur
_8:
	(*(*int32)(unsafe.Pointer(_pParse + 52)))++
	_pIdx = *(*uintptr)(unsafe.Pointer(_pIdx + 40))
	_nIdx++
	goto _5

_7:
	_aXRef = _373sqlite3DbMallocRawNN(tls, _db, uint64(((uint64(4)*uint64(int32(*(*int16)(unsafe.Pointer(_pTab + 70)))+_nIdx))+uint64(_nIdx))+uint64(2)))
	if _aXRef != 0 {
		goto _9
	}

	goto _update_cleanup

_9:
	_aRegIdx = _aXRef + 4*uintptr(*(*int16)(unsafe.Pointer(_pTab + 70)))
	_aToOpen = _aRegIdx + 4*uintptr(_nIdx)
	crt.Xmemset(tls, _aToOpen, int32(1), uint64(_nIdx+int32(1)))
	*(*uint8)(unsafe.Pointer(_aToOpen + uintptr(_nIdx+int32(1)))) = uint8(0)
	_i = int32(0)
_10:
	if _i >= int32(*(*int16)(unsafe.Pointer(_pTab + 70))) {
		goto _12
	}

	*(*int32)(unsafe.Pointer(_aXRef + 4*uintptr(_i))) = int32(-1)
	_i++
	goto _10

_12:
	crt.Xmemset(tls, _sNC, int32(0), uint64(56))
	*(*uintptr)(unsafe.Pointer(_sNC)) = _pParse
	*(*uintptr)(unsafe.Pointer(_sNC + 8)) = _pTabList
	_chngRowid = set23(&_chngPk, uint8(0))
	_i = int32(0)
_13:
	if _i >= (*(*int32)(unsafe.Pointer(_pChanges))) {
		goto _15
	}

	if _1588sqlite3ResolveExprNames(tls, _sNC, *(*uintptr)(unsafe.Pointer((_pChanges + 8) + 32*uintptr(_i)))) == 0 {
		goto _16
	}

	goto _update_cleanup

_16:
	_j = int32(0)
_17:
	if _j >= int32(*(*int16)(unsafe.Pointer(_pTab + 70))) {
		goto _19
	}

	if _110sqlite3StrICmp(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTab + 8))) + 32*uintptr(_j))), *(*uintptr)(unsafe.Pointer(((_pChanges + 8) + 32*uintptr(_i)) + 8))) != int32(0) {
		goto _20
	}

	if _j != int32(*(*int16)(unsafe.Pointer(_pTab + 68))) {
		goto _21
	}

	_chngRowid = uint8(1)
	_pRowidExpr = *(*uintptr)(unsafe.Pointer((_pChanges + 8) + 32*uintptr(_i)))
	goto _22

_21:
	if _pPk == 0 || (int32(*(*uint8)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pTab + 8))) + 32*uintptr(_j)) + 27)))&int32(0x1)) == int32(0) {
		goto _23
	}

	_chngPk = uint8(1)
_23:
_22:
	*(*int32)(unsafe.Pointer(_aXRef + 4*uintptr(_j))) = _i
	goto _19

_20:
	_j++
	goto _17

_19:
	if _j < int32(*(*int16)(unsafe.Pointer(_pTab + 70))) {
		goto _24
	}

	if _pPk != 0 || _222sqlite3IsRowid(tls, *(*uintptr)(unsafe.Pointer(((_pChanges + 8) + 32*uintptr(_i)) + 8))) == 0 {
		goto _25
	}

	_j = int32(-1)
	_chngRowid = uint8(1)
	_pRowidExpr = *(*uintptr)(unsafe.Pointer((_pChanges + 8) + 32*uintptr(_i)))
	goto _26

_25:
	_550sqlite3ErrorMsg(tls, _pParse, ts+26383 /* "no such column: %s" */, *(*uintptr)(unsafe.Pointer(((_pChanges + 8) + 32*uintptr(_i)) + 8)))
	*(*uint8)(unsafe.Pointer(_pParse + 29)) = uint8(1)
	goto _update_cleanup

_26:
_24:
	_rc = _1480sqlite3AuthCheck(tls, _pParse, int32(23), *(*uintptr)(unsafe.Pointer(_pTab)), func() uintptr {
		if _j < int32(0) {
			return ts + 15868 /* "ROWID" */
		}
		return *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTab + 8))) + 32*uintptr(_j)))
	}(), *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb))))
	if _rc != int32(1) {
		goto _27
	}

	goto _update_cleanup

	goto _28

_27:
	if _rc != int32(2) {
		goto _29
	}

	*(*int32)(unsafe.Pointer(_aXRef + 4*uintptr(_j))) = int32(-1)
_29:
_28:
	_i++
	goto _13

_15:
	_chngKey = uint8(int32(_chngRowid) + int32(_chngPk))
	*(*uint64)(unsafe.Pointer(_pTabList + 8 + 88)) = func() uint64 {
		if *(*int32)(unsafe.Pointer(_pTab + 84)) != 0 {
			return uint64(18446744073709551615)
		}
		return uint64(0)
	}()
	_hasFK = _1583sqlite3FkRequired(tls, _pParse, _pTab, _aXRef, int32(_chngKey))
	_j = int32(0)
	_pIdx = *(*uintptr)(unsafe.Pointer(_pTab + 16))
_30:
	if _pIdx == 0 {
		goto _32
	}

	if _chngKey == 0 && _hasFK <= int32(1) && (*(*uintptr)(unsafe.Pointer(_pIdx + 72))) == 0 && _pIdx != _pPk {
		goto _33
	}

	_reg = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))
	{
		p := &(*(*int32)(unsafe.Pointer(_pParse + 56)))
		*p = int32(int32(*p) + int32(*(*uint16)(unsafe.Pointer(_pIdx + 96))))
	}
	goto _34

_33:
	_reg = int32(0)
	_i = int32(0)
_35:
	if _i >= int32(*(*uint16)(unsafe.Pointer(_pIdx + 94))) {
		goto _37
	}

	_iIdxCol = *(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 8))) + 2*uintptr(_i)))
	if int32(_iIdxCol) >= int32(0) && (*(*int32)(unsafe.Pointer(_aXRef + 4*uintptr(_iIdxCol)))) < int32(0) {
		goto _38
	}

	_reg = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))
	{
		p := &(*(*int32)(unsafe.Pointer(_pParse + 56)))
		*p = int32(int32(*p) + int32(*(*uint16)(unsafe.Pointer(_pIdx + 96))))
	}
	if _onError != int32(5) && (_onError != int32(10) || int32(*(*uint8)(unsafe.Pointer(_pIdx + 98))) != int32(5)) {
		goto _39
	}

	*(*int32)(unsafe.Pointer(_bReplace)) = int32(1)
_39:
	goto _37

_38:
	_i++
	goto _35

_37:
_34:
	if _reg != int32(0) {
		goto _40
	}

	*(*uint8)(unsafe.Pointer(_aToOpen + uintptr(_j+int32(1)))) = uint8(0)
_40:
	*(*int32)(unsafe.Pointer(_aRegIdx + 4*uintptr(_j))) = _reg
	_pIdx = *(*uintptr)(unsafe.Pointer(_pIdx + 40))
	_j++
	goto _30

_32:
	if (*(*int32)(unsafe.Pointer(_bReplace))) == 0 {
		goto _41
	}

	crt.Xmemset(tls, _aToOpen, int32(1), uint64(_nIdx+int32(1)))
_41:
	_v = _1472sqlite3GetVdbe(tls, _pParse)
	if _v != 0 {
		goto _42
	}

	goto _update_cleanup

_42:
	if int32(*(*uint8)(unsafe.Pointer(_pParse + 30))) != int32(0) {
		goto _43
	}

	_1586sqlite3VdbeCountChanges(tls, _v)
_43:
	_1488sqlite3BeginWriteOperation(tls, _pParse, int32(1), _iDb)
	if *(*int32)(unsafe.Pointer(_pTab + 84)) != 0 {
		goto _44
	}

	_regRowSet = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))
	_regOldRowid = set5(&_regNewRowid, preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56)))))
	if _chngPk == 0 && _pTrigger == 0 && _hasFK == 0 {
		goto _45
	}

	_regOld = (*(*int32)(unsafe.Pointer(_pParse + 56))) + int32(1)
	{
		p := &(*(*int32)(unsafe.Pointer(_pParse + 56)))
		*p = int32(int32(*p) + int32(*(*int16)(unsafe.Pointer(_pTab + 70))))
	}
_45:
	if _chngKey == 0 && _pTrigger == 0 && _hasFK == 0 {
		goto _46
	}

	_regNewRowid = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))
_46:
	_regNew = (*(*int32)(unsafe.Pointer(_pParse + 56))) + int32(1)
	{
		p := &(*(*int32)(unsafe.Pointer(_pParse + 56)))
		*p = int32(int32(*p) + int32(*(*int16)(unsafe.Pointer(_pTab + 70))))
	}
_44:
	if _isView == 0 {
		goto _47
	}

	_1585sqlite3AuthContextPush(tls, _pParse, _sContext, *(*uintptr)(unsafe.Pointer(_pTab)))
_47:
	if _isView == 0 {
		goto _48
	}

	_1587sqlite3MaterializeView(tls, _pParse, _pTab, _pWhere, _iDataCur)
_48:
	if _1588sqlite3ResolveExprNames(tls, _sNC, _pWhere) == 0 {
		goto _49
	}

	goto _update_cleanup

_49:
	if *(*int32)(unsafe.Pointer(_pTab + 84)) == 0 {
		goto _50
	}

	_1599updateVirtualTable(tls, _pParse, _pTabList, _pTab, _pChanges, _pRowidExpr, _aXRef, _pWhere, _onError)
	goto _update_cleanup

_50:
	if (*(*uint32)(unsafe.Pointer(_db + 48)))&uint32(0x80) == 0 || (*(*uintptr)(unsafe.Pointer(_pParse + 168))) != 0 {
		goto _51
	}

	_regRowCount = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))
	_1240sqlite3VdbeAddOp2(tls, _v, int32(67), int32(0), _regRowCount)
_51:
	if ((*(*uint32)(unsafe.Pointer(_pTab + 64))) & uint32(0x20)) != uint32(0) {
		goto _52
	}

	_1241sqlite3VdbeAddOp3(tls, _v, int32(70), int32(0), _regRowSet, _regOldRowid)
	goto _53

_52:
	_nPk = int16(*(*uint16)(unsafe.Pointer(_pPk + 94)))
	_iPk = (*(*int32)(unsafe.Pointer(_pParse + 56))) + int32(1)
	{
		p := &(*(*int32)(unsafe.Pointer(_pParse + 56)))
		*p = int32(int32(*p) + int32(_nPk))
	}
	_regKey = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))
	_iEph = postinc7(&(*(*int32)(unsafe.Pointer(_pParse + 52))))
	_1240sqlite3VdbeAddOp2(tls, _v, int32(70), int32(0), _iPk)
	_addrOpen = _1240sqlite3VdbeAddOp2(tls, _v, int32(108), _iEph, int32(_nPk))
	_1589sqlite3VdbeSetP4KeyInfo(tls, _pParse, _pPk)
_53:
	_flags = int32(4100)
	if (*(*uint8)(unsafe.Pointer(_pParse + 30))) != 0 || _pTrigger != 0 || _hasFK != 0 || _chngKey != 0 || (*(*int32)(unsafe.Pointer(_bReplace))) != 0 {
		goto _54
	}

	_flags = int32(_flags | int32(0x8))
_54:
	_pWInfo = _1544sqlite3WhereBegin(tls, _pParse, _pTabList, _pWhere, null, null, uint16(_flags), _iIdxCur)
	if _pWInfo != 0 {
		goto _55
	}

	goto _update_cleanup

_55:
	_eOnePass = _1590sqlite3WhereOkOnePass(tls, _pWInfo, _aiCurOnePass)
	if _eOnePass != int32(2) {
		goto _56
	}

	_iCur = *(*int32)(unsafe.Pointer(_aiCurOnePass + 4))
	if _iCur < int32(0) || _iCur == _iDataCur || (*(*uint8)(unsafe.Pointer(_aToOpen + uintptr(_iCur-_iBaseCur)))) == 0 {
		goto _57
	}

	_eOnePass = int32(0)
_57:
_56:
	if ((*(*uint32)(unsafe.Pointer(_pTab + 64))) & uint32(0x20)) != uint32(0) {
		goto _58
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(123), _iDataCur, _regOldRowid)
	if _eOnePass != int32(0) {
		goto _60
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(143), _regRowSet, _regOldRowid)
_60:
	goto _59

_58:
	_i = int32(0)
_61:
	if _i >= int32(_nPk) {
		goto _63
	}

	_1591sqlite3ExprCodeGetColumnOfTable(tls, _v, _pTab, _iDataCur, int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPk + 8))) + 2*uintptr(_i)))), _iPk+_i)
	_i++
	goto _61

_63:
	if _eOnePass == 0 {
		goto _64
	}

	_1549sqlite3VdbeChangeToNoop(tls, _v, _addrOpen)
	_nKey = int32(_nPk)
	_regKey = _iPk
	goto _65

_64:
	_1475sqlite3VdbeAddOp4(tls, _v, int32(99), _iPk, int32(_nPk), _regKey, _1593sqlite3IndexAffinityStr(tls, _db, _pPk), int32(_nPk))
	_1071sqlite3VdbeAddOp4Int(tls, _v, int32(127), _iEph, _regKey, _iPk, int32(_nPk))
_65:
_59:
	if _eOnePass == int32(2) {
		goto _66
	}

	_1553sqlite3WhereEnd(tls, _pWInfo)
_66:
	_labelBreak = _1541sqlite3VdbeMakeLabel(tls, _v)
	if _isView != 0 {
		goto _67
	}

	_addrOnce = int32(0)
	if _eOnePass == int32(0) {
		goto _68
	}

	if (*(*int32)(unsafe.Pointer(_aiCurOnePass))) < int32(0) {
		goto _69
	}

	*(*uint8)(unsafe.Pointer(_aToOpen + uintptr((*(*int32)(unsafe.Pointer(_aiCurOnePass)))-_iBaseCur))) = uint8(0)
_69:
	if (*(*int32)(unsafe.Pointer(_aiCurOnePass + 4))) < int32(0) {
		goto _70
	}

	*(*uint8)(unsafe.Pointer(_aToOpen + uintptr((*(*int32)(unsafe.Pointer(_aiCurOnePass + 4)))-_iBaseCur))) = uint8(0)
_70:
_68:
	if _eOnePass != int32(2) || (_nIdx-bool2int((*(*int32)(unsafe.Pointer(_aiCurOnePass + 4))) >= int32(0))) <= int32(0) {
		goto _71
	}

	_addrOnce = _1473sqlite3VdbeAddOp0(tls, _v, int32(20))
_71:
	_1594sqlite3OpenTableAndIndices(tls, _pParse, _pTab, int32(105), uint8(0), _iBaseCur, _aToOpen, null, null)
	if _addrOnce == 0 {
		goto _72
	}

	_1474sqlite3VdbeJumpHere(tls, _v, _addrOnce)
_72:
_67:
	if _eOnePass == int32(0) {
		goto _73
	}

	if _isView != 0 || (*(*int32)(unsafe.Pointer(_aiCurOnePass))) == _iDataCur || (*(*int32)(unsafe.Pointer(_aiCurOnePass + 4))) == _iDataCur {
		goto _75
	}

	_1071sqlite3VdbeAddOp4Int(tls, _v, int32(29), _iDataCur, _labelBreak, _regKey, _nKey)
_75:
	if _eOnePass != int32(1) {
		goto _76
	}

	_labelContinue = _labelBreak
	goto _77

_76:
	_labelContinue = _1541sqlite3VdbeMakeLabel(tls, _v)
_77:
	_1240sqlite3VdbeAddOp2(tls, _v, int32(50), func() int32 {
		if _pPk != 0 {
			return _regKey
		}
		return _regOldRowid
	}(), _labelBreak)
	goto _74

_73:
	if _pPk == 0 {
		goto _78
	}

	_labelContinue = _1541sqlite3VdbeMakeLabel(tls, _v)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(37), _iEph, _labelBreak)
	_addrTop = _1240sqlite3VdbeAddOp2(tls, _v, int32(122), _iEph, _regKey)
	_1071sqlite3VdbeAddOp4Int(tls, _v, int32(29), _iDataCur, _labelContinue, _regKey, int32(0))
	goto _79

_78:
	_labelContinue = _1241sqlite3VdbeAddOp3(tls, _v, int32(42), _regRowSet, _labelBreak, _regOldRowid)
	_1241sqlite3VdbeAddOp3(tls, _v, int32(32), _iDataCur, _labelContinue, _regOldRowid)
_79:
_74:
	if _chngRowid == 0 {
		goto _80
	}

	_1478sqlite3ExprCode(tls, _pParse, _pRowidExpr, _regNewRowid)
	_1489sqlite3VdbeAddOp1(tls, _v, int32(17), _regNewRowid)
_80:
	if _chngPk == 0 && _hasFK == 0 && _pTrigger == 0 {
		goto _81
	}

	_oldmask = func() uint32 {
		if _hasFK != 0 {
			return _1600sqlite3FkOldmask(tls, _pParse, _pTab)
		}
		return uint32(0)
	}()
	_oldmask = uint32(_oldmask | _1601sqlite3TriggerColmask(tls, _pParse, _pTrigger, _pChanges, int32(0), int32(3), _pTab, _onError))
	_i = int32(0)
_82:
	if _i >= int32(*(*int16)(unsafe.Pointer(_pTab + 70))) {
		goto _84
	}

	if _oldmask != uint32(0xffffffff) && (_i >= int32(32) || (_oldmask&(uint32(1)<<(uint(_i)%32))) == uint32(0)) && (int32(*(*uint8)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pTab + 8))) + 32*uintptr(_i)) + 27)))&int32(0x1)) == int32(0) {
		goto _85
	}

	_1591sqlite3ExprCodeGetColumnOfTable(tls, _v, _pTab, _iDataCur, _i, _regOld+_i)
	goto _86

_85:
	_1240sqlite3VdbeAddOp2(tls, _v, int32(70), int32(0), _regOld+_i)
_86:
	_i++
	goto _82

_84:
	if int32(_chngRowid) != int32(0) || _pPk != 0 {
		goto _87
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(75), _regOldRowid, _regNewRowid)
_87:
_81:
	_newmask = int32(_1601sqlite3TriggerColmask(tls, _pParse, _pTrigger, _pChanges, int32(1), int32(1), _pTab, _onError))
	_i = int32(0)
_88:
	if _i >= int32(*(*int16)(unsafe.Pointer(_pTab + 70))) {
		goto _90
	}

	if _i != int32(*(*int16)(unsafe.Pointer(_pTab + 68))) {
		goto _91
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(70), int32(0), _regNew+_i)
	goto _92

_91:
	_j = *(*int32)(unsafe.Pointer(_aXRef + 4*uintptr(_i)))
	if _j < int32(0) {
		goto _93
	}

	_1478sqlite3ExprCode(tls, _pParse, *(*uintptr)(unsafe.Pointer((_pChanges + 8) + 32*uintptr(_j))), _regNew+_i)
	goto _94

_93:
	if int32(0) != ((*(*int32)(unsafe.Pointer(_tmask)))&int32(1)) && _i <= int32(31) && uint32(_newmask)&(uint32(1)<<(uint(_i)%32)) == 0 {
		goto _95
	}

	_1561sqlite3ExprCodeGetColumnToReg(tls, _pParse, _pTab, _i, _iDataCur, _regNew+_i)
	goto _96

_95:
	_1240sqlite3VdbeAddOp2(tls, _v, int32(70), int32(0), _regNew+_i)
_96:
_94:
_92:
	_i++
	goto _88

_90:
	if ((*(*int32)(unsafe.Pointer(_tmask))) & int32(1)) == 0 {
		goto _97
	}

	_1500sqlite3TableAffinity(tls, _v, _pTab, _regNew)
	_1602sqlite3CodeRowTrigger(tls, _pParse, _pTrigger, int32(110), _pChanges, int32(1), _pTab, _regOldRowid, _onError, _labelContinue)
	if _pPk == 0 {
		goto _98
	}

	_1071sqlite3VdbeAddOp4Int(tls, _v, int32(29), _iDataCur, _labelContinue, _regKey, _nKey)
	goto _99

_98:
	_1241sqlite3VdbeAddOp3(tls, _v, int32(32), _iDataCur, _labelContinue, _regOldRowid)
_99:
	_i = int32(0)
_100:
	if _i >= int32(*(*int16)(unsafe.Pointer(_pTab + 70))) {
		goto _102
	}

	if (*(*int32)(unsafe.Pointer(_aXRef + 4*uintptr(_i)))) >= int32(0) || _i == int32(*(*int16)(unsafe.Pointer(_pTab + 68))) {
		goto _103
	}

	_1591sqlite3ExprCodeGetColumnOfTable(tls, _v, _pTab, _iDataCur, _i, _regNew+_i)
_103:
	_i++
	goto _100

_102:
_97:
	if _isView != 0 {
		goto _104
	}

	_addr1 = int32(0)

	_1603sqlite3GenerateConstraintChecks(tls, _pParse, _pTab, _aRegIdx, _iDataCur, _iIdxCur, _regNewRowid, _regOldRowid, _chngKey, uint8(_onError), _labelContinue, _bReplace, _aXRef)
	if _hasFK == 0 {
		goto _105
	}

	_1604sqlite3FkCheck(tls, _pParse, _pTab, _regOldRowid, int32(0), _aXRef, int32(_chngKey))
_105:
	if (*(*int32)(unsafe.Pointer(_bReplace))) == 0 && _chngKey == 0 {
		goto _106
	}

	if _pPk == 0 {
		goto _107
	}

	_addr1 = _1071sqlite3VdbeAddOp4Int(tls, _v, int32(29), _iDataCur, int32(0), _regKey, _nKey)
	goto _108

_107:
	_addr1 = _1241sqlite3VdbeAddOp3(tls, _v, int32(32), _iDataCur, int32(0), _regOldRowid)
_108:
_106:
	_1605sqlite3GenerateRowIndexDelete(tls, _pParse, _pTab, _iDataCur, _iIdxCur, _aRegIdx, int32(-1))

	if _hasFK <= int32(1) && _chngKey == 0 {
		goto _109
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(118), _iDataCur, int32(0))
_109:
	if (*(*int32)(unsafe.Pointer(_bReplace))) == 0 && _chngKey == 0 {
		goto _110
	}

	_1474sqlite3VdbeJumpHere(tls, _v, _addr1)
_110:
	if _hasFK == 0 {
		goto _111
	}

	_1604sqlite3FkCheck(tls, _pParse, _pTab, int32(0), _regNewRowid, _aXRef, int32(_chngKey))
_111:
	_1606sqlite3CompleteInsertion(tls, _pParse, _pTab, _iDataCur, _iIdxCur, _regNewRowid, _aRegIdx, int32(0x4)|func() int32 {
		if _eOnePass == int32(2) {
			return int32(0x2)
		}
		return int32(0)
	}(), int32(0), int32(0))
	if _hasFK == 0 {
		goto _112
	}

	_1607sqlite3FkActions(tls, _pParse, _pTab, _pChanges, _regOldRowid, _aXRef, int32(_chngKey))
_112:
_104:
	if (*(*uint32)(unsafe.Pointer(_db + 48)))&uint32(0x80) == 0 || (*(*uintptr)(unsafe.Pointer(_pParse + 168))) != 0 {
		goto _113
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(80), _regRowCount, int32(1))
_113:
	_1602sqlite3CodeRowTrigger(tls, _pParse, _pTrigger, int32(110), _pChanges, int32(2), _pTab, _regOldRowid, _onError, _labelContinue)
	if _eOnePass != int32(1) {
		goto _114
	}

	goto _115

_114:
	if _eOnePass != int32(2) {
		goto _116
	}

	_1569sqlite3VdbeResolveLabel(tls, _v, _labelContinue)
	_1553sqlite3WhereEnd(tls, _pWInfo)
	goto _117

_116:
	if _pPk == 0 {
		goto _118
	}

	_1569sqlite3VdbeResolveLabel(tls, _v, _labelContinue)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(7), _iEph, _addrTop)
	goto _119

_118:
	_1479sqlite3VdbeGoto(tls, _v, _labelContinue)
_119:
_117:
_115:
	_1569sqlite3VdbeResolveLabel(tls, _v, _labelBreak)
	if int32(*(*uint8)(unsafe.Pointer(_pParse + 30))) != int32(0) || (*(*uintptr)(unsafe.Pointer(_pParse + 168))) != 0 {
		goto _120
	}

	_1597sqlite3AutoincrementEnd(tls, _pParse)
_120:
	if (*(*uint32)(unsafe.Pointer(_db + 48)))&uint32(0x80) == 0 || (*(*uintptr)(unsafe.Pointer(_pParse + 168))) != 0 || (*(*uint8)(unsafe.Pointer(_pParse + 30))) != 0 {
		goto _121
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(78), _regRowCount, int32(1))
	_621sqlite3VdbeSetNumCols(tls, _v, int32(1))
	_622sqlite3VdbeSetColName(tls, _v, int32(0), int32(0), ts+26402 /* "rows updated" */, null)
_121:
	goto _update_cleanup
_update_cleanup:
	_1598sqlite3AuthContextPop(tls, _sContext)
	_181sqlite3DbFree(tls, _db, _aXRef)
	_1339sqlite3SrcListDelete(tls, _db, _pTabList)
	_551sqlite3ExprListDelete(tls, _db, _pChanges)
	_777sqlite3ExprDelete(tls, _db, _pWhere)
	return
}

// _1347sqlite3ExprListAppendVector is defined at sqlite3.c:93352:25
func _1347sqlite3ExprListAppendVector(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pList uintptr /* *TExprList = SExprList */, _pColumns uintptr /* *TIdList = SIdList */, _pExpr uintptr /* *TExpr = SExpr */) (r uintptr /* *TExprList = SExprList */) {
	var (
		_db       uintptr // *Tsqlite3 = Ssqlite3
		_n        int32
		_i        int32
		_iFirst   int32
		_pSubExpr uintptr // *TExpr = SExpr
		_pFirst   uintptr // *TExpr = SExpr
	)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_iFirst = func() int32 {
		if _pList != 0 {
			return *(*int32)(unsafe.Pointer(_pList))
		}
		return int32(0)
	}()
	if _pColumns != 0 {
		goto _1
	}

	goto _vector_append_error

_1:
	if _pExpr != 0 {
		goto _2
	}

	goto _vector_append_error

_2:
	if int32(*(*uint8)(unsafe.Pointer(_pExpr))) == int32(119) || (*(*int32)(unsafe.Pointer(_pColumns + 8))) == set5(&_n, _1608sqlite3ExprVectorSize(tls, _pExpr)) {
		goto _3
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+26415 /* "%d columns assigned %d values" */, *(*int32)(unsafe.Pointer(_pColumns + 8)), _n)
	goto _vector_append_error

_3:
	_i = int32(0)
_4:
	if _i >= (*(*int32)(unsafe.Pointer(_pColumns + 8))) {
		goto _6
	}

	_pSubExpr = _1609sqlite3ExprForVectorField(tls, _pParse, _pExpr, _i)
	_pList = _1331sqlite3ExprListAppend(tls, _pParse, _pList, _pSubExpr)
	if _pList == 0 {
		goto _7
	}

	*(*uintptr)(unsafe.Pointer(((_pList + 8) + 32*uintptr((*(*int32)(unsafe.Pointer(_pList)))-int32(1))) + 8)) = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pColumns))) + 16*uintptr(_i)))
	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pColumns))) + 16*uintptr(_i))) = null
_7:
	_i++
	goto _4

_6:
	if (*(*uint8)(unsafe.Pointer(_db + 97))) != 0 || int32(*(*uint8)(unsafe.Pointer(_pExpr))) != int32(119) || _pList == 0 {
		goto _8
	}

	_pFirst = *(*uintptr)(unsafe.Pointer((_pList + 8) + 32*uintptr(_iFirst)))

	*(*uintptr)(unsafe.Pointer(_pFirst + 24)) = _pExpr
	_pExpr = null
	*(*int32)(unsafe.Pointer(_pFirst + 44)) = *(*int32)(unsafe.Pointer(_pColumns + 8))
_8:
	goto _vector_append_error
_vector_append_error:
	_777sqlite3ExprDelete(tls, _db, _pExpr)
	_778sqlite3IdListDelete(tls, _db, _pColumns)
	return _pList
}

// _1348sqlite3Insert is defined at sqlite3.c:110335:21
func _1348sqlite3Insert(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pTabList uintptr /* *TSrcList = SSrcList */, _pSelect uintptr /* *TSelect = SSelect */, _pColumn uintptr /* *TIdList = SIdList */, _onError int32) {
	esc := crt.MustMalloc(148)
	var (
		_db             uintptr // *Tsqlite3 = Ssqlite3
		_pTab           uintptr // *TTable = STable
		_i              int32
		_j              int32
		_v              uintptr // *TVdbe = SVdbe
		_pIdx           uintptr // *TIndex = SIndex
		_nColumn        int32
		_nHidden        int32
		_iDataCur       = esc      // *int32
		_iIdxCur        = esc + 16 // *int32
		_ipkColumn      int32
		_endOfLoop      int32
		_srcTab         int32
		_addrInsTop     int32
		_addrCont       int32
		_dest           = esc + 32 // *TSelectDest = SSelectDest
		_iDb            int32
		_useTempTable   uint8
		_appendFlag     uint8
		_withoutRowid   uint8
		_bIdListInOrder uint8
		_pList          uintptr // *TExprList = SExprList
		_regFromSelect  int32
		_regAutoinc     int32
		_regRowCount    int32
		_regIns         int32
		_regRowid       int32
		_regData        int32
		_aRegIdx        uintptr // *int32
		_isView         int32
		_pTrigger       uintptr    // *TTrigger = STrigger
		_tmask          = esc + 64 // *int32
		_regYield       int32
		_addrTop        int32
		_rc             int32
		_regRec         int32
		_regTempRowid   int32
		_addrL          int32
		_sNC            = esc + 80 // *TNameContext = SNameContext
		_nIdx           int32
		_regCols        int32
		_addr1          int32
		_pOp            uintptr // *TVdbeOp = SVdbeOp
		_1addr1         int32
		_iRegStore      int32
		_pVTab          uintptr     // *int8
		_isReplace      = esc + 144 // *int32
		_bUseSeek       int32
	)
	defer crt.Free(esc)
	_nHidden = int32(0)
	*(*int32)(unsafe.Pointer(_iDataCur)) = int32(0)
	*(*int32)(unsafe.Pointer(_iIdxCur)) = int32(0)
	_ipkColumn = int32(-1)
	_srcTab = int32(0)
	_addrInsTop = int32(0)
	_addrCont = int32(0)
	_useTempTable = uint8(0)
	_appendFlag = uint8(0)
	_pList = 0
	_regFromSelect = int32(0)
	_regAutoinc = int32(0)
	_regRowCount = int32(0)
	_aRegIdx = 0
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	if (*(*int32)(unsafe.Pointer(_pParse + 48))) == 0 && (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _1
	}

	goto _insert_cleanup

_1:
	*(*int32)(unsafe.Pointer(_dest + 4)) = int32(0)
	if _pSelect == 0 || ((*(*uint32)(unsafe.Pointer(_pSelect + 12)))&uint32(0x200)) == uint32(0) || (*(*uintptr)(unsafe.Pointer(_pSelect + 72))) != 0 {
		goto _2
	}

	_pList = *(*uintptr)(unsafe.Pointer(_pSelect))
	*(*uintptr)(unsafe.Pointer(_pSelect)) = null
	_1094sqlite3SelectDelete(tls, _db, _pSelect)
	_pSelect = null
_2:
	_pTab = _1512sqlite3SrcListLookup(tls, _pParse, _pTabList)
	if _pTab != 0 {
		goto _3
	}

	goto _insert_cleanup

_3:
	_iDb = _1069sqlite3SchemaToIndex(tls, _db, *(*uintptr)(unsafe.Pointer(_pTab + 112)))

	if _1480sqlite3AuthCheck(tls, _pParse, int32(18), *(*uintptr)(unsafe.Pointer(_pTab)), null, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)))) == 0 {
		goto _4
	}

	goto _insert_cleanup

_4:
	_withoutRowid = uint8(bool2int(((*(*uint32)(unsafe.Pointer(_pTab + 64))) & uint32(0x20)) != uint32(0)))
	_pTrigger = _1582sqlite3TriggersExist(tls, _pParse, _pTab, int32(108), null, _tmask)
	_isView = bool2int((*(*uintptr)(unsafe.Pointer(_pTab + 24))) != 0)

	if _1524sqlite3ViewGetColumnNames(tls, _pParse, _pTab) == 0 {
		goto _5
	}

	goto _insert_cleanup

_5:
	if _1584sqlite3IsReadOnly(tls, _pParse, _pTab, *(*int32)(unsafe.Pointer(_tmask))) == 0 {
		goto _6
	}

	goto _insert_cleanup

_6:
	_v = _1472sqlite3GetVdbe(tls, _pParse)
	if _v != 0 {
		goto _7
	}

	goto _insert_cleanup

_7:
	if int32(*(*uint8)(unsafe.Pointer(_pParse + 30))) != int32(0) {
		goto _8
	}

	_1586sqlite3VdbeCountChanges(tls, _v)
_8:
	_1488sqlite3BeginWriteOperation(tls, _pParse, bool2int((_pSelect != 0) || (_pTrigger != 0)), _iDb)
	if _pColumn != 0 || _1610xferOptimization(tls, _pParse, _pTab, _pSelect, _onError, _iDb) == 0 {
		goto _9
	}

	goto _insert_end

_9:
	_regAutoinc = _1611autoIncBegin(tls, _pParse, _iDb, _pTab)
	_regRowid = set5(&_regIns, (*(*int32)(unsafe.Pointer(_pParse + 56)))+int32(1))
	{
		p := &(*(*int32)(unsafe.Pointer(_pParse + 56)))
		*p = int32(int32(*p) + (int32(*(*int16)(unsafe.Pointer(_pTab + 70))) + int32(1)))
	}
	if *(*int32)(unsafe.Pointer(_pTab + 84)) == 0 {
		goto _10
	}

	_regRowid++
	(*(*int32)(unsafe.Pointer(_pParse + 56)))++
_10:
	_regData = _regRowid + int32(1)
	_bIdListInOrder = uint8(bool2int(((*(*uint32)(unsafe.Pointer(_pTab + 64))) & uint32(0x80)) == uint32(0)))
	if _pColumn == 0 {
		goto _11
	}

	_i = int32(0)
_12:
	if _i >= (*(*int32)(unsafe.Pointer(_pColumn + 8))) {
		goto _14
	}

	*(*int32)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pColumn))) + 16*uintptr(_i)) + 8)) = int32(-1)
	_i++
	goto _12

_14:
	_i = int32(0)
_15:
	if _i >= (*(*int32)(unsafe.Pointer(_pColumn + 8))) {
		goto _17
	}

	_j = int32(0)
_18:
	if _j >= int32(*(*int16)(unsafe.Pointer(_pTab + 70))) {
		goto _20
	}

	if _110sqlite3StrICmp(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pColumn))) + 16*uintptr(_i))), *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTab + 8))) + 32*uintptr(_j)))) != int32(0) {
		goto _21
	}

	*(*int32)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pColumn))) + 16*uintptr(_i)) + 8)) = _j
	if _i == _j {
		goto _22
	}

	_bIdListInOrder = uint8(0)
_22:
	if _j != int32(*(*int16)(unsafe.Pointer(_pTab + 68))) {
		goto _23
	}

	_ipkColumn = _i

_23:
	goto _20

_21:
	_j++
	goto _18

_20:
	if _j < int32(*(*int16)(unsafe.Pointer(_pTab + 70))) {
		goto _24
	}

	if _222sqlite3IsRowid(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pColumn))) + 16*uintptr(_i)))) == 0 || _withoutRowid != 0 {
		goto _25
	}

	_ipkColumn = _i
	_bIdListInOrder = uint8(0)
	goto _26

_25:
	_550sqlite3ErrorMsg(tls, _pParse, ts+26445 /* "table %S has no column named %s" */, _pTabList, int32(0), *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pColumn))) + 16*uintptr(_i))))
	*(*uint8)(unsafe.Pointer(_pParse + 29)) = uint8(1)
	goto _insert_cleanup

_26:
_24:
	_i++
	goto _15

_17:
_11:
	if _pSelect == 0 {
		goto _27
	}

	_regYield = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))
	_addrTop = _1496sqlite3VdbeCurrentAddr(tls, _v) + int32(1)
	_1241sqlite3VdbeAddOp3(tls, _v, int32(15), _regYield, int32(0), _addrTop)
	_1497sqlite3SelectDestInit(tls, _dest, int32(13), _regYield)
	*(*int32)(unsafe.Pointer(_dest + 8)) = func() int32 {
		if _bIdListInOrder != 0 {
			return _regData
		}
		return int32(0)
	}()
	*(*int32)(unsafe.Pointer(_dest + 12)) = int32(*(*int16)(unsafe.Pointer(_pTab + 70)))
	_rc = _1327sqlite3Select(tls, _pParse, _pSelect, _dest)
	_regFromSelect = *(*int32)(unsafe.Pointer(_dest + 8))
	if _rc == 0 && (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 && (*(*int32)(unsafe.Pointer(_pParse + 48))) == 0 {
		goto _29
	}

	goto _insert_cleanup

_29:
	_1498sqlite3VdbeEndCoroutine(tls, _v, _regYield)
	_1474sqlite3VdbeJumpHere(tls, _v, _addrTop-int32(1))

	_nColumn = *(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pSelect))))
	if _pTrigger == 0 && _1612readsTable(tls, _pParse, _iDb, _pTab) == 0 {
		goto _30
	}

	_useTempTable = uint8(1)
_30:
	if _useTempTable == 0 {
		goto _31
	}

	_srcTab = postinc7(&(*(*int32)(unsafe.Pointer(_pParse + 52))))
	_regRec = _1562sqlite3GetTempReg(tls, _pParse)
	_regTempRowid = _1562sqlite3GetTempReg(tls, _pParse)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(108), _srcTab, _nColumn)
	_addrL = _1489sqlite3VdbeAddOp1(tls, _v, int32(16), *(*int32)(unsafe.Pointer(_dest + 4)))
	_1241sqlite3VdbeAddOp3(tls, _v, int32(99), _regFromSelect, _nColumn, _regRec)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(115), _srcTab, _regTempRowid)
	_1241sqlite3VdbeAddOp3(tls, _v, int32(116), _srcTab, _regRec, _regTempRowid)
	_1479sqlite3VdbeGoto(tls, _v, _addrL)
	_1474sqlite3VdbeJumpHere(tls, _v, _addrL)
	_1563sqlite3ReleaseTempReg(tls, _pParse, _regRec)
	_1563sqlite3ReleaseTempReg(tls, _pParse, _regTempRowid)
_31:
	goto _28

_27:
	crt.Xmemset(tls, _sNC, int32(0), uint64(56))
	*(*uintptr)(unsafe.Pointer(_sNC)) = _pParse
	_srcTab = int32(-1)

	if _pList == 0 {
		goto _32
	}

	_nColumn = *(*int32)(unsafe.Pointer(_pList))
	if _1613sqlite3ResolveExprListNames(tls, _sNC, _pList) == 0 {
		goto _34
	}

	goto _insert_cleanup

_34:
	goto _33

_32:
	_nColumn = int32(0)
_33:
_28:
	if _pColumn != 0 || _nColumn <= int32(0) {
		goto _35
	}

	_ipkColumn = int32(*(*int16)(unsafe.Pointer(_pTab + 68)))
_35:
	_i = int32(0)
_36:
	if _i >= int32(*(*int16)(unsafe.Pointer(_pTab + 70))) {
		goto _38
	}

	_nHidden = int32(_nHidden + func() int32 {
		if (int32(*(*uint8)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pTab + 8))) + 32*uintptr(_i)) + 27))) & int32(0x2)) != int32(0) {
			return int32(1)
		}
		return int32(0)
	}())
	_i++
	goto _36

_38:
	if _pColumn != 0 || _nColumn == 0 || _nColumn == (int32(*(*int16)(unsafe.Pointer(_pTab + 70)))-_nHidden) {
		goto _39
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+26477 /* "table %S has %d columns but %d v..." */, _pTabList, int32(0), int32(*(*int16)(unsafe.Pointer(_pTab + 70)))-_nHidden, _nColumn)
	goto _insert_cleanup

_39:
	if _pColumn == 0 || _nColumn == (*(*int32)(unsafe.Pointer(_pColumn + 8))) {
		goto _40
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+26529 /* "%d values for %d columns" */, _nColumn, *(*int32)(unsafe.Pointer(_pColumn + 8)))
	goto _insert_cleanup

_40:
	if ((*(*uint32)(unsafe.Pointer(_db + 48))) & uint32(0x80)) == 0 {
		goto _41
	}

	_regRowCount = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))
	_1240sqlite3VdbeAddOp2(tls, _v, int32(67), int32(0), _regRowCount)
_41:
	if _isView != 0 {
		goto _42
	}

	_nIdx = _1594sqlite3OpenTableAndIndices(tls, _pParse, _pTab, int32(105), uint8(0), int32(-1), null, _iDataCur, _iIdxCur)
	_aRegIdx = _373sqlite3DbMallocRawNN(tls, _db, uint64(uint64(4)*uint64(_nIdx+int32(1))))
	if _aRegIdx != 0 {
		goto _43
	}

	goto _insert_cleanup

_43:
	_i = int32(0)
	_pIdx = *(*uintptr)(unsafe.Pointer(_pTab + 16))
_44:
	if _i >= _nIdx {
		goto _46
	}

	*(*int32)(unsafe.Pointer(_aRegIdx + 4*uintptr(_i))) = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))
	{
		p := &(*(*int32)(unsafe.Pointer(_pParse + 56)))
		*p = int32(int32(*p) + int32(*(*uint16)(unsafe.Pointer(_pIdx + 96))))
	}
	_pIdx = *(*uintptr)(unsafe.Pointer(_pIdx + 40))
	_i++
	goto _44

_46:
_42:
	if _useTempTable == 0 {
		goto _47
	}

	_addrInsTop = _1489sqlite3VdbeAddOp1(tls, _v, int32(37), _srcTab)
	_addrCont = _1496sqlite3VdbeCurrentAddr(tls, _v)
	goto _48

_47:
	if _pSelect == 0 {
		goto _49
	}

	_addrInsTop = set5(&_addrCont, _1489sqlite3VdbeAddOp1(tls, _v, int32(16), *(*int32)(unsafe.Pointer(_dest + 4))))
_49:
_48:
	_endOfLoop = _1541sqlite3VdbeMakeLabel(tls, _v)
	if ((*(*int32)(unsafe.Pointer(_tmask))) & int32(1)) == 0 {
		goto _50
	}

	_regCols = _1558sqlite3GetTempRange(tls, _pParse, int32(*(*int16)(unsafe.Pointer(_pTab + 70)))+int32(1))
	if _ipkColumn >= int32(0) {
		goto _51
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(67), int32(-1), _regCols)
	goto _52

_51:
	if _useTempTable == 0 {
		goto _53
	}

	_1241sqlite3VdbeAddOp3(tls, _v, int32(96), _srcTab, _ipkColumn, _regCols)
	goto _54

_53:
	_1478sqlite3ExprCode(tls, _pParse, *(*uintptr)(unsafe.Pointer((_pList + 8) + 32*uintptr(_ipkColumn))), _regCols)
_54:
	_addr1 = _1489sqlite3VdbeAddOp1(tls, _v, int32(51), _regCols)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(67), int32(-1), _regCols)
	_1474sqlite3VdbeJumpHere(tls, _v, _addr1)
	_1489sqlite3VdbeAddOp1(tls, _v, int32(17), _regCols)
_52:
	_i = set5(&_j, int32(0))
_55:
	if _i >= int32(*(*int16)(unsafe.Pointer(_pTab + 70))) {
		goto _57
	}

	if _pColumn == 0 {
		goto _58
	}

	_j = int32(0)
_59:
	if _j >= (*(*int32)(unsafe.Pointer(_pColumn + 8))) {
		goto _61
	}

	if (*(*int32)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pColumn))) + 16*uintptr(_j)) + 8))) != _i {
		goto _62
	}

	goto _61

_62:
	_j++
	goto _59

_61:
_58:
	if (_useTempTable != 0 || _pList != 0) && (_pColumn == 0 || _j < (*(*int32)(unsafe.Pointer(_pColumn + 8)))) && 0 == 0 {
		goto _63
	}

	_1478sqlite3ExprCode(tls, _pParse, *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pTab + 8))) + 32*uintptr(_i)) + 8)), (_regCols+_i)+int32(1))
	goto _64

_63:
	if _useTempTable == 0 {
		goto _65
	}

	_1241sqlite3VdbeAddOp3(tls, _v, int32(96), _srcTab, _j, (_regCols+_i)+int32(1))
	goto _66

_65:
	_1614sqlite3ExprCodeAndCache(tls, _pParse, *(*uintptr)(unsafe.Pointer((_pList + 8) + 32*uintptr(_j))), (_regCols+_i)+int32(1))
_66:
_64:
	if _pColumn != 0 || 1 == 0 {
		goto _67
	}

	_j++
_67:
	_i++
	goto _55

_57:
	if _isView != 0 {
		goto _68
	}

	_1500sqlite3TableAffinity(tls, _v, _pTab, _regCols+int32(1))
_68:
	_1602sqlite3CodeRowTrigger(tls, _pParse, _pTrigger, int32(108), null, int32(1), _pTab, (_regCols-int32(*(*int16)(unsafe.Pointer(_pTab + 70))))-int32(1), _onError, _endOfLoop)
	_1564sqlite3ReleaseTempRange(tls, _pParse, _regCols, int32(*(*int16)(unsafe.Pointer(_pTab + 70)))+int32(1))
_50:
	if _isView != 0 {
		goto _69
	}

	if *(*int32)(unsafe.Pointer(_pTab + 84)) == 0 {
		goto _70
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(70), int32(0), _regIns)
_70:
	if _ipkColumn < int32(0) {
		goto _71
	}

	if _useTempTable == 0 {
		goto _73
	}

	_1241sqlite3VdbeAddOp3(tls, _v, int32(96), _srcTab, _ipkColumn, _regRowid)
	goto _74

_73:
	if _pSelect == 0 {
		goto _75
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(75), _regFromSelect+_ipkColumn, _regRowid)
	goto _76

_75:
	_1478sqlite3ExprCode(tls, _pParse, *(*uintptr)(unsafe.Pointer((_pList + 8) + 32*uintptr(_ipkColumn))), _regRowid)
	_pOp = _1615sqlite3VdbeGetOp(tls, _v, int32(-1))
	if _pOp == 0 || int32(*(*uint8)(unsafe.Pointer(_pOp))) != int32(70) || *(*int32)(unsafe.Pointer(_pTab + 84)) != 0 {
		goto _77
	}

	_appendFlag = uint8(1)
	*(*uint8)(unsafe.Pointer(_pOp)) = uint8(115)
	*(*int32)(unsafe.Pointer(_pOp + 4)) = *(*int32)(unsafe.Pointer(_iDataCur))
	*(*int32)(unsafe.Pointer(_pOp + 8)) = _regRowid
	*(*int32)(unsafe.Pointer(_pOp + 12)) = _regAutoinc
_77:
_76:
_74:
	if _appendFlag != 0 {
		goto _78
	}

	if *(*int32)(unsafe.Pointer(_pTab + 84)) != 0 {
		goto _79
	}

	_1addr1 = _1489sqlite3VdbeAddOp1(tls, _v, int32(51), _regRowid)
	_1241sqlite3VdbeAddOp3(tls, _v, int32(115), *(*int32)(unsafe.Pointer(_iDataCur)), _regRowid, _regAutoinc)
	_1474sqlite3VdbeJumpHere(tls, _v, _1addr1)
	goto _80

_79:
	_1addr1 = _1496sqlite3VdbeCurrentAddr(tls, _v)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(50), _regRowid, _1addr1+int32(2))
_80:
	_1489sqlite3VdbeAddOp1(tls, _v, int32(17), _regRowid)
_78:
	goto _72

_71:
	if *(*int32)(unsafe.Pointer(_pTab + 84)) == 0 && _withoutRowid == 0 {
		goto _81
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(70), int32(0), _regRowid)
	goto _82

_81:
	_1241sqlite3VdbeAddOp3(tls, _v, int32(115), *(*int32)(unsafe.Pointer(_iDataCur)), _regRowid, _regAutoinc)
	_appendFlag = uint8(1)
_82:
_72:
	_1616autoIncStep(tls, _pParse, _regAutoinc, _regRowid)
	_nHidden = int32(0)
	_i = int32(0)
_83:
	if _i >= int32(*(*int16)(unsafe.Pointer(_pTab + 70))) {
		goto _85
	}

	_iRegStore = (_regRowid + int32(1)) + _i
	if _i != int32(*(*int16)(unsafe.Pointer(_pTab + 68))) {
		goto _86
	}

	_1489sqlite3VdbeAddOp1(tls, _v, int32(71), _iRegStore)
	goto _84

_86:
	if _pColumn != 0 {
		goto _87
	}

	if (int32(*(*uint8)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pTab + 8))) + 32*uintptr(_i)) + 27))) & int32(0x2)) == int32(0) {
		goto _89
	}

	_j = int32(-1)
	_nHidden++
	goto _90

_89:
	_j = _i - _nHidden
_90:
	goto _88

_87:
	_j = int32(0)
_91:
	if _j >= (*(*int32)(unsafe.Pointer(_pColumn + 8))) {
		goto _93
	}

	if (*(*int32)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pColumn))) + 16*uintptr(_j)) + 8))) != _i {
		goto _94
	}

	goto _93

_94:
	_j++
	goto _91

_93:
_88:
	if _j >= int32(0) && _nColumn != int32(0) && (_pColumn == 0 || _j < (*(*int32)(unsafe.Pointer(_pColumn + 8)))) {
		goto _95
	}

	_1617sqlite3ExprCodeFactorable(tls, _pParse, *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pTab + 8))) + 32*uintptr(_i)) + 8)), _iRegStore)
	goto _96

_95:
	if _useTempTable == 0 {
		goto _97
	}

	_1241sqlite3VdbeAddOp3(tls, _v, int32(96), _srcTab, _j, _iRegStore)
	goto _98

_97:
	if _pSelect == 0 {
		goto _99
	}

	if _regFromSelect == _regData {
		goto _101
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(76), _regFromSelect+_j, _iRegStore)
_101:
	goto _100

_99:
	_1478sqlite3ExprCode(tls, _pParse, *(*uintptr)(unsafe.Pointer((_pList + 8) + 32*uintptr(_j))), _iRegStore)
_100:
_98:
_96:
_84:
	_i++
	goto _83

_85:
	if *(*int32)(unsafe.Pointer(_pTab + 84)) == 0 {
		goto _102
	}

	_pVTab = _1037sqlite3GetVTable(tls, _db, _pTab)
	_1595sqlite3VtabMakeWritable(tls, _pParse, _pTab)
	_1475sqlite3VdbeAddOp4(tls, _v, int32(12), int32(1), int32(*(*int16)(unsafe.Pointer(_pTab + 70)))+int32(2), _regIns, _pVTab, int32(-12))
	_1072sqlite3VdbeChangeP5(tls, _v, uint16(func() int32 {
		if _onError == int32(10) {
			return int32(2)
		}
		return _onError
	}()))
	_1495sqlite3MayAbort(tls, _pParse)
	goto _103

_102:
	_1603sqlite3GenerateConstraintChecks(tls, _pParse, _pTab, _aRegIdx, *(*int32)(unsafe.Pointer(_iDataCur)), *(*int32)(unsafe.Pointer(_iIdxCur)), _regIns, int32(0), uint8(bool2int(_ipkColumn >= int32(0))), uint8(_onError), _endOfLoop, _isReplace, null)
	_1604sqlite3FkCheck(tls, _pParse, _pTab, int32(0), _regIns, null, int32(0))
	_bUseSeek = bool2int(((*(*int32)(unsafe.Pointer(_isReplace))) == int32(0)) || ((_pTrigger == 0) && ((((*(*uint32)(unsafe.Pointer(_db + 48))) & uint32(0x4000)) == uint32(0)) || (_1618sqlite3FkReferences(tls, _pTab) == 0))))
	_1606sqlite3CompleteInsertion(tls, _pParse, _pTab, *(*int32)(unsafe.Pointer(_iDataCur)), *(*int32)(unsafe.Pointer(_iIdxCur)), _regIns, _aRegIdx, int32(0), int32(_appendFlag), _bUseSeek)
_103:
_69:
	if ((*(*uint32)(unsafe.Pointer(_db + 48))) & uint32(0x80)) == uint32(0) {
		goto _104
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(80), _regRowCount, int32(1))
_104:
	if _pTrigger == 0 {
		goto _105
	}

	_1602sqlite3CodeRowTrigger(tls, _pParse, _pTrigger, int32(108), null, int32(2), _pTab, (_regData-int32(2))-int32(*(*int16)(unsafe.Pointer(_pTab + 70))), _onError, _endOfLoop)
_105:
	_1569sqlite3VdbeResolveLabel(tls, _v, _endOfLoop)
	if _useTempTable == 0 {
		goto _106
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(7), _srcTab, _addrCont)
	_1474sqlite3VdbeJumpHere(tls, _v, _addrInsTop)
	_1489sqlite3VdbeAddOp1(tls, _v, int32(112), _srcTab)
	goto _107

_106:
	if _pSelect == 0 {
		goto _108
	}

	_1479sqlite3VdbeGoto(tls, _v, _addrCont)
	_1474sqlite3VdbeJumpHere(tls, _v, _addrInsTop)
_108:
_107:
	goto _insert_end
_insert_end:
	if int32(*(*uint8)(unsafe.Pointer(_pParse + 30))) != int32(0) || (*(*uintptr)(unsafe.Pointer(_pParse + 168))) != 0 {
		goto _109
	}

	_1597sqlite3AutoincrementEnd(tls, _pParse)
_109:
	if (*(*uint32)(unsafe.Pointer(_db + 48)))&uint32(0x80) == 0 || (*(*uint8)(unsafe.Pointer(_pParse + 30))) != 0 || (*(*uintptr)(unsafe.Pointer(_pParse + 168))) != 0 {
		goto _110
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(78), _regRowCount, int32(1))
	_621sqlite3VdbeSetNumCols(tls, _v, int32(1))
	_622sqlite3VdbeSetColName(tls, _v, int32(0), int32(0), ts+26554 /* "rows inserted" */, null)
_110:
	goto _insert_cleanup
_insert_cleanup:
	_1339sqlite3SrcListDelete(tls, _db, _pTabList)
	_551sqlite3ExprListDelete(tls, _db, _pList)
	_1094sqlite3SelectDelete(tls, _db, _pSelect)
	_778sqlite3IdListDelete(tls, _db, _pColumn)
	_181sqlite3DbFree(tls, _db, _aRegIdx)
}

// _1349sqlite3IdListAppend is defined at sqlite3.c:104294:23
func _1349sqlite3IdListAppend(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pList uintptr /* *TIdList = SIdList */, _pToken uintptr /* *TToken = SToken */) (r uintptr /* *TIdList = SIdList */) {
	esc := crt.MustMalloc(4)
	var _i = esc // *int32
	defer crt.Free(esc)
	if _pList != 0 {
		goto _1
	}

	_pList = _295sqlite3DbMallocZero(tls, _db, uint64(16))
	if _pList != 0 {
		goto _2
	}

	return null

_2:
_1:
	*(*uintptr)(unsafe.Pointer(_pList)) = _1619sqlite3ArrayAllocate(tls, _db, *(*uintptr)(unsafe.Pointer(_pList)), int32(16), _pList+8, _i)
	if (*(*int32)(unsafe.Pointer(_i))) >= int32(0) {
		goto _3
	}

	_778sqlite3IdListDelete(tls, _db, _pList)
	return null

_3:
	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pList))) + 16*uintptr(*(*int32)(unsafe.Pointer(_i))))) = _1482sqlite3NameFromToken(tls, _db, _pToken)
	return _pList
}

// _1350spanSet is defined at sqlite3.c:137028:15
func _1350spanSet(tls crt.TLS, _pOut uintptr /* *TExprSpan = SExprSpan */, _pStart uintptr /* *TToken = SToken */, _pEnd uintptr /* *TToken = SToken */) {
	*(*uintptr)(unsafe.Pointer(_pOut + 8)) = *(*uintptr)(unsafe.Pointer(_pStart))
	*(*uintptr)(unsafe.Pointer(_pOut + 16)) = (*(*uintptr)(unsafe.Pointer(_pEnd))) + uintptr(*(*uint32)(unsafe.Pointer(_pEnd + 8)))
}

// _1351sqlite3ExprAssignVarNumber is defined at sqlite3.c:92777:21
func _1351sqlite3ExprAssignVarNumber(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pExpr uintptr /* *TExpr = SExpr */, _n uint32) {
	esc := crt.MustMalloc(8)
	var (
		_db    uintptr // *Tsqlite3 = Ssqlite3
		_z     uintptr // *int8
		_x     int16
		_doAdd int32
		_i     = esc // *Ti64 = Tsqlite_int64 = int64
		_bOk   int32
	)
	defer crt.Free(esc)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	if _pExpr != 0 {
		goto _1
	}

	return

_1:
	_z = *(*uintptr)(unsafe.Pointer(_pExpr + 8))

	if int32(*(*int8)(unsafe.Pointer(_z + 1))) != int32(0) {
		goto _2
	}

	_x = preinc208(&(*(*int16)(unsafe.Pointer(_pParse + 464))))
	goto _3

_2:
	_doAdd = int32(0)
	if int32(*(*int8)(unsafe.Pointer(_z))) != int32('?') {
		goto _4
	}

	if _n != uint32(2) {
		goto _6
	}

	*(*int64)(unsafe.Pointer(_i)) = int64(int32(*(*int8)(unsafe.Pointer(_z + 1))) - int32('0'))
	_bOk = int32(1)
	goto _7

_6:
	_bOk = bool2int(int32(0) == _947sqlite3Atoi64(tls, _z+1, _i, int32(_n-uint32(1)), uint8(1)))
_7:
	if _bOk != int32(0) && (*(*int64)(unsafe.Pointer(_i))) >= int64(1) && (*(*int64)(unsafe.Pointer(_i))) <= int64(*(*int32)(unsafe.Pointer((_db + 124) + 36))) {
		goto _8
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+26568 /* "variable number must be between ..." */, *(*int32)(unsafe.Pointer((_db + 124) + 36)))
	return

_8:
	_x = int16(*(*int64)(unsafe.Pointer(_i)))
	if int32(_x) <= int32(*(*int16)(unsafe.Pointer(_pParse + 464))) {
		goto _9
	}

	*(*int16)(unsafe.Pointer(_pParse + 464)) = int16(int32(_x))
	_doAdd = int32(1)
	goto _10

_9:
	if _1058sqlite3VListNumToName(tls, *(*uintptr)(unsafe.Pointer(_pParse + 488)), int32(_x)) != 0 {
		goto _11
	}

	_doAdd = int32(1)
_11:
_10:
	goto _5

_4:
	_x = int16(_1234sqlite3VListNameToNum(tls, *(*uintptr)(unsafe.Pointer(_pParse + 488)), _z, int32(_n)))
	if int32(_x) != int32(0) {
		goto _12
	}

	_x = preinc208(&(*(*int16)(unsafe.Pointer(_pParse + 464))))
	_doAdd = int32(1)
_12:
_5:
	if _doAdd == 0 {
		goto _13
	}

	*(*uintptr)(unsafe.Pointer(_pParse + 488)) = _1620sqlite3VListAdd(tls, _db, *(*uintptr)(unsafe.Pointer(_pParse + 488)), _z, int32(_n), int32(_x))
_13:
_3:
	*(*int16)(unsafe.Pointer(_pExpr + 48)) = _x
	if int32(_x) <= (*(*int32)(unsafe.Pointer((_db + 124) + 36))) {
		goto _14
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+26611 /* "too many SQL variables" */)
_14:
}

// _1352sqlite3ExprAddCollateToken is defined at sqlite3.c:91882:21
func _1352sqlite3ExprAddCollateToken(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pExpr uintptr /* *TExpr = SExpr */, _pCollName uintptr /* *TToken = SToken */, _dequote int32) (r uintptr /* *TExpr = SExpr */) {
	var _pNew uintptr // *TExpr = SExpr

	if (*(*uint32)(unsafe.Pointer(_pCollName + 8))) <= uint32(0) {
		goto _1
	}

	_pNew = _1335sqlite3ExprAlloc(tls, *(*uintptr)(unsafe.Pointer(_pParse)), int32(94), _pCollName, _dequote)
	if _pNew == 0 {
		goto _2
	}

	*(*uintptr)(unsafe.Pointer(_pNew + 16)) = _pExpr
	{
		p := &(*(*uint32)(unsafe.Pointer(_pNew + 4)))
		*p = uint32(uint32(*p) | uint32(4352))
	}
	_pExpr = _pNew
_2:
_1:
	return _pExpr
}

// _1353sqlite3ExprAttachSubtrees is defined at sqlite3.c:92620:21
func _1353sqlite3ExprAttachSubtrees(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pRoot uintptr /* *TExpr = SExpr */, _pLeft uintptr /* *TExpr = SExpr */, _pRight uintptr /* *TExpr = SExpr */) {
	if _pRoot != 0 {
		goto _1
	}

	_777sqlite3ExprDelete(tls, _db, _pLeft)
	_777sqlite3ExprDelete(tls, _db, _pRight)
	goto _2

_1:
	if _pRight == 0 {
		goto _3
	}

	*(*uintptr)(unsafe.Pointer(_pRoot + 24)) = _pRight
	{
		p := &(*(*uint32)(unsafe.Pointer(_pRoot + 4)))
		*p = uint32(uint32(*p) | (uint32(2097408) & (*(*uint32)(unsafe.Pointer(_pRight + 4)))))
	}
_3:
	if _pLeft == 0 {
		goto _4
	}

	*(*uintptr)(unsafe.Pointer(_pRoot + 16)) = _pLeft
	{
		p := &(*(*uint32)(unsafe.Pointer(_pRoot + 4)))
		*p = uint32(uint32(*p) | (uint32(2097408) & (*(*uint32)(unsafe.Pointer(_pLeft + 4)))))
	}
_4:
	_1621exprSetHeight(tls, _pRoot)
_2:
}

// _1354sqlite3ExprFunction is defined at sqlite3.c:92746:21
func _1354sqlite3ExprFunction(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pList uintptr /* *TExprList = SExprList */, _pToken uintptr /* *TToken = SToken */) (r uintptr /* *TExpr = SExpr */) {
	var (
		_pNew uintptr // *TExpr = SExpr
		_db   uintptr // *Tsqlite3 = Ssqlite3
	)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))

	_pNew = _1335sqlite3ExprAlloc(tls, _db, int32(144), _pToken, int32(1))
	if _pNew != 0 {
		goto _1
	}

	_551sqlite3ExprListDelete(tls, _db, _pList)
	return null

_1:
	*(*uintptr)(unsafe.Pointer(_pNew + 32)) = _pList

	_1361sqlite3ExprSetHeightAndFlags(tls, _pParse, _pNew)
	return _pNew
}

// _1355spanBinaryExpr is defined at sqlite3.c:137063:15
func _1355spanBinaryExpr(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _op int32, _pLeft uintptr /* *TExprSpan = SExprSpan */, _pRight uintptr /* *TExprSpan = SExprSpan */) {
	*(*uintptr)(unsafe.Pointer(_pLeft)) = _1316sqlite3PExpr(tls, _pParse, _op, *(*uintptr)(unsafe.Pointer(_pLeft)), *(*uintptr)(unsafe.Pointer(_pRight)))
	*(*uintptr)(unsafe.Pointer(_pLeft + 16)) = *(*uintptr)(unsafe.Pointer(_pRight + 16))
}

// _1356exprNot is defined at sqlite3.c:137076:15
func _1356exprNot(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _doNot int32, _pSpan uintptr /* *TExprSpan = SExprSpan */) {
	if _doNot == 0 {
		goto _1
	}

	*(*uintptr)(unsafe.Pointer(_pSpan)) = _1316sqlite3PExpr(tls, _pParse, int32(19), *(*uintptr)(unsafe.Pointer(_pSpan)), null)
_1:
}

// _1357spanUnaryPostfix is defined at sqlite3.c:137084:15
func _1357spanUnaryPostfix(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _op int32, _pOperand uintptr /* *TExprSpan = SExprSpan */, _pPostOp uintptr /* *TToken = SToken */) {
	*(*uintptr)(unsafe.Pointer(_pOperand)) = _1316sqlite3PExpr(tls, _pParse, _op, *(*uintptr)(unsafe.Pointer(_pOperand)), null)
	*(*uintptr)(unsafe.Pointer(_pOperand + 16)) = (*(*uintptr)(unsafe.Pointer(_pPostOp))) + uintptr(*(*uint32)(unsafe.Pointer(_pPostOp + 8)))
}

// _1358binaryToUnaryIfNull is defined at sqlite3.c:137096:15
func _1358binaryToUnaryIfNull(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pY uintptr /* *TExpr = SExpr */, _pA uintptr /* *TExpr = SExpr */, _op int32) {
	var _db uintptr // *Tsqlite3 = Ssqlite3

	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	if _pA == 0 || _pY == 0 || int32(*(*uint8)(unsafe.Pointer(_pY))) != int32(101) {
		goto _1
	}

	*(*uint8)(unsafe.Pointer(_pA)) = uint8(_op)
	_777sqlite3ExprDelete(tls, _db, *(*uintptr)(unsafe.Pointer(_pA + 24)))
	*(*uintptr)(unsafe.Pointer(_pA + 24)) = null
_1:
}

// _1359spanUnaryPrefix is defined at sqlite3.c:137107:15
func _1359spanUnaryPrefix(tls crt.TLS, _pOut uintptr /* *TExprSpan = SExprSpan */, _pParse uintptr /* *TParse = SParse */, _op int32, _pOperand uintptr /* *TExprSpan = SExprSpan */, _pPreOp uintptr /* *TToken = SToken */) {
	*(*uintptr)(unsafe.Pointer(_pOut + 8)) = *(*uintptr)(unsafe.Pointer(_pPreOp))
	*(*uintptr)(unsafe.Pointer(_pOut)) = _1316sqlite3PExpr(tls, _pParse, _op, *(*uintptr)(unsafe.Pointer(_pOperand)), null)
	*(*uintptr)(unsafe.Pointer(_pOut + 16)) = *(*uintptr)(unsafe.Pointer(_pOperand + 16))
}

// _1360sqlite3IntTokens [2]SToken, escapes: true, sqlite3.c:18456:28
var _1360sqlite3IntTokens = bss + 15952 // array of 2 Token

func init() {
	*(*[2]SToken)(unsafe.Pointer(_1360sqlite3IntTokens)) = [2]SToken{
		0: {
			Xz: ts + 26634, /* "0" */
			Xn: uint32(1),
		},
		1: {
			Xz: ts + 18848, /* "1" */
			Xn: uint32(1),
		},
	}
}

// _1361sqlite3ExprSetHeightAndFlags is defined at sqlite3.c:92506:21
func _1361sqlite3ExprSetHeightAndFlags(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _p uintptr /* *TExpr = SExpr */) {
	if (*(*int32)(unsafe.Pointer(_pParse + 48))) == 0 {
		goto _1
	}

	return

_1:
	_1621exprSetHeight(tls, _p)
	_1509sqlite3ExprCheckHeight(tls, _pParse, *(*int32)(unsafe.Pointer(_p + 40)))
}

// _1362sqlite3PExprAddSelect is defined at sqlite3.c:92679:21
func _1362sqlite3PExprAddSelect(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pExpr uintptr /* *TExpr = SExpr */, _pSelect uintptr /* *TSelect = SSelect */) {
	if _pExpr == 0 {
		goto _1
	}

	*(*uintptr)(unsafe.Pointer(_pExpr + 32)) = _pSelect
	{
		p := &(*(*uint32)(unsafe.Pointer(_pExpr + 4)))
		*p = uint32(uint32(*p) | uint32(2099200))
	}
	_1361sqlite3ExprSetHeightAndFlags(tls, _pParse, _pExpr)
	goto _2

_1:
	_1094sqlite3SelectDelete(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _pSelect)
_2:
}

// _1363parserAddExprIdListTerm is defined at sqlite3.c:137124:19
func _1363parserAddExprIdListTerm(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pPrior uintptr /* *TExprList = SExprList */, _pIdToken uintptr /* *TToken = SToken */, _hasCollate int32, _sortOrder int32) (r uintptr /* *TExprList = SExprList */) {
	var _p uintptr // *TExprList = SExprList

	_p = _1331sqlite3ExprListAppend(tls, _pParse, _pPrior, null)
	if _hasCollate == 0 && _sortOrder == int32(-1) || int32(*(*uint8)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pParse))) + 176) + 5))) != int32(0) {
		goto _1
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+26636 /* "syntax error after column name \"..." */, *(*uint32)(unsafe.Pointer(_pIdToken + 8)), *(*uintptr)(unsafe.Pointer(_pIdToken)))
_1:
	_1332sqlite3ExprListSetName(tls, _pParse, _p, _pIdToken, int32(1))
	return _p
}

// _1364sqlite3DropIndex is defined at sqlite3.c:104182:21
func _1364sqlite3DropIndex(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pName uintptr /* *TSrcList = SSrcList */, _ifExists int32) {
	var (
		_pIndex uintptr // *TIndex = SIndex
		_v      uintptr // *TVdbe = SVdbe
		_db     uintptr // *Tsqlite3 = Ssqlite3
		_iDb    int32
		_code   int32
		_pTab   uintptr // *TTable = STable
		_zDb    uintptr // *int8
		_zTab   uintptr // *int8
	)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))

	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _1
	}

	goto _exit_drop_index

_1:
	if int32(0) == _1237sqlite3ReadSchema(tls, _pParse) {
		goto _2
	}

	goto _exit_drop_index

_2:
	_pIndex = _1003sqlite3FindIndex(tls, _db, *(*uintptr)(unsafe.Pointer(_pName + 8 + 16)), *(*uintptr)(unsafe.Pointer(_pName + 8 + 8)))
	if _pIndex != 0 {
		goto _3
	}

	if _ifExists != 0 {
		goto _4
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+26674 /* "no such index: %S" */, _pName, int32(0))
	goto _5

_4:
	_1523sqlite3CodeVerifyNamedSchema(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pName + 8 + 8)))
_5:
	*(*uint8)(unsafe.Pointer(_pParse + 29)) = uint8(1)
	goto _exit_drop_index

_3:
	if int32(uint32(*(*uint8)(unsafe.Pointer(_pIndex + 99)))<<30>>30) == int32(0) {
		goto _6
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+26692 /* "index associated with UNIQUE or ..." */, int32(0))
	goto _exit_drop_index

_6:
	_iDb = _1069sqlite3SchemaToIndex(tls, _db, *(*uintptr)(unsafe.Pointer(_pIndex + 48)))
	_code = int32(10)
	_pTab = *(*uintptr)(unsafe.Pointer(_pIndex + 24))
	_zDb = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)))
	_zTab = func() uintptr {
		if (1 != 0) && (_iDb == int32(1)) {
			return ts + 5250 /* "sqlite_temp_master" */
		}
		return ts + 5127 /* "sqlite_master" */
	}()
	if _1480sqlite3AuthCheck(tls, _pParse, int32(9), _zTab, null, _zDb) == 0 {
		goto _7
	}

	goto _exit_drop_index

_7:
	if 1 == 0 || _iDb == 0 {
		goto _8
	}

	_code = int32(12)
_8:
	if _1480sqlite3AuthCheck(tls, _pParse, _code, *(*uintptr)(unsafe.Pointer(_pIndex)), *(*uintptr)(unsafe.Pointer(_pTab)), _zDb) == 0 {
		goto _9
	}

	goto _exit_drop_index

_9:
	_v = _1472sqlite3GetVdbe(tls, _pParse)
	if _v == 0 {
		goto _10
	}

	_1488sqlite3BeginWriteOperation(tls, _pParse, int32(1), _iDb)
	_1502sqlite3NestedParse(tls, _pParse, ts+26765 /* "DELETE FROM %Q.%s WHERE name=%Q ..." */, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb))), ts+5127 /* "sqlite_master" */, *(*uintptr)(unsafe.Pointer(_pIndex)))
	_1525sqlite3ClearStatTables(tls, _pParse, _iDb, ts+26814 /* "idx" */, *(*uintptr)(unsafe.Pointer(_pIndex)))
	_1503sqlite3ChangeCookie(tls, _pParse, _iDb)
	_1622destroyRootPage(tls, _pParse, *(*int32)(unsafe.Pointer(_pIndex + 88)), _iDb)
	_1475sqlite3VdbeAddOp4(tls, _v, int32(140), _iDb, int32(0), int32(0), *(*uintptr)(unsafe.Pointer(_pIndex)), int32(0))
_10:
	goto _exit_drop_index
_exit_drop_index:
	_1339sqlite3SrcListDelete(tls, _db, _pName)
}

// _1365sqlite3Vacuum is defined at sqlite3.c:126037:21
func _1365sqlite3Vacuum(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, apNm uintptr) {
	esc := crt.MustMalloc(8)
	var (
		_pNm = esc   // **SToken
		_v   uintptr // *TVdbe = SVdbe
		_iDb int32
	)
	defer crt.Free(esc)
	*(*uintptr)(unsafe.Pointer(_pNm)) = apNm
	_v = _1472sqlite3GetVdbe(tls, _pParse)
	_iDb = int32(0)
	if _v != 0 {
		goto _1
	}

	return

_1:
	if (*(*uintptr)(unsafe.Pointer(_pNm))) == 0 {
		goto _2
	}

	_iDb = _1485sqlite3TwoPartName(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pNm)), *(*uintptr)(unsafe.Pointer(_pNm)), _pNm)
	if _iDb >= int32(0) {
		goto _3
	}

	return

_3:
_2:
	if _iDb == int32(1) {
		goto _4
	}

	_1489sqlite3VdbeAddOp1(tls, _v, int32(10), _iDb)
	_1074sqlite3VdbeUsesBtree(tls, _v, _iDb)
_4:
	return
}

// _1366sqlite3Pragma is defined at sqlite3.c:114627:21
func _1366sqlite3Pragma(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pId1 uintptr /* *TToken = SToken */, _pId2 uintptr /* *TToken = SToken */, _pValue uintptr /* *TToken = SToken */, _minusFlag int32) {
	esc := crt.MustMalloc(280)
	var (
		_zLeft       uintptr    // *int8
		_zRight      uintptr    // *int8
		_zDb         uintptr    // *int8
		_pId         = esc      // **TToken = SToken
		_aFcntl      = esc + 16 // *[4]*int8
		_iDb         int32
		_rc          int32
		_db          uintptr // *Tsqlite3 = Ssqlite3
		_pDb         uintptr // *TDb = SDb
		_v           uintptr // *TVdbe = SVdbe
		_pPragma     uintptr // *TPragmaName = struct{XzName *in...XnPragCName uint8;XiArg uint32;}
		_aOp         uintptr // *TVdbeOp = SVdbeOp
		_size        int32
		_pBt         uintptr // *TBtree = SBtree
		_1size       int32
		_2pBt        uintptr // *TBtree = SBtree
		_b           int32
		_ii          int32
		_iReg        int32
		_zRet        uintptr // *int8
		_eMode       int32
		_pPager      uintptr // *TPager = SPager
		_3ii         int32
		_4eMode      int32
		_5ii         int32
		_zMode       uintptr // *int8
		_n           int32
		_6pPager     uintptr    // *TPager = SPager
		_iLimit      = esc + 48 // *Ti64 = Tsqlite_int64 = int64
		_7pBt        uintptr    // *TBtree = SBtree
		_eAuto       int32
		_8aOp        uintptr // *TVdbeOp = SVdbeOp
		_iAddr       int32
		_9iLimit     = esc + 64 // *int32
		_addr        int32
		_10size      int32
		_11size      = esc + 80 // *int32
		_sz          = esc + 96 // *Tsqlite3_int64 = Tsqlite_int64 = int64
		_12ii        int32
		_res         = esc + 112 // *int32
		_iLevel      int32
		_mask        int32
		_pTab        uintptr // *TTable = STable
		_i           int32
		_k           int32
		_nHidden     int32
		_pCol        uintptr // *TColumn = SColumn
		_pPk         uintptr // *TIndex = SIndex
		_pIdx        uintptr // *TIndex = SIndex
		_13pTab      uintptr // *TTable = STable
		_14i         int32
		_mx          int32
		_cnum        int16
		_15pIdx      uintptr // *TIndex = SIndex
		_16pTab      uintptr // *TTable = STable
		_17i         int32
		_azOrigin    = esc + 128 // *[3]*int8
		_18i         int32
		_19i         int32
		_p           uintptr // *THashElem = SHashElem
		_pColl       uintptr // *TCollSeq = SCollSeq
		_pFK         uintptr // *TFKey = SFKey
		_20pTab      uintptr // *TTable = STable
		_21i         int32
		_j           int32
		_22pFK       uintptr     // *TFKey = SFKey
		_23pTab      uintptr     // *TTable = STable
		_pParent     uintptr     // *TTable = STable
		_24pIdx      = esc + 160 // **TIndex = SIndex
		_25i         int32
		_26j         int32
		_27k         uintptr // *THashElem = SHashElem
		_x           int32
		_regResult   int32
		_regKey      int32
		_regRow      int32
		_addrTop     int32
		_addrOk      int32
		_aiCols      = esc + 176 // **int32
		_iCol        int32
		_jmp         int32
		_28i         int32
		_29j         int32
		_30addr      int32
		_mxErr       = esc + 192 // *int32
		_isQuick     int32
		_31x         uintptr // *THashElem = SHashElem
		_pTbls       uintptr // *THash = SHash
		_aRoot       uintptr // *int32
		_cnt         int32
		_mxIdx       int32
		_32pTab      uintptr // *TTable = STable
		_33pIdx      uintptr // *TIndex = SIndex
		_nIdx        int32
		_34pTab      uintptr // *TTable = STable
		_35pIdx      uintptr // *TIndex = SIndex
		_36pTab      uintptr // *TTable = STable
		_37pIdx      uintptr // *TIndex = SIndex
		_38pPk       uintptr // *TIndex = SIndex
		_pPrior      uintptr // *TIndex = SIndex
		_loopTop     int32
		_iDataCur    = esc + 208 // *int32
		_iIdxCur     = esc + 224 // *int32
		_r1          int32
		_zErr        uintptr // *int8
		_jmp2        int32
		_pCheck      uintptr // *TExprList = SExprList
		_addrCkFault int32
		_addrCkOk    int32
		_39zErr      uintptr // *int8
		_40k         int32
		_41jmp2      int32
		_jmp3        = esc + 240 // *int32
		_jmp4        int32
		_jmp5        int32
		_ckUniq      int32
		_uniqOk      int32
		_jmp6        int32
		_kk          int32
		_42iCol      int32
		_43aOp       uintptr // *TVdbeOp = SVdbeOp
		_pEnc        uintptr // *SEncName
		_iCookie     int32
		_44aOp       uintptr // *TVdbeOp = SVdbeOp
		_45aOp       uintptr // *TVdbeOp = SVdbeOp
		_46i         int32
		_zOpt        uintptr // *int8
		_iBt         int32
		_47eMode     int32
		_iDbLast     int32
		_iTabCur     int32
		_48k         uintptr // *THashElem = SHashElem
		_pSchema     uintptr // *TSchema = SSchema
		_49pTab      uintptr // *TTable = STable
		_50pIdx      uintptr // *TIndex = SIndex
		_szThreshold int16
		_zSubSql     uintptr // *int8
		_opMask      uint32
		_51r1        int32
		_N           = esc + 256 // *Tsqlite3_int64 = Tsqlite_int64 = int64
		_52N         = esc + 272 // *Tsqlite3_int64 = Tsqlite_int64 = int64
	)
	defer crt.Free(esc)
	_zLeft = 0
	_zRight = 0
	_zDb = 0
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_v = _1472sqlite3GetVdbe(tls, _pParse)
	if _v != 0 {
		goto _1
	}

	return

_1:
	_1632sqlite3VdbeRunOnlyOnce(tls, _v)
	*(*int32)(unsafe.Pointer(_pParse + 56)) = int32(2)
	_iDb = _1485sqlite3TwoPartName(tls, _pParse, _pId1, _pId2, _pId)
	if _iDb >= int32(0) {
		goto _2
	}

	return

_2:
	_pDb = (*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)
	if _iDb != int32(1) || _318sqlite3OpenTempDatabase(tls, _pParse) == 0 {
		goto _3
	}

	return

_3:
	_zLeft = _1482sqlite3NameFromToken(tls, _db, *(*uintptr)(unsafe.Pointer(_pId)))
	if _zLeft != 0 {
		goto _4
	}

	return

_4:
	if _minusFlag == 0 {
		goto _5
	}

	_zRight = _226sqlite3MPrintf(tls, _db, ts+26818 /* "-%T" */, _pValue)
	goto _6

_5:
	_zRight = _1482sqlite3NameFromToken(tls, _db, _pValue)
_6:
	_zDb = func() uintptr {
		if (*(*uint32)(unsafe.Pointer(_pId2 + 8))) > uint32(0) {
			return *(*uintptr)(unsafe.Pointer(_pDb))
		}
		return null
	}()
	if _1480sqlite3AuthCheck(tls, _pParse, int32(19), _zLeft, _zRight, _zDb) == 0 {
		goto _7
	}

	goto _pragma_out

_7:
	*(*uintptr)(unsafe.Pointer(_aFcntl)) = null
	*(*uintptr)(unsafe.Pointer(_aFcntl + 8)) = _zLeft
	*(*uintptr)(unsafe.Pointer(_aFcntl + 16)) = _zRight
	*(*uintptr)(unsafe.Pointer(_aFcntl + 24)) = null
	*(*int32)(unsafe.Pointer((_db + 544) + 16)) = int32(0)
	_rc = Xsqlite3_file_control(tls, _db, _zDb, int32(14), _aFcntl)
	if _rc != int32(0) {
		goto _8
	}

	_621sqlite3VdbeSetNumCols(tls, _v, int32(1))
	_622sqlite3VdbeSetColName(tls, _v, int32(0), int32(0), *(*uintptr)(unsafe.Pointer(_aFcntl)), uintptr(18446744073709551615))
	_1633returnSingleText(tls, _v, *(*uintptr)(unsafe.Pointer(_aFcntl)))
	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_aFcntl)))
	goto _pragma_out

_8:
	if _rc == int32(12) {
		goto _9
	}

	if (*(*uintptr)(unsafe.Pointer(_aFcntl))) == 0 {
		goto _10
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+429 /* "%s" */, *(*uintptr)(unsafe.Pointer(_aFcntl)))
	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_aFcntl)))
_10:
	(*(*int32)(unsafe.Pointer(_pParse + 48)))++
	*(*int32)(unsafe.Pointer(_pParse + 24)) = _rc
	goto _pragma_out

_9:
	_pPragma = _1420pragmaLocate(tls, _zLeft)
	if _pPragma != 0 {
		goto _11
	}

	goto _pragma_out

_11:
	if (int32(*(*uint8)(unsafe.Pointer(_pPragma + 9))) & int32(0x1)) == int32(0) {
		goto _12
	}

	if _1237sqlite3ReadSchema(tls, _pParse) == 0 {
		goto _13
	}

	goto _pragma_out

_13:
_12:
	if (int32(*(*uint8)(unsafe.Pointer(_pPragma + 9)))&int32(0x2)) != int32(0) || (int32(*(*uint8)(unsafe.Pointer(_pPragma + 9)))&int32(0x4)) != int32(0) && _zRight != 0 {
		goto _14
	}

	_1634setPragmaResultColumnNames(tls, _v, _pPragma)
_14:
	switch int32(*(*uint8)(unsafe.Pointer(_pPragma + 8))) {
	case int32(11):
		goto _16
	case int32(28):
		goto _17
	case int32(30):
		goto _18
	case int32(24):
		goto _19
	case int32(23):
		goto _20
	case int32(20):
		goto _21
	case int32(21):
		goto _22
	case int32(1):
		goto _23
	case int32(16):
		goto _24
	case int32(4):
		goto _25
	case int32(5):
		goto _26
	case int32(25):
		goto _27
	case int32(35):
		goto _28
	case int32(36):
		goto _29
	case int32(33):
		goto _30
	case int32(2):
		goto _31
	case int32(34):
		goto _32
	case int32(17):
		goto _33
	case int32(18):
		goto _34
	case int32(10):
		goto _35
	case int32(7):
		goto _36
	case int32(14):
		goto _37
	case int32(13):
		goto _38
	case int32(6):
		goto _39
	case int32(19):
		goto _40
	case int32(12):
		goto _41
	case int32(0):
		goto _42
	case int32(8):
		goto _43
	case int32(39):
		goto _44
	case int32(38):
		goto _45
	case int32(31):
		goto _46
	case int32(27):
		goto _47
	default:
		goto _48

	case int32(32):
		goto _49
	case int32(37):
		goto _50
	}
_16:
	_1074sqlite3VdbeUsesBtree(tls, _v, _iDb)
	if _zRight != 0 {
		goto _51
	}

	{
		p := &(*(*int32)(unsafe.Pointer(_pParse + 56)))
		*p = int32(int32(*p) + int32(2))
	}
	_aOp = _1073sqlite3VdbeAddOpList(tls, _v, int32(9), _1624getCacheSize, _1623iLn)

	goto _53

	goto _15

_53:
	*(*int32)(unsafe.Pointer(_aOp + 4)) = _iDb
	*(*int32)(unsafe.Pointer((_aOp + 24) + 4)) = _iDb
	*(*int32)(unsafe.Pointer((_aOp + 144) + 4)) = int32(-2000)
	goto _52

_51:
	_size = _767sqlite3AbsInt32(tls, _1002sqlite3Atoi(tls, _zRight))
	_1488sqlite3BeginWriteOperation(tls, _pParse, int32(0), _iDb)
	_1241sqlite3VdbeAddOp3(tls, _v, int32(102), _iDb, int32(3), _size)

	*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pDb + 24))) + 116)) = _size
	_768sqlite3BtreeSetCacheSize(tls, *(*uintptr)(unsafe.Pointer(_pDb + 8)), *(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pDb + 24))) + 116)))
_52:
	goto _15

_17:
	_pBt = *(*uintptr)(unsafe.Pointer(_pDb + 8))

	if _zRight != 0 {
		goto _54
	}

	_1size = func() int32 {
		if _pBt != 0 {
			return _146sqlite3BtreeGetPageSize(tls, _pBt)
		}
		return int32(0)
	}()
	_1635returnSingleInt(tls, _v, int64(_1size))
	goto _55

_54:
	*(*int32)(unsafe.Pointer(_db + 108)) = _1002sqlite3Atoi(tls, _zRight)
	if int32(7) != _210sqlite3BtreeSetPageSize(tls, _pBt, *(*int32)(unsafe.Pointer(_db + 108)), int32(-1), int32(0)) {
		goto _56
	}

	_178sqlite3OomFault(tls, _db)
_56:
_55:
	goto _15

_18:
	_2pBt = *(*uintptr)(unsafe.Pointer(_pDb + 8))
	_b = int32(-1)

	if _zRight == 0 {
		goto _57
	}

	if Xsqlite3_stricmp(tls, _zRight, ts+26822 /* "fast" */) != int32(0) {
		goto _58
	}

	_b = int32(2)
	goto _59

_58:
	_b = int32(_1087sqlite3GetBoolean(tls, _zRight, uint8(0)))
_59:
_57:
	if (*(*uint32)(unsafe.Pointer(_pId2 + 8))) != uint32(0) || _b < int32(0) {
		goto _60
	}

	_ii = int32(0)
_61:
	if _ii >= (*(*int32)(unsafe.Pointer(_db + 40))) {
		goto _63
	}

	_1636sqlite3BtreeSecureDelete(tls, *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_ii)) + 8)), _b)
	_ii++
	goto _61

_63:
_60:
	_b = _1636sqlite3BtreeSecureDelete(tls, _2pBt, _b)
	_1635returnSingleInt(tls, _v, int64(_b))
	goto _15

_19:
	_1487sqlite3CodeVerifySchema(tls, _pParse, _iDb)
	_iReg = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))
	if int32(*(*uint8)(unsafe.Pointer(_215sqlite3UpperToLower + uintptr(uint8(*(*int8)(unsafe.Pointer(_zLeft))))))) != int32('p') {
		goto _64
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(159), _iDb, _iReg)
	goto _65

_64:
	_1241sqlite3VdbeAddOp3(tls, _v, int32(160), _iDb, _iReg, _767sqlite3AbsInt32(tls, _1002sqlite3Atoi(tls, _zRight)))
_65:
	_1240sqlite3VdbeAddOp2(tls, _v, int32(78), _iReg, int32(1))
	goto _15

_20:
	_zRet = ts + 26827 /* "normal" */
	_eMode = _1637getLockingMode(tls, _zRight)
	if (*(*uint32)(unsafe.Pointer(_pId2 + 8))) != uint32(0) || _eMode != int32(-1) {
		goto _66
	}

	_eMode = int32(*(*uint8)(unsafe.Pointer(_db + 99)))
	goto _67

_66:
	if (*(*uint32)(unsafe.Pointer(_pId2 + 8))) != uint32(0) {
		goto _68
	}

	_3ii = int32(2)
_69:
	if _3ii >= (*(*int32)(unsafe.Pointer(_db + 40))) {
		goto _71
	}

	_pPager = _141sqlite3BtreePager(tls, *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_3ii)) + 8)))
	_1638sqlite3PagerLockingMode(tls, _pPager, _eMode)
	_3ii++
	goto _69

_71:
	*(*uint8)(unsafe.Pointer(_db + 99)) = uint8(_eMode)
_68:
	_pPager = _141sqlite3BtreePager(tls, *(*uintptr)(unsafe.Pointer(_pDb + 8)))
	_eMode = _1638sqlite3PagerLockingMode(tls, _pPager, _eMode)
_67:
	if _eMode != int32(1) {
		goto _72
	}

	_zRet = ts + 26834 /* "exclusive" */
_72:
	_1633returnSingleText(tls, _v, _zRet)
	goto _15

_21:
	if _zRight != 0 {
		goto _73
	}

	_4eMode = int32(-1)
	goto _74

_73:
	_n = _211sqlite3Strlen30(tls, _zRight)
	_4eMode = int32(0)
_75:
	if set4(&_zMode, _731sqlite3JournalModename(tls, _4eMode)) == 0 {
		goto _77
	}

	if Xsqlite3_strnicmp(tls, _zRight, _zMode, _n) != int32(0) {
		goto _78
	}

	goto _77

_78:
	_4eMode++
	goto _75

_77:
	if _zMode != 0 {
		goto _79
	}

	_4eMode = int32(-1)
_79:
_74:
	if _4eMode != int32(-1) || (*(*uint32)(unsafe.Pointer(_pId2 + 8))) != uint32(0) {
		goto _80
	}

	_iDb = int32(0)
	*(*uint32)(unsafe.Pointer(_pId2 + 8)) = uint32(1)
_80:
	_5ii = (*(*int32)(unsafe.Pointer(_db + 40))) - int32(1)
_81:
	if _5ii < int32(0) {
		goto _83
	}

	if (*(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_5ii)) + 8))) == 0 || _5ii != _iDb && (*(*uint32)(unsafe.Pointer(_pId2 + 8))) != uint32(0) {
		goto _84
	}

	_1074sqlite3VdbeUsesBtree(tls, _v, _5ii)
	_1241sqlite3VdbeAddOp3(tls, _v, int32(9), _5ii, int32(1), _4eMode)
_84:
	_5ii--
	goto _81

_83:
	_1240sqlite3VdbeAddOp2(tls, _v, int32(78), int32(1), int32(1))
	goto _15

_22:
	_6pPager = _141sqlite3BtreePager(tls, *(*uintptr)(unsafe.Pointer(_pDb + 8)))
	*(*int64)(unsafe.Pointer(_iLimit)) = int64(-2)
	if _zRight == 0 {
		goto _85
	}

	_1088sqlite3DecOrHexToI64(tls, _zRight, _iLimit)
	if (*(*int64)(unsafe.Pointer(_iLimit))) >= int64(-1) {
		goto _86
	}

	*(*int64)(unsafe.Pointer(_iLimit)) = int64(-1)
_86:
_85:
	*(*int64)(unsafe.Pointer(_iLimit)) = _1639sqlite3PagerJournalSizeLimit(tls, _6pPager, *(*int64)(unsafe.Pointer(_iLimit)))
	_1635returnSingleInt(tls, _v, *(*int64)(unsafe.Pointer(_iLimit)))
	goto _15

_23:
	_7pBt = *(*uintptr)(unsafe.Pointer(_pDb + 8))

	if _zRight != 0 {
		goto _87
	}

	_1635returnSingleInt(tls, _v, int64(_1030sqlite3BtreeGetAutoVacuum(tls, _7pBt)))
	goto _88

_87:
	_eAuto = _1640getAutoVacuum(tls, _zRight)

	*(*int8)(unsafe.Pointer(_db + 100)) = int8(uint8(_eAuto))
	_rc = _1029sqlite3BtreeSetAutoVacuum(tls, _7pBt, _eAuto)
	if _rc != int32(0) || _eAuto != int32(1) && _eAuto != int32(2) {
		goto _89
	}

	_iAddr = _1496sqlite3VdbeCurrentAddr(tls, _v)
	_8aOp = _1073sqlite3VdbeAddOpList(tls, _v, int32(5), _1626setMeta6, _1625iLn)

	goto _90

	goto _15

_90:
	*(*int32)(unsafe.Pointer(_8aOp + 4)) = _iDb
	*(*int32)(unsafe.Pointer((_8aOp + 24) + 4)) = _iDb
	*(*int32)(unsafe.Pointer((_8aOp + 48) + 8)) = _iAddr + int32(4)
	*(*int32)(unsafe.Pointer((_8aOp + 96) + 4)) = _iDb
	*(*int32)(unsafe.Pointer((_8aOp + 96) + 12)) = _eAuto - int32(1)
	_1074sqlite3VdbeUsesBtree(tls, _v, _iDb)
_89:
_88:
	goto _15

_24:
	if _zRight != 0 && _1004sqlite3GetInt32(tls, _zRight, _9iLimit) != 0 && (*(*int32)(unsafe.Pointer(_9iLimit))) > int32(0) {
		goto _91
	}

	*(*int32)(unsafe.Pointer(_9iLimit)) = int32(0x7fffffff)
_91:
	_1488sqlite3BeginWriteOperation(tls, _pParse, int32(0), _iDb)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(67), *(*int32)(unsafe.Pointer(_9iLimit)), int32(1))
	_addr = _1489sqlite3VdbeAddOp1(tls, _v, int32(60), _iDb)
	_1489sqlite3VdbeAddOp1(tls, _v, int32(78), int32(1))
	_1240sqlite3VdbeAddOp2(tls, _v, int32(80), int32(1), int32(-1))
	_1240sqlite3VdbeAddOp2(tls, _v, int32(48), int32(1), _addr)
	_1474sqlite3VdbeJumpHere(tls, _v, _addr)
	goto _15

_25:
	if _zRight != 0 {
		goto _92
	}

	_1635returnSingleInt(tls, _v, int64(*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pDb + 24))) + 116))))
	goto _93

_92:
	_10size = _1002sqlite3Atoi(tls, _zRight)
	*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pDb + 24))) + 116)) = _10size
	_768sqlite3BtreeSetCacheSize(tls, *(*uintptr)(unsafe.Pointer(_pDb + 8)), *(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pDb + 24))) + 116)))
_93:
	goto _15

_26:
	if _zRight != 0 {
		goto _94
	}

	_1635returnSingleInt(tls, _v, int64(func() int32 {
		if ((*(*uint32)(unsafe.Pointer(_db + 48))) & uint32(0x20)) == uint32(0) {
			return int32(0)
		}
		return _1027sqlite3BtreeSetSpillSize(tls, *(*uintptr)(unsafe.Pointer(_pDb + 8)), int32(0))
	}()))
	goto _95

_94:
	*(*int32)(unsafe.Pointer(_11size)) = int32(1)
	if _1004sqlite3GetInt32(tls, _zRight, _11size) == 0 {
		goto _96
	}

	_1027sqlite3BtreeSetSpillSize(tls, *(*uintptr)(unsafe.Pointer(_pDb + 8)), *(*int32)(unsafe.Pointer(_11size)))
_96:
	if _1087sqlite3GetBoolean(tls, _zRight, uint8(bool2int((*(*int32)(unsafe.Pointer(_11size))) != int32(0)))) == 0 {
		goto _97
	}

	{
		p := &(*(*uint32)(unsafe.Pointer(_db + 48)))
		*p = uint32(uint32(*p) | uint32(0x20))
	}
	goto _98

_97:
	{
		p := &(*(*uint32)(unsafe.Pointer(_db + 48)))
		*p = uint32(uint32(*p) & uint32(4294967263))
	}
_98:
	_1641setAllPagerFlags(tls, _db)
_95:
	goto _15

_27:
	if _zRight == 0 {
		goto _99
	}

	_1088sqlite3DecOrHexToI64(tls, _zRight, _sz)
	if (*(*int64)(unsafe.Pointer(_sz))) >= int64(0) {
		goto _100
	}

	*(*int64)(unsafe.Pointer(_sz)) = *(*int64)(unsafe.Pointer(_28sqlite3Config + 312))
_100:
	if (*(*uint32)(unsafe.Pointer(_pId2 + 8))) != uint32(0) {
		goto _101
	}

	*(*int64)(unsafe.Pointer(_db + 64)) = int64(*(*int64)(unsafe.Pointer(_sz)))
_101:
	_12ii = (*(*int32)(unsafe.Pointer(_db + 40))) - int32(1)
_102:
	if _12ii < int32(0) {
		goto _104
	}

	if (*(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_12ii)) + 8))) == 0 || _12ii != _iDb && (*(*uint32)(unsafe.Pointer(_pId2 + 8))) != uint32(0) {
		goto _105
	}

	_1642sqlite3BtreeSetMmapLimit(tls, *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_12ii)) + 8)), *(*int64)(unsafe.Pointer(_sz)))
_105:
	_12ii--
	goto _102

_104:
_99:
	*(*int64)(unsafe.Pointer(_sz)) = int64(-1)
	_rc = Xsqlite3_file_control(tls, _db, _zDb, int32(18), _sz)
	if _rc != int32(0) {
		goto _106
	}

	_1635returnSingleInt(tls, _v, *(*int64)(unsafe.Pointer(_sz)))
	goto _107

_106:
	if _rc == int32(12) {
		goto _108
	}

	(*(*int32)(unsafe.Pointer(_pParse + 48)))++
	*(*int32)(unsafe.Pointer(_pParse + 24)) = _rc
_108:
_107:
	goto _15

_28:
	if _zRight != 0 {
		goto _109
	}

	_1635returnSingleInt(tls, _v, int64(*(*uint8)(unsafe.Pointer(_db + 96))))
	goto _110

_109:
	_1643changeTempStorage(tls, _pParse, _zRight)
_110:
	goto _15

_29:
	if _zRight != 0 {
		goto _111
	}

	_1633returnSingleText(tls, _v, Xsqlite3_temp_directory)
	goto _112

_111:
	if (*(*int8)(unsafe.Pointer(_zRight))) == 0 {
		goto _113
	}

	_rc = _872sqlite3OsAccess(tls, *(*uintptr)(unsafe.Pointer(_db)), _zRight, int32(1), _res)
	if _rc == int32(0) && (*(*int32)(unsafe.Pointer(_res))) != int32(0) {
		goto _114
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+26844 /* "not a writable directory" */)
	goto _pragma_out

_114:
_113:
	if 0 == 0 && (1 == 0 || int32(*(*uint8)(unsafe.Pointer(_db + 96))) > int32(1)) && 0 == 0 {
		goto _115
	}

	_1644invalidateTempStorage(tls, _pParse)
_115:
	Xsqlite3_free(tls, Xsqlite3_temp_directory)
	if (*(*int8)(unsafe.Pointer(_zRight))) == 0 {
		goto _116
	}

	Xsqlite3_temp_directory = Xsqlite3_mprintf(tls, ts+429 /* "%s" */, _zRight)
	goto _117

_116:
	Xsqlite3_temp_directory = null
_117:
_112:
	goto _15

_30:
	if _zRight != 0 {
		goto _118
	}

	_1635returnSingleInt(tls, _v, int64(int32(*(*uint8)(unsafe.Pointer(_pDb + 16)))-int32(1)))
	goto _119

_118:
	if (*(*uint8)(unsafe.Pointer(_db + 95))) != 0 {
		goto _120
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+26869 /* "Safety level may not be changed ..." */)
	goto _121

_120:
	if _iDb == int32(1) {
		goto _122
	}

	_iLevel = (int32(_1254getSafetyLevel(tls, _zRight, int32(0), uint8(1))) + int32(1)) & int32(0x7)
	if _iLevel != int32(0) {
		goto _123
	}

	_iLevel = int32(1)
_123:
	*(*uint8)(unsafe.Pointer(_pDb + 16)) = uint8(_iLevel)
	*(*uint8)(unsafe.Pointer(_pDb + 17)) = uint8(1)
	_1641setAllPagerFlags(tls, _db)
_122:
_121:
_119:
	goto _15

_31:
	if _zRight != 0 {
		goto _124
	}

	_1634setPragmaResultColumnNames(tls, _v, _pPragma)
	_1635returnSingleInt(tls, _v, int64(bool2int(((*(*uint32)(unsafe.Pointer(_db + 48)))&(*(*uint32)(unsafe.Pointer(_pPragma + 12)))) != uint32(0))))
	goto _125

_124:
	_mask = int32(*(*uint32)(unsafe.Pointer(_pPragma + 12)))
	if int32(*(*uint8)(unsafe.Pointer(_db + 95))) != int32(0) {
		goto _126
	}

	_mask = int32(_mask & int32(-16385))
_126:
	if _1087sqlite3GetBoolean(tls, _zRight, uint8(0)) == 0 {
		goto _127
	}

	{
		p := &(*(*uint32)(unsafe.Pointer(_db + 48)))
		*p = uint32(uint32(*p) | uint32(_mask))
	}
	goto _128

_127:
	{
		p := &(*(*uint32)(unsafe.Pointer(_db + 48)))
		*p = uint32(uint32(*p) & uint32(^_mask))
	}
	if _mask != int32(0x80000) {
		goto _129
	}

	*(*int64)(unsafe.Pointer(_db + 664)) = int64(0)
_129:
_128:
	_1473sqlite3VdbeAddOp0(tls, _v, int32(151))
	_1641setAllPagerFlags(tls, _db)
_125:
	goto _15

_32:
	if _zRight == 0 {
		goto _130
	}

	_pTab = _1068sqlite3LocateTable(tls, _pParse, uint32(0x2), _zRight, _zDb)
	if _pTab == 0 {
		goto _131
	}

	_nHidden = int32(0)
	_pPk = _1060sqlite3PrimaryKeyIndex(tls, _pTab)
	*(*int32)(unsafe.Pointer(_pParse + 56)) = int32(6)
	_1487sqlite3CodeVerifySchema(tls, _pParse, _iDb)
	_1524sqlite3ViewGetColumnNames(tls, _pParse, _pTab)
	_i = int32(0)
	_pCol = *(*uintptr)(unsafe.Pointer(_pTab + 8))
_132:
	if _i >= int32(*(*int16)(unsafe.Pointer(_pTab + 70))) {
		goto _134
	}

	if (int32(*(*uint8)(unsafe.Pointer(_pCol + 27))) & int32(0x2)) == int32(0) {
		goto _135
	}

	_nHidden++
	goto _133

_135:
	if (int32(*(*uint8)(unsafe.Pointer(_pCol + 27))) & int32(0x1)) != int32(0) {
		goto _136
	}

	_k = int32(0)
	goto _137

_136:
	if _pPk != 0 {
		goto _138
	}

	_k = int32(1)
	goto _139

_138:
	_k = int32(1)
_140:
	if _k > int32(*(*int16)(unsafe.Pointer(_pTab + 70))) || int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPk + 8))) + 2*uintptr(_k-int32(1))))) == _i {
		goto _142
	}

	_k++
	goto _140

_142:
_139:
_137:
	_1645sqlite3VdbeMultiLoad(tls, _v, int32(1), ts+26922 /* "issisi" */, _i-_nHidden, *(*uintptr)(unsafe.Pointer(_pCol)), _223sqlite3ColumnType(tls, _pCol, ts+4553 /* "" */), func() int32 {
		if (*(*uint8)(unsafe.Pointer(_pCol + 24))) != 0 {
			return int32(1)
		}
		return int32(0)
	}(), func() uintptr {
		if (*(*uintptr)(unsafe.Pointer(_pCol + 8))) != 0 {
			return *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pCol + 8))) + 8))
		}
		return null
	}(), _k)

_133:
	_i++
	_pCol += 32
	goto _132

_134:
_131:
_130:
	goto _15

_33:
	if _zRight == 0 {
		goto _143
	}

	_pIdx = _1003sqlite3FindIndex(tls, _db, _zRight, _zDb)
	if _pIdx == 0 {
		goto _144
	}

	if (*(*uint32)(unsafe.Pointer(_pPragma + 12))) == 0 {
		goto _145
	}

	_mx = int32(*(*uint16)(unsafe.Pointer(_pIdx + 96)))
	*(*int32)(unsafe.Pointer(_pParse + 56)) = int32(6)
	goto _146

_145:
	_mx = int32(*(*uint16)(unsafe.Pointer(_pIdx + 94)))
	*(*int32)(unsafe.Pointer(_pParse + 56)) = int32(3)
_146:
	_13pTab = *(*uintptr)(unsafe.Pointer(_pIdx + 24))
	_1487sqlite3CodeVerifySchema(tls, _pParse, _iDb)

	_14i = int32(0)
_147:
	if _14i >= _mx {
		goto _149
	}

	_cnum = *(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 8))) + 2*uintptr(_14i)))
	_1645sqlite3VdbeMultiLoad(tls, _v, int32(1), ts+26929 /* "iisX" */, _14i, int32(_cnum), func() uintptr {
		if int32(_cnum) < int32(0) {
			return null
		}
		return *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_13pTab + 8))) + 32*uintptr(_cnum)))
	}())
	if (*(*uint32)(unsafe.Pointer(_pPragma + 12))) == 0 {
		goto _150
	}

	_1645sqlite3VdbeMultiLoad(tls, _v, int32(4), ts+26934 /* "isiX" */, int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 56))) + uintptr(_14i)))), *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 64))) + 8*uintptr(_14i))), bool2int(_14i < int32(*(*uint16)(unsafe.Pointer(_pIdx + 94)))))
_150:
	_1240sqlite3VdbeAddOp2(tls, _v, int32(78), int32(1), *(*int32)(unsafe.Pointer(_pParse + 56)))
	_14i++
	goto _147

_149:
_144:
_143:
	goto _15

_34:
	if _zRight == 0 {
		goto _151
	}

	_16pTab = _221sqlite3FindTable(tls, _db, _zRight, _zDb)
	if _16pTab == 0 {
		goto _152
	}

	*(*int32)(unsafe.Pointer(_pParse + 56)) = int32(5)
	_1487sqlite3CodeVerifySchema(tls, _pParse, _iDb)
	_15pIdx = *(*uintptr)(unsafe.Pointer(_16pTab + 16))
	_17i = int32(0)
_153:
	if _15pIdx == 0 {
		goto _155
	}

	*(*[3]uintptr)(unsafe.Pointer(_azOrigin)) = [3]uintptr{
		0: ts + 26939, /* "c" */
		1: ts + 26941, /* "u" */
		2: ts + 26943, /* "pk" */
	}
	_1645sqlite3VdbeMultiLoad(tls, _v, int32(1), ts+26946 /* "isisi" */, _17i, *(*uintptr)(unsafe.Pointer(_15pIdx)), bool2int(int32(*(*uint8)(unsafe.Pointer(_15pIdx + 98))) != int32(0)), *(*uintptr)(unsafe.Pointer(_azOrigin + 8*uintptr(uint32(*(*uint8)(unsafe.Pointer(_15pIdx + 99)))<<30>>30))), bool2int((*(*uintptr)(unsafe.Pointer(_15pIdx + 72))) != 0))
	_15pIdx = *(*uintptr)(unsafe.Pointer(_15pIdx + 40))
	_17i++
	goto _153

_155:
_152:
_151:
	goto _15

_35:
	*(*int32)(unsafe.Pointer(_pParse + 56)) = int32(3)
	_18i = int32(0)
_156:
	if _18i >= (*(*int32)(unsafe.Pointer(_db + 40))) {
		goto _158
	}

	if (*(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_18i)) + 8))) != 0 {
		goto _159
	}

	goto _157

_159:
	_1645sqlite3VdbeMultiLoad(tls, _v, int32(1), ts+26952 /* "iss" */, _18i, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_18i))), _1047sqlite3BtreeGetFilename(tls, *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_18i)) + 8))))

_157:
	_18i++
	goto _156

_158:
	goto _15

_36:
	_19i = int32(0)
	*(*int32)(unsafe.Pointer(_pParse + 56)) = int32(2)
	_p = *(*uintptr)(unsafe.Pointer((_db + 520) + 8))
_160:
	if _p == 0 {
		goto _162
	}

	_pColl = *(*uintptr)(unsafe.Pointer(_p + 16))
	_1645sqlite3VdbeMultiLoad(tls, _v, int32(1), ts+26956 /* "is" */, postinc7(&_19i), *(*uintptr)(unsafe.Pointer(_pColl)))
	_p = *(*uintptr)(unsafe.Pointer(_p))
	goto _160

_162:
	goto _15

_37:
	if _zRight == 0 {
		goto _163
	}

	_20pTab = _221sqlite3FindTable(tls, _db, _zRight, _zDb)
	if _20pTab == 0 {
		goto _164
	}

	_pFK = *(*uintptr)(unsafe.Pointer(_20pTab + 32))
	if _pFK == 0 {
		goto _165
	}

	_21i = int32(0)
	*(*int32)(unsafe.Pointer(_pParse + 56)) = int32(8)
	_1487sqlite3CodeVerifySchema(tls, _pParse, _iDb)
_166:
	if _pFK == 0 {
		goto _167
	}

	_j = int32(0)
_168:
	if _j >= (*(*int32)(unsafe.Pointer(_pFK + 40))) {
		goto _170
	}

	_1645sqlite3VdbeMultiLoad(tls, _v, int32(1), ts+26959 /* "iissssss" */, _21i, _j, *(*uintptr)(unsafe.Pointer(_pFK + 16)), *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_20pTab + 8))) + 32*uintptr(*(*int32)(unsafe.Pointer((_pFK + 64) + 16*uintptr(_j)))))), *(*uintptr)(unsafe.Pointer(((_pFK + 64) + 16*uintptr(_j)) + 8)), _1646actionName(tls, *(*uint8)(unsafe.Pointer((_pFK + 45) + 1))), _1646actionName(tls, *(*uint8)(unsafe.Pointer(_pFK + 45))), ts+26968 /* "NONE" */)
	_j++
	goto _168

_170:
	_21i++
	_pFK = *(*uintptr)(unsafe.Pointer(_pFK + 8))
	goto _166

_167:
_165:
_164:
_163:
	goto _15

_38:
	_regResult = (*(*int32)(unsafe.Pointer(_pParse + 56))) + int32(1)
	{
		p := &(*(*int32)(unsafe.Pointer(_pParse + 56)))
		*p = int32(int32(*p) + int32(4))
	}
	_regKey = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))
	_regRow = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))
	_1487sqlite3CodeVerifySchema(tls, _pParse, _iDb)
	_27k = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)) + 24))) + 8) + 8))
_171:
	if _27k == 0 {
		goto _172
	}

	if _zRight == 0 {
		goto _173
	}

	_23pTab = _1068sqlite3LocateTable(tls, _pParse, uint32(0), _zRight, _zDb)
	_27k = null
	goto _174

_173:
	_23pTab = *(*uintptr)(unsafe.Pointer(_27k + 16))
	_27k = *(*uintptr)(unsafe.Pointer(_27k))
_174:
	if _23pTab != 0 && (*(*uintptr)(unsafe.Pointer(_23pTab + 32))) != 0 {
		goto _175
	}

	goto _171

_175:
	_1574sqlite3TableLock(tls, _pParse, _iDb, *(*int32)(unsafe.Pointer(_23pTab + 56)), uint8(0), *(*uintptr)(unsafe.Pointer(_23pTab)))
	if (int32(*(*int16)(unsafe.Pointer(_23pTab + 70))) + _regRow) <= (*(*int32)(unsafe.Pointer(_pParse + 56))) {
		goto _176
	}

	*(*int32)(unsafe.Pointer(_pParse + 56)) = int32(*(*int16)(unsafe.Pointer(_23pTab + 70))) + _regRow
_176:
	_1647sqlite3OpenTable(tls, _pParse, int32(0), _iDb, _23pTab, int32(104))
	_1648sqlite3VdbeLoadString(tls, _v, _regResult, *(*uintptr)(unsafe.Pointer(_23pTab)))
	_25i = int32(1)
	_22pFK = *(*uintptr)(unsafe.Pointer(_23pTab + 32))
_177:
	if _22pFK == 0 {
		goto _179
	}

	_pParent = _221sqlite3FindTable(tls, _db, *(*uintptr)(unsafe.Pointer(_22pFK + 16)), _zDb)
	if _pParent != 0 {
		goto _180
	}

	goto _178

_180:
	*(*uintptr)(unsafe.Pointer(_24pIdx)) = null
	_1574sqlite3TableLock(tls, _pParse, _iDb, *(*int32)(unsafe.Pointer(_pParent + 56)), uint8(0), *(*uintptr)(unsafe.Pointer(_pParent)))
	_x = _1649sqlite3FkLocateIndex(tls, _pParse, _pParent, _22pFK, _24pIdx, null)
	if _x != int32(0) {
		goto _181
	}

	if (*(*uintptr)(unsafe.Pointer(_24pIdx))) != 0 {
		goto _183
	}

	_1647sqlite3OpenTable(tls, _pParse, _25i, _iDb, _pParent, int32(104))
	goto _184

_183:
	_1241sqlite3VdbeAddOp3(tls, _v, int32(104), _25i, *(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_24pIdx))) + 88)), _iDb)
	_1589sqlite3VdbeSetP4KeyInfo(tls, _pParse, *(*uintptr)(unsafe.Pointer(_24pIdx)))
_184:
	goto _182

_181:
	_27k = null
	goto _179

_182:
_178:
	_25i++
	_22pFK = *(*uintptr)(unsafe.Pointer(_22pFK + 8))
	goto _177

_179:
	if _22pFK == 0 {
		goto _185
	}

	goto _172

_185:
	if (*(*int32)(unsafe.Pointer(_pParse + 52))) >= _25i {
		goto _186
	}

	*(*int32)(unsafe.Pointer(_pParse + 52)) = _25i
_186:
	_addrTop = _1489sqlite3VdbeAddOp1(tls, _v, int32(37), int32(0))
	_25i = int32(1)
	_22pFK = *(*uintptr)(unsafe.Pointer(_23pTab + 32))
_187:
	if _22pFK == 0 {
		goto _189
	}

	_pParent = _221sqlite3FindTable(tls, _db, *(*uintptr)(unsafe.Pointer(_22pFK + 16)), _zDb)
	*(*uintptr)(unsafe.Pointer(_24pIdx)) = null
	*(*uintptr)(unsafe.Pointer(_aiCols)) = null
	if _pParent == 0 {
		goto _190
	}

	_x = _1649sqlite3FkLocateIndex(tls, _pParse, _pParent, _22pFK, _24pIdx, _aiCols)

_190:
	_addrOk = _1541sqlite3VdbeMakeLabel(tls, _v)
	_26j = int32(0)
_191:
	if _26j >= (*(*int32)(unsafe.Pointer(_22pFK + 40))) {
		goto _193
	}

	_iCol = func() int32 {
		if (*(*uintptr)(unsafe.Pointer(_aiCols))) != 0 {
			return *(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_aiCols))) + 4*uintptr(_26j)))
		}
		return *(*int32)(unsafe.Pointer((_22pFK + 64) + 16*uintptr(_26j)))
	}()
	_1591sqlite3ExprCodeGetColumnOfTable(tls, _v, _23pTab, int32(0), _iCol, _regRow+_26j)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(50), _regRow+_26j, _addrOk)
	_26j++
	goto _191

_193:
	if (*(*uintptr)(unsafe.Pointer(_24pIdx))) == 0 {
		goto _194
	}

	_1475sqlite3VdbeAddOp4(tls, _v, int32(99), _regRow, *(*int32)(unsafe.Pointer(_22pFK + 40)), _regKey, _1593sqlite3IndexAffinityStr(tls, _db, *(*uintptr)(unsafe.Pointer(_24pIdx))), *(*int32)(unsafe.Pointer(_22pFK + 40)))
	_1071sqlite3VdbeAddOp4Int(tls, _v, int32(30), _25i, _addrOk, _regKey, int32(0))
	goto _195

_194:
	if _pParent == 0 {
		goto _196
	}

	_jmp = _1496sqlite3VdbeCurrentAddr(tls, _v) + int32(2)
	_1241sqlite3VdbeAddOp3(tls, _v, int32(31), _25i, _jmp, _regRow)
	_1479sqlite3VdbeGoto(tls, _v, _addrOk)

_196:
_195:
	if ((*(*uint32)(unsafe.Pointer(_23pTab + 64))) & uint32(0x20)) != uint32(0) {
		goto _197
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(123), int32(0), _regResult+int32(1))
	goto _198

_197:
	_1240sqlite3VdbeAddOp2(tls, _v, int32(70), int32(0), _regResult+int32(1))
_198:
	_1645sqlite3VdbeMultiLoad(tls, _v, _regResult+int32(2), ts+26973 /* "siX" */, *(*uintptr)(unsafe.Pointer(_22pFK + 16)), _25i-int32(1))
	_1240sqlite3VdbeAddOp2(tls, _v, int32(78), _regResult, int32(4))
	_1569sqlite3VdbeResolveLabel(tls, _v, _addrOk)
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_aiCols)))
	_25i++
	_22pFK = *(*uintptr)(unsafe.Pointer(_22pFK + 8))
	goto _187

_189:
	_1240sqlite3VdbeAddOp2(tls, _v, int32(7), int32(0), _addrTop+int32(1))
	_1474sqlite3VdbeJumpHere(tls, _v, _addrTop)
	goto _171

_172:
	goto _15

_39:
	if _zRight == 0 {
		goto _199
	}

	_1650sqlite3RegisterLikeFunctions(tls, _db, int32(_1087sqlite3GetBoolean(tls, _zRight, uint8(0))))
_199:
	goto _15

_40:
	_isQuick = bool2int(int32(*(*uint8)(unsafe.Pointer(_215sqlite3UpperToLower + uintptr(uint8(*(*int8)(unsafe.Pointer(_zLeft))))))) == int32('q'))

	if (*(*uintptr)(unsafe.Pointer(_pId2))) != 0 {
		goto _200
	}

	_iDb = int32(-1)
_200:
	*(*int32)(unsafe.Pointer(_pParse + 56)) = int32(6)
	*(*int32)(unsafe.Pointer(_mxErr)) = int32(100)
	if _zRight == 0 {
		goto _201
	}

	_1004sqlite3GetInt32(tls, _zRight, _mxErr)
	if (*(*int32)(unsafe.Pointer(_mxErr))) > int32(0) {
		goto _202
	}

	*(*int32)(unsafe.Pointer(_mxErr)) = int32(100)
_202:
_201:
	_1240sqlite3VdbeAddOp2(tls, _v, int32(67), (*(*int32)(unsafe.Pointer(_mxErr)))-int32(1), int32(1))
	_28i = int32(0)
_203:
	if _28i >= (*(*int32)(unsafe.Pointer(_db + 40))) {
		goto _205
	}

	_cnt = int32(0)
	_mxIdx = int32(0)

	goto _206

	goto _204

_206:
	if _iDb < int32(0) || _28i == _iDb {
		goto _207
	}

	goto _204

_207:
	_1487sqlite3CodeVerifySchema(tls, _pParse, _28i)

	_pTbls = (*(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_28i)) + 24))) + 8
	_cnt = int32(0)
	_31x = *(*uintptr)(unsafe.Pointer(_pTbls + 8))
_208:
	if _31x == 0 {
		goto _210
	}

	_32pTab = *(*uintptr)(unsafe.Pointer(_31x + 16))
	if ((*(*uint32)(unsafe.Pointer(_32pTab + 64))) & uint32(0x20)) != uint32(0) {
		goto _211
	}

	_cnt++
_211:
	_nIdx = int32(0)
	_33pIdx = *(*uintptr)(unsafe.Pointer(_32pTab + 16))
_212:
	if _33pIdx == 0 {
		goto _214
	}

	_cnt++
	_33pIdx = *(*uintptr)(unsafe.Pointer(_33pIdx + 40))
	_nIdx++
	goto _212

_214:
	if _nIdx <= _mxIdx {
		goto _215
	}

	_mxIdx = _nIdx
_215:
	_31x = *(*uintptr)(unsafe.Pointer(_31x))
	goto _208

_210:
	_aRoot = _373sqlite3DbMallocRawNN(tls, _db, uint64(uint64(4)*uint64(_cnt+int32(1))))
	if _aRoot != 0 {
		goto _216
	}

	goto _205

_216:
	_cnt = int32(0)
	_31x = *(*uintptr)(unsafe.Pointer(_pTbls + 8))
_217:
	if _31x == 0 {
		goto _219
	}

	_34pTab = *(*uintptr)(unsafe.Pointer(_31x + 16))
	if ((*(*uint32)(unsafe.Pointer(_34pTab + 64))) & uint32(0x20)) != uint32(0) {
		goto _220
	}

	*(*int32)(unsafe.Pointer(_aRoot + 4*uintptr(preinc2(&_cnt)))) = *(*int32)(unsafe.Pointer(_34pTab + 56))
_220:
	_35pIdx = *(*uintptr)(unsafe.Pointer(_34pTab + 16))
_221:
	if _35pIdx == 0 {
		goto _223
	}

	*(*int32)(unsafe.Pointer(_aRoot + 4*uintptr(preinc2(&_cnt)))) = *(*int32)(unsafe.Pointer(_35pIdx + 88))
	_35pIdx = *(*uintptr)(unsafe.Pointer(_35pIdx + 40))
	goto _221

_223:
	_31x = *(*uintptr)(unsafe.Pointer(_31x))
	goto _217

_219:
	*(*int32)(unsafe.Pointer(_aRoot)) = _cnt
	*(*int32)(unsafe.Pointer(_pParse + 56)) = func() int32 {
		if (*(*int32)(unsafe.Pointer(_pParse + 56))) > (int32(8) + _mxIdx) {
			return *(*int32)(unsafe.Pointer(_pParse + 56))
		}
		return int32(8) + _mxIdx
	}()
	_1536sqlite3ClearTempRegCache(tls, _pParse)
	_1475sqlite3VdbeAddOp4(tls, _v, int32(142), int32(2), _cnt, int32(1), _aRoot, int32(-15))
	_1072sqlite3VdbeChangeP5(tls, _v, uint16(uint8(_28i)))
	_30addr = _1489sqlite3VdbeAddOp1(tls, _v, int32(50), int32(2))
	_1475sqlite3VdbeAddOp4(tls, _v, int32(97), int32(0), int32(3), int32(0), _226sqlite3MPrintf(tls, _db, ts+26977 /* "*** in database %s ***\n" */, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_28i)))), int32(-7))
	_1241sqlite3VdbeAddOp3(tls, _v, int32(93), int32(2), int32(3), int32(3))
	_1651integrityCheckResultRow(tls, _v)
	_1474sqlite3VdbeJumpHere(tls, _v, _30addr)
	_31x = *(*uintptr)(unsafe.Pointer(_pTbls + 8))
_224:
	if _31x == 0 {
		goto _226
	}

	_36pTab = *(*uintptr)(unsafe.Pointer(_31x + 16))
	_pPrior = 0
	_r1 = int32(-1)
	if (*(*int32)(unsafe.Pointer(_36pTab + 56))) >= int32(1) {
		goto _227
	}

	goto _225

_227:
	_38pPk = func() uintptr {
		if ((*(*uint32)(unsafe.Pointer(_36pTab + 64))) & uint32(0x20)) == uint32(0) {
			return null
		}
		return _1060sqlite3PrimaryKeyIndex(tls, _36pTab)
	}()
	_1559sqlite3ExprCacheClear(tls, _pParse)
	_1594sqlite3OpenTableAndIndices(tls, _pParse, _36pTab, int32(104), uint8(0), int32(1), null, _iDataCur, _iIdxCur)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(67), int32(0), int32(7))
	_29j = int32(0)
	_37pIdx = *(*uintptr)(unsafe.Pointer(_36pTab + 16))
_228:
	if _37pIdx == 0 {
		goto _230
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(67), int32(0), int32(8)+_29j)
	_37pIdx = *(*uintptr)(unsafe.Pointer(_37pIdx + 40))
	_29j++
	goto _228

_230:
	_1240sqlite3VdbeAddOp2(tls, _v, int32(37), *(*int32)(unsafe.Pointer(_iDataCur)), int32(0))
	_loopTop = _1240sqlite3VdbeAddOp2(tls, _v, int32(80), int32(7), int32(1))
	_29j = int32(0)
_231:
	if _29j >= int32(*(*int16)(unsafe.Pointer(_36pTab + 70))) {
		goto _233
	}

	if _29j != int32(*(*int16)(unsafe.Pointer(_36pTab + 68))) {
		goto _234
	}

	goto _232

_234:
	if int32(*(*uint8)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_36pTab + 8))) + 32*uintptr(_29j)) + 24))) != int32(0) {
		goto _235
	}

	goto _232

_235:
	_1591sqlite3ExprCodeGetColumnOfTable(tls, _v, _36pTab, *(*int32)(unsafe.Pointer(_iDataCur)), _29j, int32(3))
	_1072sqlite3VdbeChangeP5(tls, _v, uint16(0x80))
	_jmp2 = _1489sqlite3VdbeAddOp1(tls, _v, int32(51), int32(3))
	_zErr = _226sqlite3MPrintf(tls, _db, ts+27001 /* "NULL value in %s.%s" */, *(*uintptr)(unsafe.Pointer(_36pTab)), *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_36pTab + 8))) + 32*uintptr(_29j))))
	_1475sqlite3VdbeAddOp4(tls, _v, int32(97), int32(0), int32(3), int32(0), _zErr, int32(-7))
	_1651integrityCheckResultRow(tls, _v)
	_1474sqlite3VdbeJumpHere(tls, _v, _jmp2)

_232:
	_29j++
	goto _231

_233:
	if (*(*uintptr)(unsafe.Pointer(_36pTab + 48))) == 0 || ((*(*uint32)(unsafe.Pointer(_db + 48)))&uint32(0x200)) != uint32(0) {
		goto _236
	}

	_pCheck = _1518sqlite3ExprListDup(tls, _db, *(*uintptr)(unsafe.Pointer(_36pTab + 48)), int32(0))
	if int32(*(*uint8)(unsafe.Pointer(_db + 97))) != int32(0) {
		goto _237
	}

	_addrCkFault = _1541sqlite3VdbeMakeLabel(tls, _v)
	_addrCkOk = _1541sqlite3VdbeMakeLabel(tls, _v)
	*(*int32)(unsafe.Pointer(_pParse + 68)) = (*(*int32)(unsafe.Pointer(_iDataCur))) + int32(1)
	_1652sqlite3ExprCachePush(tls, _pParse)
	_40k = (*(*int32)(unsafe.Pointer(_pCheck))) - int32(1)
_238:
	if _40k <= int32(0) {
		goto _240
	}

	_1571sqlite3ExprIfFalse(tls, _pParse, *(*uintptr)(unsafe.Pointer((_pCheck + 8) + 32*uintptr(_40k))), _addrCkFault, int32(0))
	_40k--
	goto _238

_240:
	_1653sqlite3ExprIfTrue(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pCheck + 8)), _addrCkOk, int32(0x10))
	_1569sqlite3VdbeResolveLabel(tls, _v, _addrCkFault)
	*(*int32)(unsafe.Pointer(_pParse + 68)) = int32(0)
	_39zErr = _226sqlite3MPrintf(tls, _db, ts+27021 /* "CHECK constraint failed in %s" */, *(*uintptr)(unsafe.Pointer(_36pTab)))
	_1475sqlite3VdbeAddOp4(tls, _v, int32(97), int32(0), int32(3), int32(0), _39zErr, int32(-7))
	_1651integrityCheckResultRow(tls, _v)
	_1569sqlite3VdbeResolveLabel(tls, _v, _addrCkOk)
	_1654sqlite3ExprCachePop(tls, _pParse)
_237:
	_551sqlite3ExprListDelete(tls, _db, _pCheck)
_236:
	if _isQuick != 0 {
		goto _241
	}

	_1241sqlite3VdbeAddOp3(tls, _v, int32(96), *(*int32)(unsafe.Pointer(_iDataCur)), int32(*(*int16)(unsafe.Pointer(_36pTab + 70)))-int32(1), int32(3))
	_1072sqlite3VdbeChangeP5(tls, _v, uint16(0x80))
	_29j = int32(0)
	_37pIdx = *(*uintptr)(unsafe.Pointer(_36pTab + 16))
_242:
	if _37pIdx == 0 {
		goto _244
	}

	_ckUniq = _1541sqlite3VdbeMakeLabel(tls, _v)
	if _38pPk != _37pIdx {
		goto _245
	}

	goto _243

_245:
	_r1 = _1655sqlite3GenerateIndexKey(tls, _pParse, _37pIdx, *(*int32)(unsafe.Pointer(_iDataCur)), int32(0), int32(0), _jmp3, _pPrior, _r1)
	_pPrior = _37pIdx
	_1240sqlite3VdbeAddOp2(tls, _v, int32(80), int32(8)+_29j, int32(1))
	_41jmp2 = _1071sqlite3VdbeAddOp4Int(tls, _v, int32(30), (*(*int32)(unsafe.Pointer(_iIdxCur)))+_29j, _ckUniq, _r1, int32(*(*uint16)(unsafe.Pointer(_37pIdx + 96))))
	_1648sqlite3VdbeLoadString(tls, _v, int32(3), ts+27051 /* "row " */)
	_1241sqlite3VdbeAddOp3(tls, _v, int32(93), int32(7), int32(3), int32(3))
	_1648sqlite3VdbeLoadString(tls, _v, int32(4), ts+27056 /* " missing from index " */)
	_1241sqlite3VdbeAddOp3(tls, _v, int32(93), int32(4), int32(3), int32(3))
	_jmp5 = _1648sqlite3VdbeLoadString(tls, _v, int32(4), *(*uintptr)(unsafe.Pointer(_37pIdx)))
	_1241sqlite3VdbeAddOp3(tls, _v, int32(93), int32(4), int32(3), int32(3))
	_jmp4 = _1651integrityCheckResultRow(tls, _v)
	_1474sqlite3VdbeJumpHere(tls, _v, _41jmp2)
	if int32(*(*uint8)(unsafe.Pointer(_37pIdx + 98))) == int32(0) {
		goto _246
	}

	_uniqOk = _1541sqlite3VdbeMakeLabel(tls, _v)
	_kk = int32(0)
_247:
	if _kk >= int32(*(*uint16)(unsafe.Pointer(_37pIdx + 94))) {
		goto _249
	}

	_42iCol = int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_37pIdx + 8))) + 2*uintptr(_kk))))

	if _42iCol < int32(0) || (*(*uint8)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_36pTab + 8))) + 32*uintptr(_42iCol)) + 24))) == 0 {
		goto _250
	}

	goto _248

_250:
	_1240sqlite3VdbeAddOp2(tls, _v, int32(50), _r1+_kk, _uniqOk)

_248:
	_kk++
	goto _247

_249:
	_jmp6 = _1489sqlite3VdbeAddOp1(tls, _v, int32(7), (*(*int32)(unsafe.Pointer(_iIdxCur)))+_29j)
	_1479sqlite3VdbeGoto(tls, _v, _uniqOk)
	_1474sqlite3VdbeJumpHere(tls, _v, _jmp6)
	_1071sqlite3VdbeAddOp4Int(tls, _v, int32(39), (*(*int32)(unsafe.Pointer(_iIdxCur)))+_29j, _uniqOk, _r1, int32(*(*uint16)(unsafe.Pointer(_37pIdx + 94))))
	_1648sqlite3VdbeLoadString(tls, _v, int32(3), ts+27077 /* "non-unique entry in index " */)
	_1479sqlite3VdbeGoto(tls, _v, _jmp5)
	_1569sqlite3VdbeResolveLabel(tls, _v, _uniqOk)
_246:
	_1474sqlite3VdbeJumpHere(tls, _v, _jmp4)
	_1656sqlite3ResolvePartIdxLabel(tls, _pParse, *(*int32)(unsafe.Pointer(_jmp3)))

_243:
	_37pIdx = *(*uintptr)(unsafe.Pointer(_37pIdx + 40))
	_29j++
	goto _242

_244:
_241:
	_1240sqlite3VdbeAddOp2(tls, _v, int32(7), *(*int32)(unsafe.Pointer(_iDataCur)), _loopTop)
	_1474sqlite3VdbeJumpHere(tls, _v, _loopTop-int32(1))
	if _isQuick != 0 {
		goto _251
	}

	_1648sqlite3VdbeLoadString(tls, _v, int32(2), ts+27104 /* "wrong # of entries in index " */)
	_29j = int32(0)
	_37pIdx = *(*uintptr)(unsafe.Pointer(_36pTab + 16))
_252:
	if _37pIdx == 0 {
		goto _254
	}

	if _38pPk != _37pIdx {
		goto _255
	}

	goto _253

_255:
	_1240sqlite3VdbeAddOp2(tls, _v, int32(100), (*(*int32)(unsafe.Pointer(_iIdxCur)))+_29j, int32(3))
	_30addr = _1241sqlite3VdbeAddOp3(tls, _v, int32(53), int32(8)+_29j, int32(0), int32(3))
	_1072sqlite3VdbeChangeP5(tls, _v, uint16(0x90))
	_1648sqlite3VdbeLoadString(tls, _v, int32(4), *(*uintptr)(unsafe.Pointer(_37pIdx)))
	_1241sqlite3VdbeAddOp3(tls, _v, int32(93), int32(4), int32(2), int32(3))
	_1651integrityCheckResultRow(tls, _v)
	_1474sqlite3VdbeJumpHere(tls, _v, _30addr)

_253:
	_37pIdx = *(*uintptr)(unsafe.Pointer(_37pIdx + 40))
	_29j++
	goto _252

_254:
_251:
_225:
	_31x = *(*uintptr)(unsafe.Pointer(_31x))
	goto _224

_226:
_204:
	_28i++
	goto _203

_205:
	_43aOp = _1073sqlite3VdbeAddOpList(tls, _v, int32(7), _1628endCode, _1627iLn)
	if _43aOp == 0 {
		goto _256
	}

	*(*int32)(unsafe.Pointer(_43aOp + 8)) = int32(1) - (*(*int32)(unsafe.Pointer(_mxErr)))
	*(*int8)(unsafe.Pointer((_43aOp + 48) + 1)) = int8(-1)
	*(*uintptr)(unsafe.Pointer((_43aOp + 48) + 16)) = ts + 27133 /* "ok" */
	*(*int8)(unsafe.Pointer((_43aOp + 120) + 1)) = int8(-1)
	*(*uintptr)(unsafe.Pointer((_43aOp + 120) + 16)) = _123sqlite3ErrStr(tls, int32(11))
_256:
	_1657sqlite3VdbeChangeP3(tls, _v, uint32(0), _1496sqlite3VdbeCurrentAddr(tls, _v)-int32(2))
	goto _15

_41:
	if _zRight != 0 {
		goto _257
	}

	if _1237sqlite3ReadSchema(tls, _pParse) == 0 {
		goto _259
	}

	goto _pragma_out

_259:
	_1633returnSingleText(tls, _v, *(*uintptr)(unsafe.Pointer(_1629encnames + 16*uintptr(*(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pParse)) + 94))))))
	goto _258

_257:
	if (int32(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_db + 32)) + 24))) + 114)))&int32(0x1)) == int32(0x1) && (int32(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_db + 32)) + 24))) + 114)))&int32(0x4)) != int32(0x4) {
		goto _260
	}

	_pEnc = _1629encnames
_261:
	if (*(*uintptr)(unsafe.Pointer(_pEnc))) == 0 {
		goto _263
	}

	if int32(0) != _110sqlite3StrICmp(tls, _zRight, *(*uintptr)(unsafe.Pointer(_pEnc))) {
		goto _264
	}

	*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_db + 32)) + 24))) + 113)) = set23(&*(*uint8)(unsafe.Pointer(_db + 94)), uint8(func() int32 {
		if (*(*uint8)(unsafe.Pointer(_pEnc + 8))) != 0 {
			return int32(*(*uint8)(unsafe.Pointer(_pEnc + 8)))
		}
		return int32(2)
	}()))
	goto _263

_264:
	_pEnc += 16
	goto _261

_263:
	if (*(*uintptr)(unsafe.Pointer(_pEnc))) != 0 {
		goto _265
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+27136 /* "unsupported encoding: %s" */, _zRight)
_265:
_260:
_258:
	goto _15

_42:
	_iCookie = int32(*(*uint32)(unsafe.Pointer(_pPragma + 12)))
	_1074sqlite3VdbeUsesBtree(tls, _v, _iDb)
	if _zRight == 0 || (int32(*(*uint8)(unsafe.Pointer(_pPragma + 9)))&int32(0x8)) != int32(0) {
		goto _266
	}

	_44aOp = _1073sqlite3VdbeAddOpList(tls, _v, int32(2), _1630setCookie, int32(0))

	goto _268

	goto _15

_268:
	*(*int32)(unsafe.Pointer(_44aOp + 4)) = _iDb
	*(*int32)(unsafe.Pointer((_44aOp + 24) + 4)) = _iDb
	*(*int32)(unsafe.Pointer((_44aOp + 24) + 8)) = _iCookie
	*(*int32)(unsafe.Pointer((_44aOp + 24) + 12)) = _1002sqlite3Atoi(tls, _zRight)
	goto _267

_266:
	_45aOp = _1073sqlite3VdbeAddOpList(tls, _v, int32(3), _1631readCookie, int32(0))

	goto _269

	goto _15

_269:
	*(*int32)(unsafe.Pointer(_45aOp + 4)) = _iDb
	*(*int32)(unsafe.Pointer((_45aOp + 24) + 4)) = _iDb
	*(*int32)(unsafe.Pointer((_45aOp + 24) + 12)) = _iCookie
	_1658sqlite3VdbeReusable(tls, _v)
_267:
	goto _15

_43:
	_46i = int32(0)
	*(*int32)(unsafe.Pointer(_pParse + 56)) = int32(1)
_270:
	if set4(&_zOpt, Xsqlite3_compileoption_get(tls, postinc7(&_46i))) == 0 {
		goto _271
	}

	_1648sqlite3VdbeLoadString(tls, _v, int32(1), _zOpt)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(78), int32(1), int32(1))
	goto _270

_271:
	_1658sqlite3VdbeReusable(tls, _v)
	goto _15

_44:
	_iBt = func() int32 {
		if (*(*uintptr)(unsafe.Pointer(_pId2))) != 0 {
			return _iDb
		}
		return int32(10)
	}()
	_47eMode = int32(0)
	if _zRight == 0 {
		goto _272
	}

	if _110sqlite3StrICmp(tls, _zRight, ts+2700 /* "full" */) != int32(0) {
		goto _273
	}

	_47eMode = int32(1)
	goto _274

_273:
	if _110sqlite3StrICmp(tls, _zRight, ts+27161 /* "restart" */) != int32(0) {
		goto _275
	}

	_47eMode = int32(2)
	goto _276

_275:
	if _110sqlite3StrICmp(tls, _zRight, ts+23428 /* "truncate" */) != int32(0) {
		goto _277
	}

	_47eMode = int32(3)
_277:
_276:
_274:
_272:
	*(*int32)(unsafe.Pointer(_pParse + 56)) = int32(3)
	_1241sqlite3VdbeAddOp3(tls, _v, int32(8), _iBt, _47eMode, int32(1))
	_1240sqlite3VdbeAddOp2(tls, _v, int32(78), int32(1), int32(3))
	goto _15

_45:
	if _zRight == 0 {
		goto _278
	}

	Xsqlite3_wal_autocheckpoint(tls, _db, _1002sqlite3Atoi(tls, _zRight))
_278:
	_1635returnSingleInt(tls, _v, int64(func() int32 {
		if (*(*uintptr)(unsafe.Pointer(_db + 296))) == fp54(_525sqlite3WalDefaultHook) {
			return int32(int64(*(*uintptr)(unsafe.Pointer(_db + 304))))
		}
		return int32(0)
	}()))
	goto _15

_46:
	Xsqlite3_db_release_memory(tls, _db)
	goto _15

_47:
	if _zRight == 0 {
		goto _279
	}

	_opMask = uint32(_1002sqlite3Atoi(tls, _zRight))
	if (_opMask & uint32(0x2)) != uint32(0) {
		goto _281
	}

	goto _15

_281:
	goto _280

_279:
	_opMask = uint32(0xfffe)
_280:
	_iTabCur = postinc7(&(*(*int32)(unsafe.Pointer(_pParse + 52))))
	_iDbLast = func() int32 {
		if _zDb != 0 {
			return _iDb
		}
		return (*(*int32)(unsafe.Pointer(_db + 40))) - int32(1)
	}()
_282:
	if _iDb > _iDbLast {
		goto _284
	}

	if _iDb != int32(1) {
		goto _285
	}

	goto _283

_285:
	_1487sqlite3CodeVerifySchema(tls, _pParse, _iDb)
	_pSchema = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)) + 24))
	_48k = *(*uintptr)(unsafe.Pointer((_pSchema + 8) + 8))
_286:
	if _48k == 0 {
		goto _288
	}

	_49pTab = *(*uintptr)(unsafe.Pointer(_48k + 16))
	if ((*(*uint32)(unsafe.Pointer(_49pTab + 64))) & uint32(0x100)) != uint32(0) {
		goto _289
	}

	goto _287

_289:
	_szThreshold = int16(int32(*(*int16)(unsafe.Pointer(_49pTab + 72))) + int32(46))

	_50pIdx = *(*uintptr)(unsafe.Pointer(_49pTab + 16))
_290:
	if _50pIdx == 0 {
		goto _292
	}

	if (uint32((*(*uint8)(unsafe.Pointer(_50pIdx + 99)))>>7) << 31 >> 31) != 0 {
		goto _293
	}

	_szThreshold = int16(0)
	goto _292

_293:
	_50pIdx = *(*uintptr)(unsafe.Pointer(_50pIdx + 40))
	goto _290

_292:
	if _szThreshold == 0 {
		goto _294
	}

	_1647sqlite3OpenTable(tls, _pParse, _iTabCur, _iDb, _49pTab, int32(104))
	_1241sqlite3VdbeAddOp3(tls, _v, int32(34), _iTabCur, int32(uint32(_1496sqlite3VdbeCurrentAddr(tls, _v)+int32(2))+(_opMask&uint32(1))), int32(_szThreshold))
_294:
	_zSubSql = _226sqlite3MPrintf(tls, _db, ts+27169 /* "ANALYZE \"%w\".\"%w\"" */, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb))), *(*uintptr)(unsafe.Pointer(_49pTab)))
	if (_opMask & uint32(0x1)) == 0 {
		goto _295
	}

	_51r1 = _1562sqlite3GetTempReg(tls, _pParse)
	_1475sqlite3VdbeAddOp4(tls, _v, int32(97), int32(0), _51r1, int32(0), _zSubSql, int32(-7))
	_1240sqlite3VdbeAddOp2(tls, _v, int32(78), _51r1, int32(1))
	goto _296

_295:
	_1475sqlite3VdbeAddOp4(tls, _v, int32(136), int32(0), int32(0), int32(0), _zSubSql, int32(-7))
_296:
_287:
	_48k = *(*uintptr)(unsafe.Pointer(_48k))
	goto _286

_288:
_283:
	_iDb++
	goto _282

_284:
	_1473sqlite3VdbeAddOp0(tls, _v, int32(151))
	goto _15

_48:
	if _zRight == 0 {
		goto _297
	}

	Xsqlite3_busy_timeout(tls, _db, _1002sqlite3Atoi(tls, _zRight))
_297:
	_1635returnSingleInt(tls, _v, int64(*(*int32)(unsafe.Pointer(_db + 640))))
	goto _15

_49:
	if _zRight == 0 || _1088sqlite3DecOrHexToI64(tls, _zRight, _N) != int32(0) {
		goto _298
	}

	Xsqlite3_soft_heap_limit64(tls, *(*int64)(unsafe.Pointer(_N)))
_298:
	_1635returnSingleInt(tls, _v, Xsqlite3_soft_heap_limit64(tls, int64(-1)))
	goto _15

_50:
	if _zRight == 0 || _1088sqlite3DecOrHexToI64(tls, _zRight, _52N) != int32(0) || (*(*int64)(unsafe.Pointer(_52N))) < int64(0) {
		goto _299
	}

	Xsqlite3_limit(tls, _db, int32(11), int32((*(*int64)(unsafe.Pointer(_52N)))&int64(0x7fffffff)))
_299:
	_1635returnSingleInt(tls, _v, int64(Xsqlite3_limit(tls, _db, int32(11), int32(-1))))
	goto _15

_15:
	if int32(*(*uint8)(unsafe.Pointer(_pPragma + 9)))&int32(0x4) == 0 || _zRight == 0 {
		goto _300
	}

_300:
	goto _pragma_out
_pragma_out:
	_181sqlite3DbFree(tls, _db, _zLeft)
	_181sqlite3DbFree(tls, _db, _zRight)
}

// _1367sqlite3FinishTrigger is defined at sqlite3.c:124222:21
func _1367sqlite3FinishTrigger(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pStepList uintptr /* *TTriggerStep = STriggerStep */, _pAll uintptr /* *TToken = SToken */) {
	esc := crt.MustMalloc(64)
	var (
		_pTrig     uintptr // *TTrigger = STrigger
		_zName     uintptr // *int8
		_db        uintptr // *Tsqlite3 = Ssqlite3
		_sFix      = esc   // *TDbFixer = SDbFixer
		_iDb       int32
		_nameToken = esc + 48 // *TToken = SToken
		_v         uintptr    // *TVdbe = SVdbe
		_z         uintptr    // *int8
		_pLink     uintptr    // *TTrigger = STrigger
		_pHash     uintptr    // *THash = SHash
		_pTab      uintptr    // *TTable = STable
	)
	defer crt.Free(esc)
	_pTrig = *(*uintptr)(unsafe.Pointer(_pParse + 520))
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	*(*uintptr)(unsafe.Pointer(_pParse + 520)) = null
	if *(*int32)(unsafe.Pointer(_pParse + 48)) == 0 && _pTrig != 0 {
		goto _1
	}

	goto _triggerfinish_cleanup

_1:
	_zName = *(*uintptr)(unsafe.Pointer(_pTrig))
	_iDb = _1069sqlite3SchemaToIndex(tls, *(*uintptr)(unsafe.Pointer(_pParse)), *(*uintptr)(unsafe.Pointer(_pTrig + 40)))
	*(*uintptr)(unsafe.Pointer(_pTrig + 56)) = _pStepList
_2:
	if _pStepList == 0 {
		goto _3
	}

	*(*uintptr)(unsafe.Pointer(_pStepList + 8)) = _pTrig
	_pStepList = *(*uintptr)(unsafe.Pointer(_pStepList + 56))
	goto _2

_3:
	_1516sqlite3TokenInit(tls, _nameToken, *(*uintptr)(unsafe.Pointer(_pTrig)))
	_1513sqlite3FixInit(tls, _sFix, _pParse, _iDb, ts+12448 /* "trigger" */, _nameToken)
	if _1659sqlite3FixTriggerStep(tls, _sFix, *(*uintptr)(unsafe.Pointer(_pTrig + 56))) == 0 && _1660sqlite3FixExpr(tls, _sFix, *(*uintptr)(unsafe.Pointer(_pTrig + 24))) == 0 {
		goto _4
	}

	goto _triggerfinish_cleanup

_4:
	if (*(*uint8)(unsafe.Pointer((_db + 176) + 5))) != 0 {
		goto _5
	}

	_v = _1472sqlite3GetVdbe(tls, _pParse)
	if _v != 0 {
		goto _6
	}

	goto _triggerfinish_cleanup

_6:
	_1488sqlite3BeginWriteOperation(tls, _pParse, int32(0), _iDb)
	_z = _618sqlite3DbStrNDup(tls, _db, *(*uintptr)(unsafe.Pointer(_pAll)), uint64(*(*uint32)(unsafe.Pointer(_pAll + 8))))
	_1502sqlite3NestedParse(tls, _pParse, ts+27187 /* "INSERT INTO %Q.%s VALUES('trigge..." */, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb))), ts+5127 /* "sqlite_master" */, _zName, *(*uintptr)(unsafe.Pointer(_pTrig + 8)), _z)
	_181sqlite3DbFree(tls, _db, _z)
	_1503sqlite3ChangeCookie(tls, _pParse, _iDb)
	_1504sqlite3VdbeAddParseSchemaOp(tls, _v, _iDb, _226sqlite3MPrintf(tls, _db, ts+27251 /* "type='trigger' AND name='%q'" */, _zName))
_5:
	if (*(*uint8)(unsafe.Pointer((_db + 176) + 5))) == 0 {
		goto _7
	}

	_pLink = _pTrig
	_pHash = (*(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)) + 24))) + 56

	_pTrig = _841sqlite3HashInsert(tls, _pHash, _zName, _pTrig)
	if _pTrig == 0 {
		goto _8
	}

	_178sqlite3OomFault(tls, _db)
	goto _9

_8:
	if (*(*uintptr)(unsafe.Pointer(_pLink + 40))) != (*(*uintptr)(unsafe.Pointer(_pLink + 48))) {
		goto _10
	}

	_pTab = _424sqlite3HashFind(tls, (*(*uintptr)(unsafe.Pointer(_pLink + 48)))+8, *(*uintptr)(unsafe.Pointer(_pLink + 8)))

	*(*uintptr)(unsafe.Pointer(_pLink + 64)) = *(*uintptr)(unsafe.Pointer(_pTab + 104))
	*(*uintptr)(unsafe.Pointer(_pTab + 104)) = _pLink
_10:
_9:
_7:
	goto _triggerfinish_cleanup
_triggerfinish_cleanup:
	_429sqlite3DeleteTrigger(tls, _db, _pTrig)

	_776sqlite3DeleteTriggerStep(tls, _db, _pStepList)
}

// _1368sqlite3BeginTrigger is defined at sqlite3.c:124034:21
func _1368sqlite3BeginTrigger(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pName1 uintptr /* *TToken = SToken */, _pName2 uintptr /* *TToken = SToken */, _tr_tm int32, _op int32, _pColumns uintptr /* *TIdList = SIdList */, _pTableName uintptr /* *TSrcList = SSrcList */, _pWhen uintptr /* *TExpr = SExpr */, _isTemp int32, _noErr int32) {
	esc := crt.MustMalloc(64)
	var (
		_pTrigger uintptr // *TTrigger = STrigger
		_pTab     uintptr // *TTable = STable
		_zName    uintptr // *int8
		_db       uintptr // *Tsqlite3 = Ssqlite3
		_iDb      int32
		_pName    = esc      // **TToken = SToken
		_sFix     = esc + 16 // *TDbFixer = SDbFixer
		_iTabDb   int32
		_code     int32
		_zDb      uintptr // *int8
		_zDbTrig  uintptr // *int8
	)
	defer crt.Free(esc)
	_pTrigger = 0
	_zName = 0
	_db = *(*uintptr)(unsafe.Pointer(_pParse))

	if _isTemp == 0 {
		goto _1
	}

	if (*(*uint32)(unsafe.Pointer(_pName2 + 8))) <= uint32(0) {
		goto _3
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+27280 /* "temporary trigger may not have q..." */)
	goto _trigger_cleanup

_3:
	_iDb = int32(1)
	*(*uintptr)(unsafe.Pointer(_pName)) = _pName1
	goto _2

_1:
	_iDb = _1485sqlite3TwoPartName(tls, _pParse, _pName1, _pName2, _pName)
	if _iDb >= int32(0) {
		goto _4
	}

	goto _trigger_cleanup

_4:
_2:
	if _pTableName != 0 && (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _5
	}

	goto _trigger_cleanup

_5:
	if (*(*uint8)(unsafe.Pointer((_db + 176) + 5))) == 0 || _iDb == int32(1) {
		goto _6
	}

	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_pTableName + 8 + 8)))
	*(*uintptr)(unsafe.Pointer(_pTableName + 8 + 8)) = null
_6:
	_pTab = _1512sqlite3SrcListLookup(tls, _pParse, _pTableName)
	if int32(*(*uint8)(unsafe.Pointer((_db + 176) + 5))) != int32(0) || (*(*uint32)(unsafe.Pointer(_pName2 + 8))) != uint32(0) || _pTab == 0 || (*(*uintptr)(unsafe.Pointer(_pTab + 112))) != (*(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32) + 24))) {
		goto _7
	}

	_iDb = int32(1)
_7:
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _8
	}

	goto _trigger_cleanup

_8:
	_1513sqlite3FixInit(tls, _sFix, _pParse, _iDb, ts+12448 /* "trigger" */, *(*uintptr)(unsafe.Pointer(_pName)))
	if _1514sqlite3FixSrcList(tls, _sFix, _pTableName) == 0 {
		goto _9
	}

	goto _trigger_cleanup

_9:
	_pTab = _1512sqlite3SrcListLookup(tls, _pParse, _pTableName)
	if _pTab != 0 {
		goto _10
	}

	if int32(*(*uint8)(unsafe.Pointer((_db + 176) + 4))) != int32(1) {
		goto _11
	}

	*(*uint8)(unsafe.Pointer((_db + 176) + 6)) = uint8(1)
_11:
	goto _trigger_cleanup

_10:
	if *(*int32)(unsafe.Pointer(_pTab + 84)) == 0 {
		goto _12
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+27326 /* "cannot create triggers on virtua..." */)
	goto _trigger_cleanup

_12:
	_zName = _1482sqlite3NameFromToken(tls, _db, *(*uintptr)(unsafe.Pointer(_pName)))
	if _zName != 0 && int32(0) == _1486sqlite3CheckObjectName(tls, _pParse, _zName) {
		goto _13
	}

	goto _trigger_cleanup

_13:
	if _424sqlite3HashFind(tls, (*(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)) + 24)))+56, _zName) == 0 {
		goto _14
	}

	if _noErr != 0 {
		goto _15
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+27367 /* "trigger %T already exists" */, *(*uintptr)(unsafe.Pointer(_pName)))
	goto _16

_15:
	_1487sqlite3CodeVerifySchema(tls, _pParse, _iDb)
_16:
	goto _trigger_cleanup

_14:
	if Xsqlite3_strnicmp(tls, *(*uintptr)(unsafe.Pointer(_pTab)), ts+6844 /* "sqlite_" */, int32(7)) != int32(0) {
		goto _17
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+27393 /* "cannot create trigger on system ..." */)
	goto _trigger_cleanup

_17:
	if (*(*uintptr)(unsafe.Pointer(_pTab + 24))) == 0 || _tr_tm == int32(64) {
		goto _18
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+27431 /* "cannot create %s trigger on view..." */, func() uintptr {
		if _tr_tm == int32(33) {
			return ts + 16002 /* "BEFORE" */
		}
		return ts + 15961 /* "AFTER" */
	}(), _pTableName, int32(0))
	goto _trigger_cleanup

_18:
	if (*(*uintptr)(unsafe.Pointer(_pTab + 24))) != 0 || _tr_tm != int32(64) {
		goto _19
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+27468 /* "cannot create INSTEAD OF trigger..." */, _pTableName, int32(0))
	goto _trigger_cleanup

_19:
	_iTabDb = _1069sqlite3SchemaToIndex(tls, _db, *(*uintptr)(unsafe.Pointer(_pTab + 112)))
	_code = int32(7)
	_zDb = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iTabDb)))
	_zDbTrig = func() uintptr {
		if _isTemp != 0 {
			return *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32))
		}
		return _zDb
	}()
	if _iTabDb != int32(1) && _isTemp == 0 {
		goto _20
	}

	_code = int32(5)
_20:
	if _1480sqlite3AuthCheck(tls, _pParse, _code, _zName, *(*uintptr)(unsafe.Pointer(_pTab)), _zDbTrig) == 0 {
		goto _21
	}

	goto _trigger_cleanup

_21:
	if _1480sqlite3AuthCheck(tls, _pParse, int32(18), func() uintptr {
		if (1 != 0) && (_iTabDb == int32(1)) {
			return ts + 5250 /* "sqlite_temp_master" */
		}
		return ts + 5127 /* "sqlite_master" */
	}(), null, _zDb) == 0 {
		goto _22
	}

	goto _trigger_cleanup

_22:
	if _tr_tm != int32(64) {
		goto _23
	}

	_tr_tm = int32(33)
_23:
	_pTrigger = _295sqlite3DbMallocZero(tls, _db, uint64(72))
	if _pTrigger != 0 {
		goto _24
	}

	goto _trigger_cleanup

_24:
	*(*uintptr)(unsafe.Pointer(_pTrigger)) = _zName
	_zName = null
	*(*uintptr)(unsafe.Pointer(_pTrigger + 8)) = _183sqlite3DbStrDup(tls, _db, *(*uintptr)(unsafe.Pointer(_pTableName + 8 + 16)))
	*(*uintptr)(unsafe.Pointer(_pTrigger + 40)) = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)) + 24))
	*(*uintptr)(unsafe.Pointer(_pTrigger + 48)) = *(*uintptr)(unsafe.Pointer(_pTab + 112))
	*(*uint8)(unsafe.Pointer(_pTrigger + 16)) = uint8(_op)
	*(*uint8)(unsafe.Pointer(_pTrigger + 17)) = uint8(func() int32 {
		if _tr_tm == int32(33) {
			return int32(1)
		}
		return int32(2)
	}())
	*(*uintptr)(unsafe.Pointer(_pTrigger + 24)) = _1507sqlite3ExprDup(tls, _db, _pWhen, int32(0x1))
	*(*uintptr)(unsafe.Pointer(_pTrigger + 32)) = _1661sqlite3IdListDup(tls, _db, _pColumns)

	*(*uintptr)(unsafe.Pointer(_pParse + 520)) = _pTrigger
	goto _trigger_cleanup
_trigger_cleanup:
	_181sqlite3DbFree(tls, _db, _zName)
	_1339sqlite3SrcListDelete(tls, _db, _pTableName)
	_778sqlite3IdListDelete(tls, _db, _pColumns)
	_777sqlite3ExprDelete(tls, _db, _pWhen)
	if (*(*uintptr)(unsafe.Pointer(_pParse + 520))) != 0 {
		goto _25
	}

	_429sqlite3DeleteTrigger(tls, _db, _pTrigger)
	goto _26

_25:
_26:
}

// _1369sqlite3TriggerUpdateStep is defined at sqlite3.c:124375:28
func _1369sqlite3TriggerUpdateStep(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pTableName uintptr /* *TToken = SToken */, _pEList uintptr /* *TExprList = SExprList */, _pWhere uintptr /* *TExpr = SExpr */, _orconf uint8) (r uintptr /* *TTriggerStep = STriggerStep */) {
	var _pTriggerStep uintptr // *TTriggerStep = STriggerStep

	_pTriggerStep = _1662triggerStepAllocate(tls, _db, uint8(110), _pTableName)
	if _pTriggerStep == 0 {
		goto _1
	}

	*(*uintptr)(unsafe.Pointer(_pTriggerStep + 40)) = _1518sqlite3ExprListDup(tls, _db, _pEList, int32(0x1))
	*(*uintptr)(unsafe.Pointer(_pTriggerStep + 32)) = _1507sqlite3ExprDup(tls, _db, _pWhere, int32(0x1))
	*(*uint8)(unsafe.Pointer(_pTriggerStep + 1)) = _orconf
_1:
	_551sqlite3ExprListDelete(tls, _db, _pEList)
	_777sqlite3ExprDelete(tls, _db, _pWhere)
	return _pTriggerStep
}

// _1370sqlite3TriggerInsertStep is defined at sqlite3.c:124346:28
func _1370sqlite3TriggerInsertStep(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pTableName uintptr /* *TToken = SToken */, _pColumn uintptr /* *TIdList = SIdList */, _pSelect uintptr /* *TSelect = SSelect */, _orconf uint8) (r uintptr /* *TTriggerStep = STriggerStep */) {
	var _pTriggerStep uintptr // *TTriggerStep = STriggerStep

	_pTriggerStep = _1662triggerStepAllocate(tls, _db, uint8(108), _pTableName)
	if _pTriggerStep == 0 {
		goto _1
	}

	*(*uintptr)(unsafe.Pointer(_pTriggerStep + 16)) = _1529sqlite3SelectDup(tls, _db, _pSelect, int32(0x1))
	*(*uintptr)(unsafe.Pointer(_pTriggerStep + 48)) = _pColumn
	*(*uint8)(unsafe.Pointer(_pTriggerStep + 1)) = _orconf
	goto _2

_1:
	_778sqlite3IdListDelete(tls, _db, _pColumn)
_2:
	_1094sqlite3SelectDelete(tls, _db, _pSelect)
	return _pTriggerStep
}

// _1371sqlite3TriggerDeleteStep is defined at sqlite3.c:124400:28
func _1371sqlite3TriggerDeleteStep(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pTableName uintptr /* *TToken = SToken */, _pWhere uintptr /* *TExpr = SExpr */) (r uintptr /* *TTriggerStep = STriggerStep */) {
	var _pTriggerStep uintptr // *TTriggerStep = STriggerStep

	_pTriggerStep = _1662triggerStepAllocate(tls, _db, uint8(109), _pTableName)
	if _pTriggerStep == 0 {
		goto _1
	}

	*(*uintptr)(unsafe.Pointer(_pTriggerStep + 32)) = _1507sqlite3ExprDup(tls, _db, _pWhere, int32(0x1))
	*(*uint8)(unsafe.Pointer(_pTriggerStep + 1)) = uint8(10)
_1:
	_777sqlite3ExprDelete(tls, _db, _pWhere)
	return _pTriggerStep
}

// _1372sqlite3TriggerSelectStep is defined at sqlite3.c:124303:28
func _1372sqlite3TriggerSelectStep(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pSelect uintptr /* *TSelect = SSelect */) (r uintptr /* *TTriggerStep = STriggerStep */) {
	var _pTriggerStep uintptr // *TTriggerStep = STriggerStep

	_pTriggerStep = _295sqlite3DbMallocZero(tls, _db, uint64(72))
	if _pTriggerStep != 0 {
		goto _1
	}

	_1094sqlite3SelectDelete(tls, _db, _pSelect)
	return null

_1:
	*(*uint8)(unsafe.Pointer(_pTriggerStep)) = uint8(119)
	*(*uintptr)(unsafe.Pointer(_pTriggerStep + 16)) = _pSelect
	*(*uint8)(unsafe.Pointer(_pTriggerStep + 1)) = uint8(10)
	return _pTriggerStep
}

// _1373sqlite3DropTrigger is defined at sqlite3.c:124437:21
func _1373sqlite3DropTrigger(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pName uintptr /* *TSrcList = SSrcList */, _noErr int32) {
	var (
		_pTrigger uintptr // *TTrigger = STrigger
		_i        int32
		_zDb      uintptr // *int8
		_zName    uintptr // *int8
		_db       uintptr // *Tsqlite3 = Ssqlite3
		_j        int32
	)
	_pTrigger = 0
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _1
	}

	goto _drop_trigger_cleanup

_1:
	if int32(0) == _1237sqlite3ReadSchema(tls, _pParse) {
		goto _2
	}

	goto _drop_trigger_cleanup

_2:
	_zDb = *(*uintptr)(unsafe.Pointer(_pName + 8 + 8))
	_zName = *(*uintptr)(unsafe.Pointer(_pName + 8 + 16))

	_i = int32(0)
_3:
	if _i >= (*(*int32)(unsafe.Pointer(_db + 40))) {
		goto _5
	}

	_j = func() int32 {
		if _i < int32(2) {
			return _i ^ int32(1)
		}
		return _i
	}()
	if _zDb == 0 || _110sqlite3StrICmp(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_j))), _zDb) == 0 {
		goto _6
	}

	goto _4

_6:
	_pTrigger = _424sqlite3HashFind(tls, (*(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_j)) + 24)))+56, _zName)
	if _pTrigger == 0 {
		goto _7
	}

	goto _5

_7:
_4:
	_i++
	goto _3

_5:
	if _pTrigger != 0 {
		goto _8
	}

	if _noErr != 0 {
		goto _9
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+27514 /* "no such trigger: %S" */, _pName, int32(0))
	goto _10

_9:
	_1523sqlite3CodeVerifyNamedSchema(tls, _pParse, _zDb)
_10:
	*(*uint8)(unsafe.Pointer(_pParse + 29)) = uint8(1)
	goto _drop_trigger_cleanup

_8:
	_1663sqlite3DropTriggerPtr(tls, _pParse, _pTrigger)
	goto _drop_trigger_cleanup
_drop_trigger_cleanup:
	_1339sqlite3SrcListDelete(tls, _db, _pName)
}

// _1374sqlite3Attach is defined at sqlite3.c:100245:21
func _1374sqlite3Attach(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _p uintptr /* *TExpr = SExpr */, _pDbname uintptr /* *TExpr = SExpr */, _pKey uintptr /* *TExpr = SExpr */) {
	_1665codeAttach(tls, _pParse, int32(24), _1664attach_func, _p, _p, _pDbname, _pKey)
}

// _1375sqlite3Detach is defined at sqlite3.c:100226:21
func _1375sqlite3Detach(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pDbname uintptr /* *TExpr = SExpr */) {
	_1665codeAttach(tls, _pParse, int32(25), _1666detach_func, _pDbname, null, null, _pDbname)
}

// _1376sqlite3Reindex is defined at sqlite3.c:104984:21
func _1376sqlite3Reindex(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pName1 uintptr /* *TToken = SToken */, _pName2 uintptr /* *TToken = SToken */) {
	esc := crt.MustMalloc(8)
	var (
		_pColl    uintptr // *TCollSeq = SCollSeq
		_z        uintptr // *int8
		_zDb      uintptr // *int8
		_pTab     uintptr // *TTable = STable
		_pIndex   uintptr // *TIndex = SIndex
		_iDb      int32
		_db       uintptr // *Tsqlite3 = Ssqlite3
		_pObjName = esc   // **TToken = SToken
		_zColl    uintptr // *int8
	)
	defer crt.Free(esc)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	if int32(0) == _1237sqlite3ReadSchema(tls, _pParse) {
		goto _1
	}

	return

_1:
	if _pName1 != 0 {
		goto _2
	}

	_1667reindexDatabases(tls, _pParse, null)
	return

	goto _3

_2:
	if _pName2 != 0 && (*(*uintptr)(unsafe.Pointer(_pName2))) != 0 {
		goto _4
	}

	_zColl = _1482sqlite3NameFromToken(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _pName1)
	if _zColl != 0 {
		goto _5
	}

	return

_5:
	_pColl = _280sqlite3FindCollSeq(tls, _db, *(*uint8)(unsafe.Pointer(_db + 94)), _zColl, int32(0))
	if _pColl == 0 {
		goto _6
	}

	_1667reindexDatabases(tls, _pParse, _zColl)
	_181sqlite3DbFree(tls, _db, _zColl)
	return

_6:
	_181sqlite3DbFree(tls, _db, _zColl)
_4:
_3:
	_iDb = _1485sqlite3TwoPartName(tls, _pParse, _pName1, _pName2, _pObjName)
	if _iDb >= int32(0) {
		goto _7
	}

	return

_7:
	_z = _1482sqlite3NameFromToken(tls, _db, *(*uintptr)(unsafe.Pointer(_pObjName)))
	if _z != 0 {
		goto _8
	}

	return

_8:
	_zDb = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)))
	_pTab = _221sqlite3FindTable(tls, _db, _z, _zDb)
	if _pTab == 0 {
		goto _9
	}

	_1668reindexTable(tls, _pParse, _pTab, null)
	_181sqlite3DbFree(tls, _db, _z)
	return

_9:
	_pIndex = _1003sqlite3FindIndex(tls, _db, _z, _zDb)
	_181sqlite3DbFree(tls, _db, _z)
	if _pIndex == 0 {
		goto _10
	}

	_1488sqlite3BeginWriteOperation(tls, _pParse, int32(0), _iDb)
	_1522sqlite3RefillIndex(tls, _pParse, _pIndex, int32(-1))
	return

_10:
	_550sqlite3ErrorMsg(tls, _pParse, ts+27534 /* "unable to identify the object to..." */)
}

// _1377sqlite3Analyze is defined at sqlite3.c:99299:21
func _1377sqlite3Analyze(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pName1 uintptr /* *TToken = SToken */, _pName2 uintptr /* *TToken = SToken */) {
	esc := crt.MustMalloc(8)
	var (
		_db         uintptr // *Tsqlite3 = Ssqlite3
		_iDb        int32
		_i          int32
		_z          uintptr // *int8
		_zDb        uintptr // *int8
		_pTab       uintptr // *TTable = STable
		_pIdx       uintptr // *TIndex = SIndex
		_pTableName = esc   // **TToken = SToken
		_v          uintptr // *TVdbe = SVdbe
	)
	defer crt.Free(esc)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))

	if int32(0) == _1237sqlite3ReadSchema(tls, _pParse) {
		goto _1
	}

	return

_1:
	if _pName1 != 0 {
		goto _2
	}

	_i = int32(0)
_4:
	if _i >= (*(*int32)(unsafe.Pointer(_db + 40))) {
		goto _6
	}

	if _i != int32(1) {
		goto _7
	}

	goto _5

_7:
	_1669analyzeDatabase(tls, _pParse, _i)

_5:
	_i++
	goto _4

_6:
	goto _3

_2:
	if (*(*uint32)(unsafe.Pointer(_pName2 + 8))) != uint32(0) || set5(&_iDb, _1670sqlite3FindDb(tls, _db, _pName1)) < int32(0) {
		goto _8
	}

	_1669analyzeDatabase(tls, _pParse, _iDb)
	goto _9

_8:
	_iDb = _1485sqlite3TwoPartName(tls, _pParse, _pName1, _pName2, _pTableName)
	if _iDb < int32(0) {
		goto _10
	}

	_zDb = func() uintptr {
		if (*(*uint32)(unsafe.Pointer(_pName2 + 8))) != 0 {
			return *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)))
		}
		return null
	}()
	_z = _1482sqlite3NameFromToken(tls, _db, *(*uintptr)(unsafe.Pointer(_pTableName)))
	if _z == 0 {
		goto _11
	}

	if set4(&_pIdx, _1003sqlite3FindIndex(tls, _db, _z, _zDb)) == 0 {
		goto _12
	}

	_1671analyzeTable(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pIdx + 24)), _pIdx)
	goto _13

_12:
	if set4(&_pTab, _1068sqlite3LocateTable(tls, _pParse, uint32(0), _z, _zDb)) == 0 {
		goto _14
	}

	_1671analyzeTable(tls, _pParse, _pTab, null)
_14:
_13:
	_181sqlite3DbFree(tls, _db, _z)
_11:
_10:
_9:
_3:
	if int32(*(*uint8)(unsafe.Pointer(_db + 106))) != int32(0) || set4(&_v, _1472sqlite3GetVdbe(tls, _pParse)) == 0 {
		goto _15
	}

	_1473sqlite3VdbeAddOp0(tls, _v, int32(151))
_15:
}

// _1378sqlite3AlterRenameTable is defined at sqlite3.c:97510:21
func _1378sqlite3AlterRenameTable(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pSrc uintptr /* *TSrcList = SSrcList */, _pName uintptr /* *TToken = SToken */) {
	var (
		_iDb          int32
		_zDb          uintptr // *int8
		_pTab         uintptr // *TTable = STable
		_zName        uintptr // *int8
		_db           uintptr // *Tsqlite3 = Ssqlite3
		_nTabName     int32
		_zTabName     uintptr // *int8
		_v            uintptr // *TVdbe = SVdbe
		_zWhere       uintptr // *int8
		_pVTab        uintptr // *TVTable = SVTable
		_savedDbFlags uint32
		_i            int32
		_p            uintptr // *TFKey = SFKey
		_pFrom        uintptr // *TTable = STable
	)
	_zName = 0
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_zWhere = 0
	_pVTab = 0
	_savedDbFlags = *(*uint32)(unsafe.Pointer(_db + 44))
	if *(*uint8)(unsafe.Pointer(_db + 97)) == 0 {
		goto _1
	}

	goto _exit_rename_table

_1:
	_pTab = _1515sqlite3LocateTableItem(tls, _pParse, uint32(0), _pSrc+8)
	if _pTab != 0 {
		goto _2
	}

	goto _exit_rename_table

_2:
	_iDb = _1069sqlite3SchemaToIndex(tls, *(*uintptr)(unsafe.Pointer(_pParse)), *(*uintptr)(unsafe.Pointer(_pTab + 112)))
	_zDb = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)))
	{
		p := &(*(*uint32)(unsafe.Pointer(_db + 44)))
		*p = uint32(uint32(*p) | uint32(0x2))
	}
	_zName = _1482sqlite3NameFromToken(tls, _db, _pName)
	if _zName != 0 {
		goto _3
	}

	goto _exit_rename_table

_3:
	if _221sqlite3FindTable(tls, _db, _zName, _zDb) == 0 && _1003sqlite3FindIndex(tls, _db, _zName, _zDb) == 0 {
		goto _4
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+27580 /* "there is already another table o..." */, _zName)
	goto _exit_rename_table

_4:
	if int32(0) == _1672isSystemTable(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pTab))) {
		goto _5
	}

	goto _exit_rename_table

_5:
	if int32(0) == _1486sqlite3CheckObjectName(tls, _pParse, _zName) {
		goto _6
	}

	goto _exit_rename_table

_6:
	if (*(*uintptr)(unsafe.Pointer(_pTab + 24))) == 0 {
		goto _7
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+27639 /* "view %s may not be altered" */, *(*uintptr)(unsafe.Pointer(_pTab)))
	goto _exit_rename_table

_7:
	if _1480sqlite3AuthCheck(tls, _pParse, int32(26), _zDb, *(*uintptr)(unsafe.Pointer(_pTab)), null) == 0 {
		goto _8
	}

	goto _exit_rename_table

_8:
	if _1524sqlite3ViewGetColumnNames(tls, _pParse, _pTab) == 0 {
		goto _9
	}

	goto _exit_rename_table

_9:
	if *(*int32)(unsafe.Pointer(_pTab + 84)) == 0 {
		goto _10
	}

	_pVTab = _1037sqlite3GetVTable(tls, _db, _pTab)
	if (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pVTab + 16))))) + 152))) != 0 {
		goto _11
	}

	_pVTab = null
_11:
_10:
	_v = _1472sqlite3GetVdbe(tls, _pParse)
	if _v != 0 {
		goto _12
	}

	goto _exit_rename_table

_12:
	_1488sqlite3BeginWriteOperation(tls, _pParse, bool2int(_pVTab != 0), _iDb)
	_1503sqlite3ChangeCookie(tls, _pParse, _iDb)
	if _pVTab == 0 {
		goto _13
	}

	_i = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))
	_1648sqlite3VdbeLoadString(tls, _v, _i, _zName)
	_1475sqlite3VdbeAddOp4(tls, _v, int32(158), _i, int32(0), int32(0), _pVTab, int32(-12))
	_1495sqlite3MayAbort(tls, _pParse)
_13:
	_zTabName = *(*uintptr)(unsafe.Pointer(_pTab))
	_nTabName = _810sqlite3Utf8CharLen(tls, _zTabName, int32(-1))
	if ((*(*uint32)(unsafe.Pointer(_db + 48))) & uint32(0x4000)) == 0 {
		goto _14
	}

	if set4(&_zWhere, _1673whereForeignKeys(tls, _pParse, _pTab)) == 0 {
		goto _15
	}

	_1502sqlite3NestedParse(tls, _pParse, ts+27666 /* "UPDATE \"%w\".%s SET sql = sqlite_..." */, _zDb, ts+5127 /* "sqlite_master" */, _zTabName, _zName, _zWhere)
	_181sqlite3DbFree(tls, _db, _zWhere)
_15:
_14:
	_1502sqlite3NestedParse(tls, _pParse, ts+27735 /* "UPDATE %Q.%s SET sql = CASE WHEN..." */, _zDb, ts+5127 /* "sqlite_master" */, _zName, _zName, _zName, _zName, _zName, _nTabName, _zTabName)
	if _221sqlite3FindTable(tls, _db, ts+6945 /* "sqlite_sequence" */, _zDb) == 0 {
		goto _16
	}

	_1502sqlite3NestedParse(tls, _pParse, ts+28119 /* "UPDATE \"%w\".sqlite_sequence set ..." */, _zDb, _zName, *(*uintptr)(unsafe.Pointer(_pTab)))
_16:
	if set4(&_zWhere, _1674whereTempTriggers(tls, _pParse, _pTab)) == 0 {
		goto _17
	}

	_1502sqlite3NestedParse(tls, _pParse, ts+28177 /* "UPDATE sqlite_temp_master SET sq..." */, _zName, _zName, _zWhere)
	_181sqlite3DbFree(tls, _db, _zWhere)
_17:
	if ((*(*uint32)(unsafe.Pointer(_db + 48))) & uint32(0x4000)) == 0 {
		goto _18
	}

	_p = _1618sqlite3FkReferences(tls, _pTab)
_19:
	if _p == 0 {
		goto _21
	}

	_pFrom = *(*uintptr)(unsafe.Pointer(_p))
	if _pFrom == _pTab {
		goto _22
	}

	_1675reloadTableSchema(tls, _pParse, *(*uintptr)(unsafe.Pointer(_p)), *(*uintptr)(unsafe.Pointer(_pFrom)))
_22:
	_p = *(*uintptr)(unsafe.Pointer(_p + 24))
	goto _19

_21:
_18:
	_1675reloadTableSchema(tls, _pParse, _pTab, _zName)
	goto _exit_rename_table
_exit_rename_table:
	_1339sqlite3SrcListDelete(tls, _db, _pSrc)
	_181sqlite3DbFree(tls, _db, _zName)
	*(*uint32)(unsafe.Pointer(_db + 44)) = _savedDbFlags
}

// _1379sqlite3AlterFinishAddColumn is defined at sqlite3.c:97714:21
func _1379sqlite3AlterFinishAddColumn(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pColDef uintptr /* *TToken = SToken */) {
	esc := crt.MustMalloc(8)
	var (
		_pNew         uintptr // *TTable = STable
		_pTab         uintptr // *TTable = STable
		_iDb          int32
		_zDb          uintptr // *int8
		_zTab         uintptr // *int8
		_zCol         uintptr // *int8
		_pCol         uintptr // *TColumn = SColumn
		_pDflt        uintptr // *TExpr = SExpr
		_db           uintptr // *Tsqlite3 = Ssqlite3
		_v            uintptr // *TVdbe = SVdbe
		_r1           int32
		_pVal         = esc // **Tsqlite3_value = Ssqlite3_value
		_rc           int32
		_zEnd         uintptr // *int8
		_savedDbFlags uint32
	)
	defer crt.Free(esc)
	_v = *(*uintptr)(unsafe.Pointer(_pParse + 16))
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	if (*(*int32)(unsafe.Pointer(_pParse + 48))) == 0 && (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _1
	}

	return

_1:
	_pNew = *(*uintptr)(unsafe.Pointer(_pParse + 512))

	_iDb = _1069sqlite3SchemaToIndex(tls, _db, *(*uintptr)(unsafe.Pointer(_pNew + 112)))
	_zDb = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)))
	_zTab = (*(*uintptr)(unsafe.Pointer(_pNew))) + 16
	_pCol = (*(*uintptr)(unsafe.Pointer(_pNew + 8))) + 32*uintptr(int32(*(*int16)(unsafe.Pointer(_pNew + 70)))-int32(1))
	_pDflt = *(*uintptr)(unsafe.Pointer(_pCol + 8))
	_pTab = _221sqlite3FindTable(tls, _db, _zTab, _zDb)

	if _1480sqlite3AuthCheck(tls, _pParse, int32(26), _zDb, *(*uintptr)(unsafe.Pointer(_pTab)), null) == 0 {
		goto _2
	}

	return

_2:
	if _pDflt == 0 || int32(*(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pDflt + 16))))) != int32(101) {
		goto _3
	}

	_pDflt = null
_3:
	if (int32(*(*uint8)(unsafe.Pointer(_pCol + 27))) & int32(0x1)) == 0 {
		goto _4
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+28269 /* "Cannot add a PRIMARY KEY column" */)
	return

_4:
	if (*(*uintptr)(unsafe.Pointer(_pNew + 16))) == 0 {
		goto _5
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+28301 /* "Cannot add a UNIQUE column" */)
	return

_5:
	if (*(*uint32)(unsafe.Pointer(_db + 48)))&uint32(0x4000) == 0 || (*(*uintptr)(unsafe.Pointer(_pNew + 32))) == 0 || _pDflt == 0 {
		goto _6
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+28328 /* "Cannot add a REFERENCES column w..." */)
	return

_6:
	if (*(*uint8)(unsafe.Pointer(_pCol + 24))) == 0 || _pDflt != 0 {
		goto _7
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+28387 /* "Cannot add a NOT NULL column wit..." */)
	return

_7:
	if _pDflt == 0 {
		goto _8
	}

	*(*uintptr)(unsafe.Pointer(_pVal)) = 0
	_rc = _1676sqlite3ValueFromExpr(tls, _db, _pDflt, uint8(1), uint8('A'), _pVal)

	if _rc == int32(0) {
		goto _9
	}

	return

_9:
	if (*(*uintptr)(unsafe.Pointer(_pVal))) != 0 {
		goto _10
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+28440 /* "Cannot add a column with non-con..." */)
	return

_10:
	_371sqlite3ValueFree(tls, *(*uintptr)(unsafe.Pointer(_pVal)))
_8:
	_zCol = _618sqlite3DbStrNDup(tls, _db, *(*uintptr)(unsafe.Pointer(_pColDef)), uint64(*(*uint32)(unsafe.Pointer(_pColDef + 8))))
	if _zCol == 0 {
		goto _11
	}

	_zEnd = _zCol + uintptr((*(*uint32)(unsafe.Pointer(_pColDef + 8)))-uint32(1))
	_savedDbFlags = *(*uint32)(unsafe.Pointer(_db + 44))
_12:
	if _zEnd <= _zCol || int32(*(*int8)(unsafe.Pointer(_zEnd))) != int32(';') && int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(uint8(*(*int8)(unsafe.Pointer(_zEnd)))))))&int32(0x1) == 0 {
		goto _13
	}

	*(*int8)(unsafe.Pointer(postinc209(&_zEnd))) = int8('\x00')
	goto _12

_13:
	{
		p := &(*(*uint32)(unsafe.Pointer(_db + 44)))
		*p = uint32(uint32(*p) | uint32(0x2))
	}
	_1502sqlite3NestedParse(tls, _pParse, ts+28486 /* "UPDATE \"%w\".%s SET sql = substr(..." */, _zDb, ts+5127 /* "sqlite_master" */, *(*int32)(unsafe.Pointer(_pNew + 80)), _zCol, (*(*int32)(unsafe.Pointer(_pNew + 80)))+int32(1), _zTab)
	_181sqlite3DbFree(tls, _db, _zCol)
	*(*uint32)(unsafe.Pointer(_db + 44)) = _savedDbFlags
_11:
	_r1 = _1562sqlite3GetTempReg(tls, _pParse)
	_1241sqlite3VdbeAddOp3(tls, _v, int32(101), _iDb, _r1, int32(2))
	_1074sqlite3VdbeUsesBtree(tls, _v, _iDb)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(80), _r1, int32(-2))
	_1240sqlite3VdbeAddOp2(tls, _v, int32(48), _r1, _1496sqlite3VdbeCurrentAddr(tls, _v)+int32(2))
	_1241sqlite3VdbeAddOp3(tls, _v, int32(102), _iDb, int32(2), int32(3))
	_1563sqlite3ReleaseTempReg(tls, _pParse, _r1)
	_1675reloadTableSchema(tls, _pParse, _pTab, *(*uintptr)(unsafe.Pointer(_pTab)))
}

// _1380sqlite3AlterBeginAddColumn is defined at sqlite3.c:97852:21
func _1380sqlite3AlterBeginAddColumn(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pSrc uintptr /* *TSrcList = SSrcList */) {
	var (
		_pNew   uintptr // *TTable = STable
		_pTab   uintptr // *TTable = STable
		_v      uintptr // *TVdbe = SVdbe
		_iDb    int32
		_i      int32
		_nAlloc int32
		_db     uintptr // *Tsqlite3 = Ssqlite3
		_pCol   uintptr // *TColumn = SColumn
	)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))

	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _1
	}

	goto _exit_begin_add_column

_1:
	_pTab = _1515sqlite3LocateTableItem(tls, _pParse, uint32(0), _pSrc+8)
	if _pTab != 0 {
		goto _2
	}

	goto _exit_begin_add_column

_2:
	if *(*int32)(unsafe.Pointer(_pTab + 84)) == 0 {
		goto _3
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+28595 /* "virtual tables may not be altere..." */)
	goto _exit_begin_add_column

_3:
	if (*(*uintptr)(unsafe.Pointer(_pTab + 24))) == 0 {
		goto _4
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+28629 /* "Cannot add a column to a view" */)
	goto _exit_begin_add_column

_4:
	if int32(0) == _1672isSystemTable(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pTab))) {
		goto _5
	}

	goto _exit_begin_add_column

_5:
	_iDb = _1069sqlite3SchemaToIndex(tls, _db, *(*uintptr)(unsafe.Pointer(_pTab + 112)))
	_pNew = _295sqlite3DbMallocZero(tls, _db, uint64(128))
	if _pNew != 0 {
		goto _6
	}

	goto _exit_begin_add_column

_6:
	*(*uintptr)(unsafe.Pointer(_pParse + 512)) = _pNew
	*(*uint32)(unsafe.Pointer(_pNew + 60)) = uint32(1)
	*(*int16)(unsafe.Pointer(_pNew + 70)) = *(*int16)(unsafe.Pointer(_pTab + 70))

	_nAlloc = (((int32(*(*int16)(unsafe.Pointer(_pNew + 70))) - int32(1)) / int32(8)) * int32(8)) + int32(8)

	*(*uintptr)(unsafe.Pointer(_pNew + 8)) = _295sqlite3DbMallocZero(tls, _db, uint64(uint64(32)*uint64(_nAlloc)))
	*(*uintptr)(unsafe.Pointer(_pNew)) = _226sqlite3MPrintf(tls, _db, ts+28659 /* "sqlite_altertab_%s" */, *(*uintptr)(unsafe.Pointer(_pTab)))
	if (*(*uintptr)(unsafe.Pointer(_pNew + 8))) != 0 && (*(*uintptr)(unsafe.Pointer(_pNew))) != 0 {
		goto _7
	}

	goto _exit_begin_add_column

_7:
	crt.Xmemcpy(tls, *(*uintptr)(unsafe.Pointer(_pNew + 8)), *(*uintptr)(unsafe.Pointer(_pTab + 8)), uint64(32)*uint64(*(*int16)(unsafe.Pointer(_pNew + 70))))
	_i = int32(0)
_8:
	if _i >= int32(*(*int16)(unsafe.Pointer(_pNew + 70))) {
		goto _10
	}

	_pCol = (*(*uintptr)(unsafe.Pointer(_pNew + 8))) + 32*uintptr(_i)
	*(*uintptr)(unsafe.Pointer(_pCol)) = _183sqlite3DbStrDup(tls, _db, *(*uintptr)(unsafe.Pointer(_pCol)))
	*(*uintptr)(unsafe.Pointer(_pCol + 16)) = null
	*(*uintptr)(unsafe.Pointer(_pCol + 8)) = null
	_i++
	goto _8

_10:
	*(*uintptr)(unsafe.Pointer(_pNew + 112)) = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)) + 24))
	*(*int32)(unsafe.Pointer(_pNew + 80)) = *(*int32)(unsafe.Pointer(_pTab + 80))
	*(*uint32)(unsafe.Pointer(_pNew + 60)) = uint32(1)
	_1488sqlite3BeginWriteOperation(tls, _pParse, int32(0), _iDb)
	_v = _1472sqlite3GetVdbe(tls, _pParse)
	if _v != 0 {
		goto _11
	}

	goto _exit_begin_add_column

_11:
	_1503sqlite3ChangeCookie(tls, _pParse, _iDb)
	goto _exit_begin_add_column
_exit_begin_add_column:
	_1339sqlite3SrcListDelete(tls, _db, _pSrc)
	return
}

// _1381sqlite3VtabFinishParse is defined at sqlite3.c:126698:21
func _1381sqlite3VtabFinishParse(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pEnd uintptr /* *TToken = SToken */) {
	var (
		_pTab    uintptr // *TTable = STable
		_db      uintptr // *Tsqlite3 = Ssqlite3
		_zStmt   uintptr // *int8
		_zWhere  uintptr // *int8
		_iDb     int32
		_iReg    int32
		_v       uintptr // *TVdbe = SVdbe
		_pOld    uintptr // *TTable = STable
		_pSchema uintptr // *TSchema = SSchema
		_zName   uintptr // *int8
	)
	_pTab = *(*uintptr)(unsafe.Pointer(_pParse + 512))
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	if _pTab != 0 {
		goto _1
	}

	return

_1:
	_1677addArgumentToVtab(tls, _pParse)
	*(*uintptr)(unsafe.Pointer(_pParse + 536)) = null
	if (*(*int32)(unsafe.Pointer(_pTab + 84))) >= int32(1) {
		goto _2
	}

	return

_2:
	if (*(*uint8)(unsafe.Pointer((_db + 176) + 5))) != 0 {
		goto _3
	}

	if _pEnd == 0 {
		goto _5
	}

	*(*uint32)(unsafe.Pointer((_pParse + 432) + 8)) = uint32(int32(int64((*(*uintptr)(unsafe.Pointer(_pEnd)))-(*(*uintptr)(unsafe.Pointer(_pParse + 432)))))) + (*(*uint32)(unsafe.Pointer(_pEnd + 8)))
_5:
	_zStmt = _226sqlite3MPrintf(tls, _db, ts+28678 /* "CREATE VIRTUAL TABLE %T" */, _pParse+432)
	_iDb = _1069sqlite3SchemaToIndex(tls, _db, *(*uintptr)(unsafe.Pointer(_pTab + 112)))
	_1502sqlite3NestedParse(tls, _pParse, ts+28702 /* "UPDATE %Q.%s SET type='table', n..." */, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb))), ts+5127 /* "sqlite_master" */, *(*uintptr)(unsafe.Pointer(_pTab)), *(*uintptr)(unsafe.Pointer(_pTab)), _zStmt, *(*int32)(unsafe.Pointer(_pParse + 128)))
	_181sqlite3DbFree(tls, _db, _zStmt)
	_v = _1472sqlite3GetVdbe(tls, _pParse)
	_1503sqlite3ChangeCookie(tls, _pParse, _iDb)
	_1473sqlite3VdbeAddOp0(tls, _v, int32(151))
	_zWhere = _226sqlite3MPrintf(tls, _db, ts+28790 /* "name='%q' AND type='table'" */, *(*uintptr)(unsafe.Pointer(_pTab)))
	_1504sqlite3VdbeAddParseSchemaOp(tls, _v, _iDb, _zWhere)
	_iReg = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))
	_1648sqlite3VdbeLoadString(tls, _v, _iReg, *(*uintptr)(unsafe.Pointer(_pTab)))
	_1240sqlite3VdbeAddOp2(tls, _v, int32(154), _iDb, _iReg)
	goto _4

_3:
	_pSchema = *(*uintptr)(unsafe.Pointer(_pTab + 112))
	_zName = *(*uintptr)(unsafe.Pointer(_pTab))

	_pOld = _841sqlite3HashInsert(tls, _pSchema+8, _zName, _pTab)
	if _pOld == 0 {
		goto _6
	}

	_178sqlite3OomFault(tls, _db)

	return

_6:
	*(*uintptr)(unsafe.Pointer(_pParse + 512)) = null
_4:
}

// _1382sqlite3VtabBeginParse is defined at sqlite3.c:126636:21
func _1382sqlite3VtabBeginParse(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pName1 uintptr /* *TToken = SToken */, _pName2 uintptr /* *TToken = SToken */, _pModuleName uintptr /* *TToken = SToken */, _ifNotExists int32) {
	var (
		_iDb    int32
		_pTable uintptr // *TTable = STable
		_db     uintptr // *Tsqlite3 = Ssqlite3
	)
	_1311sqlite3StartTable(tls, _pParse, _pName1, _pName2, int32(0), int32(0), int32(1), _ifNotExists)
	_pTable = *(*uintptr)(unsafe.Pointer(_pParse + 512))
	if _pTable != 0 {
		goto _1
	}

	return

_1:
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_iDb = _1069sqlite3SchemaToIndex(tls, _db, *(*uintptr)(unsafe.Pointer(_pTable + 112)))

	_1422addModuleArgument(tls, _db, _pTable, _1482sqlite3NameFromToken(tls, _db, _pModuleName))
	_1422addModuleArgument(tls, _db, _pTable, null)
	_1422addModuleArgument(tls, _db, _pTable, _183sqlite3DbStrDup(tls, _db, *(*uintptr)(unsafe.Pointer(_pTable))))

	*(*uint32)(unsafe.Pointer((_pParse + 432) + 8)) = uint32(int32(int64((*(*uintptr)(unsafe.Pointer(_pModuleName))) + uintptr(*(*uint32)(unsafe.Pointer(_pModuleName + 8))) - (*(*uintptr)(unsafe.Pointer(_pParse + 432))))))
	if (*(*uintptr)(unsafe.Pointer(_pTable + 88))) == 0 {
		goto _2
	}

	_1480sqlite3AuthCheck(tls, _pParse, int32(29), *(*uintptr)(unsafe.Pointer(_pTable)), *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pTable + 88)))), *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pParse))) + 32))) + 32*uintptr(_iDb))))
_2:
}

// _1383sqlite3VtabArgInit is defined at sqlite3.c:126782:21
func _1383sqlite3VtabArgInit(tls crt.TLS, _pParse uintptr /* *TParse = SParse */) {
	_1677addArgumentToVtab(tls, _pParse)
	*(*uintptr)(unsafe.Pointer(_pParse + 536)) = null
	*(*uint32)(unsafe.Pointer((_pParse + 536) + 8)) = uint32(0)
}

// _1384sqlite3VtabArgExtend is defined at sqlite3.c:126792:21
func _1384sqlite3VtabArgExtend(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _p uintptr /* *TToken = SToken */) {
	var _pArg uintptr // *TToken = SToken

	_pArg = _pParse + 536
	if (*(*uintptr)(unsafe.Pointer(_pArg))) != 0 {
		goto _1
	}

	*(*uintptr)(unsafe.Pointer(_pArg)) = *(*uintptr)(unsafe.Pointer(_p))
	*(*uint32)(unsafe.Pointer(_pArg + 8)) = *(*uint32)(unsafe.Pointer(_p + 8))
	goto _2

_1:
	*(*uint32)(unsafe.Pointer(_pArg + 8)) = uint32(int32(int64((*(*uintptr)(unsafe.Pointer(_p))) + uintptr(*(*uint32)(unsafe.Pointer(_p + 8))) - (*(*uintptr)(unsafe.Pointer(_pArg))))))
_2:
}

// _1385sqlite3WithAdd is defined at sqlite3.c:105076:21
func _1385sqlite3WithAdd(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pWith uintptr /* *TWith = SWith */, _pName uintptr /* *TToken = SToken */, _pArglist uintptr /* *TExprList = SExprList */, _pQuery uintptr /* *TSelect = SSelect */) (r uintptr /* *TWith = SWith */) {
	var (
		_db    uintptr // *Tsqlite3 = Ssqlite3
		_pNew  uintptr // *TWith = SWith
		_zName uintptr // *int8
		_i     int32
		_nByte int32
	)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_zName = _1482sqlite3NameFromToken(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _pName)
	if _zName == 0 || _pWith == 0 {
		goto _1
	}

	_i = int32(0)
_2:
	if _i >= (*(*int32)(unsafe.Pointer(_pWith))) {
		goto _4
	}

	if _110sqlite3StrICmp(tls, _zName, *(*uintptr)(unsafe.Pointer((_pWith + 16) + 32*uintptr(_i)))) != int32(0) {
		goto _5
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+28817 /* "duplicate WITH table name: %s" */, _zName)
_5:
	_i++
	goto _2

_4:
_1:
	if _pWith == 0 {
		goto _6
	}

	_nByte = int32(uint64(48) + (uint64(32) * uint64(*(*int32)(unsafe.Pointer(_pWith)))))
	_pNew = _869sqlite3DbRealloc(tls, _db, _pWith, uint64(_nByte))
	goto _7

_6:
	_pNew = _295sqlite3DbMallocZero(tls, _db, uint64(48))
_7:
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _8
	}

	_551sqlite3ExprListDelete(tls, _db, _pArglist)
	_1094sqlite3SelectDelete(tls, _db, _pQuery)
	_181sqlite3DbFree(tls, _db, _zName)
	_pNew = _pWith
	goto _9

_8:
	*(*uintptr)(unsafe.Pointer(((_pNew + 16) + 32*uintptr(*(*int32)(unsafe.Pointer(_pNew)))) + 16)) = _pQuery
	*(*uintptr)(unsafe.Pointer(((_pNew + 16) + 32*uintptr(*(*int32)(unsafe.Pointer(_pNew)))) + 8)) = _pArglist
	*(*uintptr)(unsafe.Pointer((_pNew + 16) + 32*uintptr(*(*int32)(unsafe.Pointer(_pNew))))) = _zName
	*(*uintptr)(unsafe.Pointer(((_pNew + 16) + 32*uintptr(*(*int32)(unsafe.Pointer(_pNew)))) + 24)) = null
	(*(*int32)(unsafe.Pointer(_pNew)))++
_9:
	return _pNew
}

// _1386yy_find_reduce_action is defined at sqlite3.c:138682:12
func _1386yy_find_reduce_action(tls crt.TLS, _stateno int32, _iLookAhead uint8) (r int32) {
	var _i int32

	_i = int32(*(*int16)(unsafe.Pointer(_1678yy_reduce_ofst + 2*uintptr(_stateno))))

	_i = int32(_i + int32(_iLookAhead))

	return int32(*(*uint16)(unsafe.Pointer(_1303yy_action + 2*uintptr(_i))))
}

// _1387yy_accept is defined at sqlite3.c:140478:13
func _1387yy_accept(tls crt.TLS, _yypParser uintptr /* *TyyParser = SyyParser */) {
	var _pParse uintptr // *TParse = SParse

	_pParse = *(*uintptr)(unsafe.Pointer(_yypParser + 8))

	*(*uintptr)(unsafe.Pointer(_yypParser + 8)) = _pParse
}

// _1388sqlite3PagerRef is defined at sqlite3.c:51668:21
func _1388sqlite3PagerRef(tls crt.TLS, _pPg uintptr /* *TDbPage = SPgHdr */) {
	_1679sqlite3PcacheRef(tls, _pPg)
}

// _1389sqlite3PagerDontWrite is defined at sqlite3.c:53636:21
func _1389sqlite3PagerDontWrite(tls crt.TLS, _pPg uintptr /* *TPgHdr = SPgHdr */) {
	var _pPager uintptr // *TPager = SPager

	_pPager = *(*uintptr)(unsafe.Pointer(_pPg + 40))
	if (*(*uint8)(unsafe.Pointer(_pPager + 16))) != 0 || int32(*(*uint16)(unsafe.Pointer(_pPg + 52)))&int32(0x2) == 0 || (*(*int32)(unsafe.Pointer(_pPager + 128))) != int32(0) {
		goto _1
	}

	{
		p := &(*(*uint16)(unsafe.Pointer(_pPg + 52)))
		*p = uint16(int32(*p) | int32(0x10))
	}
	{
		p := &(*(*uint16)(unsafe.Pointer(_pPg + 52)))
		*p = uint16(int32(*p) & int32(-5))
	}
_1:
}

// _1390btreeSetHasContent is defined at sqlite3.c:60235:12
func _1390btreeSetHasContent(tls crt.TLS, _pBt uintptr /* *TBtShared = SBtShared */, _pgno uint32) (r int32) {
	var _rc int32

	_rc = int32(0)
	if (*(*uintptr)(unsafe.Pointer(_pBt + 88))) != 0 {
		goto _1
	}

	*(*uintptr)(unsafe.Pointer(_pBt + 88)) = _404sqlite3BitvecCreate(tls, *(*uint32)(unsafe.Pointer(_pBt + 60)))
	if (*(*uintptr)(unsafe.Pointer(_pBt + 88))) != 0 {
		goto _2
	}

	_rc = int32(7)
_2:
_1:
	if _rc != int32(0) || _pgno > uint32(_408sqlite3BitvecSize(tls, *(*uintptr)(unsafe.Pointer(_pBt + 88)))) {
		goto _3
	}

	_rc = _405sqlite3BitvecSet(tls, *(*uintptr)(unsafe.Pointer(_pBt + 88)), _pgno)
_3:
	return _rc
}

// _1391pageFindSlot is defined at sqlite3.c:61161:11
func _1391pageFindSlot(tls crt.TLS, _pPg uintptr /* *TMemPage = SMemPage */, _nByte int32, _pRc uintptr /* *int32 */) (r uintptr /* *Tu8 = uint8 */) {
	var (
		_hdr        int32
		_aData      uintptr // *Tu8 = uint8
		_iAddr      int32
		_pc         int32
		_x          int32
		_usableSize int32
		_size       int32
	)
	_hdr = int32(*(*uint8)(unsafe.Pointer(_pPg + 9)))
	_aData = *(*uintptr)(unsafe.Pointer(_pPg + 80))
	_iAddr = _hdr + int32(1)
	_pc = (int32(*(*uint8)(unsafe.Pointer(_aData + uintptr(_iAddr)))) << (uint(8) % 32)) | int32(*(*uint8)(unsafe.Pointer((_aData + uintptr(_iAddr)) + 1)))
	_usableSize = int32(*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPg + 72))) + 52)))

_1:
	if _pc > (_usableSize - int32(4)) {
		goto _2
	}

	_size = (int32(*(*uint8)(unsafe.Pointer(_aData + uintptr(_pc+int32(2))))) << (uint(8) % 32)) | int32(*(*uint8)(unsafe.Pointer((_aData + uintptr(_pc+int32(2))) + 1)))
	if set5(&_x, _size-_nByte) < int32(0) {
		goto _3
	}

	if (_size + _pc) <= _usableSize {
		goto _4
	}

	*(*int32)(unsafe.Pointer(_pRc)) = _556sqlite3CorruptError(tls, int32(61180))
	return null

	goto _5

_4:
	if _x >= int32(4) {
		goto _6
	}

	if int32(*(*uint8)(unsafe.Pointer(_aData + uintptr(_hdr+int32(7))))) <= int32(57) {
		goto _8
	}

	return null

_8:
	crt.Xmemcpy(tls, _aData+uintptr(_iAddr), _aData+uintptr(_pc), uint64(2))
	{
		p := &(*(*uint8)(unsafe.Pointer(_aData + uintptr(_hdr+int32(7)))))
		*p = uint8(int32(*p) + int32(uint8(_x)))
	}
	goto _7

_6:
	*(*uint8)(unsafe.Pointer(_aData + uintptr(_pc+int32(2)))) = uint8(_x >> (uint(8) % 32))
	*(*uint8)(unsafe.Pointer((_aData + uintptr(_pc+int32(2))) + 1)) = uint8(_x)
_7:
_5:
	return _aData + uintptr(_pc+_x)

_3:
	_iAddr = _pc
	_pc = (int32(*(*uint8)(unsafe.Pointer(_aData + uintptr(_pc)))) << (uint(8) % 32)) | int32(*(*uint8)(unsafe.Pointer((_aData + uintptr(_pc)) + 1)))
	if _pc >= (_iAddr + _size) {
		goto _9
	}

	goto _2

_9:
	goto _1

_2:
	if _pc == 0 {
		goto _10
	}

	*(*int32)(unsafe.Pointer(_pRc)) = _556sqlite3CorruptError(tls, int32(61203))
_10:
	return null
}

// _1392defragmentPage is defined at sqlite3.c:61020:12
func _1392defragmentPage(tls crt.TLS, _pPage uintptr /* *TMemPage = SMemPage */, _nMaxFrag int32) (r int32) {
	var (
		_i          int32
		_pc         int32
		_hdr        int32
		_size       int32
		_usableSize int32
		_cellOffset int32
		_cbrk       int32
		_nCell      int32
		_data       uintptr // *uint8
		_temp       uintptr // *uint8
		_src        uintptr // *uint8
		_iCellFirst int32
		_iCellLast  int32
		_iFree      int32
		_iFree2     int32
		_pEnd       uintptr // *Tu8 = uint8
		_pAddr      uintptr // *Tu8 = uint8
		_sz2        int32
		_sz         int32
		_top        int32
		_1pAddr     uintptr // *Tu8 = uint8
		_x          int32
	)

	_temp = null
	_src = set4(&_data, *(*uintptr)(unsafe.Pointer(_pPage + 80)))
	_hdr = int32(*(*uint8)(unsafe.Pointer(_pPage + 9)))
	_cellOffset = int32(*(*uint16)(unsafe.Pointer(_pPage + 18)))
	_nCell = int32(*(*uint16)(unsafe.Pointer(_pPage + 22)))

	_iCellFirst = _cellOffset + (int32(2) * _nCell)
	_usableSize = int32(*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPage + 72))) + 52)))
	if int32(*(*uint8)(unsafe.Pointer(_data + uintptr(_hdr+int32(7))))) > _nMaxFrag {
		goto _1
	}

	_iFree = (int32(*(*uint8)(unsafe.Pointer(_data + uintptr(_hdr+int32(1))))) << (uint(8) % 32)) | int32(*(*uint8)(unsafe.Pointer((_data + uintptr(_hdr+int32(1))) + 1)))
	if _iFree == 0 {
		goto _2
	}

	_iFree2 = (int32(*(*uint8)(unsafe.Pointer(_data + uintptr(_iFree)))) << (uint(8) % 32)) | int32(*(*uint8)(unsafe.Pointer((_data + uintptr(_iFree)) + 1)))

	if int32(0) != _iFree2 && (int32(*(*uint8)(unsafe.Pointer(_data + uintptr(_iFree2)))) != int32(0) || int32(*(*uint8)(unsafe.Pointer(_data + uintptr(_iFree2+int32(1))))) != int32(0)) {
		goto _3
	}

	_pEnd = _data + uintptr(_cellOffset+(_nCell*int32(2)))
	_sz2 = int32(0)
	_sz = (int32(*(*uint8)(unsafe.Pointer(_data + uintptr(_iFree+int32(2))))) << (uint(8) % 32)) | int32(*(*uint8)(unsafe.Pointer((_data + uintptr(_iFree+int32(2))) + 1)))
	_top = (int32(*(*uint8)(unsafe.Pointer(_data + uintptr(_hdr+int32(5))))) << (uint(8) % 32)) | int32(*(*uint8)(unsafe.Pointer((_data + uintptr(_hdr+int32(5))) + 1)))
	if _top < _iFree {
		goto _4
	}

	return _556sqlite3CorruptError(tls, int32(61076))

_4:
	if _iFree2 == 0 {
		goto _5
	}

	_sz2 = (int32(*(*uint8)(unsafe.Pointer(_data + uintptr(_iFree2+int32(2))))) << (uint(8) % 32)) | int32(*(*uint8)(unsafe.Pointer((_data + uintptr(_iFree2+int32(2))) + 1)))

	crt.Xmemmove(tls, _data+uintptr((_iFree+_sz)+_sz2), _data+uintptr(_iFree+_sz), uint64(_iFree2-(_iFree+_sz)))
	_sz = int32(_sz + _sz2)
_5:
	_cbrk = _top + _sz

	crt.Xmemmove(tls, _data+uintptr(_cbrk), _data+uintptr(_top), uint64(_iFree-_top))
	_pAddr = _data + uintptr(_cellOffset)
_6:
	if _pAddr >= _pEnd {
		goto _8
	}

	_pc = (int32(*(*uint8)(unsafe.Pointer(_pAddr))) << (uint(8) % 32)) | int32(*(*uint8)(unsafe.Pointer(_pAddr + 1)))
	if _pc >= _iFree {
		goto _9
	}

	*(*uint8)(unsafe.Pointer(_pAddr)) = uint8((_pc + _sz) >> (uint(8) % 32))
	*(*uint8)(unsafe.Pointer(_pAddr + 1)) = uint8(_pc + _sz)
	goto _10

_9:
	if _pc >= _iFree2 {
		goto _11
	}

	*(*uint8)(unsafe.Pointer(_pAddr)) = uint8((_pc + _sz2) >> (uint(8) % 32))
	*(*uint8)(unsafe.Pointer(_pAddr + 1)) = uint8(_pc + _sz2)
_11:
_10:
	_pAddr += uintptr(2)
	goto _6

_8:
	goto _defragment_out

_3:
_2:
_1:
	_cbrk = _usableSize
	_iCellLast = _usableSize - int32(4)
	_i = int32(0)
_12:
	if _i >= _nCell {
		goto _14
	}

	_1pAddr = _data + uintptr(_cellOffset+(_i*int32(2)))
	_pc = (int32(*(*uint8)(unsafe.Pointer(_1pAddr))) << (uint(8) % 32)) | int32(*(*uint8)(unsafe.Pointer(_1pAddr + 1)))
	if _pc >= _iCellFirst && _pc <= _iCellLast {
		goto _15
	}

	return _556sqlite3CorruptError(tls, int32(61110))

_15:
	_size = int32(fn144(*(*uintptr)(unsafe.Pointer(_pPage + 120)))(tls, _pPage, _src+uintptr(_pc)))
	_cbrk = int32(_cbrk - _size)
	if _cbrk >= _iCellFirst && (_pc+_size) <= _usableSize {
		goto _16
	}

	return _556sqlite3CorruptError(tls, int32(61116))

_16:
	*(*uint8)(unsafe.Pointer(_1pAddr)) = uint8(_cbrk >> (uint(8) % 32))
	*(*uint8)(unsafe.Pointer(_1pAddr + 1)) = uint8(_cbrk)
	if _temp != 0 {
		goto _17
	}

	if _cbrk != _pc {
		goto _18
	}

	goto _13

_18:
	_temp = _1680sqlite3PagerTempSpace(tls, *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pPage + 72)))))
	_x = (int32(*(*uint8)(unsafe.Pointer(_data + uintptr(_hdr+int32(5))))) << (uint(8) % 32)) | int32(*(*uint8)(unsafe.Pointer((_data + uintptr(_hdr+int32(5))) + 1)))
	crt.Xmemcpy(tls, _temp+uintptr(_x), _data+uintptr(_x), uint64((_cbrk+_size)-_x))
	_src = _temp
_17:
	crt.Xmemcpy(tls, _data+uintptr(_cbrk), _src+uintptr(_pc), uint64(_size))

_13:
	_i++
	goto _12

_14:
	*(*uint8)(unsafe.Pointer(_data + uintptr(_hdr+int32(7)))) = uint8(0)
	goto _defragment_out
_defragment_out:
	if ((int32(*(*uint8)(unsafe.Pointer(_data + uintptr(_hdr+int32(7))))) + _cbrk) - _iCellFirst) == int32(*(*uint16)(unsafe.Pointer(_pPage + 20))) {
		goto _19
	}

	return _556sqlite3CorruptError(tls, int32(61136))

_19:
	*(*uint8)(unsafe.Pointer(_data + uintptr(_hdr+int32(5)))) = uint8(_cbrk >> (uint(8) % 32))
	*(*uint8)(unsafe.Pointer((_data + uintptr(_hdr+int32(5))) + 1)) = uint8(_cbrk)
	*(*uint8)(unsafe.Pointer(_data + uintptr(_hdr+int32(1)))) = uint8(0)
	*(*uint8)(unsafe.Pointer(_data + uintptr(_hdr+int32(2)))) = uint8(0)
	crt.Xmemset(tls, _data+uintptr(_iCellFirst), int32(0), uint64(_cbrk-_iCellFirst))

	return int32(0)
}

// _1393copyNodeContent is defined at sqlite3.c:66751:13
func _1393copyNodeContent(tls crt.TLS, _pFrom uintptr /* *TMemPage = SMemPage */, _pTo uintptr /* *TMemPage = SMemPage */, _pRC uintptr /* *int32 */) {
	var (
		_pBt      uintptr // *TBtShared = SBtShared
		_aFrom    uintptr // *Tu8 = uint8
		_aTo      uintptr // *Tu8 = uint8
		_iFromHdr int32
		_iToHdr   int32
		_rc       int32
		_iData    int32
	)
	if (*(*int32)(unsafe.Pointer(_pRC))) != int32(0) {
		goto _1
	}

	_pBt = *(*uintptr)(unsafe.Pointer(_pFrom + 72))
	_aFrom = *(*uintptr)(unsafe.Pointer(_pFrom + 80))
	_aTo = *(*uintptr)(unsafe.Pointer(_pTo + 80))
	_iFromHdr = int32(*(*uint8)(unsafe.Pointer(_pFrom + 9)))
	_iToHdr = func() int32 {
		if (*(*uint32)(unsafe.Pointer(_pTo + 4))) == uint32(1) {
			return int32(100)
		}
		return int32(0)
	}()

	_iData = (int32(*(*uint8)(unsafe.Pointer(_aFrom + uintptr(_iFromHdr+int32(5))))) << (uint(8) % 32)) | int32(*(*uint8)(unsafe.Pointer((_aFrom + uintptr(_iFromHdr+int32(5))) + 1)))
	crt.Xmemcpy(tls, _aTo+uintptr(_iData), _aFrom+uintptr(_iData), uint64((*(*uint32)(unsafe.Pointer(_pBt + 52)))-uint32(_iData)))
	crt.Xmemcpy(tls, _aTo+uintptr(_iToHdr), _aFrom+uintptr(_iFromHdr), uint64(int32(*(*uint16)(unsafe.Pointer(_pFrom + 18)))+(int32(2)*int32(*(*uint16)(unsafe.Pointer(_pFrom + 22))))))
	*(*uint8)(unsafe.Pointer(_pTo)) = uint8(0)
	_rc = _851btreeInitPage(tls, _pTo)
	if _rc == int32(0) {
		goto _2
	}

	*(*int32)(unsafe.Pointer(_pRC)) = _rc
	return

_2:
	if *(*uint8)(unsafe.Pointer(_pBt + 33)) == 0 {
		goto _3
	}

	*(*int32)(unsafe.Pointer(_pRC)) = _1164setChildPtrmaps(tls, _pTo)
_3:
_1:
}

// _1394rebuildPage is defined at sqlite3.c:66301:12
func _1394rebuildPage(tls crt.TLS, _pPg uintptr /* *TMemPage = SMemPage */, _nCell int32, _apCell uintptr /* **Tu8 = uint8 */, _szCell uintptr /* *Tu16 = uint16 */) (r int32) {
	var (
		_hdr        int32
		_aData      uintptr // *Tu8 = uint8
		_usableSize int32
		_pEnd       uintptr // *Tu8 = uint8
		_i          int32
		_pCellptr   uintptr // *Tu8 = uint8
		_pTmp       uintptr // *Tu8 = uint8
		_pData      uintptr // *Tu8 = uint8
		_pCell      uintptr // *Tu8 = uint8
	)
	_hdr = int32(*(*uint8)(unsafe.Pointer(_pPg + 9)))
	_aData = *(*uintptr)(unsafe.Pointer(_pPg + 80))
	_usableSize = int32(*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPg + 72))) + 52)))
	_pEnd = _aData + uintptr(_usableSize)
	_pCellptr = *(*uintptr)(unsafe.Pointer(_pPg + 96))
	_pTmp = _1680sqlite3PagerTempSpace(tls, *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pPg + 72)))))
	_i = (int32(*(*uint8)(unsafe.Pointer(_aData + uintptr(_hdr+int32(5))))) << (uint(8) % 32)) | int32(*(*uint8)(unsafe.Pointer((_aData + uintptr(_hdr+int32(5))) + 1)))
	crt.Xmemcpy(tls, _pTmp+uintptr(_i), _aData+uintptr(_i), uint64(_usableSize-_i))
	_pData = _pEnd
	_i = int32(0)
_1:
	if _i >= _nCell {
		goto _3
	}

	_pCell = *(*uintptr)(unsafe.Pointer(_apCell + 8*uintptr(_i)))
	if uint64(_pCell) < uint64(_aData) || uint64(_pCell) >= uint64(_pEnd) {
		goto _4
	}

	_pCell = _pTmp + uintptr(int64(_pCell-_aData))
_4:
	_pData -= uintptr(*(*uint16)(unsafe.Pointer(_szCell + 2*uintptr(_i))))
	*(*uint8)(unsafe.Pointer(_pCellptr)) = uint8(int64(_pData-_aData) >> (uint(8) % 64))
	*(*uint8)(unsafe.Pointer(_pCellptr + 1)) = uint8(int64(_pData - _aData))
	_pCellptr += uintptr(2)
	if _pData >= _pCellptr {
		goto _5
	}

	return _556sqlite3CorruptError(tls, int32(66328))

_5:
	crt.Xmemcpy(tls, _pData, _pCell, uint64(*(*uint16)(unsafe.Pointer(_szCell + 2*uintptr(_i)))))

	_i++
	goto _1

_3:
	*(*uint16)(unsafe.Pointer(_pPg + 22)) = uint16(_nCell)
	*(*uint8)(unsafe.Pointer(_pPg + 12)) = uint8(0)
	*(*uint8)(unsafe.Pointer(_aData + uintptr(_hdr+int32(1)))) = uint8(0)
	*(*uint8)(unsafe.Pointer((_aData + uintptr(_hdr+int32(1))) + 1)) = uint8(0)
	*(*uint8)(unsafe.Pointer(_aData + uintptr(_hdr+int32(3)))) = uint8(int32(*(*uint16)(unsafe.Pointer(_pPg + 22))) >> (uint(8) % 32))
	*(*uint8)(unsafe.Pointer((_aData + uintptr(_hdr+int32(3))) + 1)) = uint8(*(*uint16)(unsafe.Pointer(_pPg + 22)))
	*(*uint8)(unsafe.Pointer(_aData + uintptr(_hdr+int32(5)))) = uint8(int64(_pData-_aData) >> (uint(8) % 64))
	*(*uint8)(unsafe.Pointer((_aData + uintptr(_hdr+int32(5))) + 1)) = uint8(int64(_pData - _aData))
	*(*uint8)(unsafe.Pointer(_aData + uintptr(_hdr+int32(7)))) = uint8(0x0)
	return int32(0)
}

type SCellArray struct {
	XnCell  int32
	XpRef   uintptr // *SMemPage
	XapCell uintptr // **uint8
	XszCell uintptr // *uint16
}

// _1395cachedCellSize is defined at sqlite3.c:66282:12
func _1395cachedCellSize(tls crt.TLS, _p uintptr /* *TCellArray = SCellArray */, _N int32) (r uint16) {
	if (*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 24))) + 2*uintptr(_N)))) == 0 {
		goto _1
	}

	return *(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 24))) + 2*uintptr(_N)))

_1:
	return _1681computeCellSize(tls, _p, _N)
}

// _1396sqlite3PagerRekey is defined at sqlite3.c:54652:21
func _1396sqlite3PagerRekey(tls crt.TLS, _pPg uintptr /* *TDbPage = SPgHdr */, _iNew uint32, _flags uint16) {
	*(*uint16)(unsafe.Pointer(_pPg + 52)) = _flags
	_1296sqlite3PcacheMove(tls, _pPg, _iNew)
}

// _1397editPage is defined at sqlite3.c:66473:12
func _1397editPage(tls crt.TLS, _pPg uintptr /* *TMemPage = SMemPage */, _iOld int32, _iNew int32, _nNew int32, _pCArray uintptr /* *TCellArray = SCellArray */) (r int32) {
	esc := crt.MustMalloc(8)
	var (
		_aData    uintptr // *Tu8 = uint8
		_hdr      int32
		_pBegin   uintptr // *Tu8 = uint8
		_nCell    int32
		_pData    = esc   // **Tu8 = uint8
		_pCellptr uintptr // *Tu8 = uint8
		_i        int32
		_iOldEnd  int32
		_iNewEnd  int32
		_nShift   int32
		_nAdd     int32
		_iCell    int32
	)
	defer crt.Free(esc)
	_aData = *(*uintptr)(unsafe.Pointer(_pPg + 80))
	_hdr = int32(*(*uint8)(unsafe.Pointer(_pPg + 9)))
	_pBegin = (*(*uintptr)(unsafe.Pointer(_pPg + 96))) + uintptr(_nNew*int32(2))
	_nCell = int32(*(*uint16)(unsafe.Pointer(_pPg + 22)))
	_iOldEnd = (_iOld + int32(*(*uint16)(unsafe.Pointer(_pPg + 22)))) + int32(*(*uint8)(unsafe.Pointer(_pPg + 12)))
	_iNewEnd = _iNew + _nNew
	if _iOld >= _iNew {
		goto _1
	}

	_nShift = _1682pageFreeArray(tls, _pPg, _iOld, _iNew-_iOld, _pCArray)
	crt.Xmemmove(tls, *(*uintptr)(unsafe.Pointer(_pPg + 96)), (*(*uintptr)(unsafe.Pointer(_pPg + 96)))+uintptr(_nShift*int32(2)), uint64(_nCell*int32(2)))
	_nCell = int32(_nCell - _nShift)
_1:
	if _iNewEnd >= _iOldEnd {
		goto _2
	}

	_nCell = int32(_nCell - _1682pageFreeArray(tls, _pPg, _iNewEnd, _iOldEnd-_iNewEnd, _pCArray))
_2:
	*(*uintptr)(unsafe.Pointer(_pData)) = _aData + uintptr((((int32(*(*uint8)(unsafe.Pointer(_aData + uintptr(_hdr+int32(5)))))<<(uint(8)%32))|int32(*(*uint8)(unsafe.Pointer((_aData + uintptr(_hdr+int32(5))) + 1)))-int32(1))&int32(0xffff))+int32(1))
	if (*(*uintptr)(unsafe.Pointer(_pData))) >= _pBegin {
		goto _3
	}

	goto _editpage_fail

_3:
	if _iNew >= _iOld {
		goto _4
	}

	_nAdd = func() int32 {
		if _nNew < (_iOld - _iNew) {
			return _nNew
		}
		return _iOld - _iNew
	}()

	_pCellptr = *(*uintptr)(unsafe.Pointer(_pPg + 96))
	crt.Xmemmove(tls, _pCellptr+uintptr(_nAdd*int32(2)), _pCellptr, uint64(_nCell*int32(2)))
	if _1683pageInsertArray(tls, _pPg, _pBegin, _pData, _pCellptr, _iNew, _nAdd, _pCArray) == 0 {
		goto _5
	}

	goto _editpage_fail

_5:
	_nCell = int32(_nCell + _nAdd)
_4:
	_i = int32(0)
_6:
	if _i >= int32(*(*uint8)(unsafe.Pointer(_pPg + 12))) {
		goto _8
	}

	_iCell = (_iOld + int32(*(*uint16)(unsafe.Pointer((_pPg + 26) + 2*uintptr(_i))))) - _iNew
	if _iCell < int32(0) || _iCell >= _nNew {
		goto _9
	}

	_pCellptr = (*(*uintptr)(unsafe.Pointer(_pPg + 96))) + uintptr(_iCell*int32(2))
	crt.Xmemmove(tls, _pCellptr+2, _pCellptr, uint64((_nCell-_iCell)*int32(2)))
	_nCell++
	if _1683pageInsertArray(tls, _pPg, _pBegin, _pData, _pCellptr, _iCell+_iNew, int32(1), _pCArray) == 0 {
		goto _10
	}

	goto _editpage_fail

_10:
_9:
	_i++
	goto _6

_8:
	_pCellptr = (*(*uintptr)(unsafe.Pointer(_pPg + 96))) + uintptr(_nCell*int32(2))
	if _1683pageInsertArray(tls, _pPg, _pBegin, _pData, _pCellptr, _iNew+_nCell, _nNew-_nCell, _pCArray) == 0 {
		goto _11
	}

	goto _editpage_fail

_11:
	*(*uint16)(unsafe.Pointer(_pPg + 22)) = uint16(_nNew)
	*(*uint8)(unsafe.Pointer(_pPg + 12)) = uint8(0)
	*(*uint8)(unsafe.Pointer(_aData + uintptr(_hdr+int32(3)))) = uint8(int32(*(*uint16)(unsafe.Pointer(_pPg + 22))) >> (uint(8) % 32))
	*(*uint8)(unsafe.Pointer((_aData + uintptr(_hdr+int32(3))) + 1)) = uint8(*(*uint16)(unsafe.Pointer(_pPg + 22)))
	*(*uint8)(unsafe.Pointer(_aData + uintptr(_hdr+int32(5)))) = uint8(int64((*(*uintptr)(unsafe.Pointer(_pData)))-_aData) >> (uint(8) % 64))
	*(*uint8)(unsafe.Pointer((_aData + uintptr(_hdr+int32(5))) + 1)) = uint8(int64((*(*uintptr)(unsafe.Pointer(_pData))) - _aData))
	return int32(0)

	goto _editpage_fail
_editpage_fail:
	_1684populateCellCache(tls, _pCArray, _iNew, _nNew)
	return _1394rebuildPage(tls, _pPg, _nNew, (*(*uintptr)(unsafe.Pointer(_pCArray + 16)))+8*uintptr(_iNew), (*(*uintptr)(unsafe.Pointer(_pCArray + 24)))+2*uintptr(_iNew))
}

// _1398vdbeRecordDecodeInt is defined at sqlite3.c:76122:12
func _1398vdbeRecordDecodeInt(tls crt.TLS, _serial_type uint32, _aKey uintptr /* *Tu8 = uint8 */) (r int64) {
	esc := crt.MustMalloc(24)
	var (
		_y = esc      // *Tu32 = uint32
		_x = esc + 16 // *Tu64 = Tsqlite_uint64 = uint64
	)
	defer crt.Free(esc)

	switch _serial_type {
	case uint32(0):
		goto _2
	case uint32(1):
		goto _3
	case uint32(2):
		goto _4
	case uint32(3):
		goto _5
	case uint32(4):
		goto _6
	case uint32(5):
		goto _7
	case uint32(6):
		goto _8
	}
	goto _1

_2:
_3:
	return int64(int8(*(*uint8)(unsafe.Pointer(_aKey))))

_4:
	return int64((int32(256) * int32(int8(*(*uint8)(unsafe.Pointer(_aKey))))) | int32(*(*uint8)(unsafe.Pointer(_aKey + 1))))

_5:
	return int64(((int32(65536) * int32(int8(*(*uint8)(unsafe.Pointer(_aKey))))) | (int32(*(*uint8)(unsafe.Pointer(_aKey + 1))) << (uint(8) % 32))) | int32(*(*uint8)(unsafe.Pointer(_aKey + 2))))

_6:
	*(*uint32)(unsafe.Pointer(_y)) = (((uint32(*(*uint8)(unsafe.Pointer(_aKey))) << (uint(24) % 32)) | uint32(int32(*(*uint8)(unsafe.Pointer(_aKey + 1)))<<(uint(16)%32))) | uint32(int32(*(*uint8)(unsafe.Pointer(_aKey + 2)))<<(uint(8)%32))) | uint32(*(*uint8)(unsafe.Pointer(_aKey + 3)))
	return int64(*(*int32)(unsafe.Pointer(_y)))

_7:
	return int64((((uint32(*(*uint8)(unsafe.Pointer(_aKey + uintptr(2))))<<(uint(24)%32))|uint32(int32(*(*uint8)(unsafe.Pointer(_aKey + uintptr(2) + 1)))<<(uint(16)%32)))|uint32(int32(*(*uint8)(unsafe.Pointer(_aKey + uintptr(2) + 2)))<<(uint(8)%32)))|uint32(*(*uint8)(unsafe.Pointer(_aKey + uintptr(2) + 3)))) + (int64(4294967296) * int64((int32(256)*int32(int8(*(*uint8)(unsafe.Pointer(_aKey)))))|int32(*(*uint8)(unsafe.Pointer(_aKey + 1)))))

_8:
	*(*uint64)(unsafe.Pointer(_x)) = uint64((((uint32(*(*uint8)(unsafe.Pointer(_aKey))) << (uint(24) % 32)) | uint32(int32(*(*uint8)(unsafe.Pointer(_aKey + 1)))<<(uint(16)%32))) | uint32(int32(*(*uint8)(unsafe.Pointer(_aKey + 2)))<<(uint(8)%32))) | uint32(*(*uint8)(unsafe.Pointer(_aKey + 3))))
	*(*uint64)(unsafe.Pointer(_x)) = ((*(*uint64)(unsafe.Pointer(_x))) << (uint(32) % 64)) | uint64((((uint32(*(*uint8)(unsafe.Pointer(_aKey + uintptr(4))))<<(uint(24)%32))|uint32(int32(*(*uint8)(unsafe.Pointer(_aKey + uintptr(4) + 1)))<<(uint(16)%32)))|uint32(int32(*(*uint8)(unsafe.Pointer(_aKey + uintptr(4) + 2)))<<(uint(8)%32)))|uint32(*(*uint8)(unsafe.Pointer(_aKey + uintptr(4) + 3))))
	return *(*int64)(unsafe.Pointer(_x))

_1:
	return int64(_serial_type - uint32(8))
}

// _1399vdbeSorterCompareInt is defined at sqlite3.c:87757:12
func _1399vdbeSorterCompareInt(tls crt.TLS, _pTask uintptr /* *TSortSubtask = SSortSubtask */, _pbKey2Cached uintptr /* *int32 */, _pKey1 uintptr /* *void */, _nKey1 int32, _pKey2 uintptr /* *void */, _nKey2 int32) (r int32) {
	var (
		_p1  uintptr // *Tu8 = uint8
		_p2  uintptr // *Tu8 = uint8
		_s1  int32
		_s2  int32
		_v1  uintptr // *Tu8 = uint8
		_v2  uintptr // *Tu8 = uint8
		_res int32
		_n   uint8
		_i   int32
	)
	_p1 = _pKey1
	_p2 = _pKey2
	_s1 = int32(*(*uint8)(unsafe.Pointer(_p1 + 1)))
	_s2 = int32(*(*uint8)(unsafe.Pointer(_p2 + 1)))
	_v1 = _p1 + uintptr(*(*uint8)(unsafe.Pointer(_p1)))
	_v2 = _p2 + uintptr(*(*uint8)(unsafe.Pointer(_p2)))

	if _s1 != _s2 {
		goto _1
	}

	_n = *(*uint8)(unsafe.Pointer(_1685aLen + uintptr(_s1)))
	_res = int32(0)
	_i = int32(0)
_3:
	if _i >= int32(_n) {
		goto _5
	}

	if set5(&_res, int32(*(*uint8)(unsafe.Pointer(_v1 + uintptr(_i))))-int32(*(*uint8)(unsafe.Pointer(_v2 + uintptr(_i))))) == int32(0) {
		goto _6
	}

	if ((int32(*(*uint8)(unsafe.Pointer(_v1))) ^ int32(*(*uint8)(unsafe.Pointer(_v2)))) & int32(0x80)) == int32(0) {
		goto _7
	}

	_res = func() int32 {
		if (int32(*(*uint8)(unsafe.Pointer(_v1))) & int32(0x80)) != 0 {
			return int32(-1)
		}
		return int32(1)
	}()
_7:
	goto _5

_6:
	_i++
	goto _3

_5:
	goto _2

_1:
	if _s1 <= int32(7) || _s2 <= int32(7) {
		goto _8
	}

	_res = _s1 - _s2
	goto _9

_8:
	if _s2 <= int32(7) {
		goto _10
	}

	_res = int32(1)
	goto _11

_10:
	if _s1 <= int32(7) {
		goto _12
	}

	_res = int32(-1)
	goto _13

_12:
	_res = _s1 - _s2
_13:
_11:
	if _res <= int32(0) {
		goto _14
	}

	if (int32(*(*uint8)(unsafe.Pointer(_v1))) & int32(0x80)) == 0 {
		goto _16
	}

	_res = int32(-1)
_16:
	goto _15

_14:
	if (int32(*(*uint8)(unsafe.Pointer(_v2))) & int32(0x80)) == 0 {
		goto _17
	}

	_res = int32(1)
_17:
_15:
_9:
_2:
	if _res != int32(0) {
		goto _18
	}

	if int32(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTask + 16))) + 40))) + 6))) <= int32(1) {
		goto _20
	}

	_res = _1686vdbeSorterCompareTail(tls, _pTask, _pbKey2Cached, _pKey1, _nKey1, _pKey2, _nKey2)
_20:
	goto _19

_18:
	if (*(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTask + 16))) + 40))) + 24))))) == 0 {
		goto _21
	}

	_res = _res * int32(-1)
_21:
_19:
	return _res
}

// _1400vdbeSorterCompareText is defined at sqlite3.c:87716:12
func _1400vdbeSorterCompareText(tls crt.TLS, _pTask uintptr /* *TSortSubtask = SSortSubtask */, _pbKey2Cached uintptr /* *int32 */, _pKey1 uintptr /* *void */, _nKey1 int32, _pKey2 uintptr /* *void */, _nKey2 int32) (r int32) {
	esc := crt.MustMalloc(20)
	var (
		_p1  uintptr    // *Tu8 = uint8
		_p2  uintptr    // *Tu8 = uint8
		_v1  uintptr    // *Tu8 = uint8
		_v2  uintptr    // *Tu8 = uint8
		_n1  = esc      // *int32
		_n2  = esc + 16 // *int32
		_res int32
	)
	defer crt.Free(esc)
	_p1 = _pKey1
	_p2 = _pKey2
	_v1 = _p1 + uintptr(*(*uint8)(unsafe.Pointer(_p1)))
	_v2 = _p2 + uintptr(*(*uint8)(unsafe.Pointer(_p2)))
	if int32(*(*uint8)(unsafe.Pointer(_p1 + 1))) < int32(0x80) {
		*(*int32)(unsafe.Pointer(_n1)) = int32(uint32(*(*uint8)(unsafe.Pointer(_p1 + 1))))
	} else {
		_665sqlite3GetVarint32(tls, _p1+1, _n1)
	}
	if int32(*(*uint8)(unsafe.Pointer(_p2 + 1))) < int32(0x80) {
		*(*int32)(unsafe.Pointer(_n2)) = int32(uint32(*(*uint8)(unsafe.Pointer(_p2 + 1))))
	} else {
		_665sqlite3GetVarint32(tls, _p2+1, _n2)
	}
	_res = crt.Xmemcmp(tls, _v1, _v2, uint64((func() int32 {
		if (*(*int32)(unsafe.Pointer(_n1))) < (*(*int32)(unsafe.Pointer(_n2))) {
			return *(*int32)(unsafe.Pointer(_n1))
		}
		return *(*int32)(unsafe.Pointer(_n2))
	}()-int32(13))/int32(2)))
	if _res != int32(0) {
		goto _1
	}

	_res = (*(*int32)(unsafe.Pointer(_n1))) - (*(*int32)(unsafe.Pointer(_n2)))
_1:
	if _res != int32(0) {
		goto _2
	}

	if int32(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTask + 16))) + 40))) + 6))) <= int32(1) {
		goto _4
	}

	_res = _1686vdbeSorterCompareTail(tls, _pTask, _pbKey2Cached, _pKey1, _nKey1, _pKey2, _nKey2)
_4:
	goto _3

_2:
	if (*(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTask + 16))) + 40))) + 24))))) == 0 {
		goto _5
	}

	_res = _res * int32(-1)
_5:
_3:
	return _res
}

// _1401vdbeSorterCompare is defined at sqlite3.c:87697:12
func _1401vdbeSorterCompare(tls crt.TLS, _pTask uintptr /* *TSortSubtask = SSortSubtask */, _pbKey2Cached uintptr /* *int32 */, _pKey1 uintptr /* *void */, _nKey1 int32, _pKey2 uintptr /* *void */, _nKey2 int32) (r int32) {
	var _r2 uintptr // *TUnpackedRecord = SUnpackedRecord

	_r2 = *(*uintptr)(unsafe.Pointer(_pTask + 24))
	if (*(*int32)(unsafe.Pointer(_pbKey2Cached))) != 0 {
		goto _1
	}

	_691sqlite3VdbeRecordUnpack(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTask + 16))) + 40)), _nKey2, _pKey2, _r2)
	*(*int32)(unsafe.Pointer(_pbKey2Cached)) = int32(1)
_1:
	return _986sqlite3VdbeRecordCompare(tls, _nKey1, _pKey1, _r2)
}

// _1402sqlite3ThreadJoin is defined at sqlite3.c:27407:20
func _1402sqlite3ThreadJoin(tls crt.TLS, _p uintptr /* *TSQLiteThread = SSQLiteThread */, _ppOut uintptr /* **void */) (r int32) {
	var _rc int32

	if _p != 0 {
		goto _1
	}

	return int32(7)

_1:
	if (*(*int32)(unsafe.Pointer(_p + 8))) == 0 {
		goto _2
	}

	*(*uintptr)(unsafe.Pointer(_ppOut)) = *(*uintptr)(unsafe.Pointer(_p + 16))
	_rc = int32(0)
	goto _3

_2:
	_rc = func() int32 {
		if crt.Xpthread_join(tls, *(*uint64)(unsafe.Pointer(_p)), _ppOut) != 0 {
			return int32(1)
		}
		return int32(0)
	}()
_3:
	Xsqlite3_free(tls, _p)
	return _rc
}

type SPmaWriter struct {
	XeFWErr    int32
	XaBuffer   uintptr // *uint8
	XnBuffer   int32
	XiBufStart int32
	XiBufEnd   int32
	XiWriteOff int64
	XpFd       uintptr // *Ssqlite3_file
}

// _1403vdbeSorterOpenTempFile is defined at sqlite3.c:88210:12
func _1403vdbeSorterOpenTempFile(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _nExtend int64, _ppFd uintptr /* **Tsqlite3_file = Ssqlite3_file */) (r int32) {
	esc := crt.MustMalloc(24)
	var (
		_rc  = esc      // *int32
		_max = esc + 16 // *Ti64 = Tsqlite_int64 = int64
	)
	defer crt.Free(esc)
	if _208sqlite3FaultSim(tls, int32(202)) == 0 {
		goto _1
	}

	return int32(3338)

_1:
	*(*int32)(unsafe.Pointer(_rc)) = _1049sqlite3OsOpenMalloc(tls, *(*uintptr)(unsafe.Pointer(_db)), null, _ppFd, int32(4126), _rc)
	if (*(*int32)(unsafe.Pointer(_rc))) != int32(0) {
		goto _2
	}

	*(*int64)(unsafe.Pointer(_max)) = int64(0x7fff0000)
	_521sqlite3OsFileControlHint(tls, *(*uintptr)(unsafe.Pointer(_ppFd)), int32(18), _max)
	if _nExtend <= int64(0) {
		goto _3
	}

	_1404vdbeSorterExtendFile(tls, _db, *(*uintptr)(unsafe.Pointer(_ppFd)), _nExtend)
_3:
_2:
	return *(*int32)(unsafe.Pointer(_rc))
}

// _1404vdbeSorterExtendFile is defined at sqlite3.c:88191:13
func _1404vdbeSorterExtendFile(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pFd uintptr /* *Tsqlite3_file = Ssqlite3_file */, anByte int64) {
	esc := crt.MustMalloc(36)
	var (
		_nByte     = esc      // *int64
		_p         = esc + 16 // **void
		_chunksize = esc + 32 // *int32
	)
	defer crt.Free(esc)
	*(*int64)(unsafe.Pointer(_nByte)) = anByte
	if (*(*int64)(unsafe.Pointer(_nByte))) > int64(*(*int32)(unsafe.Pointer(_db + 172))) || (*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pFd))))) < int32(3) {
		goto _1
	}

	*(*uintptr)(unsafe.Pointer(_p)) = 0
	*(*int32)(unsafe.Pointer(_chunksize)) = int32(4096)
	_521sqlite3OsFileControlHint(tls, _pFd, int32(6), _chunksize)
	_521sqlite3OsFileControlHint(tls, _pFd, int32(5), _nByte)
	_1170sqlite3OsFetch(tls, _pFd, int64(0), int32(*(*int64)(unsafe.Pointer(_nByte))), _p)
	_874sqlite3OsUnfetch(tls, _pFd, int64(0), *(*uintptr)(unsafe.Pointer(_p)))
_1:
}

// _1405vdbePmaWriterInit is defined at sqlite3.c:88363:13
func _1405vdbePmaWriterInit(tls crt.TLS, _pFd uintptr /* *Tsqlite3_file = Ssqlite3_file */, _p uintptr /* *TPmaWriter = SPmaWriter */, _nBuf int32, _iStart int64) {
	crt.Xmemset(tls, _p, int32(0), uint64(48))
	*(*uintptr)(unsafe.Pointer(_p + 8)) = _198sqlite3Malloc(tls, uint64(_nBuf))
	if (*(*uintptr)(unsafe.Pointer(_p + 8))) != 0 {
		goto _1
	}

	*(*int32)(unsafe.Pointer(_p)) = int32(7)
	goto _2

_1:
	*(*int32)(unsafe.Pointer(_p + 24)) = set5(&(*(*int32)(unsafe.Pointer(_p + 20))), int32(_iStart%int64(_nBuf)))
	*(*int64)(unsafe.Pointer(_p + 32)) = _iStart - int64(*(*int32)(unsafe.Pointer(_p + 20)))
	*(*int32)(unsafe.Pointer(_p + 16)) = _nBuf
	*(*uintptr)(unsafe.Pointer(_p + 40)) = _pFd
_2:
}

// _1406vdbePmaWriteVarint is defined at sqlite3.c:88437:13
func _1406vdbePmaWriteVarint(tls crt.TLS, _p uintptr /* *TPmaWriter = SPmaWriter */, _iVal uint64) {
	esc := crt.MustMalloc(10)
	var (
		_nByte int32
		_aByte = esc // *[10]uint8
	)
	defer crt.Free(esc)
	_nByte = _672sqlite3PutVarint(tls, _aByte, _iVal)
	_1407vdbePmaWriteBlob(tls, _p, _aByte, _nByte)
}

// _1407vdbePmaWriteBlob is defined at sqlite3.c:88385:13
func _1407vdbePmaWriteBlob(tls crt.TLS, _p uintptr /* *TPmaWriter = SPmaWriter */, _pData uintptr /* *Tu8 = uint8 */, _nData int32) {
	var (
		_nRem  int32
		_nCopy int32
	)
	_nRem = _nData
_1:
	if _nRem <= int32(0) || (*(*int32)(unsafe.Pointer(_p))) != int32(0) {
		goto _2
	}

	_nCopy = _nRem
	if _nCopy <= ((*(*int32)(unsafe.Pointer(_p + 16))) - (*(*int32)(unsafe.Pointer(_p + 24)))) {
		goto _3
	}

	_nCopy = (*(*int32)(unsafe.Pointer(_p + 16))) - (*(*int32)(unsafe.Pointer(_p + 24)))
_3:
	crt.Xmemcpy(tls, (*(*uintptr)(unsafe.Pointer(_p + 8)))+uintptr(*(*int32)(unsafe.Pointer(_p + 24))), _pData+uintptr(_nData-_nRem), uint64(_nCopy))
	{
		p := &(*(*int32)(unsafe.Pointer(_p + 24)))
		*p = int32(int32(*p) + _nCopy)
	}
	if (*(*int32)(unsafe.Pointer(_p + 24))) != (*(*int32)(unsafe.Pointer(_p + 16))) {
		goto _4
	}

	*(*int32)(unsafe.Pointer(_p)) = _163sqlite3OsWrite(tls, *(*uintptr)(unsafe.Pointer(_p + 40)), (*(*uintptr)(unsafe.Pointer(_p + 8)))+uintptr(*(*int32)(unsafe.Pointer(_p + 20))), (*(*int32)(unsafe.Pointer(_p + 24)))-(*(*int32)(unsafe.Pointer(_p + 20))), (*(*int64)(unsafe.Pointer(_p + 32)))+int64(*(*int32)(unsafe.Pointer(_p + 20))))
	*(*int32)(unsafe.Pointer(_p + 20)) = set5(&(*(*int32)(unsafe.Pointer(_p + 24))), int32(0))
	{
		p := &(*(*int64)(unsafe.Pointer(_p + 32)))
		*p = int64(int64(*p) + int64(*(*int32)(unsafe.Pointer(_p + 16))))
	}
_4:
	_nRem = int32(_nRem - _nCopy)
	goto _1

_2:
}

// _1408vdbePmaWriterFinish is defined at sqlite3.c:88418:12
func _1408vdbePmaWriterFinish(tls crt.TLS, _p uintptr /* *TPmaWriter = SPmaWriter */, _piEof uintptr /* *Ti64 = Tsqlite_int64 = int64 */) (r int32) {
	var _rc int32

	if (*(*int32)(unsafe.Pointer(_p))) != int32(0) || *(*uintptr)(unsafe.Pointer(_p + 8)) == 0 || (*(*int32)(unsafe.Pointer(_p + 24))) <= (*(*int32)(unsafe.Pointer(_p + 20))) {
		goto _1
	}

	*(*int32)(unsafe.Pointer(_p)) = _163sqlite3OsWrite(tls, *(*uintptr)(unsafe.Pointer(_p + 40)), (*(*uintptr)(unsafe.Pointer(_p + 8)))+uintptr(*(*int32)(unsafe.Pointer(_p + 20))), (*(*int32)(unsafe.Pointer(_p + 24)))-(*(*int32)(unsafe.Pointer(_p + 20))), (*(*int64)(unsafe.Pointer(_p + 32)))+int64(*(*int32)(unsafe.Pointer(_p + 20))))
_1:
	*(*int64)(unsafe.Pointer(_piEof)) = (*(*int64)(unsafe.Pointer(_p + 32))) + int64(*(*int32)(unsafe.Pointer(_p + 24)))
	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_p + 8)))
	_rc = *(*int32)(unsafe.Pointer(_p))
	crt.Xmemset(tls, _p, int32(0), uint64(48))
	return _rc
}

// _1409sqlite3ThreadCreate is defined at sqlite3.c:27370:20
func _1409sqlite3ThreadCreate(tls crt.TLS, _ppThread uintptr /* **TSQLiteThread = SSQLiteThread */, _xTask uintptr /* *func(crt.TLS, uintptr) uintptr */, _pIn uintptr /* *void */) (r int32) {
	var (
		_p  uintptr // *TSQLiteThread = SSQLiteThread
		_rc int32
	)

	*(*uintptr)(unsafe.Pointer(_ppThread)) = null
	_p = _198sqlite3Malloc(tls, uint64(40))
	if _p != 0 {
		goto _1
	}

	return int32(7)

_1:
	crt.Xmemset(tls, _p, int32(0), uint64(40))
	*(*uintptr)(unsafe.Pointer(_p + 24)) = _xTask
	*(*uintptr)(unsafe.Pointer(_p + 32)) = _pIn
	if _208sqlite3FaultSim(tls, int32(200)) == 0 {
		goto _2
	}

	_rc = int32(1)
	goto _3

_2:
	_rc = crt.Xpthread_create(tls, _p, null, _xTask, _pIn)
_3:
	if _rc == 0 {
		goto _4
	}

	*(*int32)(unsafe.Pointer(_p + 8)) = int32(1)
	*(*uintptr)(unsafe.Pointer(_p + 16)) = fn13(_xTask)(tls, _pIn)
_4:
	*(*uintptr)(unsafe.Pointer(_ppThread)) = _p
	return int32(0)
}

// _1410vdbeMergeEngineNew is defined at sqlite3.c:88082:20
func _1410vdbeMergeEngineNew(tls crt.TLS, _nReader int32) (r uintptr /* *TMergeEngine = SMergeEngine */) {
	var (
		_N     int32
		_nByte int32
		_pNew  uintptr // *TMergeEngine = SMergeEngine
	)
	_N = int32(2)

_1:
	if _N >= _nReader {
		goto _2
	}

	_N = int32(_N + _N)
	goto _1

_2:
	_nByte = int32(uint64(32) + (uint64(_N) * uint64(84)))
	_pNew = func() uintptr {
		if _208sqlite3FaultSim(tls, int32(100)) != 0 {
			return null
		}
		return _135sqlite3MallocZero(tls, uint64(_nByte))
	}()
	if _pNew == 0 {
		goto _3
	}

	*(*int32)(unsafe.Pointer(_pNew)) = _N
	*(*uintptr)(unsafe.Pointer(_pNew + 8)) = null
	*(*uintptr)(unsafe.Pointer(_pNew + 24)) = _pNew + 32
	*(*uintptr)(unsafe.Pointer(_pNew + 16)) = (*(*uintptr)(unsafe.Pointer(_pNew + 24))) + 80*uintptr(_N)
_3:
	return _pNew
}

// _1411vdbeSorterTreeDepth is defined at sqlite3.c:89244:12
func _1411vdbeSorterTreeDepth(tls crt.TLS, _nPMA int32) (r int32) {
	var (
		_nDepth int32
		_nDiv   int64
	)
	_nDepth = int32(0)
	_nDiv = int64(16)
_1:
	if _nDiv >= int64(_nPMA) {
		goto _2
	}

	_nDiv = _nDiv * int64(16)
	_nDepth++
	goto _1

_2:
	return _nDepth
}

// _1412vdbeMergeEngineLevel0 is defined at sqlite3.c:89205:12
func _1412vdbeMergeEngineLevel0(tls crt.TLS, _pTask uintptr /* *TSortSubtask = SSortSubtask */, _nPMA int32, _piOffset uintptr /* *Ti64 = Tsqlite_int64 = int64 */, _ppOut uintptr /* **TMergeEngine = SMergeEngine */) (r int32) {
	esc := crt.MustMalloc(8)
	var (
		_pNew   uintptr // *TMergeEngine = SMergeEngine
		_iOff   int64
		_i      int32
		_rc     int32
		_nDummy = esc   // *Ti64 = Tsqlite_int64 = int64
		_pReadr uintptr // *TPmaReader = SPmaReader
	)
	defer crt.Free(esc)
	_iOff = *(*int64)(unsafe.Pointer(_piOffset))
	_rc = int32(0)
	*(*uintptr)(unsafe.Pointer(_ppOut)) = set4(&_pNew, _1410vdbeMergeEngineNew(tls, _nPMA))
	if _pNew != 0 {
		goto _1
	}

	_rc = int32(7)
_1:
	_i = int32(0)
_2:
	if _i >= _nPMA || _rc != int32(0) {
		goto _4
	}

	*(*int64)(unsafe.Pointer(_nDummy)) = int64(0)
	_pReadr = (*(*uintptr)(unsafe.Pointer(_pNew + 24))) + 80*uintptr(_i)
	_rc = _1687vdbePmaReaderInit(tls, _pTask, _pTask+72, _iOff, _pReadr, _nDummy)
	_iOff = *(*int64)(unsafe.Pointer(_pReadr + 8))
	_i++
	goto _2

_4:
	if _rc == int32(0) {
		goto _5
	}

	_999vdbeMergeEngineFree(tls, _pNew)
	*(*uintptr)(unsafe.Pointer(_ppOut)) = null
_5:
	*(*int64)(unsafe.Pointer(_piOffset)) = _iOff
	return _rc
}

// _1413vdbeSorterAddToTree is defined at sqlite3.c:89262:12
func _1413vdbeSorterAddToTree(tls crt.TLS, _pTask uintptr /* *TSortSubtask = SSortSubtask */, _nDepth int32, _iSeq int32, _pRoot uintptr /* *TMergeEngine = SMergeEngine */, _pLeaf uintptr /* *TMergeEngine = SMergeEngine */) (r int32) {
	esc := crt.MustMalloc(8)
	var (
		_rc     int32
		_nDiv   int32
		_i      int32
		_p      uintptr // *TMergeEngine = SMergeEngine
		_pIncr  = esc   // **TIncrMerger = SIncrMerger
		_iIter  int32
		_pReadr uintptr // *TPmaReader = SPmaReader
		_pNew   uintptr // *TMergeEngine = SMergeEngine
	)
	defer crt.Free(esc)
	_rc = int32(0)
	_nDiv = int32(1)
	_p = _pRoot
	_rc = _1211vdbeIncrMergerNew(tls, _pTask, _pLeaf, _pIncr)
	_i = int32(1)
_1:
	if _i >= _nDepth {
		goto _3
	}

	_nDiv = _nDiv * int32(16)
	_i++
	goto _1

_3:
	_i = int32(1)
_4:
	if _i >= _nDepth || _rc != int32(0) {
		goto _6
	}

	_iIter = (_iSeq / _nDiv) % int32(16)
	_pReadr = (*(*uintptr)(unsafe.Pointer(_p + 24))) + 80*uintptr(_iIter)
	if (*(*uintptr)(unsafe.Pointer(_pReadr + 72))) != 0 {
		goto _7
	}

	_pNew = _1410vdbeMergeEngineNew(tls, int32(16))
	if _pNew != 0 {
		goto _8
	}

	_rc = int32(7)
	goto _9

_8:
	_rc = _1211vdbeIncrMergerNew(tls, _pTask, _pNew, _pReadr+72)
_9:
_7:
	if _rc != int32(0) {
		goto _10
	}

	_p = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pReadr + 72))) + 8))
	_nDiv = _nDiv / int32(16)
_10:
	_i++
	goto _4

_6:
	if _rc != int32(0) {
		goto _11
	}

	*(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_p + 24))) + 80*uintptr(_iSeq%int32(16))) + 72)) = *(*uintptr)(unsafe.Pointer(_pIncr))
	goto _12

_11:
	_1221vdbeIncrFree(tls, *(*uintptr)(unsafe.Pointer(_pIncr)))
_12:
	return _rc
}

// _1414vdbePmaReaderBgIncrInit is defined at sqlite3.c:89154:13
func _1414vdbePmaReaderBgIncrInit(tls crt.TLS, _pCtx uintptr /* *void */) (r uintptr /* *void */) {
	var (
		_pReader uintptr // *TPmaReader = SPmaReader
		_pRet    uintptr // *void
	)
	_pReader = _pCtx
	_pRet = uintptr(int64(_1214vdbePmaReaderIncrMergeInit(tls, _pReader, int32(1))))
	*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pReader + 72))))) + 8)) = int32(1)
	return _pRet
}

// _1415vdbeIncrPopulate is defined at sqlite3.c:88782:12
func _1415vdbeIncrPopulate(tls crt.TLS, _pIncr uintptr /* *TIncrMerger = SIncrMerger */) (r int32) {
	esc := crt.MustMalloc(52)
	var (
		_rc      int32
		_rc2     int32
		_iStart  int64
		_pOut    uintptr    // *TSorterFile = SSorterFile
		_pTask   uintptr    // *TSortSubtask = SSortSubtask
		_pMerger uintptr    // *TMergeEngine = SMergeEngine
		_writer  = esc      // *TPmaWriter = SPmaWriter
		_dummy   = esc + 48 // *int32
		_pReader uintptr    // *TPmaReader = SPmaReader
		_nKey    int32
		_iEof    int64
	)
	defer crt.Free(esc)
	_rc = int32(0)
	_iStart = *(*int64)(unsafe.Pointer(_pIncr + 16))
	_pOut = (_pIncr + 40) + 16
	_pTask = *(*uintptr)(unsafe.Pointer(_pIncr))
	_pMerger = *(*uintptr)(unsafe.Pointer(_pIncr + 8))

	_1405vdbePmaWriterInit(tls, *(*uintptr)(unsafe.Pointer(_pOut)), _writer, *(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTask + 16))) + 12)), _iStart)
_1:
	if _rc != int32(0) {
		goto _2
	}

	_pReader = (*(*uintptr)(unsafe.Pointer(_pMerger + 24))) + 80*uintptr(*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pMerger + 16))) + 4)))
	_nKey = *(*int32)(unsafe.Pointer(_pReader + 20))
	_iEof = (*(*int64)(unsafe.Pointer(_writer + 32))) + int64(*(*int32)(unsafe.Pointer(_writer + 24)))
	if (*(*uintptr)(unsafe.Pointer(_pReader + 24))) != 0 {
		goto _3
	}

	goto _2

_3:
	if ((_iEof + int64(_nKey)) + int64(_671sqlite3VarintLen(tls, uint64(_nKey)))) <= (_iStart + int64(*(*int32)(unsafe.Pointer(_pIncr + 24)))) {
		goto _4
	}

	goto _2

_4:
	_1406vdbePmaWriteVarint(tls, _writer, uint64(_nKey))
	_1407vdbePmaWriteBlob(tls, _writer, *(*uintptr)(unsafe.Pointer(_pReader + 40)), _nKey)

	_rc = _993vdbeMergeEngineStep(tls, *(*uintptr)(unsafe.Pointer(_pIncr + 8)), _dummy)
	goto _1

_2:
	_rc2 = _1408vdbePmaWriterFinish(tls, _writer, _pOut+8)
	if _rc != int32(0) {
		goto _5
	}

	_rc = _rc2
_5:
	return _rc
}

// _1416vdbeMergeEngineCompare is defined at sqlite3.c:88934:13
func _1416vdbeMergeEngineCompare(tls crt.TLS, _pMerger uintptr /* *TMergeEngine = SMergeEngine */, _iOut int32) {
	esc := crt.MustMalloc(4)
	var (
		_i1      int32
		_i2      int32
		_iRes    int32
		_p1      uintptr // *TPmaReader = SPmaReader
		_p2      uintptr // *TPmaReader = SPmaReader
		_pTask   uintptr // *TSortSubtask = SSortSubtask
		_bCached = esc   // *int32
		_res     int32
	)
	defer crt.Free(esc)

	if _iOut < ((*(*int32)(unsafe.Pointer(_pMerger))) / int32(2)) {
		goto _1
	}

	_i1 = (_iOut - ((*(*int32)(unsafe.Pointer(_pMerger))) / int32(2))) * int32(2)
	_i2 = _i1 + int32(1)
	goto _2

_1:
	_i1 = *(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pMerger + 16))) + 4*uintptr(_iOut*int32(2))))
	_i2 = *(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pMerger + 16))) + 4*uintptr((_iOut*int32(2))+int32(1))))
_2:
	_p1 = (*(*uintptr)(unsafe.Pointer(_pMerger + 24))) + 80*uintptr(_i1)
	_p2 = (*(*uintptr)(unsafe.Pointer(_pMerger + 24))) + 80*uintptr(_i2)
	if (*(*uintptr)(unsafe.Pointer(_p1 + 24))) != 0 {
		goto _3
	}

	_iRes = _i2
	goto _4

_3:
	if (*(*uintptr)(unsafe.Pointer(_p2 + 24))) != 0 {
		goto _5
	}

	_iRes = _i1
	goto _6

_5:
	_pTask = *(*uintptr)(unsafe.Pointer(_pMerger + 8))
	*(*int32)(unsafe.Pointer(_bCached)) = int32(0)

	_res = fn165(*(*uintptr)(unsafe.Pointer(_pTask + 64)))(tls, _pTask, _bCached, *(*uintptr)(unsafe.Pointer(_p1 + 40)), *(*int32)(unsafe.Pointer(_p1 + 20)), *(*uintptr)(unsafe.Pointer(_p2 + 40)), *(*int32)(unsafe.Pointer(_p2 + 20)))
	if _res > int32(0) {
		goto _7
	}

	_iRes = _i1
	goto _8

_7:
	_iRes = _i2
_8:
_6:
_4:
	*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pMerger + 16))) + 4*uintptr(_iOut))) = _iRes
}

// _1417vdbeIncrBgPopulate is defined at sqlite3.c:88834:12
func _1417vdbeIncrBgPopulate(tls crt.TLS, _pIncr uintptr /* *TIncrMerger = SIncrMerger */) (r int32) {
	var _p uintptr // *void

	_p = _pIncr

	return _1208vdbeSorterCreateThread(tls, *(*uintptr)(unsafe.Pointer(_pIncr)), fp11(_1688vdbeIncrPopulateThread), _p)
}

// _1418vdbeSorterMapFile is defined at sqlite3.c:87526:12
func _1418vdbeSorterMapFile(tls crt.TLS, _pTask uintptr /* *TSortSubtask = SSortSubtask */, _pFile uintptr /* *TSorterFile = SSorterFile */, _pp uintptr /* **Tu8 = uint8 */) (r int32) {
	var (
		_rc  int32
		_pFd uintptr // *Tsqlite3_file = Ssqlite3_file
	)
	_rc = int32(0)
	if (*(*int64)(unsafe.Pointer(_pFile + 8))) > int64(*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTask + 16))) + 32))) + 172))) {
		goto _1
	}

	_pFd = *(*uintptr)(unsafe.Pointer(_pFile))
	if (*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pFd))))) < int32(3) {
		goto _2
	}

	_rc = _1170sqlite3OsFetch(tls, _pFd, int64(0), int32(*(*int64)(unsafe.Pointer(_pFile + 8))), _pp)
_2:
_1:
	return _rc
}

// _1419sqlite3PcacheSetSpillsize is defined at sqlite3.c:45510:20
func _1419sqlite3PcacheSetSpillsize(tls crt.TLS, _p uintptr /* *TPCache = SPCache */, _mxPage int32) (r int32) {
	var _res int32

	if _mxPage == 0 {
		goto _1
	}

	if _mxPage >= int32(0) {
		goto _2
	}

	_mxPage = int32((int64(-1024) * int64(_mxPage)) / int64((*(*int32)(unsafe.Pointer(_p + 36)))+(*(*int32)(unsafe.Pointer(_p + 40)))))
_2:
	*(*int32)(unsafe.Pointer(_p + 32)) = _mxPage
_1:
	_res = _898numberOfCachePages(tls, _p)
	if _res >= (*(*int32)(unsafe.Pointer(_p + 32))) {
		goto _3
	}

	_res = *(*int32)(unsafe.Pointer(_p + 32))
_3:
	return _res
}

// _1420pragmaLocate is defined at sqlite3.c:114579:25
func _1420pragmaLocate(tls crt.TLS, _zName uintptr /* *int8 */) (r uintptr /* *TPragmaName = struct{XzName *in...XnPragCName uint8;XiArg uint32;} */) {
	var (
		_upr int32
		_lwr int32
		_mid int32
		_rc  int32
	)
	_mid = int32(0)
	_lwr = int32(0)
	_upr = int32(57)
_1:
	if _lwr > _upr {
		goto _2
	}

	_mid = (_lwr + _upr) / int32(2)
	_rc = Xsqlite3_stricmp(tls, _zName, *(*uintptr)(unsafe.Pointer(_1689aPragmaName + 16*uintptr(_mid))))
	if _rc != int32(0) {
		goto _3
	}

	goto _2

_3:
	if _rc >= int32(0) {
		goto _4
	}

	_upr = _mid - int32(1)
	goto _5

_4:
	_lwr = _mid + int32(1)
_5:
	goto _1

_2:
	if _lwr > _upr {
		return null
	}

	return _1689aPragmaName + 16*uintptr(_mid)
}

// _1421pragmaVtabModule Tsqlite3_module = Ssqlite3_module, escapes: true, sqlite3.c:116742:29
var _1421pragmaVtabModule = bss + 15984 // sqlite3_module

func init() {
	*(*Ssqlite3_module)(unsafe.Pointer(_1421pragmaVtabModule)) = Ssqlite3_module{
		XxConnect:    fp55(_1690pragmaVtabConnect),
		XxBestIndex:  fp56(_1691pragmaVtabBestIndex),
		XxDisconnect: fp10(_1692pragmaVtabDisconnect),
		XxOpen:       fp56(_1693pragmaVtabOpen),
		XxClose:      fp10(_1694pragmaVtabClose),
		XxFilter:     fp39(_1695pragmaVtabFilter),
		XxNext:       fp10(_1696pragmaVtabNext),
		XxEof:        fp10(_1697pragmaVtabEof),
		XxColumn:     fp57(_1698pragmaVtabColumn),
		XxRowid:      fp56(_1699pragmaVtabRowid),
	}
}

// _1422addModuleArgument is defined at sqlite3.c:126617:13
func _1422addModuleArgument(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pTable uintptr /* *TTable = STable */, _zArg uintptr /* *int8 */) {
	var (
		_nBytes      int32
		_azModuleArg uintptr // **int8
		_i           int32
	)
	_nBytes = int32(uint64(8) * uint64(int32(2)+(*(*int32)(unsafe.Pointer(_pTable + 84)))))
	_azModuleArg = _869sqlite3DbRealloc(tls, _db, *(*uintptr)(unsafe.Pointer(_pTable + 88)), uint64(_nBytes))
	if _azModuleArg != 0 {
		goto _1
	}

	_181sqlite3DbFree(tls, _db, _zArg)
	goto _2

_1:
	_i = postinc7(&(*(*int32)(unsafe.Pointer(_pTable + 84))))
	*(*uintptr)(unsafe.Pointer(_azModuleArg + 8*uintptr(_i))) = _zArg
	*(*uintptr)(unsafe.Pointer(_azModuleArg + 8*uintptr(_i+int32(1)))) = null
	*(*uintptr)(unsafe.Pointer(_pTable + 88)) = _azModuleArg
_2:
}

// _1423growOp3 is defined at sqlite3.c:72349:28
func _1423growOp3(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */, _op int32, _p1 int32, _p2 int32, _p3 int32) (r int32) {
	if _1242growOpArray(tls, _p, int32(1)) == 0 {
		goto _1
	}

	return int32(1)

_1:
	return _1241sqlite3VdbeAddOp3(tls, _p, _op, _p1, _p2, _p3)
}

// _1424zText [25]int8, escapes: true, sqlite3.c:114344:21
var _1424zText = ds + 16736

// _1425iOffset [8]uint8, escapes: true, sqlite3.c:114345:19
var _1425iOffset = ds + 16761

// _1426iLength [8]uint8, escapes: true, sqlite3.c:114346:19
var _1426iLength = ds + 16769

// _1427iValue [8]uint8, escapes: true, sqlite3.c:114347:19
var _1427iValue = ds + 16777

// _1428sqlite3StmtCurrentTime is defined at sqlite3.c:77662:30
func _1428sqlite3StmtCurrentTime(tls crt.TLS, _p uintptr /* *Tsqlite3_context = Ssqlite3_context */) (r int64) {
	var (
		_rc     int32
		_piTime uintptr // *Tsqlite3_int64 = Tsqlite_int64 = int64
	)
	_piTime = (*(*uintptr)(unsafe.Pointer(_p + 24))) + 72

	if (*(*int64)(unsafe.Pointer(_piTime))) != int64(0) {
		goto _1
	}

	_rc = _383sqlite3OsCurrentTimeInt64(tls, *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p))) + 40)))), _piTime)
	if _rc == 0 {
		goto _2
	}

	*(*int64)(unsafe.Pointer(_piTime)) = int64(0)
_2:
_1:
	return *(*int64)(unsafe.Pointer(_piTime))
}

// _1429parseYyyyMmDd is defined at sqlite3.c:19741:12
func _1429parseYyyyMmDd(tls crt.TLS, _zDate uintptr /* *int8 */, _p uintptr /* *TDateTime = SDateTime */) (r int32) {
	esc := crt.MustMalloc(36)
	var (
		_Y   = esc      // *int32
		_M   = esc + 16 // *int32
		_D   = esc + 32 // *int32
		_neg int32
	)
	defer crt.Free(esc)
	if int32(*(*int8)(unsafe.Pointer(_zDate))) != int32('-') {
		goto _1
	}

	_zDate++
	_neg = int32(1)
	goto _2

_1:
	_neg = int32(0)
_2:
	if _1700getDigits(tls, _zDate, ts+28847 /* "40f-21a-21d" */, _Y, _M, _D) == int32(3) {
		goto _3
	}

	return int32(1)

_3:
	_zDate += uintptr(10)
_4:
	if int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(uint8(*(*int8)(unsafe.Pointer(_zDate)))))))&int32(0x1) == 0 && int32('T') != int32(*(*uint8)(unsafe.Pointer(_zDate))) {
		goto _5
	}

	_zDate++
	goto _4

_5:
	if _1430parseHhMmSs(tls, _zDate, _p) != int32(0) {
		goto _6
	}

	goto _7

_6:
	if int32(*(*int8)(unsafe.Pointer(_zDate))) != int32(0) {
		goto _8
	}

	*(*int8)(unsafe.Pointer(_p + 43)) = int8(0)
	goto _9

_8:
	return int32(1)

_9:
_7:
	*(*int8)(unsafe.Pointer(_p + 40)) = int8(0)
	*(*int8)(unsafe.Pointer(_p + 42)) = int8(1)
	*(*int32)(unsafe.Pointer(_p + 8)) = func() int32 {
		if _neg != 0 {
			return -(*(*int32)(unsafe.Pointer(_Y)))
		}
		return *(*int32)(unsafe.Pointer(_Y))
	}()
	*(*int32)(unsafe.Pointer(_p + 12)) = *(*int32)(unsafe.Pointer(_M))
	*(*int32)(unsafe.Pointer(_p + 16)) = *(*int32)(unsafe.Pointer(_D))
	if (*(*int8)(unsafe.Pointer(_p + 44))) == 0 {
		goto _10
	}

	_1106computeJD(tls, _p)
_10:
	return int32(0)
}

// _1430parseHhMmSs is defined at sqlite3.c:19640:12
func _1430parseHhMmSs(tls crt.TLS, _zDate uintptr /* *int8 */, _p uintptr /* *TDateTime = SDateTime */) (r int32) {
	esc := crt.MustMalloc(36)
	var (
		_h      = esc      // *int32
		_m      = esc + 16 // *int32
		_s      = esc + 32 // *int32
		_ms     float64
		_rScale float64
	)
	defer crt.Free(esc)
	_ms = float64(0)
	if _1700getDigits(tls, _zDate, ts+28859 /* "20c:20e" */, _h, _m) == int32(2) {
		goto _1
	}

	return int32(1)

_1:
	_zDate += uintptr(5)
	if int32(*(*int8)(unsafe.Pointer(_zDate))) != int32(':') {
		goto _2
	}

	_zDate++
	if _1700getDigits(tls, _zDate, ts+28867 /* "20e" */, _s) == int32(1) {
		goto _4
	}

	return int32(1)

_4:
	_zDate += uintptr(2)
	if int32(*(*int8)(unsafe.Pointer(_zDate))) != int32('.') || int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(uint8(*(*int8)(unsafe.Pointer(_zDate + 1)))))))&int32(0x4) == 0 {
		goto _5
	}

	_rScale = float64(1)
	_zDate++
_6:
	if int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(uint8(*(*int8)(unsafe.Pointer(_zDate)))))))&int32(0x4) == 0 {
		goto _7
	}

	_ms = ((_ms * float64(10)) + float64(*(*int8)(unsafe.Pointer(_zDate)))) - float64('0')
	_rScale = float64(_rScale * float64(10))
	_zDate++
	goto _6

_7:
	_ms = float64(_ms / _rScale)
_5:
	goto _3

_2:
	*(*int32)(unsafe.Pointer(_s)) = int32(0)
_3:
	*(*int8)(unsafe.Pointer(_p + 40)) = int8(0)
	*(*int8)(unsafe.Pointer(_p + 41)) = int8(0)
	*(*int8)(unsafe.Pointer(_p + 43)) = int8(1)
	*(*int32)(unsafe.Pointer(_p + 20)) = *(*int32)(unsafe.Pointer(_h))
	*(*int32)(unsafe.Pointer(_p + 24)) = *(*int32)(unsafe.Pointer(_m))
	*(*float64)(unsafe.Pointer(_p + 32)) = float64(*(*int32)(unsafe.Pointer(_s))) + _ms
	if _1701parseTimezone(tls, _zDate, _p) == 0 {
		goto _8
	}

	return int32(1)

_8:
	*(*int8)(unsafe.Pointer(_p + 44)) = int8(func() int32 {
		if (*(*int32)(unsafe.Pointer(_p + 28))) != int32(0) {
			return int32(1)
		}
		return int32(0)
	}())
	return int32(0)
}

// _1431sqlite3NotPureFunc is defined at sqlite3.c:76787:20
func _1431sqlite3NotPureFunc(tls crt.TLS, _pCtx uintptr /* *Tsqlite3_context = Ssqlite3_context */) (r int32) {
	if int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pCtx + 24))) + 104))) + 24*uintptr(*(*int32)(unsafe.Pointer(_pCtx + 32)))))) != int32(163) {
		goto _1
	}

	Xsqlite3_result_error(tls, _pCtx, ts+28871 /* "non-deterministic function in in..." */, int32(-1))
	return int32(0)

_1:
	return int32(1)
}

// _1432localtimeOffset is defined at sqlite3.c:19992:22
func _1432localtimeOffset(tls crt.TLS, _p uintptr /* *TDateTime = SDateTime */, _pCtx uintptr /* *Tsqlite3_context = Ssqlite3_context */, _pRc uintptr /* *int32 */) (r int64) {
	esc := crt.MustMalloc(168)
	var (
		_x      = esc       // *TDateTime = SDateTime
		_y      = esc + 48  // *TDateTime = SDateTime
		_t      = esc + 96  // *Ttime_t = T__time_t = int64
		_sLocal = esc + 112 // *Stm
		_s      int32
	)
	defer crt.Free(esc)
	crt.Xmemset(tls, _sLocal, int32(0), uint64(56))
	*(*SDateTime)(unsafe.Pointer(_x)) = *(*SDateTime)(unsafe.Pointer(_p))
	_1109computeYMD_HMS(tls, _x)
	if (*(*int32)(unsafe.Pointer(_x + 8))) >= int32(1971) && (*(*int32)(unsafe.Pointer(_x + 8))) < int32(2038) {
		goto _1
	}

	*(*int32)(unsafe.Pointer(_x + 8)) = int32(2000)
	*(*int32)(unsafe.Pointer(_x + 12)) = int32(1)
	*(*int32)(unsafe.Pointer(_x + 16)) = int32(1)
	*(*int32)(unsafe.Pointer(_x + 20)) = int32(0)
	*(*int32)(unsafe.Pointer(_x + 24)) = int32(0)
	*(*float64)(unsafe.Pointer(_x + 32)) = float64(0)
	goto _2

_1:
	_s = int32((*(*float64)(unsafe.Pointer(_x + 32))) + float64(0.5))
	*(*float64)(unsafe.Pointer(_x + 32)) = float64(_s)
_2:
	*(*int32)(unsafe.Pointer(_x + 28)) = int32(0)
	*(*int8)(unsafe.Pointer(_x + 40)) = int8(0)
	_1106computeJD(tls, _x)
	*(*int64)(unsafe.Pointer(_t)) = int64(((*(*int64)(unsafe.Pointer(_x))) / int64(1000)) - int64(210866760000))
	if _1702osLocaltime(tls, _t, _sLocal) == 0 {
		goto _3
	}

	Xsqlite3_result_error(tls, _pCtx, ts+28938 /* "local time unavailable" */, int32(-1))
	*(*int32)(unsafe.Pointer(_pRc)) = int32(1)
	return int64(0)

_3:
	*(*int32)(unsafe.Pointer(_y + 8)) = (*(*int32)(unsafe.Pointer(_sLocal + 20))) + int32(1900)
	*(*int32)(unsafe.Pointer(_y + 12)) = (*(*int32)(unsafe.Pointer(_sLocal + 16))) + int32(1)
	*(*int32)(unsafe.Pointer(_y + 16)) = *(*int32)(unsafe.Pointer(_sLocal + 12))
	*(*int32)(unsafe.Pointer(_y + 20)) = *(*int32)(unsafe.Pointer(_sLocal + 8))
	*(*int32)(unsafe.Pointer(_y + 24)) = *(*int32)(unsafe.Pointer(_sLocal + 4))
	*(*float64)(unsafe.Pointer(_y + 32)) = float64(*(*int32)(unsafe.Pointer(_sLocal)))
	*(*int8)(unsafe.Pointer(_y + 42)) = int8(1)
	*(*int8)(unsafe.Pointer(_y + 43)) = int8(1)
	*(*int8)(unsafe.Pointer(_y + 40)) = int8(0)
	*(*int8)(unsafe.Pointer(_y + 41)) = int8(0)
	*(*int8)(unsafe.Pointer(_y + 44)) = int8(0)
	*(*int8)(unsafe.Pointer(_y + 46)) = int8(0)
	_1106computeJD(tls, _y)
	*(*int32)(unsafe.Pointer(_pRc)) = int32(0)
	return (*(*int64)(unsafe.Pointer(_y))) - (*(*int64)(unsafe.Pointer(_x)))
}

// _1433clearYMD_HMS_TZ is defined at sqlite3.c:19915:13
func _1433clearYMD_HMS_TZ(tls crt.TLS, _p uintptr /* *TDateTime = SDateTime */) {
	*(*int8)(unsafe.Pointer(_p + 42)) = int8(0)
	*(*int8)(unsafe.Pointer(_p + 43)) = int8(0)
	*(*int8)(unsafe.Pointer(_p + 44)) = int8(0)
}

// _1434aXformType [6]struct{XeType uint8;XnName ui...rLimit float64;XrXform float64;}, escapes: true, sqlite3.c:20063:3
var _1434aXformType = bss + 16168 // array of 6 struct{eType u8; nName u8; zName pointer to char; rLimit double; rXform double}

func init() {
	*(*[6]struct {
		XeType  uint8
		XnName  uint8
		XzName  uintptr // *int8
		XrLimit float64
		XrXform float64
	})(unsafe.Pointer(_1434aXformType)) = [6]struct {
		XeType  uint8
		XnName  uint8
		XzName  uintptr // *int8
		XrLimit float64
		XrXform float64
	}{
		0:

		// *int8

		{
			XnName:  uint8(6),
			XzName:  ts + 28961, /* "second" */
			XrLimit: float64(4.642690608e+11),
			XrXform: float64(1000),
		},
		1:

		// *int8

		{
			XnName:  uint8(6),
			XzName:  ts + 28968, /* "minute" */
			XrLimit: float64(7.73781768e+09),
			XrXform: float64(60000),
		},
		2:

		// *int8

		{
			XnName:  uint8(4),
			XzName:  ts + 28975, /* "hour" */
			XrLimit: float64(1.28963628e+08),
			XrXform: float64(3.6e+06),
		},
		3:

		// *int8

		{
			XnName:  uint8(3),
			XzName:  ts + 24597, /* "day" */
			XrLimit: float64(5.373485e+06),
			XrXform: float64(8.64e+07),
		},
		4:

		// *int8

		{
			XeType:  uint8(1),
			XnName:  uint8(5),
			XzName:  ts + 24586, /* "month" */
			XrLimit: float64(176546),
			XrXform: float64(2.592e+09),
		},
		5:

		// *int8

		{
			XeType:  uint8(2),
			XnName:  uint8(4),
			XzName:  ts + 24592, /* "year" */
			XrLimit: float64(14713),
			XrXform: float64(3.1536e+10),
		},
	}
}

// _1435unixClose is defined at sqlite3.c:32365:12
func _1435unixClose(tls crt.TLS, _id uintptr /* *Tsqlite3_file = Ssqlite3_file */) (r int32) {
	var (
		_rc    int32
		_pFile uintptr // *TunixFile = SunixFile
	)
	_rc = int32(0)
	_pFile = _id
	_1281verifyDbFile(tls, _pFile)
	_1442unixUnlock(tls, _id, int32(0))
	_1123unixEnterMutex(tls)

	if *(*uintptr)(unsafe.Pointer(_pFile + 16)) == 0 || (*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pFile + 16))) + 40))) == 0 {
		goto _1
	}

	_1703setPendingFd(tls, _pFile)
_1:
	_1704releaseInodeInfo(tls, _pFile)
	_rc = _1705closeUnixFile(tls, _id)
	_1124unixLeaveMutex(tls)
	return _rc
}

// _1436unixRead is defined at sqlite3.c:33563:12
func _1436unixRead(tls crt.TLS, _id uintptr /* *Tsqlite3_file = Ssqlite3_file */, _pBuf uintptr /* *void */, _amt int32, _offset int64) (r int32) {
	var (
		_pFile uintptr // *TunixFile = SunixFile
		_got   int32
		_nCopy int32
	)
	_pFile = _id

	if _offset >= (*(*int64)(unsafe.Pointer(_pFile + 80))) {
		goto _1
	}

	if (_offset + int64(_amt)) > (*(*int64)(unsafe.Pointer(_pFile + 80))) {
		goto _2
	}

	crt.Xmemcpy(tls, _pBuf, (*(*uintptr)(unsafe.Pointer(_pFile + 104)))+uintptr(_offset), uint64(_amt))
	return int32(0)

	goto _3

_2:
	_nCopy = int32((*(*int64)(unsafe.Pointer(_pFile + 80))) - _offset)
	crt.Xmemcpy(tls, _pBuf, (*(*uintptr)(unsafe.Pointer(_pFile + 104)))+uintptr(_offset), uint64(_nCopy))
	_pBuf = _pBuf + uintptr(_nCopy)
	_amt = int32(_amt - _nCopy)
	_offset = int64(_offset + int64(_nCopy))
_3:
_1:
	_got = _1706seekAndRead(tls, _pFile, _offset, _pBuf, _amt)
	if _got != _amt {
		goto _4
	}

	return int32(0)

	goto _5

_4:
	if _got >= int32(0) {
		goto _6
	}

	return int32(266)

	goto _7

_6:
	_1280storeLastErrno(tls, _pFile, int32(0))
	crt.Xmemset(tls, _pBuf+uintptr(_got), int32(0), uint64(_amt-_got))
	return int32(522)

_7:
_5:
	return r
}

// _1437unixWrite is defined at sqlite3.c:33677:12
func _1437unixWrite(tls crt.TLS, _id uintptr /* *Tsqlite3_file = Ssqlite3_file */, _pBuf uintptr /* *void */, _amt int32, _offset int64) (r int32) {
	var (
		_pFile uintptr // *TunixFile = SunixFile
		_wrote int32
	)
	_pFile = _id
	_wrote = int32(0)

_1:
	if set5(&_wrote, _1707seekAndWrite(tls, _pFile, _offset, _pBuf, _amt)) >= _amt || _wrote <= int32(0) {
		goto _2
	}

	_amt = int32(_amt - _wrote)
	_offset = int64(_offset + int64(_wrote))
	_pBuf = _pBuf + uintptr(_wrote)
	goto _1

_2:
	if _amt <= _wrote {
		goto _3
	}

	if _wrote >= int32(0) || (*(*int32)(unsafe.Pointer(_pFile + 32))) == int32(28) {
		goto _4
	}

	return int32(778)

	goto _5

_4:
	_1280storeLastErrno(tls, _pFile, int32(0))
	return int32(13)

_5:
_3:
	return int32(0)
}

// _1438unixTruncate is defined at sqlite3.c:33995:12
func _1438unixTruncate(tls crt.TLS, _id uintptr /* *Tsqlite3_file = Ssqlite3_file */, _nByte int64) (r int32) {
	var (
		_pFile uintptr // *TunixFile = SunixFile
		_rc    int32
	)
	_pFile = _id

	if (*(*int32)(unsafe.Pointer(_pFile + 72))) <= int32(0) {
		goto _1
	}

	_nByte = (((_nByte + int64(*(*int32)(unsafe.Pointer(_pFile + 72)))) - int64(1)) / int64(*(*int32)(unsafe.Pointer(_pFile + 72)))) * int64(*(*int32)(unsafe.Pointer(_pFile + 72)))
_1:
	_rc = _1708robust_ftruncate(tls, *(*int32)(unsafe.Pointer(_pFile + 24)), _nByte)
	if _rc == 0 {
		goto _2
	}

	_1280storeLastErrno(tls, _pFile, *(*int32)(unsafe.Pointer(crt.X__errno_location(tls))))
	return _1116unixLogErrorAtLine(tls, int32(1546), ts+23864 /* "ftruncate" */, *(*uintptr)(unsafe.Pointer(_pFile + 56)), int32(34013))

	goto _3

_2:
	if _nByte >= int64(*(*int64)(unsafe.Pointer(_pFile + 80))) {
		goto _4
	}

	*(*int64)(unsafe.Pointer(_pFile + 80)) = int64(_nByte)
_4:
	return int32(0)

_3:
	return r
}

// _1439unixSync is defined at sqlite3.c:33945:12
func _1439unixSync(tls crt.TLS, _id uintptr /* *Tsqlite3_file = Ssqlite3_file */, _flags int32) (r int32) {
	esc := crt.MustMalloc(4)
	var (
		_rc         int32
		_pFile      uintptr // *TunixFile = SunixFile
		_isDataOnly int32
		_isFullsync int32
		_dirfd      = esc // *int32
	)
	defer crt.Free(esc)
	_pFile = _id
	_isDataOnly = _flags & int32(0x10)
	_isFullsync = bool2int((_flags & int32(0xf)) == int32(0x3))

	_rc = _1120full_fsync(tls, *(*int32)(unsafe.Pointer(_pFile + 24)), _isFullsync, _isDataOnly)
	if _rc == 0 {
		goto _1
	}

	_1280storeLastErrno(tls, _pFile, *(*int32)(unsafe.Pointer(crt.X__errno_location(tls))))
	return _1116unixLogErrorAtLine(tls, int32(1034), ts+28980 /* "full_fsync" */, *(*uintptr)(unsafe.Pointer(_pFile + 56)), int32(33968))

_1:
	if (int32(*(*uint16)(unsafe.Pointer(_pFile + 30))) & int32(0x8)) == 0 {
		goto _2
	}

	_rc = fn58(*(*uintptr)(unsafe.Pointer((_1118aSyscall + 408) + 8)))(tls, *(*uintptr)(unsafe.Pointer(_pFile + 56)), _dirfd)
	if _rc != int32(0) {
		goto _3
	}

	_1120full_fsync(tls, *(*int32)(unsafe.Pointer(_dirfd)), int32(0), int32(0))
	_1121robust_close(tls, _pFile, *(*int32)(unsafe.Pointer(_dirfd)), int32(33982))
	goto _4

_3:
	_rc = int32(0)
_4:
	{
		p := &(*(*uint16)(unsafe.Pointer(_pFile + 30)))
		*p = uint16(int32(*p) & int32(-9))
	}
_2:
	return _rc
}

// _1440unixFileSize is defined at sqlite3.c:34045:12
func _1440unixFileSize(tls crt.TLS, _id uintptr /* *Tsqlite3_file = Ssqlite3_file */, _pSize uintptr /* *Ti64 = Tsqlite_int64 = int64 */) (r int32) {
	esc := crt.MustMalloc(144)
	var (
		_rc  int32
		_buf = esc // *Sstat64
	)
	defer crt.Free(esc)

	_rc = fn172(*(*uintptr)(unsafe.Pointer((_1118aSyscall + 120) + 8)))(tls, *(*int32)(unsafe.Pointer(_id + 24)), _buf)
	if _rc == int32(0) {
		goto _1
	}

	_1280storeLastErrno(tls, _id, *(*int32)(unsafe.Pointer(crt.X__errno_location(tls))))
	return int32(1802)

_1:
	*(*int64)(unsafe.Pointer(_pSize)) = int64(*(*int64)(unsafe.Pointer(_buf + 48)))
	if (*(*int64)(unsafe.Pointer(_pSize))) != int64(1) {
		goto _2
	}

	*(*int64)(unsafe.Pointer(_pSize)) = int64(0)
_2:
	return int32(0)
}

// _1441unixLock is defined at sqlite3.c:31898:12
func _1441unixLock(tls crt.TLS, _id uintptr /* *Tsqlite3_file = Ssqlite3_file */, _eFileLock int32) (r int32) {
	esc := crt.MustMalloc(32)
	var (
		_rc     int32
		_pFile  uintptr // *TunixFile = SunixFile
		_pInode uintptr // *TunixInodeInfo = SunixInodeInfo
		_lock   = esc   // *Sflock
		_tErrno int32
	)
	defer crt.Free(esc)
	_rc = int32(0)
	_pFile = _id
	_tErrno = int32(0)

	if int32(*(*uint8)(unsafe.Pointer(_pFile + 28))) < _eFileLock {
		goto _1
	}

	return int32(0)

_1:
	_1123unixEnterMutex(tls)
	_pInode = *(*uintptr)(unsafe.Pointer(_pFile + 16))
	if int32(*(*uint8)(unsafe.Pointer(_pFile + 28))) == int32(*(*uint8)(unsafe.Pointer(_pInode + 20))) || int32(*(*uint8)(unsafe.Pointer(_pInode + 20))) < int32(3) && _eFileLock <= int32(1) {
		goto _2
	}

	_rc = int32(5)
	goto _end_lock

_2:
	if _eFileLock != int32(1) || int32(*(*uint8)(unsafe.Pointer(_pInode + 20))) != int32(1) && int32(*(*uint8)(unsafe.Pointer(_pInode + 20))) != int32(2) {
		goto _3
	}

	*(*uint8)(unsafe.Pointer(_pFile + 28)) = uint8(1)
	(*(*int32)(unsafe.Pointer(_pInode + 16)))++
	(*(*int32)(unsafe.Pointer(_pInode + 40)))++
	goto _end_lock

_3:
	*(*int64)(unsafe.Pointer(_lock + 16)) = int64(1)
	*(*int16)(unsafe.Pointer(_lock + 2)) = int16(0)
	if _eFileLock != int32(1) && (_eFileLock != int32(4) || int32(*(*uint8)(unsafe.Pointer(_pFile + 28))) >= int32(3)) {
		goto _4
	}

	*(*int16)(unsafe.Pointer(_lock)) = int16(func() int32 {
		if _eFileLock == int32(1) {
			return int32(0)
		}
		return int32(1)
	}())
	*(*int64)(unsafe.Pointer(_lock + 8)) = int64(_149sqlite3PendingByte)
	if _1709unixFileLock(tls, _pFile, _lock) == 0 {
		goto _5
	}

	_tErrno = *(*int32)(unsafe.Pointer(crt.X__errno_location(tls)))
	_rc = _1710sqliteErrorFromPosixError(tls, _tErrno, int32(3850))
	if _rc == int32(5) {
		goto _6
	}

	_1280storeLastErrno(tls, _pFile, _tErrno)
_6:
	goto _end_lock

_5:
_4:
	if _eFileLock != int32(1) {
		goto _7
	}

	*(*int64)(unsafe.Pointer(_lock + 8)) = int64(_149sqlite3PendingByte + int32(2))
	*(*int64)(unsafe.Pointer(_lock + 16)) = int64(510)
	if _1709unixFileLock(tls, _pFile, _lock) == 0 {
		goto _9
	}

	_tErrno = *(*int32)(unsafe.Pointer(crt.X__errno_location(tls)))
	_rc = _1710sqliteErrorFromPosixError(tls, _tErrno, int32(3850))
_9:
	*(*int64)(unsafe.Pointer(_lock + 8)) = int64(_149sqlite3PendingByte)
	*(*int64)(unsafe.Pointer(_lock + 16)) = int64(1)
	*(*int16)(unsafe.Pointer(_lock)) = int16(2)
	if _1709unixFileLock(tls, _pFile, _lock) == 0 || _rc != int32(0) {
		goto _10
	}

	_tErrno = *(*int32)(unsafe.Pointer(crt.X__errno_location(tls)))
	_rc = int32(2058)
_10:
	if _rc == 0 {
		goto _11
	}

	if _rc == int32(5) {
		goto _13
	}

	_1280storeLastErrno(tls, _pFile, _tErrno)
_13:
	goto _end_lock

	goto _12

_11:
	*(*uint8)(unsafe.Pointer(_pFile + 28)) = uint8(1)
	(*(*int32)(unsafe.Pointer(_pInode + 40)))++
	*(*int32)(unsafe.Pointer(_pInode + 16)) = int32(1)
_12:
	goto _8

_7:
	if _eFileLock != int32(4) || (*(*int32)(unsafe.Pointer(_pInode + 16))) <= int32(1) {
		goto _14
	}

	_rc = int32(5)
	goto _15

_14:
	*(*int16)(unsafe.Pointer(_lock)) = int16(1)

	if _eFileLock != int32(2) {
		goto _16
	}

	*(*int64)(unsafe.Pointer(_lock + 8)) = int64(_149sqlite3PendingByte + int32(1))
	*(*int64)(unsafe.Pointer(_lock + 16)) = int64(1)
	goto _17

_16:
	*(*int64)(unsafe.Pointer(_lock + 8)) = int64(_149sqlite3PendingByte + int32(2))
	*(*int64)(unsafe.Pointer(_lock + 16)) = int64(510)
_17:
	if _1709unixFileLock(tls, _pFile, _lock) == 0 {
		goto _18
	}

	_tErrno = *(*int32)(unsafe.Pointer(crt.X__errno_location(tls)))
	_rc = _1710sqliteErrorFromPosixError(tls, _tErrno, int32(3850))
	if _rc == int32(5) {
		goto _19
	}

	_1280storeLastErrno(tls, _pFile, _tErrno)
_19:
_18:
_15:
_8:
	if _rc != int32(0) {
		goto _20
	}

	*(*uint8)(unsafe.Pointer(_pFile + 28)) = uint8(_eFileLock)
	*(*uint8)(unsafe.Pointer(_pInode + 20)) = uint8(_eFileLock)
	goto _21

_20:
	if _eFileLock != int32(4) {
		goto _22
	}

	*(*uint8)(unsafe.Pointer(_pFile + 28)) = uint8(3)
	*(*uint8)(unsafe.Pointer(_pInode + 20)) = uint8(3)
_22:
_21:
	goto _end_lock
_end_lock:
	_1124unixLeaveMutex(tls)
	return _rc
}

// _1442unixUnlock is defined at sqlite3.c:32308:12
func _1442unixUnlock(tls crt.TLS, _id uintptr /* *Tsqlite3_file = Ssqlite3_file */, _eFileLock int32) (r int32) {
	return _1711posixUnlock(tls, _id, _eFileLock, int32(0))
}

// _1443unixCheckReservedLock is defined at sqlite3.c:31788:12
func _1443unixCheckReservedLock(tls crt.TLS, _id uintptr /* *Tsqlite3_file = Ssqlite3_file */, _pResOut uintptr /* *int32 */) (r int32) {
	esc := crt.MustMalloc(32)
	var (
		_rc       int32
		_reserved int32
		_pFile    uintptr // *TunixFile = SunixFile
		_lock     = esc   // *Sflock
	)
	defer crt.Free(esc)
	_rc = int32(0)
	_reserved = int32(0)
	_pFile = _id

	_1123unixEnterMutex(tls)
	if int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pFile + 16))) + 20))) <= int32(1) {
		goto _1
	}

	_reserved = int32(1)
_1:
	if _reserved != 0 || (*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pFile + 16))) + 21))) != 0 {
		goto _2
	}

	*(*int16)(unsafe.Pointer(_lock + 2)) = int16(0)
	*(*int64)(unsafe.Pointer(_lock + 8)) = int64(_149sqlite3PendingByte + int32(1))
	*(*int64)(unsafe.Pointer(_lock + 16)) = int64(1)
	*(*int16)(unsafe.Pointer(_lock)) = int16(1)
	if fn174(*(*uintptr)(unsafe.Pointer((_1118aSyscall + 168) + 8)))(tls, *(*int32)(unsafe.Pointer(_pFile + 24)), int32(5), _lock) == 0 {
		goto _3
	}

	_rc = int32(3594)
	_1280storeLastErrno(tls, _pFile, *(*int32)(unsafe.Pointer(crt.X__errno_location(tls))))
	goto _4

_3:
	if int32(*(*int16)(unsafe.Pointer(_lock))) == int32(2) {
		goto _5
	}

	_reserved = int32(1)
_5:
_4:
_2:
	_1124unixLeaveMutex(tls)
	*(*int32)(unsafe.Pointer(_pResOut)) = _reserved
	return _rc
}

// _1444unixFileControl is defined at sqlite3.c:34168:12
func _1444unixFileControl(tls crt.TLS, _id uintptr /* *Tsqlite3_file = Ssqlite3_file */, _op int32, _pArg uintptr /* *void */) (r int32) {
	var (
		_pFile    uintptr // *TunixFile = SunixFile
		_rc       int32
		_zTFile   uintptr // *int8
		_newLimit int64
		_1rc      int32
	)
	_pFile = _id
	switch _op {
	case int32(1):
		goto _2
	case int32(4):
		goto _3
	case int32(6):
		goto _4
	case int32(5):
		goto _5
	case int32(10):
		goto _6
	case int32(13):
		goto _7
	case int32(12):
		goto _8
	case int32(16):
		goto _9
	case int32(20):
		goto _10
	case int32(18):
		goto _11
	}
	goto _1

_2:
	*(*int32)(unsafe.Pointer(_pArg)) = int32(*(*uint8)(unsafe.Pointer(_pFile + 28)))
	return int32(0)

_3:
	*(*int32)(unsafe.Pointer(_pArg)) = *(*int32)(unsafe.Pointer(_pFile + 32))
	return int32(0)

_4:
	*(*int32)(unsafe.Pointer(_pFile + 72)) = *(*int32)(unsafe.Pointer(_pArg))
	return int32(0)

_5:
	_rc = _1712fcntlSizeHint(tls, _pFile, *(*int64)(unsafe.Pointer(_pArg)))
	return _rc

_6:
	_1713unixModeBit(tls, _pFile, uint8(0x4), _pArg)
	return int32(0)

_7:
	_1713unixModeBit(tls, _pFile, uint8(0x10), _pArg)
	return int32(0)

_8:
	*(*uintptr)(unsafe.Pointer(_pArg)) = Xsqlite3_mprintf(tls, ts+429 /* "%s" */, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pFile + 8))) + 24)))
	return int32(0)

_9:
	_zTFile = Xsqlite3_malloc64(tls, uint64(*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pFile + 8))) + 8))))
	if _zTFile == 0 {
		goto _12
	}

	_1113unixGetTempname(tls, *(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pFile + 8))) + 8)), _zTFile)
	*(*uintptr)(unsafe.Pointer(_pArg)) = _zTFile
_12:
	return int32(0)

_10:
	*(*int32)(unsafe.Pointer(_pArg)) = _1462fileHasMoved(tls, _pFile)
	return int32(0)

_11:
	_newLimit = *(*int64)(unsafe.Pointer(_pArg))
	_1rc = int32(0)
	if _newLimit <= int64(*(*int64)(unsafe.Pointer(_28sqlite3Config + 320))) {
		goto _13
	}

	_newLimit = int64(*(*int64)(unsafe.Pointer(_28sqlite3Config + 320)))
_13:
	goto _14

_14:
	*(*int64)(unsafe.Pointer(_pArg)) = int64(*(*int64)(unsafe.Pointer(_pFile + 96)))
	if _newLimit < int64(0) || _newLimit == int64(*(*int64)(unsafe.Pointer(_pFile + 96))) || (*(*int32)(unsafe.Pointer(_pFile + 76))) != int32(0) {
		goto _15
	}

	*(*int64)(unsafe.Pointer(_pFile + 96)) = int64(_newLimit)
	if (*(*int64)(unsafe.Pointer(_pFile + 80))) <= int64(0) {
		goto _16
	}

	_1714unixUnmapfile(tls, _pFile)
	_1rc = _1715unixMapfile(tls, _pFile, int64(-1))
_16:
_15:
	return _1rc

_1:
	return int32(12)
}

// _1445unixSectorSize is defined at sqlite3.c:34393:12
func _1445unixSectorSize(tls crt.TLS, _id uintptr /* *Tsqlite3_file = Ssqlite3_file */) (r int32) {
	var _pFd uintptr // *TunixFile = SunixFile

	_pFd = _id
	_1716setDeviceCharacteristics(tls, _pFd)
	return *(*int32)(unsafe.Pointer(_pFd + 112))
}

// _1446unixDeviceCharacteristics is defined at sqlite3.c:34412:12
func _1446unixDeviceCharacteristics(tls crt.TLS, _id uintptr /* *Tsqlite3_file = Ssqlite3_file */) (r int32) {
	var _pFd uintptr // *TunixFile = SunixFile

	_pFd = _id
	_1716setDeviceCharacteristics(tls, _pFd)
	return *(*int32)(unsafe.Pointer(_pFd + 116))
}

// _1447unixShmMap is defined at sqlite3.c:34823:12
func _1447unixShmMap(tls crt.TLS, _fd uintptr /* *Tsqlite3_file = Ssqlite3_file */, _iRegion int32, _szRegion int32, _bExtend int32, _pp uintptr /* **void */) (r int32) {
	esc := crt.MustMalloc(148)
	var (
		_pDbFd      uintptr // *TunixFile = SunixFile
		_p          uintptr // *TunixShm = SunixShm
		_pShmNode   uintptr // *TunixShmNode = SunixShmNode
		_rc         int32
		_nShmPerMap int32
		_nReqRegion int32
		_apNew      uintptr // **int8
		_nByte      int32
		_sStat      = esc // *Sstat64
		_iPg        int32
		_x          = esc + 144 // *int32
		_zFile      uintptr     // *int8
		_nMap       int32
		_i          int32
		_pMem       uintptr // *void
	)
	defer crt.Free(esc)
	_pDbFd = _fd
	_rc = int32(0)
	_nShmPerMap = _1718unixShmRegionPerMap(tls)
	if (*(*uintptr)(unsafe.Pointer(_pDbFd + 64))) != 0 {
		goto _1
	}

	_rc = _1719unixOpenSharedMemory(tls, _pDbFd)
	if _rc == int32(0) {
		goto _2
	}

	return _rc

_2:
_1:
	_p = *(*uintptr)(unsafe.Pointer(_pDbFd + 64))
	_pShmNode = *(*uintptr)(unsafe.Pointer(_p))
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_pShmNode + 8)))

	_nReqRegion = ((_iRegion + _nShmPerMap) / _nShmPerMap) * _nShmPerMap
	if int32(*(*uint16)(unsafe.Pointer(_pShmNode + 32))) >= _nReqRegion {
		goto _3
	}

	_nByte = _nReqRegion * _szRegion
	*(*int32)(unsafe.Pointer(_pShmNode + 28)) = _szRegion
	if (*(*int32)(unsafe.Pointer(_pShmNode + 24))) < int32(0) {
		goto _4
	}

	if fn172(*(*uintptr)(unsafe.Pointer((_1118aSyscall + 120) + 8)))(tls, *(*int32)(unsafe.Pointer(_pShmNode + 24)), _sStat) == 0 {
		goto _5
	}

	_rc = int32(4874)
	goto _shmpage_out

_5:
	if (*(*int64)(unsafe.Pointer(_sStat + 48))) >= int64(_nByte) {
		goto _6
	}

	if _bExtend != 0 {
		goto _7
	}

	goto _shmpage_out

	goto _8

_7:
	_iPg = int32((*(*int64)(unsafe.Pointer(_sStat + 48))) / int64(_1717pgsz))
_9:
	if _iPg >= (_nByte / _1717pgsz) {
		goto _11
	}

	*(*int32)(unsafe.Pointer(_x)) = int32(0)
	if _1720seekAndWriteFd(tls, *(*int32)(unsafe.Pointer(_pShmNode + 24)), int64(((_iPg*_1717pgsz)+_1717pgsz)-int32(1)), ts+4553 /* "" */, int32(1), _x) == int32(1) {
		goto _12
	}

	_zFile = *(*uintptr)(unsafe.Pointer(_pShmNode + 16))
	_rc = _1116unixLogErrorAtLine(tls, int32(4874), ts+23894 /* "write" */, _zFile, int32(34896))
	goto _shmpage_out

_12:
	_iPg++
	goto _9

_11:
_8:
_6:
_4:
	_apNew = Xsqlite3_realloc(tls, *(*uintptr)(unsafe.Pointer(_pShmNode + 40)), int32(uint64(_nReqRegion)*uint64(8)))
	if _apNew != 0 {
		goto _13
	}

	_rc = int32(3082)
	goto _shmpage_out

_13:
	*(*uintptr)(unsafe.Pointer(_pShmNode + 40)) = _apNew
_14:
	if int32(*(*uint16)(unsafe.Pointer(_pShmNode + 32))) >= _nReqRegion {
		goto _15
	}

	_nMap = _szRegion * _nShmPerMap
	if (*(*int32)(unsafe.Pointer(_pShmNode + 24))) < int32(0) {
		goto _16
	}

	_pMem = fn210(*(*uintptr)(unsafe.Pointer((_1118aSyscall + 528) + 8)))(tls, null, uint64(_nMap), func() int32 {
		if (*(*uint8)(unsafe.Pointer(_pShmNode + 34))) != 0 {
			return int32(0x1)
		}
		return int32(3)
	}(), int32(0x1), *(*int32)(unsafe.Pointer(_pShmNode + 24)), int64(int64(_szRegion)*int64(*(*uint16)(unsafe.Pointer(_pShmNode + 32)))))
	if _pMem != uintptr(18446744073709551615) {
		goto _18
	}

	_rc = _1116unixLogErrorAtLine(tls, int32(5386), ts+23974 /* "mmap" */, *(*uintptr)(unsafe.Pointer(_pShmNode + 16)), int32(34923))
	goto _shmpage_out

_18:
	goto _17

_16:
	_pMem = Xsqlite3_malloc64(tls, uint64(_szRegion))
	if _pMem != 0 {
		goto _19
	}

	_rc = int32(7)
	goto _shmpage_out

_19:
	crt.Xmemset(tls, _pMem, int32(0), uint64(_szRegion))
_17:
	_i = int32(0)
_20:
	if _i >= _nShmPerMap {
		goto _22
	}

	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pShmNode + 40))) + 8*uintptr(int32(*(*uint16)(unsafe.Pointer(_pShmNode + 32)))+_i))) = _pMem + uintptr(_szRegion*_i)
	_i++
	goto _20

_22:
	{
		p := &(*(*uint16)(unsafe.Pointer(_pShmNode + 32)))
		*p = uint16(int32(*p) + _nShmPerMap)
	}
	goto _14

_15:
_3:
	goto _shmpage_out
_shmpage_out:
	if int32(*(*uint16)(unsafe.Pointer(_pShmNode + 32))) <= _iRegion {
		goto _23
	}

	*(*uintptr)(unsafe.Pointer(_pp)) = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pShmNode + 40))) + 8*uintptr(_iRegion)))
	goto _24

_23:
	*(*uintptr)(unsafe.Pointer(_pp)) = null
_24:
	if (*(*uint8)(unsafe.Pointer(_pShmNode + 34))) == 0 || _rc != int32(0) {
		goto _25
	}

	_rc = int32(8)
_25:
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_pShmNode + 8)))
	return _rc
}

// _1448unixShmLock is defined at sqlite3.c:34961:12
func _1448unixShmLock(tls crt.TLS, _fd uintptr /* *Tsqlite3_file = Ssqlite3_file */, _ofst int32, _n int32, _flags int32) (r int32) {
	var (
		_pDbFd     uintptr // *TunixFile = SunixFile
		_p         uintptr // *TunixShm = SunixShm
		_pX        uintptr // *TunixShm = SunixShm
		_pShmNode  uintptr // *TunixShmNode = SunixShmNode
		_rc        int32
		_mask      uint16
		_allMask   uint16
		_allShared uint16
	)
	_pDbFd = _fd
	_p = *(*uintptr)(unsafe.Pointer(_pDbFd + 64))
	_pShmNode = *(*uintptr)(unsafe.Pointer(_p))
	_rc = int32(0)

	_mask = uint16((int32(1) << (uint(_ofst+_n) % 32)) - (int32(1) << (uint(_ofst) % 32)))

	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_pShmNode + 8)))
	if (_flags & int32(1)) == 0 {
		goto _1
	}

	_allMask = uint16(0)
	_pX = *(*uintptr)(unsafe.Pointer(_pShmNode + 56))
_3:
	if _pX == 0 {
		goto _5
	}

	if _pX != _p {
		goto _6
	}

	goto _4

_6:
	_allMask = uint16(int32(_allMask) | int32(*(*uint16)(unsafe.Pointer(_pX + 18))))

_4:
	_pX = *(*uintptr)(unsafe.Pointer(_pX + 8))
	goto _3

_5:
	if (int32(_mask) & int32(_allMask)) != int32(0) {
		goto _7
	}

	_rc = _1721unixShmSystemLock(tls, _pDbFd, int32(2), _ofst+int32(120), _n)
	goto _8

_7:
	_rc = int32(0)
_8:
	if _rc != int32(0) {
		goto _9
	}

	{
		p := &(*(*uint16)(unsafe.Pointer(_p + 20)))
		*p = uint16(int32(*p) & (^int32(_mask)))
	}
	{
		p := &(*(*uint16)(unsafe.Pointer(_p + 18)))
		*p = uint16(int32(*p) & (^int32(_mask)))
	}
_9:
	goto _2

_1:
	if (_flags & int32(4)) == 0 {
		goto _10
	}

	_allShared = uint16(0)
	_pX = *(*uintptr)(unsafe.Pointer(_pShmNode + 56))
_12:
	if _pX == 0 {
		goto _14
	}

	if (int32(*(*uint16)(unsafe.Pointer(_pX + 20))) & int32(_mask)) == int32(0) {
		goto _15
	}

	_rc = int32(5)
	goto _14

_15:
	_allShared = uint16(int32(_allShared) | int32(*(*uint16)(unsafe.Pointer(_pX + 18))))
	_pX = *(*uintptr)(unsafe.Pointer(_pX + 8))
	goto _12

_14:
	if _rc != int32(0) {
		goto _16
	}

	if (int32(_allShared) & int32(_mask)) != int32(0) {
		goto _17
	}

	_rc = _1721unixShmSystemLock(tls, _pDbFd, int32(0), _ofst+int32(120), _n)
	goto _18

_17:
	_rc = int32(0)
_18:
_16:
	if _rc != int32(0) {
		goto _19
	}

	{
		p := &(*(*uint16)(unsafe.Pointer(_p + 18)))
		*p = uint16(int32(*p) | int32(_mask))
	}
_19:
	goto _11

_10:
	_pX = *(*uintptr)(unsafe.Pointer(_pShmNode + 56))
_20:
	if _pX == 0 {
		goto _22
	}

	if (int32(*(*uint16)(unsafe.Pointer(_pX + 20)))&int32(_mask)) == int32(0) && (int32(*(*uint16)(unsafe.Pointer(_pX + 18)))&int32(_mask)) == int32(0) {
		goto _23
	}

	_rc = int32(5)
	goto _22

_23:
	_pX = *(*uintptr)(unsafe.Pointer(_pX + 8))
	goto _20

_22:
	if _rc != int32(0) {
		goto _24
	}

	_rc = _1721unixShmSystemLock(tls, _pDbFd, int32(1), _ofst+int32(120), _n)
	if _rc != int32(0) {
		goto _25
	}

	{
		p := &(*(*uint16)(unsafe.Pointer(_p + 20)))
		*p = uint16(int32(*p) | int32(_mask))
	}
_25:
_24:
_11:
_2:
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_pShmNode + 8)))
	return _rc
}

// _1449unixShmBarrier is defined at sqlite3.c:35073:13
func _1449unixShmBarrier(tls crt.TLS, _fd uintptr /* *Tsqlite3_file = Ssqlite3_file */) {
	_270sqlite3MemoryBarrier(tls)
	_1123unixEnterMutex(tls)
	_1124unixLeaveMutex(tls)
}

// _1450unixShmUnmap is defined at sqlite3.c:35089:12
func _1450unixShmUnmap(tls crt.TLS, _fd uintptr /* *Tsqlite3_file = Ssqlite3_file */, _deleteFlag int32) (r int32) {
	var (
		_p        uintptr // *TunixShm = SunixShm
		_pShmNode uintptr // *TunixShmNode = SunixShmNode
		_pp       uintptr // **TunixShm = SunixShm
		_pDbFd    uintptr // *TunixFile = SunixFile
	)
	_pDbFd = _fd
	_p = *(*uintptr)(unsafe.Pointer(_pDbFd + 64))
	if _p != 0 {
		goto _1
	}

	return int32(0)

_1:
	_pShmNode = *(*uintptr)(unsafe.Pointer(_p))

	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_pShmNode + 8)))
	_pp = _pShmNode + 56
_2:
	if *(*uintptr)(unsafe.Pointer(_pp)) == _p {
		goto _4
	}

	_pp = *(*uintptr)(unsafe.Pointer(_pp)) + 8
	goto _2

_4:
	*(*uintptr)(unsafe.Pointer(_pp)) = *(*uintptr)(unsafe.Pointer(_p + 8))
	Xsqlite3_free(tls, _p)
	*(*uintptr)(unsafe.Pointer(_pDbFd + 64)) = null
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_pShmNode + 8)))
	_1123unixEnterMutex(tls)

	(*(*int32)(unsafe.Pointer(_pShmNode + 48)))--
	if (*(*int32)(unsafe.Pointer(_pShmNode + 48))) != int32(0) {
		goto _5
	}

	if _deleteFlag == 0 || (*(*int32)(unsafe.Pointer(_pShmNode + 24))) < int32(0) {
		goto _6
	}

	fn12(*(*uintptr)(unsafe.Pointer((_1118aSyscall + 384) + 8)))(tls, *(*uintptr)(unsafe.Pointer(_pShmNode + 16)))
_6:
	_1722unixShmPurge(tls, _pDbFd)
_5:
	_1124unixLeaveMutex(tls)
	return int32(0)
}

// _1451unixFetch is defined at sqlite3.c:35299:12
func _1451unixFetch(tls crt.TLS, _fd uintptr /* *Tsqlite3_file = Ssqlite3_file */, _iOff int64, _nAmt int32, _pp uintptr /* **void */) (r int32) {
	var (
		_pFd uintptr // *TunixFile = SunixFile
		_rc  int32
	)
	_pFd = _fd
	*(*uintptr)(unsafe.Pointer(_pp)) = null
	if (*(*int64)(unsafe.Pointer(_pFd + 96))) <= int64(0) {
		goto _1
	}

	if (*(*uintptr)(unsafe.Pointer(_pFd + 104))) != 0 {
		goto _2
	}

	_rc = _1715unixMapfile(tls, _pFd, int64(-1))
	if _rc == int32(0) {
		goto _3
	}

	return _rc

_3:
_2:
	if (*(*int64)(unsafe.Pointer(_pFd + 80))) < int64(_iOff+int64(_nAmt)) {
		goto _4
	}

	*(*uintptr)(unsafe.Pointer(_pp)) = (*(*uintptr)(unsafe.Pointer(_pFd + 104))) + uintptr(_iOff)
	(*(*int32)(unsafe.Pointer(_pFd + 76)))++
_4:
_1:
	return int32(0)
}

// _1452unixUnfetch is defined at sqlite3.c:35330:12
func _1452unixUnfetch(tls crt.TLS, _fd uintptr /* *Tsqlite3_file = Ssqlite3_file */, _iOff int64, _p uintptr /* *void */) (r int32) {
	var _pFd uintptr // *TunixFile = SunixFile

	_pFd = _fd

	if _p == 0 {
		goto _1
	}

	(*(*int32)(unsafe.Pointer(_pFd + 76)))--
	goto _2

_1:
	_1714unixUnmapfile(tls, _pFd)
_2:
	return int32(0)
}

type SunixFileId struct {
	Xdev uint64
	Xino uint64
}

type SunixShmNode struct {
	XpInode     uintptr // *SunixInodeInfo
	Xmutex      uintptr // *Ssqlite3_mutex
	XzFilename  uintptr // *int8
	Xh          int32
	XszRegion   int32
	XnRegion    uint16
	XisReadonly uint8
	XapRegion   uintptr // **int8
	XnRef       int32
	XpFirst     uintptr // *SunixShm
}

// _1453azDirs [6]*int8, escapes: true, sqlite3.c:35837:21
var _1453azDirs = bss + 16360 // array of 6 pointer to char

func init() {
	*(*[6]uintptr)(unsafe.Pointer(_1453azDirs)) = [6]uintptr{
		2: ts + 28991, /* "/var/tmp" */
		3: ts + 29000, /* "/usr/tmp" */
		4: ts + 29009, /* "/tmp" */
		5: ts + 12868, /* "." */
	}
}

// Xsqlite3_temp_directory *int8, escapes: false, sqlite3.c:142076:17
var Xsqlite3_temp_directory uintptr

// _1454nolockClose is defined at sqlite3.c:32427:12
func _1454nolockClose(tls crt.TLS, _id uintptr /* *Tsqlite3_file = Ssqlite3_file */) (r int32) {
	return _1705closeUnixFile(tls, _id)
}

// _1455nolockLock is defined at sqlite3.c:32415:12
func _1455nolockLock(tls crt.TLS, _NotUsed uintptr /* *Tsqlite3_file = Ssqlite3_file */, _NotUsed2 int32) (r int32) {
	return int32(0)
}

// _1456nolockUnlock is defined at sqlite3.c:32419:12
func _1456nolockUnlock(tls crt.TLS, _NotUsed uintptr /* *Tsqlite3_file = Ssqlite3_file */, _NotUsed2 int32) (r int32) {
	return int32(0)
}

// _1457nolockCheckReservedLock is defined at sqlite3.c:32410:12
func _1457nolockCheckReservedLock(tls crt.TLS, _NotUsed uintptr /* *Tsqlite3_file = Ssqlite3_file */, _pResOut uintptr /* *int32 */) (r int32) {
	*(*int32)(unsafe.Pointer(_pResOut)) = int32(0)
	return int32(0)
}

// _1458dotlockClose is defined at sqlite3.c:32606:12
func _1458dotlockClose(tls crt.TLS, _id uintptr /* *Tsqlite3_file = Ssqlite3_file */) (r int32) {
	var _pFile uintptr // *TunixFile = SunixFile

	_pFile = _id

	_1460dotlockUnlock(tls, _id, int32(0))
	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_pFile + 40)))
	return _1705closeUnixFile(tls, _id)
}

// _1459dotlockLock is defined at sqlite3.c:32513:12
func _1459dotlockLock(tls crt.TLS, _id uintptr /* *Tsqlite3_file = Ssqlite3_file */, _eFileLock int32) (r int32) {
	var (
		_pFile     uintptr // *TunixFile = SunixFile
		_zLockFile uintptr // *int8
		_rc        int32
		_tErrno    int32
	)
	_pFile = _id
	_zLockFile = *(*uintptr)(unsafe.Pointer(_pFile + 40))
	_rc = int32(0)
	if int32(*(*uint8)(unsafe.Pointer(_pFile + 28))) <= int32(0) {
		goto _1
	}

	*(*uint8)(unsafe.Pointer(_pFile + 28)) = uint8(_eFileLock)
	crt.Xutimes(tls, _zLockFile, null)
	return int32(0)

_1:
	_rc = fn203(*(*uintptr)(unsafe.Pointer((_1118aSyscall + 432) + 8)))(tls, _zLockFile, uint32(0777))
	if _rc >= int32(0) {
		goto _2
	}

	_tErrno = *(*int32)(unsafe.Pointer(crt.X__errno_location(tls)))
	if int32(17) != _tErrno {
		goto _3
	}

	_rc = int32(5)
	goto _4

_3:
	_rc = _1710sqliteErrorFromPosixError(tls, _tErrno, int32(3850))
	if _rc == int32(5) {
		goto _5
	}

	_1280storeLastErrno(tls, _pFile, _tErrno)
_5:
_4:
	return _rc

_2:
	*(*uint8)(unsafe.Pointer(_pFile + 28)) = uint8(_eFileLock)
	return _rc
}

// _1460dotlockUnlock is defined at sqlite3.c:32563:12
func _1460dotlockUnlock(tls crt.TLS, _id uintptr /* *Tsqlite3_file = Ssqlite3_file */, _eFileLock int32) (r int32) {
	var (
		_pFile     uintptr // *TunixFile = SunixFile
		_zLockFile uintptr // *int8
		_rc        int32
		_tErrno    int32
	)
	_pFile = _id
	_zLockFile = *(*uintptr)(unsafe.Pointer(_pFile + 40))

	if int32(*(*uint8)(unsafe.Pointer(_pFile + 28))) != _eFileLock {
		goto _1
	}

	return int32(0)

_1:
	if _eFileLock != int32(1) {
		goto _2
	}

	*(*uint8)(unsafe.Pointer(_pFile + 28)) = uint8(1)
	return int32(0)

_2:
	_rc = fn12(*(*uintptr)(unsafe.Pointer((_1118aSyscall + 456) + 8)))(tls, _zLockFile)
	if _rc >= int32(0) {
		goto _3
	}

	_tErrno = *(*int32)(unsafe.Pointer(crt.X__errno_location(tls)))
	if _tErrno != int32(2) {
		goto _4
	}

	_rc = int32(0)
	goto _5

_4:
	_rc = int32(2058)
	_1280storeLastErrno(tls, _pFile, _tErrno)
_5:
	return _rc

_3:
	*(*uint8)(unsafe.Pointer(_pFile + 28)) = uint8(0)
	return int32(0)
}

// _1461dotlockCheckReservedLock is defined at sqlite3.c:32472:12
func _1461dotlockCheckReservedLock(tls crt.TLS, _id uintptr /* *Tsqlite3_file = Ssqlite3_file */, _pResOut uintptr /* *int32 */) (r int32) {
	var (
		_rc       int32
		_reserved int32
		_pFile    uintptr // *TunixFile = SunixFile
	)
	_rc = int32(0)
	_reserved = int32(0)
	_pFile = _id

	_reserved = bool2int(fn50(*(*uintptr)(unsafe.Pointer((_1118aSyscall + 48) + 8)))(tls, *(*uintptr)(unsafe.Pointer(_pFile + 40)), int32(0)) == int32(0))
	*(*int32)(unsafe.Pointer(_pResOut)) = _reserved
	return _rc
}

// _1462fileHasMoved is defined at sqlite3.c:31734:12
func _1462fileHasMoved(tls crt.TLS, _pFile uintptr /* *TunixFile = SunixFile */) (r int32) {
	esc := crt.MustMalloc(144)
	var _buf = esc // *Sstat64
	defer crt.Free(esc)
	return bool2int(((*(*uintptr)(unsafe.Pointer(_pFile + 16))) != 0) && ((fn58(*(*uintptr)(unsafe.Pointer((_1118aSyscall + 96) + 8)))(tls, *(*uintptr)(unsafe.Pointer(_pFile + 56)), _buf) != int32(0)) || (uint64(*(*uint64)(unsafe.Pointer(_buf + 8))) != (*(*uint64)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pFile + 16)) + 8))))))
}

// _1463walIndexTryHdr is defined at sqlite3.c:57120:12
func _1463walIndexTryHdr(tls crt.TLS, _pWal uintptr /* *TWal = SWal */, _pChanged uintptr /* *int32 */) (r int32) {
	esc := crt.MustMalloc(112)
	var (
		_aCksum = esc      // *[2]uint32
		_h1     = esc + 16 // *TWalIndexHdr = SWalIndexHdr
		_h2     = esc + 64 // *TWalIndexHdr = SWalIndexHdr
		_aHdr   uintptr    // *TWalIndexHdr = SWalIndexHdr
	)
	defer crt.Free(esc)

	_aHdr = _883walIndexHdr(tls, _pWal)
	crt.Xmemcpy(tls, _h1, _aHdr, uint64(48))
	_1159walShmBarrier(tls, _pWal)
	crt.Xmemcpy(tls, _h2, _aHdr+48, uint64(48))
	if crt.Xmemcmp(tls, _h1, _h2, uint64(48)) == int32(0) {
		goto _1
	}

	return int32(1)

_1:
	if int32(*(*uint8)(unsafe.Pointer(_h1 + 12))) != int32(0) {
		goto _2
	}

	return int32(1)

_2:
	_901walChecksumBytes(tls, int32(1), _h1, int32(40), null, _aCksum)
	if (*(*uint32)(unsafe.Pointer(_aCksum))) == (*(*uint32)(unsafe.Pointer(_h1 + 40))) && (*(*uint32)(unsafe.Pointer(_aCksum + 4))) == (*(*uint32)(unsafe.Pointer((_h1 + 40) + 4))) {
		goto _3
	}

	return int32(1)

_3:
	if crt.Xmemcmp(tls, _pWal+72, _h1, uint64(48)) == 0 {
		goto _4
	}

	*(*int32)(unsafe.Pointer(_pChanged)) = int32(1)
	crt.Xmemcpy(tls, _pWal+72, _h1, uint64(48))
	*(*uint32)(unsafe.Pointer(_pWal + 56)) = uint32((int32(*(*uint16)(unsafe.Pointer((_pWal + 72) + 14))) & int32(0xfe00)) + ((int32(*(*uint16)(unsafe.Pointer((_pWal + 72) + 14))) & int32(0x1)) << (uint(16) % 32)))
_4:
	return int32(0)
}

// _1464walIndexRecover is defined at sqlite3.c:56199:12
func _1464walIndexRecover(tls crt.TLS, _pWal uintptr /* *TWal = SWal */) (r int32) {
	esc := crt.MustMalloc(84)
	var (
		_rc          int32
		_nSize       = esc      // *Ti64 = Tsqlite_int64 = int64
		_aFrameCksum = esc + 16 // *[2]uint32
		_iLock       int32
		_nLock       int32
		_aBuf        = esc + 32 // *[32]uint8
		_aFrame      uintptr    // *Tu8 = uint8
		_szFrame     int32
		_aData       uintptr // *Tu8 = uint8
		_iFrame      int32
		_iOffset     int64
		_szPage      int32
		_magic       uint32
		_version     uint32
		_isValid     int32
		_pgno        = esc + 64 // *Tu32 = uint32
		_nTruncate   = esc + 80 // *Tu32 = uint32
		_pInfo       uintptr    // *TWalCkptInfo = SWalCkptInfo
		_i           int32
	)
	defer crt.Free(esc)
	crt.Copy(_aFrameCksum, ts+29014, 8)

	_iLock = int32(1) + int32(*(*uint8)(unsafe.Pointer(_pWal + 65)))
	_nLock = int32(8) - _iLock
	_rc = _882walLockExclusive(tls, _pWal, _iLock, _nLock)
	if _rc == 0 {
		goto _1
	}

	return _rc

_1:
	crt.Xmemset(tls, _pWal+72, int32(0), uint64(48))
	_rc = _352sqlite3OsFileSize(tls, *(*uintptr)(unsafe.Pointer(_pWal + 16)), _nSize)
	if _rc == int32(0) {
		goto _2
	}

	goto _recovery_error

_2:
	if (*(*int64)(unsafe.Pointer(_nSize))) <= int64(32) {
		goto _3
	}

	_aFrame = 0
	_rc = _586sqlite3OsRead(tls, *(*uintptr)(unsafe.Pointer(_pWal + 16)), _aBuf, int32(32), int64(0))
	if _rc == int32(0) {
		goto _4
	}

	goto _recovery_error

_4:
	_magic = _328sqlite3Get4byte(tls, _aBuf)
	_szPage = int32(_328sqlite3Get4byte(tls, _aBuf+8))
	if (_magic&uint32(0xfffffffe)) == uint32(0x377f0682) && (_szPage&(_szPage-int32(1))) == 0 && _szPage <= int32(65536) && _szPage >= int32(512) {
		goto _5
	}

	goto _finished

_5:
	*(*uint8)(unsafe.Pointer((_pWal + 72) + 13)) = uint8(_magic & uint32(0x1))
	*(*uint32)(unsafe.Pointer(_pWal + 56)) = uint32(_szPage)
	*(*uint32)(unsafe.Pointer(_pWal + 136)) = _328sqlite3Get4byte(tls, _aBuf+12)
	crt.Xmemcpy(tls, (_pWal+72)+32, _aBuf+16, uint64(8))
	_901walChecksumBytes(tls, bool2int(int32(*(*uint8)(unsafe.Pointer((_pWal + 72) + 13))) == int32(0)), _aBuf, int32(24), null, (_pWal+72)+24)
	if (*(*uint32)(unsafe.Pointer((_pWal + 72) + 24))) == _328sqlite3Get4byte(tls, _aBuf+24) && (*(*uint32)(unsafe.Pointer(((_pWal + 72) + 24) + 4))) == _328sqlite3Get4byte(tls, _aBuf+28) {
		goto _6
	}

	goto _finished

_6:
	_version = _328sqlite3Get4byte(tls, _aBuf+4)
	if _version == uint32(3007000) {
		goto _7
	}

	_rc = _844sqlite3CantopenError(tls, int32(56282))
	goto _finished

_7:
	_szFrame = _szPage + int32(24)
	_aFrame = Xsqlite3_malloc64(tls, uint64(_szFrame))
	if _aFrame != 0 {
		goto _8
	}

	_rc = int32(7)
	goto _recovery_error

_8:
	_aData = _aFrame + 24
	_iFrame = int32(0)
	_iOffset = int64(32)
_9:
	if (_iOffset + int64(_szFrame)) > (*(*int64)(unsafe.Pointer(_nSize))) {
		goto _11
	}

	_iFrame++
	_rc = _586sqlite3OsRead(tls, *(*uintptr)(unsafe.Pointer(_pWal + 16)), _aFrame, _szFrame, _iOffset)
	if _rc == int32(0) {
		goto _12
	}

	goto _11

_12:
	_isValid = _1723walDecodeFrame(tls, _pWal, _pgno, _nTruncate, _aData, _aFrame)
	if _isValid != 0 {
		goto _13
	}

	goto _11

_13:
	_rc = _907walIndexAppend(tls, _pWal, uint32(_iFrame), *(*uint32)(unsafe.Pointer(_pgno)))
	if _rc == int32(0) {
		goto _14
	}

	goto _11

_14:
	if (*(*uint32)(unsafe.Pointer(_nTruncate))) == 0 {
		goto _15
	}

	*(*uint32)(unsafe.Pointer((_pWal + 72) + 16)) = uint32(_iFrame)
	*(*uint32)(unsafe.Pointer((_pWal + 72) + 20)) = *(*uint32)(unsafe.Pointer(_nTruncate))
	*(*uint16)(unsafe.Pointer((_pWal + 72) + 14)) = uint16((_szPage & int32(0xff00)) | (_szPage >> (uint(16) % 32)))
	*(*uint32)(unsafe.Pointer(_aFrameCksum)) = *(*uint32)(unsafe.Pointer((_pWal + 72) + 24))
	*(*uint32)(unsafe.Pointer(_aFrameCksum + 4)) = *(*uint32)(unsafe.Pointer(((_pWal + 72) + 24) + 4))
_15:
	_iOffset = int64(_iOffset + int64(_szFrame))
	goto _9

_11:
	Xsqlite3_free(tls, _aFrame)
_3:
	goto _finished
_finished:
	if _rc != int32(0) {
		goto _16
	}

	*(*uint32)(unsafe.Pointer((_pWal + 72) + 24)) = *(*uint32)(unsafe.Pointer(_aFrameCksum))
	*(*uint32)(unsafe.Pointer(((_pWal + 72) + 24) + 4)) = *(*uint32)(unsafe.Pointer(_aFrameCksum + 4))
	_908walIndexWriteHdr(tls, _pWal)
	_pInfo = _1148walCkptInfo(tls, _pWal)
	*(*uint32)(unsafe.Pointer(_pInfo)) = uint32(0)
	*(*uint32)(unsafe.Pointer(_pInfo + 32)) = *(*uint32)(unsafe.Pointer((_pWal + 72) + 16))
	*(*uint32)(unsafe.Pointer(_pInfo + 4)) = uint32(0)
	_i = int32(1)
_17:
	if _i >= int32(5) {
		goto _19
	}

	*(*uint32)(unsafe.Pointer((_pInfo + 4) + 4*uintptr(_i))) = uint32(0xffffffff)
	_i++
	goto _17

_19:
	if (*(*uint32)(unsafe.Pointer((_pWal + 72) + 16))) == 0 {
		goto _20
	}

	*(*uint32)(unsafe.Pointer((_pInfo + 4) + 4)) = *(*uint32)(unsafe.Pointer((_pWal + 72) + 16))
_20:
	if (*(*uint32)(unsafe.Pointer((_pWal + 72) + 20))) == 0 {
		goto _21
	}

	Xsqlite3_log(tls, int32(283), ts+29023 /* "recovered %d frames from WAL fil..." */, *(*uint32)(unsafe.Pointer((_pWal + 72) + 16)), *(*uintptr)(unsafe.Pointer(_pWal + 128)))
_21:
_16:
	goto _recovery_error
_recovery_error:
	_884walUnlockExclusive(tls, _pWal, _iLock, _nLock)
	return _rc
}

type SWalIterator struct {
	XiPrior   int32
	XnSegment int32
	XaSegment [1]struct {
		XiNext  int32
		XaIndex uintptr
		XaPgno  uintptr
		XnEntry int32
		XiZero  int32
	}
}

// _1465walIteratorInit is defined at sqlite3.c:56670:12
func _1465walIteratorInit(tls crt.TLS, _pWal uintptr /* *TWal = SWal */, _pp uintptr /* **TWalIterator = SWalIterator */) (r int32) {
	esc := crt.MustMalloc(52)
	var (
		_p        uintptr // *TWalIterator = SWalIterator
		_nSegment int32
		_iLast    uint32
		_nByte    int32
		_i        int32
		_aTmp     uintptr // *Tht_slot = Tu16 = uint16
		_rc       int32
		_aHash    = esc      // **Tht_slot = Tu16 = uint16
		_iZero    = esc + 16 // *Tu32 = uint32
		_aPgno    = esc + 32 // **Tu32 = uint32
		_j        int32
		_nEntry   = esc + 48 // *int32
		_aIndex   uintptr    // *Tht_slot = Tu16 = uint16
	)
	defer crt.Free(esc)
	_rc = int32(0)

	_iLast = *(*uint32)(unsafe.Pointer((_pWal + 72) + 16))
	_nSegment = _1151walFramePage(tls, _iLast) + int32(1)
	_nByte = int32((uint64(40) + (uint64(_nSegment-int32(1)) * uint64(32))) + (uint64(_iLast) * uint64(2)))
	_p = Xsqlite3_malloc64(tls, uint64(_nByte))
	if _p != 0 {
		goto _1
	}

	return int32(7)

_1:
	crt.Xmemset(tls, _p, int32(0), uint64(_nByte))
	*(*int32)(unsafe.Pointer(_p + 4)) = _nSegment
	_aTmp = Xsqlite3_malloc64(tls, uint64(uint64(2)*uint64(func() uint32 {
		if _iLast > uint32(4096) {
			return uint32(4096)
		}
		return _iLast
	}())))
	if _aTmp != 0 {
		goto _2
	}

	_rc = int32(7)
_2:
	_i = int32(0)
_3:
	if _rc != int32(0) || _i >= _nSegment {
		goto _5
	}

	_rc = _1152walHashGet(tls, _pWal, _i, _aHash, _aPgno, _iZero)
	if _rc != int32(0) {
		goto _6
	}

	*(*uintptr)(unsafe.Pointer(_aPgno)) += 4
	if (_i + int32(1)) != _nSegment {
		goto _7
	}

	*(*int32)(unsafe.Pointer(_nEntry)) = int32(_iLast - (*(*uint32)(unsafe.Pointer(_iZero))))
	goto _8

_7:
	*(*int32)(unsafe.Pointer(_nEntry)) = int32(int64((*(*uintptr)(unsafe.Pointer(_aHash)) - *(*uintptr)(unsafe.Pointer(_aPgno))) / 4))
_8:
	_aIndex = (_p + 8) + 32*uintptr(*(*int32)(unsafe.Pointer(_p + 4))) + 2*uintptr(*(*uint32)(unsafe.Pointer(_iZero)))
	(*(*uint32)(unsafe.Pointer(_iZero)))++
	_j = int32(0)
_9:
	if _j >= (*(*int32)(unsafe.Pointer(_nEntry))) {
		goto _11
	}

	*(*uint16)(unsafe.Pointer(_aIndex + 2*uintptr(_j))) = uint16(_j)
	_j++
	goto _9

_11:
	_1724walMergesort(tls, *(*uintptr)(unsafe.Pointer(_aPgno)), _aTmp, _aIndex, _nEntry)
	*(*int32)(unsafe.Pointer(((_p + 8) + 32*uintptr(_i)) + 28)) = int32(*(*uint32)(unsafe.Pointer(_iZero)))
	*(*int32)(unsafe.Pointer(((_p + 8) + 32*uintptr(_i)) + 24)) = *(*int32)(unsafe.Pointer(_nEntry))
	*(*uintptr)(unsafe.Pointer(((_p + 8) + 32*uintptr(_i)) + 8)) = _aIndex
	*(*uintptr)(unsafe.Pointer(((_p + 8) + 32*uintptr(_i)) + 16)) = *(*uintptr)(unsafe.Pointer(_aPgno))
_6:
	_i++
	goto _3

_5:
	Xsqlite3_free(tls, _aTmp)
	if _rc == int32(0) {
		goto _12
	}

	_1467walIteratorFree(tls, _p)
_12:
	*(*uintptr)(unsafe.Pointer(_pp)) = _p
	return _rc
}

// _1466walIteratorNext is defined at sqlite3.c:56481:12
func _1466walIteratorNext(tls crt.TLS, _p uintptr /* *TWalIterator = SWalIterator */, _piPage uintptr /* *Tu32 = uint32 */, _piFrame uintptr /* *Tu32 = uint32 */) (r int32) {
	var (
		_iMin     uint32
		_iRet     uint32
		_i        int32
		_pSegment uintptr // *SWalSegment
		_iPg      uint32
	)
	_iRet = uint32(0xffffffff)
	_iMin = uint32(*(*int32)(unsafe.Pointer(_p)))

	_i = (*(*int32)(unsafe.Pointer(_p + 4))) - int32(1)
_1:
	if _i < int32(0) {
		goto _3
	}

	_pSegment = (_p + 8) + 32*uintptr(_i)
_4:
	if (*(*int32)(unsafe.Pointer(_pSegment))) >= (*(*int32)(unsafe.Pointer(_pSegment + 24))) {
		goto _5
	}

	_iPg = *(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pSegment + 16))) + 4*uintptr(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pSegment + 8))) + 2*uintptr(*(*int32)(unsafe.Pointer(_pSegment))))))))
	if _iPg <= _iMin {
		goto _6
	}

	if _iPg >= _iRet {
		goto _7
	}

	_iRet = _iPg
	*(*uint32)(unsafe.Pointer(_piFrame)) = uint32((*(*int32)(unsafe.Pointer(_pSegment + 28))) + int32(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pSegment + 8))) + 2*uintptr(*(*int32)(unsafe.Pointer(_pSegment)))))))
_7:
	goto _5

_6:
	(*(*int32)(unsafe.Pointer(_pSegment)))++
	goto _4

_5:
	_i--
	goto _1

_3:
	*(*uint32)(unsafe.Pointer(_piPage)) = uint32(set5(&(*(*int32)(unsafe.Pointer(_p))), int32(_iRet)))
	return bool2int(_iRet == uint32(0xffffffff))
}

// _1467walIteratorFree is defined at sqlite3.c:56654:13
func _1467walIteratorFree(tls crt.TLS, _p uintptr /* *TWalIterator = SWalIterator */) {
	Xsqlite3_free(tls, _p)
}

// _1468memjrnlFreeChunks is defined at sqlite3.c:89805:13
func _1468memjrnlFreeChunks(tls crt.TLS, _p uintptr /* *TMemJournal = SMemJournal */) {
	var (
		_pIter uintptr // *TFileChunk = SFileChunk
		_pNext uintptr // *TFileChunk = SFileChunk
	)
	_pIter = *(*uintptr)(unsafe.Pointer(_p + 24))
_1:
	if _pIter == 0 {
		goto _3
	}

	_pNext = *(*uintptr)(unsafe.Pointer(_pIter))
	Xsqlite3_free(tls, _pIter)
	_pIter = _pNext
	goto _1

_3:
	*(*uintptr)(unsafe.Pointer(_p + 24)) = null
}

// _1469memjrnlCreateFile is defined at sqlite3.c:89818:12
func _1469memjrnlCreateFile(tls crt.TLS, _p uintptr /* *TMemJournal = SMemJournal */) (r int32) {
	esc := crt.MustMalloc(88)
	var (
		_rc     int32
		_pReal  uintptr // *Tsqlite3_file = Ssqlite3_file
		_copy   = esc   // *TMemJournal = SMemJournal
		_nChunk int32
		_iOff   int64
		_pIter  uintptr // *TFileChunk = SFileChunk
	)
	defer crt.Free(esc)
	_pReal = _p
	*(*SMemJournal)(unsafe.Pointer(_copy)) = *(*SMemJournal)(unsafe.Pointer(_p))
	crt.Xmemset(tls, _p, int32(0), uint64(88))
	_rc = _845sqlite3OsOpen(tls, *(*uintptr)(unsafe.Pointer(_copy + 72)), *(*uintptr)(unsafe.Pointer(_copy + 80)), _pReal, *(*int32)(unsafe.Pointer(_copy + 64)), null)
	if _rc != int32(0) {
		goto _1
	}

	_nChunk = *(*int32)(unsafe.Pointer(_copy + 8))
	_iOff = int64(0)
	_pIter = *(*uintptr)(unsafe.Pointer(_copy + 24))
_2:
	if _pIter == 0 {
		goto _4
	}

	if (_iOff + int64(_nChunk)) <= int64(*(*int64)(unsafe.Pointer(_copy + 32))) {
		goto _5
	}

	_nChunk = int32((*(*int64)(unsafe.Pointer(_copy + 32))) - int64(_iOff))
_5:
	_rc = _163sqlite3OsWrite(tls, _pReal, _pIter+8, _nChunk, _iOff)
	if _rc == 0 {
		goto _6
	}

	goto _4

_6:
	_iOff = int64(_iOff + int64(_nChunk))
	_pIter = *(*uintptr)(unsafe.Pointer(_pIter))
	goto _2

_4:
	if _rc != int32(0) {
		goto _7
	}

	_1468memjrnlFreeChunks(tls, _copy)
_7:
_1:
	if _rc == int32(0) {
		goto _8
	}

	_849sqlite3OsClose(tls, _pReal)
	*(*SMemJournal)(unsafe.Pointer(_p)) = *(*SMemJournal)(unsafe.Pointer(_copy))
_8:
	return _rc
}

// _1470sqlite3OsShmMap is defined at sqlite3.c:20858:20
func _1470sqlite3OsShmMap(tls crt.TLS, _id uintptr /* *Tsqlite3_file = Ssqlite3_file */, _iPage int32, _pgsz int32, _bExtend int32, _pp uintptr /* **void */) (r int32) {
	return fn211(*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_id))) + 104)))(tls, _id, _iPage, _pgsz, _bExtend, _pp)
}

// _1471walFramePgno is defined at sqlite3.c:56028:12
func _1471walFramePgno(tls crt.TLS, _pWal uintptr /* *TWal = SWal */, _iFrame uint32) (r uint32) {
	var _iHash int32

	_iHash = _1151walFramePage(tls, _iFrame)
	if _iHash != int32(0) {
		goto _1
	}

	return *(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pWal + 48))))) + 4*uintptr((uint64(34)+uint64(_iFrame))-uint64(1))))

_1:
	return *(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pWal + 48))) + 8*uintptr(_iHash)))) + 4*uintptr((uint64(_iFrame-uint32(1))-uint64(4062))%uint64(4096))))
}

// _1472sqlite3GetVdbe is defined at sqlite3.c:119549:21
func _1472sqlite3GetVdbe(tls crt.TLS, _pParse uintptr /* *TParse = SParse */) (r uintptr /* *TVdbe = SVdbe */) {
	if (*(*uintptr)(unsafe.Pointer(_pParse + 16))) == 0 {
		goto _1
	}

	return *(*uintptr)(unsafe.Pointer(_pParse + 16))

_1:
	if (*(*uintptr)(unsafe.Pointer(_pParse + 160))) != 0 || (int32(*(*uint16)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pParse)) + 92)))&int32(0x8)) != int32(0) {
		goto _2
	}

	*(*uint8)(unsafe.Pointer(_pParse + 35)) = uint8(1)
_2:
	return _1070sqlite3VdbeCreate(tls, _pParse)
}

// _1473sqlite3VdbeAddOp0 is defined at sqlite3.c:72400:20
func _1473sqlite3VdbeAddOp0(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */, _op int32) (r int32) {
	return _1241sqlite3VdbeAddOp3(tls, _p, _op, int32(0), int32(0), int32(0))
}

// _1474sqlite3VdbeJumpHere is defined at sqlite3.c:73014:21
func _1474sqlite3VdbeJumpHere(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */, _addr int32) {
	_1725sqlite3VdbeChangeP2(tls, _p, uint32(_addr), *(*int32)(unsafe.Pointer(_p + 184)))
}

// _1475sqlite3VdbeAddOp4 is defined at sqlite3.c:72457:20
func _1475sqlite3VdbeAddOp4(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */, _op int32, _p1 int32, _p2 int32, _p3 int32, _zP4 uintptr /* *int8 */, _p4type int32) (r int32) {
	var _addr int32

	_addr = _1241sqlite3VdbeAddOp3(tls, _p, _op, _p1, _p2, _p3)
	_1075sqlite3VdbeChangeP4(tls, _p, _addr, _zP4, _p4type)
	return _addr
}

// _1476codeTableLocks is defined at sqlite3.c:100789:13
func _1476codeTableLocks(tls crt.TLS, _pParse uintptr /* *TParse = SParse */) {
	var (
		_i     int32
		_pVdbe uintptr // *TVdbe = SVdbe
		_p     uintptr // *TTableLock = STableLock
		_p1    int32
	)
	_pVdbe = _1472sqlite3GetVdbe(tls, _pParse)

	_i = int32(0)
_1:
	if _i >= (*(*int32)(unsafe.Pointer(_pParse + 140))) {
		goto _3
	}

	_p = (*(*uintptr)(unsafe.Pointer(_pParse + 144))) + 24*uintptr(_i)
	_p1 = *(*int32)(unsafe.Pointer(_p))
	_1475sqlite3VdbeAddOp4(tls, _pVdbe, int32(152), _p1, *(*int32)(unsafe.Pointer(_p + 4)), int32(*(*uint8)(unsafe.Pointer(_p + 8))), *(*uintptr)(unsafe.Pointer(_p + 16)), int32(-1))
	_i++
	goto _1

_3:
}

// _1477sqlite3AutoincrementBegin is defined at sqlite3.c:110113:21
func _1477sqlite3AutoincrementBegin(tls crt.TLS, _pParse uintptr /* *TParse = SParse */) {
	var (
		_p     uintptr // *TAutoincInfo = SAutoincInfo
		_db    uintptr // *Tsqlite3 = Ssqlite3
		_pDb   uintptr // *TDb = SDb
		_memId int32
		_v     uintptr // *TVdbe = SVdbe
		_aOp   uintptr // *TVdbeOp = SVdbeOp
	)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_v = *(*uintptr)(unsafe.Pointer(_pParse + 16))

	_p = *(*uintptr)(unsafe.Pointer(_pParse + 152))
_1:
	if _p == 0 {
		goto _3
	}

	_pDb = (*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(*(*int32)(unsafe.Pointer(_p + 16)))
	_memId = *(*int32)(unsafe.Pointer(_p + 20))

	_1647sqlite3OpenTable(tls, _pParse, int32(0), *(*int32)(unsafe.Pointer(_p + 16)), *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pDb + 24))) + 104)), int32(104))
	_1648sqlite3VdbeLoadString(tls, _v, _memId-int32(1), *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_p + 8)))))
	_aOp = _1073sqlite3VdbeAddOpList(tls, _v, int32(10), _1727autoInc, _1726iLn)
	if _aOp != 0 {
		goto _4
	}

	goto _3

_4:
	*(*int32)(unsafe.Pointer(_aOp + 8)) = _memId
	*(*int32)(unsafe.Pointer(_aOp + 12)) = _memId + int32(1)
	*(*int32)(unsafe.Pointer((_aOp + 48) + 12)) = _memId
	*(*int32)(unsafe.Pointer((_aOp + 72) + 4)) = _memId - int32(1)
	*(*int32)(unsafe.Pointer((_aOp + 72) + 12)) = _memId
	*(*uint16)(unsafe.Pointer((_aOp + 72) + 2)) = uint16(0x10)
	*(*int32)(unsafe.Pointer((_aOp + 96) + 8)) = _memId + int32(1)
	*(*int32)(unsafe.Pointer((_aOp + 120) + 12)) = _memId
	*(*int32)(unsafe.Pointer((_aOp + 192) + 8)) = _memId
	_p = *(*uintptr)(unsafe.Pointer(_p))
	goto _1

_3:
}

// _1478sqlite3ExprCode is defined at sqlite3.c:96010:21
func _1478sqlite3ExprCode(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pExpr uintptr /* *TExpr = SExpr */, _target int32) {
	var _inReg int32

	if _pExpr == 0 || int32(*(*uint8)(unsafe.Pointer(_pExpr))) != int32(150) {
		goto _1
	}

	_1240sqlite3VdbeAddOp2(tls, *(*uintptr)(unsafe.Pointer(_pParse + 16)), int32(75), *(*int32)(unsafe.Pointer(_pExpr + 44)), _target)
	goto _2

_1:
	_inReg = _1728sqlite3ExprCodeTarget(tls, _pParse, _pExpr, _target)

	if _inReg == _target || (*(*uintptr)(unsafe.Pointer(_pParse + 16))) == 0 {
		goto _3
	}

	_1240sqlite3VdbeAddOp2(tls, *(*uintptr)(unsafe.Pointer(_pParse + 16)), int32(76), _inReg, _target)
_3:
_2:
}

// _1479sqlite3VdbeGoto is defined at sqlite3.c:72412:20
func _1479sqlite3VdbeGoto(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */, _iDest int32) (r int32) {
	return _1241sqlite3VdbeAddOp3(tls, _p, int32(13), int32(0), _iDest, int32(0))
}

// _1480sqlite3AuthCheck is defined at sqlite3.c:100621:20
func _1480sqlite3AuthCheck(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _code int32, _zArg1 uintptr /* *int8 */, _zArg2 uintptr /* *int8 */, _zArg3 uintptr /* *int8 */) (r int32) {
	var (
		_db uintptr // *Tsqlite3 = Ssqlite3
		_rc int32
	)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	if (*(*uint8)(unsafe.Pointer((_db + 176) + 5))) == 0 && *(*uint8)(unsafe.Pointer(_pParse + 468)) == 0 {
		goto _1
	}

	return int32(0)

_1:
	if (*(*uintptr)(unsafe.Pointer(_db + 408))) != 0 {
		goto _2
	}

	return int32(0)

_2:
	_rc = fn212(*(*uintptr)(unsafe.Pointer(_db + 408)))(tls, *(*uintptr)(unsafe.Pointer(_db + 416)), _code, _zArg1, _zArg2, _zArg3, *(*uintptr)(unsafe.Pointer(_pParse + 528)))
	if _rc != int32(1) {
		goto _3
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+15695 /* "not authorized" */)
	*(*int32)(unsafe.Pointer(_pParse + 24)) = int32(23)
	goto _4

_3:
	if _rc == int32(0) || _rc == int32(2) {
		goto _5
	}

	_rc = int32(1)
	_1729sqliteAuthBadReturnCode(tls, _pParse)
_5:
_4:
	return _rc
}

// _1481az [3]*int8, escapes: true, sqlite3.c:104697:23
var _1481az = bss + 16408 // array of 3 pointer to char

func init() {
	*(*[3]uintptr)(unsafe.Pointer(_1481az)) = [3]uintptr{
		0: ts + 3817,  /* "BEGIN" */
		1: ts + 16495, /* "RELEASE" */
		2: ts + 16533, /* "ROLLBACK" */
	}
}

// _1482sqlite3NameFromToken is defined at sqlite3.c:101384:21
func _1482sqlite3NameFromToken(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pName uintptr /* *TToken = SToken */) (r uintptr /* *int8 */) {
	var _zName uintptr // *int8

	if _pName == 0 {
		goto _1
	}

	_zName = _618sqlite3DbStrNDup(tls, _db, *(*uintptr)(unsafe.Pointer(_pName)), uint64(*(*uint32)(unsafe.Pointer(_pName + 8))))
	_1104sqlite3Dequote(tls, _zName)
	goto _2

_1:
	_zName = null
_2:
	return _zName
}

// _1483aCode [4]uint8, escapes: true, sqlite3.c:101587:21
var _1483aCode = ds + 16785

// _1484nullRow [6]int8, escapes: true, sqlite3.c:101675:23
var _1484nullRow = ds + 16789

// _1485sqlite3TwoPartName is defined at sqlite3.c:101459:20
func _1485sqlite3TwoPartName(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pName1 uintptr /* *TToken = SToken */, _pName2 uintptr /* *TToken = SToken */, _pUnqual uintptr /* **TToken = SToken */) (r int32) {
	var (
		_iDb int32
		_db  uintptr // *Tsqlite3 = Ssqlite3
	)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))

	if (*(*uint32)(unsafe.Pointer(_pName2 + 8))) <= uint32(0) {
		goto _1
	}

	if (*(*uint8)(unsafe.Pointer((_db + 176) + 5))) == 0 {
		goto _3
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+29060 /* "corrupt database" */)
	return int32(-1)

_3:
	*(*uintptr)(unsafe.Pointer(_pUnqual)) = _pName2
	_iDb = _1670sqlite3FindDb(tls, _db, _pName1)
	if _iDb >= int32(0) {
		goto _4
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+29077 /* "unknown database %T" */, _pName1)
	return int32(-1)

_4:
	goto _2

_1:
	_iDb = int32(*(*uint8)(unsafe.Pointer((_db + 176) + 4)))
	*(*uintptr)(unsafe.Pointer(_pUnqual)) = _pName1
_2:
	return _iDb
}

// _1486sqlite3CheckObjectName is defined at sqlite3.c:101496:20
func _1486sqlite3CheckObjectName(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _zName uintptr /* *int8 */) (r int32) {
	if (*(*uint8)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pParse))) + 176) + 5))) != 0 || int32(*(*uint8)(unsafe.Pointer(_pParse + 30))) != int32(0) || ((*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pParse))) + 48)))&uint32(0x1)) != uint32(0) || int32(0) != Xsqlite3_strnicmp(tls, _zName, ts+6844 /* "sqlite_" */, int32(7)) {
		goto _1
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+29097 /* "object name reserved for interna..." */, _zName)
	return int32(1)

_1:
	return int32(0)
}

// _1487sqlite3CodeVerifySchema is defined at sqlite3.c:104747:21
func _1487sqlite3CodeVerifySchema(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _iDb int32) {
	var _pToplevel uintptr // *TParse = SParse

	_pToplevel = func() uintptr {
		if (*(*uintptr)(unsafe.Pointer(_pParse + 160))) != 0 {
			return *(*uintptr)(unsafe.Pointer(_pParse + 160))
		}
		return _pParse
	}()

	if bool2int(((*(*uint32)(unsafe.Pointer(_pToplevel + 124)))&(uint32(1)<<(uint(_iDb)%32))) != uint32(0)) != int32(0) {
		goto _1
	}

	{
		p := &*(*uint32)(unsafe.Pointer(_pToplevel + 124))
		*p = uint32(uint32(*p) | (uint32(1) << (uint(_iDb) % 32)))
	}
	if 1 == 0 || _iDb != int32(1) {
		goto _2
	}

	_318sqlite3OpenTempDatabase(tls, _pToplevel)
_2:
_1:
}

// _1488sqlite3BeginWriteOperation is defined at sqlite3.c:104790:21
func _1488sqlite3BeginWriteOperation(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _setStatement int32, _iDb int32) {
	var _pToplevel uintptr // *TParse = SParse

	_pToplevel = func() uintptr {
		if (*(*uintptr)(unsafe.Pointer(_pParse + 160))) != 0 {
			return *(*uintptr)(unsafe.Pointer(_pParse + 160))
		}
		return _pParse
	}()
	_1487sqlite3CodeVerifySchema(tls, _pParse, _iDb)
	{
		p := &*(*uint32)(unsafe.Pointer(_pToplevel + 120))
		*p = uint32(uint32(*p) | (uint32(1) << (uint(_iDb) % 32)))
	}
	{
		p := &(*(*uint8)(unsafe.Pointer(_pToplevel + 32)))
		*p = uint8(int32(*p) | _setStatement)
	}
}

// _1489sqlite3VdbeAddOp1 is defined at sqlite3.c:72403:20
func _1489sqlite3VdbeAddOp1(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */, _op int32, _p1 int32) (r int32) {
	return _1241sqlite3VdbeAddOp3(tls, _p, _op, _p1, int32(0), int32(0))
}

// _1490sqlite3OpenMasterTable is defined at sqlite3.c:101399:21
func _1490sqlite3OpenMasterTable(tls crt.TLS, _p uintptr /* *TParse = SParse */, _iDb int32) {
	var _v uintptr // *TVdbe = SVdbe

	_v = _1472sqlite3GetVdbe(tls, _p)
	_1574sqlite3TableLock(tls, _p, _iDb, int32(1), uint8(1), ts+5127 /* "sqlite_master" */)
	_1071sqlite3VdbeAddOp4Int(tls, _v, int32(105), int32(0), int32(1), _iDb, int32(5))
	if (*(*int32)(unsafe.Pointer(_p + 52))) != int32(0) {
		goto _1
	}

	*(*int32)(unsafe.Pointer(_p + 52)) = int32(1)
_1:
}

// _1491convertToWithoutRowidTable is defined at sqlite3.c:102389:13
func _1491convertToWithoutRowidTable(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pTab uintptr /* *TTable = STable */) {
	esc := crt.MustMalloc(16)
	var (
		_pIdx     uintptr // *TIndex = SIndex
		_pPk      uintptr // *TIndex = SIndex
		_nPk      int32
		_i        int32
		_j        int32
		_db       uintptr // *Tsqlite3 = Ssqlite3
		_v        uintptr // *TVdbe = SVdbe
		_pList    uintptr // *TExprList = SExprList
		_ipkToken = esc   // *TToken = SToken
		_n        int32
	)
	defer crt.Free(esc)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_v = *(*uintptr)(unsafe.Pointer(_pParse + 16))
	if (*(*uint8)(unsafe.Pointer((_db + 176) + 7))) != 0 {
		goto _1
	}

	_i = int32(0)
_2:
	if _i >= int32(*(*int16)(unsafe.Pointer(_pTab + 70))) {
		goto _4
	}

	if (int32(*(*uint8)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pTab + 8))) + 32*uintptr(_i)) + 27))) & int32(0x1)) == int32(0) {
		goto _5
	}

	*(*uint8)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pTab + 8))) + 32*uintptr(_i)) + 24)) = uint8(2)
_5:
	_i++
	goto _2

_4:
_1:
	if *(*uint8)(unsafe.Pointer(_pParse + 468)) == 0 {
		goto _6
	}

	return

_6:
	if (*(*int32)(unsafe.Pointer(_pParse + 176))) == 0 {
		goto _7
	}

	_1657sqlite3VdbeChangeP3(tls, _v, uint32(*(*int32)(unsafe.Pointer(_pParse + 176))), int32(2))
_7:
	if int32(*(*int16)(unsafe.Pointer(_pTab + 68))) < int32(0) {
		goto _8
	}

	_1516sqlite3TokenInit(tls, _ipkToken, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTab + 8))) + 32*uintptr(*(*int16)(unsafe.Pointer(_pTab + 68))))))
	_pList = _1331sqlite3ExprListAppend(tls, _pParse, null, _1335sqlite3ExprAlloc(tls, _db, int32(59), _ipkToken, int32(0)))
	if _pList != 0 {
		goto _10
	}

	return

_10:
	*(*uint8)(unsafe.Pointer(_pList + 8 + 24)) = *(*uint8)(unsafe.Pointer(_pParse + 466))

	_1320sqlite3CreateIndex(tls, _pParse, null, null, null, _pList, int32(*(*uint8)(unsafe.Pointer(_pTab + 76))), null, null, int32(0), int32(0), uint8(2))
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _11
	}

	return

_11:
	_pPk = _1060sqlite3PrimaryKeyIndex(tls, _pTab)
	*(*int16)(unsafe.Pointer(_pTab + 68)) = int16(-1)
	goto _9

_8:
	_pPk = _1060sqlite3PrimaryKeyIndex(tls, _pTab)
	_i = set5(&_j, int32(1))
_12:
	if _i >= int32(*(*uint16)(unsafe.Pointer(_pPk + 94))) {
		goto _14
	}

	if _1520hasColumn(tls, *(*uintptr)(unsafe.Pointer(_pPk + 8)), _j, int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPk + 8))) + 2*uintptr(_i))))) == 0 {
		goto _15
	}

	(*(*uint16)(unsafe.Pointer(_pPk + 96)))--
	goto _16

_15:
	*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPk + 8))) + 2*uintptr(postinc7(&_j)))) = *(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPk + 8))) + 2*uintptr(_i)))
_16:
	_i++
	goto _12

_14:
	*(*uint16)(unsafe.Pointer(_pPk + 94)) = uint16(_j)
_9:
	set206b(&(*(*uint8)(unsafe.Pointer(_pPk + 99))), uint32(1))
	if (*(*uint8)(unsafe.Pointer((_db + 176) + 7))) != 0 {
		goto _17
	}

	set204b(&(*(*uint8)(unsafe.Pointer(_pPk + 99))), uint32(1))
_17:
	_nPk = int32(*(*uint16)(unsafe.Pointer(_pPk + 94)))
	if _v == 0 || (*(*int32)(unsafe.Pointer(_pPk + 88))) <= int32(0) {
		goto _18
	}

	_1543sqlite3VdbeChangeOpcode(tls, _v, uint32(*(*int32)(unsafe.Pointer(_pPk + 88))), uint8(13))
_18:
	*(*int32)(unsafe.Pointer(_pPk + 88)) = *(*int32)(unsafe.Pointer(_pTab + 56))
	_pIdx = *(*uintptr)(unsafe.Pointer(_pTab + 16))
_19:
	if _pIdx == 0 {
		goto _21
	}

	if int32(uint32(*(*uint8)(unsafe.Pointer(_pIdx + 99)))<<30>>30) != int32(2) {
		goto _22
	}

	goto _20

_22:
	_i = set5(&_n, int32(0))
_23:
	if _i >= _nPk {
		goto _25
	}

	if _1520hasColumn(tls, *(*uintptr)(unsafe.Pointer(_pIdx + 8)), int32(*(*uint16)(unsafe.Pointer(_pIdx + 94))), int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPk + 8))) + 2*uintptr(_i))))) != 0 {
		goto _26
	}

	_n++
_26:
	_i++
	goto _23

_25:
	if _n != int32(0) {
		goto _27
	}

	*(*uint16)(unsafe.Pointer(_pIdx + 96)) = *(*uint16)(unsafe.Pointer(_pIdx + 94))
	goto _20

_27:
	if _1730resizeIndexObject(tls, _db, _pIdx, int32(*(*uint16)(unsafe.Pointer(_pIdx + 94)))+_n) == 0 {
		goto _28
	}

	return

_28:
	_i = int32(0)
	_j = int32(*(*uint16)(unsafe.Pointer(_pIdx + 94)))
_29:
	if _i >= _nPk {
		goto _31
	}

	if _1520hasColumn(tls, *(*uintptr)(unsafe.Pointer(_pIdx + 8)), int32(*(*uint16)(unsafe.Pointer(_pIdx + 94))), int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPk + 8))) + 2*uintptr(_i))))) != 0 {
		goto _32
	}

	*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 8))) + 2*uintptr(_j))) = *(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPk + 8))) + 2*uintptr(_i)))
	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 64))) + 8*uintptr(_j))) = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPk + 64))) + 8*uintptr(_i)))
	_j++
_32:
	_i++
	goto _29

_31:
_20:
	_pIdx = *(*uintptr)(unsafe.Pointer(_pIdx + 40))
	goto _19

_21:
	if _nPk >= int32(*(*int16)(unsafe.Pointer(_pTab + 70))) {
		goto _33
	}

	if _1730resizeIndexObject(tls, _db, _pPk, int32(*(*int16)(unsafe.Pointer(_pTab + 70)))) == 0 {
		goto _35
	}

	return

_35:
	_i = int32(0)
	_j = _nPk
_36:
	if _i >= int32(*(*int16)(unsafe.Pointer(_pTab + 70))) {
		goto _38
	}

	if _1520hasColumn(tls, *(*uintptr)(unsafe.Pointer(_pPk + 8)), _j, _i) != 0 {
		goto _39
	}

	*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPk + 8))) + 2*uintptr(_j))) = int16(_i)
	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPk + 64))) + 8*uintptr(_j))) = _224sqlite3StrBINARY
	_j++
_39:
	_i++
	goto _36

_38:
	goto _34

_33:
	*(*uint16)(unsafe.Pointer(_pPk + 96)) = uint16(*(*int16)(unsafe.Pointer(_pTab + 70)))
_34:
}

// _1492sqlite3ResolveSelfReference is defined at sqlite3.c:91776:21
func _1492sqlite3ResolveSelfReference(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pTab uintptr /* *TTable = STable */, _type int32, _pExpr uintptr /* *TExpr = SExpr */, _pList uintptr /* *TExprList = SExprList */) {
	esc := crt.MustMalloc(184)
	var (
		_sSrc = esc       // *TSrcList = SSrcList
		_sNC  = esc + 128 // *TNameContext = SNameContext
	)
	defer crt.Free(esc)

	crt.Xmemset(tls, _sNC, int32(0), uint64(56))
	crt.Xmemset(tls, _sSrc, int32(0), uint64(120))
	*(*int32)(unsafe.Pointer(_sSrc)) = int32(1)
	*(*uintptr)(unsafe.Pointer(_sSrc + 8 + 16)) = *(*uintptr)(unsafe.Pointer(_pTab))
	*(*uintptr)(unsafe.Pointer(_sSrc + 8 + 32)) = _pTab
	*(*int32)(unsafe.Pointer(_sSrc + 8 + 64)) = int32(-1)
	*(*uintptr)(unsafe.Pointer(_sNC)) = _pParse
	*(*uintptr)(unsafe.Pointer(_sNC + 8)) = _sSrc
	*(*uint16)(unsafe.Pointer(_sNC + 48)) = uint16(_type)
	if _1588sqlite3ResolveExprNames(tls, _sNC, _pExpr) == 0 {
		goto _1
	}

	return

_1:
	if _pList == 0 {
		goto _2
	}

	_1613sqlite3ResolveExprListNames(tls, _sNC, _pList)
_2:
}

// _1493estimateTableWidth is defined at sqlite3.c:102332:13
func _1493estimateTableWidth(tls crt.TLS, _pTab uintptr /* *TTable = STable */) {
	var (
		_wTable  uint32
		_pTabCol uintptr // *TColumn = SColumn
		_i       int32
	)
	_wTable = uint32(0)
	_i = int32(*(*int16)(unsafe.Pointer(_pTab + 70)))
	_pTabCol = *(*uintptr)(unsafe.Pointer(_pTab + 8))
_1:
	if _i <= int32(0) {
		goto _3
	}

	_wTable = uint32(_wTable + uint32(*(*uint8)(unsafe.Pointer(_pTabCol + 26))))
	_i--
	_pTabCol += 32
	goto _1

_3:
	if int32(*(*int16)(unsafe.Pointer(_pTab + 68))) >= int32(0) {
		goto _4
	}

	_wTable++
_4:
	*(*int16)(unsafe.Pointer(_pTab + 74)) = _703sqlite3LogEst(tls, uint64(_wTable*uint32(4)))
}

// _1494estimateIndexWidth is defined at sqlite3.c:102346:13
func _1494estimateIndexWidth(tls crt.TLS, _pIdx uintptr /* *TIndex = SIndex */) {
	var (
		_wIndex uint32
		_i      int32
		_aCol   uintptr // *TColumn = SColumn
		_x      int16
	)
	_wIndex = uint32(0)
	_aCol = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 24))) + 8))
	_i = int32(0)
_1:
	if _i >= int32(*(*uint16)(unsafe.Pointer(_pIdx + 96))) {
		goto _3
	}

	_x = *(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 8))) + 2*uintptr(_i)))

	_wIndex = uint32(_wIndex + uint32(func() int32 {
		if int32(_x) < int32(0) {
			return int32(1)
		}
		return int32(*(*uint8)(unsafe.Pointer((_aCol + 32*uintptr(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 8))) + 2*uintptr(_i))))) + 26)))
	}()))
	_i++
	goto _1

_3:
	*(*int16)(unsafe.Pointer(_pIdx + 92)) = _703sqlite3LogEst(tls, uint64(_wIndex*uint32(4)))
}

// _1495sqlite3MayAbort is defined at sqlite3.c:104825:21
func _1495sqlite3MayAbort(tls crt.TLS, _pParse uintptr /* *TParse = SParse */) {
	var _pToplevel uintptr // *TParse = SParse

	_pToplevel = func() uintptr {
		if (*(*uintptr)(unsafe.Pointer(_pParse + 160))) != 0 {
			return *(*uintptr)(unsafe.Pointer(_pParse + 160))
		}
		return _pParse
	}()
	*(*uint8)(unsafe.Pointer(_pToplevel + 33)) = uint8(1)
}

// _1496sqlite3VdbeCurrentAddr is defined at sqlite3.c:72851:20
func _1496sqlite3VdbeCurrentAddr(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */) (r int32) {
	return *(*int32)(unsafe.Pointer(_p + 184))
}

// _1497sqlite3SelectDestInit is defined at sqlite3.c:117775:21
func _1497sqlite3SelectDestInit(tls crt.TLS, _pDest uintptr /* *TSelectDest = SSelectDest */, _eDest int32, _iParm int32) {
	*(*uint8)(unsafe.Pointer(_pDest)) = uint8(_eDest)
	*(*int32)(unsafe.Pointer(_pDest + 4)) = _iParm
	*(*uintptr)(unsafe.Pointer(_pDest + 16)) = null
	*(*int32)(unsafe.Pointer(_pDest + 8)) = int32(0)
	*(*int32)(unsafe.Pointer(_pDest + 12)) = int32(0)
}

// _1498sqlite3VdbeEndCoroutine is defined at sqlite3.c:72525:21
func _1498sqlite3VdbeEndCoroutine(tls crt.TLS, _v uintptr /* *TVdbe = SVdbe */, _regYield int32) {
	_1489sqlite3VdbeAddOp1(tls, _v, int32(64), _regYield)
	*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_v + 24))) + 31)) = uint8(0)
	*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_v + 24))) + 40)) = int32(0)
}

// _1499sqlite3ResultSetOfSelect is defined at sqlite3.c:119513:22
func _1499sqlite3ResultSetOfSelect(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pSelect uintptr /* *TSelect = SSelect */) (r uintptr /* *TTable = STable */) {
	var (
		_pTab       uintptr // *TTable = STable
		_db         uintptr // *Tsqlite3 = Ssqlite3
		_savedFlags int32
	)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_savedFlags = int32(*(*uint32)(unsafe.Pointer(_db + 48)))
	{
		p := &(*(*uint32)(unsafe.Pointer(_db + 48)))
		*p = uint32(uint32(*p) & uint32(4294967291))
	}
	{
		p := &(*(*uint32)(unsafe.Pointer(_db + 48)))
		*p = uint32(uint32(*p) | uint32(0x40))
	}
	_1530sqlite3SelectPrep(tls, _pParse, _pSelect, null)
	if (*(*int32)(unsafe.Pointer(_pParse + 48))) == 0 {
		goto _1
	}

	return null

_1:
_2:
	if (*(*uintptr)(unsafe.Pointer(_pSelect + 72))) == 0 {
		goto _3
	}

	_pSelect = *(*uintptr)(unsafe.Pointer(_pSelect + 72))
	goto _2

_3:
	*(*uint32)(unsafe.Pointer(_db + 48)) = uint32(_savedFlags)
	_pTab = _295sqlite3DbMallocZero(tls, _db, uint64(128))
	if _pTab != 0 {
		goto _4
	}

	return null

_4:
	*(*uint32)(unsafe.Pointer(_pTab + 60)) = uint32(1)
	*(*uintptr)(unsafe.Pointer(_pTab)) = null
	*(*int16)(unsafe.Pointer(_pTab + 72)) = int16(200)

	_1731sqlite3ColumnsFromExprList(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pSelect)), _pTab+70, _pTab+8)
	_1732sqlite3SelectAddColumnTypeAndCollation(tls, _pParse, _pTab, _pSelect)
	*(*int16)(unsafe.Pointer(_pTab + 68)) = int16(-1)
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _5
	}

	_430sqlite3DeleteTable(tls, _db, _pTab)
	return null

_5:
	return _pTab
}

// _1500sqlite3TableAffinity is defined at sqlite3.c:109987:21
func _1500sqlite3TableAffinity(tls crt.TLS, _v uintptr /* *TVdbe = SVdbe */, _pTab uintptr /* *TTable = STable */, _iReg int32) {
	var (
		_i       int32
		_zColAff uintptr // *int8
		_db      uintptr // *Tsqlite3 = Ssqlite3
	)
	_zColAff = *(*uintptr)(unsafe.Pointer(_pTab + 40))
	if _zColAff != 0 {
		goto _1
	}

	_db = _388sqlite3VdbeDb(tls, _v)
	_zColAff = _177sqlite3DbMallocRaw(tls, null, uint64(int32(*(*int16)(unsafe.Pointer(_pTab + 70)))+int32(1)))
	if _zColAff != 0 {
		goto _2
	}

	_178sqlite3OomFault(tls, _db)
	return

_2:
	_i = int32(0)
_3:
	if _i >= int32(*(*int16)(unsafe.Pointer(_pTab + 70))) {
		goto _5
	}

	*(*int8)(unsafe.Pointer(_zColAff + uintptr(_i))) = *(*int8)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pTab + 8))) + 32*uintptr(_i)) + 25))
	_i++
	goto _3

_5:
_6:
	*(*int8)(unsafe.Pointer(_zColAff + uintptr(postinc24(&_i)))) = int8(0)
	if (_i >= int32(0)) && (int32(*(*int8)(unsafe.Pointer(_zColAff + uintptr(_i)))) == int32('A')) {
		goto _6
	}

	*(*uintptr)(unsafe.Pointer(_pTab + 40)) = _zColAff
_1:
	_i = _211sqlite3Strlen30(tls, _zColAff)
	if _i == 0 {
		goto _9
	}

	if _iReg == 0 {
		goto _10
	}

	_1475sqlite3VdbeAddOp4(tls, _v, int32(98), _iReg, _i, int32(0), _zColAff, _i)
	goto _11

_10:
	_1075sqlite3VdbeChangeP4(tls, _v, int32(-1), _zColAff, _i)
_11:
_9:
}

// _1501createTableStmt is defined at sqlite3.c:102240:13
func _1501createTableStmt(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _p uintptr /* *TTable = STable */) (r uintptr /* *int8 */) {
	esc := crt.MustMalloc(4)
	var (
		_i     int32
		_k     = esc // *int32
		_n     int32
		_zStmt uintptr // *int8
		_zSep  uintptr // *int8
		_zSep2 uintptr // *int8
		_zEnd  uintptr // *int8
		_pCol  uintptr // *TColumn = SColumn
		_len   int32
		_zType uintptr // *int8
	)
	defer crt.Free(esc)
	_n = int32(0)
	_pCol = *(*uintptr)(unsafe.Pointer(_p + 8))
	_i = int32(0)
_1:
	if _i >= int32(*(*int16)(unsafe.Pointer(_p + 70))) {
		goto _3
	}

	_n = int32(_n + (_1734identLength(tls, *(*uintptr)(unsafe.Pointer(_pCol))) + int32(5)))
	_i++
	_pCol += 32
	goto _1

_3:
	_n = int32(_n + _1734identLength(tls, *(*uintptr)(unsafe.Pointer(_p))))
	if _n >= int32(50) {
		goto _4
	}

	_zSep = ts + 4553 /* "" */
	_zSep2 = ts + 416 /* "," */
	_zEnd = ts + 8826 /* ")" */
	goto _5

_4:
	_zSep = ts + 8766   /* "\n  " */
	_zSep2 = ts + 29139 /* ",\n  " */
	_zEnd = ts + 29144  /* "\n)" */
_5:
	_n = int32(_n + (int32(35) + (int32(6) * int32(*(*int16)(unsafe.Pointer(_p + 70))))))
	_zStmt = _177sqlite3DbMallocRaw(tls, null, uint64(_n))
	if _zStmt != 0 {
		goto _6
	}

	_178sqlite3OomFault(tls, _db)
	return null

_6:
	Xsqlite3_snprintf(tls, _n, _zStmt, ts+29147 /* "CREATE TABLE " */)
	*(*int32)(unsafe.Pointer(_k)) = _211sqlite3Strlen30(tls, _zStmt)
	_1735identPut(tls, _zStmt, _k, *(*uintptr)(unsafe.Pointer(_p)))
	*(*int8)(unsafe.Pointer(_zStmt + uintptr(postinc7(&(*(*int32)(unsafe.Pointer(_k))))))) = int8('(')
	_pCol = *(*uintptr)(unsafe.Pointer(_p + 8))
	_i = int32(0)
_7:
	if _i >= int32(*(*int16)(unsafe.Pointer(_p + 70))) {
		goto _9
	}

	Xsqlite3_snprintf(tls, _n-(*(*int32)(unsafe.Pointer(_k))), _zStmt+uintptr(*(*int32)(unsafe.Pointer(_k))), _zSep)
	*(*int32)(unsafe.Pointer(_k)) = int32((*(*int32)(unsafe.Pointer(_k))) + _211sqlite3Strlen30(tls, _zStmt+uintptr(*(*int32)(unsafe.Pointer(_k)))))
	_zSep = _zSep2
	_1735identPut(tls, _zStmt, _k, *(*uintptr)(unsafe.Pointer(_pCol)))

	_zType = *(*uintptr)(unsafe.Pointer(_1733azType + 8*uintptr(int32(*(*int8)(unsafe.Pointer(_pCol + 25)))-int32('A'))))
	_len = _211sqlite3Strlen30(tls, _zType)

	crt.Xmemcpy(tls, _zStmt+uintptr(*(*int32)(unsafe.Pointer(_k))), _zType, uint64(_len))
	*(*int32)(unsafe.Pointer(_k)) = int32((*(*int32)(unsafe.Pointer(_k))) + _len)

	_i++
	_pCol += 32
	goto _7

_9:
	Xsqlite3_snprintf(tls, _n-(*(*int32)(unsafe.Pointer(_k))), _zStmt+uintptr(*(*int32)(unsafe.Pointer(_k))), ts+429 /* "%s" */, _zEnd)
	return _zStmt
}

// _1502sqlite3NestedParse is defined at sqlite3.c:100949:21
func _1502sqlite3NestedParse(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _zFormat uintptr /* *int8 */, ap ...interface{}) {
	esc := crt.MustMalloc(160)
	var (
		_ap      *[]interface{} // Tva_list = T__gnuc_va_list = T__...a_list = *struct{X_ [2]uintptr;}
		_zSql    uintptr        // *int8
		_zErrMsg = esc          // **int8
		_db      uintptr        // *Tsqlite3 = Ssqlite3
		_saveBuf = esc + 16     // *[144]int8
	)
	defer crt.Free(esc)
	*(*uintptr)(unsafe.Pointer(_zErrMsg)) = 0
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	if (*(*int32)(unsafe.Pointer(_pParse + 48))) == 0 {
		goto _1
	}

	return

_1:
	{
		x := ap
		_ap = &x
	}
	_zSql = _315sqlite3VMPrintf(tls, _db, _zFormat, _ap)
	_ap = nil
	if _zSql != 0 {
		goto _2
	}

	return

_2:
	(*(*uint8)(unsafe.Pointer(_pParse + 30)))++
	crt.Xmemcpy(tls, _saveBuf, _pParse+uintptr(448), uint64(144))
	crt.Xmemset(tls, _pParse+uintptr(448), int32(0), uint64(144))
	_619sqlite3RunParser(tls, _pParse, _zSql, _zErrMsg)
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_zErrMsg)))
	_181sqlite3DbFree(tls, _db, _zSql)
	crt.Xmemcpy(tls, _pParse+uintptr(448), _saveBuf, uint64(144))
	(*(*uint8)(unsafe.Pointer(_pParse + 30)))--
}

// _1503sqlite3ChangeCookie is defined at sqlite3.c:102175:21
func _1503sqlite3ChangeCookie(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _iDb int32) {
	var (
		_db uintptr // *Tsqlite3 = Ssqlite3
		_v  uintptr // *TVdbe = SVdbe
	)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_v = *(*uintptr)(unsafe.Pointer(_pParse + 16))

	_1241sqlite3VdbeAddOp3(tls, _v, int32(102), _iDb, int32(1), (*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)) + 24)))))+int32(1))
}

// _1504sqlite3VdbeAddParseSchemaOp is defined at sqlite3.c:72497:21
func _1504sqlite3VdbeAddParseSchemaOp(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */, _iDb int32, _zWhere uintptr /* *int8 */) {
	var _j int32

	_1475sqlite3VdbeAddOp4(tls, _p, int32(137), _iDb, int32(0), int32(0), _zWhere, int32(-7))
	_j = int32(0)
_1:
	if _j >= (*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p))) + 40))) {
		goto _3
	}

	_1074sqlite3VdbeUsesBtree(tls, _p, _j)
	_j++
	goto _1

_3:
}

// _1505sqlite3AffinityType is defined at sqlite3.c:101850:21
func _1505sqlite3AffinityType(tls crt.TLS, _zIn uintptr /* *int8 */, _pszEst uintptr /* *Tu8 = uint8 */) (r int8) {
	esc := crt.MustMalloc(4)
	var (
		_h     uint32
		_aff   int8
		_zChar uintptr // *int8
		_v     = esc   // *int32
	)
	defer crt.Free(esc)
	_h = uint32(0)
	_aff = int8('C')
	_zChar = 0

_1:
	if (*(*int8)(unsafe.Pointer(_zIn))) == 0 {
		goto _2
	}

	_h = (_h << (uint(8) % 32)) + uint32(*(*uint8)(unsafe.Pointer(_215sqlite3UpperToLower + uintptr(int32(*(*int8)(unsafe.Pointer(_zIn)))&int32(0xff)))))
	_zIn++
	if _h != uint32(1667785074) {
		goto _3
	}

	_aff = int8('B')
	_zChar = _zIn
	goto _4

_3:
	if _h != uint32(1668050786) {
		goto _5
	}

	_aff = int8('B')
	goto _6

_5:
	if _h != uint32(1952807028) {
		goto _7
	}

	_aff = int8('B')
	goto _8

_7:
	if _h != uint32(1651273570) || int32(_aff) != int32('C') && int32(_aff) != int32('E') {
		goto _9
	}

	_aff = int8('A')
	if int32(*(*int8)(unsafe.Pointer(_zIn))) != int32('(') {
		goto _11
	}

	_zChar = _zIn
_11:
	goto _10

_9:
	if _h != uint32(1919246700) || int32(_aff) != int32('C') {
		goto _12
	}

	_aff = int8('E')
	goto _13

_12:
	if _h != uint32(1718382433) || int32(_aff) != int32('C') {
		goto _14
	}

	_aff = int8('E')
	goto _15

_14:
	if _h != uint32(1685026146) || int32(_aff) != int32('C') {
		goto _16
	}

	_aff = int8('E')
	goto _17

_16:
	if (_h & uint32(0xffffff)) != uint32(6909556) {
		goto _18
	}

	_aff = int8('D')
	goto _2

_18:
_17:
_15:
_13:
_10:
_8:
_6:
_4:
	goto _1

_2:
	if _pszEst == 0 {
		goto _19
	}

	*(*uint8)(unsafe.Pointer(_pszEst)) = uint8(1)
	if int32(_aff) >= int32('C') {
		goto _20
	}

	if _zChar == 0 {
		goto _21
	}

_23:
	if (*(*int8)(unsafe.Pointer(_zChar))) == 0 {
		goto _24
	}

	if int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(uint8(*(*int8)(unsafe.Pointer(_zChar)))))))&int32(0x4) == 0 {
		goto _25
	}

	*(*int32)(unsafe.Pointer(_v)) = int32(0)
	_1004sqlite3GetInt32(tls, _zChar, _v)
	*(*int32)(unsafe.Pointer(_v)) = ((*(*int32)(unsafe.Pointer(_v))) / int32(4)) + int32(1)
	if (*(*int32)(unsafe.Pointer(_v))) <= int32(255) {
		goto _26
	}

	*(*int32)(unsafe.Pointer(_v)) = int32(255)
_26:
	*(*uint8)(unsafe.Pointer(_pszEst)) = uint8(*(*int32)(unsafe.Pointer(_v)))
	goto _24

_25:
	_zChar++
	goto _23

_24:
	goto _22

_21:
	*(*uint8)(unsafe.Pointer(_pszEst)) = uint8(5)
_22:
_20:
_19:
	return _aff
}

// _1506sqlite3ExprIsConstantOrFunction is defined at sqlite3.c:93732:20
func _1506sqlite3ExprIsConstantOrFunction(tls crt.TLS, _p uintptr /* *TExpr = SExpr */, _isInit uint8) (r int32) {
	return _1736exprIsConst(tls, _p, int32(4)+int32(_isInit), int32(0))
}

// _1507sqlite3ExprDup is defined at sqlite3.c:93126:21
func _1507sqlite3ExprDup(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _p uintptr /* *TExpr = SExpr */, _flags int32) (r uintptr /* *TExpr = SExpr */) {
	if _p != 0 {
		return _1737exprDup(tls, _db, _p, _flags, null)
	}

	return null
}

// _1508sqlite3ExprAnd is defined at sqlite3.c:92726:21
func _1508sqlite3ExprAnd(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pLeft uintptr /* *TExpr = SExpr */, _pRight uintptr /* *TExpr = SExpr */) (r uintptr /* *TExpr = SExpr */) {
	var _pNew uintptr // *TExpr = SExpr

	if _pLeft != 0 {
		goto _1
	}

	return _pRight

	goto _2

_1:
	if _pRight != 0 {
		goto _3
	}

	return _pLeft

	goto _4

_3:
	if _1738exprAlwaysFalse(tls, _pLeft) == 0 && _1738exprAlwaysFalse(tls, _pRight) == 0 {
		goto _5
	}

	_777sqlite3ExprDelete(tls, _db, _pLeft)
	_777sqlite3ExprDelete(tls, _db, _pRight)
	return _1335sqlite3ExprAlloc(tls, _db, int32(134), _1360sqlite3IntTokens, int32(0))

	goto _6

_5:
	_pNew = _1335sqlite3ExprAlloc(tls, _db, int32(44), null, int32(0))
	_1353sqlite3ExprAttachSubtrees(tls, _db, _pNew, _pLeft, _pRight)
	return _pNew

_6:
_4:
_2:
	return r
}

// _1509sqlite3ExprCheckHeight is defined at sqlite3.c:92426:20
func _1509sqlite3ExprCheckHeight(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _nHeight int32) (r int32) {
	var (
		_rc       int32
		_mxHeight int32
	)
	_rc = int32(0)
	_mxHeight = *(*int32)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pParse))) + 124) + 12))
	if _nHeight <= _mxHeight {
		goto _1
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+29161 /* "Expression tree is too large (ma..." */, _mxHeight)
	_rc = int32(1)
_1:
	return _rc
}

// _1510sqlite3ExprSkipCollate is defined at sqlite3.c:91909:21
func _1510sqlite3ExprSkipCollate(tls crt.TLS, _pExpr uintptr /* *TExpr = SExpr */) (r uintptr /* *TExpr = SExpr */) {
_1:
	if _pExpr == 0 || ((*(*uint32)(unsafe.Pointer(_pExpr + 4)))&uint32(0x1000)) == uint32(0) {
		goto _2
	}

	if ((*(*uint32)(unsafe.Pointer(_pExpr + 4))) & uint32(0x40000)) == uint32(0) {
		goto _3
	}

	_pExpr = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pExpr + 32))) + 8))
	goto _4

_3:
	_pExpr = *(*uintptr)(unsafe.Pointer(_pExpr + 16))
_4:
	goto _1

_2:
	return _pExpr
}

// _1511sqlite3StringToId is defined at sqlite3.c:101968:13
func _1511sqlite3StringToId(tls crt.TLS, _p uintptr /* *TExpr = SExpr */) {
	if int32(*(*uint8)(unsafe.Pointer(_p))) != int32(97) {
		goto _1
	}

	*(*uint8)(unsafe.Pointer(_p)) = uint8(59)
	goto _2

_1:
	if int32(*(*uint8)(unsafe.Pointer(_p))) != int32(94) || int32(*(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_p + 16))))) != int32(97) {
		goto _3
	}

	*(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_p + 16)))) = uint8(59)
_3:
_2:
}

type SDbFixer struct {
	XpParse   uintptr // *SParse
	XpSchema  uintptr // *SSchema
	XbVarOnly int32
	XzDb      uintptr // *int8
	XzType    uintptr // *int8
	XpName    uintptr // *SToken
}

// _1512sqlite3SrcListLookup is defined at sqlite3.c:105660:22
func _1512sqlite3SrcListLookup(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pSrc uintptr /* *TSrcList = SSrcList */) (r uintptr /* *TTable = STable */) {
	var (
		_pItem uintptr // *SSrcList_item
		_pTab  uintptr // *TTable = STable
	)
	_pItem = _pSrc + 8

	_pTab = _1515sqlite3LocateTableItem(tls, _pParse, uint32(0), _pItem)
	_430sqlite3DeleteTable(tls, *(*uintptr)(unsafe.Pointer(_pParse)), *(*uintptr)(unsafe.Pointer(_pItem + 32)))
	*(*uintptr)(unsafe.Pointer(_pItem + 32)) = _pTab
	if _pTab == 0 {
		goto _1
	}

	(*(*uint32)(unsafe.Pointer(_pTab + 60)))++
_1:
	if _1739sqlite3IndexedByLookup(tls, _pParse, _pItem) == 0 {
		goto _2
	}

	_pTab = null
_2:
	return _pTab
}

// _1513sqlite3FixInit is defined at sqlite3.c:100264:21
func _1513sqlite3FixInit(tls crt.TLS, _pFix uintptr /* *TDbFixer = SDbFixer */, _pParse uintptr /* *TParse = SParse */, _iDb int32, _zType uintptr /* *int8 */, _pName uintptr /* *TToken = SToken */) {
	var _db uintptr // *Tsqlite3 = Ssqlite3

	_db = *(*uintptr)(unsafe.Pointer(_pParse))

	*(*uintptr)(unsafe.Pointer(_pFix)) = _pParse
	*(*uintptr)(unsafe.Pointer(_pFix + 24)) = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)))
	*(*uintptr)(unsafe.Pointer(_pFix + 8)) = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)) + 24))
	*(*uintptr)(unsafe.Pointer(_pFix + 32)) = _zType
	*(*uintptr)(unsafe.Pointer(_pFix + 40)) = _pName
	*(*int32)(unsafe.Pointer(_pFix + 16)) = bool2int(_iDb == int32(1))
}

// _1514sqlite3FixSrcList is defined at sqlite3.c:100297:20
func _1514sqlite3FixSrcList(tls crt.TLS, _pFix uintptr /* *TDbFixer = SDbFixer */, _pList uintptr /* *TSrcList = SSrcList */) (r int32) {
	var (
		_i     int32
		_zDb   uintptr // *int8
		_pItem uintptr // *SSrcList_item
	)
	if _pList != 0 {
		goto _1
	}

	return int32(0)

_1:
	_zDb = *(*uintptr)(unsafe.Pointer(_pFix + 24))
	_i = int32(0)
	_pItem = _pList + 8
_2:
	if _i >= (*(*int32)(unsafe.Pointer(_pList))) {
		goto _4
	}

	if (*(*int32)(unsafe.Pointer(_pFix + 16))) != int32(0) {
		goto _5
	}

	if (*(*uintptr)(unsafe.Pointer(_pItem + 8))) == 0 || _110sqlite3StrICmp(tls, *(*uintptr)(unsafe.Pointer(_pItem + 8)), _zDb) == 0 {
		goto _6
	}

	_550sqlite3ErrorMsg(tls, *(*uintptr)(unsafe.Pointer(_pFix)), ts+29209 /* "%s %T cannot reference objects i..." */, *(*uintptr)(unsafe.Pointer(_pFix + 32)), *(*uintptr)(unsafe.Pointer(_pFix + 40)), *(*uintptr)(unsafe.Pointer(_pItem + 8)))
	return int32(1)

_6:
	_181sqlite3DbFree(tls, *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pFix)))), *(*uintptr)(unsafe.Pointer(_pItem + 8)))
	*(*uintptr)(unsafe.Pointer(_pItem + 8)) = null
	*(*uintptr)(unsafe.Pointer(_pItem)) = *(*uintptr)(unsafe.Pointer(_pFix + 8))
_5:
	if _1528sqlite3FixSelect(tls, _pFix, *(*uintptr)(unsafe.Pointer(_pItem + 40))) == 0 {
		goto _7
	}

	return int32(1)

_7:
	if _1660sqlite3FixExpr(tls, _pFix, *(*uintptr)(unsafe.Pointer(_pItem + 72))) == 0 {
		goto _8
	}

	return int32(1)

_8:
	_i++
	_pItem += 112
	goto _2

_4:
	return int32(0)
}

// _1515sqlite3LocateTableItem is defined at sqlite3.c:101090:22
func _1515sqlite3LocateTableItem(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _flags uint32, _p uintptr /* *SSrcList_item */) (r uintptr /* *TTable = STable */) {
	var (
		_zDb uintptr // *int8
		_iDb int32
	)

	if (*(*uintptr)(unsafe.Pointer(_p))) == 0 {
		goto _1
	}

	_iDb = _1069sqlite3SchemaToIndex(tls, *(*uintptr)(unsafe.Pointer(_pParse)), *(*uintptr)(unsafe.Pointer(_p)))
	_zDb = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pParse))) + 32))) + 32*uintptr(_iDb)))
	goto _2

_1:
	_zDb = *(*uintptr)(unsafe.Pointer(_p + 8))
_2:
	return _1068sqlite3LocateTable(tls, _pParse, _flags, *(*uintptr)(unsafe.Pointer(_p + 16)), _zDb)
}

// _1516sqlite3TokenInit is defined at sqlite3.c:28402:21
func _1516sqlite3TokenInit(tls crt.TLS, _p uintptr /* *TToken = SToken */, _z uintptr /* *int8 */) {
	*(*uintptr)(unsafe.Pointer(_p)) = _z
	*(*uint32)(unsafe.Pointer(_p + 8)) = uint32(_211sqlite3Strlen30(tls, _z))
}

// _1517sqlite3AllocateIndexObject is defined at sqlite3.c:103552:22
func _1517sqlite3AllocateIndexObject(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _nCol int16, _nExtra int32, _ppExtra uintptr /* **int8 */) (r uintptr /* *TIndex = SIndex */) {
	var (
		_p      uintptr // *TIndex = SIndex
		_nByte  int32
		_pExtra uintptr // *int8
	)
	_nByte = int32((uint64(104) + (((uint64(8) * uint64(_nCol)) + uint64(7)) & uint64(18446744073709551608))) + (((((uint64(2) * uint64(int32(_nCol)+int32(1))) + (uint64(2) * uint64(_nCol))) + (uint64(1) * uint64(_nCol))) + uint64(7)) & uint64(18446744073709551608)))
	_p = _295sqlite3DbMallocZero(tls, _db, uint64(_nByte+_nExtra))
	if _p == 0 {
		goto _1
	}

	_pExtra = _p + uintptr(104)
	*(*uintptr)(unsafe.Pointer(_p + 64)) = _pExtra
	_pExtra += uintptr(((uint64(8) * uint64(_nCol)) + uint64(7)) & uint64(18446744073709551608))
	*(*uintptr)(unsafe.Pointer(_p + 16)) = _pExtra
	_pExtra += uintptr(uint64(2) * uint64(int32(_nCol)+int32(1)))
	*(*uintptr)(unsafe.Pointer(_p + 8)) = _pExtra
	_pExtra += uintptr(uint64(2) * uint64(_nCol))
	*(*uintptr)(unsafe.Pointer(_p + 56)) = _pExtra
	*(*uint16)(unsafe.Pointer(_p + 96)) = uint16(_nCol)
	*(*uint16)(unsafe.Pointer(_p + 94)) = uint16(int32(_nCol) - int32(1))
	*(*uintptr)(unsafe.Pointer(_ppExtra)) = _p + uintptr(_nByte)
_1:
	return _p
}

// _1518sqlite3ExprListDup is defined at sqlite3.c:93130:25
func _1518sqlite3ExprListDup(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _p uintptr /* *TExprList = SExprList */, _flags int32) (r uintptr /* *TExprList = SExprList */) {
	var (
		_pNew            uintptr // *TExprList = SExprList
		_pItem           uintptr // *SExprList_item
		_pOldItem        uintptr // *SExprList_item
		_i               int32
		_pPriorSelectCol uintptr // *TExpr = SExpr
		_pOldExpr        uintptr // *TExpr = SExpr
		_pNewExpr        uintptr // *TExpr = SExpr
	)
	_pPriorSelectCol = 0

	if _p != 0 {
		goto _1
	}

	return null

_1:
	_pNew = _373sqlite3DbMallocRawNN(tls, _db, uint64(_744sqlite3DbMallocSize(tls, _db, _p)))
	if _pNew != 0 {
		goto _2
	}

	return null

_2:
	*(*int32)(unsafe.Pointer(_pNew)) = *(*int32)(unsafe.Pointer(_p))
	_pItem = _pNew + 8
	_pOldItem = _p + 8
	_i = int32(0)
_3:
	if _i >= (*(*int32)(unsafe.Pointer(_p))) {
		goto _5
	}

	_pOldExpr = *(*uintptr)(unsafe.Pointer(_pOldItem))
	*(*uintptr)(unsafe.Pointer(_pItem)) = _1507sqlite3ExprDup(tls, _db, _pOldExpr, _flags)
	if _pOldExpr == 0 || int32(*(*uint8)(unsafe.Pointer(_pOldExpr))) != int32(152) || set4(&_pNewExpr, *(*uintptr)(unsafe.Pointer(_pItem))) == 0 {
		goto _6
	}

	if int32(*(*int16)(unsafe.Pointer(_pNewExpr + 48))) != int32(0) {
		goto _7
	}

	_pPriorSelectCol = set4(&(*(*uintptr)(unsafe.Pointer(_pNewExpr + 16))), *(*uintptr)(unsafe.Pointer(_pNewExpr + 24)))
	goto _8

_7:
	*(*uintptr)(unsafe.Pointer(_pNewExpr + 16)) = _pPriorSelectCol
_8:
_6:
	*(*uintptr)(unsafe.Pointer(_pItem + 8)) = _183sqlite3DbStrDup(tls, _db, *(*uintptr)(unsafe.Pointer(_pOldItem + 8)))
	*(*uintptr)(unsafe.Pointer(_pItem + 16)) = _183sqlite3DbStrDup(tls, _db, *(*uintptr)(unsafe.Pointer(_pOldItem + 16)))
	*(*uint8)(unsafe.Pointer(_pItem + 24)) = *(*uint8)(unsafe.Pointer(_pOldItem + 24))
	set64b(&(*(*uint8)(unsafe.Pointer(_pItem + 25))), uint32(0))
	set66b(&(*(*uint8)(unsafe.Pointer(_pItem + 25))), uint32((*(*uint8)(unsafe.Pointer(_pOldItem + 25)))>>1)<<31>>31)
	*(*struct{ X int32 })(unsafe.Pointer(_pItem + 28)) = *(*struct{ X int32 })(unsafe.Pointer(_pOldItem + 28))
	_i++
	_pItem += 32
	_pOldItem += 32
	goto _3

_5:
	return _pNew
}

// _1519sqlite3LocateCollSeq is defined at sqlite3.c:102141:24
func _1519sqlite3LocateCollSeq(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _zName uintptr /* *int8 */) (r uintptr /* *TCollSeq = SCollSeq */) {
	var (
		_db       uintptr // *Tsqlite3 = Ssqlite3
		_enc      uint8
		_initbusy uint8
		_pColl    uintptr // *TCollSeq = SCollSeq
	)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_enc = *(*uint8)(unsafe.Pointer(_db + 94))
	_initbusy = *(*uint8)(unsafe.Pointer((_db + 176) + 5))
	_pColl = _280sqlite3FindCollSeq(tls, _db, _enc, _zName, int32(_initbusy))
	if _initbusy != 0 || _pColl != 0 && (*(*uintptr)(unsafe.Pointer(_pColl + 24))) != 0 {
		goto _1
	}

	_pColl = _1740sqlite3GetCollSeq(tls, _pParse, _enc, _pColl, _zName)
_1:
	return _pColl
}

// _1520hasColumn is defined at sqlite3.c:102360:12
func _1520hasColumn(tls crt.TLS, _aiCol uintptr /* *Ti16 = int16 */, _nCol int32, _x int32) (r int32) {
_1:
	if postinc24(&_nCol) <= int32(0) {
		goto _2
	}

	if _x != int32(*(*int16)(unsafe.Pointer(postinc213(&_aiCol)))) {
		goto _3
	}

	return int32(1)

_3:
	goto _1

_2:
	return int32(0)
}

// _1521sqlite3ColumnOfIndex is defined at sqlite3.c:101519:20
func _1521sqlite3ColumnOfIndex(tls crt.TLS, _pIdx uintptr /* *TIndex = SIndex */, _iCol int16) (r int16) {
	var _i int32

	_i = int32(0)
_1:
	if _i >= int32(*(*uint16)(unsafe.Pointer(_pIdx + 96))) {
		goto _3
	}

	if int32(_iCol) != int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 8))) + 2*uintptr(_i)))) {
		goto _4
	}

	return int16(_i)

_4:
	_i++
	goto _1

_3:
	return int16(-1)
}

// _1522sqlite3RefillIndex is defined at sqlite3.c:103465:13
func _1522sqlite3RefillIndex(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pIndex uintptr /* *TIndex = SIndex */, _memRootPage int32) {
	esc := crt.MustMalloc(4)
	var (
		_pTab          uintptr // *TTable = STable
		_iTab          int32
		_iIdx          int32
		_iSorter       int32
		_addr1         int32
		_addr2         int32
		_tnum          int32
		_iPartIdxLabel = esc   // *int32
		_v             uintptr // *TVdbe = SVdbe
		_pKey          uintptr // *TKeyInfo = SKeyInfo
		_regRecord     int32
		_db            uintptr // *Tsqlite3 = Ssqlite3
		_iDb           int32
		_j2            int32
	)
	defer crt.Free(esc)
	_pTab = *(*uintptr)(unsafe.Pointer(_pIndex + 24))
	_iTab = postinc7(&(*(*int32)(unsafe.Pointer(_pParse + 52))))
	_iIdx = postinc7(&(*(*int32)(unsafe.Pointer(_pParse + 52))))
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_iDb = _1069sqlite3SchemaToIndex(tls, _db, *(*uintptr)(unsafe.Pointer(_pIndex + 48)))
	if _1480sqlite3AuthCheck(tls, _pParse, int32(27), *(*uintptr)(unsafe.Pointer(_pIndex)), null, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)))) == 0 {
		goto _1
	}

	return

_1:
	_1574sqlite3TableLock(tls, _pParse, _iDb, *(*int32)(unsafe.Pointer(_pTab + 56)), uint8(1), *(*uintptr)(unsafe.Pointer(_pTab)))
	_v = _1472sqlite3GetVdbe(tls, _pParse)
	if _v != 0 {
		goto _2
	}

	return

_2:
	if _memRootPage < int32(0) {
		goto _3
	}

	_tnum = _memRootPage
	goto _4

_3:
	_tnum = *(*int32)(unsafe.Pointer(_pIndex + 88))
_4:
	_pKey = _1575sqlite3KeyInfoOfIndex(tls, _pParse, _pIndex)

	_iSorter = postinc7(&(*(*int32)(unsafe.Pointer(_pParse + 52))))
	_1475sqlite3VdbeAddOp4(tls, _v, int32(109), _iSorter, int32(0), int32(*(*uint16)(unsafe.Pointer(_pIndex + 94))), _1566sqlite3KeyInfoRef(tls, _pKey), int32(-9))
	_1647sqlite3OpenTable(tls, _pParse, _iTab, _iDb, _pTab, int32(104))
	_addr1 = _1240sqlite3VdbeAddOp2(tls, _v, int32(37), _iTab, int32(0))
	_regRecord = _1562sqlite3GetTempReg(tls, _pParse)
	_1655sqlite3GenerateIndexKey(tls, _pParse, _pIndex, _iTab, _regRecord, int32(0), _iPartIdxLabel, null, int32(0))
	_1240sqlite3VdbeAddOp2(tls, _v, int32(126), _iSorter, _regRecord)
	_1656sqlite3ResolvePartIdxLabel(tls, _pParse, *(*int32)(unsafe.Pointer(_iPartIdxLabel)))
	_1240sqlite3VdbeAddOp2(tls, _v, int32(7), _iTab, _addr1+int32(1))
	_1474sqlite3VdbeJumpHere(tls, _v, _addr1)
	if _memRootPage >= int32(0) {
		goto _5
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(133), _tnum, _iDb)
_5:
	_1475sqlite3VdbeAddOp4(tls, _v, int32(105), _iIdx, _tnum, _iDb, _pKey, int32(-9))
	_1072sqlite3VdbeChangeP5(tls, _v, uint16(int32(0x1)|func() int32 {
		if _memRootPage >= int32(0) {
			return int32(0x10)
		}
		return int32(0)
	}()))
	_addr1 = _1240sqlite3VdbeAddOp2(tls, _v, int32(35), _iSorter, int32(0))
	if int32(*(*uint8)(unsafe.Pointer(_pIndex + 98))) == int32(0) {
		goto _6
	}

	_j2 = _1496sqlite3VdbeCurrentAddr(tls, _v) + int32(3)
	_1479sqlite3VdbeGoto(tls, _v, _j2)
	_addr2 = _1496sqlite3VdbeCurrentAddr(tls, _v)
	_1071sqlite3VdbeAddOp4Int(tls, _v, int32(120), _iSorter, _j2, _regRecord, int32(*(*uint16)(unsafe.Pointer(_pIndex + 94))))
	_1741sqlite3UniqueConstraint(tls, _pParse, int32(2), _pIndex)
	goto _7

_6:
	_addr2 = _1496sqlite3VdbeCurrentAddr(tls, _v)
_7:
	_1241sqlite3VdbeAddOp3(tls, _v, int32(121), _iSorter, _regRecord, _iIdx)
	_1489sqlite3VdbeAddOp1(tls, _v, int32(125), _iIdx)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(127), _iIdx, _regRecord)
	_1072sqlite3VdbeChangeP5(tls, _v, uint16(0x10))
	_1563sqlite3ReleaseTempReg(tls, _pParse, _regRecord)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(3), _iSorter, _addr2)
	_1474sqlite3VdbeJumpHere(tls, _v, _addr1)
	_1489sqlite3VdbeAddOp1(tls, _v, int32(112), _iTab)
	_1489sqlite3VdbeAddOp1(tls, _v, int32(112), _iIdx)
	_1489sqlite3VdbeAddOp1(tls, _v, int32(112), _iSorter)
}

// _1523sqlite3CodeVerifyNamedSchema is defined at sqlite3.c:104766:21
func _1523sqlite3CodeVerifyNamedSchema(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _zDb uintptr /* *int8 */) {
	var (
		_db  uintptr // *Tsqlite3 = Ssqlite3
		_i   int32
		_pDb uintptr // *TDb = SDb
	)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_i = int32(0)
_1:
	if _i >= (*(*int32)(unsafe.Pointer(_db + 40))) {
		goto _3
	}

	_pDb = (*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_i)
	if (*(*uintptr)(unsafe.Pointer(_pDb + 8))) == 0 || _zDb != 0 && int32(0) != _110sqlite3StrICmp(tls, _zDb, *(*uintptr)(unsafe.Pointer(_pDb))) {
		goto _4
	}

	_1487sqlite3CodeVerifySchema(tls, _pParse, _i)
_4:
	_i++
	goto _1

_3:
}

// _1524sqlite3ViewGetColumnNames is defined at sqlite3.c:102849:20
func _1524sqlite3ViewGetColumnNames(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pTable uintptr /* *TTable = STable */) (r int32) {
	var (
		_pSelTab uintptr // *TTable = STable
		_pSel    uintptr // *TSelect = SSelect
		_nErr    int32
		_n       int32
		_db      uintptr // *Tsqlite3 = Ssqlite3
		_rc      int32
		_xAuth   uintptr // Tsqlite3_xauth = *func(crt.TLS, ...uintptr, uintptr, uintptr) int32
	)
	_nErr = int32(0)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))

	(*(*uint32)(unsafe.Pointer(_db + 72)))++
	_rc = _1742sqlite3VtabCallConnect(tls, _pParse, _pTable)
	(*(*uint32)(unsafe.Pointer(_db + 72)))--
	if _rc == 0 {
		goto _1
	}

	return int32(1)

_1:
	if *(*int32)(unsafe.Pointer(_pTable + 84)) == 0 {
		goto _2
	}

	return int32(0)

_2:
	if int32(*(*int16)(unsafe.Pointer(_pTable + 70))) <= int32(0) {
		goto _3
	}

	return int32(0)

_3:
	if int32(*(*int16)(unsafe.Pointer(_pTable + 70))) >= int32(0) {
		goto _4
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+29255 /* "view %s is circularly defined" */, *(*uintptr)(unsafe.Pointer(_pTable)))
	return int32(1)

_4:
	_pSel = _1529sqlite3SelectDup(tls, _db, *(*uintptr)(unsafe.Pointer(_pTable + 24)), int32(0))
	if _pSel == 0 {
		goto _5
	}

	_n = *(*int32)(unsafe.Pointer(_pParse + 52))
	_1743sqlite3SrcListAssignCursors(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pSel + 32)))
	*(*int16)(unsafe.Pointer(_pTable + 70)) = int16(-1)
	(*(*uint32)(unsafe.Pointer(_db + 352)))++
	_xAuth = *(*uintptr)(unsafe.Pointer(_db + 408))
	*(*uintptr)(unsafe.Pointer(_db + 408)) = null
	_pSelTab = _1499sqlite3ResultSetOfSelect(tls, _pParse, _pSel)
	*(*uintptr)(unsafe.Pointer(_db + 408)) = _xAuth
	*(*int32)(unsafe.Pointer(_pParse + 52)) = _n
	if (*(*uintptr)(unsafe.Pointer(_pTable + 48))) == 0 {
		goto _7
	}

	_1731sqlite3ColumnsFromExprList(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pTable + 48)), _pTable+70, _pTable+8)
	if int32(*(*uint8)(unsafe.Pointer(_db + 97))) != int32(0) || (*(*int32)(unsafe.Pointer(_pParse + 48))) != int32(0) || int32(*(*int16)(unsafe.Pointer(_pTable + 70))) != (*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pSel))))) {
		goto _9
	}

	_1732sqlite3SelectAddColumnTypeAndCollation(tls, _pParse, _pTable, _pSel)
_9:
	goto _8

_7:
	if _pSelTab == 0 {
		goto _10
	}

	*(*int16)(unsafe.Pointer(_pTable + 70)) = *(*int16)(unsafe.Pointer(_pSelTab + 70))
	*(*uintptr)(unsafe.Pointer(_pTable + 8)) = *(*uintptr)(unsafe.Pointer(_pSelTab + 8))
	*(*int16)(unsafe.Pointer(_pSelTab + 70)) = int16(0)
	*(*uintptr)(unsafe.Pointer(_pSelTab + 8)) = null

	goto _11

_10:
	*(*int16)(unsafe.Pointer(_pTable + 70)) = int16(0)
	_nErr++
_11:
_8:
	_430sqlite3DeleteTable(tls, _db, _pSelTab)
	_1094sqlite3SelectDelete(tls, _db, _pSel)
	(*(*uint32)(unsafe.Pointer(_db + 352)))--
	goto _6

_5:
	_nErr++
_6:
	{
		p := &(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTable + 112))) + 114)))
		*p = uint16(int32(*p) | int32(0x2))
	}
	return _nErr
}

// _1525sqlite3ClearStatTables is defined at sqlite3.c:103113:13
func _1525sqlite3ClearStatTables(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _iDb int32, _zType uintptr /* *int8 */, _zName uintptr /* *int8 */) {
	esc := crt.MustMalloc(24)
	var (
		_i       int32
		_zDbName uintptr // *int8
		_zTab    = esc   // *[24]int8
	)
	defer crt.Free(esc)
	_zDbName = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pParse))) + 32))) + 32*uintptr(_iDb)))
	_i = int32(1)
_1:
	if _i > int32(4) {
		goto _3
	}

	Xsqlite3_snprintf(tls, int32(24), _zTab, ts+29285 /* "sqlite_stat%d" */, _i)
	if _221sqlite3FindTable(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _zTab, _zDbName) == 0 {
		goto _4
	}

	_1502sqlite3NestedParse(tls, _pParse, ts+29299 /* "DELETE FROM %Q.%s WHERE %s=%Q" */, _zDbName, _zTab, _zType, _zName)
_4:
	_i++
	goto _1

_3:
}

// _1526sqlite3FkDropTable is defined at sqlite3.c:109138:21
func _1526sqlite3FkDropTable(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pName uintptr /* *TSrcList = SSrcList */, _pTab uintptr /* *TTable = STable */) {
	var (
		_db    uintptr // *Tsqlite3 = Ssqlite3
		_iSkip int32
		_v     uintptr // *TVdbe = SVdbe
		_p     uintptr // *TFKey = SFKey
	)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	if (*(*uint32)(unsafe.Pointer(_db + 48)))&uint32(0x4000) == 0 || *(*int32)(unsafe.Pointer(_pTab + 84)) != 0 || (*(*uintptr)(unsafe.Pointer(_pTab + 24))) != 0 {
		goto _1
	}

	_iSkip = int32(0)
	_v = _1472sqlite3GetVdbe(tls, _pParse)

	if _1618sqlite3FkReferences(tls, _pTab) != 0 {
		goto _2
	}

	_p = *(*uintptr)(unsafe.Pointer(_pTab + 32))
_3:
	if _p == 0 {
		goto _5
	}

	if (*(*uint8)(unsafe.Pointer(_p + 44))) == 0 && (*(*uint32)(unsafe.Pointer(_db + 48)))&uint32(0x80000) == 0 {
		goto _6
	}

	goto _5

_6:
	_p = *(*uintptr)(unsafe.Pointer(_p + 8))
	goto _3

_5:
	if _p != 0 {
		goto _7
	}

	return

_7:
	_iSkip = _1541sqlite3VdbeMakeLabel(tls, _v)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(47), int32(1), _iSkip)
_2:
	*(*uint8)(unsafe.Pointer(_pParse + 194)) = uint8(1)
	_1344sqlite3DeleteFrom(tls, _pParse, _1744sqlite3SrcListDup(tls, _db, _pName, int32(0)), null)
	*(*uint8)(unsafe.Pointer(_pParse + 194)) = uint8(0)
	if ((*(*uint32)(unsafe.Pointer(_db + 48))) & uint32(0x80000)) != uint32(0) {
		goto _8
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(47), int32(0), _1496sqlite3VdbeCurrentAddr(tls, _v)+int32(2))
	_1745sqlite3HaltConstraint(tls, _pParse, int32(787), int32(2), null, int8(-1), uint8(4))
_8:
	if _iSkip == 0 {
		goto _9
	}

	_1569sqlite3VdbeResolveLabel(tls, _v, _iSkip)
_9:
_1:
}

// _1527sqlite3CodeDropTable is defined at sqlite3.c:103136:21
func _1527sqlite3CodeDropTable(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pTab uintptr /* *TTable = STable */, _iDb int32, _isView int32) {
	var (
		_v        uintptr // *TVdbe = SVdbe
		_db       uintptr // *Tsqlite3 = Ssqlite3
		_pTrigger uintptr // *TTrigger = STrigger
		_pDb      uintptr // *TDb = SDb
	)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_pDb = (*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)
	_v = _1472sqlite3GetVdbe(tls, _pParse)

	_1488sqlite3BeginWriteOperation(tls, _pParse, int32(1), _iDb)
	if *(*int32)(unsafe.Pointer(_pTab + 84)) == 0 {
		goto _1
	}

	_1473sqlite3VdbeAddOp0(tls, _v, int32(153))
_1:
	_pTrigger = _1746sqlite3TriggerList(tls, _pParse, _pTab)
_2:
	if _pTrigger == 0 {
		goto _3
	}

	_1663sqlite3DropTriggerPtr(tls, _pParse, _pTrigger)
	_pTrigger = *(*uintptr)(unsafe.Pointer(_pTrigger + 64))
	goto _2

_3:
	if ((*(*uint32)(unsafe.Pointer(_pTab + 64))) & uint32(0x8)) == 0 {
		goto _4
	}

	_1502sqlite3NestedParse(tls, _pParse, ts+29329 /* "DELETE FROM %Q.sqlite_sequence W..." */, *(*uintptr)(unsafe.Pointer(_pDb)), *(*uintptr)(unsafe.Pointer(_pTab)))
_4:
	_1502sqlite3NestedParse(tls, _pParse, ts+29374 /* "DELETE FROM %Q.%s WHERE tbl_name..." */, *(*uintptr)(unsafe.Pointer(_pDb)), ts+5127 /* "sqlite_master" */, *(*uintptr)(unsafe.Pointer(_pTab)))
	if _isView != 0 || *(*int32)(unsafe.Pointer(_pTab + 84)) != 0 {
		goto _5
	}

	_1747destroyTable(tls, _pParse, _pTab)
_5:
	if *(*int32)(unsafe.Pointer(_pTab + 84)) == 0 {
		goto _6
	}

	_1475sqlite3VdbeAddOp4(tls, _v, int32(155), _iDb, int32(0), int32(0), *(*uintptr)(unsafe.Pointer(_pTab)), int32(0))
_6:
	_1475sqlite3VdbeAddOp4(tls, _v, int32(139), _iDb, int32(0), int32(0), *(*uintptr)(unsafe.Pointer(_pTab)), int32(0))
	_1503sqlite3ChangeCookie(tls, _pParse, _iDb)
	_1748sqliteViewResetAll(tls, _db, _iDb)
}

// _1528sqlite3FixSelect is defined at sqlite3.c:100327:20
func _1528sqlite3FixSelect(tls crt.TLS, _pFix uintptr /* *TDbFixer = SDbFixer */, _pSelect uintptr /* *TSelect = SSelect */) (r int32) {
_1:
	if _pSelect == 0 {
		goto _2
	}

	if _1749sqlite3FixExprList(tls, _pFix, *(*uintptr)(unsafe.Pointer(_pSelect))) == 0 {
		goto _3
	}

	return int32(1)

_3:
	if _1514sqlite3FixSrcList(tls, _pFix, *(*uintptr)(unsafe.Pointer(_pSelect + 32))) == 0 {
		goto _4
	}

	return int32(1)

_4:
	if _1660sqlite3FixExpr(tls, _pFix, *(*uintptr)(unsafe.Pointer(_pSelect + 40))) == 0 {
		goto _5
	}

	return int32(1)

_5:
	if _1749sqlite3FixExprList(tls, _pFix, *(*uintptr)(unsafe.Pointer(_pSelect + 48))) == 0 {
		goto _6
	}

	return int32(1)

_6:
	if _1660sqlite3FixExpr(tls, _pFix, *(*uintptr)(unsafe.Pointer(_pSelect + 56))) == 0 {
		goto _7
	}

	return int32(1)

_7:
	if _1749sqlite3FixExprList(tls, _pFix, *(*uintptr)(unsafe.Pointer(_pSelect + 64))) == 0 {
		goto _8
	}

	return int32(1)

_8:
	if _1660sqlite3FixExpr(tls, _pFix, *(*uintptr)(unsafe.Pointer(_pSelect + 88))) == 0 {
		goto _9
	}

	return int32(1)

_9:
	if _1660sqlite3FixExpr(tls, _pFix, *(*uintptr)(unsafe.Pointer(_pSelect + 96))) == 0 {
		goto _10
	}

	return int32(1)

_10:
	_pSelect = *(*uintptr)(unsafe.Pointer(_pSelect + 72))
	goto _1

_2:
	return int32(0)
}

// _1529sqlite3SelectDup is defined at sqlite3.c:93245:23
func _1529sqlite3SelectDup(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pDup uintptr /* *TSelect = SSelect */, _flags int32) (r uintptr /* *TSelect = SSelect */) {
	esc := crt.MustMalloc(8)
	var (
		_pRet  = esc   // **TSelect = SSelect
		_pNext uintptr // *TSelect = SSelect
		_pp    uintptr // **TSelect = SSelect
		_p     uintptr // *TSelect = SSelect
		_pNew  uintptr // *TSelect = SSelect
	)
	defer crt.Free(esc)
	*(*uintptr)(unsafe.Pointer(_pRet)) = 0
	_pNext = 0
	_pp = _pRet

	_p = _pDup
_1:
	if _p == 0 {
		goto _3
	}

	_pNew = _373sqlite3DbMallocRawNN(tls, _db, uint64(112))
	if _pNew != 0 {
		goto _4
	}

	goto _3

_4:
	*(*uintptr)(unsafe.Pointer(_pNew)) = _1518sqlite3ExprListDup(tls, _db, *(*uintptr)(unsafe.Pointer(_p)), _flags)
	*(*uintptr)(unsafe.Pointer(_pNew + 32)) = _1744sqlite3SrcListDup(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 32)), _flags)
	*(*uintptr)(unsafe.Pointer(_pNew + 40)) = _1507sqlite3ExprDup(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 40)), _flags)
	*(*uintptr)(unsafe.Pointer(_pNew + 48)) = _1518sqlite3ExprListDup(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 48)), _flags)
	*(*uintptr)(unsafe.Pointer(_pNew + 56)) = _1507sqlite3ExprDup(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 56)), _flags)
	*(*uintptr)(unsafe.Pointer(_pNew + 64)) = _1518sqlite3ExprListDup(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 64)), _flags)
	*(*uint8)(unsafe.Pointer(_pNew + 8)) = *(*uint8)(unsafe.Pointer(_p + 8))
	*(*uintptr)(unsafe.Pointer(_pNew + 80)) = _pNext
	*(*uintptr)(unsafe.Pointer(_pNew + 72)) = null
	*(*uintptr)(unsafe.Pointer(_pNew + 88)) = _1507sqlite3ExprDup(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 88)), _flags)
	*(*uintptr)(unsafe.Pointer(_pNew + 96)) = _1507sqlite3ExprDup(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 96)), _flags)
	*(*int32)(unsafe.Pointer(_pNew + 16)) = int32(0)
	*(*int32)(unsafe.Pointer(_pNew + 20)) = int32(0)
	*(*uint32)(unsafe.Pointer(_pNew + 12)) = (*(*uint32)(unsafe.Pointer(_p + 12))) & uint32(4294967263)
	*(*int32)(unsafe.Pointer(_pNew + 24)) = int32(-1)
	*(*int32)(unsafe.Pointer((_pNew + 24) + 4)) = int32(-1)
	*(*int16)(unsafe.Pointer(_pNew + 10)) = *(*int16)(unsafe.Pointer(_p + 10))
	*(*uintptr)(unsafe.Pointer(_pNew + 104)) = _1750withDup(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 104)))
	*(*uintptr)(unsafe.Pointer(_pp)) = _pNew
	_pp = _pNew + 72
	_pNext = _pNew
	_p = *(*uintptr)(unsafe.Pointer(_p + 72))
	goto _1

_3:
	return *(*uintptr)(unsafe.Pointer(_pRet))
}

type SWhereInfo struct {
	XpParse            uintptr // *SParse
	XpTabList          uintptr // *SSrcList
	XpOrderBy          uintptr // *SExprList
	XpResultSet        uintptr // *SExprList
	XpWhere            uintptr // *SExpr
	XiLimit            int16
	XaiCurOnePass      [2]int32
	XiContinue         int32
	XiBreak            int32
	XsavedNQueryLoop   int32
	XwctrlFlags        uint16
	XnLevel            uint8
	XnOBSat            int8
	Xsorted            uint8
	XeOnePass          uint8
	XuntestedTerms     uint8
	XeDistinct         uint8
	XbOrderedInnerLoop uint8
	XiTop              int32
	XpLoops            uintptr // *SWhereLoop
	XrevMask           uint64
	XnRowOut           int16
	XsWC               SWhereClause
	XsMaskSet          SWhereMaskSet
	Xa                 [1]SWhereLevel
}

type SDistinctCtx struct {
	XisTnct    uint8
	XeTnctType uint8
	XtabTnct   int32
	XaddrTnct  int32
}

type SSortCtx struct {
	XpOrderBy          uintptr // *SExprList
	XnOBSat            int32
	XiECursor          int32
	XregReturn         int32
	XlabelBkOut        int32
	XaddrSortIndex     int32
	XlabelDone         int32
	XsortFlags         uint8
	XbOrderedInnerLoop uint8
}

type SNameContext struct {
	XpParse   uintptr // *SParse
	XpSrcList uintptr // *SSrcList
	XpEList   uintptr // *SExprList
	XpAggInfo uintptr // *SAggInfo
	XpNext    uintptr // *SNameContext
	XnRef     int32
	XnErr     int32
	XncFlags  uint16
}

type SAggInfo_col struct {
	XpTab          uintptr // *STable
	XiTable        int32
	XiColumn       int32
	XiSorterColumn int32
	XiMem          int32
	XpExpr         uintptr // *SExpr
}

// _1530sqlite3SelectPrep is defined at sqlite3.c:122427:21
func _1530sqlite3SelectPrep(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _p uintptr /* *TSelect = SSelect */, _pOuterNC uintptr /* *TNameContext = SNameContext */) {
	if (*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pParse))) + 97))) == 0 {
		goto _1
	}

	return

_1:
	if ((*(*uint32)(unsafe.Pointer(_p + 12))) & uint32(0x80)) == 0 {
		goto _2
	}

	return

_2:
	_1751sqlite3SelectExpand(tls, _pParse, _p)
	if (*(*int32)(unsafe.Pointer(_pParse + 48))) == 0 && (*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pParse))) + 97))) == 0 {
		goto _3
	}

	return

_3:
	_1752sqlite3ResolveSelectNames(tls, _pParse, _p, _pOuterNC)
	if (*(*int32)(unsafe.Pointer(_pParse + 48))) == 0 && (*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pParse))) + 97))) == 0 {
		goto _4
	}

	return

_4:
	_1753sqlite3SelectAddTypeInfo(tls, _pParse, _p)
}

// _1531generateColumnNames is defined at sqlite3.c:119268:13
func _1531generateColumnNames(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pSelect uintptr /* *TSelect = SSelect */) {
	var (
		_v        uintptr // *TVdbe = SVdbe
		_i        int32
		_pTab     uintptr // *TTable = STable
		_pTabList uintptr // *TSrcList = SSrcList
		_pEList   uintptr // *TExprList = SExprList
		_db       uintptr // *Tsqlite3 = Ssqlite3
		_fullName int32
		_srcName  int32
		_p        uintptr // *TExpr = SExpr
		_zName    uintptr // *int8
		_zCol     uintptr // *int8
		_iCol     int32
		_1zName   uintptr // *int8
		_z        uintptr // *int8
	)
	_v = *(*uintptr)(unsafe.Pointer(_pParse + 16))
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	if (*(*uint8)(unsafe.Pointer(_pParse + 467))) == 0 {
		goto _1
	}

	return

_1:
	if (*(*uint8)(unsafe.Pointer(_pParse + 28))) == 0 && (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _2
	}

	return

_2:
_3:
	if (*(*uintptr)(unsafe.Pointer(_pSelect + 72))) == 0 {
		goto _4
	}

	_pSelect = *(*uintptr)(unsafe.Pointer(_pSelect + 72))
	goto _3

_4:
	_pTabList = *(*uintptr)(unsafe.Pointer(_pSelect + 32))
	_pEList = *(*uintptr)(unsafe.Pointer(_pSelect))

	*(*uint8)(unsafe.Pointer(_pParse + 28)) = uint8(1)
	_fullName = bool2int(((*(*uint32)(unsafe.Pointer(_db + 48))) & uint32(0x4)) != uint32(0))
	_srcName = bool2int((((*(*uint32)(unsafe.Pointer(_db + 48))) & uint32(0x40)) != uint32(0)) || (_fullName != 0))
	_621sqlite3VdbeSetNumCols(tls, _v, *(*int32)(unsafe.Pointer(_pEList)))
	_i = int32(0)
_5:
	if _i >= (*(*int32)(unsafe.Pointer(_pEList))) {
		goto _7
	}

	_p = *(*uintptr)(unsafe.Pointer((_pEList + 8) + 32*uintptr(_i)))

	if (*(*uintptr)(unsafe.Pointer(((_pEList + 8) + 32*uintptr(_i)) + 8))) == 0 {
		goto _8
	}

	_zName = *(*uintptr)(unsafe.Pointer(((_pEList + 8) + 32*uintptr(_i)) + 8))
	_622sqlite3VdbeSetColName(tls, _v, _i, int32(0), _zName, uintptr(18446744073709551615))
	goto _9

_8:
	if _srcName == 0 || int32(*(*uint8)(unsafe.Pointer(_p))) != int32(145) {
		goto _10
	}

	_iCol = int32(*(*int16)(unsafe.Pointer(_p + 48)))
	_pTab = *(*uintptr)(unsafe.Pointer(_p + 64))

	if _iCol >= int32(0) {
		goto _12
	}

	_iCol = int32(*(*int16)(unsafe.Pointer(_pTab + 68)))
_12:
	if _iCol >= int32(0) {
		goto _13
	}

	_zCol = ts + 20005 /* "rowid" */
	goto _14

_13:
	_zCol = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTab + 8))) + 32*uintptr(_iCol)))
_14:
	if _fullName == 0 {
		goto _15
	}

	_1zName = 0
	_1zName = _226sqlite3MPrintf(tls, _db, ts+15733 /* "%s.%s" */, *(*uintptr)(unsafe.Pointer(_pTab)), _zCol)
	_622sqlite3VdbeSetColName(tls, _v, _i, int32(0), _1zName, fp10(_109sqlite3MallocSize))
	goto _16

_15:
	_622sqlite3VdbeSetColName(tls, _v, _i, int32(0), _zCol, uintptr(18446744073709551615))
_16:
	goto _11

_10:
	_z = *(*uintptr)(unsafe.Pointer(((_pEList + 8) + 32*uintptr(_i)) + 16))
	_z = func() uintptr {
		if _z == 0 {
			return _226sqlite3MPrintf(tls, _db, ts+29430 /* "column%d" */, _i+int32(1))
		}
		return _183sqlite3DbStrDup(tls, _db, _z)
	}()
	_622sqlite3VdbeSetColName(tls, _v, _i, int32(0), _z, fp10(_109sqlite3MallocSize))
_11:
_9:
	_i++
	goto _5

_7:
	_1754generateColumnTypes(tls, _pParse, _pTabList, _pEList)
}

// _1532flattenSubquery is defined at sqlite3.c:121108:12
func _1532flattenSubquery(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _p uintptr /* *TSelect = SSelect */, _iFrom int32, _isAgg int32) (r int32) {
	esc := crt.MustMalloc(32)
	var (
		_zSavedAuthContext uintptr // *int8
		_pParent           uintptr // *TSelect = SSelect
		_pSub              uintptr // *TSelect = SSelect
		_pSub1             uintptr // *TSelect = SSelect
		_pSrc              uintptr // *TSrcList = SSrcList
		_pSubSrc           uintptr // *TSrcList = SSrcList
		_iParent           int32
		_iNewParent        int32
		_isLeftJoin        int32
		_i                 int32
		_pWhere            uintptr // *TExpr = SExpr
		_pSubitem          uintptr // *SSrcList_item
		_db                uintptr // *Tsqlite3 = Ssqlite3
		_ii                int32
		_pNew              uintptr // *TSelect = SSelect
		_pOrderBy          uintptr // *TExprList = SExprList
		_pLimit            uintptr // *TExpr = SExpr
		_pOffset           uintptr // *TExpr = SExpr
		_pPrior            uintptr // *TSelect = SSelect
		_pTabToDel         uintptr // *TTable = STable
		_pToplevel         uintptr // *TParse = SParse
		_nSubSrc           int32
		_jointype          uint8
		_1pOrderBy         uintptr // *TExprList = SExprList
		_x                 = esc   // *TSubstContext = struct{XpParse *...tJoin int32;XpEList *SExprList;}
	)
	defer crt.Free(esc)
	_zSavedAuthContext = *(*uintptr)(unsafe.Pointer(_pParse + 528))
	_iNewParent = int32(-1)
	_isLeftJoin = int32(0)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))

	if (int32(*(*uint16)(unsafe.Pointer(_db + 92))) & int32(0x1)) == int32(0) {
		goto _1
	}

	return int32(0)

_1:
	_pSrc = *(*uintptr)(unsafe.Pointer(_p + 32))

	_pSubitem = (_pSrc + 8) + 112*uintptr(_iFrom)
	_iParent = *(*int32)(unsafe.Pointer(_pSubitem + 64))
	_pSub = *(*uintptr)(unsafe.Pointer(_pSubitem + 40))

	_pSubSrc = *(*uintptr)(unsafe.Pointer(_pSub + 32))

	if (*(*uintptr)(unsafe.Pointer(_pSub + 88))) == 0 || (*(*uintptr)(unsafe.Pointer(_p + 88))) == 0 {
		goto _2
	}

	return int32(0)

_2:
	if (*(*uintptr)(unsafe.Pointer(_pSub + 96))) == 0 {
		goto _3
	}

	return int32(0)

_3:
	if ((*(*uint32)(unsafe.Pointer(_p + 12)))&uint32(0x100)) == uint32(0) || (*(*uintptr)(unsafe.Pointer(_pSub + 88))) == 0 {
		goto _4
	}

	return int32(0)

_4:
	if (*(*int32)(unsafe.Pointer(_pSubSrc))) != int32(0) {
		goto _5
	}

	return int32(0)

_5:
	if ((*(*uint32)(unsafe.Pointer(_pSub + 12))) & uint32(0x1)) == 0 {
		goto _6
	}

	return int32(0)

_6:
	if (*(*uintptr)(unsafe.Pointer(_pSub + 88))) == 0 || (*(*int32)(unsafe.Pointer(_pSrc))) <= int32(1) && _isAgg == 0 {
		goto _7
	}

	return int32(0)

_7:
	if (*(*uintptr)(unsafe.Pointer(_p + 64))) == 0 || (*(*uintptr)(unsafe.Pointer(_pSub + 64))) == 0 {
		goto _8
	}

	return int32(0)

_8:
	if _isAgg == 0 || (*(*uintptr)(unsafe.Pointer(_pSub + 64))) == 0 {
		goto _9
	}

	return int32(0)

_9:
	if (*(*uintptr)(unsafe.Pointer(_pSub + 88))) == 0 || (*(*uintptr)(unsafe.Pointer(_p + 40))) == 0 {
		goto _10
	}

	return int32(0)

_10:
	if (*(*uintptr)(unsafe.Pointer(_pSub + 88))) == 0 || ((*(*uint32)(unsafe.Pointer(_p + 12)))&uint32(0x1)) == uint32(0) {
		goto _11
	}

	return int32(0)

_11:
	if ((*(*uint32)(unsafe.Pointer(_pSub + 12))) & uint32(0x2000)) == 0 {
		goto _12
	}

	return int32(0)

_12:
	if (int32(*(*uint8)(unsafe.Pointer(_pSubitem + 60))) & int32(0x20)) == int32(0) {
		goto _13
	}

	_isLeftJoin = int32(1)
	if (*(*int32)(unsafe.Pointer(_pSubSrc))) <= int32(1) && _isAgg == 0 && *(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pSubSrc + 8 + 32)) + 84)) == 0 {
		goto _14
	}

	return int32(0)

_14:
_13:
	if (*(*uintptr)(unsafe.Pointer(_pSub + 72))) == 0 {
		goto _15
	}

	if _isAgg == 0 && ((*(*uint32)(unsafe.Pointer(_p + 12)))&uint32(0x1)) == uint32(0) && (*(*int32)(unsafe.Pointer(_pSrc))) == int32(1) {
		goto _16
	}

	return int32(0)

_16:
	_pSub1 = _pSub
_17:
	if _pSub1 == 0 {
		goto _19
	}

	if ((*(*uint32)(unsafe.Pointer(_pSub1 + 12)))&uint32(9)) == uint32(0) && ((*(*uintptr)(unsafe.Pointer(_pSub1 + 72))) == 0 || int32(*(*uint8)(unsafe.Pointer(_pSub1 + 8))) == int32(116)) && (*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pSub1 + 32))))) >= int32(1) {
		goto _20
	}

	return int32(0)

_20:
	_pSub1 = *(*uintptr)(unsafe.Pointer(_pSub1 + 72))
	goto _17

_19:
	if (*(*uintptr)(unsafe.Pointer(_p + 64))) == 0 {
		goto _21
	}

	_ii = int32(0)
_22:
	if _ii >= (*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_p + 64))))) {
		goto _24
	}

	if int32(*(*uint16)(unsafe.Pointer((((*(*uintptr)(unsafe.Pointer(_p + 64))) + 8) + 32*uintptr(_ii)) + 28))) != int32(0) {
		goto _25
	}

	return int32(0)

_25:
	_ii++
	goto _22

_24:
_21:
_15:
	*(*uintptr)(unsafe.Pointer(_pParse + 528)) = *(*uintptr)(unsafe.Pointer(_pSubitem + 16))
	_1480sqlite3AuthCheck(tls, _pParse, int32(21), null, null, null)
	*(*uintptr)(unsafe.Pointer(_pParse + 528)) = _zSavedAuthContext
	_pSub = *(*uintptr)(unsafe.Pointer(_pSub + 72))
_26:
	if _pSub == 0 {
		goto _28
	}

	_pOrderBy = *(*uintptr)(unsafe.Pointer(_p + 64))
	_pLimit = *(*uintptr)(unsafe.Pointer(_p + 88))
	_pOffset = *(*uintptr)(unsafe.Pointer(_p + 96))
	_pPrior = *(*uintptr)(unsafe.Pointer(_p + 72))
	*(*uintptr)(unsafe.Pointer(_p + 64)) = null
	*(*uintptr)(unsafe.Pointer(_p + 32)) = null
	*(*uintptr)(unsafe.Pointer(_p + 72)) = null
	*(*uintptr)(unsafe.Pointer(_p + 88)) = null
	*(*uintptr)(unsafe.Pointer(_p + 96)) = null
	_pNew = _1529sqlite3SelectDup(tls, _db, _p, int32(0))
	*(*uintptr)(unsafe.Pointer(_p + 96)) = _pOffset
	*(*uintptr)(unsafe.Pointer(_p + 88)) = _pLimit
	*(*uintptr)(unsafe.Pointer(_p + 64)) = _pOrderBy
	*(*uintptr)(unsafe.Pointer(_p + 32)) = _pSrc
	*(*uint8)(unsafe.Pointer(_p + 8)) = uint8(116)
	if _pNew != 0 {
		goto _29
	}

	*(*uintptr)(unsafe.Pointer(_p + 72)) = _pPrior
	goto _30

_29:
	*(*uintptr)(unsafe.Pointer(_pNew + 72)) = _pPrior
	if _pPrior == 0 {
		goto _31
	}

	*(*uintptr)(unsafe.Pointer(_pPrior + 80)) = _pNew
_31:
	*(*uintptr)(unsafe.Pointer(_pNew + 80)) = _p
	*(*uintptr)(unsafe.Pointer(_p + 72)) = _pNew
_30:
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _32
	}

	return int32(1)

_32:
	_pSub = *(*uintptr)(unsafe.Pointer(_pSub + 72))
	goto _26

_28:
	_pSub = set4(&_pSub1, *(*uintptr)(unsafe.Pointer(_pSubitem + 40)))
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_pSubitem + 8)))
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_pSubitem + 16)))
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_pSubitem + 24)))
	*(*uintptr)(unsafe.Pointer(_pSubitem + 8)) = null
	*(*uintptr)(unsafe.Pointer(_pSubitem + 16)) = null
	*(*uintptr)(unsafe.Pointer(_pSubitem + 24)) = null
	*(*uintptr)(unsafe.Pointer(_pSubitem + 40)) = null
	if (*(*uintptr)(unsafe.Pointer(_pSubitem + 32))) == 0 {
		goto _33
	}

	_pTabToDel = *(*uintptr)(unsafe.Pointer(_pSubitem + 32))
	if (*(*uint32)(unsafe.Pointer(_pTabToDel + 60))) != uint32(1) {
		goto _34
	}

	_pToplevel = func() uintptr {
		if (*(*uintptr)(unsafe.Pointer(_pParse + 160))) != 0 {
			return *(*uintptr)(unsafe.Pointer(_pParse + 160))
		}
		return _pParse
	}()
	*(*uintptr)(unsafe.Pointer(_pTabToDel + 120)) = *(*uintptr)(unsafe.Pointer(_pToplevel + 560))
	*(*uintptr)(unsafe.Pointer(_pToplevel + 560)) = _pTabToDel
	goto _35

_34:
	(*(*uint32)(unsafe.Pointer(_pTabToDel + 60)))--
_35:
	*(*uintptr)(unsafe.Pointer(_pSubitem + 32)) = null
_33:
	_pParent = _p
_36:
	if _pParent == 0 {
		goto _38
	}

	_jointype = uint8(0)
	_pSubSrc = *(*uintptr)(unsafe.Pointer(_pSub + 32))
	_nSubSrc = *(*int32)(unsafe.Pointer(_pSubSrc))
	_pSrc = *(*uintptr)(unsafe.Pointer(_pParent + 32))
	if _pSrc == 0 {
		goto _39
	}

	_jointype = *(*uint8)(unsafe.Pointer(_pSubitem + 60))
	goto _40

_39:
	_pSrc = set4(&(*(*uintptr)(unsafe.Pointer(_pParent + 32))), _1340sqlite3SrcListAppend(tls, _db, null, null, null))
	if _pSrc != 0 {
		goto _41
	}

	goto _38

_41:
_40:
	if _nSubSrc <= int32(1) {
		goto _42
	}

	*(*uintptr)(unsafe.Pointer(_pParent + 32)) = set4(&_pSrc, _1579sqlite3SrcListEnlarge(tls, _db, _pSrc, _nSubSrc-int32(1), _iFrom+int32(1)))
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _43
	}

	goto _38

_43:
_42:
	_i = int32(0)
_44:
	if _i >= _nSubSrc {
		goto _46
	}

	_778sqlite3IdListDelete(tls, _db, *(*uintptr)(unsafe.Pointer(((_pSrc + 8) + 112*uintptr(_i+_iFrom)) + 80)))

	*(*struct {
		XpSchema     uintptr
		XzDatabase   uintptr
		XzName       uintptr
		XzAlias      uintptr
		XpTab        uintptr
		XpSelect     uintptr
		XaddrFillSub int32
		XregReturn   int32
		XregResult   int32
		Xfg          struct {
			Xjointype uint8
			F1        uint8
		}
		XiSelectId uint8
		XiCursor   int32
		XpOn       uintptr
		XpUsing    uintptr
		XcolUsed   uint64
		Xu1        struct{ X int64 }
		XpIBIndex  uintptr
	})(unsafe.Pointer((_pSrc + 8) + 112*uintptr(_i+_iFrom))) = *(*struct {
		XpSchema     uintptr
		XzDatabase   uintptr
		XzName       uintptr
		XzAlias      uintptr
		XpTab        uintptr
		XpSelect     uintptr
		XaddrFillSub int32
		XregReturn   int32
		XregResult   int32
		Xfg          struct {
			Xjointype uint8
			F1        uint8
		}
		XiSelectId uint8
		XiCursor   int32
		XpOn       uintptr
		XpUsing    uintptr
		XcolUsed   uint64
		Xu1        struct{ X int64 }
		XpIBIndex  uintptr
	})(unsafe.Pointer((_pSubSrc + 8) + 112*uintptr(_i)))
	_iNewParent = *(*int32)(unsafe.Pointer(((_pSubSrc + 8) + 112*uintptr(_i)) + 64))
	crt.Xmemset(tls, (_pSubSrc+8)+112*uintptr(_i), int32(0), uint64(112))
	_i++
	goto _44

_46:
	*(*uint8)(unsafe.Pointer(((_pSrc + 8) + 112*uintptr(_iFrom)) + 60)) = _jointype
	if (*(*uintptr)(unsafe.Pointer(_pSub + 64))) == 0 {
		goto _47
	}

	_1pOrderBy = *(*uintptr)(unsafe.Pointer(_pSub + 64))
	_i = int32(0)
_48:
	if _i >= (*(*int32)(unsafe.Pointer(_1pOrderBy))) {
		goto _50
	}

	*(*uint16)(unsafe.Pointer(((_1pOrderBy + 8) + 32*uintptr(_i)) + 28)) = uint16(0)
	_i++
	goto _48

_50:
	*(*uintptr)(unsafe.Pointer(_pParent + 64)) = _1pOrderBy
	*(*uintptr)(unsafe.Pointer(_pSub + 64)) = null
_47:
	_pWhere = _1507sqlite3ExprDup(tls, _db, *(*uintptr)(unsafe.Pointer(_pSub + 40)), int32(0))
	if _isLeftJoin <= int32(0) {
		goto _51
	}

	_1755setJoinExpr(tls, _pWhere, _iNewParent)
_51:
	*(*uintptr)(unsafe.Pointer(_pParent + 40)) = _1508sqlite3ExprAnd(tls, _db, _pWhere, *(*uintptr)(unsafe.Pointer(_pParent + 40)))
	if int32(*(*uint8)(unsafe.Pointer(_db + 97))) != int32(0) {
		goto _52
	}

	*(*uintptr)(unsafe.Pointer(_x)) = _pParse
	*(*int32)(unsafe.Pointer(_x + 8)) = _iParent
	*(*int32)(unsafe.Pointer(_x + 12)) = _iNewParent
	*(*int32)(unsafe.Pointer(_x + 16)) = _isLeftJoin
	*(*uintptr)(unsafe.Pointer(_x + 24)) = *(*uintptr)(unsafe.Pointer(_pSub))
	_1756substSelect(tls, _x, _pParent, int32(0))
_52:
	{
		p := &(*(*uint32)(unsafe.Pointer(_pParent + 12)))
		*p = uint32(uint32(*p) | ((*(*uint32)(unsafe.Pointer(_pSub + 12))) & uint32(0x1)))
	}
	if (*(*uintptr)(unsafe.Pointer(_pSub + 88))) == 0 {
		goto _53
	}

	*(*uintptr)(unsafe.Pointer(_pParent + 88)) = *(*uintptr)(unsafe.Pointer(_pSub + 88))
	*(*uintptr)(unsafe.Pointer(_pSub + 88)) = null
_53:
	_pParent = *(*uintptr)(unsafe.Pointer(_pParent + 72))
	_pSub = *(*uintptr)(unsafe.Pointer(_pSub + 72))
	goto _36

_38:
	_1094sqlite3SelectDelete(tls, _db, _pSub1)
	return int32(1)
}

// _1533multiSelect is defined at sqlite3.c:119945:12
func _1533multiSelect(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _p uintptr /* *TSelect = SSelect */, _pDest uintptr /* *TSelectDest = SSelectDest */) (r int32) {
	esc := crt.MustMalloc(112)
	var (
		_rc            int32
		_pPrior        uintptr // *TSelect = SSelect
		_v             uintptr // *TVdbe = SVdbe
		_dest          = esc   // *TSelectDest = SSelectDest
		_pDelete       uintptr // *TSelect = SSelect
		_db            uintptr // *Tsqlite3 = Ssqlite3
		_iSub1         int32
		_iSub2         int32
		_addr          int32
		_nLimit        = esc + 32 // *int32
		_unionTab      int32
		_op            uint8
		_priorOp       int32
		_pLimit        uintptr // *TExpr = SExpr
		_pOffset       uintptr // *TExpr = SExpr
		_1addr         int32
		_uniondest     = esc + 48 // *TSelectDest = SSelectDest
		_iCont         int32
		_iBreak        int32
		_iStart        int32
		_tab1          int32
		_tab2          int32
		_2iCont        int32
		_3iBreak       int32
		_4iStart       int32
		_5pLimit       uintptr // *TExpr = SExpr
		_6pOffset      uintptr // *TExpr = SExpr
		_7addr         int32
		_intersectdest = esc + 80 // *TSelectDest = SSelectDest
		_r1            int32
		_i             int32
		_pKeyInfo      uintptr // *TKeyInfo = SKeyInfo
		_pLoop         uintptr // *TSelect = SSelect
		_apColl        uintptr // **TCollSeq = SCollSeq
		_nCol          int32
		_8addr         int32
	)
	defer crt.Free(esc)
	_rc = int32(0)
	_pDelete = 0
	_iSub1 = int32(0)
	_iSub2 = int32(0)

	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_pPrior = *(*uintptr)(unsafe.Pointer(_p + 72))
	*(*SSelectDest)(unsafe.Pointer(_dest)) = *(*SSelectDest)(unsafe.Pointer(_pDest))
	if (*(*uintptr)(unsafe.Pointer(_pPrior + 64))) == 0 && (*(*uintptr)(unsafe.Pointer(_pPrior + 88))) == 0 {
		goto _1
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+29439 /* "%s clause should come after %s n..." */, func() uintptr {
		if (*(*uintptr)(unsafe.Pointer(_pPrior + 64))) != 0 {
			return ts + 26169 /* "ORDER BY" */
		}
		return ts + 16389 /* "LIMIT" */
	}(), _1757selectOpName(tls, int32(*(*uint8)(unsafe.Pointer(_p + 8)))))
	_rc = int32(1)
	goto _multi_select_end

_1:
	_v = _1472sqlite3GetVdbe(tls, _pParse)

	if int32(*(*uint8)(unsafe.Pointer(_dest))) != int32(12) {
		goto _2
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(108), *(*int32)(unsafe.Pointer(_dest + 4)), *(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_p)))))
	*(*uint8)(unsafe.Pointer(_dest)) = uint8(14)
_2:
	if ((*(*uint32)(unsafe.Pointer(_p + 12))) & uint32(0x400)) == 0 {
		goto _3
	}

	_rc = _1758multiSelectValues(tls, _pParse, _p, _dest)
	goto _multi_select_end

_3:
	if ((*(*uint32)(unsafe.Pointer(_p + 12))) & uint32(0x2000)) == 0 {
		goto _4
	}

	_1759generateWithRecursiveQuery(tls, _pParse, _p, _dest)
	goto _5

_4:
	if (*(*uintptr)(unsafe.Pointer(_p + 64))) == 0 {
		goto _6
	}

	return _1760multiSelectOrderBy(tls, _pParse, _p, _pDest)

	goto _7

_6:
	switch int32(*(*uint8)(unsafe.Pointer(_p + 8))) {
	case int32(116):
		goto _9
	case int32(117):
		goto _10
	case int32(115):
		goto _11
	default:
		goto _12
	}
_9:
	_addr = int32(0)

	*(*int32)(unsafe.Pointer(_pPrior + 16)) = *(*int32)(unsafe.Pointer(_p + 16))
	*(*int32)(unsafe.Pointer(_pPrior + 20)) = *(*int32)(unsafe.Pointer(_p + 20))
	*(*uintptr)(unsafe.Pointer(_pPrior + 88)) = *(*uintptr)(unsafe.Pointer(_p + 88))
	*(*uintptr)(unsafe.Pointer(_pPrior + 96)) = *(*uintptr)(unsafe.Pointer(_p + 96))
	_iSub1 = *(*int32)(unsafe.Pointer(_pParse + 484))
	_rc = _1327sqlite3Select(tls, _pParse, _pPrior, _dest)
	*(*uintptr)(unsafe.Pointer(_p + 88)) = null
	*(*uintptr)(unsafe.Pointer(_p + 96)) = null
	if _rc == 0 {
		goto _13
	}

	goto _multi_select_end

_13:
	*(*uintptr)(unsafe.Pointer(_p + 72)) = null
	*(*int32)(unsafe.Pointer(_p + 16)) = *(*int32)(unsafe.Pointer(_pPrior + 16))
	*(*int32)(unsafe.Pointer(_p + 20)) = *(*int32)(unsafe.Pointer(_pPrior + 20))
	if (*(*int32)(unsafe.Pointer(_p + 16))) == 0 {
		goto _14
	}

	_addr = _1489sqlite3VdbeAddOp1(tls, _v, int32(22), *(*int32)(unsafe.Pointer(_p + 16)))
	if (*(*int32)(unsafe.Pointer(_p + 20))) == 0 {
		goto _15
	}

	_1241sqlite3VdbeAddOp3(tls, _v, int32(147), *(*int32)(unsafe.Pointer(_p + 16)), (*(*int32)(unsafe.Pointer(_p + 20)))+int32(1), *(*int32)(unsafe.Pointer(_p + 20)))
_15:
_14:
	_iSub2 = *(*int32)(unsafe.Pointer(_pParse + 484))
	_rc = _1327sqlite3Select(tls, _pParse, _p, _dest)
	_pDelete = *(*uintptr)(unsafe.Pointer(_p + 72))
	*(*uintptr)(unsafe.Pointer(_p + 72)) = _pPrior
	*(*int16)(unsafe.Pointer(_p + 10)) = _1761sqlite3LogEstAdd(tls, *(*int16)(unsafe.Pointer(_p + 10)), *(*int16)(unsafe.Pointer(_pPrior + 10)))
	if (*(*uintptr)(unsafe.Pointer(_pPrior + 88))) == 0 || _1762sqlite3ExprIsInteger(tls, *(*uintptr)(unsafe.Pointer(_pPrior + 88)), _nLimit) == 0 || (*(*int32)(unsafe.Pointer(_nLimit))) <= int32(0) || int32(*(*int16)(unsafe.Pointer(_p + 10))) <= int32(_703sqlite3LogEst(tls, uint64(*(*int32)(unsafe.Pointer(_nLimit))))) {
		goto _16
	}

	*(*int16)(unsafe.Pointer(_p + 10)) = _703sqlite3LogEst(tls, uint64(*(*int32)(unsafe.Pointer(_nLimit))))
_16:
	if _addr == 0 {
		goto _17
	}

	_1474sqlite3VdbeJumpHere(tls, _v, _addr)
_17:
	goto _8

_10:
_11:
	_op = uint8(0)
	_priorOp = int32(1)
	if int32(*(*uint8)(unsafe.Pointer(_dest))) != _priorOp {
		goto _18
	}

	_unionTab = *(*int32)(unsafe.Pointer(_dest + 4))
	goto _19

_18:
	_unionTab = postinc7(&(*(*int32)(unsafe.Pointer(_pParse + 52))))

	_1addr = _1240sqlite3VdbeAddOp2(tls, _v, int32(108), _unionTab, int32(0))

	*(*int32)(unsafe.Pointer(_p + 24)) = _1addr
	{
		p := &(*(*uint32)(unsafe.Pointer(_1763findRightmost(tls, _p) + 12)))
		*p = uint32(uint32(*p) | uint32(0x20))
	}

_19:
	_1497sqlite3SelectDestInit(tls, _uniondest, _priorOp, _unionTab)
	_iSub1 = *(*int32)(unsafe.Pointer(_pParse + 484))
	_rc = _1327sqlite3Select(tls, _pParse, _pPrior, _uniondest)
	if _rc == 0 {
		goto _20
	}

	goto _multi_select_end

_20:
	if int32(*(*uint8)(unsafe.Pointer(_p + 8))) != int32(117) {
		goto _21
	}

	_op = uint8(2)
	goto _22

_21:
	_op = uint8(1)
_22:
	*(*uintptr)(unsafe.Pointer(_p + 72)) = null
	_pLimit = *(*uintptr)(unsafe.Pointer(_p + 88))
	*(*uintptr)(unsafe.Pointer(_p + 88)) = null
	_pOffset = *(*uintptr)(unsafe.Pointer(_p + 96))
	*(*uintptr)(unsafe.Pointer(_p + 96)) = null
	*(*uint8)(unsafe.Pointer(_uniondest)) = _op
	_iSub2 = *(*int32)(unsafe.Pointer(_pParse + 484))
	_rc = _1327sqlite3Select(tls, _pParse, _p, _uniondest)
	_551sqlite3ExprListDelete(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 64)))
	_pDelete = *(*uintptr)(unsafe.Pointer(_p + 72))
	*(*uintptr)(unsafe.Pointer(_p + 72)) = _pPrior
	*(*uintptr)(unsafe.Pointer(_p + 64)) = null
	if int32(*(*uint8)(unsafe.Pointer(_p + 8))) != int32(115) {
		goto _23
	}

	*(*int16)(unsafe.Pointer(_p + 10)) = _1761sqlite3LogEstAdd(tls, *(*int16)(unsafe.Pointer(_p + 10)), *(*int16)(unsafe.Pointer(_pPrior + 10)))
_23:
	_777sqlite3ExprDelete(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 88)))
	*(*uintptr)(unsafe.Pointer(_p + 88)) = _pLimit
	*(*uintptr)(unsafe.Pointer(_p + 96)) = _pOffset
	*(*int32)(unsafe.Pointer(_p + 16)) = int32(0)
	*(*int32)(unsafe.Pointer(_p + 20)) = int32(0)

	if int32(*(*uint8)(unsafe.Pointer(_dest))) == _priorOp {
		goto _24
	}

	_iBreak = _1541sqlite3VdbeMakeLabel(tls, _v)
	_iCont = _1541sqlite3VdbeMakeLabel(tls, _v)
	_1542computeLimitRegisters(tls, _pParse, _p, _iBreak)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(37), _unionTab, _iBreak)
	_iStart = _1496sqlite3VdbeCurrentAddr(tls, _v)
	_1550selectInnerLoop(tls, _pParse, _p, _unionTab, null, null, _dest, _iCont, _iBreak)
	_1569sqlite3VdbeResolveLabel(tls, _v, _iCont)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(7), _unionTab, _iStart)
	_1569sqlite3VdbeResolveLabel(tls, _v, _iBreak)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(112), _unionTab, int32(0))
_24:
	goto _8

_12:
	_tab1 = postinc7(&(*(*int32)(unsafe.Pointer(_pParse + 52))))
	_tab2 = postinc7(&(*(*int32)(unsafe.Pointer(_pParse + 52))))

	_7addr = _1240sqlite3VdbeAddOp2(tls, _v, int32(108), _tab1, int32(0))

	*(*int32)(unsafe.Pointer(_p + 24)) = _7addr
	{
		p := &(*(*uint32)(unsafe.Pointer(_1763findRightmost(tls, _p) + 12)))
		*p = uint32(uint32(*p) | uint32(0x20))
	}

	_1497sqlite3SelectDestInit(tls, _intersectdest, int32(1), _tab1)
	_iSub1 = *(*int32)(unsafe.Pointer(_pParse + 484))
	_rc = _1327sqlite3Select(tls, _pParse, _pPrior, _intersectdest)
	if _rc == 0 {
		goto _25
	}

	goto _multi_select_end

_25:
	_7addr = _1240sqlite3VdbeAddOp2(tls, _v, int32(108), _tab2, int32(0))

	*(*int32)(unsafe.Pointer((_p + 24) + 4)) = _7addr
	*(*uintptr)(unsafe.Pointer(_p + 72)) = null
	_5pLimit = *(*uintptr)(unsafe.Pointer(_p + 88))
	*(*uintptr)(unsafe.Pointer(_p + 88)) = null
	_6pOffset = *(*uintptr)(unsafe.Pointer(_p + 96))
	*(*uintptr)(unsafe.Pointer(_p + 96)) = null
	*(*int32)(unsafe.Pointer(_intersectdest + 4)) = _tab2
	_iSub2 = *(*int32)(unsafe.Pointer(_pParse + 484))
	_rc = _1327sqlite3Select(tls, _pParse, _p, _intersectdest)
	_pDelete = *(*uintptr)(unsafe.Pointer(_p + 72))
	*(*uintptr)(unsafe.Pointer(_p + 72)) = _pPrior
	if int32(*(*int16)(unsafe.Pointer(_p + 10))) <= int32(*(*int16)(unsafe.Pointer(_pPrior + 10))) {
		goto _26
	}

	*(*int16)(unsafe.Pointer(_p + 10)) = *(*int16)(unsafe.Pointer(_pPrior + 10))
_26:
	_777sqlite3ExprDelete(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 88)))
	*(*uintptr)(unsafe.Pointer(_p + 88)) = _5pLimit
	*(*uintptr)(unsafe.Pointer(_p + 96)) = _6pOffset

	_3iBreak = _1541sqlite3VdbeMakeLabel(tls, _v)
	_2iCont = _1541sqlite3VdbeMakeLabel(tls, _v)
	_1542computeLimitRegisters(tls, _pParse, _p, _3iBreak)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(37), _tab1, _3iBreak)
	_r1 = _1562sqlite3GetTempReg(tls, _pParse)
	_4iStart = _1240sqlite3VdbeAddOp2(tls, _v, int32(122), _tab1, _r1)
	_1071sqlite3VdbeAddOp4Int(tls, _v, int32(29), _tab2, _2iCont, _r1, int32(0))
	_1563sqlite3ReleaseTempReg(tls, _pParse, _r1)
	_1550selectInnerLoop(tls, _pParse, _p, _tab1, null, null, _dest, _2iCont, _3iBreak)
	_1569sqlite3VdbeResolveLabel(tls, _v, _2iCont)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(7), _tab1, _4iStart)
	_1569sqlite3VdbeResolveLabel(tls, _v, _3iBreak)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(112), _tab2, int32(0))
	_1240sqlite3VdbeAddOp2(tls, _v, int32(112), _tab1, int32(0))
	goto _8

_8:
_7:
_5:
	_1764explainComposite(tls, _pParse, int32(*(*uint8)(unsafe.Pointer(_p + 8))), _iSub1, _iSub2, bool2int(int32(*(*uint8)(unsafe.Pointer(_p + 8))) != int32(116)))
	if ((*(*uint32)(unsafe.Pointer(_p + 12))) & uint32(0x20)) == 0 {
		goto _27
	}

	_nCol = *(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_p))))
	_pKeyInfo = _1765sqlite3KeyInfoAlloc(tls, _db, _nCol, int32(1))
	if _pKeyInfo != 0 {
		goto _28
	}

	_rc = int32(7)
	goto _multi_select_end

_28:
	_i = int32(0)
	_apColl = _pKeyInfo + 32
_29:
	if _i >= _nCol {
		goto _31
	}

	*(*uintptr)(unsafe.Pointer(_apColl)) = _1766multiSelectCollSeq(tls, _pParse, _p, _i)
	if 0 != (*(*uintptr)(unsafe.Pointer(_apColl))) {
		goto _32
	}

	*(*uintptr)(unsafe.Pointer(_apColl)) = *(*uintptr)(unsafe.Pointer(_db + 16))
_32:
	_i++
	_apColl += 8
	goto _29

_31:
	_pLoop = _p
_33:
	if _pLoop == 0 {
		goto _35
	}

	_i = int32(0)
_36:
	if _i >= int32(2) {
		goto _38
	}

	_8addr = *(*int32)(unsafe.Pointer((_pLoop + 24) + 4*uintptr(_i)))
	if _8addr >= int32(0) {
		goto _39
	}

	goto _38

_39:
	_1725sqlite3VdbeChangeP2(tls, _v, uint32(_8addr), _nCol)
	_1075sqlite3VdbeChangeP4(tls, _v, _8addr, _1566sqlite3KeyInfoRef(tls, _pKeyInfo), int32(-9))
	*(*int32)(unsafe.Pointer((_pLoop + 24) + 4*uintptr(_i))) = int32(-1)
	_i++
	goto _36

_38:
	_pLoop = *(*uintptr)(unsafe.Pointer(_pLoop + 72))
	goto _33

_35:
	_1259sqlite3KeyInfoUnref(tls, _pKeyInfo)
_27:
	goto _multi_select_end
_multi_select_end:
	*(*int32)(unsafe.Pointer(_pDest + 8)) = *(*int32)(unsafe.Pointer(_dest + 8))
	*(*int32)(unsafe.Pointer(_pDest + 12)) = *(*int32)(unsafe.Pointer(_dest + 12))
	_1094sqlite3SelectDelete(tls, _db, _pDelete)
	return _rc
}

// _1534sqlite3SelectExprHeight is defined at sqlite3.c:92516:20
func _1534sqlite3SelectExprHeight(tls crt.TLS, _p uintptr /* *TSelect = SSelect */) (r int32) {
	esc := crt.MustMalloc(4)
	var _nHeight = esc // *int32
	defer crt.Free(esc)
	*(*int32)(unsafe.Pointer(_nHeight)) = int32(0)
	_1767heightOfSelect(tls, _p, _nHeight)
	return *(*int32)(unsafe.Pointer(_nHeight))
}

// _1535pushDownWhereTerms is defined at sqlite3.c:121553:12
func _1535pushDownWhereTerms(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pSubq uintptr /* *TSelect = SSelect */, _pWhere uintptr /* *TExpr = SExpr */, _iCursor int32) (r int32) {
	esc := crt.MustMalloc(32)
	var (
		_pNew  uintptr // *TExpr = SExpr
		_nChng int32
		_x     = esc // *TSubstContext = struct{XpParse *...tJoin int32;XpEList *SExprList;}
	)
	defer crt.Free(esc)
	_nChng = int32(0)
	if _pWhere != 0 {
		goto _1
	}

	return int32(0)

_1:
	if ((*(*uint32)(unsafe.Pointer(_pSubq + 12))) & uint32(0x2000)) == 0 {
		goto _2
	}

	return int32(0)

_2:
	if (*(*uintptr)(unsafe.Pointer(_pSubq + 88))) == 0 {
		goto _3
	}

	return int32(0)

_3:
_4:
	if int32(*(*uint8)(unsafe.Pointer(_pWhere))) != int32(44) {
		goto _5
	}

	_nChng = int32(_nChng + _1535pushDownWhereTerms(tls, _pParse, _pSubq, *(*uintptr)(unsafe.Pointer(_pWhere + 24)), _iCursor))
	_pWhere = *(*uintptr)(unsafe.Pointer(_pWhere + 16))
	goto _4

_5:
	if ((*(*uint32)(unsafe.Pointer(_pWhere + 4))) & uint32(0x1)) == uint32(0) {
		goto _6
	}

	return int32(0)

_6:
	if _1768sqlite3ExprIsTableConstant(tls, _pWhere, _iCursor) == 0 {
		goto _7
	}

	_nChng++
_8:
	if _pSubq == 0 {
		goto _9
	}

	_pNew = _1507sqlite3ExprDup(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _pWhere, int32(0))
	*(*uintptr)(unsafe.Pointer(_x)) = _pParse
	*(*int32)(unsafe.Pointer(_x + 8)) = _iCursor
	*(*int32)(unsafe.Pointer(_x + 12)) = _iCursor
	*(*int32)(unsafe.Pointer(_x + 16)) = int32(0)
	*(*uintptr)(unsafe.Pointer(_x + 24)) = *(*uintptr)(unsafe.Pointer(_pSubq))
	_pNew = _1769substExpr(tls, _x, _pNew)
	if ((*(*uint32)(unsafe.Pointer(_pSubq + 12))) & uint32(0x8)) == 0 {
		goto _10
	}

	*(*uintptr)(unsafe.Pointer(_pSubq + 56)) = _1508sqlite3ExprAnd(tls, *(*uintptr)(unsafe.Pointer(_pParse)), *(*uintptr)(unsafe.Pointer(_pSubq + 56)), _pNew)
	goto _11

_10:
	*(*uintptr)(unsafe.Pointer(_pSubq + 40)) = _1508sqlite3ExprAnd(tls, *(*uintptr)(unsafe.Pointer(_pParse)), *(*uintptr)(unsafe.Pointer(_pSubq + 40)), _pNew)
_11:
	_pSubq = *(*uintptr)(unsafe.Pointer(_pSubq + 72))
	goto _8

_9:
_7:
	return _nChng
}

// _1536sqlite3ClearTempRegCache is defined at sqlite3.c:97092:21
func _1536sqlite3ClearTempRegCache(tls crt.TLS, _pParse uintptr /* *TParse = SParse */) {
	*(*uint8)(unsafe.Pointer(_pParse + 31)) = uint8(0)
	*(*int32)(unsafe.Pointer(_pParse + 40)) = int32(0)
}

// _1537isSelfJoinView is defined at sqlite3.c:122687:28
func _1537isSelfJoinView(tls crt.TLS, _pTabList uintptr /* *TSrcList = SSrcList */, _pThis uintptr /* *SSrcList_item */) (r uintptr /* *SSrcList_item */) {
	var _pItem uintptr // *SSrcList_item

	_pItem = _pTabList + 8
_1:
	if _pItem >= _pThis {
		goto _3
	}

	if (*(*uintptr)(unsafe.Pointer(_pItem + 40))) != 0 {
		goto _4
	}

	goto _2

_4:
	if (uint32((*(*uint8)(unsafe.Pointer((_pItem + 60) + 1)))>>4) << 31 >> 31) == 0 {
		goto _5
	}

	goto _2

_5:
	if (*(*uintptr)(unsafe.Pointer(_pItem + 16))) != 0 {
		goto _6
	}

	goto _2

_6:
	if Xsqlite3_stricmp(tls, *(*uintptr)(unsafe.Pointer(_pItem + 8)), *(*uintptr)(unsafe.Pointer(_pThis + 8))) == int32(0) {
		goto _7
	}

	goto _2

_7:
	if Xsqlite3_stricmp(tls, *(*uintptr)(unsafe.Pointer(_pItem + 16)), *(*uintptr)(unsafe.Pointer(_pThis + 16))) == int32(0) {
		goto _8
	}

	goto _2

_8:
	if _1770sqlite3ExprCompare(tls, null, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pThis + 40))) + 40)), *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pItem + 40))) + 40)), int32(-1)) == 0 {
		goto _9
	}

	goto _2

_9:
	return _pItem

_2:
	_pItem += 112
	goto _1

_3:
	return null
}

// _1538sqlite3VdbeChangeP1 is defined at sqlite3.c:72996:21
func _1538sqlite3VdbeChangeP1(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */, _addr uint32, _val int32) {
	*(*int32)(unsafe.Pointer(_1615sqlite3VdbeGetOp(tls, _p, int32(_addr)) + 4)) = _val
}

// _1539sqlite3ExprListCompare is defined at sqlite3.c:96638:20
func _1539sqlite3ExprListCompare(tls crt.TLS, _pA uintptr /* *TExprList = SExprList */, _pB uintptr /* *TExprList = SExprList */, _iTab int32) (r int32) {
	var (
		_i      int32
		_pExprA uintptr // *TExpr = SExpr
		_pExprB uintptr // *TExpr = SExpr
	)
	if _pA != 0 || _pB != 0 {
		goto _1
	}

	return int32(0)

_1:
	if _pA != 0 && _pB != 0 {
		goto _2
	}

	return int32(1)

_2:
	if (*(*int32)(unsafe.Pointer(_pA))) == (*(*int32)(unsafe.Pointer(_pB))) {
		goto _3
	}

	return int32(1)

_3:
	_i = int32(0)
_4:
	if _i >= (*(*int32)(unsafe.Pointer(_pA))) {
		goto _6
	}

	_pExprA = *(*uintptr)(unsafe.Pointer((_pA + 8) + 32*uintptr(_i)))
	_pExprB = *(*uintptr)(unsafe.Pointer((_pB + 8) + 32*uintptr(_i)))
	if int32(*(*uint8)(unsafe.Pointer(((_pA + 8) + 32*uintptr(_i)) + 24))) == int32(*(*uint8)(unsafe.Pointer(((_pB + 8) + 32*uintptr(_i)) + 24))) {
		goto _7
	}

	return int32(1)

_7:
	if _1770sqlite3ExprCompare(tls, null, _pExprA, _pExprB, _iTab) == 0 {
		goto _8
	}

	return int32(1)

_8:
	_i++
	goto _4

_6:
	return int32(0)
}

// _1540keyInfoFromExprList is defined at sqlite3.c:118784:16
func _1540keyInfoFromExprList(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pList uintptr /* *TExprList = SExprList */, _iStart int32, _nExtra int32) (r uintptr /* *TKeyInfo = SKeyInfo */) {
	var (
		_nExpr int32
		_pInfo uintptr // *TKeyInfo = SKeyInfo
		_pItem uintptr // *SExprList_item
		_db    uintptr // *Tsqlite3 = Ssqlite3
		_i     int32
	)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_nExpr = *(*int32)(unsafe.Pointer(_pList))
	_pInfo = _1765sqlite3KeyInfoAlloc(tls, _db, _nExpr-_iStart, _nExtra+int32(1))
	if _pInfo == 0 {
		goto _1
	}

	_i = _iStart
	_pItem = (_pList + 8) + 32*uintptr(_iStart)
_2:
	if _i >= _nExpr {
		goto _4
	}

	*(*uintptr)(unsafe.Pointer((_pInfo + 32) + 8*uintptr(_i-_iStart))) = _1771sqlite3ExprNNCollSeq(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pItem)))
	*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pInfo + 24))) + uintptr(_i-_iStart))) = *(*uint8)(unsafe.Pointer(_pItem + 24))
	_i++
	_pItem += 32
	goto _2

_4:
_1:
	return _pInfo
}

// _1541sqlite3VdbeMakeLabel is defined at sqlite3.c:72552:20
func _1541sqlite3VdbeMakeLabel(tls crt.TLS, _v uintptr /* *TVdbe = SVdbe */) (r int32) {
	var (
		_p uintptr // *TParse = SParse
		_i int32
	)
	_p = *(*uintptr)(unsafe.Pointer(_v + 24))
	_i = postinc7(&(*(*int32)(unsafe.Pointer(_p + 80))))

	if (_i & (_i - int32(1))) != int32(0) {
		goto _1
	}

	*(*uintptr)(unsafe.Pointer(_p + 88)) = _939sqlite3DbReallocOrFree(tls, *(*uintptr)(unsafe.Pointer(_p)), *(*uintptr)(unsafe.Pointer(_p + 88)), uint64(uint64((_i*int32(2))+int32(1))*uint64(4)))
_1:
	if (*(*uintptr)(unsafe.Pointer(_p + 88))) == 0 {
		goto _2
	}

	*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 88))) + 4*uintptr(_i))) = int32(-1)
_2:
	return int32(-1) - _i
}

// _1542computeLimitRegisters is defined at sqlite3.c:119585:13
func _1542computeLimitRegisters(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _p uintptr /* *TSelect = SSelect */, _iBreak int32) {
	esc := crt.MustMalloc(4)
	var (
		_v       uintptr // *TVdbe = SVdbe
		_iLimit  int32
		_iOffset int32
		_n       = esc // *int32
	)
	defer crt.Free(esc)
	_v = 0
	_iLimit = int32(0)
	if (*(*int32)(unsafe.Pointer(_p + 16))) == 0 {
		goto _1
	}

	return

_1:
	_1559sqlite3ExprCacheClear(tls, _pParse)

	if (*(*uintptr)(unsafe.Pointer(_p + 88))) == 0 {
		goto _2
	}

	*(*int32)(unsafe.Pointer(_p + 16)) = set5(&_iLimit, preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56)))))
	_v = _1472sqlite3GetVdbe(tls, _pParse)

	if _1762sqlite3ExprIsInteger(tls, *(*uintptr)(unsafe.Pointer(_p + 88)), _n) == 0 {
		goto _3
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(67), *(*int32)(unsafe.Pointer(_n)), _iLimit)
	if (*(*int32)(unsafe.Pointer(_n))) != int32(0) {
		goto _5
	}

	_1479sqlite3VdbeGoto(tls, _v, _iBreak)
	goto _6

_5:
	if (*(*int32)(unsafe.Pointer(_n))) < int32(0) || int32(*(*int16)(unsafe.Pointer(_p + 10))) <= int32(_703sqlite3LogEst(tls, uint64(*(*int32)(unsafe.Pointer(_n))))) {
		goto _7
	}

	*(*int16)(unsafe.Pointer(_p + 10)) = _703sqlite3LogEst(tls, uint64(*(*int32)(unsafe.Pointer(_n))))
	{
		p := &(*(*uint32)(unsafe.Pointer(_p + 12)))
		*p = uint32(uint32(*p) | uint32(0x4000))
	}
_7:
_6:
	goto _4

_3:
	_1478sqlite3ExprCode(tls, _pParse, *(*uintptr)(unsafe.Pointer(_p + 88)), _iLimit)
	_1489sqlite3VdbeAddOp1(tls, _v, int32(17), _iLimit)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(22), _iLimit, _iBreak)
_4:
	if (*(*uintptr)(unsafe.Pointer(_p + 96))) == 0 {
		goto _8
	}

	*(*int32)(unsafe.Pointer(_p + 20)) = set5(&_iOffset, preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56)))))
	(*(*int32)(unsafe.Pointer(_pParse + 56)))++
	_1478sqlite3ExprCode(tls, _pParse, *(*uintptr)(unsafe.Pointer(_p + 96)), _iOffset)
	_1489sqlite3VdbeAddOp1(tls, _v, int32(17), _iOffset)
	_1241sqlite3VdbeAddOp3(tls, _v, int32(147), _iLimit, _iOffset+int32(1), _iOffset)
_8:
_2:
}

// _1543sqlite3VdbeChangeOpcode is defined at sqlite3.c:72993:21
func _1543sqlite3VdbeChangeOpcode(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */, _addr uint32, _iNewOpcode uint8) {
	*(*uint8)(unsafe.Pointer(_1615sqlite3VdbeGetOp(tls, _p, int32(_addr)))) = _iNewOpcode
}

// _1544sqlite3WhereBegin is defined at sqlite3.c:136238:26
func _1544sqlite3WhereBegin(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pTabList uintptr /* *TSrcList = SSrcList */, _pWhere uintptr /* *TExpr = SExpr */, _pOrderBy uintptr /* *TExprList = SExprList */, _pResultSet uintptr /* *TExprList = SExprList */, _wctrlFlags uint16, _iAuxArg int32) (r uintptr /* *TWhereInfo = SWhereInfo */) {
	esc := crt.MustMalloc(48)
	var (
		_nByteWInfo  int32
		_nTabList    int32
		_pWInfo      uintptr // *TWhereInfo = SWhereInfo
		_v           uintptr // *TVdbe = SVdbe
		_notReady    uint64
		_sWLB        = esc   // *TWhereLoopBuilder = SWhereLoopBuilder
		_pMaskSet    uintptr // *TWhereMaskSet = SWhereMaskSet
		_pLevel      uintptr // *TWhereLevel = SWhereLevel
		_pLoop       uintptr // *TWhereLoop = SWhereLoop
		_ii          int32
		_db          uintptr // *Tsqlite3 = Ssqlite3
		_rc          int32
		_bFordelete  uint8
		_pT          uintptr // *TWhereTerm = SWhereTerm
		_tabUsed     uint64
		_pTerm       uintptr // *TWhereTerm = SWhereTerm
		_pEnd        uintptr // *TWhereTerm = SWhereTerm
		_wsFlags     int32
		_bOnerow     int32
		_pTab        uintptr // *TTable = STable
		_iDb         int32
		_pTabItem    uintptr // *SSrcList_item
		_pVTab       uintptr // *int8
		_iCur        int32
		_op          int32
		_b           uint64
		_n           int32
		_pIx         uintptr // *TIndex = SIndex
		_iIndexCur   int32
		_1op         int32
		_pJ          uintptr // *TIndex = SIndex
		_addrExplain int32
		_            = _addrExplain
		_2wsFlags    int32
	)
	defer crt.Free(esc)
	_v = *(*uintptr)(unsafe.Pointer(_pParse + 16))
	_bFordelete = uint8(0)

	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	crt.Xmemset(tls, _sWLB, int32(0), uint64(48))
	if _pOrderBy == 0 || (*(*int32)(unsafe.Pointer(_pOrderBy))) < int32(64) {
		goto _1
	}

	_pOrderBy = null
_1:
	*(*uintptr)(unsafe.Pointer(_sWLB + 16)) = _pOrderBy
	if (int32(*(*uint16)(unsafe.Pointer(_db + 92))) & int32(0x10)) == int32(0) {
		goto _2
	}

	_wctrlFlags = uint16(int32(_wctrlFlags) & int32(-257))
_2:
	if (*(*int32)(unsafe.Pointer(_pTabList))) <= int32(64) {
		goto _3
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+29481 /* "at most %d tables in a join" */, int32(64))
	return null

_3:
	_nTabList = func() int32 {
		if int32(_wctrlFlags)&int32(0x20) != 0 {
			return int32(1)
		}
		return *(*int32)(unsafe.Pointer(_pTabList))
	}()
	_nByteWInfo = int32(((uint64(1008) + (uint64(_nTabList-int32(1)) * uint64(88))) + uint64(7)) & uint64(18446744073709551608))
	_pWInfo = _373sqlite3DbMallocRawNN(tls, _db, uint64(uint64(_nByteWInfo)+uint64(96)))
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _4
	}

	_181sqlite3DbFree(tls, _db, _pWInfo)
	_pWInfo = null
	goto _whereBeginError

_4:
	*(*uintptr)(unsafe.Pointer(_pWInfo)) = _pParse
	*(*uintptr)(unsafe.Pointer(_pWInfo + 8)) = _pTabList
	*(*uintptr)(unsafe.Pointer(_pWInfo + 16)) = _pOrderBy
	*(*uintptr)(unsafe.Pointer(_pWInfo + 32)) = _pWhere
	*(*uintptr)(unsafe.Pointer(_pWInfo + 24)) = _pResultSet
	*(*int32)(unsafe.Pointer(_pWInfo + 44)) = set5(&(*(*int32)(unsafe.Pointer((_pWInfo + 44) + 4))), int32(-1))
	*(*uint8)(unsafe.Pointer(_pWInfo + 66)) = uint8(_nTabList)
	*(*int32)(unsafe.Pointer(_pWInfo + 56)) = set5(&(*(*int32)(unsafe.Pointer(_pWInfo + 52))), _1541sqlite3VdbeMakeLabel(tls, _v))
	*(*uint16)(unsafe.Pointer(_pWInfo + 64)) = _wctrlFlags
	*(*int16)(unsafe.Pointer(_pWInfo + 40)) = int16(_iAuxArg)
	*(*int32)(unsafe.Pointer(_pWInfo + 60)) = int32(*(*uint32)(unsafe.Pointer(_pParse + 180)))
	crt.Xmemset(tls, _pWInfo+67, int32(0), uint64(37))
	crt.Xmemset(tls, _pWInfo+920, int32(0), uint64(96)+(uint64(_nTabList)*uint64(88)))

	_pMaskSet = _pWInfo + 656
	*(*uintptr)(unsafe.Pointer(_sWLB)) = _pWInfo
	*(*uintptr)(unsafe.Pointer(_sWLB + 8)) = _pWInfo + 104
	*(*uintptr)(unsafe.Pointer(_sWLB + 24)) = _pWInfo + uintptr(_nByteWInfo)

	_1772whereLoopInit(tls, *(*uintptr)(unsafe.Pointer(_sWLB + 24)))
	*(*int32)(unsafe.Pointer(_pMaskSet + 4)) = int32(0)
	_1773sqlite3WhereClauseInit(tls, _pWInfo+104, _pWInfo)
	_1774sqlite3WhereSplit(tls, _pWInfo+104, _pWhere, uint8(44))
	if _nTabList != int32(0) {
		goto _5
	}

	if _pOrderBy == 0 {
		goto _7
	}

	*(*int8)(unsafe.Pointer(_pWInfo + 67)) = int8(*(*int32)(unsafe.Pointer(_pOrderBy)))
_7:
	if (int32(_wctrlFlags) & int32(0x100)) == 0 {
		goto _8
	}

	*(*uint8)(unsafe.Pointer(_pWInfo + 71)) = uint8(1)
_8:
	goto _6

_5:
	_ii = int32(0)
_9:
	_1775createMask(tls, _pMaskSet, *(*int32)(unsafe.Pointer(((_pTabList + 8) + 112*uintptr(_ii)) + 64)))
	_1776sqlite3WhereTabFuncArgs(tls, _pParse, (_pTabList+8)+112*uintptr(_ii), _pWInfo+104)
	if preinc2(&_ii) < (*(*int32)(unsafe.Pointer(_pTabList))) {
		goto _9
	}

_6:
	_1777sqlite3WhereExprAnalyze(tls, _pTabList, _pWInfo+104)
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _12
	}

	goto _whereBeginError

_12:
	_ii = int32(0)
_13:
	if _ii >= (*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_sWLB + 8))) + 20))) {
		goto _15
	}

	_pT = (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_sWLB + 8))) + 32))) + 64*uintptr(_ii)
	if (*(*uint64)(unsafe.Pointer(_pT + 56))) != uint64(0) || _nTabList != int32(0) && _1778exprIsDeterministic(tls, *(*uintptr)(unsafe.Pointer(_pT))) == 0 {
		goto _16
	}

	_1571sqlite3ExprIfFalse(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pT)), *(*int32)(unsafe.Pointer(_pWInfo + 56)), int32(0x10))
	{
		p := &(*(*uint16)(unsafe.Pointer(_pT + 18)))
		*p = uint16(int32(*p) | int32(0x4))
	}
_16:
	_ii++
	goto _13

_15:
	if (int32(_wctrlFlags) & int32(0x100)) == 0 {
		goto _17
	}

	if _1779isDistinctRedundant(tls, _pParse, _pTabList, _pWInfo+104, _pResultSet) == 0 {
		goto _18
	}

	*(*uint8)(unsafe.Pointer(_pWInfo + 71)) = uint8(1)
	goto _19

_18:
	if _pOrderBy != 0 {
		goto _20
	}

	{
		p := &(*(*uint16)(unsafe.Pointer(_pWInfo + 64)))
		*p = uint16(int32(*p) | int32(0x80))
	}
	*(*uintptr)(unsafe.Pointer(_pWInfo + 16)) = _pResultSet
_20:
_19:
_17:
	if _nTabList == int32(1) && _1780whereShortCut(tls, _sWLB) != int32(0) {
		goto _21
	}

	_rc = _1781whereLoopAddAll(tls, _sWLB)
	if _rc == 0 {
		goto _22
	}

	goto _whereBeginError

_22:
	_1782wherePathSolver(tls, _pWInfo, int16(0))
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _23
	}

	goto _whereBeginError

_23:
	if (*(*uintptr)(unsafe.Pointer(_pWInfo + 16))) == 0 {
		goto _24
	}

	_1782wherePathSolver(tls, _pWInfo, int16(int32(*(*int16)(unsafe.Pointer(_pWInfo + 96)))+int32(1)))
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _25
	}

	goto _whereBeginError

_25:
_24:
_21:
	if (*(*uintptr)(unsafe.Pointer(_pWInfo + 16))) != 0 || ((*(*uint32)(unsafe.Pointer(_db + 48)))&uint32(0x1000)) == uint32(0) {
		goto _26
	}

	*(*uint64)(unsafe.Pointer(_pWInfo + 88)) = uint64(18446744073709551615)
_26:
	if (*(*int32)(unsafe.Pointer(_pParse + 48))) == 0 && *(*uint8)(unsafe.Pointer(_db + 97)) == 0 {
		goto _27
	}

	goto _whereBeginError

_27:
	if int32(*(*uint8)(unsafe.Pointer(_pWInfo + 66))) < int32(2) || _pResultSet == 0 || (int32(*(*uint16)(unsafe.Pointer(_db + 92)))&int32(0x100)) != int32(0) {
		goto _28
	}

	_tabUsed = _1783sqlite3WhereExprListUsage(tls, _pMaskSet, _pResultSet)
	if (*(*uintptr)(unsafe.Pointer(_sWLB + 16))) == 0 {
		goto _29
	}

	_tabUsed = uint64(_tabUsed | _1783sqlite3WhereExprListUsage(tls, _pMaskSet, *(*uintptr)(unsafe.Pointer(_sWLB + 16))))
_29:
_30:
	if int32(*(*uint8)(unsafe.Pointer(_pWInfo + 66))) < int32(2) {
		goto _31
	}

	_pLoop = *(*uintptr)(unsafe.Pointer(((_pWInfo + 920) + 88*uintptr(int32(*(*uint8)(unsafe.Pointer(_pWInfo + 66)))-int32(1))) + 72))
	if (int32(*(*uint8)(unsafe.Pointer((((*(*uintptr)(unsafe.Pointer(_pWInfo + 8))) + 8) + 112*uintptr(*(*uint8)(unsafe.Pointer(_pLoop + 16)))) + 60))) & int32(0x8)) != int32(0) {
		goto _32
	}

	goto _31

_32:
	if (int32(_wctrlFlags)&int32(0x100)) != int32(0) || ((*(*uint32)(unsafe.Pointer(_pLoop + 40)))&uint32(0x1000)) != uint32(0) {
		goto _33
	}

	goto _31

_33:
	if (_tabUsed & (*(*uint64)(unsafe.Pointer(_pLoop + 8)))) == uint64(0) {
		goto _34
	}

	goto _31

_34:
	_pEnd = (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_sWLB + 8))) + 32))) + 64*uintptr(*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_sWLB + 8))) + 20)))
	_pTerm = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_sWLB + 8))) + 32))
_35:
	if _pTerm >= _pEnd {
		goto _37
	}

	if ((*(*uint64)(unsafe.Pointer(_pTerm + 56)))&(*(*uint64)(unsafe.Pointer(_pLoop + 8)))) == uint64(0) || ((*(*uint32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pTerm)) + 4)))&uint32(0x1)) != uint32(0) {
		goto _38
	}

	goto _37

_38:
	_pTerm += 64
	goto _35

_37:
	if _pTerm >= _pEnd {
		goto _39
	}

	goto _31

_39:
	(*(*uint8)(unsafe.Pointer(_pWInfo + 66)))--
	_nTabList--
	goto _30

_31:
_28:
	{
		p := &(*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pWInfo))) + 180)))
		*p = uint32(uint32(*p) + uint32(*(*int16)(unsafe.Pointer(_pWInfo + 96))))
	}

	if (int32(_wctrlFlags) & int32(0x4)) == int32(0) {
		goto _40
	}

	_wsFlags = int32(*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pWInfo + 920 + 72))) + 40)))
	_bOnerow = bool2int((_wsFlags & int32(0x1000)) != int32(0))
	if _bOnerow == 0 && ((int32(_wctrlFlags)&int32(0x8)) == int32(0) || int32(0) != (_wsFlags&int32(0x400))) {
		goto _41
	}

	*(*uint8)(unsafe.Pointer(_pWInfo + 69)) = uint8(func() int32 {
		if _bOnerow != 0 {
			return int32(1)
		}
		return int32(2)
	}())
	if ((*(*uint32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pTabList + 8 + 32)) + 64)))&uint32(0x20)) != uint32(0) || _wsFlags&int32(0x40) == 0 {
		goto _42
	}

	if (int32(_wctrlFlags) & int32(0x8)) == 0 {
		goto _43
	}

	_bFordelete = uint8(0x8)
_43:
	*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pWInfo + 920 + 72))) + 40)) = uint32(_wsFlags & int32(-65))
_42:
_41:
_40:
	_ii = int32(0)
	_pLevel = _pWInfo + 920
_44:
	if _ii >= _nTabList {
		goto _46
	}

	_pTabItem = (_pTabList + 8) + 112*uintptr(*(*uint8)(unsafe.Pointer(_pLevel + 44)))
	_pTab = *(*uintptr)(unsafe.Pointer(_pTabItem + 32))
	_iDb = _1069sqlite3SchemaToIndex(tls, _db, *(*uintptr)(unsafe.Pointer(_pTab + 112)))
	_pLoop = *(*uintptr)(unsafe.Pointer(_pLevel + 72))
	if ((*(*uint32)(unsafe.Pointer(_pTab + 64)))&uint32(0x2)) == uint32(0) && (*(*uintptr)(unsafe.Pointer(_pTab + 24))) == 0 {
		goto _47
	}

	goto _48

_47:
	if ((*(*uint32)(unsafe.Pointer(_pLoop + 40))) & uint32(0x400)) == uint32(0) {
		goto _49
	}

	_pVTab = _1037sqlite3GetVTable(tls, _db, _pTab)
	_iCur = *(*int32)(unsafe.Pointer(_pTabItem + 64))
	_1475sqlite3VdbeAddOp4(tls, _v, int32(156), _iCur, int32(0), int32(0), _pVTab, int32(-12))
	goto _50

_49:
	if *(*int32)(unsafe.Pointer(_pTab + 84)) == 0 {
		goto _51
	}

	goto _52

_51:
	if ((*(*uint32)(unsafe.Pointer(_pLoop + 40)))&uint32(0x40)) != uint32(0) || (int32(_wctrlFlags)&int32(0x20)) != int32(0) {
		goto _53
	}

	_op = int32(104)
	if int32(*(*uint8)(unsafe.Pointer(_pWInfo + 69))) == int32(0) {
		goto _55
	}

	_op = int32(105)
	*(*int32)(unsafe.Pointer(_pWInfo + 44)) = *(*int32)(unsafe.Pointer(_pTabItem + 64))
_55:
	_1647sqlite3OpenTable(tls, _pParse, *(*int32)(unsafe.Pointer(_pTabItem + 64)), _iDb, _pTab, _op)

	if int32(*(*uint8)(unsafe.Pointer(_pWInfo + 69))) != int32(0) || int32(*(*int16)(unsafe.Pointer(_pTab + 70))) >= int32(64) || ((*(*uint32)(unsafe.Pointer(_pTab + 64)))&uint32(0x20)) != uint32(0) {
		goto _56
	}

	_b = *(*uint64)(unsafe.Pointer(_pTabItem + 88))
	_n = int32(0)

_57:
	if _b == 0 {
		goto _59
	}

	_b = _b >> (uint(1) % 64)
	_n++
	goto _57

_59:
	_1075sqlite3VdbeChangeP4(tls, _v, int32(-1), uintptr(int64(_n)), int32(-3))

_56:
	_1072sqlite3VdbeChangeP5(tls, _v, uint16(_bFordelete))
	goto _54

_53:
	_1574sqlite3TableLock(tls, _pParse, _iDb, *(*int32)(unsafe.Pointer(_pTab + 56)), uint8(0), *(*uintptr)(unsafe.Pointer(_pTab)))
_54:
_52:
_50:
_48:
	if ((*(*uint32)(unsafe.Pointer(_pLoop + 40))) & uint32(0x200)) == 0 {
		goto _60
	}

	_pIx = *(*uintptr)(unsafe.Pointer(_pLoop + 24 + 8))
	_1op = int32(104)

	if ((*(*uint32)(unsafe.Pointer(_pTab + 64)))&uint32(0x20)) == uint32(0) || int32(uint32(*(*uint8)(unsafe.Pointer(_pIx + 99)))<<30>>30) != int32(2) || (int32(_wctrlFlags)&int32(0x20)) == int32(0) {
		goto _61
	}

	_iIndexCur = *(*int32)(unsafe.Pointer(_pLevel + 4))
	_1op = int32(0)
	goto _62

_61:
	if int32(*(*uint8)(unsafe.Pointer(_pWInfo + 69))) == int32(0) {
		goto _63
	}

	_pJ = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTabItem + 32))) + 16))
	_iIndexCur = _iAuxArg

_65:
	if _pJ == 0 || _pJ == _pIx {
		goto _66
	}

	_iIndexCur++
	_pJ = *(*uintptr)(unsafe.Pointer(_pJ + 40))
	goto _65

_66:
	_1op = int32(105)
	*(*int32)(unsafe.Pointer((_pWInfo + 44) + 4)) = _iIndexCur
	goto _64

_63:
	if _iAuxArg == 0 || (int32(_wctrlFlags)&int32(0x20)) == int32(0) {
		goto _67
	}

	_iIndexCur = _iAuxArg
	_1op = int32(103)
	goto _68

_67:
	_iIndexCur = postinc7(&(*(*int32)(unsafe.Pointer(_pParse + 52))))
_68:
_64:
_62:
	*(*int32)(unsafe.Pointer(_pLevel + 8)) = _iIndexCur

	if _1op == 0 {
		goto _69
	}

	_1241sqlite3VdbeAddOp3(tls, _v, _1op, _iIndexCur, *(*int32)(unsafe.Pointer(_pIx + 88)), _iDb)
	_1589sqlite3VdbeSetP4KeyInfo(tls, _pParse, _pIx)
	if ((*(*uint32)(unsafe.Pointer(_pLoop + 40)))&uint32(0xf)) == uint32(0) || ((*(*uint32)(unsafe.Pointer(_pLoop + 40)))&uint32(32770)) != uint32(0) || (int32(*(*uint16)(unsafe.Pointer(_pWInfo + 64)))&int32(0x1)) != int32(0) || int32(*(*uint8)(unsafe.Pointer(_pWInfo + 71))) == int32(2) {
		goto _70
	}

	_1072sqlite3VdbeChangeP5(tls, _v, uint16(0x2))
_70:
_69:
_60:
	if _iDb < int32(0) {
		goto _71
	}

	_1487sqlite3CodeVerifySchema(tls, _pParse, _iDb)
_71:
	_ii++
	_pLevel += 88
	goto _44

_46:
	*(*int32)(unsafe.Pointer(_pWInfo + 76)) = _1496sqlite3VdbeCurrentAddr(tls, _v)
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _72
	}

	goto _whereBeginError

_72:
	_notReady = uint64(18446744073709551615)
	_ii = int32(0)
_73:
	if _ii >= _nTabList {
		goto _75
	}

	_pLevel = (_pWInfo + 920) + 88*uintptr(_ii)
	_2wsFlags = int32(*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pLevel + 72))) + 40)))
	if ((*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pLevel + 72))) + 40))) & uint32(0x4000)) == uint32(0) {
		goto _76
	}

	_1784constructAutomaticIndex(tls, _pParse, _pWInfo+104, (_pTabList+8)+112*uintptr(*(*uint8)(unsafe.Pointer(_pLevel + 44))), _notReady, _pLevel)
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _77
	}

	goto _whereBeginError

_77:
_76:
	_addrExplain = _1785sqlite3WhereExplainOneScan(tls, _pParse, _pTabList, _pLevel, _ii, int32(*(*uint8)(unsafe.Pointer(_pLevel + 44))), _wctrlFlags)
	*(*int32)(unsafe.Pointer(_pLevel + 32)) = _1496sqlite3VdbeCurrentAddr(tls, _v)
	_notReady = _1786sqlite3WhereCodeOneLoopStart(tls, _pWInfo, _ii, _notReady)
	*(*int32)(unsafe.Pointer(_pWInfo + 52)) = *(*int32)(unsafe.Pointer(_pLevel + 24))
	if (_2wsFlags&int32(0x2000)) != int32(0) || (int32(_wctrlFlags)&int32(0x20)) != int32(0) {
		goto _78
	}

_78:
	_ii++
	goto _73

_75:
	return _pWInfo

	goto _whereBeginError
_whereBeginError:
	if _pWInfo == 0 {
		goto _79
	}

	*(*uint32)(unsafe.Pointer(_pParse + 180)) = uint32(*(*int32)(unsafe.Pointer(_pWInfo + 60)))
	_1787whereInfoFree(tls, _db, _pWInfo)
_79:
	return null
}

// _1545sqlite3WhereOutputRowCount is defined at sqlite3.c:131842:23
func _1545sqlite3WhereOutputRowCount(tls crt.TLS, _pWInfo uintptr /* *TWhereInfo = SWhereInfo */) (r int16) {
	return *(*int16)(unsafe.Pointer(_pWInfo + 96))
}

// _1546sqlite3WhereIsDistinct is defined at sqlite3.c:131850:20
func _1546sqlite3WhereIsDistinct(tls crt.TLS, _pWInfo uintptr /* *TWhereInfo = SWhereInfo */) (r int32) {
	return int32(*(*uint8)(unsafe.Pointer(_pWInfo + 71)))
}

// _1547sqlite3WhereIsOrdered is defined at sqlite3.c:131858:20
func _1547sqlite3WhereIsOrdered(tls crt.TLS, _pWInfo uintptr /* *TWhereInfo = SWhereInfo */) (r int32) {
	return int32(*(*int8)(unsafe.Pointer(_pWInfo + 67)))
}

// _1548sqlite3WhereOrderedInnerLoop is defined at sqlite3.c:131870:20
func _1548sqlite3WhereOrderedInnerLoop(tls crt.TLS, _pWInfo uintptr /* *TWhereInfo = SWhereInfo */) (r int32) {
	return int32(*(*uint8)(unsafe.Pointer(_pWInfo + 72)))
}

// _1549sqlite3VdbeChangeToNoop is defined at sqlite3.c:73116:20
func _1549sqlite3VdbeChangeToNoop(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */, _addr int32) (r int32) {
	var _pOp uintptr // *TVdbeOp = SVdbeOp

	if (*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p))) + 97))) == 0 {
		goto _1
	}

	return int32(0)

_1:
	_pOp = (*(*uintptr)(unsafe.Pointer(_p + 104))) + 24*uintptr(_addr)
	_1099freeP4(tls, *(*uintptr)(unsafe.Pointer(_p)), int32(*(*int8)(unsafe.Pointer(_pOp + 1))), *(*uintptr)(unsafe.Pointer(_pOp + 16)))
	*(*int8)(unsafe.Pointer(_pOp + 1)) = int8(0)
	*(*uintptr)(unsafe.Pointer(_pOp + 16)) = null
	*(*uint8)(unsafe.Pointer(_pOp)) = uint8(166)
	return int32(1)
}

// _1550selectInnerLoop is defined at sqlite3.c:118360:13
func _1550selectInnerLoop(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _p uintptr /* *TSelect = SSelect */, _srcTab int32, _pSort uintptr /* *TSortCtx = SSortCtx */, _pDistinct uintptr /* *TDistinctCtx = SDistinctCtx */, _pDest uintptr /* *TSelectDest = SSelectDest */, _iContinue int32, _iBreak int32) {
	var (
		_v           uintptr // *TVdbe = SVdbe
		_i           int32
		_hasDistinct int32
		_eDest       int32
		_iParm       int32
		_nResultCol  int32
		_nPrefixReg  int32
		_regResult   int32
		_regOrig     int32
		_ecelFlags   uint8
		_j           int32
		_pOp         uintptr // *TVdbeOp = SVdbeOp
		_iJump       int32
		_regPrev     int32
		_pColl       uintptr // *TCollSeq = SCollSeq
		_r1          int32
		_1r1         int32
		_addr        int32
		_r2          int32
		_2r1         int32
		_nKey        int32
		_3r1         int32
		_4r2         int32
		_r3          int32
		_addrTest    int32
		_pSO         uintptr // *TExprList = SExprList
	)
	_v = *(*uintptr)(unsafe.Pointer(_pParse + 16))
	_eDest = int32(*(*uint8)(unsafe.Pointer(_pDest)))
	_iParm = *(*int32)(unsafe.Pointer(_pDest + 4))
	_nPrefixReg = int32(0)

	_hasDistinct = func() int32 {
		if _pDistinct != 0 {
			return int32(*(*uint8)(unsafe.Pointer(_pDistinct + 1)))
		}
		return int32(0)
	}()
	if _pSort == 0 || (*(*uintptr)(unsafe.Pointer(_pSort))) != 0 {
		goto _1
	}

	_pSort = null
_1:
	if _pSort != 0 || _hasDistinct != 0 {
		goto _2
	}

	_1788codeOffset(tls, _v, *(*int32)(unsafe.Pointer(_p + 20)), _iContinue)
_2:
	_nResultCol = *(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_p))))
	if (*(*int32)(unsafe.Pointer(_pDest + 8))) != int32(0) {
		goto _3
	}

	if _pSort == 0 {
		goto _5
	}

	_nPrefixReg = *(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pSort))))
	if int32(*(*uint8)(unsafe.Pointer(_pSort + 32)))&int32(0x1) != 0 {
		goto _6
	}

	_nPrefixReg++
_6:
	{
		p := &(*(*int32)(unsafe.Pointer(_pParse + 56)))
		*p = int32(int32(*p) + _nPrefixReg)
	}
_5:
	*(*int32)(unsafe.Pointer(_pDest + 8)) = (*(*int32)(unsafe.Pointer(_pParse + 56))) + int32(1)
	{
		p := &(*(*int32)(unsafe.Pointer(_pParse + 56)))
		*p = int32(int32(*p) + _nResultCol)
	}
	goto _4

_3:
	if ((*(*int32)(unsafe.Pointer(_pDest + 8))) + _nResultCol) <= (*(*int32)(unsafe.Pointer(_pParse + 56))) {
		goto _7
	}

	{
		p := &(*(*int32)(unsafe.Pointer(_pParse + 56)))
		*p = int32(int32(*p) + _nResultCol)
	}
_7:
_4:
	*(*int32)(unsafe.Pointer(_pDest + 12)) = _nResultCol
	_regOrig = set5(&_regResult, *(*int32)(unsafe.Pointer(_pDest + 8)))
	if _srcTab < int32(0) {
		goto _8
	}

	_i = int32(0)
_10:
	if _i >= _nResultCol {
		goto _12
	}

	_1241sqlite3VdbeAddOp3(tls, _v, int32(96), _srcTab, _i, _regResult+_i)
	_i++
	goto _10

_12:
	goto _9

_8:
	if _eDest == int32(3) {
		goto _13
	}

	if _eDest != int32(10) && _eDest != int32(9) && _eDest != int32(13) {
		goto _14
	}

	_ecelFlags = uint8(0x1)
	goto _15

_14:
	_ecelFlags = uint8(0)
_15:
	if _pSort == 0 || _hasDistinct != int32(0) || _eDest == int32(12) || _eDest == int32(14) {
		goto _16
	}

	_ecelFlags = uint8(int32(_ecelFlags) | int32(12))
	_i = *(*int32)(unsafe.Pointer(_pSort + 8))
_17:
	if _i >= (*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pSort))))) {
		goto _19
	}

	if set5(&_j, int32(*(*uint16)(unsafe.Pointer((((*(*uintptr)(unsafe.Pointer(_pSort))) + 8) + 32*uintptr(_i)) + 28)))) <= int32(0) {
		goto _20
	}

	*(*uint16)(unsafe.Pointer((((*(*uintptr)(unsafe.Pointer(_p))) + 8) + 32*uintptr(_j-int32(1))) + 28)) = uint16((_i + int32(1)) - (*(*int32)(unsafe.Pointer(_pSort + 8))))
_20:
	_i++
	goto _17

_19:
	_regOrig = int32(0)

_16:
	_nResultCol = _1560sqlite3ExprCodeExprList(tls, _pParse, *(*uintptr)(unsafe.Pointer(_p)), _regResult, int32(0), _ecelFlags)
_13:
_9:
	if _hasDistinct == 0 {
		goto _21
	}

	switch int32(*(*uint8)(unsafe.Pointer(_pDistinct + 1))) {
	case int32(2):
		goto _23
	case int32(1):
		goto _24
	default:
		goto _25
	}
_23:
	_regPrev = (*(*int32)(unsafe.Pointer(_pParse + 56))) + int32(1)
	{
		p := &(*(*int32)(unsafe.Pointer(_pParse + 56)))
		*p = int32(int32(*p) + _nResultCol)
	}
	_1549sqlite3VdbeChangeToNoop(tls, _v, *(*int32)(unsafe.Pointer(_pDistinct + 8)))
	_pOp = _1615sqlite3VdbeGetOp(tls, _v, *(*int32)(unsafe.Pointer(_pDistinct + 8)))
	*(*uint8)(unsafe.Pointer(_pOp)) = uint8(70)
	*(*int32)(unsafe.Pointer(_pOp + 4)) = int32(1)
	*(*int32)(unsafe.Pointer(_pOp + 8)) = _regPrev
	_iJump = _1496sqlite3VdbeCurrentAddr(tls, _v) + _nResultCol
	_i = int32(0)
_26:
	if _i >= _nResultCol {
		goto _28
	}

	_pColl = _1789sqlite3ExprCollSeq(tls, _pParse, *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_p))) + 8) + 32*uintptr(_i))))
	if _i >= (_nResultCol - int32(1)) {
		goto _29
	}

	_1241sqlite3VdbeAddOp3(tls, _v, int32(52), _regResult+_i, _iJump, _regPrev+_i)
	goto _30

_29:
	_1241sqlite3VdbeAddOp3(tls, _v, int32(53), _regResult+_i, _iContinue, _regPrev+_i)
_30:
	_1075sqlite3VdbeChangeP4(tls, _v, int32(-1), _pColl, int32(-2))
	_1072sqlite3VdbeChangeP5(tls, _v, uint16(0x80))
	_i++
	goto _26

_28:
	_1241sqlite3VdbeAddOp3(tls, _v, int32(75), _regResult, _regPrev, _nResultCol-int32(1))
	goto _22

_24:
	_1549sqlite3VdbeChangeToNoop(tls, _v, *(*int32)(unsafe.Pointer(_pDistinct + 8)))
	goto _22

_25:
	_1790codeDistinct(tls, _pParse, *(*int32)(unsafe.Pointer(_pDistinct + 4)), _iContinue, _nResultCol, _regResult)
	goto _22

_22:
	if _pSort != 0 {
		goto _31
	}

	_1788codeOffset(tls, _v, *(*int32)(unsafe.Pointer(_p + 20)), _iContinue)
_31:
_21:
	switch _eDest {
	case int32(1):
		goto _33
	case int32(2):
		goto _34
	case int32(5):
		goto _35
	case int32(6):
		goto _36
	case int32(14):
		goto _37
	case int32(12):
		goto _38
	case int32(11):
		goto _39
	case int32(3):
		goto _40
	case int32(10):
		goto _41
	case int32(13):
		goto _42
	case int32(9):
		goto _43
	case int32(8):
		goto _44
	case int32(7):
		goto _45
	default:
		goto _46
	}
_33:
	_r1 = _1562sqlite3GetTempReg(tls, _pParse)
	_1241sqlite3VdbeAddOp3(tls, _v, int32(99), _regResult, _nResultCol, _r1)
	_1071sqlite3VdbeAddOp4Int(tls, _v, int32(127), _iParm, _r1, _regResult, _nResultCol)
	_1563sqlite3ReleaseTempReg(tls, _pParse, _r1)
	goto _32

_34:
	_1241sqlite3VdbeAddOp3(tls, _v, int32(128), _iParm, _regResult, _nResultCol)
	goto _32

_35:
_36:
_37:
_38:
	_1r1 = _1558sqlite3GetTempRange(tls, _pParse, _nPrefixReg+int32(1))
	_1241sqlite3VdbeAddOp3(tls, _v, int32(99), _regResult, _nResultCol, _1r1+_nPrefixReg)
	if _eDest != int32(6) {
		goto _47
	}

	_addr = _1496sqlite3VdbeCurrentAddr(tls, _v) + int32(4)
	_1071sqlite3VdbeAddOp4Int(tls, _v, int32(30), _iParm+int32(1), _addr, _1r1, int32(0))
	_1071sqlite3VdbeAddOp4Int(tls, _v, int32(127), _iParm+int32(1), _1r1, _regResult, _nResultCol)

_47:
	if _pSort == 0 {
		goto _48
	}

	_1791pushOntoSorter(tls, _pParse, _pSort, _p, _1r1+_nPrefixReg, _regResult, int32(1), _nPrefixReg)
	goto _49

_48:
	_r2 = _1562sqlite3GetTempReg(tls, _pParse)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(115), _iParm, _r2)
	_1241sqlite3VdbeAddOp3(tls, _v, int32(116), _iParm, _1r1, _r2)
	_1072sqlite3VdbeChangeP5(tls, _v, uint16(0x8))
	_1563sqlite3ReleaseTempReg(tls, _pParse, _r2)
_49:
	_1564sqlite3ReleaseTempRange(tls, _pParse, _1r1, _nPrefixReg+int32(1))
	goto _32

_39:
	if _pSort == 0 {
		goto _50
	}

	_1791pushOntoSorter(tls, _pParse, _pSort, _p, _regResult, _regOrig, _nResultCol, _nPrefixReg)
	goto _51

_50:
	_2r1 = _1562sqlite3GetTempReg(tls, _pParse)

	_1475sqlite3VdbeAddOp4(tls, _v, int32(99), _regResult, _nResultCol, _2r1, *(*uintptr)(unsafe.Pointer(_pDest + 16)), _nResultCol)
	_1792sqlite3ExprCacheAffinityChange(tls, _pParse, _regResult, _nResultCol)
	_1071sqlite3VdbeAddOp4Int(tls, _v, int32(127), _iParm, _2r1, _regResult, _nResultCol)
	_1563sqlite3ReleaseTempReg(tls, _pParse, _2r1)
_51:
	goto _32

_40:
	_1240sqlite3VdbeAddOp2(tls, _v, int32(67), int32(1), _iParm)
	goto _32

_41:
	if _pSort == 0 {
		goto _52
	}

	_1791pushOntoSorter(tls, _pParse, _pSort, _p, _regResult, _regOrig, _nResultCol, _nPrefixReg)
	goto _53

_52:
_53:
	goto _32

_42:
_43:
	if _pSort == 0 {
		goto _54
	}

	_1791pushOntoSorter(tls, _pParse, _pSort, _p, _regResult, _regOrig, _nResultCol, _nPrefixReg)
	goto _55

_54:
	if _eDest != int32(13) {
		goto _56
	}

	_1489sqlite3VdbeAddOp1(tls, _v, int32(16), *(*int32)(unsafe.Pointer(_pDest + 4)))
	goto _57

_56:
	_1240sqlite3VdbeAddOp2(tls, _v, int32(78), _regResult, _nResultCol)
	_1792sqlite3ExprCacheAffinityChange(tls, _pParse, _regResult, _nResultCol)
_57:
_55:
	goto _32

_44:
_45:
	_addrTest = int32(0)
	_pSO = *(*uintptr)(unsafe.Pointer(_pDest + 24))

	_nKey = *(*int32)(unsafe.Pointer(_pSO))
	_3r1 = _1562sqlite3GetTempReg(tls, _pParse)
	_4r2 = _1558sqlite3GetTempRange(tls, _pParse, _nKey+int32(2))
	_r3 = (_4r2 + _nKey) + int32(1)
	if _eDest != int32(8) {
		goto _58
	}

	_addrTest = _1071sqlite3VdbeAddOp4Int(tls, _v, int32(30), _iParm+int32(1), int32(0), _regResult, _nResultCol)
_58:
	_1241sqlite3VdbeAddOp3(tls, _v, int32(99), _regResult, _nResultCol, _r3)
	if _eDest != int32(8) {
		goto _59
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(127), _iParm+int32(1), _r3)
	_1072sqlite3VdbeChangeP5(tls, _v, uint16(0x10))
_59:
	_i = int32(0)
_60:
	if _i >= _nKey {
		goto _62
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(76), (_regResult+int32(*(*uint16)(unsafe.Pointer(((_pSO + 8) + 32*uintptr(_i)) + 28))))-int32(1), _4r2+_i)
	_i++
	goto _60

_62:
	_1240sqlite3VdbeAddOp2(tls, _v, int32(114), _iParm, _4r2+_nKey)
	_1241sqlite3VdbeAddOp3(tls, _v, int32(99), _4r2, _nKey+int32(2), _3r1)
	_1071sqlite3VdbeAddOp4Int(tls, _v, int32(127), _iParm, _3r1, _4r2, _nKey+int32(2))
	if _addrTest == 0 {
		goto _63
	}

	_1474sqlite3VdbeJumpHere(tls, _v, _addrTest)
_63:
	_1563sqlite3ReleaseTempReg(tls, _pParse, _3r1)
	_1564sqlite3ReleaseTempRange(tls, _pParse, _4r2, _nKey+int32(2))
	goto _32

_46:
	goto _32

_32:
	if _pSort != 0 || (*(*int32)(unsafe.Pointer(_p + 16))) == 0 {
		goto _64
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(59), *(*int32)(unsafe.Pointer(_p + 16)), _iBreak)
_64:
}

// _1551sqlite3WhereContinueLabel is defined at sqlite3.c:131878:20
func _1551sqlite3WhereContinueLabel(tls crt.TLS, _pWInfo uintptr /* *TWhereInfo = SWhereInfo */) (r int32) {
	return *(*int32)(unsafe.Pointer(_pWInfo + 52))
}

// _1552sqlite3WhereBreakLabel is defined at sqlite3.c:131887:20
func _1552sqlite3WhereBreakLabel(tls crt.TLS, _pWInfo uintptr /* *TWhereInfo = SWhereInfo */) (r int32) {
	return *(*int32)(unsafe.Pointer(_pWInfo + 56))
}

// _1553sqlite3WhereEnd is defined at sqlite3.c:136715:21
func _1553sqlite3WhereEnd(tls crt.TLS, _pWInfo uintptr /* *TWhereInfo = SWhereInfo */) {
	var (
		_pParse   uintptr // *TParse = SParse
		_v        uintptr // *TVdbe = SVdbe
		_i        int32
		_pLevel   uintptr // *TWhereLevel = SWhereLevel
		_pLoop    uintptr // *TWhereLoop = SWhereLoop
		_pTabList uintptr // *TSrcList = SSrcList
		_db       uintptr // *Tsqlite3 = Ssqlite3
		_addr     int32
		_addrSeek int32
		_pIdx     uintptr // *TIndex = SIndex
		_n        int32
		_r1       int32
		_j        int32
		_op       int32
		_pIn      uintptr // *SInLoop
		_1j       int32
		_ws       int32
		_k        int32
		_last     int32
		_pOp      uintptr // *TVdbeOp = SVdbeOp
		_2pIdx    uintptr // *TIndex = SIndex
		_pTabItem uintptr // *SSrcList_item
		_pTab     uintptr // *TTable = STable
		_x        int32
		_pPk      uintptr // *TIndex = SIndex
	)
	_pParse = *(*uintptr)(unsafe.Pointer(_pWInfo))
	_v = *(*uintptr)(unsafe.Pointer(_pParse + 16))
	_pTabList = *(*uintptr)(unsafe.Pointer(_pWInfo + 8))
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_1559sqlite3ExprCacheClear(tls, _pParse)
	_i = int32(*(*uint8)(unsafe.Pointer(_pWInfo + 66))) - int32(1)
_1:
	if _i < int32(0) {
		goto _3
	}

	_pLevel = (_pWInfo + 920) + 88*uintptr(_i)
	_pLoop = *(*uintptr)(unsafe.Pointer(_pLevel + 72))
	if int32(*(*uint8)(unsafe.Pointer(_pLevel + 45))) == int32(166) {
		goto _4
	}

	_addrSeek = int32(0)
	if int32(*(*uint8)(unsafe.Pointer(_pWInfo + 71))) != int32(2) || ((*(*uint32)(unsafe.Pointer(_pLoop + 40)))&uint32(0x200)) == uint32(0) || (uint32((*(*uint8)(unsafe.Pointer(set4(&_pIdx, *(*uintptr)(unsafe.Pointer(_pLoop + 24 + 8))) + 99)))>>7)<<31>>31) == 0 || set5(&_n, int32(*(*uint16)(unsafe.Pointer(_pLoop + 24 + 6)))) <= int32(0) || int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 16))) + 2*uintptr(_n)))) < int32(36) {
		goto _6
	}

	_r1 = (*(*int32)(unsafe.Pointer(_pParse + 56))) + int32(1)
	_j = int32(0)
_7:
	if _j >= _n {
		goto _9
	}

	_1241sqlite3VdbeAddOp3(tls, _v, int32(96), *(*int32)(unsafe.Pointer(_pLevel + 8)), _j, _r1+_j)
	_j++
	goto _7

_9:
	{
		p := &(*(*int32)(unsafe.Pointer(_pParse + 56)))
		*p = int32(int32(*p) + (_n + int32(1)))
	}
	_op = func() int32 {
		if int32(*(*uint8)(unsafe.Pointer(_pLevel + 45))) == int32(6) {
			return int32(24)
		}
		return int32(27)
	}()
	_addrSeek = _1071sqlite3VdbeAddOp4Int(tls, _v, _op, *(*int32)(unsafe.Pointer(_pLevel + 8)), int32(0), _r1, _n)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(13), int32(1), *(*int32)(unsafe.Pointer(_pLevel + 52)))
_6:
	_1569sqlite3VdbeResolveLabel(tls, _v, *(*int32)(unsafe.Pointer(_pLevel + 24)))
	_1241sqlite3VdbeAddOp3(tls, _v, int32(*(*uint8)(unsafe.Pointer(_pLevel + 45))), *(*int32)(unsafe.Pointer(_pLevel + 48)), *(*int32)(unsafe.Pointer(_pLevel + 52)), int32(*(*uint8)(unsafe.Pointer(_pLevel + 46))))
	_1072sqlite3VdbeChangeP5(tls, _v, uint16(*(*uint8)(unsafe.Pointer(_pLevel + 47))))
	if _addrSeek == 0 {
		goto _10
	}

	_1474sqlite3VdbeJumpHere(tls, _v, _addrSeek)
_10:
	goto _5

_4:
	_1569sqlite3VdbeResolveLabel(tls, _v, *(*int32)(unsafe.Pointer(_pLevel + 24)))
_5:
	if ((*(*uint32)(unsafe.Pointer(_pLoop + 40)))&uint32(0x800)) == 0 || (*(*int32)(unsafe.Pointer(_pLevel + 56))) <= int32(0) {
		goto _11
	}

	_1569sqlite3VdbeResolveLabel(tls, _v, *(*int32)(unsafe.Pointer(_pLevel + 16)))
	_1j = *(*int32)(unsafe.Pointer(_pLevel + 56))
	_pIn = (*(*uintptr)(unsafe.Pointer(_pLevel + 56 + 8))) + 12*uintptr(_1j-int32(1))
_12:
	if _1j <= int32(0) {
		goto _14
	}

	_1474sqlite3VdbeJumpHere(tls, _v, (*(*int32)(unsafe.Pointer(_pIn + 4)))+int32(1))
	if int32(*(*uint8)(unsafe.Pointer(_pIn + 8))) == int32(166) {
		goto _15
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(*(*uint8)(unsafe.Pointer(_pIn + 8))), *(*int32)(unsafe.Pointer(_pIn)), *(*int32)(unsafe.Pointer(_pIn + 4)))
_15:
	_1474sqlite3VdbeJumpHere(tls, _v, (*(*int32)(unsafe.Pointer(_pIn + 4)))-int32(1))
	_1j--
	_pIn -= 12
	goto _12

_14:
_11:
	_1569sqlite3VdbeResolveLabel(tls, _v, *(*int32)(unsafe.Pointer(_pLevel + 12)))
	if (*(*int32)(unsafe.Pointer(_pLevel + 20))) == 0 {
		goto _16
	}

	_1479sqlite3VdbeGoto(tls, _v, *(*int32)(unsafe.Pointer(_pLevel + 20)))
	_1474sqlite3VdbeJumpHere(tls, _v, *(*int32)(unsafe.Pointer(_pLevel + 20)))
	_1474sqlite3VdbeJumpHere(tls, _v, (*(*int32)(unsafe.Pointer(_pLevel + 20)))-int32(2))
_16:
	if (*(*int32)(unsafe.Pointer(_pLevel + 40))) == 0 {
		goto _17
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(59), int32((*(*uint32)(unsafe.Pointer(_pLevel + 36)))>>(uint(1)%32)), *(*int32)(unsafe.Pointer(_pLevel + 40)))
_17:
	if (*(*int32)(unsafe.Pointer(_pLevel))) == 0 {
		goto _18
	}

	_ws = int32(*(*uint32)(unsafe.Pointer(_pLoop + 40)))
	_addr = _1489sqlite3VdbeAddOp1(tls, _v, int32(48), *(*int32)(unsafe.Pointer(_pLevel)))

	if (_ws & int32(0x40)) != int32(0) {
		goto _19
	}

	_1489sqlite3VdbeAddOp1(tls, _v, int32(124), *(*int32)(unsafe.Pointer(((_pTabList + 8) + 112*uintptr(_i)) + 64)))
_19:
	if _ws&int32(0x200) == 0 && (_ws&int32(0x2000) == 0 || (*(*uintptr)(unsafe.Pointer(_pLevel + 56))) == 0) {
		goto _20
	}

	_1489sqlite3VdbeAddOp1(tls, _v, int32(124), *(*int32)(unsafe.Pointer(_pLevel + 8)))
_20:
	if int32(*(*uint8)(unsafe.Pointer(_pLevel + 45))) != int32(63) {
		goto _21
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(14), *(*int32)(unsafe.Pointer(_pLevel + 48)), *(*int32)(unsafe.Pointer(_pLevel + 28)))
	goto _22

_21:
	_1479sqlite3VdbeGoto(tls, _v, *(*int32)(unsafe.Pointer(_pLevel + 28)))
_22:
	_1474sqlite3VdbeJumpHere(tls, _v, _addr)
_18:
	_i--
	goto _1

_3:
	_1569sqlite3VdbeResolveLabel(tls, _v, *(*int32)(unsafe.Pointer(_pWInfo + 56)))

	_i = int32(0)
	_pLevel = _pWInfo + 920
_23:
	if _i >= int32(*(*uint8)(unsafe.Pointer(_pWInfo + 66))) {
		goto _25
	}

	_2pIdx = 0
	_pTabItem = (_pTabList + 8) + 112*uintptr(*(*uint8)(unsafe.Pointer(_pLevel + 44)))
	_pTab = *(*uintptr)(unsafe.Pointer(_pTabItem + 32))

	_pLoop = *(*uintptr)(unsafe.Pointer(_pLevel + 72))
	if (uint32((*(*uint8)(unsafe.Pointer((_pTabItem + 60) + 1)))>>4) << 31 >> 31) == 0 {
		goto _26
	}

	_1793translateColumnToCopy(tls, _pParse, *(*int32)(unsafe.Pointer(_pLevel + 32)), *(*int32)(unsafe.Pointer(_pLevel + 4)), *(*int32)(unsafe.Pointer(_pTabItem + 56)), int32(0))
	goto _24

_26:
	if ((*(*uint32)(unsafe.Pointer(_pLoop + 40))) & uint32(576)) == 0 {
		goto _27
	}

	_2pIdx = *(*uintptr)(unsafe.Pointer(_pLoop + 24 + 8))
	goto _28

_27:
	if ((*(*uint32)(unsafe.Pointer(_pLoop + 40))) & uint32(0x2000)) == 0 {
		goto _29
	}

	_2pIdx = *(*uintptr)(unsafe.Pointer(_pLevel + 56))
_29:
_28:
	if _2pIdx == 0 || int32(*(*uint8)(unsafe.Pointer(_pWInfo + 69))) != int32(0) && ((*(*uint32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_2pIdx + 24)) + 64)))&uint32(0x20)) == uint32(0) || (*(*uint8)(unsafe.Pointer(_db + 97))) != 0 {
		goto _30
	}

	_last = _1496sqlite3VdbeCurrentAddr(tls, _v)
	_k = *(*int32)(unsafe.Pointer(_pLevel + 32))
	_pOp = _1615sqlite3VdbeGetOp(tls, _v, _k)

_31:
	if _k >= _last {
		goto _33
	}

	if (*(*int32)(unsafe.Pointer(_pOp + 4))) == (*(*int32)(unsafe.Pointer(_pLevel + 4))) {
		goto _34
	}

	goto _32

_34:
	if int32(*(*uint8)(unsafe.Pointer(_pOp))) != int32(96) {
		goto _35
	}

	_x = *(*int32)(unsafe.Pointer(_pOp + 8))

	if ((*(*uint32)(unsafe.Pointer(_pTab + 64))) & uint32(0x20)) == uint32(0) {
		goto _37
	}

	_pPk = _1060sqlite3PrimaryKeyIndex(tls, _pTab)
	_x = int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPk + 8))) + 2*uintptr(_x))))

_37:
	_x = int32(_1521sqlite3ColumnOfIndex(tls, _2pIdx, int16(_x)))
	if _x < int32(0) {
		goto _38
	}

	*(*int32)(unsafe.Pointer(_pOp + 8)) = _x
	*(*int32)(unsafe.Pointer(_pOp + 4)) = *(*int32)(unsafe.Pointer(_pLevel + 8))
_38:
	goto _36

_35:
	if int32(*(*uint8)(unsafe.Pointer(_pOp))) != int32(123) {
		goto _39
	}

	*(*int32)(unsafe.Pointer(_pOp + 4)) = *(*int32)(unsafe.Pointer(_pLevel + 8))
	*(*uint8)(unsafe.Pointer(_pOp)) = uint8(130)
	goto _40

_39:
	if int32(*(*uint8)(unsafe.Pointer(_pOp))) != int32(23) {
		goto _41
	}

	*(*int32)(unsafe.Pointer(_pOp + 4)) = *(*int32)(unsafe.Pointer(_pLevel + 8))
_41:
_40:
_36:
_32:
	_k++
	_pOp += 24
	goto _31

_33:
_30:
_24:
	_i++
	_pLevel += 88
	goto _23

_25:
	*(*uint32)(unsafe.Pointer(_pParse + 180)) = uint32(*(*int32)(unsafe.Pointer(_pWInfo + 60)))
	_1787whereInfoFree(tls, _db, _pWInfo)
	return
}

// _1554sqlite3ExprAnalyzeAggList is defined at sqlite3.c:97017:21
func _1554sqlite3ExprAnalyzeAggList(tls crt.TLS, _pNC uintptr /* *TNameContext = SNameContext */, _pList uintptr /* *TExprList = SExprList */) {
	var (
		_pItem uintptr // *SExprList_item
		_i     int32
	)
	if _pList == 0 {
		goto _1
	}

	_pItem = _pList + 8
	_i = int32(0)
_2:
	if _i >= (*(*int32)(unsafe.Pointer(_pList))) {
		goto _4
	}

	_1556sqlite3ExprAnalyzeAggregates(tls, _pNC, *(*uintptr)(unsafe.Pointer(_pItem)))
	_i++
	_pItem += 32
	goto _2

_4:
_1:
}

// _1555havingToWhere is defined at sqlite3.c:122663:13
func _1555havingToWhere(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pGroupBy uintptr /* *TExprList = SExprList */, _pHaving uintptr /* *TExpr = SExpr */, _ppWhere uintptr /* **TExpr = SExpr */) {
	esc := crt.MustMalloc(64)
	var (
		_sCtx    = esc      // *SHavingToWhereCtx
		_sWalker = esc + 16 // *TWalker = SWalker
	)
	defer crt.Free(esc)
	*(*uintptr)(unsafe.Pointer(_sCtx)) = _ppWhere
	*(*uintptr)(unsafe.Pointer(_sCtx + 8)) = _pGroupBy
	crt.Xmemset(tls, _sWalker, int32(0), uint64(48))
	*(*uintptr)(unsafe.Pointer(_sWalker)) = _pParse
	*(*uintptr)(unsafe.Pointer(_sWalker + 8)) = fp56(_1794havingToWhereExprCb)
	*(*uintptr)(unsafe.Pointer(_sWalker + 40)) = _sCtx
	_1795sqlite3WalkExpr(tls, _sWalker, _pHaving)
}

// _1556sqlite3ExprAnalyzeAggregates is defined at sqlite3.c:97000:21
func _1556sqlite3ExprAnalyzeAggregates(tls crt.TLS, _pNC uintptr /* *TNameContext = SNameContext */, _pExpr uintptr /* *TExpr = SExpr */) {
	esc := crt.MustMalloc(48)
	var _w = esc // *TWalker = SWalker
	defer crt.Free(esc)
	*(*uintptr)(unsafe.Pointer(_w + 8)) = fp56(_1796analyzeAggregate)
	*(*uintptr)(unsafe.Pointer(_w + 16)) = fp56(_1797analyzeAggregatesInSelect)
	*(*uintptr)(unsafe.Pointer(_w + 24)) = fp96(_1798analyzeAggregatesInSelectEnd)
	*(*int32)(unsafe.Pointer(_w + 32)) = int32(0)
	*(*uintptr)(unsafe.Pointer(_w + 40)) = _pNC

	_1795sqlite3WalkExpr(tls, _w, _pExpr)
}

// _1557explainTempTable is defined at sqlite3.c:118833:13
func _1557explainTempTable(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _zUsage uintptr /* *int8 */) {
	var (
		_v    uintptr // *TVdbe = SVdbe
		_zMsg uintptr // *int8
	)
	if int32(*(*uint8)(unsafe.Pointer(_pParse + 467))) != int32(2) {
		goto _1
	}

	_v = *(*uintptr)(unsafe.Pointer(_pParse + 16))
	_zMsg = _226sqlite3MPrintf(tls, *(*uintptr)(unsafe.Pointer(_pParse)), ts+29509 /* "USE TEMP B-TREE FOR %s" */, _zUsage)
	_1475sqlite3VdbeAddOp4(tls, _v, int32(167), *(*int32)(unsafe.Pointer(_pParse + 480)), int32(0), int32(0), _zMsg, int32(-7))
_1:
}

// _1558sqlite3GetTempRange is defined at sqlite3.c:97062:20
func _1558sqlite3GetTempRange(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _nReg int32) (r int32) {
	var (
		_i int32
		_n int32
	)
	if _nReg != int32(1) {
		goto _1
	}

	return _1562sqlite3GetTempReg(tls, _pParse)

_1:
	_i = *(*int32)(unsafe.Pointer(_pParse + 44))
	_n = *(*int32)(unsafe.Pointer(_pParse + 40))
	if _nReg > _n {
		goto _2
	}

	{
		p := &(*(*int32)(unsafe.Pointer(_pParse + 44)))
		*p = int32(int32(*p) + _nReg)
	}
	{
		p := &(*(*int32)(unsafe.Pointer(_pParse + 40)))
		*p = int32(int32(*p) - _nReg)
	}
	goto _3

_2:
	_i = (*(*int32)(unsafe.Pointer(_pParse + 56))) + int32(1)
	{
		p := &(*(*int32)(unsafe.Pointer(_pParse + 56)))
		*p = int32(int32(*p) + _nReg)
	}
_3:
	return _i
}

// _1559sqlite3ExprCacheClear is defined at sqlite3.c:95177:21
func _1559sqlite3ExprCacheClear(tls crt.TLS, _pParse uintptr /* *TParse = SParse */) {
	var _i int32

	_i = int32(0)
_1:
	if _i >= int32(*(*uint8)(unsafe.Pointer(_pParse + 37))) {
		goto _3
	}

	if (*(*uint8)(unsafe.Pointer(((_pParse + 196) + 20*uintptr(_i)) + 6))) == 0 || int32(*(*uint8)(unsafe.Pointer(_pParse + 31))) >= int32(8) {
		goto _4
	}

	*(*int32)(unsafe.Pointer((_pParse + 396) + 4*uintptr(postinc163(&(*(*uint8)(unsafe.Pointer(_pParse + 31))))))) = *(*int32)(unsafe.Pointer(((_pParse + 196) + 20*uintptr(_i)) + 12))
_4:
	_i++
	goto _1

_3:
	*(*uint8)(unsafe.Pointer(_pParse + 37)) = uint8(0)
}

// _1560sqlite3ExprCodeExprList is defined at sqlite3.c:96095:20
func _1560sqlite3ExprCodeExprList(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pList uintptr /* *TExprList = SExprList */, _target int32, _srcReg int32, _flags uint8) (r int32) {
	var (
		_pItem  uintptr // *SExprList_item
		_i      int32
		_j      int32
		_n      int32
		_copyOp uint8
		_v      uintptr // *TVdbe = SVdbe
		_pExpr  uintptr // *TExpr = SExpr
		_inReg  int32
		_pOp    uintptr // *TVdbeOp = SVdbeOp
	)
	_copyOp = uint8(func() int32 {
		if int32(_flags)&int32(0x1) != 0 {
			return int32(75)
		}
		return int32(76)
	}())
	_v = *(*uintptr)(unsafe.Pointer(_pParse + 16))

	_n = *(*int32)(unsafe.Pointer(_pList))
	if *(*uint8)(unsafe.Pointer(_pParse + 35)) != 0 {
		goto _1
	}

	_flags = uint8(int32(_flags) & int32(-3))
_1:
	_pItem = _pList + 8
	_i = int32(0)
_2:
	if _i >= _n {
		goto _4
	}

	_pExpr = *(*uintptr)(unsafe.Pointer(_pItem))
	if (int32(_flags)&int32(0x4)) == int32(0) || set5(&_j, int32(*(*uint16)(unsafe.Pointer(_pItem + 28)))) <= int32(0) {
		goto _5
	}

	if (int32(_flags) & int32(0x8)) == 0 {
		goto _7
	}

	_i--
	_n--
	goto _8

_7:
	_1240sqlite3VdbeAddOp2(tls, _v, int32(_copyOp), (_j+_srcReg)-int32(1), _target+_i)
_8:
	goto _6

_5:
	if (int32(_flags)&int32(0x2)) == int32(0) || _1799sqlite3ExprIsConstant(tls, _pExpr) == 0 {
		goto _9
	}

	_1800sqlite3ExprCodeAtInit(tls, _pParse, _pExpr, _target+_i)
	goto _10

_9:
	_inReg = _1728sqlite3ExprCodeTarget(tls, _pParse, _pExpr, _target+_i)
	if _inReg == (_target + _i) {
		goto _11
	}

	if int32(_copyOp) != int32(75) || int32(*(*uint8)(unsafe.Pointer(set4(&_pOp, _1615sqlite3VdbeGetOp(tls, _v, int32(-1)))))) != int32(75) || (((*(*int32)(unsafe.Pointer(_pOp + 4)))+(*(*int32)(unsafe.Pointer(_pOp + 12))))+int32(1)) != _inReg || (((*(*int32)(unsafe.Pointer(_pOp + 8)))+(*(*int32)(unsafe.Pointer(_pOp + 12))))+int32(1)) != (_target+_i) {
		goto _12
	}

	(*(*int32)(unsafe.Pointer(_pOp + 12)))++
	goto _13

_12:
	_1240sqlite3VdbeAddOp2(tls, _v, int32(_copyOp), _inReg, _target+_i)
_13:
_11:
_10:
_6:
	_i++
	_pItem += 32
	goto _2

_4:
	return _n
}

// _1561sqlite3ExprCodeGetColumnToReg is defined at sqlite3.c:95162:21
func _1561sqlite3ExprCodeGetColumnToReg(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pTab uintptr /* *TTable = STable */, _iColumn int32, _iTable int32, _iReg int32) {
	var _r1 int32

	_r1 = _1592sqlite3ExprCodeGetColumn(tls, _pParse, _pTab, _iColumn, _iTable, _iReg, uint8(0))
	if _r1 == _iReg {
		goto _1
	}

	_1240sqlite3VdbeAddOp2(tls, *(*uintptr)(unsafe.Pointer(_pParse + 16)), int32(76), _r1, _iReg)
_1:
}

// _1562sqlite3GetTempReg is defined at sqlite3.c:97030:20
func _1562sqlite3GetTempReg(tls crt.TLS, _pParse uintptr /* *TParse = SParse */) (r int32) {
	if int32(*(*uint8)(unsafe.Pointer(_pParse + 31))) != int32(0) {
		goto _1
	}

	return preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))

_1:
	return *(*int32)(unsafe.Pointer((_pParse + 396) + 4*uintptr(preinc214(&(*(*uint8)(unsafe.Pointer(_pParse + 31)))))))
}

// _1563sqlite3ReleaseTempReg is defined at sqlite3.c:97045:21
func _1563sqlite3ReleaseTempReg(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _iReg int32) {
	var (
		_i int32
		_p uintptr // *SyColCache
	)
	if _iReg == 0 || int32(*(*uint8)(unsafe.Pointer(_pParse + 31))) >= int32(8) {
		goto _1
	}

	_i = int32(0)
	_p = _pParse + 196
_2:
	if _i >= int32(*(*uint8)(unsafe.Pointer(_pParse + 37))) {
		goto _4
	}

	if (*(*int32)(unsafe.Pointer(_p + 12))) != _iReg {
		goto _5
	}

	*(*uint8)(unsafe.Pointer(_p + 6)) = uint8(1)
	return

_5:
	_i++
	_p += 20
	goto _2

_4:
	*(*int32)(unsafe.Pointer((_pParse + 396) + 4*uintptr(postinc163(&(*(*uint8)(unsafe.Pointer(_pParse + 31))))))) = _iReg
_1:
}

// _1564sqlite3ReleaseTempRange is defined at sqlite3.c:97077:21
func _1564sqlite3ReleaseTempRange(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _iReg int32, _nReg int32) {
	if _nReg != int32(1) {
		goto _1
	}

	_1563sqlite3ReleaseTempReg(tls, _pParse, _iReg)
	return

_1:
	_1801sqlite3ExprCacheRemove(tls, _pParse, _iReg, _nReg)
	if _nReg <= (*(*int32)(unsafe.Pointer(_pParse + 40))) {
		goto _2
	}

	*(*int32)(unsafe.Pointer(_pParse + 40)) = _nReg
	*(*int32)(unsafe.Pointer(_pParse + 44)) = _iReg
_2:
}

// _1565sqlite3WhereIsSorted is defined at sqlite3.c:135598:20
func _1565sqlite3WhereIsSorted(tls crt.TLS, _pWInfo uintptr /* *TWhereInfo = SWhereInfo */) (r int32) {
	return int32(*(*uint8)(unsafe.Pointer(_pWInfo + 68)))
}

// _1566sqlite3KeyInfoRef is defined at sqlite3.c:118752:24
func _1566sqlite3KeyInfoRef(tls crt.TLS, _p uintptr /* *TKeyInfo = SKeyInfo */) (r uintptr /* *TKeyInfo = SKeyInfo */) {
	if _p == 0 {
		goto _1
	}

	(*(*uint32)(unsafe.Pointer(_p)))++
_1:
	return _p
}

// _1567sqlite3ExprCodeMove is defined at sqlite3.c:95207:21
func _1567sqlite3ExprCodeMove(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _iFrom int32, _iTo int32, _nReg int32) {
	_1241sqlite3VdbeAddOp3(tls, *(*uintptr)(unsafe.Pointer(_pParse + 16)), int32(74), _iFrom, _iTo, _nReg)
	_1801sqlite3ExprCacheRemove(tls, _pParse, _iFrom, _nReg)
}

// _1568updateAccumulator is defined at sqlite3.c:122507:13
func _1568updateAccumulator(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pAggInfo uintptr /* *TAggInfo = SAggInfo */) {
	var (
		_v           uintptr // *TVdbe = SVdbe
		_i           int32
		_regHit      int32
		_addrHitTest int32
		_pF          uintptr // *SAggInfo_func
		_pC          uintptr // *SAggInfo_col
		_nArg        int32
		_addrNext    int32
		_regAgg      int32
		_pList       uintptr // *TExprList = SExprList
		_pColl       uintptr // *TCollSeq = SCollSeq
		_pItem       uintptr // *SExprList_item
		_j           int32
	)
	_v = *(*uintptr)(unsafe.Pointer(_pParse + 16))
	_regHit = int32(0)
	_addrHitTest = int32(0)
	*(*uint8)(unsafe.Pointer(_pAggInfo)) = uint8(1)
	_i = int32(0)
	_pF = *(*uintptr)(unsafe.Pointer(_pAggInfo + 48))
_1:
	if _i >= (*(*int32)(unsafe.Pointer(_pAggInfo + 56))) {
		goto _3
	}

	_addrNext = int32(0)
	_pList = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pF))) + 32))

	if _pList == 0 {
		goto _4
	}

	_nArg = *(*int32)(unsafe.Pointer(_pList))
	_regAgg = _1558sqlite3GetTempRange(tls, _pParse, _nArg)
	_1560sqlite3ExprCodeExprList(tls, _pParse, _pList, _regAgg, int32(0), uint8(0x1))
	goto _5

_4:
	_nArg = int32(0)
	_regAgg = int32(0)
_5:
	if (*(*int32)(unsafe.Pointer(_pF + 20))) < int32(0) {
		goto _6
	}

	_addrNext = _1541sqlite3VdbeMakeLabel(tls, _v)
	_1790codeDistinct(tls, _pParse, *(*int32)(unsafe.Pointer(_pF + 20)), _addrNext, int32(1), _regAgg)
_6:
	if (int32(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pF + 8))) + 2))) & int32(0x20)) == 0 {
		goto _7
	}

	_pColl = 0

	_j = int32(0)
	_pItem = _pList + 8
_8:
	if _pColl != 0 || _j >= _nArg {
		goto _10
	}

	_pColl = _1789sqlite3ExprCollSeq(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pItem)))
	_j++
	_pItem += 32
	goto _8

_10:
	if _pColl != 0 {
		goto _11
	}

	_pColl = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pParse))) + 16))
_11:
	if _regHit != int32(0) || (*(*int32)(unsafe.Pointer(_pAggInfo + 44))) == 0 {
		goto _12
	}

	_regHit = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))
_12:
	_1475sqlite3VdbeAddOp4(tls, _v, int32(79), _regHit, int32(0), int32(0), _pColl, int32(-2))
_7:
	_1241sqlite3VdbeAddOp3(tls, _v, int32(148), int32(0), _regAgg, *(*int32)(unsafe.Pointer(_pF + 16)))
	_1802sqlite3VdbeAppendP4(tls, _v, *(*uintptr)(unsafe.Pointer(_pF + 8)), int32(-8))
	_1072sqlite3VdbeChangeP5(tls, _v, uint16(uint8(_nArg)))
	_1792sqlite3ExprCacheAffinityChange(tls, _pParse, _regAgg, _nArg)
	_1564sqlite3ReleaseTempRange(tls, _pParse, _regAgg, _nArg)
	if _addrNext == 0 {
		goto _13
	}

	_1569sqlite3VdbeResolveLabel(tls, _v, _addrNext)
	_1559sqlite3ExprCacheClear(tls, _pParse)
_13:
	_i++
	_pF += 24
	goto _1

_3:
	if _regHit == 0 {
		goto _14
	}

	_addrHitTest = _1489sqlite3VdbeAddOp1(tls, _v, int32(21), _regHit)
_14:
	_1559sqlite3ExprCacheClear(tls, _pParse)
	_i = int32(0)
	_pC = *(*uintptr)(unsafe.Pointer(_pAggInfo + 32))
_15:
	if _i >= (*(*int32)(unsafe.Pointer(_pAggInfo + 44))) {
		goto _17
	}

	_1478sqlite3ExprCode(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pC + 24)), *(*int32)(unsafe.Pointer(_pC + 20)))
	_i++
	_pC += 32
	goto _15

_17:
	*(*uint8)(unsafe.Pointer(_pAggInfo)) = uint8(0)
	_1559sqlite3ExprCacheClear(tls, _pParse)
	if _addrHitTest == 0 {
		goto _18
	}

	_1474sqlite3VdbeJumpHere(tls, _v, _addrHitTest)
_18:
}

// _1569sqlite3VdbeResolveLabel is defined at sqlite3.c:72571:21
func _1569sqlite3VdbeResolveLabel(tls crt.TLS, _v uintptr /* *TVdbe = SVdbe */, _x int32) {
	var (
		_p uintptr // *TParse = SParse
		_j int32
	)
	_p = *(*uintptr)(unsafe.Pointer(_v + 24))
	_j = int32(-1) - _x

	if (*(*uintptr)(unsafe.Pointer(_p + 88))) == 0 {
		goto _1
	}

	*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 88))) + 4*uintptr(_j))) = *(*int32)(unsafe.Pointer(_v + 184))
_1:
}

// _1570finalizeAggFunctions is defined at sqlite3.c:122491:13
func _1570finalizeAggFunctions(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pAggInfo uintptr /* *TAggInfo = SAggInfo */) {
	var (
		_v     uintptr // *TVdbe = SVdbe
		_i     int32
		_pF    uintptr // *SAggInfo_func
		_pList uintptr // *TExprList = SExprList
	)
	_v = *(*uintptr)(unsafe.Pointer(_pParse + 16))
	_i = int32(0)
	_pF = *(*uintptr)(unsafe.Pointer(_pAggInfo + 48))
_1:
	if _i >= (*(*int32)(unsafe.Pointer(_pAggInfo + 56))) {
		goto _3
	}

	_pList = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pF))) + 32))

	_1240sqlite3VdbeAddOp2(tls, _v, int32(150), *(*int32)(unsafe.Pointer(_pF + 16)), func() int32 {
		if _pList != 0 {
			return *(*int32)(unsafe.Pointer(_pList))
		}
		return int32(0)
	}())
	_1802sqlite3VdbeAppendP4(tls, _v, *(*uintptr)(unsafe.Pointer(_pF + 8)), int32(-8))
	_i++
	_pF += 24
	goto _1

_3:
}

// _1571sqlite3ExprIfFalse is defined at sqlite3.c:96353:21
func _1571sqlite3ExprIfFalse(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pExpr uintptr /* *TExpr = SExpr */, _dest int32, _jumpIfNull int32) {
	esc := crt.MustMalloc(20)
	var (
		_v          uintptr // *TVdbe = SVdbe
		_op         int32
		_regFree1   = esc      // *int32
		_regFree2   = esc + 16 // *int32
		_r1         int32
		_r2         int32
		_d2         int32
		_destIfNull int32
	)
	defer crt.Free(esc)
	_v = *(*uintptr)(unsafe.Pointer(_pParse + 16))
	_op = int32(0)
	*(*int32)(unsafe.Pointer(_regFree1)) = int32(0)
	*(*int32)(unsafe.Pointer(_regFree2)) = int32(0)

	if _v != 0 {
		goto _1
	}

	return

_1:
	if _pExpr != 0 {
		goto _2
	}

	return

_2:
	_op = ((int32(*(*uint8)(unsafe.Pointer(_pExpr))) + int32(0)) ^ int32(1)) - int32(0)

	switch int32(*(*uint8)(unsafe.Pointer(_pExpr))) {
	case int32(44):
		goto _4
	case int32(43):
		goto _5
	case int32(19):
		goto _6
	case int32(45):
		goto _7
	case int32(143):
		goto _8
	case int32(56):
		goto _9
	case int32(55):
		goto _10
	case int32(54):
		goto _11
	case int32(57):
		goto _12
	case int32(52):
		goto _13
	case int32(53):
		goto _14
	case int32(50):
		goto _15
	case int32(51):
		goto _16
	case int32(48):
		goto _17
	case int32(49):
		goto _18
	default:
		goto _19
	}
_4:
	_1571sqlite3ExprIfFalse(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pExpr + 16)), _dest, _jumpIfNull)
	_1652sqlite3ExprCachePush(tls, _pParse)
	_1571sqlite3ExprIfFalse(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pExpr + 24)), _dest, _jumpIfNull)
	_1654sqlite3ExprCachePop(tls, _pParse)
	goto _3

_5:
	_d2 = _1541sqlite3VdbeMakeLabel(tls, _v)
	_1653sqlite3ExprIfTrue(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pExpr + 16)), _d2, _jumpIfNull^int32(0x10))
	_1652sqlite3ExprCachePush(tls, _pParse)
	_1571sqlite3ExprIfFalse(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pExpr + 24)), _dest, _jumpIfNull)
	_1569sqlite3VdbeResolveLabel(tls, _v, _d2)
	_1654sqlite3ExprCachePop(tls, _pParse)
	goto _3

_6:
	_1653sqlite3ExprIfTrue(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pExpr + 16)), _dest, _jumpIfNull)
	goto _3

_7:
_8:
	_op = func() int32 {
		if int32(*(*uint8)(unsafe.Pointer(_pExpr))) == int32(45) {
			return int32(52)
		}
		return int32(53)
	}()
	_jumpIfNull = int32(0x80)
_9:
_10:
_11:
_12:
_13:
_14:
	if _1803sqlite3ExprIsVector(tls, *(*uintptr)(unsafe.Pointer(_pExpr + 16))) == 0 {
		goto _20
	}

	goto _default_expr

_20:
	_r1 = _1804sqlite3ExprCodeTemp(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pExpr + 16)), _regFree1)
	_r2 = _1804sqlite3ExprCodeTemp(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pExpr + 24)), _regFree2)
	_1805codeCompare(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pExpr + 16)), *(*uintptr)(unsafe.Pointer(_pExpr + 24)), _op, _r1, _r2, _dest, _jumpIfNull)

	goto _3

_15:
_16:
	_r1 = _1804sqlite3ExprCodeTemp(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pExpr + 16)), _regFree1)
	_1240sqlite3VdbeAddOp2(tls, _v, _op, _r1, _dest)
	goto _3

_17:
	_1806exprCodeBetween(tls, _pParse, _pExpr, _dest, fp215(_1571sqlite3ExprIfFalse), _jumpIfNull)
	goto _3

_18:
	if _jumpIfNull == 0 {
		goto _21
	}

	_1807sqlite3ExprCodeIN(tls, _pParse, _pExpr, _dest, _dest)
	goto _22

_21:
	_destIfNull = _1541sqlite3VdbeMakeLabel(tls, _v)
	_1807sqlite3ExprCodeIN(tls, _pParse, _pExpr, _dest, _destIfNull)
	_1569sqlite3VdbeResolveLabel(tls, _v, _destIfNull)
_22:
	goto _3

_19:
	goto _default_expr
_default_expr:
	if _1738exprAlwaysFalse(tls, _pExpr) == 0 {
		goto _23
	}

	_1479sqlite3VdbeGoto(tls, _v, _dest)
	goto _24

_23:
	if _1808exprAlwaysTrue(tls, _pExpr) == 0 {
		goto _25
	}

	goto _26

_25:
	_r1 = _1804sqlite3ExprCodeTemp(tls, _pParse, _pExpr, _regFree1)
	_1241sqlite3VdbeAddOp3(tls, _v, int32(22), _r1, _dest, bool2int(_jumpIfNull != int32(0)))
_26:
_24:
	goto _3

_3:
	_1563sqlite3ReleaseTempReg(tls, _pParse, *(*int32)(unsafe.Pointer(_regFree1)))
	_1563sqlite3ReleaseTempReg(tls, _pParse, *(*int32)(unsafe.Pointer(_regFree2)))
}

// _1572resetAccumulator is defined at sqlite3.c:122450:13
func _1572resetAccumulator(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pAggInfo uintptr /* *TAggInfo = SAggInfo */) {
	var (
		_v        uintptr // *TVdbe = SVdbe
		_i        int32
		_pFunc    uintptr // *SAggInfo_func
		_nReg     int32
		_pE       uintptr // *TExpr = SExpr
		_pKeyInfo uintptr // *TKeyInfo = SKeyInfo
	)
	_v = *(*uintptr)(unsafe.Pointer(_pParse + 16))
	_nReg = (*(*int32)(unsafe.Pointer(_pAggInfo + 56))) + (*(*int32)(unsafe.Pointer(_pAggInfo + 40)))
	if _nReg != int32(0) {
		goto _1
	}

	return

_1:
	_1241sqlite3VdbeAddOp3(tls, _v, int32(70), int32(0), *(*int32)(unsafe.Pointer(_pAggInfo + 16)), *(*int32)(unsafe.Pointer(_pAggInfo + 20)))
	_pFunc = *(*uintptr)(unsafe.Pointer(_pAggInfo + 48))
	_i = int32(0)
_2:
	if _i >= (*(*int32)(unsafe.Pointer(_pAggInfo + 56))) {
		goto _4
	}

	if (*(*int32)(unsafe.Pointer(_pFunc + 20))) < int32(0) {
		goto _5
	}

	_pE = *(*uintptr)(unsafe.Pointer(_pFunc))

	if (*(*uintptr)(unsafe.Pointer(_pE + 32))) != 0 && (*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pE + 32))))) == int32(1) {
		goto _6
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+29532 /* "DISTINCT aggregates must have ex..." */)
	*(*int32)(unsafe.Pointer(_pFunc + 20)) = int32(-1)
	goto _7

_6:
	_pKeyInfo = _1540keyInfoFromExprList(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pE + 32)), int32(0), int32(0))
	_1475sqlite3VdbeAddOp4(tls, _v, int32(108), *(*int32)(unsafe.Pointer(_pFunc + 20)), int32(0), int32(0), _pKeyInfo, int32(-9))
_7:
_5:
	_i++
	_pFunc += 24
	goto _2

_4:
}

// _1573isSimpleCount is defined at sqlite3.c:121659:14
func _1573isSimpleCount(tls crt.TLS, _p uintptr /* *TSelect = SSelect */, _pAggInfo uintptr /* *TAggInfo = SAggInfo */) (r uintptr /* *TTable = STable */) {
	var (
		_pTab  uintptr // *TTable = STable
		_pExpr uintptr // *TExpr = SExpr
	)

	if (*(*uintptr)(unsafe.Pointer(_p + 40))) == 0 && (*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_p))))) == int32(1) && (*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_p + 32))))) == int32(1) && (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 32))) + 8 + 40))) == 0 {
		goto _1
	}

	return null

_1:
	_pTab = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 32))) + 8 + 32))
	_pExpr = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p))) + 8))

	if *(*int32)(unsafe.Pointer(_pTab + 84)) == 0 {
		goto _2
	}

	return null

_2:
	if int32(*(*uint8)(unsafe.Pointer(_pExpr))) == int32(146) {
		goto _3
	}

	return null

_3:
	if (*(*int32)(unsafe.Pointer(_pAggInfo + 56))) != int32(0) {
		goto _4
	}

	return null

_4:
	if (int32(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pAggInfo + 48)) + 8))) + 2))) & int32(0x100)) != int32(0) {
		goto _5
	}

	return null

_5:
	if ((*(*uint32)(unsafe.Pointer(_pExpr + 4))) & uint32(0x10)) == 0 {
		goto _6
	}

	return null

_6:
	return _pTab
}

// _1574sqlite3TableLock is defined at sqlite3.c:100747:21
func _1574sqlite3TableLock(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _iDb int32, _iTab int32, _isWriteLock uint8, _zName uintptr /* *int8 */) {
	var (
		_pToplevel uintptr // *TParse = SParse
		_i         int32
		_nBytes    int32
		_p         uintptr // *TTableLock = STableLock
	)
	_pToplevel = func() uintptr {
		if (*(*uintptr)(unsafe.Pointer(_pParse + 160))) != 0 {
			return *(*uintptr)(unsafe.Pointer(_pParse + 160))
		}
		return _pParse
	}()

	if _iDb != int32(1) {
		goto _1
	}

	return

_1:
	if _1244sqlite3BtreeSharable(tls, *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pParse))) + 32))) + 32*uintptr(_iDb)) + 8))) != 0 {
		goto _2
	}

	return

_2:
	_i = int32(0)
_3:
	if _i >= (*(*int32)(unsafe.Pointer(_pToplevel + 140))) {
		goto _5
	}

	_p = (*(*uintptr)(unsafe.Pointer(_pToplevel + 144))) + 24*uintptr(_i)
	if (*(*int32)(unsafe.Pointer(_p))) != _iDb || (*(*int32)(unsafe.Pointer(_p + 4))) != _iTab {
		goto _6
	}

	*(*uint8)(unsafe.Pointer(_p + 8)) = uint8(bool2int(((*(*uint8)(unsafe.Pointer(_p + 8))) != 0) || (_isWriteLock != 0)))
	return

_6:
	_i++
	goto _3

_5:
	_nBytes = int32(uint64(24) * uint64((*(*int32)(unsafe.Pointer(_pToplevel + 140)))+int32(1)))
	*(*uintptr)(unsafe.Pointer(_pToplevel + 144)) = _939sqlite3DbReallocOrFree(tls, *(*uintptr)(unsafe.Pointer(_pToplevel)), *(*uintptr)(unsafe.Pointer(_pToplevel + 144)), uint64(_nBytes))
	if (*(*uintptr)(unsafe.Pointer(_pToplevel + 144))) == 0 {
		goto _7
	}

	_p = (*(*uintptr)(unsafe.Pointer(_pToplevel + 144))) + 24*uintptr(postinc7(&(*(*int32)(unsafe.Pointer(_pToplevel + 140)))))
	*(*int32)(unsafe.Pointer(_p)) = _iDb
	*(*int32)(unsafe.Pointer(_p + 4)) = _iTab
	*(*uint8)(unsafe.Pointer(_p + 8)) = _isWriteLock
	*(*uintptr)(unsafe.Pointer(_p + 16)) = _zName
	goto _8

_7:
	*(*int32)(unsafe.Pointer(_pToplevel + 140)) = int32(0)
	_178sqlite3OomFault(tls, *(*uintptr)(unsafe.Pointer(_pToplevel)))
_8:
}

// _1575sqlite3KeyInfoOfIndex is defined at sqlite3.c:105044:24
func _1575sqlite3KeyInfoOfIndex(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pIdx uintptr /* *TIndex = SIndex */) (r uintptr /* *TKeyInfo = SKeyInfo */) {
	var (
		_i     int32
		_nCol  int32
		_nKey  int32
		_pKey  uintptr // *TKeyInfo = SKeyInfo
		_zColl uintptr // *int8
	)
	_nCol = int32(*(*uint16)(unsafe.Pointer(_pIdx + 96)))
	_nKey = int32(*(*uint16)(unsafe.Pointer(_pIdx + 94)))
	if (*(*int32)(unsafe.Pointer(_pParse + 48))) == 0 {
		goto _1
	}

	return null

_1:
	if (uint32((*(*uint8)(unsafe.Pointer(_pIdx + 99)))>>3) << 31 >> 31) == 0 {
		goto _2
	}

	_pKey = _1765sqlite3KeyInfoAlloc(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _nKey, _nCol-_nKey)
	goto _3

_2:
	_pKey = _1765sqlite3KeyInfoAlloc(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _nCol, int32(0))
_3:
	if _pKey == 0 {
		goto _4
	}

	_i = int32(0)
_5:
	if _i >= _nCol {
		goto _7
	}

	_zColl = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 64))) + 8*uintptr(_i)))
	*(*uintptr)(unsafe.Pointer((_pKey + 32) + 8*uintptr(_i))) = func() uintptr {
		if _zColl == _224sqlite3StrBINARY {
			return null
		}
		return _1519sqlite3LocateCollSeq(tls, _pParse, _zColl)
	}()
	*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pKey + 24))) + uintptr(_i))) = *(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 56))) + uintptr(_i)))
	_i++
	goto _5

_7:
	if (*(*int32)(unsafe.Pointer(_pParse + 48))) == 0 {
		goto _8
	}

	_1259sqlite3KeyInfoUnref(tls, _pKey)
	_pKey = null
_8:
_4:
	return _pKey
}

// _1576explainSimpleCount is defined at sqlite3.c:122590:13
func _1576explainSimpleCount(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pTab uintptr /* *TTable = STable */, _pIdx uintptr /* *TIndex = SIndex */) {
	var (
		_bCover int32
		_zEqp   uintptr // *int8
	)
	if int32(*(*uint8)(unsafe.Pointer(_pParse + 467))) != int32(2) {
		goto _1
	}

	_bCover = bool2int((_pIdx != 0) && ((((*(*uint32)(unsafe.Pointer(_pTab + 64))) & uint32(0x20)) == uint32(0)) || (int32(uint32(*(*uint8)(unsafe.Pointer(_pIdx + 99)))<<30>>30) != int32(2))))
	_zEqp = _226sqlite3MPrintf(tls, *(*uintptr)(unsafe.Pointer(_pParse)), ts+29583 /* "SCAN TABLE %s%s%s" */, *(*uintptr)(unsafe.Pointer(_pTab)), func() uintptr {
		if _bCover != 0 {
			return ts + 29601 /* " USING COVERING INDEX " */
		}
		return ts + 4553 /* "" */
	}(), func() uintptr {
		if _bCover != 0 {
			return *(*uintptr)(unsafe.Pointer(_pIdx))
		}
		return ts + 4553 /* "" */
	}())
	_1475sqlite3VdbeAddOp4(tls, *(*uintptr)(unsafe.Pointer(_pParse + 16)), int32(167), *(*int32)(unsafe.Pointer(_pParse + 480)), int32(0), int32(0), _zEqp, int32(-7))
_1:
}

// _1577minMaxQuery is defined at sqlite3.c:121623:11
func _1577minMaxQuery(tls crt.TLS, _pAggInfo uintptr /* *TAggInfo = SAggInfo */, _ppMinMax uintptr /* **TExprList = SExprList */) (r uint8) {
	var (
		_eRet   int32
		_pExpr  uintptr // *TExpr = SExpr
		_pEList uintptr // *TExprList = SExprList
		_zFunc  uintptr // *int8
	)
	_eRet = int32(0x0)
	*(*uintptr)(unsafe.Pointer(_ppMinMax)) = null
	if (*(*int32)(unsafe.Pointer(_pAggInfo + 56))) != int32(1) {
		goto _1
	}

	_pExpr = *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pAggInfo + 48))))
	_pEList = *(*uintptr)(unsafe.Pointer(_pExpr + 32))

	if _pEList == 0 || (*(*int32)(unsafe.Pointer(_pEList))) != int32(1) || int32(*(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pEList + 8))))) != int32(147) {
		goto _2
	}

	_zFunc = *(*uintptr)(unsafe.Pointer(_pExpr + 8))
	if _110sqlite3StrICmp(tls, _zFunc, ts+16865 /* "min" */) != int32(0) {
		goto _3
	}

	_eRet = int32(0x1)
	*(*uintptr)(unsafe.Pointer(_ppMinMax)) = _pEList
	goto _4

_3:
	if _110sqlite3StrICmp(tls, _zFunc, ts+16869 /* "max" */) != int32(0) {
		goto _5
	}

	_eRet = int32(0x2)
	*(*uintptr)(unsafe.Pointer(_ppMinMax)) = _pEList
_5:
_4:
_2:
_1:
	return uint8(_eRet)
}

// _1578generateSortTail is defined at sqlite3.c:118899:13
func _1578generateSortTail(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _p uintptr /* *TSelect = SSelect */, _pSort uintptr /* *TSortCtx = SSortCtx */, _nColumn int32, _pDest uintptr /* *TSelectDest = SSelectDest */) {
	var (
		_v            uintptr // *TVdbe = SVdbe
		_addrBreak    int32
		_addrContinue int32
		_addr         int32
		_addrOnce     int32
		_iTab         int32
		_pOrderBy     uintptr // *TExprList = SExprList
		_eDest        int32
		_iParm        int32
		_regRow       int32
		_regRowid     int32
		_iCol         int32
		_nKey         int32
		_iSortTab     int32
		_nSortData    int32
		_i            int32
		_bSeq         int32
		_aOutEx       uintptr // *SExprList_item
		_regSortOut   int32
		_iRead        int32
	)
	_v = *(*uintptr)(unsafe.Pointer(_pParse + 16))
	_addrBreak = *(*int32)(unsafe.Pointer(_pSort + 28))
	_addrContinue = _1541sqlite3VdbeMakeLabel(tls, _v)
	_addrOnce = int32(0)
	_pOrderBy = *(*uintptr)(unsafe.Pointer(_pSort))
	_eDest = int32(*(*uint8)(unsafe.Pointer(_pDest)))
	_iParm = *(*int32)(unsafe.Pointer(_pDest + 4))
	_aOutEx = (*(*uintptr)(unsafe.Pointer(_p))) + 8

	if (*(*int32)(unsafe.Pointer(_pSort + 20))) == 0 {
		goto _1
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(14), *(*int32)(unsafe.Pointer(_pSort + 16)), *(*int32)(unsafe.Pointer(_pSort + 20)))
	_1479sqlite3VdbeGoto(tls, _v, _addrBreak)
	_1569sqlite3VdbeResolveLabel(tls, _v, *(*int32)(unsafe.Pointer(_pSort + 20)))
_1:
	_iTab = *(*int32)(unsafe.Pointer(_pSort + 12))
	if _eDest != int32(9) && _eDest != int32(13) && _eDest != int32(10) {
		goto _2
	}

	_regRowid = int32(0)
	_regRow = *(*int32)(unsafe.Pointer(_pDest + 8))
	_nSortData = _nColumn
	goto _3

_2:
	_regRowid = _1562sqlite3GetTempReg(tls, _pParse)
	_regRow = _1558sqlite3GetTempRange(tls, _pParse, _nColumn)
	_nSortData = _nColumn
_3:
	_nKey = (*(*int32)(unsafe.Pointer(_pOrderBy))) - (*(*int32)(unsafe.Pointer(_pSort + 8)))
	if (int32(*(*uint8)(unsafe.Pointer(_pSort + 32))) & int32(0x1)) == 0 {
		goto _4
	}

	_regSortOut = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))
	_iSortTab = postinc7(&(*(*int32)(unsafe.Pointer(_pParse + 52))))
	if (*(*int32)(unsafe.Pointer(_pSort + 20))) == 0 {
		goto _6
	}

	_addrOnce = _1473sqlite3VdbeAddOp0(tls, _v, int32(20))
_6:
	_1241sqlite3VdbeAddOp3(tls, _v, int32(111), _iSortTab, _regSortOut, (_nKey+int32(1))+_nSortData)
	if _addrOnce == 0 {
		goto _7
	}

	_1474sqlite3VdbeJumpHere(tls, _v, _addrOnce)
_7:
	_addr = int32(1) + _1240sqlite3VdbeAddOp2(tls, _v, int32(35), _iTab, _addrBreak)
	_1788codeOffset(tls, _v, *(*int32)(unsafe.Pointer(_p + 20)), _addrContinue)
	_1241sqlite3VdbeAddOp3(tls, _v, int32(121), _iTab, _regSortOut, _iSortTab)
	_bSeq = int32(0)
	goto _5

_4:
	_addr = int32(1) + _1240sqlite3VdbeAddOp2(tls, _v, int32(36), _iTab, _addrBreak)
	_1788codeOffset(tls, _v, *(*int32)(unsafe.Pointer(_p + 20)), _addrContinue)
	_iSortTab = _iTab
	_bSeq = int32(1)
_5:
	_i = int32(0)
	_iCol = _nKey + _bSeq
_8:
	if _i >= _nSortData {
		goto _10
	}

	if (*(*uint16)(unsafe.Pointer((_aOutEx + 32*uintptr(_i)) + 28))) == 0 {
		goto _11
	}

	_iRead = int32(*(*uint16)(unsafe.Pointer((_aOutEx + 32*uintptr(_i)) + 28))) - int32(1)
	goto _12

_11:
	_iRead = postinc7(&_iCol)
_12:
	_1241sqlite3VdbeAddOp3(tls, _v, int32(96), _iSortTab, _iRead, _regRow+_i)
	_i++
	goto _8

_10:
	switch _eDest {
	case int32(14):
		goto _14
	case int32(12):
		goto _15
	case int32(11):
		goto _16
	case int32(10):
		goto _17
	default:
		goto _18
	}
_14:
_15:
	_1240sqlite3VdbeAddOp2(tls, _v, int32(115), _iParm, _regRowid)
	_1241sqlite3VdbeAddOp3(tls, _v, int32(116), _iParm, _regRow, _regRowid)
	_1072sqlite3VdbeChangeP5(tls, _v, uint16(0x8))
	goto _13

_16:
	_1475sqlite3VdbeAddOp4(tls, _v, int32(99), _regRow, _nColumn, _regRowid, *(*uintptr)(unsafe.Pointer(_pDest + 16)), _nColumn)
	_1792sqlite3ExprCacheAffinityChange(tls, _pParse, _regRow, _nColumn)
	_1071sqlite3VdbeAddOp4Int(tls, _v, int32(127), _iParm, _regRowid, _regRow, _nColumn)
	goto _13

_17:
	goto _13

_18:
	if _eDest != int32(9) {
		goto _19
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(78), *(*int32)(unsafe.Pointer(_pDest + 8)), _nColumn)
	_1792sqlite3ExprCacheAffinityChange(tls, _pParse, *(*int32)(unsafe.Pointer(_pDest + 8)), _nColumn)
	goto _20

_19:
	_1489sqlite3VdbeAddOp1(tls, _v, int32(16), *(*int32)(unsafe.Pointer(_pDest + 4)))
_20:
	goto _13

_13:
	if _regRowid == 0 {
		goto _21
	}

	if _eDest != int32(11) {
		goto _22
	}

	_1564sqlite3ReleaseTempRange(tls, _pParse, _regRow, _nColumn)
	goto _23

_22:
	_1563sqlite3ReleaseTempReg(tls, _pParse, _regRow)
_23:
	_1563sqlite3ReleaseTempReg(tls, _pParse, _regRowid)
_21:
	_1569sqlite3VdbeResolveLabel(tls, _v, _addrContinue)
	if (int32(*(*uint8)(unsafe.Pointer(_pSort + 32))) & int32(0x1)) == 0 {
		goto _24
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(3), _iTab, _addr)
	goto _25

_24:
	_1240sqlite3VdbeAddOp2(tls, _v, int32(7), _iTab, _addr)
_25:
	if (*(*int32)(unsafe.Pointer(_pSort + 16))) == 0 {
		goto _26
	}

	_1489sqlite3VdbeAddOp1(tls, _v, int32(63), *(*int32)(unsafe.Pointer(_pSort + 16)))
_26:
	_1569sqlite3VdbeResolveLabel(tls, _v, _addrBreak)
}

// _1579sqlite3SrcListEnlarge is defined at sqlite3.c:104360:24
func _1579sqlite3SrcListEnlarge(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pSrc uintptr /* *TSrcList = SSrcList */, _nExtra int32, _iStart int32) (r uintptr /* *TSrcList = SSrcList */) {
	var (
		_i      int32
		_pNew   uintptr // *TSrcList = SSrcList
		_nAlloc int32
		_nGot   int32
	)

	if (uint32(*(*int32)(unsafe.Pointer(_pSrc))) + uint32(_nExtra)) <= (*(*uint32)(unsafe.Pointer(_pSrc + 4))) {
		goto _1
	}

	_nAlloc = ((*(*int32)(unsafe.Pointer(_pSrc))) * int32(2)) + _nExtra
	_pNew = _869sqlite3DbRealloc(tls, _db, _pSrc, uint64(uint64(120)+(uint64(_nAlloc-int32(1))*uint64(112))))
	if _pNew != 0 {
		goto _2
	}

	return _pSrc

_2:
	_pSrc = _pNew
	_nGot = int32(((uint64(_744sqlite3DbMallocSize(tls, _db, _pNew)) - uint64(120)) / uint64(112)) + uint64(1))
	*(*uint32)(unsafe.Pointer(_pSrc + 4)) = uint32(_nGot)
_1:
	_i = (*(*int32)(unsafe.Pointer(_pSrc))) - int32(1)
_3:
	if _i < _iStart {
		goto _5
	}

	*(*struct {
		XpSchema     uintptr
		XzDatabase   uintptr
		XzName       uintptr
		XzAlias      uintptr
		XpTab        uintptr
		XpSelect     uintptr
		XaddrFillSub int32
		XregReturn   int32
		XregResult   int32
		Xfg          struct {
			Xjointype uint8
			F1        uint8
		}
		XiSelectId uint8
		XiCursor   int32
		XpOn       uintptr
		XpUsing    uintptr
		XcolUsed   uint64
		Xu1        struct{ X int64 }
		XpIBIndex  uintptr
	})(unsafe.Pointer((_pSrc + 8) + 112*uintptr(_i+_nExtra))) = *(*struct {
		XpSchema     uintptr
		XzDatabase   uintptr
		XzName       uintptr
		XzAlias      uintptr
		XpTab        uintptr
		XpSelect     uintptr
		XaddrFillSub int32
		XregReturn   int32
		XregResult   int32
		Xfg          struct {
			Xjointype uint8
			F1        uint8
		}
		XiSelectId uint8
		XiCursor   int32
		XpOn       uintptr
		XpUsing    uintptr
		XcolUsed   uint64
		Xu1        struct{ X int64 }
		XpIBIndex  uintptr
	})(unsafe.Pointer((_pSrc + 8) + 112*uintptr(_i)))
	_i--
	goto _3

_5:
	{
		p := &(*(*int32)(unsafe.Pointer(_pSrc)))
		*p = int32(int32(*p) + _nExtra)
	}
	crt.Xmemset(tls, (_pSrc+8)+112*uintptr(_iStart), int32(0), uint64(112)*uint64(_nExtra))
	_i = _iStart
_6:
	if _i >= (_iStart + _nExtra) {
		goto _8
	}

	*(*int32)(unsafe.Pointer(((_pSrc + 8) + 112*uintptr(_i)) + 64)) = int32(-1)
	_i++
	goto _6

_8:
	return _pSrc
}

// _1580zKeyText [34]int8, escapes: true, sqlite3.c:117894:21
var _1580zKeyText = ds + 16795

// _1581aKeyword [7]struct{Xi uint8;XnChar uint8;Xcode uint8;}, escapes: true, sqlite3.c:117899:5
var _1581aKeyword = ds + 16829

type SAuthContext struct {
	XzAuthContext uintptr // *int8
	XpParse       uintptr // *SParse
}

// _1582sqlite3TriggersExist is defined at sqlite3.c:124570:24
func _1582sqlite3TriggersExist(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pTab uintptr /* *TTable = STable */, _op int32, _pChanges uintptr /* *TExprList = SExprList */, _pMask uintptr /* *int32 */) (r uintptr /* *TTrigger = STrigger */) {
	var (
		_mask  int32
		_pList uintptr // *TTrigger = STrigger
		_p     uintptr // *TTrigger = STrigger
	)
	_mask = int32(0)
	_pList = 0
	if ((*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pParse))) + 48))) & uint32(0x40000)) == uint32(0) {
		goto _1
	}

	_pList = _1746sqlite3TriggerList(tls, _pParse, _pTab)
_1:
	_p = _pList
_2:
	if _p == 0 {
		goto _4
	}

	if int32(*(*uint8)(unsafe.Pointer(_p + 16))) != _op || _1809checkColumnOverlap(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), _pChanges) == 0 {
		goto _5
	}

	_mask = int32(_mask | int32(*(*uint8)(unsafe.Pointer(_p + 17))))
_5:
	_p = *(*uintptr)(unsafe.Pointer(_p + 64))
	goto _2

_4:
	if _pMask == 0 {
		goto _6
	}

	*(*int32)(unsafe.Pointer(_pMask)) = _mask
_6:
	return func() uintptr {
		if _mask != 0 {
			return _pList
		}
		return null
	}()
}

// _1583sqlite3FkRequired is defined at sqlite3.c:109536:20
func _1583sqlite3FkRequired(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pTab uintptr /* *TTable = STable */, _aChange uintptr /* *int32 */, _chngRowid int32) (r int32) {
	var (
		_eRet int32
		_p    uintptr // *TFKey = SFKey
	)
	_eRet = int32(0)
	if ((*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pParse))) + 48))) & uint32(0x4000)) == 0 {
		goto _1
	}

	if _aChange != 0 {
		goto _2
	}

	_eRet = bool2int((_1618sqlite3FkReferences(tls, _pTab) != 0) || ((*(*uintptr)(unsafe.Pointer(_pTab + 32))) != 0))
	goto _3

_2:
	_p = *(*uintptr)(unsafe.Pointer(_pTab + 32))
_4:
	if _p == 0 {
		goto _6
	}

	if int32(0) != Xsqlite3_stricmp(tls, *(*uintptr)(unsafe.Pointer(_pTab)), *(*uintptr)(unsafe.Pointer(_p + 16))) {
		goto _7
	}

	return int32(2)

_7:
	if _1810fkChildIsModified(tls, _pTab, _p, _aChange, _chngRowid) == 0 {
		goto _8
	}

	_eRet = int32(1)
_8:
	_p = *(*uintptr)(unsafe.Pointer(_p + 8))
	goto _4

_6:
	_p = _1618sqlite3FkReferences(tls, _pTab)
_9:
	if _p == 0 {
		goto _11
	}

	if _1811fkParentIsModified(tls, _pTab, _p, _aChange, _chngRowid) == 0 {
		goto _12
	}

	if int32(*(*uint8)(unsafe.Pointer((_p + 45) + 1))) == int32(0) {
		goto _13
	}

	return int32(2)

_13:
	_eRet = int32(1)
_12:
	_p = *(*uintptr)(unsafe.Pointer(_p + 24))
	goto _9

_11:
_3:
_1:
	return _eRet
}

// _1584sqlite3IsReadOnly is defined at sqlite3.c:105681:20
func _1584sqlite3IsReadOnly(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pTab uintptr /* *TTable = STable */, _viewOk int32) (r int32) {
	if (*(*int32)(unsafe.Pointer(_pTab + 84)) == 0 || (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_1037sqlite3GetVTable(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _pTab) + 8))))) + 104))) != 0) && (((*(*uint32)(unsafe.Pointer(_pTab + 64)))&uint32(0x1)) == uint32(0) || ((*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pParse))) + 48)))&uint32(0x1)) != uint32(0) || int32(*(*uint8)(unsafe.Pointer(_pParse + 30))) != int32(0)) {
		goto _1
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+29624 /* "table %s may not be modified" */, *(*uintptr)(unsafe.Pointer(_pTab)))
	return int32(1)

_1:
	if _viewOk != 0 || (*(*uintptr)(unsafe.Pointer(_pTab + 24))) == 0 {
		goto _2
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+29653 /* "cannot modify %s because it is a..." */, *(*uintptr)(unsafe.Pointer(_pTab)))
	return int32(1)

_2:
	return int32(0)
}

// _1585sqlite3AuthContextPush is defined at sqlite3.c:100673:21
func _1585sqlite3AuthContextPush(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pContext uintptr /* *TAuthContext = SAuthContext */, _zContext uintptr /* *int8 */) {
	*(*uintptr)(unsafe.Pointer(_pContext + 8)) = _pParse
	*(*uintptr)(unsafe.Pointer(_pContext)) = *(*uintptr)(unsafe.Pointer(_pParse + 528))
	*(*uintptr)(unsafe.Pointer(_pParse + 528)) = _zContext
}

// _1586sqlite3VdbeCountChanges is defined at sqlite3.c:76703:21
func _1586sqlite3VdbeCountChanges(tls crt.TLS, _v uintptr /* *TVdbe = SVdbe */) {
	set216b(&(*(*uint16)(unsafe.Pointer(_v + 194))), uint32(1))
}

// _1587sqlite3MaterializeView is defined at sqlite3.c:105718:21
func _1587sqlite3MaterializeView(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pView uintptr /* *TTable = STable */, _pWhere uintptr /* *TExpr = SExpr */, _iCur int32) {
	esc := crt.MustMalloc(32)
	var (
		_dest  = esc   // *TSelectDest = SSelectDest
		_pSel  uintptr // *TSelect = SSelect
		_pFrom uintptr // *TSrcList = SSrcList
		_db    uintptr // *Tsqlite3 = Ssqlite3
		_iDb   int32
	)
	defer crt.Free(esc)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_iDb = _1069sqlite3SchemaToIndex(tls, _db, *(*uintptr)(unsafe.Pointer(_pView + 112)))
	_pWhere = _1507sqlite3ExprDup(tls, _db, _pWhere, int32(0))
	_pFrom = _1340sqlite3SrcListAppend(tls, _db, null, null, null)
	if _pFrom == 0 {
		goto _1
	}

	*(*uintptr)(unsafe.Pointer(_pFrom + 8 + 16)) = _183sqlite3DbStrDup(tls, _db, *(*uintptr)(unsafe.Pointer(_pView)))
	*(*uintptr)(unsafe.Pointer(_pFrom + 8 + 8)) = _183sqlite3DbStrDup(tls, _db, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb))))

_1:
	_pSel = _1330sqlite3SelectNew(tls, _pParse, null, _pFrom, _pWhere, null, null, null, uint32(0x20000), null, null)
	_1497sqlite3SelectDestInit(tls, _dest, int32(12), _iCur)
	_1327sqlite3Select(tls, _pParse, _pSel, _dest)
	_1094sqlite3SelectDelete(tls, _db, _pSel)
}

// _1588sqlite3ResolveExprNames is defined at sqlite3.c:91687:20
func _1588sqlite3ResolveExprNames(tls crt.TLS, _pNC uintptr /* *TNameContext = SNameContext */, _pExpr uintptr /* *TExpr = SExpr */) (r int32) {
	esc := crt.MustMalloc(48)
	var (
		_savedHasAgg uint16
		_w           = esc // *TWalker = SWalker
	)
	defer crt.Free(esc)
	if _pExpr != 0 {
		goto _1
	}

	return int32(0)

_1:
	_savedHasAgg = uint16(int32(*(*uint16)(unsafe.Pointer(_pNC + 48))) & int32(4112))
	{
		p := &(*(*uint16)(unsafe.Pointer(_pNC + 48)))
		*p = uint16(int32(*p) & int32(-4113))
	}
	*(*uintptr)(unsafe.Pointer(_w)) = *(*uintptr)(unsafe.Pointer(_pNC))
	*(*uintptr)(unsafe.Pointer(_w + 8)) = fp56(_1812resolveExprStep)
	*(*uintptr)(unsafe.Pointer(_w + 16)) = fp56(_1813resolveSelectStep)
	*(*uintptr)(unsafe.Pointer(_w + 24)) = null
	*(*uintptr)(unsafe.Pointer(_w + 40)) = _pNC
	{
		p := &(*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_w))) + 476)))
		*p = int32(int32(*p) + (*(*int32)(unsafe.Pointer(_pExpr + 40))))
	}
	if _1509sqlite3ExprCheckHeight(tls, *(*uintptr)(unsafe.Pointer(_w)), *(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_w))) + 476))) == 0 {
		goto _2
	}

	return int32(1)

_2:
	_1795sqlite3WalkExpr(tls, _w, _pExpr)
	{
		p := &(*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_w))) + 476)))
		*p = int32(int32(*p) - (*(*int32)(unsafe.Pointer(_pExpr + 40))))
	}
	if (int32(*(*uint16)(unsafe.Pointer(_pNC + 48))) & int32(0x10)) == 0 {
		goto _3
	}

	{
		p := &(*(*uint32)(unsafe.Pointer(_pExpr + 4)))
		*p = uint32(uint32(*p) | uint32(0x2))
	}
_3:
	{
		p := &(*(*uint16)(unsafe.Pointer(_pNC + 48)))
		*p = uint16(int32(*p) | int32(_savedHasAgg))
	}
	return bool2int(((*(*int32)(unsafe.Pointer(_pNC + 44))) > int32(0)) || ((*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_w))) + 48))) > int32(0)))
}

// _1589sqlite3VdbeSetP4KeyInfo is defined at sqlite3.c:73239:21
func _1589sqlite3VdbeSetP4KeyInfo(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pIdx uintptr /* *TIndex = SIndex */) {
	var (
		_v        uintptr // *TVdbe = SVdbe
		_pKeyInfo uintptr // *TKeyInfo = SKeyInfo
	)
	_v = *(*uintptr)(unsafe.Pointer(_pParse + 16))

	_pKeyInfo = _1575sqlite3KeyInfoOfIndex(tls, _pParse, _pIdx)
	if _pKeyInfo == 0 {
		goto _1
	}

	_1802sqlite3VdbeAppendP4(tls, _v, _pKeyInfo, int32(-9))
_1:
}

// _1590sqlite3WhereOkOnePass is defined at sqlite3.c:131908:20
func _1590sqlite3WhereOkOnePass(tls crt.TLS, _pWInfo uintptr /* *TWhereInfo = SWhereInfo */, _aiCur uintptr /* *int32 */) (r int32) {
	crt.Xmemcpy(tls, _aiCur, _pWInfo+44, uint64(8))
	return int32(*(*uint8)(unsafe.Pointer(_pWInfo + 69)))
}

// _1591sqlite3ExprCodeGetColumnOfTable is defined at sqlite3.c:95096:21
func _1591sqlite3ExprCodeGetColumnOfTable(tls crt.TLS, _v uintptr /* *TVdbe = SVdbe */, _pTab uintptr /* *TTable = STable */, _iTabCur int32, _iCol int32, _regOut int32) {
	var (
		_op int32
		_x  int32
	)
	if _pTab != 0 {
		goto _1
	}

	_1241sqlite3VdbeAddOp3(tls, _v, int32(96), _iTabCur, _iCol, _regOut)
	return

_1:
	if _iCol >= int32(0) && _iCol != int32(*(*int16)(unsafe.Pointer(_pTab + 68))) {
		goto _2
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(123), _iTabCur, _regOut)
	goto _3

_2:
	_op = func() int32 {
		if *(*int32)(unsafe.Pointer(_pTab + 84)) != 0 {
			return int32(157)
		}
		return int32(96)
	}()
	_x = _iCol
	if ((*(*uint32)(unsafe.Pointer(_pTab + 64)))&uint32(0x20)) == uint32(0) || *(*int32)(unsafe.Pointer(_pTab + 84)) != 0 {
		goto _4
	}

	_x = int32(_1521sqlite3ColumnOfIndex(tls, _1060sqlite3PrimaryKeyIndex(tls, _pTab), int16(_iCol)))
_4:
	_1241sqlite3VdbeAddOp3(tls, _v, _op, _iTabCur, _x, _regOut)
_3:
	if _iCol < int32(0) {
		goto _5
	}

	_1814sqlite3ColumnDefault(tls, _v, _pTab, _iCol, _regOut)
_5:
}

// _1592sqlite3ExprCodeGetColumn is defined at sqlite3.c:95134:20
func _1592sqlite3ExprCodeGetColumn(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pTab uintptr /* *TTable = STable */, _iColumn int32, _iTable int32, _iReg int32, _p5 uint8) (r int32) {
	var (
		_v uintptr // *TVdbe = SVdbe
		_i int32
		_p uintptr // *SyColCache
	)
	_v = *(*uintptr)(unsafe.Pointer(_pParse + 16))
	_i = int32(0)
	_p = _pParse + 196
_1:
	if _i >= int32(*(*uint8)(unsafe.Pointer(_pParse + 37))) {
		goto _3
	}

	if (*(*int32)(unsafe.Pointer(_p))) != _iTable || int32(*(*int16)(unsafe.Pointer(_p + 4))) != _iColumn {
		goto _4
	}

	*(*int32)(unsafe.Pointer(_p + 16)) = postinc7(&(*(*int32)(unsafe.Pointer(_pParse + 76))))
	_1815sqlite3ExprCachePinRegister(tls, _pParse, *(*int32)(unsafe.Pointer(_p + 12)))
	return *(*int32)(unsafe.Pointer(_p + 12))

_4:
	_i++
	_p += 20
	goto _1

_3:
	_1591sqlite3ExprCodeGetColumnOfTable(tls, _v, _pTab, _iTable, _iColumn, _iReg)
	if _p5 == 0 {
		goto _5
	}

	_1072sqlite3VdbeChangeP5(tls, _v, uint16(_p5))
	goto _6

_5:
	_1816sqlite3ExprCacheStore(tls, _pParse, _iTable, _iColumn, _iReg)
_6:
	return _iReg
}

// _1593sqlite3IndexAffinityStr is defined at sqlite3.c:109929:27
func _1593sqlite3IndexAffinityStr(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pIdx uintptr /* *TIndex = SIndex */) (r uintptr /* *int8 */) {
	var (
		_n    int32
		_pTab uintptr // *TTable = STable
		_x    int16
		_aff  int8
	)
	if (*(*uintptr)(unsafe.Pointer(_pIdx + 32))) != 0 {
		goto _1
	}

	_pTab = *(*uintptr)(unsafe.Pointer(_pIdx + 24))
	*(*uintptr)(unsafe.Pointer(_pIdx + 32)) = _177sqlite3DbMallocRaw(tls, null, uint64(int32(*(*uint16)(unsafe.Pointer(_pIdx + 96)))+int32(1)))
	if (*(*uintptr)(unsafe.Pointer(_pIdx + 32))) != 0 {
		goto _2
	}

	_178sqlite3OomFault(tls, _db)
	return null

_2:
	_n = int32(0)
_3:
	if _n >= int32(*(*uint16)(unsafe.Pointer(_pIdx + 96))) {
		goto _5
	}

	_x = *(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 8))) + 2*uintptr(_n)))
	if int32(_x) < int32(0) {
		goto _6
	}

	*(*int8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 32))) + uintptr(_n))) = *(*int8)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pTab + 8))) + 32*uintptr(_x)) + 25))
	goto _7

_6:
	if int32(_x) != int32(-1) {
		goto _8
	}

	*(*int8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 32))) + uintptr(_n))) = int8('D')
	goto _9

_8:
	_aff = _1817sqlite3ExprAffinity(tls, *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pIdx + 80))) + 8) + 32*uintptr(_n))))
	if int32(_aff) != int32(0) {
		goto _10
	}

	_aff = int8('A')
_10:
	*(*int8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 32))) + uintptr(_n))) = _aff
_9:
_7:
	_n++
	goto _3

_5:
	*(*int8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 32))) + uintptr(_n))) = int8(0)
_1:
	return *(*uintptr)(unsafe.Pointer(_pIdx + 32))
}

// _1594sqlite3OpenTableAndIndices is defined at sqlite3.c:111662:20
func _1594sqlite3OpenTableAndIndices(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pTab uintptr /* *TTable = STable */, _op int32, _p5 uint8, _iBase int32, _aToOpen uintptr /* *Tu8 = uint8 */, _piDataCur uintptr /* *int32 */, _piIdxCur uintptr /* *int32 */) (r int32) {
	var (
		_i        int32
		_iDb      int32
		_iDataCur int32
		_pIdx     uintptr // *TIndex = SIndex
		_v        uintptr // *TVdbe = SVdbe
		_iIdxCur  int32
	)

	if *(*int32)(unsafe.Pointer(_pTab + 84)) == 0 {
		goto _1
	}

	return int32(0)

_1:
	_iDb = _1069sqlite3SchemaToIndex(tls, *(*uintptr)(unsafe.Pointer(_pParse)), *(*uintptr)(unsafe.Pointer(_pTab + 112)))
	_v = _1472sqlite3GetVdbe(tls, _pParse)

	if _iBase >= int32(0) {
		goto _2
	}

	_iBase = *(*int32)(unsafe.Pointer(_pParse + 52))
_2:
	_iDataCur = postinc7(&_iBase)
	if _piDataCur == 0 {
		goto _3
	}

	*(*int32)(unsafe.Pointer(_piDataCur)) = _iDataCur
_3:
	if ((*(*uint32)(unsafe.Pointer(_pTab + 64)))&uint32(0x20)) != uint32(0) || _aToOpen != 0 && (*(*uint8)(unsafe.Pointer(_aToOpen))) == 0 {
		goto _4
	}

	_1647sqlite3OpenTable(tls, _pParse, _iDataCur, _iDb, _pTab, _op)
	goto _5

_4:
	_1574sqlite3TableLock(tls, _pParse, _iDb, *(*int32)(unsafe.Pointer(_pTab + 56)), uint8(bool2int(_op == int32(105))), *(*uintptr)(unsafe.Pointer(_pTab)))
_5:
	if _piIdxCur == 0 {
		goto _6
	}

	*(*int32)(unsafe.Pointer(_piIdxCur)) = _iBase
_6:
	_i = int32(0)
	_pIdx = *(*uintptr)(unsafe.Pointer(_pTab + 16))
_7:
	if _pIdx == 0 {
		goto _9
	}

	_iIdxCur = postinc7(&_iBase)

	if int32(uint32(*(*uint8)(unsafe.Pointer(_pIdx + 99)))<<30>>30) != int32(2) || ((*(*uint32)(unsafe.Pointer(_pTab + 64)))&uint32(0x20)) == uint32(0) {
		goto _10
	}

	if _piDataCur == 0 {
		goto _11
	}

	*(*int32)(unsafe.Pointer(_piDataCur)) = _iIdxCur
_11:
	_p5 = uint8(0)
_10:
	if _aToOpen != 0 && (*(*uint8)(unsafe.Pointer(_aToOpen + uintptr(_i+int32(1))))) == 0 {
		goto _12
	}

	_1241sqlite3VdbeAddOp3(tls, _v, _op, _iIdxCur, *(*int32)(unsafe.Pointer(_pIdx + 88)), _iDb)
	_1589sqlite3VdbeSetP4KeyInfo(tls, _pParse, _pIdx)
	_1072sqlite3VdbeChangeP5(tls, _v, uint16(_p5))
_12:
	_pIdx = *(*uintptr)(unsafe.Pointer(_pIdx + 40))
	_i++
	goto _7

_9:
	if _iBase <= (*(*int32)(unsafe.Pointer(_pParse + 52))) {
		goto _13
	}

	*(*int32)(unsafe.Pointer(_pParse + 52)) = _iBase
_13:
	return _i
}

// _1595sqlite3VtabMakeWritable is defined at sqlite3.c:127417:21
func _1595sqlite3VtabMakeWritable(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pTab uintptr /* *TTable = STable */) {
	var (
		_pToplevel  uintptr // *TParse = SParse
		_i          int32
		_n          int32
		_apVtabLock uintptr // **TTable = STable
	)
	_pToplevel = func() uintptr {
		if (*(*uintptr)(unsafe.Pointer(_pParse + 160))) != 0 {
			return *(*uintptr)(unsafe.Pointer(_pParse + 160))
		}
		return _pParse
	}()

	_i = int32(0)
_1:
	if _i >= (*(*int32)(unsafe.Pointer(_pToplevel + 472))) {
		goto _3
	}

	if _pTab != (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pToplevel + 552))) + 8*uintptr(_i)))) {
		goto _4
	}

	return

_4:
	_i++
	goto _1

_3:
	_n = int32(uint64((*(*int32)(unsafe.Pointer(_pToplevel + 472)))+int32(1)) * uint64(8))
	_apVtabLock = Xsqlite3_realloc64(tls, *(*uintptr)(unsafe.Pointer(_pToplevel + 552)), uint64(_n))
	if _apVtabLock == 0 {
		goto _5
	}

	*(*uintptr)(unsafe.Pointer(_pToplevel + 552)) = _apVtabLock
	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pToplevel + 552))) + 8*uintptr(postinc7(&(*(*int32)(unsafe.Pointer(_pToplevel + 472))))))) = _pTab
	goto _6

_5:
	_178sqlite3OomFault(tls, *(*uintptr)(unsafe.Pointer(_pToplevel)))
_6:
}

// _1596sqlite3GenerateRowDelete is defined at sqlite3.c:106255:21
func _1596sqlite3GenerateRowDelete(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pTab uintptr /* *TTable = STable */, _pTrigger uintptr /* *TTrigger = STrigger */, _iDataCur int32, _iIdxCur int32, _iPk int32, _nPk int16, _count uint8, _onconf uint8, _eMode uint8, _iIdxNoSeek int32) {
	var (
		_v         uintptr // *TVdbe = SVdbe
		_iOld      int32
		_iLabel    int32
		_opSeek    uint8
		_mask      uint32
		_iCol      int32
		_addrStart int32
		_p5        uint8
	)
	_v = *(*uintptr)(unsafe.Pointer(_pParse + 16))
	_iOld = int32(0)

	_iLabel = _1541sqlite3VdbeMakeLabel(tls, _v)
	_opSeek = uint8(func() int32 {
		if ((*(*uint32)(unsafe.Pointer(_pTab + 64))) & uint32(0x20)) == uint32(0) {
			return int32(32)
		}
		return int32(29)
	}())
	if int32(_eMode) != int32(0) {
		goto _1
	}

	_1071sqlite3VdbeAddOp4Int(tls, _v, int32(_opSeek), _iDataCur, _iLabel, _iPk, int32(_nPk))
_1:
	if _1583sqlite3FkRequired(tls, _pParse, _pTab, null, int32(0)) == 0 && _pTrigger == 0 {
		goto _2
	}

	_mask = _1601sqlite3TriggerColmask(tls, _pParse, _pTrigger, null, int32(0), int32(3), _pTab, int32(_onconf))
	_mask = uint32(_mask | _1600sqlite3FkOldmask(tls, _pParse, _pTab))
	_iOld = (*(*int32)(unsafe.Pointer(_pParse + 56))) + int32(1)
	{
		p := &(*(*int32)(unsafe.Pointer(_pParse + 56)))
		*p = int32(int32(*p) + (int32(1) + int32(*(*int16)(unsafe.Pointer(_pTab + 70)))))
	}
	_1240sqlite3VdbeAddOp2(tls, _v, int32(75), _iPk, _iOld)
	_iCol = int32(0)
_3:
	if _iCol >= int32(*(*int16)(unsafe.Pointer(_pTab + 70))) {
		goto _5
	}

	if _mask != uint32(0xffffffff) && (_iCol > int32(31) || (_mask&(uint32(1)<<(uint(_iCol)%32))) == uint32(0)) {
		goto _6
	}

	_1591sqlite3ExprCodeGetColumnOfTable(tls, _v, _pTab, _iDataCur, _iCol, (_iOld+_iCol)+int32(1))
_6:
	_iCol++
	goto _3

_5:
	_addrStart = _1496sqlite3VdbeCurrentAddr(tls, _v)
	_1602sqlite3CodeRowTrigger(tls, _pParse, _pTrigger, int32(109), null, int32(1), _pTab, _iOld, int32(_onconf), _iLabel)
	if _addrStart >= _1496sqlite3VdbeCurrentAddr(tls, _v) {
		goto _7
	}

	_1071sqlite3VdbeAddOp4Int(tls, _v, int32(_opSeek), _iDataCur, _iLabel, _iPk, int32(_nPk))
	_iIdxNoSeek = int32(-1)
_7:
	_1604sqlite3FkCheck(tls, _pParse, _pTab, _iOld, int32(0), null, int32(0))
_2:
	if (*(*uintptr)(unsafe.Pointer(_pTab + 24))) != 0 {
		goto _8
	}

	_p5 = uint8(0)
	_1605sqlite3GenerateRowIndexDelete(tls, _pParse, _pTab, _iDataCur, _iIdxCur, null, _iIdxNoSeek)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(118), _iDataCur, func() int32 {
		if _count != 0 {
			return int32(0x1)
		}
		return int32(0)
	}())
	if int32(*(*uint8)(unsafe.Pointer(_pParse + 30))) != int32(0) {
		goto _9
	}

	_1802sqlite3VdbeAppendP4(tls, _v, _pTab, int32(-6))
_9:
	if int32(_eMode) == int32(0) {
		goto _10
	}

	_1072sqlite3VdbeChangeP5(tls, _v, uint16(0x4))
_10:
	if _iIdxNoSeek < int32(0) || _iIdxNoSeek == _iDataCur {
		goto _11
	}

	_1489sqlite3VdbeAddOp1(tls, _v, int32(118), _iIdxNoSeek)
_11:
	if int32(_eMode) != int32(2) {
		goto _12
	}

	_p5 = uint8(int32(_p5) | int32(0x2))
_12:
	_1072sqlite3VdbeChangeP5(tls, _v, uint16(_p5))
_8:
	_1607sqlite3FkActions(tls, _pParse, _pTab, null, _iOld, null, int32(0))
	_1602sqlite3CodeRowTrigger(tls, _pParse, _pTrigger, int32(109), null, int32(2), _pTab, _iOld, int32(_onconf), _iLabel)
	_1569sqlite3VdbeResolveLabel(tls, _v, _iLabel)
}

// _1597sqlite3AutoincrementEnd is defined at sqlite3.c:110216:21
func _1597sqlite3AutoincrementEnd(tls crt.TLS, _pParse uintptr /* *TParse = SParse */) {
	if (*(*uintptr)(unsafe.Pointer(_pParse + 152))) == 0 {
		goto _1
	}

	_1818autoIncrementEnd(tls, _pParse)
_1:
}

// _1598sqlite3AuthContextPop is defined at sqlite3.c:100688:21
func _1598sqlite3AuthContextPop(tls crt.TLS, _pContext uintptr /* *TAuthContext = SAuthContext */) {
	if (*(*uintptr)(unsafe.Pointer(_pContext + 8))) == 0 {
		goto _1
	}

	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pContext + 8))) + 528)) = *(*uintptr)(unsafe.Pointer(_pContext))
	*(*uintptr)(unsafe.Pointer(_pContext + 8)) = null
_1:
}

// _1599updateVirtualTable is defined at sqlite3.c:125822:13
func _1599updateVirtualTable(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pSrc uintptr /* *TSrcList = SSrcList */, _pTab uintptr /* *TTable = STable */, _pChanges uintptr /* *TExprList = SExprList */, _pRowid uintptr /* *TExpr = SExpr */, _aXRef uintptr /* *int32 */, _pWhere uintptr /* *TExpr = SExpr */, _onError int32) {
	esc := crt.MustMalloc(8)
	var (
		_v        uintptr // *TVdbe = SVdbe
		_ephemTab int32
		_i        int32
		_db       uintptr // *Tsqlite3 = Ssqlite3
		_pVTab    uintptr // *int8
		_pWInfo   uintptr // *TWhereInfo = SWhereInfo
		_nArg     int32
		_regArg   int32
		_regRec   int32
		_regRowid int32
		_iCsr     int32
		_aDummy   = esc // *[2]int32
		_bOnePass int32
		_addr     int32
		_pPk      uintptr // *TIndex = SIndex
		_iPk      int16
	)
	defer crt.Free(esc)
	_v = *(*uintptr)(unsafe.Pointer(_pParse + 16))
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_pVTab = _1037sqlite3GetVTable(tls, _db, _pTab)
	_nArg = int32(2) + int32(*(*int16)(unsafe.Pointer(_pTab + 70)))
	_iCsr = *(*int32)(unsafe.Pointer(_pSrc + 8 + 64))

	_ephemTab = postinc7(&(*(*int32)(unsafe.Pointer(_pParse + 52))))
	_addr = _1240sqlite3VdbeAddOp2(tls, _v, int32(108), _ephemTab, _nArg)
	_regArg = (*(*int32)(unsafe.Pointer(_pParse + 56))) + int32(1)
	{
		p := &(*(*int32)(unsafe.Pointer(_pParse + 56)))
		*p = int32(int32(*p) + _nArg)
	}
	_regRec = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))
	_regRowid = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))
	_pWInfo = _1544sqlite3WhereBegin(tls, _pParse, _pSrc, _pWhere, null, null, uint16(0x4), int32(0))
	if _pWInfo != 0 {
		goto _1
	}

	return

_1:
	_i = int32(0)
_2:
	if _i >= int32(*(*int16)(unsafe.Pointer(_pTab + 70))) {
		goto _4
	}

	if (*(*int32)(unsafe.Pointer(_aXRef + 4*uintptr(_i)))) < int32(0) {
		goto _5
	}

	_1478sqlite3ExprCode(tls, _pParse, *(*uintptr)(unsafe.Pointer((_pChanges + 8) + 32*uintptr(*(*int32)(unsafe.Pointer(_aXRef + 4*uintptr(_i)))))), (_regArg+int32(2))+_i)
	goto _6

_5:
	_1241sqlite3VdbeAddOp3(tls, _v, int32(157), _iCsr, _i, (_regArg+int32(2))+_i)
_6:
	_i++
	goto _2

_4:
	if ((*(*uint32)(unsafe.Pointer(_pTab + 64))) & uint32(0x20)) != uint32(0) {
		goto _7
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(123), _iCsr, _regArg)
	if _pRowid == 0 {
		goto _9
	}

	_1478sqlite3ExprCode(tls, _pParse, _pRowid, _regArg+int32(1))
	goto _10

_9:
	_1240sqlite3VdbeAddOp2(tls, _v, int32(123), _iCsr, _regArg+int32(1))
_10:
	goto _8

_7:
	_pPk = _1060sqlite3PrimaryKeyIndex(tls, _pTab)

	_iPk = *(*int16)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pPk + 8))))
	_1241sqlite3VdbeAddOp3(tls, _v, int32(157), _iCsr, int32(_iPk), _regArg)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(76), (_regArg+int32(2))+int32(_iPk), _regArg+int32(1))
_8:
	_bOnePass = _1590sqlite3WhereOkOnePass(tls, _pWInfo, _aDummy)
	if _bOnePass == 0 {
		goto _11
	}

	_1549sqlite3VdbeChangeToNoop(tls, _v, _addr)
	if (*(*uintptr)(unsafe.Pointer(_pParse + 160))) != 0 {
		goto _13
	}

	*(*uint8)(unsafe.Pointer(_pParse + 32)) = uint8(0)
_13:
	goto _12

_11:
	_1241sqlite3VdbeAddOp3(tls, _v, int32(99), _regArg, _nArg, _regRec)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(115), _ephemTab, _regRowid)
	_1241sqlite3VdbeAddOp3(tls, _v, int32(116), _ephemTab, _regRec, _regRowid)
_12:
	if _bOnePass != int32(0) {
		goto _14
	}

	_1553sqlite3WhereEnd(tls, _pWInfo)
	_addr = _1489sqlite3VdbeAddOp1(tls, _v, int32(37), _ephemTab)
	_i = int32(0)
_15:
	if _i >= _nArg {
		goto _17
	}

	_1241sqlite3VdbeAddOp3(tls, _v, int32(96), _ephemTab, _i, _regArg+_i)
	_i++
	goto _15

_17:
_14:
	_1595sqlite3VtabMakeWritable(tls, _pParse, _pTab)
	_1475sqlite3VdbeAddOp4(tls, _v, int32(12), int32(0), _nArg, _regArg, _pVTab, int32(-12))
	_1072sqlite3VdbeChangeP5(tls, _v, uint16(func() int32 {
		if _onError == int32(10) {
			return int32(2)
		}
		return _onError
	}()))
	_1495sqlite3MayAbort(tls, _pParse)
	if _bOnePass != int32(0) {
		goto _18
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(7), _ephemTab, _addr+int32(1))
	_1474sqlite3VdbeJumpHere(tls, _v, _addr)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(112), _ephemTab, int32(0))
	goto _19

_18:
	_1553sqlite3WhereEnd(tls, _pWInfo)
_19:
}

// _1600sqlite3FkOldmask is defined at sqlite3.c:109488:20
func _1600sqlite3FkOldmask(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pTab uintptr /* *TTable = STable */) (r uint32) {
	esc := crt.MustMalloc(8)
	var (
		_mask uint32
		_p    uintptr // *TFKey = SFKey
		_i    int32
		_pIdx = esc // **TIndex = SIndex
	)
	defer crt.Free(esc)
	_mask = uint32(0)
	if ((*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pParse))) + 48))) & uint32(0x4000)) == 0 {
		goto _1
	}

	_p = *(*uintptr)(unsafe.Pointer(_pTab + 32))
_2:
	if _p == 0 {
		goto _4
	}

	_i = int32(0)
_5:
	if _i >= (*(*int32)(unsafe.Pointer(_p + 40))) {
		goto _7
	}

	_mask = uint32(_mask | func() uint32 {
		if (*(*int32)(unsafe.Pointer((_p + 64) + 16*uintptr(_i)))) > int32(31) {
			return uint32(0xffffffff)
		}
		return uint32(1) << (uint(*(*int32)(unsafe.Pointer((_p + 64) + 16*uintptr(_i)))) % 32)
	}())
	_i++
	goto _5

_7:
	_p = *(*uintptr)(unsafe.Pointer(_p + 8))
	goto _2

_4:
	_p = _1618sqlite3FkReferences(tls, _pTab)
_8:
	if _p == 0 {
		goto _10
	}

	*(*uintptr)(unsafe.Pointer(_pIdx)) = 0
	_1649sqlite3FkLocateIndex(tls, _pParse, _pTab, _p, _pIdx, null)
	if (*(*uintptr)(unsafe.Pointer(_pIdx))) == 0 {
		goto _11
	}

	_i = int32(0)
_12:
	if _i >= int32(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx))) + 94))) {
		goto _14
	}

	_mask = uint32(_mask | func() uint32 {
		if int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx))) + 8))) + 2*uintptr(_i)))) > int32(31) {
			return uint32(0xffffffff)
		}
		return uint32(1) << (uint(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx))) + 8))) + 2*uintptr(_i)))) % 32)
	}())
	_i++
	goto _12

_14:
_11:
	_p = *(*uintptr)(unsafe.Pointer(_p + 24))
	goto _8

_10:
_1:
	return _mask
}

// _1601sqlite3TriggerColmask is defined at sqlite3.c:125025:20
func _1601sqlite3TriggerColmask(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pTrigger uintptr /* *TTrigger = STrigger */, _pChanges uintptr /* *TExprList = SExprList */, _isNew int32, _tr_tm int32, _pTab uintptr /* *TTable = STable */, _orconf int32) (r uint32) {
	var (
		_op   int32
		_mask uint32
		_p    uintptr // *TTrigger = STrigger
		_pPrg uintptr // *TTriggerPrg = STriggerPrg
	)
	_op = func() int32 {
		if _pChanges != 0 {
			return int32(110)
		}
		return int32(109)
	}()
	_mask = uint32(0)

	_p = _pTrigger
_1:
	if _p == 0 {
		goto _3
	}

	if int32(*(*uint8)(unsafe.Pointer(_p + 16))) != _op || _tr_tm&int32(*(*uint8)(unsafe.Pointer(_p + 17))) == 0 || _1809checkColumnOverlap(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), _pChanges) == 0 {
		goto _4
	}

	_pPrg = _1819getRowTrigger(tls, _pParse, _p, _pTab, _orconf)
	if _pPrg == 0 {
		goto _5
	}

	_mask = uint32(_mask | (*(*uint32)(unsafe.Pointer((_pPrg + 28) + 4*uintptr(_isNew)))))
_5:
_4:
	_p = *(*uintptr)(unsafe.Pointer(_p + 64))
	goto _1

_3:
	return _mask
}

// _1602sqlite3CodeRowTrigger is defined at sqlite3.c:124963:21
func _1602sqlite3CodeRowTrigger(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pTrigger uintptr /* *TTrigger = STrigger */, _op int32, _pChanges uintptr /* *TExprList = SExprList */, _tr_tm int32, _pTab uintptr /* *TTable = STable */, _reg int32, _orconf int32, _ignoreJump int32) {
	var _p uintptr // *TTrigger = STrigger

	_p = _pTrigger
_1:
	if _p == 0 {
		goto _3
	}

	if int32(*(*uint8)(unsafe.Pointer(_p + 16))) != _op || int32(*(*uint8)(unsafe.Pointer(_p + 17))) != _tr_tm || _1809checkColumnOverlap(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), _pChanges) == 0 {
		goto _4
	}

	_1820sqlite3CodeRowTriggerDirect(tls, _pParse, _p, _pTab, _reg, _orconf, _ignoreJump)
_4:
	_p = *(*uintptr)(unsafe.Pointer(_p + 64))
	goto _1

_3:
}

// _1603sqlite3GenerateConstraintChecks is defined at sqlite3.c:111079:21
func _1603sqlite3GenerateConstraintChecks(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pTab uintptr /* *TTable = STable */, _aRegIdx uintptr /* *int32 */, _iDataCur int32, _iIdxCur int32, _regNewData int32, _regOldData int32, _pkChng uint8, _overrideError uint8, _ignoreDest int32, _pbMayReplace uintptr /* *int32 */, _aiChng uintptr /* *int32 */) {
	var (
		_v             uintptr // *TVdbe = SVdbe
		_pIdx          uintptr // *TIndex = SIndex
		_pPk           uintptr // *TIndex = SIndex
		_db            uintptr // *Tsqlite3 = Ssqlite3
		_i             int32
		_ix            int32
		_nCol          int32
		_onError       int32
		_addr1         int32
		_seenReplace   int32
		_nPkField      int32
		_ipkTop        int32
		_ipkBottom     int32
		_isUpdate      uint8
		_bAffinityDone uint8
		_zMsg          uintptr // *int8
		_pCheck        uintptr // *TExprList = SExprList
		_allOk         int32
		_pExpr         uintptr // *TExpr = SExpr
		_zName         uintptr // *int8
		_addrRowidOk   int32
		_pTrigger      uintptr // *TTrigger = STrigger
		_regIdx        int32
		_regR          int32
		_iThisCur      int32
		_addrUniqueOk  int32
		_iField        int32
		_x             int32
		_1x            int32
		_addrJump      int32
		_op            int32
		_regCmp        int32
		_p4            uintptr // *int8
		_2pTrigger     uintptr // *TTrigger = STrigger
	)
	_pPk = 0
	_seenReplace = int32(0)
	_ipkTop = int32(0)
	_ipkBottom = int32(0)
	_bAffinityDone = uint8(0)
	_isUpdate = uint8(bool2int(_regOldData != int32(0)))
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_v = _1472sqlite3GetVdbe(tls, _pParse)

	_nCol = int32(*(*int16)(unsafe.Pointer(_pTab + 70)))
	if ((*(*uint32)(unsafe.Pointer(_pTab + 64))) & uint32(0x20)) != uint32(0) {
		goto _1
	}

	_pPk = null
	_nPkField = int32(1)
	goto _2

_1:
	_pPk = _1060sqlite3PrimaryKeyIndex(tls, _pTab)
	_nPkField = int32(*(*uint16)(unsafe.Pointer(_pPk + 94)))
_2:
	_i = int32(0)
_3:
	if _i >= _nCol {
		goto _5
	}

	if _i != int32(*(*int16)(unsafe.Pointer(_pTab + 68))) {
		goto _6
	}

	goto _4

_6:
	if _aiChng == 0 || (*(*int32)(unsafe.Pointer(_aiChng + 4*uintptr(_i)))) >= int32(0) {
		goto _7
	}

	goto _4

_7:
	_onError = int32(*(*uint8)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pTab + 8))) + 32*uintptr(_i)) + 24)))
	if _onError != int32(0) {
		goto _8
	}

	goto _4

_8:
	if int32(_overrideError) == int32(10) {
		goto _9
	}

	_onError = int32(_overrideError)
	goto _10

_9:
	if _onError != int32(10) {
		goto _11
	}

	_onError = int32(2)
_11:
_10:
	if _onError != int32(5) || (*(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pTab + 8))) + 32*uintptr(_i)) + 8))) != 0 {
		goto _12
	}

	_onError = int32(2)
_12:
	switch _onError {
	case int32(2):
		goto _14
	case int32(1):
		goto _15
	case int32(3):
		goto _16
	case int32(4):
		goto _17
	default:
		goto _18
	}
_14:
	_1495sqlite3MayAbort(tls, _pParse)
_15:
_16:
	_zMsg = _226sqlite3MPrintf(tls, _db, ts+15733 /* "%s.%s" */, *(*uintptr)(unsafe.Pointer(_pTab)), *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTab + 8))) + 32*uintptr(_i))))
	_1241sqlite3VdbeAddOp3(tls, _v, int32(65), int32(1299), _onError, (_regNewData+int32(1))+_i)
	_1802sqlite3VdbeAppendP4(tls, _v, _zMsg, int32(-7))
	_1072sqlite3VdbeChangeP5(tls, _v, uint16(1))
	goto _13

_17:
	_1240sqlite3VdbeAddOp2(tls, _v, int32(50), (_regNewData+int32(1))+_i, _ignoreDest)
	goto _13

_18:
	_addr1 = _1489sqlite3VdbeAddOp1(tls, _v, int32(51), (_regNewData+int32(1))+_i)
	_1478sqlite3ExprCode(tls, _pParse, *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pTab + 8))) + 32*uintptr(_i)) + 8)), (_regNewData+int32(1))+_i)
	_1474sqlite3VdbeJumpHere(tls, _v, _addr1)
	goto _13

_13:
_4:
	_i++
	goto _3

_5:
	if (*(*uintptr)(unsafe.Pointer(_pTab + 48))) == 0 || ((*(*uint32)(unsafe.Pointer(_db + 48)))&uint32(0x200)) != uint32(0) {
		goto _19
	}

	_pCheck = *(*uintptr)(unsafe.Pointer(_pTab + 48))
	*(*int32)(unsafe.Pointer(_pParse + 68)) = -(_regNewData + int32(1))
	_onError = func() int32 {
		if int32(_overrideError) != int32(10) {
			return int32(_overrideError)
		}
		return int32(2)
	}()
	_i = int32(0)
_20:
	if _i >= (*(*int32)(unsafe.Pointer(_pCheck))) {
		goto _22
	}

	_pExpr = *(*uintptr)(unsafe.Pointer((_pCheck + 8) + 32*uintptr(_i)))
	if _aiChng == 0 || _1821checkConstraintUnchanged(tls, _pExpr, _aiChng, int32(_pkChng)) == 0 {
		goto _23
	}

	goto _21

_23:
	_allOk = _1541sqlite3VdbeMakeLabel(tls, _v)
	_1653sqlite3ExprIfTrue(tls, _pParse, _pExpr, _allOk, int32(0x10))
	if _onError != int32(4) {
		goto _24
	}

	_1479sqlite3VdbeGoto(tls, _v, _ignoreDest)
	goto _25

_24:
	_zName = *(*uintptr)(unsafe.Pointer(((_pCheck + 8) + 32*uintptr(_i)) + 8))
	if _zName != 0 {
		goto _26
	}

	_zName = *(*uintptr)(unsafe.Pointer(_pTab))
_26:
	if _onError != int32(5) {
		goto _27
	}

	_onError = int32(2)
_27:
	_1745sqlite3HaltConstraint(tls, _pParse, int32(275), _onError, _zName, int8(0), uint8(3))
_25:
	_1569sqlite3VdbeResolveLabel(tls, _v, _allOk)

_21:
	_i++
	goto _20

_22:
	*(*int32)(unsafe.Pointer(_pParse + 68)) = int32(0)
_19:
	if _pkChng == 0 || _pPk != 0 {
		goto _28
	}

	_addrRowidOk = _1541sqlite3VdbeMakeLabel(tls, _v)
	_onError = int32(*(*uint8)(unsafe.Pointer(_pTab + 76)))
	if int32(_overrideError) == int32(10) {
		goto _29
	}

	_onError = int32(_overrideError)
	goto _30

_29:
	if _onError != int32(10) {
		goto _31
	}

	_onError = int32(2)
_31:
_30:
	if _isUpdate == 0 {
		goto _32
	}

	_1241sqlite3VdbeAddOp3(tls, _v, int32(53), _regNewData, _addrRowidOk, _regOldData)
	_1072sqlite3VdbeChangeP5(tls, _v, uint16(0x90))
_32:
	if _onError != int32(5) || int32(_overrideError) == int32(5) {
		goto _33
	}

	_pIdx = *(*uintptr)(unsafe.Pointer(_pTab + 16))
_34:
	if _pIdx == 0 {
		goto _36
	}

	if int32(*(*uint8)(unsafe.Pointer(_pIdx + 98))) != int32(4) && int32(*(*uint8)(unsafe.Pointer(_pIdx + 98))) != int32(3) {
		goto _37
	}

	_ipkTop = _1473sqlite3VdbeAddOp0(tls, _v, int32(13))
	goto _36

_37:
	_pIdx = *(*uintptr)(unsafe.Pointer(_pIdx + 40))
	goto _34

_36:
_33:
	_1241sqlite3VdbeAddOp3(tls, _v, int32(32), _iDataCur, _addrRowidOk, _regNewData)
	switch _onError {
	default:
		goto _39

	case int32(1):
		goto _40
	case int32(2):
		goto _41
	case int32(3):
		goto _42
	case int32(5):
		goto _43
	case int32(4):
		goto _44
	}
_39:
	_onError = int32(2)
_40:
_41:
_42:
	_1822sqlite3RowidConstraint(tls, _pParse, _onError, _pTab)
	goto _38

_43:
	_pTrigger = 0
	if ((*(*uint32)(unsafe.Pointer(_db + 48))) & uint32(0x2000)) == 0 {
		goto _45
	}

	_pTrigger = _1582sqlite3TriggersExist(tls, _pParse, _pTab, int32(109), null, null)
_45:
	if _pTrigger == 0 && _1583sqlite3FkRequired(tls, _pParse, _pTab, null, int32(0)) == 0 {
		goto _46
	}

	_1823sqlite3MultiWrite(tls, _pParse)
	_1596sqlite3GenerateRowDelete(tls, _pParse, _pTab, _pTrigger, _iDataCur, _iIdxCur, _regNewData, int16(1), uint8(0), uint8(5), uint8(1), int32(-1))
	goto _47

_46:
	if (*(*uintptr)(unsafe.Pointer(_pTab + 16))) == 0 {
		goto _48
	}

	_1823sqlite3MultiWrite(tls, _pParse)
	_1605sqlite3GenerateRowIndexDelete(tls, _pParse, _pTab, _iDataCur, _iIdxCur, null, int32(-1))
_48:
_47:
	_seenReplace = int32(1)
	goto _38

_44:
	_1479sqlite3VdbeGoto(tls, _v, _ignoreDest)
	goto _38

_38:
	_1569sqlite3VdbeResolveLabel(tls, _v, _addrRowidOk)
	if _ipkTop == 0 {
		goto _49
	}

	_ipkBottom = _1473sqlite3VdbeAddOp0(tls, _v, int32(13))
	_1474sqlite3VdbeJumpHere(tls, _v, _ipkTop)
_49:
_28:
	_ix = int32(0)
	_pIdx = *(*uintptr)(unsafe.Pointer(_pTab + 16))
_50:
	if _pIdx == 0 {
		goto _52
	}

	if (*(*int32)(unsafe.Pointer(_aRegIdx + 4*uintptr(_ix)))) != int32(0) {
		goto _53
	}

	goto _51

_53:
	if int32(_bAffinityDone) != int32(0) {
		goto _54
	}

	_1500sqlite3TableAffinity(tls, _v, _pTab, _regNewData+int32(1))
	_bAffinityDone = uint8(1)
_54:
	_iThisCur = _iIdxCur + _ix
	_addrUniqueOk = _1541sqlite3VdbeMakeLabel(tls, _v)
	if (*(*uintptr)(unsafe.Pointer(_pIdx + 72))) == 0 {
		goto _55
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(70), int32(0), *(*int32)(unsafe.Pointer(_aRegIdx + 4*uintptr(_ix))))
	*(*int32)(unsafe.Pointer(_pParse + 68)) = -(_regNewData + int32(1))
	_1824sqlite3ExprIfFalseDup(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pIdx + 72)), _addrUniqueOk, int32(0x10))
	*(*int32)(unsafe.Pointer(_pParse + 68)) = int32(0)
_55:
	_regIdx = (*(*int32)(unsafe.Pointer(_aRegIdx + 4*uintptr(_ix)))) + int32(1)
	_i = int32(0)
_56:
	if _i >= int32(*(*uint16)(unsafe.Pointer(_pIdx + 96))) {
		goto _58
	}

	_iField = int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 8))) + 2*uintptr(_i))))
	if _iField != int32(-2) {
		goto _59
	}

	*(*int32)(unsafe.Pointer(_pParse + 68)) = -(_regNewData + int32(1))
	_1825sqlite3ExprCodeCopy(tls, _pParse, *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pIdx + 80))) + 8) + 32*uintptr(_i))), _regIdx+_i)
	*(*int32)(unsafe.Pointer(_pParse + 68)) = int32(0)
	goto _60

_59:
	if _iField != int32(-1) && _iField != int32(*(*int16)(unsafe.Pointer(_pTab + 68))) {
		goto _61
	}

	_x = _regNewData
	goto _62

_61:
	_x = (_iField + _regNewData) + int32(1)
_62:
	_1240sqlite3VdbeAddOp2(tls, _v, func() int32 {
		if _iField < int32(0) {
			return int32(77)
		}
		return int32(76)
	}(), _x, _regIdx+_i)
_60:
	_i++
	goto _56

_58:
	_1241sqlite3VdbeAddOp3(tls, _v, int32(99), _regIdx, int32(*(*uint16)(unsafe.Pointer(_pIdx + 96))), *(*int32)(unsafe.Pointer(_aRegIdx + 4*uintptr(_ix))))
	if _isUpdate == 0 || _pPk != _pIdx || int32(_pkChng) != int32(0) {
		goto _63
	}

	_1569sqlite3VdbeResolveLabel(tls, _v, _addrUniqueOk)
	goto _51

_63:
	_onError = int32(*(*uint8)(unsafe.Pointer(_pIdx + 98)))
	if _onError != int32(0) {
		goto _64
	}

	_1569sqlite3VdbeResolveLabel(tls, _v, _addrUniqueOk)
	goto _51

_64:
	if int32(_overrideError) == int32(10) {
		goto _65
	}

	_onError = int32(_overrideError)
	goto _66

_65:
	if _onError != int32(10) {
		goto _67
	}

	_onError = int32(2)
_67:
_66:
	if _ix != int32(0) || (*(*uintptr)(unsafe.Pointer(_pIdx + 40))) != 0 || _pPk != _pIdx || _onError != int32(5) || uint32(0) != ((*(*uint32)(unsafe.Pointer(_db + 48)))&uint32(0x2000)) && 0 != _1582sqlite3TriggersExist(tls, _pParse, _pTab, int32(109), null, null) || uint32(0) != ((*(*uint32)(unsafe.Pointer(_db + 48)))&uint32(0x4000)) && (0 != (*(*uintptr)(unsafe.Pointer(_pTab + 32))) || 0 != _1618sqlite3FkReferences(tls, _pTab)) {
		goto _68
	}

	_1569sqlite3VdbeResolveLabel(tls, _v, _addrUniqueOk)
	goto _51

_68:
	_1071sqlite3VdbeAddOp4Int(tls, _v, int32(28), _iThisCur, _addrUniqueOk, _regIdx, int32(*(*uint16)(unsafe.Pointer(_pIdx + 94))))
	_regR = func() int32 {
		if _pIdx == _pPk {
			return _regIdx
		}
		return _1558sqlite3GetTempRange(tls, _pParse, _nPkField)
	}()
	if _isUpdate == 0 && _onError != int32(5) {
		goto _69
	}

	if ((*(*uint32)(unsafe.Pointer(_pTab + 64))) & uint32(0x20)) != uint32(0) {
		goto _70
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(130), _iThisCur, _regR)
	if _isUpdate == 0 {
		goto _72
	}

	_1241sqlite3VdbeAddOp3(tls, _v, int32(53), _regR, _addrUniqueOk, _regOldData)
	_1072sqlite3VdbeChangeP5(tls, _v, uint16(0x90))
_72:
	goto _71

_70:
	if _pIdx == _pPk {
		goto _73
	}

	_i = int32(0)
_74:
	if _i >= int32(*(*uint16)(unsafe.Pointer(_pPk + 94))) {
		goto _76
	}

	_1x = int32(_1521sqlite3ColumnOfIndex(tls, _pIdx, *(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPk + 8))) + 2*uintptr(_i)))))
	_1241sqlite3VdbeAddOp3(tls, _v, int32(96), _iThisCur, _1x, _regR+_i)
	_i++
	goto _74

_76:
_73:
	if _isUpdate == 0 {
		goto _77
	}

	_addrJump = _1496sqlite3VdbeCurrentAddr(tls, _v) + int32(*(*uint16)(unsafe.Pointer(_pPk + 94)))
	_op = int32(52)
	_regCmp = func() int32 {
		if int32(uint32(*(*uint8)(unsafe.Pointer(_pIdx + 99)))<<30>>30) == int32(2) {
			return _regIdx
		}
		return _regR
	}()
	_i = int32(0)
_78:
	if _i >= int32(*(*uint16)(unsafe.Pointer(_pPk + 94))) {
		goto _80
	}

	_p4 = _1519sqlite3LocateCollSeq(tls, _pParse, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPk + 64))) + 8*uintptr(_i))))
	_1x = int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPk + 8))) + 2*uintptr(_i))))

	if _i != (int32(*(*uint16)(unsafe.Pointer(_pPk + 94))) - int32(1)) {
		goto _81
	}

	_addrJump = _addrUniqueOk
	_op = int32(53)
_81:
	_1475sqlite3VdbeAddOp4(tls, _v, _op, (_regOldData+int32(1))+_1x, _addrJump, _regCmp+_i, _p4, int32(-2))
	_1072sqlite3VdbeChangeP5(tls, _v, uint16(0x90))
	_i++
	goto _78

_80:
_77:
_71:
_69:
	switch _onError {
	case int32(1):
		goto _83
	case int32(2):
		goto _84
	case int32(3):
		goto _85
	case int32(4):
		goto _86
	default:
		goto _87
	}
_83:
_84:
_85:
	_1741sqlite3UniqueConstraint(tls, _pParse, _onError, _pIdx)
	goto _82

_86:
	_1479sqlite3VdbeGoto(tls, _v, _ignoreDest)
	goto _82

_87:
	_2pTrigger = 0

	_1823sqlite3MultiWrite(tls, _pParse)
	if ((*(*uint32)(unsafe.Pointer(_db + 48))) & uint32(0x2000)) == 0 {
		goto _88
	}

	_2pTrigger = _1582sqlite3TriggersExist(tls, _pParse, _pTab, int32(109), null, null)
_88:
	_1596sqlite3GenerateRowDelete(tls, _pParse, _pTab, _2pTrigger, _iDataCur, _iIdxCur, _regR, int16(_nPkField), uint8(0), uint8(5), uint8(func() int32 {
		if _pIdx == _pPk {
			return int32(1)
		}
		return int32(0)
	}()), _iThisCur)
	_seenReplace = int32(1)
	goto _82

_82:
	_1569sqlite3VdbeResolveLabel(tls, _v, _addrUniqueOk)
	if _regR == _regIdx {
		goto _89
	}

	_1564sqlite3ReleaseTempRange(tls, _pParse, _regR, _nPkField)
_89:
_51:
	_pIdx = *(*uintptr)(unsafe.Pointer(_pIdx + 40))
	_ix++
	goto _50

_52:
	if _ipkTop == 0 {
		goto _90
	}

	_1479sqlite3VdbeGoto(tls, _v, _ipkTop+int32(1))
	_1474sqlite3VdbeJumpHere(tls, _v, _ipkBottom)
_90:
	*(*int32)(unsafe.Pointer(_pbMayReplace)) = _seenReplace
}

// _1604sqlite3FkCheck is defined at sqlite3.c:109288:21
func _1604sqlite3FkCheck(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pTab uintptr /* *TTable = STable */, _regOld int32, _regNew int32, _aChange uintptr /* *int32 */, _bChngRowid int32) {
	esc := crt.MustMalloc(72)
	var (
		_db             uintptr // *Tsqlite3 = Ssqlite3
		_pFKey          uintptr // *TFKey = SFKey
		_iDb            int32
		_zDb            uintptr // *int8
		_isIgnoreErrors int32
		_pTo            uintptr    // *TTable = STable
		_pIdx           = esc      // **TIndex = SIndex
		_aiFree         = esc + 16 // **int32
		_aiCol          uintptr    // *int32
		_iCol           = esc + 32 // *int32
		_i              int32
		_bIgnore        int32
		_v              uintptr // *TVdbe = SVdbe
		_iJump          int32
		_iReg           int32
		_rcauth         int32
		_zCol           uintptr    // *int8
		_1pIdx          = esc + 48 // **TIndex = SIndex
		_pSrc           uintptr    // *TSrcList = SSrcList
		_2aiCol         = esc + 64 // **int32
		_pItem          uintptr    // *SSrcList_item
		_eAction        int32
	)
	defer crt.Free(esc)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_isIgnoreErrors = int32(*(*uint8)(unsafe.Pointer(_pParse + 194)))

	if ((*(*uint32)(unsafe.Pointer(_db + 48))) & uint32(0x4000)) != uint32(0) {
		goto _1
	}

	return

_1:
	_iDb = _1069sqlite3SchemaToIndex(tls, _db, *(*uintptr)(unsafe.Pointer(_pTab + 112)))
	_zDb = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)))
	_pFKey = *(*uintptr)(unsafe.Pointer(_pTab + 32))
_2:
	if _pFKey == 0 {
		goto _4
	}

	*(*uintptr)(unsafe.Pointer(_pIdx)) = 0
	*(*uintptr)(unsafe.Pointer(_aiFree)) = 0
	_bIgnore = int32(0)
	if _aChange == 0 || Xsqlite3_stricmp(tls, *(*uintptr)(unsafe.Pointer(_pTab)), *(*uintptr)(unsafe.Pointer(_pFKey + 16))) == int32(0) || _1810fkChildIsModified(tls, _pTab, _pFKey, _aChange, _bChngRowid) != int32(0) {
		goto _5
	}

	goto _3

_5:
	if (*(*uint8)(unsafe.Pointer(_pParse + 194))) == 0 {
		goto _6
	}

	_pTo = _221sqlite3FindTable(tls, _db, *(*uintptr)(unsafe.Pointer(_pFKey + 16)), _zDb)
	goto _7

_6:
	_pTo = _1068sqlite3LocateTable(tls, _pParse, uint32(0), *(*uintptr)(unsafe.Pointer(_pFKey + 16)), _zDb)
_7:
	if _pTo != 0 && _1649sqlite3FkLocateIndex(tls, _pParse, _pTo, _pFKey, _pIdx, _aiFree) == 0 {
		goto _8
	}

	if _isIgnoreErrors != 0 && (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _9
	}

	return

_9:
	if _pTo != 0 {
		goto _10
	}

	_v = _1472sqlite3GetVdbe(tls, _pParse)
	_iJump = (_1496sqlite3VdbeCurrentAddr(tls, _v) + (*(*int32)(unsafe.Pointer(_pFKey + 40)))) + int32(1)
	_i = int32(0)
_11:
	if _i >= (*(*int32)(unsafe.Pointer(_pFKey + 40))) {
		goto _13
	}

	_iReg = ((*(*int32)(unsafe.Pointer((_pFKey + 64) + 16*uintptr(_i)))) + _regOld) + int32(1)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(50), _iReg, _iJump)
	_i++
	goto _11

_13:
	_1240sqlite3VdbeAddOp2(tls, _v, int32(145), int32(*(*uint8)(unsafe.Pointer(_pFKey + 44))), int32(-1))
_10:
	goto _3

_8:
	if (*(*uintptr)(unsafe.Pointer(_aiFree))) == 0 {
		goto _14
	}

	_aiCol = *(*uintptr)(unsafe.Pointer(_aiFree))
	goto _15

_14:
	*(*int32)(unsafe.Pointer(_iCol)) = *(*int32)(unsafe.Pointer(_pFKey + 64))
	_aiCol = _iCol
_15:
	_i = int32(0)
_16:
	if _i >= (*(*int32)(unsafe.Pointer(_pFKey + 40))) {
		goto _18
	}

	if (*(*int32)(unsafe.Pointer(_aiCol + 4*uintptr(_i)))) != int32(*(*int16)(unsafe.Pointer(_pTab + 68))) {
		goto _19
	}

	*(*int32)(unsafe.Pointer(_aiCol + 4*uintptr(_i))) = int32(-1)
_19:
	if (*(*uintptr)(unsafe.Pointer(_db + 408))) == 0 {
		goto _20
	}

	_zCol = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTo + 8))) + 32*uintptr(func() int32 {
		if (*(*uintptr)(unsafe.Pointer(_pIdx))) != 0 {
			return int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx))) + 8))) + 2*uintptr(_i))))
		}
		return int32(*(*int16)(unsafe.Pointer(_pTo + 68)))
	}())))
	_rcauth = _1826sqlite3AuthReadCol(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pTo)), _zCol, _iDb)
	_bIgnore = bool2int(_rcauth == int32(2))
_20:
	_i++
	goto _16

_18:
	_1574sqlite3TableLock(tls, _pParse, _iDb, *(*int32)(unsafe.Pointer(_pTo + 56)), uint8(0), *(*uintptr)(unsafe.Pointer(_pTo)))
	(*(*int32)(unsafe.Pointer(_pParse + 52)))++
	if _regOld == int32(0) {
		goto _21
	}

	_1827fkLookupParent(tls, _pParse, _iDb, _pTo, *(*uintptr)(unsafe.Pointer(_pIdx)), _pFKey, _aiCol, _regOld, int32(-1), _bIgnore)
_21:
	if _regNew == int32(0) || _1828isSetNullAction(tls, _pParse, _pFKey) != 0 {
		goto _22
	}

	_1827fkLookupParent(tls, _pParse, _iDb, _pTo, *(*uintptr)(unsafe.Pointer(_pIdx)), _pFKey, _aiCol, _regNew, int32(1), _bIgnore)
_22:
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_aiFree)))

_3:
	_pFKey = *(*uintptr)(unsafe.Pointer(_pFKey + 8))
	goto _2

_4:
	_pFKey = _1618sqlite3FkReferences(tls, _pTab)
_23:
	if _pFKey == 0 {
		goto _25
	}

	*(*uintptr)(unsafe.Pointer(_1pIdx)) = 0
	*(*uintptr)(unsafe.Pointer(_2aiCol)) = 0
	if _aChange == 0 || _1811fkParentIsModified(tls, _pTab, _pFKey, _aChange, _bChngRowid) != int32(0) {
		goto _26
	}

	goto _24

_26:
	if (*(*uint8)(unsafe.Pointer(_pFKey + 44))) != 0 || (*(*uint32)(unsafe.Pointer(_db + 48)))&uint32(0x80000) != 0 || (*(*uintptr)(unsafe.Pointer(_pParse + 160))) != 0 || (*(*uint8)(unsafe.Pointer(_pParse + 32))) != 0 {
		goto _27
	}

	goto _24

_27:
	if _1649sqlite3FkLocateIndex(tls, _pParse, _pTab, _pFKey, _1pIdx, _2aiCol) == 0 {
		goto _28
	}

	if _isIgnoreErrors != 0 && (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _29
	}

	return

_29:
	goto _24

_28:
	_pSrc = _1340sqlite3SrcListAppend(tls, _db, null, null, null)
	if _pSrc == 0 {
		goto _30
	}

	_pItem = _pSrc + 8
	*(*uintptr)(unsafe.Pointer(_pItem + 32)) = *(*uintptr)(unsafe.Pointer(_pFKey))
	*(*uintptr)(unsafe.Pointer(_pItem + 16)) = *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pFKey))))
	(*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pItem + 32))) + 60)))++
	*(*int32)(unsafe.Pointer(_pItem + 64)) = postinc7(&(*(*int32)(unsafe.Pointer(_pParse + 52))))
	if _regNew == int32(0) {
		goto _31
	}

	_1829fkScanChildren(tls, _pParse, _pSrc, _pTab, *(*uintptr)(unsafe.Pointer(_1pIdx)), _pFKey, *(*uintptr)(unsafe.Pointer(_2aiCol)), _regNew, int32(-1))
_31:
	if _regOld == int32(0) {
		goto _32
	}

	_eAction = int32(*(*uint8)(unsafe.Pointer((_pFKey + 45) + uintptr(bool2int(_aChange != 0)))))
	_1829fkScanChildren(tls, _pParse, _pSrc, _pTab, *(*uintptr)(unsafe.Pointer(_1pIdx)), _pFKey, *(*uintptr)(unsafe.Pointer(_2aiCol)), _regOld, int32(1))
	if (*(*uint8)(unsafe.Pointer(_pFKey + 44))) != 0 || _eAction == int32(9) || _eAction == int32(7) {
		goto _33
	}

	_1495sqlite3MayAbort(tls, _pParse)
_33:
_32:
	*(*uintptr)(unsafe.Pointer(_pItem + 16)) = null
	_1339sqlite3SrcListDelete(tls, _db, _pSrc)
_30:
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_2aiCol)))

_24:
	_pFKey = *(*uintptr)(unsafe.Pointer(_pFKey + 24))
	goto _23

_25:
}

// _1605sqlite3GenerateRowIndexDelete is defined at sqlite3.c:106406:21
func _1605sqlite3GenerateRowIndexDelete(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pTab uintptr /* *TTable = STable */, _iDataCur int32, _iIdxCur int32, _aRegIdx uintptr /* *int32 */, _iIdxNoSeek int32) {
	esc := crt.MustMalloc(4)
	var (
		_i             int32
		_r1            int32
		_iPartIdxLabel = esc   // *int32
		_pIdx          uintptr // *TIndex = SIndex
		_pPrior        uintptr // *TIndex = SIndex
		_v             uintptr // *TVdbe = SVdbe
		_pPk           uintptr // *TIndex = SIndex
	)
	defer crt.Free(esc)
	_r1 = int32(-1)
	_pPrior = 0
	_v = *(*uintptr)(unsafe.Pointer(_pParse + 16))
	_pPk = func() uintptr {
		if ((*(*uint32)(unsafe.Pointer(_pTab + 64))) & uint32(0x20)) == uint32(0) {
			return null
		}
		return _1060sqlite3PrimaryKeyIndex(tls, _pTab)
	}()
	_i = int32(0)
	_pIdx = *(*uintptr)(unsafe.Pointer(_pTab + 16))
_1:
	if _pIdx == 0 {
		goto _3
	}

	if _aRegIdx == 0 || (*(*int32)(unsafe.Pointer(_aRegIdx + 4*uintptr(_i)))) != int32(0) {
		goto _4
	}

	goto _2

_4:
	if _pIdx != _pPk {
		goto _5
	}

	goto _2

_5:
	if (_iIdxCur + _i) != _iIdxNoSeek {
		goto _6
	}

	goto _2

_6:
	_r1 = _1655sqlite3GenerateIndexKey(tls, _pParse, _pIdx, _iDataCur, int32(0), int32(1), _iPartIdxLabel, _pPrior, _r1)
	_1241sqlite3VdbeAddOp3(tls, _v, int32(128), _iIdxCur+_i, _r1, func() int32 {
		if (uint32((*(*uint8)(unsafe.Pointer(_pIdx + 99)))>>3) << 31 >> 31) != 0 {
			return int32(*(*uint16)(unsafe.Pointer(_pIdx + 94)))
		}
		return int32(*(*uint16)(unsafe.Pointer(_pIdx + 96)))
	}())
	_1656sqlite3ResolvePartIdxLabel(tls, _pParse, *(*int32)(unsafe.Pointer(_iPartIdxLabel)))
	_pPrior = _pIdx

_2:
	_i++
	_pIdx = *(*uintptr)(unsafe.Pointer(_pIdx + 40))
	goto _1

_3:
}

// _1606sqlite3CompleteInsertion is defined at sqlite3.c:111560:21
func _1606sqlite3CompleteInsertion(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pTab uintptr /* *TTable = STable */, _iDataCur int32, _iIdxCur int32, _regNewData int32, _aRegIdx uintptr /* *int32 */, _update_flags int32, _appendBias int32, _useSeekResult int32) {
	var (
		_v             uintptr // *TVdbe = SVdbe
		_pIdx          uintptr // *TIndex = SIndex
		_pik_flags     uint8
		_regData       int32
		_regRec        int32
		_i             int32
		_bAffinityDone uint8
	)
	_bAffinityDone = uint8(0)

	_v = _1472sqlite3GetVdbe(tls, _pParse)

	_i = int32(0)
	_pIdx = *(*uintptr)(unsafe.Pointer(_pTab + 16))
_1:
	if _pIdx == 0 {
		goto _3
	}

	if (*(*int32)(unsafe.Pointer(_aRegIdx + 4*uintptr(_i)))) != int32(0) {
		goto _4
	}

	goto _2

_4:
	_bAffinityDone = uint8(1)
	if (*(*uintptr)(unsafe.Pointer(_pIdx + 72))) == 0 {
		goto _5
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(50), *(*int32)(unsafe.Pointer(_aRegIdx + 4*uintptr(_i))), _1496sqlite3VdbeCurrentAddr(tls, _v)+int32(2))
_5:
	_pik_flags = uint8(func() int32 {
		if _useSeekResult != 0 {
			return int32(0x10)
		}
		return int32(0)
	}())
	if int32(uint32(*(*uint8)(unsafe.Pointer(_pIdx + 99)))<<30>>30) != int32(2) || ((*(*uint32)(unsafe.Pointer(_pTab + 64)))&uint32(0x20)) == uint32(0) {
		goto _6
	}

	_pik_flags = uint8(int32(_pik_flags) | int32(0x1))
	_pik_flags = uint8(int32(_pik_flags) | (_update_flags & int32(0x2)))
_6:
	_1071sqlite3VdbeAddOp4Int(tls, _v, int32(127), _iIdxCur+_i, *(*int32)(unsafe.Pointer(_aRegIdx + 4*uintptr(_i))), (*(*int32)(unsafe.Pointer(_aRegIdx + 4*uintptr(_i))))+int32(1), func() int32 {
		if (uint32((*(*uint8)(unsafe.Pointer(_pIdx + 99)))>>3) << 31 >> 31) != 0 {
			return int32(*(*uint16)(unsafe.Pointer(_pIdx + 94)))
		}
		return int32(*(*uint16)(unsafe.Pointer(_pIdx + 96)))
	}())
	_1072sqlite3VdbeChangeP5(tls, _v, uint16(_pik_flags))

_2:
	_pIdx = *(*uintptr)(unsafe.Pointer(_pIdx + 40))
	_i++
	goto _1

_3:
	if ((*(*uint32)(unsafe.Pointer(_pTab + 64))) & uint32(0x20)) == uint32(0) {
		goto _7
	}

	return

_7:
	_regData = _regNewData + int32(1)
	_regRec = _1562sqlite3GetTempReg(tls, _pParse)
	_1241sqlite3VdbeAddOp3(tls, _v, int32(99), _regData, int32(*(*int16)(unsafe.Pointer(_pTab + 70))), _regRec)
	if _bAffinityDone != 0 {
		goto _8
	}

	_1500sqlite3TableAffinity(tls, _v, _pTab, int32(0))
	_1792sqlite3ExprCacheAffinityChange(tls, _pParse, _regData, int32(*(*int16)(unsafe.Pointer(_pTab + 70))))
_8:
	if (*(*uint8)(unsafe.Pointer(_pParse + 30))) == 0 {
		goto _9
	}

	_pik_flags = uint8(0)
	goto _10

_9:
	_pik_flags = uint8(0x1)
	_pik_flags = uint8(int32(_pik_flags) | func() int32 {
		if _update_flags != 0 {
			return _update_flags
		}
		return int32(0x20)
	}())
_10:
	if _appendBias == 0 {
		goto _11
	}

	_pik_flags = uint8(int32(_pik_flags) | int32(0x8))
_11:
	if _useSeekResult == 0 {
		goto _12
	}

	_pik_flags = uint8(int32(_pik_flags) | int32(0x10))
_12:
	_1241sqlite3VdbeAddOp3(tls, _v, int32(116), _iDataCur, _regRec, _regNewData)
	if (*(*uint8)(unsafe.Pointer(_pParse + 30))) != 0 {
		goto _13
	}

	_1802sqlite3VdbeAppendP4(tls, _v, _pTab, int32(-6))
_13:
	_1072sqlite3VdbeChangeP5(tls, _v, uint16(_pik_flags))
}

// _1607sqlite3FkActions is defined at sqlite3.c:109785:21
func _1607sqlite3FkActions(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pTab uintptr /* *TTable = STable */, _pChanges uintptr /* *TExprList = SExprList */, _regOld int32, _aChange uintptr /* *int32 */, _bChngRowid int32) {
	var (
		_pFKey uintptr // *TFKey = SFKey
		_pAct  uintptr // *TTrigger = STrigger
	)
	if ((*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pParse))) + 48))) & uint32(0x4000)) == 0 {
		goto _1
	}

	_pFKey = _1618sqlite3FkReferences(tls, _pTab)
_2:
	if _pFKey == 0 {
		goto _4
	}

	if _aChange != 0 && _1811fkParentIsModified(tls, _pTab, _pFKey, _aChange, _bChngRowid) == 0 {
		goto _5
	}

	_pAct = _1830fkActionTrigger(tls, _pParse, _pTab, _pFKey, _pChanges)
	if _pAct == 0 {
		goto _6
	}

	_1820sqlite3CodeRowTriggerDirect(tls, _pParse, _pAct, _pTab, _regOld, int32(2), int32(0))
_6:
_5:
	_pFKey = *(*uintptr)(unsafe.Pointer(_pFKey + 24))
	goto _2

_4:
_1:
}

// _1608sqlite3ExprVectorSize is defined at sqlite3.c:92175:20
func _1608sqlite3ExprVectorSize(tls crt.TLS, _pExpr uintptr /* *TExpr = SExpr */) (r int32) {
	var _op uint8

	_op = *(*uint8)(unsafe.Pointer(_pExpr))
	if int32(_op) != int32(150) {
		goto _1
	}

	_op = *(*uint8)(unsafe.Pointer(_pExpr + 54))
_1:
	if int32(_op) != int32(151) {
		goto _2
	}

	return *(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pExpr + 32))))

	goto _3

_2:
	if int32(_op) != int32(119) {
		goto _4
	}

	return *(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pExpr + 32))))))

	goto _5

_4:
	return int32(1)

_5:
_3:
	return r
}

// _1609sqlite3ExprForVectorField is defined at sqlite3.c:92236:21
func _1609sqlite3ExprForVectorField(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pVector uintptr /* *TExpr = SExpr */, _iField int32) (r uintptr /* *TExpr = SExpr */) {
	var _pRet uintptr // *TExpr = SExpr

	if int32(*(*uint8)(unsafe.Pointer(_pVector))) != int32(119) {
		goto _1
	}

	_pRet = _1316sqlite3PExpr(tls, _pParse, int32(152), null, null)
	if _pRet == 0 {
		goto _3
	}

	*(*int16)(unsafe.Pointer(_pRet + 48)) = int16(_iField)
	*(*uintptr)(unsafe.Pointer(_pRet + 16)) = _pVector
_3:
	goto _2

_1:
	if int32(*(*uint8)(unsafe.Pointer(_pVector))) != int32(151) {
		goto _4
	}

	_pVector = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pVector + 32))) + 8) + 32*uintptr(_iField)))
_4:
	_pRet = _1507sqlite3ExprDup(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _pVector, int32(0))
_2:
	return _pRet
}

// _1610xferOptimization is defined at sqlite3.c:111801:12
func _1610xferOptimization(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pDest uintptr /* *TTable = STable */, _pSelect uintptr /* *TSelect = SSelect */, _onError int32, _iDbDest int32) (r int32) {
	var (
		_db               uintptr // *Tsqlite3 = Ssqlite3
		_pEList           uintptr // *TExprList = SExprList
		_pSrc             uintptr // *TTable = STable
		_pSrcIdx          uintptr // *TIndex = SIndex
		_pDestIdx         uintptr // *TIndex = SIndex
		_pItem            uintptr // *SSrcList_item
		_i                int32
		_iDbSrc           int32
		_iSrc             int32
		_iDest            int32
		_addr1            int32
		_addr2            int32
		_emptyDestTest    int32
		_emptySrcTest     int32
		_v                uintptr // *TVdbe = SVdbe
		_regAutoinc       int32
		_destHasUniqueIdx int32
		_regData          int32
		_regRowid         int32
		_pDestCol         uintptr // *TColumn = SColumn
		_pSrcCol          uintptr // *TColumn = SColumn
		_insFlags         uint8
		_idxInsFlags      uint8
		_zColl            uintptr // *int8
	)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_emptyDestTest = int32(0)
	_emptySrcTest = int32(0)
	_destHasUniqueIdx = int32(0)
	if _pSelect != 0 {
		goto _1
	}

	return int32(0)

_1:
	if (*(*uintptr)(unsafe.Pointer(_pParse + 576))) == 0 && (*(*uintptr)(unsafe.Pointer(_pSelect + 104))) == 0 {
		goto _2
	}

	return int32(0)

_2:
	if _1746sqlite3TriggerList(tls, _pParse, _pDest) == 0 {
		goto _3
	}

	return int32(0)

_3:
	if *(*int32)(unsafe.Pointer(_pDest + 84)) == 0 {
		goto _4
	}

	return int32(0)

_4:
	if _onError != int32(10) {
		goto _5
	}

	if int32(*(*int16)(unsafe.Pointer(_pDest + 68))) < int32(0) {
		goto _6
	}

	_onError = int32(*(*uint8)(unsafe.Pointer(_pDest + 76)))
_6:
	if _onError != int32(10) {
		goto _7
	}

	_onError = int32(2)
_7:
_5:
	if (*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pSelect + 32))))) == int32(1) {
		goto _8
	}

	return int32(0)

_8:
	if (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pSelect + 32))) + 8 + 40))) == 0 {
		goto _9
	}

	return int32(0)

_9:
	if (*(*uintptr)(unsafe.Pointer(_pSelect + 40))) == 0 {
		goto _10
	}

	return int32(0)

_10:
	if (*(*uintptr)(unsafe.Pointer(_pSelect + 64))) == 0 {
		goto _11
	}

	return int32(0)

_11:
	if (*(*uintptr)(unsafe.Pointer(_pSelect + 48))) == 0 {
		goto _12
	}

	return int32(0)

_12:
	if (*(*uintptr)(unsafe.Pointer(_pSelect + 88))) == 0 {
		goto _13
	}

	return int32(0)

_13:
	if (*(*uintptr)(unsafe.Pointer(_pSelect + 72))) == 0 {
		goto _14
	}

	return int32(0)

_14:
	if ((*(*uint32)(unsafe.Pointer(_pSelect + 12))) & uint32(0x1)) == 0 {
		goto _15
	}

	return int32(0)

_15:
	_pEList = *(*uintptr)(unsafe.Pointer(_pSelect))

	if (*(*int32)(unsafe.Pointer(_pEList))) == int32(1) {
		goto _16
	}

	return int32(0)

_16:
	if int32(*(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pEList + 8))))) == int32(154) {
		goto _17
	}

	return int32(0)

_17:
	_pItem = (*(*uintptr)(unsafe.Pointer(_pSelect + 32))) + 8
	_pSrc = _1515sqlite3LocateTableItem(tls, _pParse, uint32(0), _pItem)
	if _pSrc != 0 {
		goto _18
	}

	return int32(0)

_18:
	if _pSrc != _pDest {
		goto _19
	}

	return int32(0)

_19:
	if bool2int(((*(*uint32)(unsafe.Pointer(_pDest + 64)))&uint32(0x20)) == uint32(0)) == bool2int(((*(*uint32)(unsafe.Pointer(_pSrc + 64)))&uint32(0x20)) == uint32(0)) {
		goto _20
	}

	return int32(0)

_20:
	if *(*int32)(unsafe.Pointer(_pSrc + 84)) == 0 {
		goto _21
	}

	return int32(0)

_21:
	if (*(*uintptr)(unsafe.Pointer(_pSrc + 24))) == 0 {
		goto _22
	}

	return int32(0)

_22:
	if int32(*(*int16)(unsafe.Pointer(_pDest + 70))) == int32(*(*int16)(unsafe.Pointer(_pSrc + 70))) {
		goto _23
	}

	return int32(0)

_23:
	if int32(*(*int16)(unsafe.Pointer(_pDest + 68))) == int32(*(*int16)(unsafe.Pointer(_pSrc + 68))) {
		goto _24
	}

	return int32(0)

_24:
	_i = int32(0)
_25:
	if _i >= int32(*(*int16)(unsafe.Pointer(_pDest + 70))) {
		goto _27
	}

	_pDestCol = (*(*uintptr)(unsafe.Pointer(_pDest + 8))) + 32*uintptr(_i)
	_pSrcCol = (*(*uintptr)(unsafe.Pointer(_pSrc + 8))) + 32*uintptr(_i)
	if int32(*(*int8)(unsafe.Pointer(_pDestCol + 25))) == int32(*(*int8)(unsafe.Pointer(_pSrcCol + 25))) {
		goto _28
	}

	return int32(0)

_28:
	if Xsqlite3_stricmp(tls, *(*uintptr)(unsafe.Pointer(_pDestCol + 16)), *(*uintptr)(unsafe.Pointer(_pSrcCol + 16))) == int32(0) {
		goto _29
	}

	return int32(0)

_29:
	if (*(*uint8)(unsafe.Pointer(_pDestCol + 24))) == 0 || (*(*uint8)(unsafe.Pointer(_pSrcCol + 24))) != 0 {
		goto _30
	}

	return int32(0)

_30:
	if _i <= int32(0) {
		goto _31
	}

	if bool2int((*(*uintptr)(unsafe.Pointer(_pDestCol + 8))) == 0) == bool2int((*(*uintptr)(unsafe.Pointer(_pSrcCol + 8))) == 0) && ((*(*uintptr)(unsafe.Pointer(_pDestCol + 8))) == 0 || crt.Xstrcmp(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pDestCol + 8))) + 8)), *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pSrcCol + 8))) + 8))) == int32(0)) {
		goto _32
	}

	return int32(0)

_32:
_31:
	_i++
	goto _25

_27:
	_pDestIdx = *(*uintptr)(unsafe.Pointer(_pDest + 16))
_33:
	if _pDestIdx == 0 {
		goto _35
	}

	if int32(*(*uint8)(unsafe.Pointer(_pDestIdx + 98))) == int32(0) {
		goto _36
	}

	_destHasUniqueIdx = int32(1)
_36:
	_pSrcIdx = *(*uintptr)(unsafe.Pointer(_pSrc + 16))
_37:
	if _pSrcIdx == 0 {
		goto _39
	}

	if _1831xferCompatibleIndex(tls, _pDestIdx, _pSrcIdx) == 0 {
		goto _40
	}

	goto _39

_40:
	_pSrcIdx = *(*uintptr)(unsafe.Pointer(_pSrcIdx + 40))
	goto _37

_39:
	if _pSrcIdx != 0 {
		goto _41
	}

	return int32(0)

_41:
	_pDestIdx = *(*uintptr)(unsafe.Pointer(_pDestIdx + 40))
	goto _33

_35:
	if (*(*uintptr)(unsafe.Pointer(_pDest + 48))) == 0 || _1539sqlite3ExprListCompare(tls, *(*uintptr)(unsafe.Pointer(_pSrc + 48)), *(*uintptr)(unsafe.Pointer(_pDest + 48)), int32(-1)) == 0 {
		goto _42
	}

	return int32(0)

_42:
	if ((*(*uint32)(unsafe.Pointer(_db + 48)))&uint32(0x4000)) == uint32(0) || (*(*uintptr)(unsafe.Pointer(_pDest + 32))) == 0 {
		goto _43
	}

	return int32(0)

_43:
	if ((*(*uint32)(unsafe.Pointer(_db + 48))) & uint32(0x80)) == uint32(0) {
		goto _44
	}

	return int32(0)

_44:
	_iDbSrc = _1069sqlite3SchemaToIndex(tls, _db, *(*uintptr)(unsafe.Pointer(_pSrc + 112)))
	_v = _1472sqlite3GetVdbe(tls, _pParse)
	_1487sqlite3CodeVerifySchema(tls, _pParse, _iDbSrc)
	_iSrc = postinc7(&(*(*int32)(unsafe.Pointer(_pParse + 52))))
	_iDest = postinc7(&(*(*int32)(unsafe.Pointer(_pParse + 52))))
	_regAutoinc = _1611autoIncBegin(tls, _pParse, _iDbDest, _pDest)
	_regData = _1562sqlite3GetTempReg(tls, _pParse)
	_regRowid = _1562sqlite3GetTempReg(tls, _pParse)
	_1647sqlite3OpenTable(tls, _pParse, _iDest, _iDbDest, _pDest, int32(105))

	if ((*(*uint32)(unsafe.Pointer(_db + 44)))&uint32(0x4)) != uint32(0) || (int32(*(*int16)(unsafe.Pointer(_pDest + 68))) >= int32(0) || (*(*uintptr)(unsafe.Pointer(_pDest + 16))) == 0) && _destHasUniqueIdx == 0 && (_onError == int32(2) || _onError == int32(1)) {
		goto _45
	}

	_addr1 = _1240sqlite3VdbeAddOp2(tls, _v, int32(37), _iDest, int32(0))
	_emptyDestTest = _1473sqlite3VdbeAddOp0(tls, _v, int32(13))
	_1474sqlite3VdbeJumpHere(tls, _v, _addr1)
_45:
	if ((*(*uint32)(unsafe.Pointer(_pSrc + 64))) & uint32(0x20)) != uint32(0) {
		goto _46
	}

	_1647sqlite3OpenTable(tls, _pParse, _iSrc, _iDbSrc, _pSrc, int32(104))
	_emptySrcTest = _1240sqlite3VdbeAddOp2(tls, _v, int32(37), _iSrc, int32(0))
	if int32(*(*int16)(unsafe.Pointer(_pDest + 68))) < int32(0) {
		goto _48
	}

	_addr1 = _1240sqlite3VdbeAddOp2(tls, _v, int32(123), _iSrc, _regRowid)
	_addr2 = _1241sqlite3VdbeAddOp3(tls, _v, int32(32), _iDest, int32(0), _regRowid)
	_1822sqlite3RowidConstraint(tls, _pParse, _onError, _pDest)
	_1474sqlite3VdbeJumpHere(tls, _v, _addr2)
	_1616autoIncStep(tls, _pParse, _regAutoinc, _regRowid)
	goto _49

_48:
	if (*(*uintptr)(unsafe.Pointer(_pDest + 16))) != 0 {
		goto _50
	}

	_addr1 = _1240sqlite3VdbeAddOp2(tls, _v, int32(115), _iDest, _regRowid)
	goto _51

_50:
	_addr1 = _1240sqlite3VdbeAddOp2(tls, _v, int32(123), _iSrc, _regRowid)

_51:
_49:
	_1241sqlite3VdbeAddOp3(tls, _v, int32(122), _iSrc, _regData, int32(1))
	if ((*(*uint32)(unsafe.Pointer(_db + 44))) & uint32(0x4)) == 0 {
		goto _52
	}

	_1489sqlite3VdbeAddOp1(tls, _v, int32(125), _iDest)
	_insFlags = uint8(57)
	goto _53

_52:
	_insFlags = uint8(41)
_53:
	_1475sqlite3VdbeAddOp4(tls, _v, int32(116), _iDest, _regData, _regRowid, _pDest, int32(-6))
	_1072sqlite3VdbeChangeP5(tls, _v, uint16(_insFlags))
	_1240sqlite3VdbeAddOp2(tls, _v, int32(7), _iSrc, _addr1)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(112), _iSrc, int32(0))
	_1240sqlite3VdbeAddOp2(tls, _v, int32(112), _iDest, int32(0))
	goto _47

_46:
	_1574sqlite3TableLock(tls, _pParse, _iDbDest, *(*int32)(unsafe.Pointer(_pDest + 56)), uint8(1), *(*uintptr)(unsafe.Pointer(_pDest)))
	_1574sqlite3TableLock(tls, _pParse, _iDbSrc, *(*int32)(unsafe.Pointer(_pSrc + 56)), uint8(0), *(*uintptr)(unsafe.Pointer(_pSrc)))
_47:
	_pDestIdx = *(*uintptr)(unsafe.Pointer(_pDest + 16))
_54:
	if _pDestIdx == 0 {
		goto _56
	}

	_idxInsFlags = uint8(0)
	_pSrcIdx = *(*uintptr)(unsafe.Pointer(_pSrc + 16))
_57:
	if _pSrcIdx == 0 {
		goto _59
	}

	if _1831xferCompatibleIndex(tls, _pDestIdx, _pSrcIdx) == 0 {
		goto _60
	}

	goto _59

_60:
	_pSrcIdx = *(*uintptr)(unsafe.Pointer(_pSrcIdx + 40))
	goto _57

_59:
	_1241sqlite3VdbeAddOp3(tls, _v, int32(104), _iSrc, *(*int32)(unsafe.Pointer(_pSrcIdx + 88)), _iDbSrc)
	_1589sqlite3VdbeSetP4KeyInfo(tls, _pParse, _pSrcIdx)
	_1241sqlite3VdbeAddOp3(tls, _v, int32(105), _iDest, *(*int32)(unsafe.Pointer(_pDestIdx + 88)), _iDbDest)
	_1589sqlite3VdbeSetP4KeyInfo(tls, _pParse, _pDestIdx)
	_1072sqlite3VdbeChangeP5(tls, _v, uint16(0x1))
	_addr1 = _1240sqlite3VdbeAddOp2(tls, _v, int32(37), _iSrc, int32(0))
	_1241sqlite3VdbeAddOp3(tls, _v, int32(122), _iSrc, _regData, int32(1))
	if ((*(*uint32)(unsafe.Pointer(_db + 44))) & uint32(0x4)) == 0 {
		goto _61
	}

	_i = int32(0)
_62:
	if _i >= int32(*(*uint16)(unsafe.Pointer(_pSrcIdx + 96))) {
		goto _64
	}

	_zColl = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pSrcIdx + 64))) + 8*uintptr(_i)))
	if Xsqlite3_stricmp(tls, _224sqlite3StrBINARY, _zColl) == 0 {
		goto _65
	}

	goto _64

_65:
	_i++
	goto _62

_64:
	if _i != int32(*(*uint16)(unsafe.Pointer(_pSrcIdx + 96))) {
		goto _66
	}

	_idxInsFlags = uint8(0x10)
	_1489sqlite3VdbeAddOp1(tls, _v, int32(125), _iDest)
_66:
_61:
	if ((*(*uint32)(unsafe.Pointer(_pSrc + 64)))&uint32(0x20)) == uint32(0) || int32(uint32(*(*uint8)(unsafe.Pointer(_pDestIdx + 99)))<<30>>30) != int32(2) {
		goto _67
	}

	_idxInsFlags = uint8(int32(_idxInsFlags) | int32(0x1))
_67:
	_1240sqlite3VdbeAddOp2(tls, _v, int32(127), _iDest, _regData)
	_1072sqlite3VdbeChangeP5(tls, _v, uint16(int32(_idxInsFlags)|int32(0x8)))
	_1240sqlite3VdbeAddOp2(tls, _v, int32(7), _iSrc, _addr1+int32(1))
	_1474sqlite3VdbeJumpHere(tls, _v, _addr1)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(112), _iSrc, int32(0))
	_1240sqlite3VdbeAddOp2(tls, _v, int32(112), _iDest, int32(0))
	_pDestIdx = *(*uintptr)(unsafe.Pointer(_pDestIdx + 40))
	goto _54

_56:
	if _emptySrcTest == 0 {
		goto _68
	}

	_1474sqlite3VdbeJumpHere(tls, _v, _emptySrcTest)
_68:
	_1563sqlite3ReleaseTempReg(tls, _pParse, _regRowid)
	_1563sqlite3ReleaseTempReg(tls, _pParse, _regData)
	if _emptyDestTest == 0 {
		goto _69
	}

	_1597sqlite3AutoincrementEnd(tls, _pParse)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(66), int32(0), int32(0))
	_1474sqlite3VdbeJumpHere(tls, _v, _emptyDestTest)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(112), _iDest, int32(0))
	return int32(0)

	goto _70

_69:
	return int32(1)

_70:
	return r
}

// _1611autoIncBegin is defined at sqlite3.c:110079:12
func _1611autoIncBegin(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _iDb int32, _pTab uintptr /* *TTable = STable */) (r int32) {
	var (
		_memId     int32
		_pToplevel uintptr // *TParse = SParse
		_pInfo     uintptr // *TAutoincInfo = SAutoincInfo
	)
	_memId = int32(0)
	if ((*(*uint32)(unsafe.Pointer(_pTab + 64)))&uint32(0x8)) == uint32(0) || ((*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pParse))) + 44)))&uint32(0x4)) != uint32(0) {
		goto _1
	}

	_pToplevel = func() uintptr {
		if (*(*uintptr)(unsafe.Pointer(_pParse + 160))) != 0 {
			return *(*uintptr)(unsafe.Pointer(_pParse + 160))
		}
		return _pParse
	}()
	_pInfo = *(*uintptr)(unsafe.Pointer(_pToplevel + 152))
_2:
	if _pInfo == 0 || (*(*uintptr)(unsafe.Pointer(_pInfo + 8))) == _pTab {
		goto _3
	}

	_pInfo = *(*uintptr)(unsafe.Pointer(_pInfo))
	goto _2

_3:
	if _pInfo != 0 {
		goto _4
	}

	_pInfo = _373sqlite3DbMallocRawNN(tls, *(*uintptr)(unsafe.Pointer(_pParse)), uint64(24))
	if _pInfo != 0 {
		goto _5
	}

	return int32(0)

_5:
	*(*uintptr)(unsafe.Pointer(_pInfo)) = *(*uintptr)(unsafe.Pointer(_pToplevel + 152))
	*(*uintptr)(unsafe.Pointer(_pToplevel + 152)) = _pInfo
	*(*uintptr)(unsafe.Pointer(_pInfo + 8)) = _pTab
	*(*int32)(unsafe.Pointer(_pInfo + 16)) = _iDb
	(*(*int32)(unsafe.Pointer(_pToplevel + 56)))++
	*(*int32)(unsafe.Pointer(_pInfo + 20)) = preinc2(&(*(*int32)(unsafe.Pointer(_pToplevel + 56))))
	(*(*int32)(unsafe.Pointer(_pToplevel + 56)))++
_4:
	_memId = *(*int32)(unsafe.Pointer(_pInfo + 20))
_1:
	return _memId
}

// _1612readsTable is defined at sqlite3.c:110022:12
func _1612readsTable(tls crt.TLS, _p uintptr /* *TParse = SParse */, _iDb int32, _pTab uintptr /* *TTable = STable */) (r int32) {
	var (
		_v      uintptr // *TVdbe = SVdbe
		_i      int32
		_iEnd   int32
		_pVTab  uintptr // *TVTable = SVTable
		_pOp    uintptr // *TVdbeOp = SVdbeOp
		_pIndex uintptr // *TIndex = SIndex
		_tnum   int32
	)
	_v = _1472sqlite3GetVdbe(tls, _p)
	_iEnd = _1496sqlite3VdbeCurrentAddr(tls, _v)
	_pVTab = func() uintptr {
		if *(*int32)(unsafe.Pointer(_pTab + 84)) != 0 {
			return _1037sqlite3GetVTable(tls, *(*uintptr)(unsafe.Pointer(_p)), _pTab)
		}
		return null
	}()
	_i = int32(1)
_1:
	if _i >= _iEnd {
		goto _3
	}

	_pOp = _1615sqlite3VdbeGetOp(tls, _v, _i)

	if int32(*(*uint8)(unsafe.Pointer(_pOp))) != int32(104) || (*(*int32)(unsafe.Pointer(_pOp + 12))) != _iDb {
		goto _4
	}

	_tnum = *(*int32)(unsafe.Pointer(_pOp + 8))
	if _tnum != (*(*int32)(unsafe.Pointer(_pTab + 56))) {
		goto _5
	}

	return int32(1)

_5:
	_pIndex = *(*uintptr)(unsafe.Pointer(_pTab + 16))
_6:
	if _pIndex == 0 {
		goto _8
	}

	if _tnum != (*(*int32)(unsafe.Pointer(_pIndex + 88))) {
		goto _9
	}

	return int32(1)

_9:
	_pIndex = *(*uintptr)(unsafe.Pointer(_pIndex + 40))
	goto _6

_8:
_4:
	if int32(*(*uint8)(unsafe.Pointer(_pOp))) != int32(156) || (*(*uintptr)(unsafe.Pointer(_pOp + 16))) != _pVTab {
		goto _10
	}

	return int32(1)

_10:
	_i++
	goto _1

_3:
	return int32(0)
}

// _1613sqlite3ResolveExprListNames is defined at sqlite3.c:91724:20
func _1613sqlite3ResolveExprListNames(tls crt.TLS, _pNC uintptr /* *TNameContext = SNameContext */, _pList uintptr /* *TExprList = SExprList */) (r int32) {
	var _i int32

	if _pList == 0 {
		goto _1
	}

	_i = int32(0)
_2:
	if _i >= (*(*int32)(unsafe.Pointer(_pList))) {
		goto _4
	}

	if _1588sqlite3ResolveExprNames(tls, _pNC, *(*uintptr)(unsafe.Pointer((_pList + 8) + 32*uintptr(_i)))) == 0 {
		goto _5
	}

	return int32(2)

_5:
	_i++
	goto _2

_4:
_1:
	return int32(0)
}

// _1614sqlite3ExprCodeAndCache is defined at sqlite3.c:96063:21
func _1614sqlite3ExprCodeAndCache(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pExpr uintptr /* *TExpr = SExpr */, _target int32) {
	var (
		_v    uintptr // *TVdbe = SVdbe
		_iMem int32
	)
	_v = *(*uintptr)(unsafe.Pointer(_pParse + 16))

	_1478sqlite3ExprCode(tls, _pParse, _pExpr, _target)
	_iMem = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))
	_1240sqlite3VdbeAddOp2(tls, _v, int32(75), _target, _iMem)
	_1832exprToRegister(tls, _pExpr, _iMem)
}

// _1615sqlite3VdbeGetOp is defined at sqlite3.c:73305:23
func _1615sqlite3VdbeGetOp(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */, _addr int32) (r uintptr /* *TVdbeOp = SVdbeOp */) {
	if _addr >= int32(0) {
		goto _1
	}

	_addr = (*(*int32)(unsafe.Pointer(_p + 184))) - int32(1)
_1:
	if (*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p))) + 97))) == 0 {
		goto _2
	}

	return _1833dummy

	goto _3

_2:
	return (*(*uintptr)(unsafe.Pointer(_p + 104))) + 24*uintptr(_addr)

_3:
	return r
}

// _1616autoIncStep is defined at sqlite3.c:110168:13
func _1616autoIncStep(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _memId int32, _regRowid int32) {
	if _memId <= int32(0) {
		goto _1
	}

	_1240sqlite3VdbeAddOp2(tls, *(*uintptr)(unsafe.Pointer(_pParse + 16)), int32(146), _memId, _regRowid)
_1:
}

// _1617sqlite3ExprCodeFactorable is defined at sqlite3.c:96043:21
func _1617sqlite3ExprCodeFactorable(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pExpr uintptr /* *TExpr = SExpr */, _target int32) {
	if (*(*uint8)(unsafe.Pointer(_pParse + 35))) == 0 || _1799sqlite3ExprIsConstant(tls, _pExpr) == 0 {
		goto _1
	}

	_1800sqlite3ExprCodeAtInit(tls, _pParse, _pExpr, _target)
	goto _2

_1:
	_1478sqlite3ExprCode(tls, _pParse, _pExpr, _target)
_2:
}

// _1618sqlite3FkReferences is defined at sqlite3.c:109098:21
func _1618sqlite3FkReferences(tls crt.TLS, _pTab uintptr /* *TTable = STable */) (r uintptr /* *TFKey = SFKey */) {
	return _424sqlite3HashFind(tls, (*(*uintptr)(unsafe.Pointer(_pTab + 112)))+80, *(*uintptr)(unsafe.Pointer(_pTab)))
}

// _1619sqlite3ArrayAllocate is defined at sqlite3.c:104263:21
func _1619sqlite3ArrayAllocate(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pArray uintptr /* *void */, _szEntry int32, _pnEntry uintptr /* *int32 */, _pIdx uintptr /* *int32 */) (r uintptr /* *void */) {
	var (
		_z    uintptr // *int8
		_n    int32
		_sz   int32
		_pNew uintptr // *void
	)
	_n = *(*int32)(unsafe.Pointer(_pnEntry))
	if (_n & (_n - int32(1))) != int32(0) {
		goto _1
	}

	_sz = func() int32 {
		if _n == int32(0) {
			return int32(1)
		}
		return int32(2) * _n
	}()
	_pNew = _869sqlite3DbRealloc(tls, _db, _pArray, uint64(_sz*_szEntry))
	if _pNew != 0 {
		goto _2
	}

	*(*int32)(unsafe.Pointer(_pIdx)) = int32(-1)
	return _pArray

_2:
	_pArray = _pNew
_1:
	_z = _pArray
	crt.Xmemset(tls, _z+uintptr(_n*_szEntry), int32(0), uint64(_szEntry))
	*(*int32)(unsafe.Pointer(_pIdx)) = _n
	(*(*int32)(unsafe.Pointer(_pnEntry)))++
	return _pArray
}

// _1620sqlite3VListAdd is defined at sqlite3.c:29645:22
func _1620sqlite3VListAdd(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pIn uintptr /* *TVList = int32 */, _zName uintptr /* *int8 */, _nName int32, _iVal int32) (r uintptr /* *TVList = int32 */) {
	var (
		_nInt   int32
		_z      uintptr // *int8
		_i      int32
		_nAlloc int32
		_pOut   uintptr // *TVList = int32
	)
	_nInt = (_nName / int32(4)) + int32(3)

	if _pIn != 0 && ((*(*int32)(unsafe.Pointer(_pIn + 4)))+_nInt) <= (*(*int32)(unsafe.Pointer(_pIn))) {
		goto _1
	}

	_nAlloc = func() int32 {
		if _pIn != 0 {
			return (*(*int32)(unsafe.Pointer(_pIn))) * int32(2)
		}
		return int32(10)
	}() + _nInt
	_pOut = _869sqlite3DbRealloc(tls, _db, _pIn, uint64(uint64(_nAlloc)*uint64(4)))
	if _pOut != 0 {
		goto _2
	}

	return _pIn

_2:
	if _pIn != 0 {
		goto _3
	}

	*(*int32)(unsafe.Pointer(_pOut + 4)) = int32(2)
_3:
	_pIn = _pOut
	*(*int32)(unsafe.Pointer(_pIn)) = _nAlloc
_1:
	_i = *(*int32)(unsafe.Pointer(_pIn + 4))
	*(*int32)(unsafe.Pointer(_pIn + 4*uintptr(_i))) = _iVal
	*(*int32)(unsafe.Pointer(_pIn + 4*uintptr(_i+int32(1)))) = _nInt
	_z = _pIn + 4*uintptr(_i+int32(2))
	*(*int32)(unsafe.Pointer(_pIn + 4)) = _i + _nInt

	crt.Xmemcpy(tls, _z, _zName, uint64(_nName))
	*(*int8)(unsafe.Pointer(_z + uintptr(_nName))) = int8(0)
	return _pIn
}

// _1621exprSetHeight is defined at sqlite3.c:92485:13
func _1621exprSetHeight(tls crt.TLS, _p uintptr /* *TExpr = SExpr */) {
	esc := crt.MustMalloc(4)
	var _nHeight = esc // *int32
	defer crt.Free(esc)
	*(*int32)(unsafe.Pointer(_nHeight)) = int32(0)
	_1834heightOfExpr(tls, *(*uintptr)(unsafe.Pointer(_p + 16)), _nHeight)
	_1834heightOfExpr(tls, *(*uintptr)(unsafe.Pointer(_p + 24)), _nHeight)
	if ((*(*uint32)(unsafe.Pointer(_p + 4))) & uint32(0x800)) == uint32(0) {
		goto _1
	}

	_1767heightOfSelect(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), _nHeight)
	goto _2

_1:
	if (*(*uintptr)(unsafe.Pointer(_p + 32))) == 0 {
		goto _3
	}

	_1835heightOfExprList(tls, *(*uintptr)(unsafe.Pointer(_p + 32)), _nHeight)
	{
		p := &(*(*uint32)(unsafe.Pointer(_p + 4)))
		*p = uint32(uint32(*p) | (uint32(2097408) & _1836sqlite3ExprListFlags(tls, *(*uintptr)(unsafe.Pointer(_p + 32)))))
	}
_3:
_2:
	*(*int32)(unsafe.Pointer(_p + 40)) = (*(*int32)(unsafe.Pointer(_nHeight))) + int32(1)
}

// _1622destroyRootPage is defined at sqlite3.c:103035:13
func _1622destroyRootPage(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _iTable int32, _iDb int32) {
	var (
		_v  uintptr // *TVdbe = SVdbe
		_r1 int32
	)
	_v = _1472sqlite3GetVdbe(tls, _pParse)
	_r1 = _1562sqlite3GetTempReg(tls, _pParse)

	_1241sqlite3VdbeAddOp3(tls, _v, int32(131), _iTable, _r1, _iDb)
	_1495sqlite3MayAbort(tls, _pParse)
	_1502sqlite3NestedParse(tls, _pParse, ts+29691 /* "UPDATE %Q.%s SET rootpage=%d WHE..." */, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pParse))) + 32))) + 32*uintptr(_iDb))), ts+5127 /* "sqlite_master" */, _iTable, _r1, _r1)
	_1563sqlite3ReleaseTempReg(tls, _pParse, _r1)
}

// _1623iLn int32, escapes: false, sqlite3.c:114752:22
var _1623iLn int32

// _1624getCacheSize [9]SVdbeOpList, escapes: true, sqlite3.c:114753:29
var _1624getCacheSize = ds + 16850

// _1625iLn int32, escapes: false, sqlite3.c:115010:26
var _1625iLn int32

// _1626setMeta6 [5]SVdbeOpList, escapes: true, sqlite3.c:115011:33
var _1626setMeta6 = ds + 16886

// _1627iLn int32, escapes: false, sqlite3.c:115976:24
var _1627iLn int32

// _1628endCode [7]SVdbeOpList, escapes: true, sqlite3.c:115977:31
var _1628endCode = ds + 16906

// _1629encnames [9]struct{XzName *int8;Xenc uint8;}, escapes: true, sqlite3.c:116029:7
var _1629encnames = bss + 16432 // array of 9 struct{zName pointer to char; enc u8}

func init() {
	*(*[9]struct {
		XzName uintptr // *int8
		Xenc   uint8
	})(unsafe.Pointer(_1629encnames)) = [9]struct {
		XzName uintptr // *int8
		Xenc   uint8
	}{
		0:
		// *int8

		{
			XzName: ts + 29747, /* "UTF8" */
			Xenc:   uint8(1),
		},
		1:
		// *int8

		{
			XzName: ts + 29752, /* "UTF-8" */
			Xenc:   uint8(1),
		},
		2:
		// *int8

		{
			XzName: ts + 29758, /* "UTF-16le" */
			Xenc:   uint8(2),
		},
		3:
		// *int8

		{
			XzName: ts + 29767, /* "UTF-16be" */
			Xenc:   uint8(3),
		},
		4:
		// *int8

		{
			XzName: ts + 29776, /* "UTF16le" */
			Xenc:   uint8(2),
		},
		5:
		// *int8

		{
			XzName: ts + 29784, /* "UTF16be" */
			Xenc:   uint8(3),
		},
		6:
		// *int8

		{
			XzName: ts + 29792, /* "UTF-16" */
		},
		7:
		// *int8

		{
			XzName: ts + 29799, /* "UTF16" */
		},
	}
}

// _1630setCookie [2]SVdbeOpList, escapes: true, sqlite3.c:116111:31
var _1630setCookie = ds + 16934

// _1631readCookie [3]SVdbeOpList, escapes: true, sqlite3.c:116125:31
var _1631readCookie = ds + 16942

type SEncName struct {
	XzName uintptr // *int8
	Xenc   uint8
}

// _1632sqlite3VdbeRunOnlyOnce is defined at sqlite3.c:72585:21
func _1632sqlite3VdbeRunOnlyOnce(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */) {
	set217b(&(*(*uint16)(unsafe.Pointer(_p + 194))), uint32(1))
}

// _1633returnSingleText is defined at sqlite3.c:114493:13
func _1633returnSingleText(tls crt.TLS, _v uintptr /* *TVdbe = SVdbe */, _zValue uintptr /* *int8 */) {
	if _zValue == 0 {
		goto _1
	}

	_1648sqlite3VdbeLoadString(tls, _v, int32(1), _zValue)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(78), int32(1), int32(1))
_1:
}

// _1634setPragmaResultColumnNames is defined at sqlite3.c:114466:13
func _1634setPragmaResultColumnNames(tls crt.TLS, _v uintptr /* *TVdbe = SVdbe */, _pPragma uintptr /* *TPragmaName = struct{XzName *in...XnPragCName uint8;XiArg uint32;} */) {
	var (
		_n uint8
		_i int32
		_j int32
	)
	_n = *(*uint8)(unsafe.Pointer(_pPragma + 11))
	_621sqlite3VdbeSetNumCols(tls, _v, func() int32 {
		if int32(_n) == int32(0) {
			return int32(1)
		}
		return int32(_n)
	}())
	if int32(_n) != int32(0) {
		goto _1
	}

	_622sqlite3VdbeSetColName(tls, _v, int32(0), int32(0), *(*uintptr)(unsafe.Pointer(_pPragma)), null)
	goto _2

_1:
	_i = int32(0)
	_j = int32(*(*uint8)(unsafe.Pointer(_pPragma + 10)))
_3:
	if _i >= int32(_n) {
		goto _5
	}

	_622sqlite3VdbeSetColName(tls, _v, _i, int32(0), *(*uintptr)(unsafe.Pointer(_1837pragCName + 8*uintptr(_j))), null)
	_i++
	_j++
	goto _3

_5:
_2:
}

// _1635returnSingleInt is defined at sqlite3.c:114485:13
func _1635returnSingleInt(tls crt.TLS, _v uintptr /* *TVdbe = SVdbe */, avalue int64) {
	esc := crt.MustMalloc(8)
	var _value = esc // *int64
	defer crt.Free(esc)
	*(*int64)(unsafe.Pointer(_value)) = avalue
	_1838sqlite3VdbeAddOp4Dup8(tls, _v, int32(68), int32(0), int32(1), int32(0), _value, int32(-14))
	_1240sqlite3VdbeAddOp2(tls, _v, int32(78), int32(1), int32(1))
}

// _1636sqlite3BtreeSecureDelete is defined at sqlite3.c:62531:20
func _1636sqlite3BtreeSecureDelete(tls crt.TLS, _p uintptr /* *TBtree = SBtree */, _newFlag int32) (r int32) {
	var _b int32

	if _p != 0 {
		goto _1
	}

	return int32(0)

_1:
	_139sqlite3BtreeEnter(tls, _p)

	if _newFlag < int32(0) {
		goto _2
	}

	{
		p := &(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 8))) + 38)))
		*p = uint16(int32(*p) & int32(-13))
	}
	{
		p := &(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 8))) + 38)))
		*p = uint16(int32(*p) | (int32(0x4) * _newFlag))
	}
_2:
	_b = (int32(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 8))) + 38))) & int32(0xc)) / int32(0x4)
	_169sqlite3BtreeLeave(tls, _p)
	return _b
}

// _1637getLockingMode is defined at sqlite3.c:114380:12
func _1637getLockingMode(tls crt.TLS, _z uintptr /* *int8 */) (r int32) {
	if _z == 0 {
		goto _1
	}

	if int32(0) != _110sqlite3StrICmp(tls, _z, ts+26834 /* "exclusive" */) {
		goto _2
	}

	return int32(1)

_2:
	if int32(0) != _110sqlite3StrICmp(tls, _z, ts+26827 /* "normal" */) {
		goto _3
	}

	return int32(0)

_3:
_1:
	return int32(-1)
}

// _1638sqlite3PagerLockingMode is defined at sqlite3.c:54684:20
func _1638sqlite3PagerLockingMode(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _eMode int32) (r int32) {
	if _eMode < int32(0) || (*(*uint8)(unsafe.Pointer(_pPager + 16))) != 0 || _1839sqlite3WalHeapMemory(tls, *(*uintptr)(unsafe.Pointer(_pPager + 288))) != 0 {
		goto _1
	}

	*(*uint8)(unsafe.Pointer(_pPager + 8)) = uint8(_eMode)
_1:
	return int32(*(*uint8)(unsafe.Pointer(_pPager + 8)))
}

// _1639sqlite3PagerJournalSizeLimit is defined at sqlite3.c:54837:20
func _1639sqlite3PagerJournalSizeLimit(tls crt.TLS, _pPager uintptr /* *TPager = SPager */, _iLimit int64) (r int64) {
	if _iLimit < int64(-1) {
		goto _1
	}

	*(*int64)(unsafe.Pointer(_pPager + 200)) = _iLimit
	_1840sqlite3WalLimit(tls, *(*uintptr)(unsafe.Pointer(_pPager + 288)), _iLimit)
_1:
	return *(*int64)(unsafe.Pointer(_pPager + 200))
}

// _1640getAutoVacuum is defined at sqlite3.c:114395:12
func _1640getAutoVacuum(tls crt.TLS, _z uintptr /* *int8 */) (r int32) {
	var _i int32

	if int32(0) != _110sqlite3StrICmp(tls, _z, ts+29805 /* "none" */) {
		goto _1
	}

	return int32(0)

_1:
	if int32(0) != _110sqlite3StrICmp(tls, _z, ts+2700 /* "full" */) {
		goto _2
	}

	return int32(1)

_2:
	if int32(0) != _110sqlite3StrICmp(tls, _z, ts+29810 /* "incremental" */) {
		goto _3
	}

	return int32(2)

_3:
	_i = _1002sqlite3Atoi(tls, _z)
	return int32(uint8(func() int32 {
		if (_i >= int32(0)) && (_i <= int32(2)) {
			return _i
		}
		return int32(0)
	}()))
}

// _1641setAllPagerFlags is defined at sqlite3.c:114509:13
func _1641setAllPagerFlags(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */) {
	var (
		_pDb uintptr // *TDb = SDb
		_n   int32
	)
	if (*(*uint8)(unsafe.Pointer(_db + 95))) == 0 {
		goto _1
	}

	_pDb = *(*uintptr)(unsafe.Pointer(_db + 32))
	_n = *(*int32)(unsafe.Pointer(_db + 40))

_2:
	if postinc24(&_n) <= int32(0) {
		goto _3
	}

	if (*(*uintptr)(unsafe.Pointer(_pDb + 8))) == 0 {
		goto _4
	}

	_1028sqlite3BtreeSetPagerFlags(tls, *(*uintptr)(unsafe.Pointer(_pDb + 8)), uint32(*(*uint8)(unsafe.Pointer(_pDb + 16)))|((*(*uint32)(unsafe.Pointer(_db + 48)))&uint32(0x38)))
_4:
	_pDb += 32
	goto _2

_3:
_1:
}

// _1642sqlite3BtreeSetMmapLimit is defined at sqlite3.c:62372:20
func _1642sqlite3BtreeSetMmapLimit(tls crt.TLS, _p uintptr /* *TBtree = SBtree */, _szMmap int64) (r int32) {
	var _pBt uintptr // *TBtShared = SBtShared

	_pBt = *(*uintptr)(unsafe.Pointer(_p + 8))

	_139sqlite3BtreeEnter(tls, _p)
	_514sqlite3PagerSetMmapLimit(tls, *(*uintptr)(unsafe.Pointer(_pBt)), _szMmap)
	_169sqlite3BtreeLeave(tls, _p)
	return int32(0)
}

// _1643changeTempStorage is defined at sqlite3.c:114451:12
func _1643changeTempStorage(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _zStorageType uintptr /* *int8 */) (r int32) {
	var (
		_ts int32
		_db uintptr // *Tsqlite3 = Ssqlite3
	)
	_ts = _1841getTempStore(tls, _zStorageType)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	if int32(*(*uint8)(unsafe.Pointer(_db + 96))) != _ts {
		goto _1
	}

	return int32(0)

_1:
	if _1644invalidateTempStorage(tls, _pParse) == int32(0) {
		goto _2
	}

	return int32(1)

_2:
	*(*uint8)(unsafe.Pointer(_db + 96)) = uint8(_ts)
	return int32(0)
}

// _1644invalidateTempStorage is defined at sqlite3.c:114429:12
func _1644invalidateTempStorage(tls crt.TLS, _pParse uintptr /* *TParse = SParse */) (r int32) {
	var _db uintptr // *Tsqlite3 = Ssqlite3

	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	if (*(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32) + 8))) == 0 {
		goto _1
	}

	if (*(*uint8)(unsafe.Pointer(_db + 95))) != 0 && _142sqlite3BtreeIsInReadTrans(tls, *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32) + 8))) == 0 {
		goto _2
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+29822 /* "temporary storage cannot be chan..." */)
	return int32(1)

_2:
	_367sqlite3BtreeClose(tls, *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32) + 8)))
	*(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32) + 8)) = null
	_157sqlite3ResetAllSchemasOfConnection(tls, _db)
_1:
	return int32(0)
}

// _1645sqlite3VdbeMultiLoad is defined at sqlite3.c:72434:21
func _1645sqlite3VdbeMultiLoad(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */, _iDest int32, _zTypes uintptr /* *int8 */, ap ...interface{}) {
	var (
		_ap *[]interface{} // Tva_list = T__gnuc_va_list = T__...a_list = *struct{X_ [2]uintptr;}
		_i  int32
		_c  int8
		_z  uintptr // *int8
	)
	{
		x := ap
		_ap = &x
	}
	_i = int32(0)
_1:
	if int32(set15(&_c, *(*int8)(unsafe.Pointer(_zTypes + uintptr(_i))))) == int32(0) {
		goto _3
	}

	if int32(_c) != int32('s') {
		goto _4
	}

	_z = crt.VAuintptr(_ap)
	_1475sqlite3VdbeAddOp4(tls, _p, func() int32 {
		if _z == 0 {
			return int32(70)
		}
		return int32(97)
	}(), int32(0), _iDest+_i, int32(0), _z, int32(0))
	goto _5

_4:
	if int32(_c) != int32('i') {
		goto _6
	}

	_1240sqlite3VdbeAddOp2(tls, _p, int32(67), crt.VAint32(_ap), _iDest+_i)
	goto _7

_6:
	goto _skip_op_resultrow

_7:
_5:
	_i++
	goto _1

_3:
	_1240sqlite3VdbeAddOp2(tls, _p, int32(78), _iDest, _i)
	goto _skip_op_resultrow
_skip_op_resultrow:
	_ap = nil
}

// _1646actionName is defined at sqlite3.c:114537:19
func _1646actionName(tls crt.TLS, _action uint8) (r uintptr /* *int8 */) {
	var _zName uintptr // *int8

	switch int32(_action) {
	case int32(7):
		goto _2
	case int32(8):
		goto _3
	case int32(9):
		goto _4
	case int32(6):
		goto _5
	default:
		goto _6
	}
_2:
	_zName = ts + 29884 /* "SET NULL" */
	goto _1

_3:
	_zName = ts + 29893 /* "SET DEFAULT" */
	goto _1

_4:
	_zName = ts + 16020 /* "CASCADE" */
	goto _1

_5:
	_zName = ts + 16518 /* "RESTRICT" */
	goto _1

_6:
	_zName = ts + 29905 /* "NO ACTION" */

	goto _1

_1:
	return _zName
}

// _1647sqlite3OpenTable is defined at sqlite3.c:109883:21
func _1647sqlite3OpenTable(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _iCur int32, _iDb int32, _pTab uintptr /* *TTable = STable */, _opcode int32) {
	var (
		_v   uintptr // *TVdbe = SVdbe
		_pPk uintptr // *TIndex = SIndex
	)

	_v = _1472sqlite3GetVdbe(tls, _pParse)

	_1574sqlite3TableLock(tls, _pParse, _iDb, *(*int32)(unsafe.Pointer(_pTab + 56)), uint8(func() int32 {
		if _opcode == int32(105) {
			return int32(1)
		}
		return int32(0)
	}()), *(*uintptr)(unsafe.Pointer(_pTab)))
	if ((*(*uint32)(unsafe.Pointer(_pTab + 64))) & uint32(0x20)) != uint32(0) {
		goto _1
	}

	_1071sqlite3VdbeAddOp4Int(tls, _v, _opcode, _iCur, *(*int32)(unsafe.Pointer(_pTab + 56)), _iDb, int32(*(*int16)(unsafe.Pointer(_pTab + 70))))
	goto _2

_1:
	_pPk = _1060sqlite3PrimaryKeyIndex(tls, _pTab)

	_1241sqlite3VdbeAddOp3(tls, _v, _opcode, _iCur, *(*int32)(unsafe.Pointer(_pPk + 88)), _iDb)
	_1589sqlite3VdbeSetP4KeyInfo(tls, _pParse, _pPk)
_2:
}

// _1648sqlite3VdbeLoadString is defined at sqlite3.c:72419:20
func _1648sqlite3VdbeLoadString(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */, _iDest int32, _zStr uintptr /* *int8 */) (r int32) {
	return _1475sqlite3VdbeAddOp4(tls, _p, int32(97), int32(0), _iDest, int32(0), _zStr, int32(0))
}

// _1649sqlite3FkLocateIndex is defined at sqlite3.c:108616:20
func _1649sqlite3FkLocateIndex(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pParent uintptr /* *TTable = STable */, _pFKey uintptr /* *TFKey = SFKey */, _ppIdx uintptr /* **TIndex = SIndex */, _paiCol uintptr /* **int32 */) (r int32) {
	var (
		_pIdx      uintptr // *TIndex = SIndex
		_aiCol     uintptr // *int32
		_nCol      int32
		_zKey      uintptr // *int8
		_i         int32
		_1i        int32
		_j         int32
		_iCol      int16
		_zDfltColl uintptr // *int8
		_zIdxCol   uintptr // *int8
	)
	_pIdx = 0
	_aiCol = 0
	_nCol = *(*int32)(unsafe.Pointer(_pFKey + 40))
	_zKey = *(*uintptr)(unsafe.Pointer(_pFKey + 64 + 8))

	if _nCol != int32(1) {
		goto _1
	}

	if int32(*(*int16)(unsafe.Pointer(_pParent + 68))) < int32(0) {
		goto _3
	}

	if _zKey != 0 {
		goto _4
	}

	return int32(0)

_4:
	if _110sqlite3StrICmp(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pParent + 8))) + 32*uintptr(*(*int16)(unsafe.Pointer(_pParent + 68))))), _zKey) != 0 {
		goto _5
	}

	return int32(0)

_5:
_3:
	goto _2

_1:
	if _paiCol == 0 {
		goto _6
	}

	_aiCol = _373sqlite3DbMallocRawNN(tls, *(*uintptr)(unsafe.Pointer(_pParse)), uint64(uint64(_nCol)*uint64(4)))
	if _aiCol != 0 {
		goto _7
	}

	return int32(1)

_7:
	*(*uintptr)(unsafe.Pointer(_paiCol)) = _aiCol
_6:
_2:
	_pIdx = *(*uintptr)(unsafe.Pointer(_pParent + 16))
_8:
	if _pIdx == 0 {
		goto _10
	}

	if int32(*(*uint16)(unsafe.Pointer(_pIdx + 94))) != _nCol || int32(*(*uint8)(unsafe.Pointer(_pIdx + 98))) == int32(0) || (*(*uintptr)(unsafe.Pointer(_pIdx + 72))) != 0 {
		goto _11
	}

	if _zKey != 0 {
		goto _12
	}

	if int32(uint32(*(*uint8)(unsafe.Pointer(_pIdx + 99)))<<30>>30) != int32(2) {
		goto _14
	}

	if _aiCol == 0 {
		goto _15
	}

	_i = int32(0)
_16:
	if _i >= _nCol {
		goto _18
	}

	*(*int32)(unsafe.Pointer(_aiCol + 4*uintptr(_i))) = *(*int32)(unsafe.Pointer((_pFKey + 64) + 16*uintptr(_i)))
	_i++
	goto _16

_18:
_15:
	goto _10

_14:
	goto _13

_12:
	_1i = int32(0)
_19:
	if _1i >= _nCol {
		goto _21
	}

	_iCol = *(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 8))) + 2*uintptr(_1i)))
	if int32(_iCol) >= int32(0) {
		goto _22
	}

	goto _21

_22:
	_zDfltColl = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pParent + 8))) + 32*uintptr(_iCol)) + 16))
	if _zDfltColl != 0 {
		goto _23
	}

	_zDfltColl = _224sqlite3StrBINARY
_23:
	if _110sqlite3StrICmp(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 64))) + 8*uintptr(_1i))), _zDfltColl) == 0 {
		goto _24
	}

	goto _21

_24:
	_zIdxCol = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pParent + 8))) + 32*uintptr(_iCol)))
	_j = int32(0)
_25:
	if _j >= _nCol {
		goto _27
	}

	if _110sqlite3StrICmp(tls, *(*uintptr)(unsafe.Pointer(((_pFKey + 64) + 16*uintptr(_j)) + 8)), _zIdxCol) != int32(0) {
		goto _28
	}

	if _aiCol == 0 {
		goto _29
	}

	*(*int32)(unsafe.Pointer(_aiCol + 4*uintptr(_1i))) = *(*int32)(unsafe.Pointer((_pFKey + 64) + 16*uintptr(_j)))
_29:
	goto _27

_28:
	_j++
	goto _25

_27:
	if _j != _nCol {
		goto _30
	}

	goto _21

_30:
	_1i++
	goto _19

_21:
	if _1i != _nCol {
		goto _31
	}

	goto _10

_31:
_13:
_11:
	_pIdx = *(*uintptr)(unsafe.Pointer(_pIdx + 40))
	goto _8

_10:
	if _pIdx != 0 {
		goto _32
	}

	if (*(*uint8)(unsafe.Pointer(_pParse + 194))) != 0 {
		goto _33
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+29915 /* "foreign key mismatch - \"%w\" refe..." */, *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pFKey)))), *(*uintptr)(unsafe.Pointer(_pFKey + 16)))
_33:
	_181sqlite3DbFree(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _aiCol)
	return int32(1)

_32:
	*(*uintptr)(unsafe.Pointer(_ppIdx)) = _pIdx
	return int32(0)
}

// _1650sqlite3RegisterLikeFunctions is defined at sqlite3.c:108232:21
func _1650sqlite3RegisterLikeFunctions(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _caseSensitive int32) {
	var _pInfo uintptr // *ScompareInfo

	if _caseSensitive == 0 {
		goto _1
	}

	_pInfo = _1842likeInfoAlt
	goto _2

_1:
	_pInfo = _227likeInfoNorm
_2:
	_296sqlite3CreateFunc(tls, _db, ts+17101 /* "like" */, int32(2), int32(1), _pInfo, fp6(_499likeFunc), null, null, null)
	_296sqlite3CreateFunc(tls, _db, ts+17101 /* "like" */, int32(3), int32(1), _pInfo, fp6(_499likeFunc), null, null, null)
	_296sqlite3CreateFunc(tls, _db, ts+17096 /* "glob" */, int32(2), int32(1), _197globInfo, fp6(_499likeFunc), null, null, null)
	_1843setLikeOptFlag(tls, _db, ts+17096 /* "glob" */, uint8(12))
	_1843setLikeOptFlag(tls, _db, ts+17101 /* "like" */, uint8(func() int32 {
		if _caseSensitive != 0 {
			return int32(12)
		}
		return int32(0x4)
	}()))
}

// _1651integrityCheckResultRow is defined at sqlite3.c:114603:12
func _1651integrityCheckResultRow(tls crt.TLS, _v uintptr /* *TVdbe = SVdbe */) (r int32) {
	var _addr int32

	_1240sqlite3VdbeAddOp2(tls, _v, int32(78), int32(3), int32(1))
	_addr = _1241sqlite3VdbeAddOp3(tls, _v, int32(48), int32(1), _1496sqlite3VdbeCurrentAddr(tls, _v)+int32(2), int32(1))
	_1473sqlite3VdbeAddOp0(tls, _v, int32(66))
	return _addr
}

// _1652sqlite3ExprCachePush is defined at sqlite3.c:95022:21
func _1652sqlite3ExprCachePush(tls crt.TLS, _pParse uintptr /* *TParse = SParse */) {
	(*(*int32)(unsafe.Pointer(_pParse + 72)))++
}

// _1653sqlite3ExprIfTrue is defined at sqlite3.c:96230:21
func _1653sqlite3ExprIfTrue(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pExpr uintptr /* *TExpr = SExpr */, _dest int32, _jumpIfNull int32) {
	esc := crt.MustMalloc(20)
	var (
		_v           uintptr // *TVdbe = SVdbe
		_op          int32
		_regFree1    = esc      // *int32
		_regFree2    = esc + 16 // *int32
		_r1          int32
		_r2          int32
		_d2          int32
		_destIfFalse int32
		_destIfNull  int32
	)
	defer crt.Free(esc)
	_v = *(*uintptr)(unsafe.Pointer(_pParse + 16))
	_op = int32(0)
	*(*int32)(unsafe.Pointer(_regFree1)) = int32(0)
	*(*int32)(unsafe.Pointer(_regFree2)) = int32(0)

	if _v != 0 {
		goto _1
	}

	return

_1:
	if _pExpr != 0 {
		goto _2
	}

	return

_2:
	_op = int32(*(*uint8)(unsafe.Pointer(_pExpr)))
	switch _op {
	case int32(44):
		goto _4
	case int32(43):
		goto _5
	case int32(19):
		goto _6
	case int32(45):
		goto _7
	case int32(143):
		goto _8
	case int32(56):
		goto _9
	case int32(55):
		goto _10
	case int32(54):
		goto _11
	case int32(57):
		goto _12
	case int32(52):
		goto _13
	case int32(53):
		goto _14
	case int32(50):
		goto _15
	case int32(51):
		goto _16
	case int32(48):
		goto _17
	case int32(49):
		goto _18
	default:
		goto _19
	}
_4:
	_d2 = _1541sqlite3VdbeMakeLabel(tls, _v)
	_1571sqlite3ExprIfFalse(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pExpr + 16)), _d2, _jumpIfNull^int32(0x10))
	_1652sqlite3ExprCachePush(tls, _pParse)
	_1653sqlite3ExprIfTrue(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pExpr + 24)), _dest, _jumpIfNull)
	_1569sqlite3VdbeResolveLabel(tls, _v, _d2)
	_1654sqlite3ExprCachePop(tls, _pParse)
	goto _3

_5:
	_1653sqlite3ExprIfTrue(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pExpr + 16)), _dest, _jumpIfNull)
	_1652sqlite3ExprCachePush(tls, _pParse)
	_1653sqlite3ExprIfTrue(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pExpr + 24)), _dest, _jumpIfNull)
	_1654sqlite3ExprCachePop(tls, _pParse)
	goto _3

_6:
	_1571sqlite3ExprIfFalse(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pExpr + 16)), _dest, _jumpIfNull)
	goto _3

_7:
_8:
	_op = func() int32 {
		if _op == int32(45) {
			return int32(53)
		}
		return int32(52)
	}()
	_jumpIfNull = int32(0x80)
_9:
_10:
_11:
_12:
_13:
_14:
	if _1803sqlite3ExprIsVector(tls, *(*uintptr)(unsafe.Pointer(_pExpr + 16))) == 0 {
		goto _20
	}

	goto _default_expr

_20:
	_r1 = _1804sqlite3ExprCodeTemp(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pExpr + 16)), _regFree1)
	_r2 = _1804sqlite3ExprCodeTemp(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pExpr + 24)), _regFree2)
	_1805codeCompare(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pExpr + 16)), *(*uintptr)(unsafe.Pointer(_pExpr + 24)), _op, _r1, _r2, _dest, _jumpIfNull)

	goto _3

_15:
_16:
	_r1 = _1804sqlite3ExprCodeTemp(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pExpr + 16)), _regFree1)
	_1240sqlite3VdbeAddOp2(tls, _v, _op, _r1, _dest)
	goto _3

_17:
	_1806exprCodeBetween(tls, _pParse, _pExpr, _dest, fp215(_1653sqlite3ExprIfTrue), _jumpIfNull)
	goto _3

_18:
	_destIfFalse = _1541sqlite3VdbeMakeLabel(tls, _v)
	_destIfNull = func() int32 {
		if _jumpIfNull != 0 {
			return _dest
		}
		return _destIfFalse
	}()
	_1807sqlite3ExprCodeIN(tls, _pParse, _pExpr, _destIfFalse, _destIfNull)
	_1479sqlite3VdbeGoto(tls, _v, _dest)
	_1569sqlite3VdbeResolveLabel(tls, _v, _destIfFalse)
	goto _3

_19:
	goto _default_expr
_default_expr:
	if _1808exprAlwaysTrue(tls, _pExpr) == 0 {
		goto _21
	}

	_1479sqlite3VdbeGoto(tls, _v, _dest)
	goto _22

_21:
	if _1738exprAlwaysFalse(tls, _pExpr) == 0 {
		goto _23
	}

	goto _24

_23:
	_r1 = _1804sqlite3ExprCodeTemp(tls, _pParse, _pExpr, _regFree1)
	_1241sqlite3VdbeAddOp3(tls, _v, int32(21), _r1, _dest, bool2int(_jumpIfNull != int32(0)))
_24:
_22:
	goto _3

_3:
	_1563sqlite3ReleaseTempReg(tls, _pParse, *(*int32)(unsafe.Pointer(_regFree1)))
	_1563sqlite3ReleaseTempReg(tls, _pParse, *(*int32)(unsafe.Pointer(_regFree2)))
}

// _1654sqlite3ExprCachePop is defined at sqlite3.c:95036:21
func _1654sqlite3ExprCachePop(tls crt.TLS, _pParse uintptr /* *TParse = SParse */) {
	var _i int32

	_i = int32(0)

	(*(*int32)(unsafe.Pointer(_pParse + 72)))--
_1:
	if _i >= int32(*(*uint8)(unsafe.Pointer(_pParse + 37))) {
		goto _2
	}

	if (*(*int32)(unsafe.Pointer(((_pParse + 196) + 20*uintptr(_i)) + 8))) <= (*(*int32)(unsafe.Pointer(_pParse + 72))) {
		goto _3
	}

	_1844cacheEntryClear(tls, _pParse, _i)
	goto _4

_3:
	_i++
_4:
	goto _1

_2:
}

// _1655sqlite3GenerateIndexKey is defined at sqlite3.c:106470:20
func _1655sqlite3GenerateIndexKey(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pIdx uintptr /* *TIndex = SIndex */, _iDataCur int32, _regOut int32, _prefixOnly int32, _piPartIdxLabel uintptr /* *int32 */, _pPrior uintptr /* *TIndex = SIndex */, _regPrior int32) (r int32) {
	var (
		_v       uintptr // *TVdbe = SVdbe
		_j       int32
		_regBase int32
		_nCol    int32
		_zAff    uintptr // *int8
	)
	_v = *(*uintptr)(unsafe.Pointer(_pParse + 16))
	if _piPartIdxLabel == 0 {
		goto _1
	}

	if (*(*uintptr)(unsafe.Pointer(_pIdx + 72))) == 0 {
		goto _2
	}

	*(*int32)(unsafe.Pointer(_piPartIdxLabel)) = _1541sqlite3VdbeMakeLabel(tls, _v)
	*(*int32)(unsafe.Pointer(_pParse + 68)) = _iDataCur + int32(1)
	_1652sqlite3ExprCachePush(tls, _pParse)
	_1824sqlite3ExprIfFalseDup(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pIdx + 72)), *(*int32)(unsafe.Pointer(_piPartIdxLabel)), int32(0x10))
	*(*int32)(unsafe.Pointer(_pParse + 68)) = int32(0)
	goto _3

_2:
	*(*int32)(unsafe.Pointer(_piPartIdxLabel)) = int32(0)
_3:
_1:
	_nCol = func() int32 {
		if (_prefixOnly != 0) && ((uint32((*(*uint8)(unsafe.Pointer(_pIdx + 99)))>>3) << 31 >> 31) != 0) {
			return int32(*(*uint16)(unsafe.Pointer(_pIdx + 94)))
		}
		return int32(*(*uint16)(unsafe.Pointer(_pIdx + 96)))
	}()
	_regBase = _1558sqlite3GetTempRange(tls, _pParse, _nCol)
	if _pPrior == 0 || _regBase == _regPrior && (*(*uintptr)(unsafe.Pointer(_pPrior + 72))) == 0 {
		goto _4
	}

	_pPrior = null
_4:
	_j = int32(0)
_5:
	if _j >= _nCol {
		goto _7
	}

	if _pPrior == 0 || int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPrior + 8))) + 2*uintptr(_j)))) != int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 8))) + 2*uintptr(_j)))) || int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPrior + 8))) + 2*uintptr(_j)))) == int32(-2) {
		goto _8
	}

	goto _6

_8:
	_1845sqlite3ExprCodeLoadIndexColumn(tls, _pParse, _pIdx, _iDataCur, _j, _regBase+_j)
	_1846sqlite3VdbeDeletePriorOpcode(tls, _v, uint8(81))

_6:
	_j++
	goto _5

_7:
	if _regOut == 0 {
		goto _9
	}

	_1241sqlite3VdbeAddOp3(tls, _v, int32(99), _regBase, _nCol, _regOut)
	if (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 24))) + 24))) == 0 {
		goto _10
	}

	_zAff = _1593sqlite3IndexAffinityStr(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _pIdx)
	_1075sqlite3VdbeChangeP4(tls, _v, int32(-1), _zAff, int32(0))
_10:
_9:
	_1564sqlite3ReleaseTempRange(tls, _pParse, _regBase, _nCol)
	return _regBase
}

// _1656sqlite3ResolvePartIdxLabel is defined at sqlite3.c:106533:21
func _1656sqlite3ResolvePartIdxLabel(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _iLabel int32) {
	if _iLabel == 0 {
		goto _1
	}

	_1569sqlite3VdbeResolveLabel(tls, *(*uintptr)(unsafe.Pointer(_pParse + 16)), _iLabel)
	_1654sqlite3ExprCachePop(tls, _pParse)
_1:
}

// _1657sqlite3VdbeChangeP3 is defined at sqlite3.c:73002:21
func _1657sqlite3VdbeChangeP3(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */, _addr uint32, _val int32) {
	*(*int32)(unsafe.Pointer(_1615sqlite3VdbeGetOp(tls, _p, int32(_addr)) + 12)) = _val
}

// _1658sqlite3VdbeReusable is defined at sqlite3.c:72592:21
func _1658sqlite3VdbeReusable(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */) {
	set217b(&(*(*uint16)(unsafe.Pointer(_p + 194))), uint32(0))
}

// _1659sqlite3FixTriggerStep is defined at sqlite3.c:100403:20
func _1659sqlite3FixTriggerStep(tls crt.TLS, _pFix uintptr /* *TDbFixer = SDbFixer */, _pStep uintptr /* *TTriggerStep = STriggerStep */) (r int32) {
_1:
	if _pStep == 0 {
		goto _2
	}

	if _1528sqlite3FixSelect(tls, _pFix, *(*uintptr)(unsafe.Pointer(_pStep + 16))) == 0 {
		goto _3
	}

	return int32(1)

_3:
	if _1660sqlite3FixExpr(tls, _pFix, *(*uintptr)(unsafe.Pointer(_pStep + 32))) == 0 {
		goto _4
	}

	return int32(1)

_4:
	if _1749sqlite3FixExprList(tls, _pFix, *(*uintptr)(unsafe.Pointer(_pStep + 40))) == 0 {
		goto _5
	}

	return int32(1)

_5:
	_pStep = *(*uintptr)(unsafe.Pointer(_pStep + 56))
	goto _1

_2:
	return int32(0)
}

// _1660sqlite3FixExpr is defined at sqlite3.c:100360:20
func _1660sqlite3FixExpr(tls crt.TLS, _pFix uintptr /* *TDbFixer = SDbFixer */, _pExpr uintptr /* *TExpr = SExpr */) (r int32) {
_1:
	if _pExpr == 0 {
		goto _2
	}

	if int32(*(*uint8)(unsafe.Pointer(_pExpr))) != int32(135) {
		goto _3
	}

	if (*(*uint8)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pFix))))) + 176) + 5))) == 0 {
		goto _4
	}

	*(*uint8)(unsafe.Pointer(_pExpr)) = uint8(101)
	goto _5

_4:
	_550sqlite3ErrorMsg(tls, *(*uintptr)(unsafe.Pointer(_pFix)), ts+29960 /* "%s cannot use variables" */, *(*uintptr)(unsafe.Pointer(_pFix + 32)))
	return int32(1)

_5:
_3:
	if ((*(*uint32)(unsafe.Pointer(_pExpr + 4))) & uint32(8404992)) == uint32(0) {
		goto _6
	}

	goto _2

_6:
	if ((*(*uint32)(unsafe.Pointer(_pExpr + 4))) & uint32(0x800)) == uint32(0) {
		goto _7
	}

	if _1528sqlite3FixSelect(tls, _pFix, *(*uintptr)(unsafe.Pointer(_pExpr + 32))) == 0 {
		goto _9
	}

	return int32(1)

_9:
	goto _8

_7:
	if _1749sqlite3FixExprList(tls, _pFix, *(*uintptr)(unsafe.Pointer(_pExpr + 32))) == 0 {
		goto _10
	}

	return int32(1)

_10:
_8:
	if _1660sqlite3FixExpr(tls, _pFix, *(*uintptr)(unsafe.Pointer(_pExpr + 24))) == 0 {
		goto _11
	}

	return int32(1)

_11:
	_pExpr = *(*uintptr)(unsafe.Pointer(_pExpr + 16))
	goto _1

_2:
	return int32(0)
}

// _1661sqlite3IdListDup is defined at sqlite3.c:93221:23
func _1661sqlite3IdListDup(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _p uintptr /* *TIdList = SIdList */) (r uintptr /* *TIdList = SIdList */) {
	var (
		_pNew     uintptr // *TIdList = SIdList
		_i        int32
		_pNewItem uintptr // *SIdList_item
		_pOldItem uintptr // *SIdList_item
	)

	if _p != 0 {
		goto _1
	}

	return null

_1:
	_pNew = _373sqlite3DbMallocRawNN(tls, _db, uint64(16))
	if _pNew != 0 {
		goto _2
	}

	return null

_2:
	*(*int32)(unsafe.Pointer(_pNew + 8)) = *(*int32)(unsafe.Pointer(_p + 8))
	*(*uintptr)(unsafe.Pointer(_pNew)) = _373sqlite3DbMallocRawNN(tls, _db, uint64(uint64(*(*int32)(unsafe.Pointer(_p + 8)))*uint64(16)))
	if (*(*uintptr)(unsafe.Pointer(_pNew))) != 0 {
		goto _3
	}

	_376sqlite3DbFreeNN(tls, _db, _pNew)
	return null

_3:
	_i = int32(0)
_4:
	if _i >= (*(*int32)(unsafe.Pointer(_p + 8))) {
		goto _6
	}

	_pNewItem = (*(*uintptr)(unsafe.Pointer(_pNew))) + 16*uintptr(_i)
	_pOldItem = (*(*uintptr)(unsafe.Pointer(_p))) + 16*uintptr(_i)
	*(*uintptr)(unsafe.Pointer(_pNewItem)) = _183sqlite3DbStrDup(tls, _db, *(*uintptr)(unsafe.Pointer(_pOldItem)))
	*(*int32)(unsafe.Pointer(_pNewItem + 8)) = *(*int32)(unsafe.Pointer(_pOldItem + 8))
	_i++
	goto _4

_6:
	return _pNew
}

// _1662triggerStepAllocate is defined at sqlite3.c:124321:20
func _1662triggerStepAllocate(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _op uint8, _pName uintptr /* *TToken = SToken */) (r uintptr /* *TTriggerStep = STriggerStep */) {
	var (
		_pTriggerStep uintptr // *TTriggerStep = STriggerStep
		_z            uintptr // *int8
	)
	_pTriggerStep = _295sqlite3DbMallocZero(tls, _db, uint64((uint64(72)+uint64(*(*uint32)(unsafe.Pointer(_pName + 8))))+uint64(1)))
	if _pTriggerStep == 0 {
		goto _1
	}

	_z = _pTriggerStep + 72
	crt.Xmemcpy(tls, _z, *(*uintptr)(unsafe.Pointer(_pName)), uint64(*(*uint32)(unsafe.Pointer(_pName + 8))))
	_1104sqlite3Dequote(tls, _z)
	*(*uintptr)(unsafe.Pointer(_pTriggerStep + 24)) = _z
	*(*uint8)(unsafe.Pointer(_pTriggerStep)) = _op
_1:
	return _pTriggerStep
}

// _1663sqlite3DropTriggerPtr is defined at sqlite3.c:124487:21
func _1663sqlite3DropTriggerPtr(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pTrigger uintptr /* *TTrigger = STrigger */) {
	var (
		_pTable uintptr // *TTable = STable
		_v      uintptr // *TVdbe = SVdbe
		_db     uintptr // *Tsqlite3 = Ssqlite3
		_iDb    int32
		_code   int32
		_zDb    uintptr // *int8
		_zTab   uintptr // *int8
	)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_iDb = _1069sqlite3SchemaToIndex(tls, *(*uintptr)(unsafe.Pointer(_pParse)), *(*uintptr)(unsafe.Pointer(_pTrigger + 40)))

	_pTable = _1008tableOfTrigger(tls, _pTrigger)

	_code = int32(16)
	_zDb = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)))
	_zTab = func() uintptr {
		if (1 != 0) && (_iDb == int32(1)) {
			return ts + 5250 /* "sqlite_temp_master" */
		}
		return ts + 5127 /* "sqlite_master" */
	}()
	if _iDb != int32(1) {
		goto _1
	}

	_code = int32(14)
_1:
	if _1480sqlite3AuthCheck(tls, _pParse, _code, *(*uintptr)(unsafe.Pointer(_pTrigger)), *(*uintptr)(unsafe.Pointer(_pTable)), _zDb) == 0 && _1480sqlite3AuthCheck(tls, _pParse, int32(9), _zTab, null, _zDb) == 0 {
		goto _2
	}

	return

_2:
	if set4(&_v, _1472sqlite3GetVdbe(tls, _pParse)) == 0 {
		goto _3
	}

	_1502sqlite3NestedParse(tls, _pParse, ts+29984 /* "DELETE FROM %Q.%s WHERE name=%Q ..." */, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb))), ts+5127 /* "sqlite_master" */, *(*uintptr)(unsafe.Pointer(_pTrigger)))
	_1503sqlite3ChangeCookie(tls, _pParse, _iDb)
	_1475sqlite3VdbeAddOp4(tls, _v, int32(141), _iDb, int32(0), int32(0), *(*uintptr)(unsafe.Pointer(_pTrigger)), int32(0))
_3:
}

// _1664attach_func TFuncDef = SFuncDef, escapes: true, sqlite3.c:100246:24
var _1664attach_func = bss + 16576 // FuncDef

func init() {
	*(*SFuncDef)(unsafe.Pointer(_1664attach_func)) = SFuncDef{
		XnArg:      int8(3),
		XfuncFlags: uint16(1),
		XxSFunc:    fp6(_1847attachFunc),
		XzName:     ts + 30035, /* "sqlite_attach" */
	}
}

// _1665codeAttach is defined at sqlite3.c:100152:13
func _1665codeAttach(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _type int32, _pFunc uintptr /* *TFuncDef = SFuncDef */, _pAuthArg uintptr /* *TExpr = SExpr */, _pFilename uintptr /* *TExpr = SExpr */, _pDbname uintptr /* *TExpr = SExpr */, _pKey uintptr /* *TExpr = SExpr */) {
	esc := crt.MustMalloc(56)
	var (
		_rc       int32
		_sName    = esc   // *TNameContext = SNameContext
		_v        uintptr // *TVdbe = SVdbe
		_db       uintptr // *Tsqlite3 = Ssqlite3
		_regArgs  int32
		_zAuthArg uintptr // *int8
	)
	defer crt.Free(esc)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	if (*(*int32)(unsafe.Pointer(_pParse + 48))) == 0 {
		goto _1
	}

	goto _attach_end

_1:
	crt.Xmemset(tls, _sName, int32(0), uint64(56))
	*(*uintptr)(unsafe.Pointer(_sName)) = _pParse
	if int32(0) == set5(&_rc, _1848resolveAttachExpr(tls, _sName, _pFilename)) && int32(0) == set5(&_rc, _1848resolveAttachExpr(tls, _sName, _pDbname)) && int32(0) == set5(&_rc, _1848resolveAttachExpr(tls, _sName, _pKey)) {
		goto _2
	}

	goto _attach_end

_2:
	if _pAuthArg == 0 {
		goto _3
	}

	if int32(*(*uint8)(unsafe.Pointer(_pAuthArg))) != int32(97) {
		goto _4
	}

	_zAuthArg = *(*uintptr)(unsafe.Pointer(_pAuthArg + 8))
	goto _5

_4:
	_zAuthArg = null
_5:
	_rc = _1480sqlite3AuthCheck(tls, _pParse, _type, _zAuthArg, null, null)
	if _rc == int32(0) {
		goto _6
	}

	goto _attach_end

_6:
_3:
	_v = _1472sqlite3GetVdbe(tls, _pParse)
	_regArgs = _1558sqlite3GetTempRange(tls, _pParse, int32(4))
	_1478sqlite3ExprCode(tls, _pParse, _pFilename, _regArgs)
	_1478sqlite3ExprCode(tls, _pParse, _pDbname, _regArgs+int32(1))
	_1478sqlite3ExprCode(tls, _pParse, _pKey, _regArgs+int32(2))

	if _v == 0 {
		goto _7
	}

	_1475sqlite3VdbeAddOp4(tls, _v, int32(162), int32(0), (_regArgs+int32(3))-int32(*(*int8)(unsafe.Pointer(_pFunc))), _regArgs+int32(3), _pFunc, int32(-8))

	_1072sqlite3VdbeChangeP5(tls, _v, uint16(uint8(*(*int8)(unsafe.Pointer(_pFunc)))))
	_1489sqlite3VdbeAddOp1(tls, _v, int32(151), bool2int(_type == int32(24)))
_7:
	goto _attach_end
_attach_end:
	_777sqlite3ExprDelete(tls, _db, _pFilename)
	_777sqlite3ExprDelete(tls, _db, _pDbname)
	_777sqlite3ExprDelete(tls, _db, _pKey)
}

// _1666detach_func TFuncDef = SFuncDef, escapes: true, sqlite3.c:100227:24
var _1666detach_func = bss + 16632 // FuncDef

func init() {
	*(*SFuncDef)(unsafe.Pointer(_1666detach_func)) = SFuncDef{
		XnArg:      int8(1),
		XfuncFlags: uint16(1),
		XxSFunc:    fp6(_1849detachFunc),
		XzName:     ts + 30049, /* "sqlite_detach" */
	}
}

// _1667reindexDatabases is defined at sqlite3.c:104952:13
func _1667reindexDatabases(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _zColl uintptr /* *int8 */) {
	var (
		_pDb  uintptr // *TDb = SDb
		_iDb  int32
		_db   uintptr // *Tsqlite3 = Ssqlite3
		_k    uintptr // *THashElem = SHashElem
		_pTab uintptr // *TTable = STable
	)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))

	_iDb = int32(0)
	_pDb = *(*uintptr)(unsafe.Pointer(_db + 32))
_1:
	if _iDb >= (*(*int32)(unsafe.Pointer(_db + 40))) {
		goto _3
	}

	_k = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pDb + 24))) + 8) + 8))
_4:
	if _k == 0 {
		goto _6
	}

	_pTab = *(*uintptr)(unsafe.Pointer(_k + 16))
	_1668reindexTable(tls, _pParse, _pTab, _zColl)
	_k = *(*uintptr)(unsafe.Pointer(_k))
	goto _4

_6:
	_iDb++
	_pDb += 32
	goto _1

_3:
}

// _1668reindexTable is defined at sqlite3.c:104933:13
func _1668reindexTable(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pTab uintptr /* *TTable = STable */, _zColl uintptr /* *int8 */) {
	var (
		_pIndex uintptr // *TIndex = SIndex
		_iDb    int32
	)
	_pIndex = *(*uintptr)(unsafe.Pointer(_pTab + 16))
_1:
	if _pIndex == 0 {
		goto _3
	}

	if _zColl != 0 && _1850collationMatch(tls, _zColl, _pIndex) == 0 {
		goto _4
	}

	_iDb = _1069sqlite3SchemaToIndex(tls, *(*uintptr)(unsafe.Pointer(_pParse)), *(*uintptr)(unsafe.Pointer(_pTab + 112)))
	_1488sqlite3BeginWriteOperation(tls, _pParse, int32(0), _iDb)
	_1522sqlite3RefillIndex(tls, _pParse, _pIndex, int32(-1))
_4:
	_pIndex = *(*uintptr)(unsafe.Pointer(_pIndex + 40))
	goto _1

_3:
}

// _1669analyzeDatabase is defined at sqlite3.c:99241:13
func _1669analyzeDatabase(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _iDb int32) {
	var (
		_db       uintptr // *Tsqlite3 = Ssqlite3
		_pSchema  uintptr // *TSchema = SSchema
		_k        uintptr // *THashElem = SHashElem
		_iStatCur int32
		_iMem     int32
		_iTab     int32
		_pTab     uintptr // *TTable = STable
	)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_pSchema = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)) + 24))
	_1488sqlite3BeginWriteOperation(tls, _pParse, int32(0), _iDb)
	_iStatCur = *(*int32)(unsafe.Pointer(_pParse + 52))
	{
		p := &(*(*int32)(unsafe.Pointer(_pParse + 52)))
		*p = int32(int32(*p) + int32(3))
	}
	_1851openStatTable(tls, _pParse, _iDb, _iStatCur, null, null)
	_iMem = (*(*int32)(unsafe.Pointer(_pParse + 56))) + int32(1)
	_iTab = *(*int32)(unsafe.Pointer(_pParse + 52))

	_k = *(*uintptr)(unsafe.Pointer((_pSchema + 8) + 8))
_1:
	if _k == 0 {
		goto _3
	}

	_pTab = *(*uintptr)(unsafe.Pointer(_k + 16))
	_1852analyzeOneTable(tls, _pParse, _pTab, null, _iStatCur, _iMem, _iTab)
	_k = *(*uintptr)(unsafe.Pointer(_k))
	goto _1

_3:
	_1853loadAnalysis(tls, _pParse, _iDb)
}

// _1670sqlite3FindDb is defined at sqlite3.c:101434:20
func _1670sqlite3FindDb(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pName uintptr /* *TToken = SToken */) (r int32) {
	var (
		_i     int32
		_zName uintptr // *int8
	)
	_zName = _1482sqlite3NameFromToken(tls, _db, _pName)
	_i = _213sqlite3FindDbName(tls, _db, _zName)
	_181sqlite3DbFree(tls, _db, _zName)
	return _i
}

// _1671analyzeTable is defined at sqlite3.c:99268:13
func _1671analyzeTable(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pTab uintptr /* *TTable = STable */, _pOnlyIdx uintptr /* *TIndex = SIndex */) {
	var (
		_iDb      int32
		_iStatCur int32
	)

	_iDb = _1069sqlite3SchemaToIndex(tls, *(*uintptr)(unsafe.Pointer(_pParse)), *(*uintptr)(unsafe.Pointer(_pTab + 112)))
	_1488sqlite3BeginWriteOperation(tls, _pParse, int32(0), _iDb)
	_iStatCur = *(*int32)(unsafe.Pointer(_pParse + 52))
	{
		p := &(*(*int32)(unsafe.Pointer(_pParse + 52)))
		*p = int32(int32(*p) + int32(3))
	}
	if _pOnlyIdx == 0 {
		goto _1
	}

	_1851openStatTable(tls, _pParse, _iDb, _iStatCur, *(*uintptr)(unsafe.Pointer(_pOnlyIdx)), ts+26814 /* "idx" */)
	goto _2

_1:
	_1851openStatTable(tls, _pParse, _iDb, _iStatCur, *(*uintptr)(unsafe.Pointer(_pTab)), ts+26057 /* "tbl" */)
_2:
	_1852analyzeOneTable(tls, _pParse, _pTab, _pOnlyIdx, _iStatCur, (*(*int32)(unsafe.Pointer(_pParse + 56)))+int32(1), *(*int32)(unsafe.Pointer(_pParse + 52)))
	_1853loadAnalysis(tls, _pParse, _iDb)
}

// _1672isSystemTable is defined at sqlite3.c:97498:12
func _1672isSystemTable(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _zName uintptr /* *int8 */) (r int32) {
	if int32(0) != Xsqlite3_strnicmp(tls, _zName, ts+6844 /* "sqlite_" */, int32(7)) {
		goto _1
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+30063 /* "table %s may not be altered" */, _zName)
	return int32(1)

_1:
	return int32(0)
}

// _1673whereForeignKeys is defined at sqlite3.c:97399:13
func _1673whereForeignKeys(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pTab uintptr /* *TTable = STable */) (r uintptr /* *int8 */) {
	var (
		_p      uintptr // *TFKey = SFKey
		_zWhere uintptr // *int8
	)
	_zWhere = 0
	_p = _1618sqlite3FkReferences(tls, _pTab)
_1:
	if _p == 0 {
		goto _3
	}

	_zWhere = _1854whereOrName(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _zWhere, *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_p)))))
	_p = *(*uintptr)(unsafe.Pointer(_p + 24))
	goto _1

_3:
	return _zWhere
}

// _1674whereTempTriggers is defined at sqlite3.c:97415:13
func _1674whereTempTriggers(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pTab uintptr /* *TTable = STable */) (r uintptr /* *int8 */) {
	var (
		_pTrig       uintptr // *TTrigger = STrigger
		_zWhere      uintptr // *int8
		_pTempSchema uintptr // *TSchema = SSchema
		_db          uintptr // *Tsqlite3 = Ssqlite3
		_zNew        uintptr // *int8
	)
	_zWhere = 0
	_pTempSchema = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pParse))) + 32))) + 32) + 24))
	if (*(*uintptr)(unsafe.Pointer(_pTab + 112))) == _pTempSchema {
		goto _1
	}

	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_pTrig = _1746sqlite3TriggerList(tls, _pParse, _pTab)
_2:
	if _pTrig == 0 {
		goto _4
	}

	if (*(*uintptr)(unsafe.Pointer(_pTrig + 40))) != _pTempSchema {
		goto _5
	}

	_zWhere = _1854whereOrName(tls, _db, _zWhere, *(*uintptr)(unsafe.Pointer(_pTrig)))
_5:
	_pTrig = *(*uintptr)(unsafe.Pointer(_pTrig + 64))
	goto _2

_4:
_1:
	if _zWhere == 0 {
		goto _6
	}

	_zNew = _226sqlite3MPrintf(tls, *(*uintptr)(unsafe.Pointer(_pParse)), ts+30091 /* "type='trigger' AND (%s)" */, _zWhere)
	_181sqlite3DbFree(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _zWhere)
	_zWhere = _zNew
_6:
	return _zWhere
}

// _1675reloadTableSchema is defined at sqlite3.c:97449:13
func _1675reloadTableSchema(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pTab uintptr /* *TTable = STable */, _zName uintptr /* *int8 */) {
	var (
		_v       uintptr // *TVdbe = SVdbe
		_zWhere  uintptr // *int8
		_iDb     int32
		_pTrig   uintptr // *TTrigger = STrigger
		_iTrigDb int32
	)
	_v = _1472sqlite3GetVdbe(tls, _pParse)
	if _v != 0 {
		goto _1
	}

	return

_1:
	_iDb = _1069sqlite3SchemaToIndex(tls, *(*uintptr)(unsafe.Pointer(_pParse)), *(*uintptr)(unsafe.Pointer(_pTab + 112)))

	_pTrig = _1746sqlite3TriggerList(tls, _pParse, _pTab)
_2:
	if _pTrig == 0 {
		goto _4
	}

	_iTrigDb = _1069sqlite3SchemaToIndex(tls, *(*uintptr)(unsafe.Pointer(_pParse)), *(*uintptr)(unsafe.Pointer(_pTrig + 40)))

	_1475sqlite3VdbeAddOp4(tls, _v, int32(141), _iTrigDb, int32(0), int32(0), *(*uintptr)(unsafe.Pointer(_pTrig)), int32(0))
	_pTrig = *(*uintptr)(unsafe.Pointer(_pTrig + 64))
	goto _2

_4:
	_1475sqlite3VdbeAddOp4(tls, _v, int32(139), _iDb, int32(0), int32(0), *(*uintptr)(unsafe.Pointer(_pTab)), int32(0))
	_zWhere = _226sqlite3MPrintf(tls, *(*uintptr)(unsafe.Pointer(_pParse)), ts+30115 /* "tbl_name=%Q" */, _zName)
	if _zWhere != 0 {
		goto _5
	}

	return

_5:
	_1504sqlite3VdbeAddParseSchemaOp(tls, _v, _iDb, _zWhere)
	if set4(&_zWhere, _1674whereTempTriggers(tls, _pParse, _pTab)) == 0 {
		goto _6
	}

	_1504sqlite3VdbeAddParseSchemaOp(tls, _v, int32(1), _zWhere)
_6:
}

// _1676sqlite3ValueFromExpr is defined at sqlite3.c:71860:20
func _1676sqlite3ValueFromExpr(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pExpr uintptr /* *TExpr = SExpr */, _enc uint8, _affinity uint8, _ppVal uintptr /* **Tsqlite3_value = Ssqlite3_value */) (r int32) {
	if _pExpr != 0 {
		return _1855valueFromExpr(tls, _db, _pExpr, _enc, _affinity, _ppVal, null)
	}

	return int32(0)
}

// _1677addArgumentToVtab is defined at sqlite3.c:126685:13
func _1677addArgumentToVtab(tls crt.TLS, _pParse uintptr /* *TParse = SParse */) {
	var (
		_z  uintptr // *int8
		_n  int32
		_db uintptr // *Tsqlite3 = Ssqlite3
	)
	if (*(*uintptr)(unsafe.Pointer(_pParse + 536))) == 0 || (*(*uintptr)(unsafe.Pointer(_pParse + 512))) == 0 {
		goto _1
	}

	_z = *(*uintptr)(unsafe.Pointer(_pParse + 536))
	_n = int32(*(*uint32)(unsafe.Pointer((_pParse + 536) + 8)))
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_1422addModuleArgument(tls, _db, *(*uintptr)(unsafe.Pointer(_pParse + 512)), _618sqlite3DbStrNDup(tls, _db, _z, uint64(_n)))
_1:
}

// _1678yy_reduce_ofst [324]int16, escapes: true, sqlite3.c:137685:20
var _1678yy_reduce_ofst = ds + 16954

// _1679sqlite3PcacheRef is defined at sqlite3.c:45212:21
func _1679sqlite3PcacheRef(tls crt.TLS, _p uintptr /* *TPgHdr = SPgHdr */) {
	(*(*int16)(unsafe.Pointer(_p + 54)))++
	(*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 24))) + 24)))++
}

// _1680sqlite3PagerTempSpace is defined at sqlite3.c:51294:21
func _1680sqlite3PagerTempSpace(tls crt.TLS, _pPager uintptr /* *TPager = SPager */) (r uintptr /* *void */) {
	return *(*uintptr)(unsafe.Pointer(_pPager + 272))
}

// _1681computeCellSize is defined at sqlite3.c:66276:28
func _1681computeCellSize(tls crt.TLS, _p uintptr /* *TCellArray = SCellArray */, _N int32) (r uint16) {
	*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 24))) + 2*uintptr(_N))) = fn144(*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 8))) + 120)))(tls, *(*uintptr)(unsafe.Pointer(_p + 8)), *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 16))) + 8*uintptr(_N))))
	return *(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 24))) + 2*uintptr(_N)))
}

// _1682pageFreeArray is defined at sqlite3.c:66416:12
func _1682pageFreeArray(tls crt.TLS, _pPg uintptr /* *TMemPage = SMemPage */, _iFirst int32, _nCell int32, _pCArray uintptr /* *TCellArray = SCellArray */) (r int32) {
	var (
		_aData  uintptr // *Tu8 = uint8
		_pEnd   uintptr // *Tu8 = uint8
		_pStart uintptr // *Tu8 = uint8
		_nRet   int32
		_i      int32
		_iEnd   int32
		_pFree  uintptr // *Tu8 = uint8
		_szFree int32
		_pCell  uintptr // *Tu8 = uint8
		_sz     int32
	)
	_aData = *(*uintptr)(unsafe.Pointer(_pPg + 80))
	_pEnd = _aData + uintptr(*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPg + 72))) + 52)))
	_pStart = _aData + uintptr((int32(*(*uint8)(unsafe.Pointer(_pPg + 9)))+int32(8))+int32(*(*uint8)(unsafe.Pointer(_pPg + 10))))
	_nRet = int32(0)
	_iEnd = _iFirst + _nCell
	_pFree = 0
	_szFree = int32(0)
	_i = _iFirst
_1:
	if _i >= _iEnd {
		goto _3
	}

	_pCell = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pCArray + 16))) + 8*uintptr(_i)))
	if uint64(_pCell) < uint64(_pStart) || uint64(_pCell) >= uint64(_pEnd) {
		goto _4
	}

	_sz = int32(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pCArray + 24))) + 2*uintptr(_i))))

	if _pFree == _pCell+uintptr(_sz) {
		goto _5
	}

	if _pFree == 0 {
		goto _7
	}

	_1196freeSpace(tls, _pPg, uint16(int64(_pFree-_aData)), uint16(_szFree))
_7:
	_pFree = _pCell
	_szFree = _sz
	if (_pFree + uintptr(_sz)) <= _pEnd {
		goto _8
	}

	return int32(0)

_8:
	goto _6

_5:
	_pFree = _pCell
	_szFree = int32(_szFree + _sz)
_6:
	_nRet++
_4:
	_i++
	goto _1

_3:
	if _pFree == 0 {
		goto _9
	}

	_1196freeSpace(tls, _pPg, uint16(int64(_pFree-_aData)), uint16(_szFree))
_9:
	return _nRet
}

// _1683pageInsertArray is defined at sqlite3.c:66370:12
func _1683pageInsertArray(tls crt.TLS, _pPg uintptr /* *TMemPage = SMemPage */, _pBegin uintptr /* *Tu8 = uint8 */, _ppData uintptr /* **Tu8 = uint8 */, _pCellptr uintptr /* *Tu8 = uint8 */, _iFirst int32, _nCell int32, _pCArray uintptr /* *TCellArray = SCellArray */) (r int32) {
	esc := crt.MustMalloc(4)
	var (
		_i     int32
		_aData uintptr // *Tu8 = uint8
		_pData uintptr // *Tu8 = uint8
		_iEnd  int32
		_sz    int32
		_rc    = esc   // *int32
		_pSlot uintptr // *Tu8 = uint8
	)
	defer crt.Free(esc)
	_aData = *(*uintptr)(unsafe.Pointer(_pPg + 80))
	_pData = *(*uintptr)(unsafe.Pointer(_ppData))
	_iEnd = _iFirst + _nCell

	_i = _iFirst
_1:
	if _i >= _iEnd {
		goto _3
	}

	_sz = int32(_1395cachedCellSize(tls, _pCArray, _i))
	if (int32(*(*uint8)(unsafe.Pointer(_aData + 1))) != int32(0) || int32(*(*uint8)(unsafe.Pointer(_aData + 2))) != int32(0)) && set4(&_pSlot, _1391pageFindSlot(tls, _pPg, _sz, _rc)) != 0 {
		goto _4
	}

	if int64(_pData-_pBegin) >= int64(_sz) {
		goto _5
	}

	return int32(1)

_5:
	_pData -= uintptr(_sz)
	_pSlot = _pData
_4:
	crt.Xmemmove(tls, _pSlot, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pCArray + 16))) + 8*uintptr(_i))), uint64(_sz))
	*(*uint8)(unsafe.Pointer(_pCellptr)) = uint8(int64(_pSlot-_aData) >> (uint(8) % 64))
	*(*uint8)(unsafe.Pointer(_pCellptr + 1)) = uint8(int64(_pSlot - _aData))
	_pCellptr += uintptr(2)
	_i++
	goto _1

_3:
	*(*uintptr)(unsafe.Pointer(_ppData)) = _pData
	return int32(0)
}

// _1684populateCellCache is defined at sqlite3.c:66258:13
func _1684populateCellCache(tls crt.TLS, _p uintptr /* *TCellArray = SCellArray */, _idx int32, _N int32) {
_1:
	if _N <= int32(0) {
		goto _2
	}

	if int32(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 24))) + 2*uintptr(_idx)))) != int32(0) {
		goto _3
	}

	*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 24))) + 2*uintptr(_idx))) = fn144(*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 8))) + 120)))(tls, *(*uintptr)(unsafe.Pointer(_p + 8)), *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 16))) + 8*uintptr(_idx))))
	goto _4

_3:
_4:
	_idx++
	_N--
	goto _1

_2:
}

// _1685aLen [10]uint8, escapes: true, sqlite3.c:87776:21
var _1685aLen = ds + 17602

// _1686vdbeSorterCompareTail is defined at sqlite3.c:87670:12
func _1686vdbeSorterCompareTail(tls crt.TLS, _pTask uintptr /* *TSortSubtask = SSortSubtask */, _pbKey2Cached uintptr /* *int32 */, _pKey1 uintptr /* *void */, _nKey1 int32, _pKey2 uintptr /* *void */, _nKey2 int32) (r int32) {
	var _r2 uintptr // *TUnpackedRecord = SUnpackedRecord

	_r2 = *(*uintptr)(unsafe.Pointer(_pTask + 24))
	if (*(*int32)(unsafe.Pointer(_pbKey2Cached))) != int32(0) {
		goto _1
	}

	_691sqlite3VdbeRecordUnpack(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTask + 16))) + 40)), _nKey2, _pKey2, _r2)
	*(*int32)(unsafe.Pointer(_pbKey2Cached)) = int32(1)
_1:
	return _1202sqlite3VdbeRecordCompareWithSkip(tls, _nKey1, _pKey1, _r2, int32(1))
}

// _1687vdbePmaReaderInit is defined at sqlite3.c:87637:12
func _1687vdbePmaReaderInit(tls crt.TLS, _pTask uintptr /* *TSortSubtask = SSortSubtask */, _pFile uintptr /* *TSorterFile = SSorterFile */, _iStart int64, _pReadr uintptr /* *TPmaReader = SPmaReader */, _pnByte uintptr /* *Ti64 = Tsqlite_int64 = int64 */) (r int32) {
	esc := crt.MustMalloc(8)
	var (
		_rc    int32
		_nByte = esc // *Tu64 = Tsqlite_uint64 = uint64
	)
	defer crt.Free(esc)

	_rc = _1217vdbePmaReaderSeek(tls, _pTask, _pReadr, _pFile, _iStart)
	if _rc != int32(0) {
		goto _1
	}

	*(*uint64)(unsafe.Pointer(_nByte)) = uint64(0)
	_rc = _1218vdbePmaReadVarint(tls, _pReadr, _nByte)
	*(*int64)(unsafe.Pointer(_pReadr + 8)) = int64(uint64(*(*int64)(unsafe.Pointer(_pReadr))) + (*(*uint64)(unsafe.Pointer(_nByte))))
	{
		p := &(*(*int64)(unsafe.Pointer(_pnByte)))
		*p = int64(uint64(*p) + (*(*uint64)(unsafe.Pointer(_nByte))))
	}
_1:
	if _rc != int32(0) {
		goto _2
	}

	_rc = _992vdbePmaReaderNext(tls, _pReadr)
_2:
	return _rc
}

// _1688vdbeIncrPopulateThread is defined at sqlite3.c:88824:13
func _1688vdbeIncrPopulateThread(tls crt.TLS, _pCtx uintptr /* *void */) (r uintptr /* *void */) {
	var (
		_pIncr uintptr // *TIncrMerger = SIncrMerger
		_pRet  uintptr // *void
	)
	_pIncr = _pCtx
	_pRet = uintptr(int64(_1415vdbeIncrPopulate(tls, _pIncr)))
	*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIncr))) + 8)) = int32(1)
	return _pRet
}

// _1689aPragmaName [58]struct{XzName *int8;XePragTy...XnPragCName uint8;XiArg uint32;}, escapes: true, sqlite3.c:113811:25
var _1689aPragmaName = bss + 16688 // array of 58 PragmaName

func init() {
	*(*[58]struct {
		XzName      uintptr // *int8
		XePragTyp   uint8
		XmPragFlg   uint8
		XiPragCName uint8
		XnPragCName uint8
		XiArg       uint32
	})(unsafe.Pointer(_1689aPragmaName)) = [58]struct {
		XzName      uintptr // *int8
		XePragTyp   uint8
		XmPragFlg   uint8
		XiPragCName uint8
		XnPragCName uint8
		XiArg       uint32
	}{
		0:
		// *int8

		{
			XzName:    ts + 30127, /* "application_id" */
			XmPragFlg: uint8(20),
			XiArg:     uint32(8),
		},
		1:
		// *int8

		{
			XzName:    ts + 30142, /* "auto_vacuum" */
			XePragTyp: uint8(1),
			XmPragFlg: uint8(149),
		},
		2:
		// *int8

		{
			XzName:    ts + 30154, /* "automatic_index" */
			XePragTyp: uint8(2),
			XmPragFlg: uint8(20),
			XiArg:     uint32(0x8000),
		},
		3:
		// *int8

		{
			XzName:      ts + 30170, /* "busy_timeout" */
			XePragTyp:   uint8(3),
			XmPragFlg:   uint8(0x10),
			XiPragCName: uint8(49),
			XnPragCName: uint8(1),
		},
		4:
		// *int8

		{
			XzName:    ts + 30183, /* "cache_size" */
			XePragTyp: uint8(4),
			XmPragFlg: uint8(149),
		},
		5:
		// *int8

		{
			XzName:    ts + 30194, /* "cache_spill" */
			XePragTyp: uint8(5),
			XmPragFlg: uint8(148),
		},
		6:
		// *int8

		{
			XzName:    ts + 30206, /* "case_sensitive_like" */
			XePragTyp: uint8(6),
			XmPragFlg: uint8(0x2),
		},
		7:
		// *int8

		{
			XzName:    ts + 30226, /* "cell_size_check" */
			XePragTyp: uint8(2),
			XmPragFlg: uint8(20),
			XiArg:     uint32(0x200000),
		},
		8:
		// *int8

		{
			XzName:    ts + 30242, /* "checkpoint_fullfsync" */
			XePragTyp: uint8(2),
			XmPragFlg: uint8(20),
			XiArg:     uint32(0x10),
		},
		9:
		// *int8

		{
			XzName:      ts + 30263, /* "collation_list" */
			XePragTyp:   uint8(7),
			XmPragFlg:   uint8(0x10),
			XiPragCName: uint8(32),
			XnPragCName: uint8(2),
		},
		10:
		// *int8

		{
			XzName:    ts + 30278, /* "compile_options" */
			XePragTyp: uint8(8),
			XmPragFlg: uint8(0x10),
		},
		11:
		// *int8

		{
			XzName:    ts + 30294, /* "count_changes" */
			XePragTyp: uint8(2),
			XmPragFlg: uint8(20),
			XiArg:     uint32(0x80),
		},
		12:
		// *int8

		{
			XzName:    ts + 30308, /* "data_version" */
			XmPragFlg: uint8(24),
			XiArg:     uint32(15),
		},
		13:
		// *int8

		{
			XzName:      ts + 30321, /* "database_list" */
			XePragTyp:   uint8(10),
			XmPragFlg:   uint8(17),
			XiPragCName: uint8(26),
			XnPragCName: uint8(3),
		},
		14:
		// *int8

		{
			XzName:      ts + 30335, /* "default_cache_size" */
			XePragTyp:   uint8(11),
			XmPragFlg:   uint8(149),
			XnPragCName: uint8(1),
		},
		15:
		// *int8

		{
			XzName:    ts + 30354, /* "defer_foreign_keys" */
			XePragTyp: uint8(2),
			XmPragFlg: uint8(20),
			XiArg:     uint32(0x80000),
		},
		16:
		// *int8

		{
			XzName:    ts + 30373, /* "empty_result_callbacks" */
			XePragTyp: uint8(2),
			XmPragFlg: uint8(20),
			XiArg:     uint32(0x100),
		},
		17:
		// *int8

		{
			XzName:    ts + 30396, /* "encoding" */
			XePragTyp: uint8(12),
			XmPragFlg: uint8(20),
		},
		18:
		// *int8

		{
			XzName:      ts + 30405, /* "foreign_key_check" */
			XePragTyp:   uint8(13),
			XmPragFlg:   uint8(17),
			XiPragCName: uint8(42),
			XnPragCName: uint8(4),
		},
		19:
		// *int8

		{
			XzName:      ts + 30423, /* "foreign_key_list" */
			XePragTyp:   uint8(14),
			XmPragFlg:   uint8(97),
			XiPragCName: uint8(34),
			XnPragCName: uint8(8),
		},
		20:
		// *int8

		{
			XzName:    ts + 30440, /* "foreign_keys" */
			XePragTyp: uint8(2),
			XmPragFlg: uint8(20),
			XiArg:     uint32(0x4000),
		},
		21:
		// *int8

		{
			XzName:    ts + 30453, /* "freelist_count" */
			XmPragFlg: uint8(24),
		},
		22:
		// *int8

		{
			XzName:    ts + 30468, /* "full_column_names" */
			XePragTyp: uint8(2),
			XmPragFlg: uint8(20),
			XiArg:     uint32(0x4),
		},
		23:
		// *int8

		{
			XzName:    ts + 30486, /* "fullfsync" */
			XePragTyp: uint8(2),
			XmPragFlg: uint8(20),
			XiArg:     uint32(0x8),
		},
		24:
		// *int8

		{
			XzName:    ts + 30496, /* "ignore_check_constraints" */
			XePragTyp: uint8(2),
			XmPragFlg: uint8(20),
			XiArg:     uint32(0x200),
		},
		25:
		// *int8

		{
			XzName:    ts + 30521, /* "incremental_vacuum" */
			XePragTyp: uint8(16),
			XmPragFlg: uint8(3),
		},
		26:
		// *int8

		{
			XzName:      ts + 30540, /* "index_info" */
			XePragTyp:   uint8(17),
			XmPragFlg:   uint8(97),
			XiPragCName: uint8(12),
			XnPragCName: uint8(3),
		},
		27:
		// *int8

		{
			XzName:      ts + 30551, /* "index_list" */
			XePragTyp:   uint8(18),
			XmPragFlg:   uint8(97),
			XiPragCName: uint8(21),
			XnPragCName: uint8(5),
		},
		28:
		// *int8

		{
			XzName:      ts + 30562, /* "index_xinfo" */
			XePragTyp:   uint8(17),
			XmPragFlg:   uint8(97),
			XiPragCName: uint8(15),
			XnPragCName: uint8(6),
			XiArg:       uint32(1),
		},
		29:
		// *int8

		{
			XzName:    ts + 30574, /* "integrity_check" */
			XePragTyp: uint8(19),
			XmPragFlg: uint8(49),
		},
		30:
		// *int8

		{
			XzName:    ts + 30590, /* "journal_mode" */
			XePragTyp: uint8(20),
			XmPragFlg: uint8(145),
		},
		31:
		// *int8

		{
			XzName:    ts + 30603, /* "journal_size_limit" */
			XePragTyp: uint8(21),
			XmPragFlg: uint8(144),
		},
		32:
		// *int8

		{
			XzName:    ts + 30622, /* "legacy_file_format" */
			XePragTyp: uint8(2),
			XmPragFlg: uint8(20),
			XiArg:     uint32(0x2),
		},
		33:
		// *int8

		{
			XzName:    ts + 30641, /* "locking_mode" */
			XePragTyp: uint8(23),
			XmPragFlg: uint8(144),
		},
		34:
		// *int8

		{
			XzName:    ts + 30654, /* "max_page_count" */
			XePragTyp: uint8(24),
			XmPragFlg: uint8(145),
		},
		35:
		// *int8

		{
			XzName:    ts + 30669, /* "mmap_size" */
			XePragTyp: uint8(25),
		},
		36:
		// *int8

		{
			XzName:    ts + 30679, /* "optimize" */
			XePragTyp: uint8(27),
			XmPragFlg: uint8(33),
		},
		37:
		// *int8

		{
			XzName:    ts + 30688, /* "page_count" */
			XePragTyp: uint8(24),
			XmPragFlg: uint8(145),
		},
		38:
		// *int8

		{
			XzName:    ts + 30699, /* "page_size" */
			XePragTyp: uint8(28),
			XmPragFlg: uint8(148),
		},
		39:
		// *int8

		{
			XzName:    ts + 30709, /* "query_only" */
			XePragTyp: uint8(2),
			XmPragFlg: uint8(20),
			XiArg:     uint32(0x100000),
		},
		40:
		// *int8

		{
			XzName:    ts + 30720, /* "quick_check" */
			XePragTyp: uint8(19),
			XmPragFlg: uint8(49),
		},
		41:
		// *int8

		{
			XzName:    ts + 30732, /* "read_uncommitted" */
			XePragTyp: uint8(2),
			XmPragFlg: uint8(20),
			XiArg:     uint32(0x400),
		},
		42:
		// *int8

		{
			XzName:    ts + 30749, /* "recursive_triggers" */
			XePragTyp: uint8(2),
			XmPragFlg: uint8(20),
			XiArg:     uint32(0x2000),
		},
		43:
		// *int8

		{
			XzName:    ts + 30768, /* "reverse_unordered_selects" */
			XePragTyp: uint8(2),
			XmPragFlg: uint8(20),
			XiArg:     uint32(0x1000),
		},
		44:
		// *int8

		{
			XzName:    ts + 30794, /* "schema_version" */
			XmPragFlg: uint8(20),
			XiArg:     uint32(1),
		},
		45:
		// *int8

		{
			XzName:    ts + 30809, /* "secure_delete" */
			XePragTyp: uint8(30),
			XmPragFlg: uint8(0x10),
		},
		46:
		// *int8

		{
			XzName:    ts + 30823, /* "short_column_names" */
			XePragTyp: uint8(2),
			XmPragFlg: uint8(20),
			XiArg:     uint32(0x40),
		},
		47:
		// *int8

		{
			XzName:    ts + 30842, /* "shrink_memory" */
			XePragTyp: uint8(31),
			XmPragFlg: uint8(0x2),
		},
		48:
		// *int8

		{
			XzName:    ts + 30856, /* "soft_heap_limit" */
			XePragTyp: uint8(32),
			XmPragFlg: uint8(0x10),
		},
		49:
		// *int8

		{
			XzName:    ts + 30872, /* "synchronous" */
			XePragTyp: uint8(33),
			XmPragFlg: uint8(149),
		},
		50:
		// *int8

		{
			XzName:      ts + 30884, /* "table_info" */
			XePragTyp:   uint8(34),
			XmPragFlg:   uint8(97),
			XiPragCName: uint8(1),
			XnPragCName: uint8(6),
		},
		51:
		// *int8

		{
			XzName:    ts + 30895, /* "temp_store" */
			XePragTyp: uint8(35),
			XmPragFlg: uint8(20),
		},
		52:
		// *int8

		{
			XzName:    ts + 30906, /* "temp_store_directory" */
			XePragTyp: uint8(36),
			XmPragFlg: uint8(0x4),
		},
		53:
		// *int8

		{
			XzName:    ts + 30927, /* "threads" */
			XePragTyp: uint8(37),
			XmPragFlg: uint8(0x10),
		},
		54:
		// *int8

		{
			XzName:    ts + 30935, /* "user_version" */
			XmPragFlg: uint8(20),
			XiArg:     uint32(6),
		},
		55:
		// *int8

		{
			XzName:    ts + 30948, /* "wal_autocheckpoint" */
			XePragTyp: uint8(38),
		},
		56:
		// *int8

		{
			XzName:      ts + 30967, /* "wal_checkpoint" */
			XePragTyp:   uint8(39),
			XmPragFlg:   uint8(0x1),
			XiPragCName: uint8(46),
			XnPragCName: uint8(3),
		},
		57:
		// *int8

		{
			XzName:    ts + 30982, /* "writable_schema" */
			XePragTyp: uint8(2),
			XmPragFlg: uint8(20),
			XiArg:     uint32(0x1),
		},
	}
}

// _1690pragmaVtabConnect is defined at sqlite3.c:116498:12
func _1690pragmaVtabConnect(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pAux uintptr /* *void */, _argc int32, _argv uintptr /* **int8 */, _ppVtab uintptr /* **Tsqlite3_vtab = Ssqlite3_vtab */, _pzErr uintptr /* **int8 */) (r int32) {
	esc := crt.MustMalloc(232)
	var (
		_pPragma uintptr // *TPragmaName = struct{XzName *in...XnPragCName uint8;XiArg uint32;}
		_pTab    uintptr // *TPragmaVtab = SPragmaVtab
		_rc      int32
		_i       int32
		_j       int32
		_cSep    int8
		_acc     = esc      // *TStrAccum = SStrAccum
		_zBuf    = esc + 32 // *[200]int8
	)
	defer crt.Free(esc)
	_pPragma = _pAux
	_pTab = 0
	_cSep = int8('(')

	_130sqlite3StrAccumInit(tls, _acc, null, _zBuf, int32(200), int32(0))
	_312sqlite3StrAccumAppendAll(tls, _acc, ts+30998 /* "CREATE TABLE x" */)
	_i = int32(0)
	_j = int32(*(*uint8)(unsafe.Pointer(_pPragma + 10)))
_1:
	if _i >= int32(*(*uint8)(unsafe.Pointer(_pPragma + 11))) {
		goto _3
	}

	_807sqlite3XPrintf(tls, _acc, ts+31013 /* "%c\"%s\"" */, int32(_cSep), *(*uintptr)(unsafe.Pointer(_1837pragCName + 8*uintptr(_j))))
	_cSep = int8(',')
	_i++
	_j++
	goto _1

_3:
	if _i != int32(0) {
		goto _4
	}

	_807sqlite3XPrintf(tls, _acc, ts+31020 /* "(\"%s\"" */, *(*uintptr)(unsafe.Pointer(_pPragma)))
	_cSep = int8(',')
	_i++
_4:
	_j = int32(0)
	if (int32(*(*uint8)(unsafe.Pointer(_pPragma + 9))) & int32(0x20)) == 0 {
		goto _5
	}

	_312sqlite3StrAccumAppendAll(tls, _acc, ts+31026 /* ",arg HIDDEN" */)
	_j++
_5:
	if (int32(*(*uint8)(unsafe.Pointer(_pPragma + 9))) & int32(192)) == 0 {
		goto _6
	}

	_312sqlite3StrAccumAppendAll(tls, _acc, ts+31038 /* ",schema HIDDEN" */)
	_j++
_6:
	_301sqlite3StrAccumAppend(tls, _acc, ts+8826 /* ")" */, int32(1))
	_299sqlite3StrAccumFinish(tls, _acc)

	_rc = Xsqlite3_declare_vtab(tls, _db, _zBuf)
	if _rc != int32(0) {
		goto _7
	}

	_pTab = Xsqlite3_malloc(tls, int32(48))
	if _pTab != 0 {
		goto _9
	}

	_rc = int32(7)
	goto _10

_9:
	crt.Xmemset(tls, _pTab, int32(0), uint64(48))
	*(*uintptr)(unsafe.Pointer(_pTab + 32)) = _pPragma
	*(*uintptr)(unsafe.Pointer(_pTab + 24)) = _db
	*(*uint8)(unsafe.Pointer(_pTab + 41)) = uint8(_i)
	*(*uint8)(unsafe.Pointer(_pTab + 40)) = uint8(_j)
_10:
	goto _8

_7:
	*(*uintptr)(unsafe.Pointer(_pzErr)) = Xsqlite3_mprintf(tls, ts+429 /* "%s" */, Xsqlite3_errmsg(tls, _db))
_8:
	*(*uintptr)(unsafe.Pointer(_ppVtab)) = _pTab
	return _rc
}

// _1691pragmaVtabBestIndex is defined at sqlite3.c:116574:12
func _1691pragmaVtabBestIndex(tls crt.TLS, _tab uintptr /* *Tsqlite3_vtab = Ssqlite3_vtab */, _pIdxInfo uintptr /* *Tsqlite3_index_info = Ssqlite3_index_info */) (r int32) {
	esc := crt.MustMalloc(8)
	var (
		_pTab        uintptr // *TPragmaVtab = SPragmaVtab
		_pConstraint uintptr // *Ssqlite3_index_constraint
		_i           int32
		_j           int32
		_seen        = esc // *[2]int32
	)
	defer crt.Free(esc)
	_pTab = _tab
	*(*float64)(unsafe.Pointer(_pIdxInfo + 64)) = float64(1)
	if int32(*(*uint8)(unsafe.Pointer(_pTab + 40))) != int32(0) {
		goto _1
	}

	return int32(0)

_1:
	_pConstraint = *(*uintptr)(unsafe.Pointer(_pIdxInfo + 8))
	*(*int32)(unsafe.Pointer(_seen)) = int32(0)
	*(*int32)(unsafe.Pointer(_seen + 4)) = int32(0)
	_i = int32(0)
_2:
	if _i >= (*(*int32)(unsafe.Pointer(_pIdxInfo))) {
		goto _4
	}

	if int32(*(*uint8)(unsafe.Pointer(_pConstraint + 5))) != int32(0) {
		goto _5
	}

	goto _3

_5:
	if int32(*(*uint8)(unsafe.Pointer(_pConstraint + 4))) == int32(2) {
		goto _6
	}

	goto _3

_6:
	if (*(*int32)(unsafe.Pointer(_pConstraint))) >= int32(*(*uint8)(unsafe.Pointer(_pTab + 41))) {
		goto _7
	}

	goto _3

_7:
	_j = (*(*int32)(unsafe.Pointer(_pConstraint))) - int32(*(*uint8)(unsafe.Pointer(_pTab + 41)))

	*(*int32)(unsafe.Pointer(_seen + 4*uintptr(_j))) = _i + int32(1)

_3:
	_i++
	_pConstraint += 12
	goto _2

_4:
	if (*(*int32)(unsafe.Pointer(_seen))) != int32(0) {
		goto _8
	}

	*(*float64)(unsafe.Pointer(_pIdxInfo + 64)) = float64(2.147483647e+09)
	*(*int64)(unsafe.Pointer(_pIdxInfo + 72)) = int64(2147483647)
	return int32(0)

_8:
	_j = (*(*int32)(unsafe.Pointer(_seen))) - int32(1)
	*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdxInfo + 32))) + 8*uintptr(_j))) = int32(1)
	*(*uint8)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pIdxInfo + 32))) + 8*uintptr(_j)) + 4)) = uint8(1)
	if (*(*int32)(unsafe.Pointer(_seen + 4))) != int32(0) {
		goto _9
	}

	return int32(0)

_9:
	*(*float64)(unsafe.Pointer(_pIdxInfo + 64)) = float64(20)
	*(*int64)(unsafe.Pointer(_pIdxInfo + 72)) = int64(20)
	_j = (*(*int32)(unsafe.Pointer(_seen + 4))) - int32(1)
	*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdxInfo + 32))) + 8*uintptr(_j))) = int32(2)
	*(*uint8)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pIdxInfo + 32))) + 8*uintptr(_j)) + 4)) = uint8(1)
	return int32(0)
}

// _1692pragmaVtabDisconnect is defined at sqlite3.c:116561:12
func _1692pragmaVtabDisconnect(tls crt.TLS, _pVtab uintptr /* *Tsqlite3_vtab = Ssqlite3_vtab */) (r int32) {
	var _pTab uintptr // *TPragmaVtab = SPragmaVtab

	_pTab = _pVtab
	Xsqlite3_free(tls, _pTab)
	return int32(0)
}

// _1693pragmaVtabOpen is defined at sqlite3.c:116611:12
func _1693pragmaVtabOpen(tls crt.TLS, _pVtab uintptr /* *Tsqlite3_vtab = Ssqlite3_vtab */, _ppCursor uintptr /* **Tsqlite3_vtab_cursor = Ssqlite3_vtab_cursor */) (r int32) {
	var _pCsr uintptr // *TPragmaVtabCursor = SPragmaVtabCursor

	_pCsr = Xsqlite3_malloc(tls, int32(40))
	if _pCsr != 0 {
		goto _1
	}

	return int32(7)

_1:
	crt.Xmemset(tls, _pCsr, int32(0), uint64(40))
	*(*uintptr)(unsafe.Pointer(_pCsr)) = _pVtab
	*(*uintptr)(unsafe.Pointer(_ppCursor)) = _pCsr
	return int32(0)
}

// _1694pragmaVtabClose is defined at sqlite3.c:116633:12
func _1694pragmaVtabClose(tls crt.TLS, _cur uintptr /* *Tsqlite3_vtab_cursor = Ssqlite3_vtab_cursor */) (r int32) {
	var _pCsr uintptr // *TPragmaVtabCursor = SPragmaVtabCursor

	_pCsr = _cur
	_1856pragmaVtabCursorClear(tls, _pCsr)
	Xsqlite3_free(tls, _pCsr)
	return int32(0)
}

// _1695pragmaVtabFilter is defined at sqlite3.c:116659:12
func _1695pragmaVtabFilter(tls crt.TLS, _pVtabCursor uintptr /* *Tsqlite3_vtab_cursor = Ssqlite3_vtab_cursor */, _idxNum int32, _idxStr uintptr /* *int8 */, _argc int32, _argv uintptr /* **Tsqlite3_value = Ssqlite3_value */) (r int32) {
	esc := crt.MustMalloc(32)
	var (
		_pCsr  uintptr // *TPragmaVtabCursor = SPragmaVtabCursor
		_pTab  uintptr // *TPragmaVtab = SPragmaVtab
		_rc    int32
		_i     int32
		_j     int32
		_acc   = esc   // *TStrAccum = SStrAccum
		_zSql  uintptr // *int8
		_zText uintptr // *int8
	)
	defer crt.Free(esc)
	_pCsr = _pVtabCursor
	_pTab = *(*uintptr)(unsafe.Pointer(_pVtabCursor))

	_1856pragmaVtabCursorClear(tls, _pCsr)
	_j = func() int32 {
		if (int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTab + 32))) + 9))) & int32(0x20)) != int32(0) {
			return int32(0)
		}
		return int32(1)
	}()
	_i = int32(0)
_1:
	if _i >= _argc {
		goto _3
	}

	_zText = Xsqlite3_value_text(tls, *(*uintptr)(unsafe.Pointer(_argv + 8*uintptr(_i))))

	if _zText == 0 {
		goto _4
	}

	*(*uintptr)(unsafe.Pointer((_pCsr + 24) + 8*uintptr(_j))) = Xsqlite3_mprintf(tls, ts+429 /* "%s" */, _zText)
	if (*(*uintptr)(unsafe.Pointer((_pCsr + 24) + 8*uintptr(_j)))) != 0 {
		goto _5
	}

	return int32(7)

_5:
_4:
	_i++
	_j++
	goto _1

_3:
	_130sqlite3StrAccumInit(tls, _acc, null, null, int32(0), *(*int32)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pTab + 24))) + 124) + 4)))
	_312sqlite3StrAccumAppendAll(tls, _acc, ts+31053 /* "PRAGMA " */)
	if (*(*uintptr)(unsafe.Pointer((_pCsr + 24) + 8))) == 0 {
		goto _6
	}

	_807sqlite3XPrintf(tls, _acc, ts+31061 /* "%Q." */, *(*uintptr)(unsafe.Pointer((_pCsr + 24) + 8)))
_6:
	_312sqlite3StrAccumAppendAll(tls, _acc, *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pTab + 32)))))
	if (*(*uintptr)(unsafe.Pointer(_pCsr + 24))) == 0 {
		goto _7
	}

	_807sqlite3XPrintf(tls, _acc, ts+31065 /* "=%Q" */, *(*uintptr)(unsafe.Pointer(_pCsr + 24)))
_7:
	_zSql = _299sqlite3StrAccumFinish(tls, _acc)
	if _zSql != 0 {
		goto _8
	}

	return int32(7)

_8:
	_rc = Xsqlite3_prepare_v2(tls, *(*uintptr)(unsafe.Pointer(_pTab + 24)), _zSql, int32(-1), _pCsr+8, null)
	Xsqlite3_free(tls, _zSql)
	if _rc == int32(0) {
		goto _9
	}

	*(*uintptr)(unsafe.Pointer(_pTab + 16)) = Xsqlite3_mprintf(tls, ts+429 /* "%s" */, Xsqlite3_errmsg(tls, *(*uintptr)(unsafe.Pointer(_pTab + 24))))
	return _rc

_9:
	return _1696pragmaVtabNext(tls, _pVtabCursor)
}

// _1696pragmaVtabNext is defined at sqlite3.c:116641:12
func _1696pragmaVtabNext(tls crt.TLS, _pVtabCursor uintptr /* *Tsqlite3_vtab_cursor = Ssqlite3_vtab_cursor */) (r int32) {
	var (
		_pCsr uintptr // *TPragmaVtabCursor = SPragmaVtabCursor
		_rc   int32
	)
	_pCsr = _pVtabCursor
	_rc = int32(0)
	(*(*int64)(unsafe.Pointer(_pCsr + 16)))++

	if int32(100) == Xsqlite3_step(tls, *(*uintptr)(unsafe.Pointer(_pCsr + 8))) {
		goto _1
	}

	_rc = Xsqlite3_finalize(tls, *(*uintptr)(unsafe.Pointer(_pCsr + 8)))
	*(*uintptr)(unsafe.Pointer(_pCsr + 8)) = null
	_1856pragmaVtabCursorClear(tls, _pCsr)
_1:
	return _rc
}

// _1697pragmaVtabEof is defined at sqlite3.c:116709:12
func _1697pragmaVtabEof(tls crt.TLS, _pVtabCursor uintptr /* *Tsqlite3_vtab_cursor = Ssqlite3_vtab_cursor */) (r int32) {
	var _pCsr uintptr // *TPragmaVtabCursor = SPragmaVtabCursor

	_pCsr = _pVtabCursor
	return bool2int((*(*uintptr)(unsafe.Pointer(_pCsr + 8))) == 0)
}

// _1698pragmaVtabColumn is defined at sqlite3.c:116717:12
func _1698pragmaVtabColumn(tls crt.TLS, _pVtabCursor uintptr /* *Tsqlite3_vtab_cursor = Ssqlite3_vtab_cursor */, _ctx uintptr /* *Tsqlite3_context = Ssqlite3_context */, _i int32) (r int32) {
	var (
		_pCsr uintptr // *TPragmaVtabCursor = SPragmaVtabCursor
		_pTab uintptr // *TPragmaVtab = SPragmaVtab
	)
	_pCsr = _pVtabCursor
	_pTab = *(*uintptr)(unsafe.Pointer(_pVtabCursor))
	if _i >= int32(*(*uint8)(unsafe.Pointer(_pTab + 41))) {
		goto _1
	}

	Xsqlite3_result_value(tls, _ctx, Xsqlite3_column_value(tls, *(*uintptr)(unsafe.Pointer(_pCsr + 8)), _i))
	goto _2

_1:
	Xsqlite3_result_text(tls, _ctx, *(*uintptr)(unsafe.Pointer((_pCsr + 24) + 8*uintptr(_i-int32(*(*uint8)(unsafe.Pointer(_pTab + 41)))))), int32(-1), uintptr(18446744073709551615))
_2:
	return int32(0)
}

// _1699pragmaVtabRowid is defined at sqlite3.c:116735:12
func _1699pragmaVtabRowid(tls crt.TLS, _pVtabCursor uintptr /* *Tsqlite3_vtab_cursor = Ssqlite3_vtab_cursor */, _p uintptr /* *Tsqlite_int64 = int64 */) (r int32) {
	var _pCsr uintptr // *TPragmaVtabCursor = SPragmaVtabCursor

	_pCsr = _pVtabCursor
	*(*int64)(unsafe.Pointer(_p)) = *(*int64)(unsafe.Pointer(_pCsr + 16))
	return int32(0)
}

// _1700getDigits is defined at sqlite3.c:19550:12
func _1700getDigits(tls crt.TLS, _zDate uintptr /* *int8 */, _zFormat uintptr /* *int8 */, ap ...interface{}) (r int32) {
	var (
		_ap    *[]interface{} // Tva_list = T__gnuc_va_list = T__...a_list = *struct{X_ [2]uintptr;}
		_cnt   int32
		_nextC int8
		_N     int8
		_min   int8
		_val   int32
		_max   uint16
	)
	_cnt = int32(0)
	{
		x := ap
		_ap = &x
	}
_1:
	_N = int8(int32(*(*int8)(unsafe.Pointer(_zFormat))) - int32('0'))
	_min = int8(int32(*(*int8)(unsafe.Pointer(_zFormat + 1))) - int32('0'))
	_val = int32(0)

	_max = *(*uint16)(unsafe.Pointer(_1857aMx + 2*uintptr(int32(*(*int8)(unsafe.Pointer(_zFormat + 2)))-int32('a'))))
	_nextC = *(*int8)(unsafe.Pointer(_zFormat + 3))
	_val = int32(0)
_4:
	if postinc145(&_N) == 0 {
		goto _5
	}

	if int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(uint8(*(*int8)(unsafe.Pointer(_zDate)))))))&int32(0x4) != 0 {
		goto _6
	}

	goto _end_getDigits

_6:
	_val = ((_val * int32(10)) + int32(*(*int8)(unsafe.Pointer(_zDate)))) - int32('0')
	_zDate++
	goto _4

_5:
	if _val >= int32(_min) && _val <= int32(_max) && (int32(_nextC) == int32(0) || int32(_nextC) == int32(*(*int8)(unsafe.Pointer(_zDate)))) {
		goto _7
	}

	goto _end_getDigits

_7:
	*(*int32)(unsafe.Pointer(crt.VAuintptr(_ap))) = _val
	_zDate++
	_cnt++
	_zFormat += uintptr(4)
	if _nextC != 0 {
		goto _1
	}

	goto _end_getDigits
_end_getDigits:
	_ap = nil
	return _cnt
}

// _1701parseTimezone is defined at sqlite3.c:19604:12
func _1701parseTimezone(tls crt.TLS, _zDate uintptr /* *int8 */, _p uintptr /* *TDateTime = SDateTime */) (r int32) {
	esc := crt.MustMalloc(20)
	var (
		_sgn int32
		_nHr = esc      // *int32
		_nMn = esc + 16 // *int32
		_c   int32
	)
	defer crt.Free(esc)
	_sgn = int32(0)
_1:
	if int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(uint8(*(*int8)(unsafe.Pointer(_zDate)))))))&int32(0x1) == 0 {
		goto _2
	}

	_zDate++
	goto _1

_2:
	*(*int32)(unsafe.Pointer(_p + 28)) = int32(0)
	_c = int32(*(*int8)(unsafe.Pointer(_zDate)))
	if _c != int32('-') {
		goto _3
	}

	_sgn = int32(-1)
	goto _4

_3:
	if _c != int32('+') {
		goto _5
	}

	_sgn = int32(1)
	goto _6

_5:
	if _c != int32('Z') && _c != int32('z') {
		goto _7
	}

	_zDate++
	goto _zulu_time

	goto _8

_7:
	return bool2int(_c != int32(0))

_8:
_6:
_4:
	_zDate++
	if _1700getDigits(tls, _zDate, ts+31069 /* "20b:20e" */, _nHr, _nMn) == int32(2) {
		goto _9
	}

	return int32(1)

_9:
	_zDate += uintptr(5)
	*(*int32)(unsafe.Pointer(_p + 28)) = _sgn * ((*(*int32)(unsafe.Pointer(_nMn))) + ((*(*int32)(unsafe.Pointer(_nHr))) * int32(60)))
	goto _zulu_time
_zulu_time:
_10:
	if int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(uint8(*(*int8)(unsafe.Pointer(_zDate)))))))&int32(0x1) == 0 {
		goto _11
	}

	_zDate++
	goto _10

_11:
	*(*int8)(unsafe.Pointer(_p + 45)) = int8(1)
	return bool2int(int32(*(*int8)(unsafe.Pointer(_zDate))) != int32(0))
}

type Stm struct {
	Xtm_sec      int32
	Xtm_min      int32
	Xtm_hour     int32
	Xtm_mday     int32
	Xtm_mon      int32
	Xtm_year     int32
	Xtm_wday     int32
	Xtm_yday     int32
	Xtm_isdst    int32
	X__tm_gmtoff int64
	X__tm_zone   uintptr // *int8
}

// _1702osLocaltime is defined at sqlite3.c:19953:12
func _1702osLocaltime(tls crt.TLS, _t uintptr /* *Ttime_t = T__time_t = int64 */, _pTm uintptr /* *Stm */) (r int32) {
	var _rc int32

	if (*(*int32)(unsafe.Pointer(_28sqlite3Config + 416))) == 0 {
		goto _1
	}

	return int32(1)

_1:
	_rc = bool2int(crt.Xlocaltime_r(tls, _t, _pTm) == 0)
	return _rc
}

// _1703setPendingFd is defined at sqlite3.c:32125:13
func _1703setPendingFd(tls crt.TLS, _pFile uintptr /* *TunixFile = SunixFile */) {
	var (
		_pInode uintptr // *TunixInodeInfo = SunixInodeInfo
		_p      uintptr // *TUnixUnusedFd = SUnixUnusedFd
	)
	_pInode = *(*uintptr)(unsafe.Pointer(_pFile + 16))
	_p = *(*uintptr)(unsafe.Pointer(_pFile + 48))
	*(*uintptr)(unsafe.Pointer(_p + 8)) = *(*uintptr)(unsafe.Pointer(_pInode + 48))
	*(*uintptr)(unsafe.Pointer(_pInode + 48)) = _p
	*(*int32)(unsafe.Pointer(_pFile + 24)) = int32(-1)
	*(*uintptr)(unsafe.Pointer(_pFile + 48)) = null
	_1270nUnusedFd++
}

// _1704releaseInodeInfo is defined at sqlite3.c:31615:13
func _1704releaseInodeInfo(tls crt.TLS, _pFile uintptr /* *TunixFile = SunixFile */) {
	var _pInode uintptr // *TunixInodeInfo = SunixInodeInfo

	_pInode = *(*uintptr)(unsafe.Pointer(_pFile + 16))

	if _pInode == 0 {
		goto _1
	}

	(*(*int32)(unsafe.Pointer(_pInode + 24)))--
	if (*(*int32)(unsafe.Pointer(_pInode + 24))) != int32(0) {
		goto _2
	}

	_1858closePendingFds(tls, _pFile)
	if (*(*uintptr)(unsafe.Pointer(_pInode + 64))) == 0 {
		goto _3
	}

	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pInode + 64))) + 56)) = *(*uintptr)(unsafe.Pointer(_pInode + 56))
	goto _4

_3:
	_1271inodeList = *(*uintptr)(unsafe.Pointer(_pInode + 56))
_4:
	if (*(*uintptr)(unsafe.Pointer(_pInode + 56))) == 0 {
		goto _5
	}

	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pInode + 56))) + 64)) = *(*uintptr)(unsafe.Pointer(_pInode + 64))
_5:
	Xsqlite3_free(tls, _pInode)
_2:
_1:
}

// _1705closeUnixFile is defined at sqlite3.c:32330:12
func _1705closeUnixFile(tls crt.TLS, _id uintptr /* *Tsqlite3_file = Ssqlite3_file */) (r int32) {
	var _pFile uintptr // *TunixFile = SunixFile

	_pFile = _id
	_1714unixUnmapfile(tls, _pFile)
	if (*(*int32)(unsafe.Pointer(_pFile + 24))) < int32(0) {
		goto _1
	}

	_1121robust_close(tls, _pFile, *(*int32)(unsafe.Pointer(_pFile + 24)), int32(32336))
	*(*int32)(unsafe.Pointer(_pFile + 24)) = int32(-1)
_1:
	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_pFile + 48)))
	crt.Xmemset(tls, _pFile, int32(0), uint64(120))
	return int32(0)
}

// _1706seekAndRead is defined at sqlite3.c:33514:12
func _1706seekAndRead(tls crt.TLS, _id uintptr /* *TunixFile = SunixFile */, _offset int64, _pBuf uintptr /* *void */, _cnt int32) (r int32) {
	var (
		_got       int32
		_prior     int32
		_newOffset int64
	)
	_prior = int32(0)

_1:
	_newOffset = int64(crt.Xlseek64(tls, *(*int32)(unsafe.Pointer(_id + 24)), int64(_offset), int32(0)))
	if _newOffset >= int64(0) {
		goto _4
	}

	_1280storeLastErrno(tls, _id, *(*int32)(unsafe.Pointer(crt.X__errno_location(tls))))
	return int32(-1)

_4:
	_got = int32(fn153(*(*uintptr)(unsafe.Pointer((_1118aSyscall + 192) + 8)))(tls, *(*int32)(unsafe.Pointer(_id + 24)), _pBuf, uint64(_cnt)))
	if _got != _cnt {
		goto _5
	}

	goto _3

_5:
	if _got >= int32(0) {
		goto _6
	}

	if (*(*int32)(unsafe.Pointer(crt.X__errno_location(tls)))) != int32(4) {
		goto _8
	}

	_got = int32(1)
	goto _2

_8:
	_prior = int32(0)
	_1280storeLastErrno(tls, _id, *(*int32)(unsafe.Pointer(crt.X__errno_location(tls))))
	goto _3

	goto _7

_6:
	if _got <= int32(0) {
		goto _9
	}

	_cnt = int32(_cnt - _got)
	_offset = int64(_offset + int64(_got))
	_prior = int32(_prior + _got)
	_pBuf = uintptr(_got) + _pBuf
_9:
_7:
_2:
	if _got > int32(0) {
		goto _1
	}

	goto _3

_3:
	return _got + _prior
}

// _1707seekAndWrite is defined at sqlite3.c:33668:12
func _1707seekAndWrite(tls crt.TLS, _id uintptr /* *TunixFile = SunixFile */, _offset int64, _pBuf uintptr /* *void */, _cnt int32) (r int32) {
	return _1720seekAndWriteFd(tls, *(*int32)(unsafe.Pointer(_id + 24)), _offset, _pBuf, _cnt, _id+32)
}

// _1708robust_ftruncate is defined at sqlite3.c:31163:12
func _1708robust_ftruncate(tls crt.TLS, _h int32, _sz int64) (r int32) {
	var _rc int32

_1:
	_rc = fn218(*(*uintptr)(unsafe.Pointer((_1118aSyscall + 144) + 8)))(tls, _h, int64(_sz))
	if (_rc < int32(0)) && ((*(*int32)(unsafe.Pointer(crt.X__errno_location(tls)))) == int32(4)) {
		goto _1
	}

	return _rc
}

type Sflock struct {
	Xl_type   int16
	Xl_whence int16
	Xl_start  int64
	Xl_len    int64
	Xl_pid    int32
}

// _1709unixFileLock is defined at sqlite3.c:31848:12
func _1709unixFileLock(tls crt.TLS, _pFile uintptr /* *TunixFile = SunixFile */, _pLock uintptr /* *Sflock */) (r int32) {
	esc := crt.MustMalloc(32)
	var (
		_rc     int32
		_pInode uintptr // *TunixInodeInfo = SunixInodeInfo
		_lock   = esc   // *Sflock
	)
	defer crt.Free(esc)
	_pInode = *(*uintptr)(unsafe.Pointer(_pFile + 16))

	if (int32(*(*uint16)(unsafe.Pointer(_pFile + 30))) & int32(3)) != int32(0x1) {
		goto _1
	}

	if int32(*(*uint8)(unsafe.Pointer(_pInode + 21))) != int32(0) {
		goto _3
	}

	*(*int16)(unsafe.Pointer(_lock + 2)) = int16(0)
	*(*int64)(unsafe.Pointer(_lock + 8)) = int64(_149sqlite3PendingByte + int32(2))
	*(*int64)(unsafe.Pointer(_lock + 16)) = int64(510)
	*(*int16)(unsafe.Pointer(_lock)) = int16(1)
	_rc = fn174(*(*uintptr)(unsafe.Pointer((_1118aSyscall + 168) + 8)))(tls, *(*int32)(unsafe.Pointer(_pFile + 24)), int32(6), _lock)
	if _rc >= int32(0) {
		goto _5
	}

	return _rc

_5:
	*(*uint8)(unsafe.Pointer(_pInode + 21)) = uint8(1)
	(*(*int32)(unsafe.Pointer(_pInode + 40)))++
	goto _4

_3:
	_rc = int32(0)
_4:
	goto _2

_1:
	_rc = fn174(*(*uintptr)(unsafe.Pointer((_1118aSyscall + 168) + 8)))(tls, *(*int32)(unsafe.Pointer(_pFile + 24)), int32(6), _pLock)
_2:
	return _rc
}

// _1710sqliteErrorFromPosixError is defined at sqlite3.c:31188:12
func _1710sqliteErrorFromPosixError(tls crt.TLS, _posixError int32, _sqliteIOErr int32) (r int32) {
	switch _posixError {
	case int32(13):
		goto _2
	case int32(11):
		goto _3
	case int32(110):
		goto _4
	case int32(16):
		goto _5
	case int32(4):
		goto _6
	case int32(37):
		goto _7
	case int32(1):
		goto _8
	default:
		goto _9
	}
_2:
_3:
_4:
_5:
_6:
_7:
	return int32(5)

_8:
	return int32(3)

_9:
	return _sqliteIOErr
	return r
}

// _1711posixUnlock is defined at sqlite3.c:32148:12
func _1711posixUnlock(tls crt.TLS, _id uintptr /* *Tsqlite3_file = Ssqlite3_file */, _eFileLock int32, _handleNFSUnlock int32) (r int32) {
	esc := crt.MustMalloc(32)
	var (
		_pFile  uintptr // *TunixFile = SunixFile
		_pInode uintptr // *TunixInodeInfo = SunixInodeInfo
		_lock   = esc   // *Sflock
		_rc     int32
	)
	defer crt.Free(esc)
	_pFile = _id
	_rc = int32(0)

	if int32(*(*uint8)(unsafe.Pointer(_pFile + 28))) > _eFileLock {
		goto _1
	}

	return int32(0)

_1:
	_1123unixEnterMutex(tls)
	_pInode = *(*uintptr)(unsafe.Pointer(_pFile + 16))

	if int32(*(*uint8)(unsafe.Pointer(_pFile + 28))) <= int32(1) {
		goto _2
	}

	if _eFileLock != int32(1) {
		goto _3
	}

	*(*int16)(unsafe.Pointer(_lock)) = int16(0)
	*(*int16)(unsafe.Pointer(_lock + 2)) = int16(0)
	*(*int64)(unsafe.Pointer(_lock + 8)) = int64(_149sqlite3PendingByte + int32(2))
	*(*int64)(unsafe.Pointer(_lock + 16)) = int64(510)
	if _1709unixFileLock(tls, _pFile, _lock) == 0 {
		goto _4
	}

	_rc = int32(2314)
	_1280storeLastErrno(tls, _pFile, *(*int32)(unsafe.Pointer(crt.X__errno_location(tls))))
	goto _end_unlock

_4:
_3:
	*(*int16)(unsafe.Pointer(_lock)) = int16(2)
	*(*int16)(unsafe.Pointer(_lock + 2)) = int16(0)
	*(*int64)(unsafe.Pointer(_lock + 8)) = int64(_149sqlite3PendingByte)
	*(*int64)(unsafe.Pointer(_lock + 16)) = int64(2)

	if _1709unixFileLock(tls, _pFile, _lock) != int32(0) {
		goto _5
	}

	*(*uint8)(unsafe.Pointer(_pInode + 20)) = uint8(1)
	goto _6

_5:
	_rc = int32(2058)
	_1280storeLastErrno(tls, _pFile, *(*int32)(unsafe.Pointer(crt.X__errno_location(tls))))
	goto _end_unlock

_6:
_2:
	if _eFileLock != int32(0) {
		goto _7
	}

	(*(*int32)(unsafe.Pointer(_pInode + 16)))--
	if (*(*int32)(unsafe.Pointer(_pInode + 16))) != int32(0) {
		goto _8
	}

	*(*int16)(unsafe.Pointer(_lock)) = int16(2)
	*(*int16)(unsafe.Pointer(_lock + 2)) = int16(0)
	*(*int64)(unsafe.Pointer(_lock + 8)) = set139(&(*(*int64)(unsafe.Pointer(_lock + 16))), int64(0))
	if _1709unixFileLock(tls, _pFile, _lock) != int32(0) {
		goto _9
	}

	*(*uint8)(unsafe.Pointer(_pInode + 20)) = uint8(0)
	goto _10

_9:
	_rc = int32(2058)
	_1280storeLastErrno(tls, _pFile, *(*int32)(unsafe.Pointer(crt.X__errno_location(tls))))
	*(*uint8)(unsafe.Pointer(_pInode + 20)) = uint8(0)
	*(*uint8)(unsafe.Pointer(_pFile + 28)) = uint8(0)
_10:
_8:
	(*(*int32)(unsafe.Pointer(_pInode + 40)))--

	if (*(*int32)(unsafe.Pointer(_pInode + 40))) != int32(0) {
		goto _11
	}

	_1858closePendingFds(tls, _pFile)
_11:
_7:
	goto _end_unlock
_end_unlock:
	_1124unixLeaveMutex(tls)
	if _rc != int32(0) {
		goto _12
	}

	*(*uint8)(unsafe.Pointer(_pFile + 28)) = uint8(_eFileLock)
_12:
	return _rc
}

// _1712fcntlSizeHint is defined at sqlite3.c:34083:12
func _1712fcntlSizeHint(tls crt.TLS, _pFile uintptr /* *TunixFile = SunixFile */, _nByte int64) (r int32) {
	esc := crt.MustMalloc(144)
	var (
		_nSize  int64
		_buf    = esc // *Sstat64
		_nBlk   int32
		_nWrite int32
		_iWrite int64
		_rc     int32
	)
	defer crt.Free(esc)
	if (*(*int32)(unsafe.Pointer(_pFile + 72))) <= int32(0) {
		goto _1
	}

	if fn172(*(*uintptr)(unsafe.Pointer((_1118aSyscall + 120) + 8)))(tls, *(*int32)(unsafe.Pointer(_pFile + 24)), _buf) == 0 {
		goto _2
	}

	return int32(1802)

_2:
	_nSize = (((_nByte + int64(*(*int32)(unsafe.Pointer(_pFile + 72)))) - int64(1)) / int64(*(*int32)(unsafe.Pointer(_pFile + 72)))) * int64(*(*int32)(unsafe.Pointer(_pFile + 72)))
	if _nSize <= int64(*(*int64)(unsafe.Pointer(_buf + 48))) {
		goto _3
	}

	_nBlk = int32(*(*int64)(unsafe.Pointer(_buf + 56)))
	_nWrite = int32(0)
	_iWrite = int64(((((*(*int64)(unsafe.Pointer(_buf + 48))) / int64(_nBlk)) * int64(_nBlk)) + int64(_nBlk)) - int64(1))

_4:
	if _iWrite >= ((_nSize + int64(_nBlk)) - int64(1)) {
		goto _6
	}

	if _iWrite < _nSize {
		goto _7
	}

	_iWrite = _nSize - int64(1)
_7:
	_nWrite = _1707seekAndWrite(tls, _pFile, _iWrite, ts+4553 /* "" */, int32(1))
	if _nWrite == int32(1) {
		goto _8
	}

	return int32(778)

_8:
	_iWrite = int64(_iWrite + int64(_nBlk))
	goto _4

_6:
_3:
_1:
	if (*(*int64)(unsafe.Pointer(_pFile + 96))) <= int64(0) || _nByte <= int64(*(*int64)(unsafe.Pointer(_pFile + 80))) {
		goto _9
	}

	if (*(*int32)(unsafe.Pointer(_pFile + 72))) > int32(0) {
		goto _10
	}

	if _1708robust_ftruncate(tls, *(*int32)(unsafe.Pointer(_pFile + 24)), _nByte) == 0 {
		goto _11
	}

	_1280storeLastErrno(tls, _pFile, *(*int32)(unsafe.Pointer(crt.X__errno_location(tls))))
	return _1116unixLogErrorAtLine(tls, int32(1546), ts+23864 /* "ftruncate" */, *(*uintptr)(unsafe.Pointer(_pFile + 56)), int32(34134))

_11:
_10:
	_rc = _1715unixMapfile(tls, _pFile, _nByte)
	return _rc

_9:
	return int32(0)
}

// _1713unixModeBit is defined at sqlite3.c:34152:13
func _1713unixModeBit(tls crt.TLS, _pFile uintptr /* *TunixFile = SunixFile */, _mask uint8, _pArg uintptr /* *int32 */) {
	if (*(*int32)(unsafe.Pointer(_pArg))) >= int32(0) {
		goto _1
	}

	*(*int32)(unsafe.Pointer(_pArg)) = bool2int((int32(*(*uint16)(unsafe.Pointer(_pFile + 30))) & int32(_mask)) != int32(0))
	goto _2

_1:
	if (*(*int32)(unsafe.Pointer(_pArg))) != int32(0) {
		goto _3
	}

	{
		p := &(*(*uint16)(unsafe.Pointer(_pFile + 30)))
		*p = uint16(int32(*p) & (^int32(_mask)))
	}
	goto _4

_3:
	{
		p := &(*(*uint16)(unsafe.Pointer(_pFile + 30)))
		*p = uint16(int32(*p) | int32(_mask))
	}
_4:
_2:
}

// _1714unixUnmapfile is defined at sqlite3.c:35145:13
func _1714unixUnmapfile(tls crt.TLS, _pFd uintptr /* *TunixFile = SunixFile */) {
	if (*(*uintptr)(unsafe.Pointer(_pFd + 104))) == 0 {
		goto _1
	}

	fn188(*(*uintptr)(unsafe.Pointer((_1118aSyscall + 552) + 8)))(tls, *(*uintptr)(unsafe.Pointer(_pFd + 104)), uint64(*(*int64)(unsafe.Pointer(_pFd + 88))))
	*(*uintptr)(unsafe.Pointer(_pFd + 104)) = null
	*(*int64)(unsafe.Pointer(_pFd + 80)) = int64(0)
	*(*int64)(unsafe.Pointer(_pFd + 88)) = int64(0)
_1:
}

// _1715unixMapfile is defined at sqlite3.c:35262:12
func _1715unixMapfile(tls crt.TLS, _pFd uintptr /* *TunixFile = SunixFile */, _nMap int64) (r int32) {
	esc := crt.MustMalloc(144)
	var _statbuf = esc // *Sstat64
	defer crt.Free(esc)

	if (*(*int32)(unsafe.Pointer(_pFd + 76))) <= int32(0) {
		goto _1
	}

	return int32(0)

_1:
	if _nMap >= int64(0) {
		goto _2
	}

	if fn172(*(*uintptr)(unsafe.Pointer((_1118aSyscall + 120) + 8)))(tls, *(*int32)(unsafe.Pointer(_pFd + 24)), _statbuf) == 0 {
		goto _3
	}

	return int32(1802)

_3:
	_nMap = int64(*(*int64)(unsafe.Pointer(_statbuf + 48)))
_2:
	if _nMap <= int64(*(*int64)(unsafe.Pointer(_pFd + 96))) {
		goto _4
	}

	_nMap = int64(*(*int64)(unsafe.Pointer(_pFd + 96)))
_4:
	if _nMap == int64(*(*int64)(unsafe.Pointer(_pFd + 80))) {
		goto _5
	}

	_1859unixRemapfile(tls, _pFd, _nMap)
_5:
	return int32(0)
}

// _1716setDeviceCharacteristics is defined at sqlite3.c:34286:13
func _1716setDeviceCharacteristics(tls crt.TLS, _pFd uintptr /* *TunixFile = SunixFile */) {
	if (*(*int32)(unsafe.Pointer(_pFd + 112))) != int32(0) {
		goto _1
	}

	if (int32(*(*uint16)(unsafe.Pointer(_pFd + 30))) & int32(0x10)) == 0 {
		goto _2
	}

	{
		p := &(*(*int32)(unsafe.Pointer(_pFd + 116)))
		*p = int32(int32(*p) | int32(0x1000))
	}
_2:
	*(*int32)(unsafe.Pointer(_pFd + 112)) = int32(4096)
_1:
}

// _1717pgsz int32, escapes: false, sqlite3.c:34887:28
var _1717pgsz = int32(4096)

// _1718unixShmRegionPerMap is defined at sqlite3.c:34600:12
func _1718unixShmRegionPerMap(tls crt.TLS) (r int32) {
	var (
		_shmsz int32
		_pgsz  int32
	)
	_shmsz = int32(32768)
	_pgsz = fn38(*(*uintptr)(unsafe.Pointer((_1118aSyscall + 600) + 8)))(tls)

	if _pgsz >= _shmsz {
		goto _1
	}

	return int32(1)

_1:
	return _pgsz / _shmsz
}

// _1719unixOpenSharedMemory is defined at sqlite3.c:34674:12
func _1719unixOpenSharedMemory(tls crt.TLS, _pDbFd uintptr /* *TunixFile = SunixFile */) (r int32) {
	esc := crt.MustMalloc(144)
	var (
		_p            uintptr // *SunixShm
		_pShmNode     uintptr // *SunixShmNode
		_rc           int32
		_pInode       uintptr // *TunixInodeInfo = SunixInodeInfo
		_zShmFilename uintptr // *int8
		_nShmFilename int32
		_sStat        = esc   // *Sstat64
		_zBasePath    uintptr // *int8
		_openFlags    int32
	)
	defer crt.Free(esc)
	_p = 0
	_p = Xsqlite3_malloc64(tls, uint64(24))
	if _p != 0 {
		goto _1
	}

	return int32(7)

_1:
	crt.Xmemset(tls, _p, int32(0), uint64(24))

	_1123unixEnterMutex(tls)
	_pInode = *(*uintptr)(unsafe.Pointer(_pDbFd + 16))
	_pShmNode = *(*uintptr)(unsafe.Pointer(_pInode + 32))
	if _pShmNode != 0 {
		goto _2
	}

	_zBasePath = *(*uintptr)(unsafe.Pointer(_pDbFd + 56))
	if fn172(*(*uintptr)(unsafe.Pointer((_1118aSyscall + 120) + 8)))(tls, *(*int32)(unsafe.Pointer(_pDbFd + 24)), _sStat) == 0 {
		goto _3
	}

	_rc = int32(1802)
	goto _shm_open_err

_3:
	_nShmFilename = int32(6) + int32(crt.Xstrlen(tls, _zBasePath))
	_pShmNode = Xsqlite3_malloc64(tls, uint64(uint64(64)+uint64(_nShmFilename)))
	if _pShmNode != 0 {
		goto _4
	}

	_rc = int32(7)
	goto _shm_open_err

_4:
	crt.Xmemset(tls, _pShmNode, int32(0), uint64(64)+uint64(_nShmFilename))
	_zShmFilename = set4(&(*(*uintptr)(unsafe.Pointer(_pShmNode + 16))), _pShmNode+64)
	Xsqlite3_snprintf(tls, _nShmFilename, _zShmFilename, ts+31077 /* "%s-shm" */, _zBasePath)
	*(*int32)(unsafe.Pointer(_pShmNode + 24)) = int32(-1)
	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pDbFd + 16))) + 32)) = _pShmNode
	*(*uintptr)(unsafe.Pointer(_pShmNode)) = *(*uintptr)(unsafe.Pointer(_pDbFd + 16))
	if (*(*int32)(unsafe.Pointer(_28sqlite3Config + 4))) == 0 {
		goto _5
	}

	*(*uintptr)(unsafe.Pointer(_pShmNode + 8)) = Xsqlite3_mutex_alloc(tls, int32(0))
	if (*(*uintptr)(unsafe.Pointer(_pShmNode + 8))) != 0 {
		goto _6
	}

	_rc = int32(7)
	goto _shm_open_err

_6:
_5:
	if int32(*(*uint8)(unsafe.Pointer(_pInode + 21))) != int32(0) {
		goto _7
	}

	_openFlags = int32(66)
	if Xsqlite3_uri_boolean(tls, *(*uintptr)(unsafe.Pointer(_pDbFd + 56)), ts+31084 /* "readonly_shm" */, int32(0)) == 0 {
		goto _8
	}

	_openFlags = int32(0)
	*(*uint8)(unsafe.Pointer(_pShmNode + 34)) = uint8(1)
_8:
	*(*int32)(unsafe.Pointer(_pShmNode + 24)) = _1115robust_open(tls, _zShmFilename, _openFlags, (*(*uint32)(unsafe.Pointer(_sStat + 24)))&uint32(0777))
	if (*(*int32)(unsafe.Pointer(_pShmNode + 24))) >= int32(0) {
		goto _9
	}

	_rc = _1116unixLogErrorAtLine(tls, _844sqlite3CantopenError(tls, int32(34748)), ts+4771 /* "open" */, _zShmFilename, int32(34748))
	goto _shm_open_err

_9:
	_1117robustFchown(tls, *(*int32)(unsafe.Pointer(_pShmNode + 24)), *(*uint32)(unsafe.Pointer(_sStat + 28)), *(*uint32)(unsafe.Pointer(_sStat + 32)))
	_rc = int32(0)
	if _1721unixShmSystemLock(tls, _pDbFd, int32(1), int32(128), int32(1)) != int32(0) {
		goto _10
	}

	if _1708robust_ftruncate(tls, *(*int32)(unsafe.Pointer(_pShmNode + 24)), int64(0)) == 0 {
		goto _11
	}

	_rc = _1116unixLogErrorAtLine(tls, int32(4618), ts+23864 /* "ftruncate" */, _zShmFilename, int32(34764))
_11:
_10:
	if _rc != int32(0) {
		goto _12
	}

	_rc = _1721unixShmSystemLock(tls, _pDbFd, int32(0), int32(128), int32(1))
_12:
	if _rc == 0 {
		goto _13
	}

	goto _shm_open_err

_13:
_7:
_2:
	*(*uintptr)(unsafe.Pointer(_p)) = _pShmNode
	(*(*int32)(unsafe.Pointer(_pShmNode + 48)))++
	*(*uintptr)(unsafe.Pointer(_pDbFd + 64)) = _p
	_1124unixLeaveMutex(tls)
	Xsqlite3_mutex_enter(tls, *(*uintptr)(unsafe.Pointer(_pShmNode + 8)))
	*(*uintptr)(unsafe.Pointer(_p + 8)) = *(*uintptr)(unsafe.Pointer(_pShmNode + 56))
	*(*uintptr)(unsafe.Pointer(_pShmNode + 56)) = _p
	Xsqlite3_mutex_leave(tls, *(*uintptr)(unsafe.Pointer(_pShmNode + 8)))
	return int32(0)

	goto _shm_open_err
_shm_open_err:
	_1722unixShmPurge(tls, _pDbFd)
	Xsqlite3_free(tls, _p)
	_1124unixLeaveMutex(tls)
	return _rc
}

// _1720seekAndWriteFd is defined at sqlite3.c:33622:12
func _1720seekAndWriteFd(tls crt.TLS, _fd int32, _iOff int64, _pBuf uintptr /* *void */, _nBuf int32, _piErrno uintptr /* *int32 */) (r int32) {
	var (
		_rc    int32
		_iSeek int64
	)
	_rc = int32(0)

	_nBuf = int32(_nBuf & int32(0x1ffff))
_1:
	_iSeek = int64(crt.Xlseek64(tls, _fd, int64(_iOff), int32(0)))
	if _iSeek >= int64(0) {
		goto _4
	}

	_rc = int32(-1)
	goto _3

_4:
	_rc = int32(fn153(*(*uintptr)(unsafe.Pointer((_1118aSyscall + 264) + 8)))(tls, _fd, _pBuf, uint64(_nBuf)))
	if (_rc < int32(0)) && ((*(*int32)(unsafe.Pointer(crt.X__errno_location(tls)))) == int32(4)) {
		goto _1
	}

	goto _3

_3:
	if _rc >= int32(0) {
		goto _5
	}

	*(*int32)(unsafe.Pointer(_piErrno)) = *(*int32)(unsafe.Pointer(crt.X__errno_location(tls)))
_5:
	return _rc
}

// _1721unixShmSystemLock is defined at sqlite3.c:34521:12
func _1721unixShmSystemLock(tls crt.TLS, _pFile uintptr /* *TunixFile = SunixFile */, _lockType int32, _ofst int32, _n int32) (r int32) {
	esc := crt.MustMalloc(32)
	var (
		_pShmNode uintptr // *TunixShmNode = SunixShmNode
		_f        = esc   // *Sflock
		_rc       int32
	)
	defer crt.Free(esc)
	_rc = int32(0)
	_pShmNode = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pFile + 16))) + 32))

	if (*(*int32)(unsafe.Pointer(_pShmNode + 24))) < int32(0) {
		goto _1
	}

	crt.Xmemset(tls, _f, int32(0), uint64(32))
	*(*int16)(unsafe.Pointer(_f)) = int16(_lockType)
	*(*int16)(unsafe.Pointer(_f + 2)) = int16(0)
	*(*int64)(unsafe.Pointer(_f + 8)) = int64(_ofst)
	*(*int64)(unsafe.Pointer(_f + 16)) = int64(_n)
	_rc = fn174(*(*uintptr)(unsafe.Pointer((_1118aSyscall + 168) + 8)))(tls, *(*int32)(unsafe.Pointer(_pShmNode + 24)), int32(6), _f)
	_rc = func() int32 {
		if _rc != int32(-1) {
			return int32(0)
		}
		return int32(5)
	}()
_1:
	return _rc
}

// _1722unixShmPurge is defined at sqlite3.c:34614:13
func _1722unixShmPurge(tls crt.TLS, _pFd uintptr /* *TunixFile = SunixFile */) {
	var (
		_p          uintptr // *TunixShmNode = SunixShmNode
		_nShmPerMap int32
		_i          int32
	)
	_p = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pFd + 16))) + 32))

	if _p == 0 || (*(*int32)(unsafe.Pointer(_p + 48))) != int32(0) {
		goto _1
	}

	_nShmPerMap = _1718unixShmRegionPerMap(tls)

	Xsqlite3_mutex_free(tls, *(*uintptr)(unsafe.Pointer(_p + 8)))
	_i = int32(0)
_2:
	if _i >= int32(*(*uint16)(unsafe.Pointer(_p + 32))) {
		goto _4
	}

	if (*(*int32)(unsafe.Pointer(_p + 24))) < int32(0) {
		goto _5
	}

	fn188(*(*uintptr)(unsafe.Pointer((_1118aSyscall + 552) + 8)))(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 40))) + 8*uintptr(_i))), uint64(*(*int32)(unsafe.Pointer(_p + 28))))
	goto _6

_5:
	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 40))) + 8*uintptr(_i))))
_6:
	_i = int32(_i + _nShmPerMap)
	goto _2

_4:
	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_p + 40)))
	if (*(*int32)(unsafe.Pointer(_p + 24))) < int32(0) {
		goto _7
	}

	_1121robust_close(tls, _pFd, *(*int32)(unsafe.Pointer(_p + 24)), int32(34631))
	*(*int32)(unsafe.Pointer(_p + 24)) = int32(-1)
_7:
	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p))) + 32)) = null
	Xsqlite3_free(tls, _p)
_1:
}

// _1723walDecodeFrame is defined at sqlite3.c:55835:12
func _1723walDecodeFrame(tls crt.TLS, _pWal uintptr /* *TWal = SWal */, _piPage uintptr /* *Tu32 = uint32 */, _pnTruncate uintptr /* *Tu32 = uint32 */, _aData uintptr /* *Tu8 = uint8 */, _aFrame uintptr /* *Tu8 = uint8 */) (r int32) {
	var (
		_nativeCksum int32
		_aCksum      uintptr // *Tu32 = uint32
		_pgno        uint32
	)
	_aCksum = (_pWal + 72) + 24

	if crt.Xmemcmp(tls, (_pWal+72)+32, _aFrame+8, uint64(8)) == int32(0) {
		goto _1
	}

	return int32(0)

_1:
	_pgno = _328sqlite3Get4byte(tls, _aFrame)
	if _pgno != uint32(0) {
		goto _2
	}

	return int32(0)

_2:
	_nativeCksum = bool2int(int32(*(*uint8)(unsafe.Pointer((_pWal + 72) + 13))) == int32(0))
	_901walChecksumBytes(tls, _nativeCksum, _aFrame, int32(8), _aCksum, _aCksum)
	_901walChecksumBytes(tls, _nativeCksum, _aData, int32(*(*uint32)(unsafe.Pointer(_pWal + 56))), _aCksum, _aCksum)
	if (*(*uint32)(unsafe.Pointer(_aCksum))) == _328sqlite3Get4byte(tls, _aFrame+16) && (*(*uint32)(unsafe.Pointer(_aCksum + 4))) == _328sqlite3Get4byte(tls, _aFrame+20) {
		goto _3
	}

	return int32(0)

_3:
	*(*uint32)(unsafe.Pointer(_piPage)) = _pgno
	*(*uint32)(unsafe.Pointer(_pnTruncate)) = _328sqlite3Get4byte(tls, _aFrame+4)
	return int32(1)
}

// _1724walMergesort is defined at sqlite3.c:56591:13
func _1724walMergesort(tls crt.TLS, _aContent uintptr /* *Tu32 = uint32 */, _aBuffer uintptr /* *Tht_slot = Tu16 = uint16 */, _aList uintptr /* *Tht_slot = Tu16 = uint16 */, _pnList uintptr /* *int32 */) {
	esc := crt.MustMalloc(240)
	var (
		_nList  int32
		_nMerge = esc      // *int32
		_aMerge = esc + 16 // **Tht_slot = Tu16 = uint16
		_iList  int32
		_iSub   uint32
		_aSub   = esc + 32 // *[13]SSublist
		_p      uintptr    // *SSublist
		_1p     uintptr    // *SSublist
	)
	defer crt.Free(esc)
	_nList = *(*int32)(unsafe.Pointer(_pnList))
	*(*int32)(unsafe.Pointer(_nMerge)) = int32(0)
	*(*uintptr)(unsafe.Pointer(_aMerge)) = 0
	_iSub = uint32(0)
	crt.Xmemset(tls, _aSub, int32(0), uint64(208))

	_iList = int32(0)
_1:
	if _iList >= _nList {
		goto _3
	}

	*(*int32)(unsafe.Pointer(_nMerge)) = int32(1)
	*(*uintptr)(unsafe.Pointer(_aMerge)) = _aList + 2*uintptr(_iList)
	_iSub = uint32(0)
_4:
	if (_iList & (int32(1) << (uint(_iSub) % 32))) == 0 {
		goto _6
	}

	_p = _aSub + 16*uintptr(_iSub)

	_1860walMerge(tls, _aContent, *(*uintptr)(unsafe.Pointer(_p + 8)), *(*int32)(unsafe.Pointer(_p)), _aMerge, _nMerge, _aBuffer)
	_iSub++
	goto _4

_6:
	*(*uintptr)(unsafe.Pointer((_aSub + 16*uintptr(_iSub)) + 8)) = *(*uintptr)(unsafe.Pointer(_aMerge))
	*(*int32)(unsafe.Pointer(_aSub + 16*uintptr(_iSub))) = *(*int32)(unsafe.Pointer(_nMerge))
	_iList++
	goto _1

_3:
	_iSub++
_7:
	if _iSub >= uint32(13) {
		goto _9
	}

	if (_nList & (int32(1) << (uint(_iSub) % 32))) == 0 {
		goto _10
	}

	_1p = _aSub + 16*uintptr(_iSub)

	_1860walMerge(tls, _aContent, *(*uintptr)(unsafe.Pointer(_1p + 8)), *(*int32)(unsafe.Pointer(_1p)), _aMerge, _nMerge, _aBuffer)
_10:
	_iSub++
	goto _7

_9:
	*(*int32)(unsafe.Pointer(_pnList)) = *(*int32)(unsafe.Pointer(_nMerge))
}

type SWalSegment struct {
	XiNext  int32
	XaIndex uintptr
	XaPgno  uintptr
	XnEntry int32
	XiZero  int32
}

// _1725sqlite3VdbeChangeP2 is defined at sqlite3.c:72999:21
func _1725sqlite3VdbeChangeP2(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */, _addr uint32, _val int32) {
	*(*int32)(unsafe.Pointer(_1615sqlite3VdbeGetOp(tls, _p, int32(_addr)) + 8)) = _val
}

// _1726iLn int32, escapes: false, sqlite3.c:110127:22
var _1726iLn int32

// _1727autoInc [10]SVdbeOpList, escapes: true, sqlite3.c:110128:29
var _1727autoInc = ds + 17612

// _1728sqlite3ExprCodeTarget is defined at sqlite3.c:95292:20
func _1728sqlite3ExprCodeTarget(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pExpr uintptr /* *TExpr = SExpr */, _target int32) (r int32) {
	esc := crt.MustMalloc(184)
	var (
		_v           uintptr // *TVdbe = SVdbe
		_op          int32
		_inReg       int32
		_regFree1    = esc      // *int32
		_regFree2    = esc + 16 // *int32
		_r1          int32
		_r2          int32
		_tempX       = esc + 32 // *TExpr = SExpr
		_p5          int32
		_pAggInfo    uintptr // *TAggInfo = SAggInfo
		_pCol        uintptr // *SAggInfo_col
		_iTab        int32
		_n           int32
		_z           uintptr // *int8
		_zBlob       uintptr // *int8
		_1z          uintptr // *int8
		_pLeft       uintptr // *TExpr = SExpr
		_2pLeft      uintptr // *TExpr = SExpr
		_addr        int32
		_pInfo       uintptr // *TAggInfo = SAggInfo
		_pFarg       uintptr // *TExprList = SExprList
		_nFarg       int32
		_pDef        uintptr // *TFuncDef = SFuncDef
		_zId         uintptr // *int8
		_constMask   uint32
		_i           int32
		_db          uintptr // *Tsqlite3 = Ssqlite3
		_enc         uint8
		_pColl       uintptr // *TCollSeq = SCollSeq
		_endCoalesce int32
		_exprOp      uint8
		_nCol        int32
		_3n          int32
		_destIfFalse int32
		_destIfNull  int32
		_pTab        uintptr // *TTable = STable
		_p1          int32
		_addrINR     int32
		_endLabel    int32
		_nextCase    int32
		_nExpr       int32
		_4i          int32
		_pEList      uintptr     // *TExprList = SExprList
		_aListelem   uintptr     // *SExprList_item
		_opCompare   = esc + 112 // *TExpr = SExpr
		_pX          uintptr     // *TExpr = SExpr
		_pTest       uintptr     // *TExpr = SExpr
	)
	defer crt.Free(esc)
	_v = *(*uintptr)(unsafe.Pointer(_pParse + 16))
	_inReg = _target
	*(*int32)(unsafe.Pointer(_regFree1)) = int32(0)
	*(*int32)(unsafe.Pointer(_regFree2)) = int32(0)
	_p5 = int32(0)

	if _v != 0 {
		goto _1
	}

	return int32(0)

_1:
	if _pExpr != 0 {
		goto _2
	}

	_op = int32(101)
	goto _3

_2:
	_op = int32(*(*uint8)(unsafe.Pointer(_pExpr)))
_3:
	switch _op {
	case int32(147):
		goto _5
	case int32(145):
		goto _6
	case int32(134):
		goto _7
	case int32(132):
		goto _8
	case int32(97):
		goto _9
	case int32(101):
		goto _10
	case int32(133):
		goto _11
	case int32(135):
		goto _12
	case int32(150):
		goto _13
	case int32(36):
		goto _14
	case int32(45):
		goto _15
	case int32(143):
		goto _16
	case int32(56):
		goto _17
	case int32(55):
		goto _18
	case int32(54):
		goto _19
	case int32(57):
		goto _20
	case int32(52):
		goto _21
	case int32(53):
		goto _22
	case int32(44):
		goto _23
	case int32(43):
		goto _24
	case int32(88):
		goto _25
	case int32(90):
		goto _26
	case int32(89):
		goto _27
	case int32(92):
		goto _28
	case int32(84):
		goto _29
	case int32(85):
		goto _30
	case int32(91):
		goto _31
	case int32(86):
		goto _32
	case int32(87):
		goto _33
	case int32(93):
		goto _34
	case int32(148):
		goto _35
	case int32(95):
		goto _36
	case int32(19):
		goto _37
	case int32(50):
		goto _38
	case int32(51):
		goto _39
	case int32(146):
		goto _40
	case int32(144):
		goto _41
	case int32(20):
		goto _42
	case int32(119):
		goto _43
	case int32(152):
		goto _44
	case int32(49):
		goto _45
	case int32(48):
		goto _46
	case int32(155):
		goto _47
	case int32(94):
		goto _48
	case int32(149):
		goto _49
	case int32(75):
		goto _50
	case int32(151):
		goto _51
	case int32(153):
		goto _52
	default:
		goto _53

	case int32(70):
		goto _54
	}
_5:
	_pAggInfo = *(*uintptr)(unsafe.Pointer(_pExpr + 56))
	_pCol = (*(*uintptr)(unsafe.Pointer(_pAggInfo + 32))) + 32*uintptr(*(*int16)(unsafe.Pointer(_pExpr + 50)))
	if (*(*uint8)(unsafe.Pointer(_pAggInfo))) != 0 {
		goto _55
	}

	return *(*int32)(unsafe.Pointer(_pCol + 20))

	goto _56

_55:
	if (*(*uint8)(unsafe.Pointer(_pAggInfo + 1))) == 0 {
		goto _57
	}

	_1241sqlite3VdbeAddOp3(tls, _v, int32(96), *(*int32)(unsafe.Pointer(_pAggInfo + 8)), *(*int32)(unsafe.Pointer(_pCol + 16)), _target)
	return _target

_57:
_56:
_6:
	_iTab = *(*int32)(unsafe.Pointer(_pExpr + 44))
	if _iTab >= int32(0) {
		goto _58
	}

	if (*(*int32)(unsafe.Pointer(_pParse + 68))) >= int32(0) {
		goto _59
	}

	return int32(*(*int16)(unsafe.Pointer(_pExpr + 48))) - (*(*int32)(unsafe.Pointer(_pParse + 68)))

	goto _60

_59:
	_iTab = (*(*int32)(unsafe.Pointer(_pParse + 68))) - int32(1)
_60:
_58:
	return _1592sqlite3ExprCodeGetColumn(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pExpr + 64)), int32(*(*int16)(unsafe.Pointer(_pExpr + 48))), _iTab, _target, *(*uint8)(unsafe.Pointer(_pExpr + 54)))

_7:
	_1861codeInteger(tls, _pParse, _pExpr, int32(0), _target)
	return _target

_8:
	_1862codeReal(tls, _v, *(*uintptr)(unsafe.Pointer(_pExpr + 8)), int32(0), _target)
	return _target

_9:
	_1648sqlite3VdbeLoadString(tls, _v, _target, *(*uintptr)(unsafe.Pointer(_pExpr + 8)))
	return _target

_10:
	_1240sqlite3VdbeAddOp2(tls, _v, int32(70), int32(0), _target)
	return _target

_11:
	_z = (*(*uintptr)(unsafe.Pointer(_pExpr + 8))) + 2
	_n = _211sqlite3Strlen30(tls, _z) - int32(1)

	_zBlob = _1863sqlite3HexToBlob(tls, _388sqlite3VdbeDb(tls, _v), _z, _n)
	_1475sqlite3VdbeAddOp4(tls, _v, int32(72), _n/int32(2), _target, int32(0), _zBlob, int32(-7))
	return _target

_12:
	_1240sqlite3VdbeAddOp2(tls, _v, int32(73), int32(*(*int16)(unsafe.Pointer(_pExpr + 48))), _target)
	if int32(*(*int8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pExpr + 8))) + 1))) == int32(0) {
		goto _61
	}

	_1z = _1058sqlite3VListNumToName(tls, *(*uintptr)(unsafe.Pointer(_pParse + 488)), int32(*(*int16)(unsafe.Pointer(_pExpr + 48))))

	*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pParse + 488)))) = int32(0)
	_1802sqlite3VdbeAppendP4(tls, _v, _1z, int32(-1))
_61:
	return _target

_13:
	return *(*int32)(unsafe.Pointer(_pExpr + 44))

_14:
	_inReg = _1728sqlite3ExprCodeTarget(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pExpr + 16)), _target)
	if _inReg == _target {
		goto _62
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(76), _inReg, _target)
	_inReg = _target
_62:
	_1240sqlite3VdbeAddOp2(tls, _v, int32(82), _target, int32(_1505sqlite3AffinityType(tls, *(*uintptr)(unsafe.Pointer(_pExpr + 8)), null)))
	_1792sqlite3ExprCacheAffinityChange(tls, _pParse, _inReg, int32(1))
	return _inReg

_15:
_16:
	_op = func() int32 {
		if _op == int32(45) {
			return int32(53)
		}
		return int32(52)
	}()
	_p5 = int32(0x80)
_17:
_18:
_19:
_20:
_21:
_22:
	_pLeft = *(*uintptr)(unsafe.Pointer(_pExpr + 16))
	if _1803sqlite3ExprIsVector(tls, _pLeft) == 0 {
		goto _63
	}

	_1864codeVectorCompare(tls, _pParse, _pExpr, _target, uint8(_op), uint8(_p5))
	goto _64

_63:
	_r1 = _1804sqlite3ExprCodeTemp(tls, _pParse, _pLeft, _regFree1)
	_r2 = _1804sqlite3ExprCodeTemp(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pExpr + 24)), _regFree2)
	_1805codeCompare(tls, _pParse, _pLeft, *(*uintptr)(unsafe.Pointer(_pExpr + 24)), _op, _r1, _r2, _inReg, int32(0x20)|_p5)

_64:
	goto _4

_23:
_24:
_25:
_26:
_27:
_28:
_29:
_30:
_31:
_32:
_33:
_34:
	_r1 = _1804sqlite3ExprCodeTemp(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pExpr + 16)), _regFree1)
	_r2 = _1804sqlite3ExprCodeTemp(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pExpr + 24)), _regFree2)
	_1241sqlite3VdbeAddOp3(tls, _v, _op, _r2, _r1, _target)
	goto _4

_35:
	_2pLeft = *(*uintptr)(unsafe.Pointer(_pExpr + 16))

	if int32(*(*uint8)(unsafe.Pointer(_2pLeft))) != int32(134) {
		goto _65
	}

	_1861codeInteger(tls, _pParse, _2pLeft, int32(1), _target)
	return _target

	goto _66

_65:
	if int32(*(*uint8)(unsafe.Pointer(_2pLeft))) != int32(132) {
		goto _67
	}

	_1862codeReal(tls, _v, *(*uintptr)(unsafe.Pointer(_2pLeft + 8)), int32(1), _target)
	return _target

	goto _68

_67:
	*(*uint8)(unsafe.Pointer(_tempX)) = uint8(134)
	*(*uint32)(unsafe.Pointer(_tempX + 4)) = uint32(17408)
	*(*int32)(unsafe.Pointer(_tempX + 8)) = int32(0)
	_r1 = _1804sqlite3ExprCodeTemp(tls, _pParse, _tempX, _regFree1)
	_r2 = _1804sqlite3ExprCodeTemp(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pExpr + 16)), _regFree2)
	_1241sqlite3VdbeAddOp3(tls, _v, int32(89), _r2, _r1, _target)
_68:
_66:
	goto _4

_36:
_37:
	_r1 = _1804sqlite3ExprCodeTemp(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pExpr + 16)), _regFree1)
	_1240sqlite3VdbeAddOp2(tls, _v, _op, _r1, _inReg)
	goto _4

_38:
_39:
	_1240sqlite3VdbeAddOp2(tls, _v, int32(67), int32(1), _target)
	_r1 = _1804sqlite3ExprCodeTemp(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pExpr + 16)), _regFree1)
	_addr = _1489sqlite3VdbeAddOp1(tls, _v, _op, _r1)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(67), int32(0), _target)
	_1474sqlite3VdbeJumpHere(tls, _v, _addr)
	goto _4

_40:
	_pInfo = *(*uintptr)(unsafe.Pointer(_pExpr + 56))
	if _pInfo != 0 {
		goto _69
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+31097 /* "misuse of aggregate: %s()" */, *(*uintptr)(unsafe.Pointer(_pExpr + 8)))
	goto _70

_69:
	return *(*int32)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pInfo + 48))) + 24*uintptr(*(*int16)(unsafe.Pointer(_pExpr + 50)))) + 16))

_70:
	goto _4

_41:
	_constMask = uint32(0)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_enc = *(*uint8)(unsafe.Pointer(_db + 94))
	_pColl = 0
	if *(*uint8)(unsafe.Pointer(_pParse + 35)) == 0 || _1865sqlite3ExprIsConstantNotJoin(tls, _pExpr) == 0 {
		goto _71
	}

	return _1800sqlite3ExprCodeAtInit(tls, _pParse, _pExpr, int32(-1))

_71:
	if ((*(*uint32)(unsafe.Pointer(_pExpr + 4))) & uint32(0x4000)) == uint32(0) {
		goto _72
	}

	_pFarg = null
	goto _73

_72:
	_pFarg = *(*uintptr)(unsafe.Pointer(_pExpr + 32))
_73:
	_nFarg = func() int32 {
		if _pFarg != 0 {
			return *(*int32)(unsafe.Pointer(_pFarg))
		}
		return int32(0)
	}()

	_zId = *(*uintptr)(unsafe.Pointer(_pExpr + 8))
	_pDef = _541sqlite3FindFunction(tls, _db, _zId, _nFarg, _enc, uint8(0))
	if _pDef != 0 && (*(*uintptr)(unsafe.Pointer(_pDef + 32))) == 0 {
		goto _74
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+31123 /* "unknown function: %s()" */, _zId)
	goto _4

_74:
	if (int32(*(*uint16)(unsafe.Pointer(_pDef + 2))) & int32(0x200)) == 0 {
		goto _75
	}

	_endCoalesce = _1541sqlite3VdbeMakeLabel(tls, _v)

	_1478sqlite3ExprCode(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pFarg + 8)), _target)
	_i = int32(1)
_76:
	if _i >= _nFarg {
		goto _78
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(51), _target, _endCoalesce)
	_1801sqlite3ExprCacheRemove(tls, _pParse, _target, int32(1))
	_1652sqlite3ExprCachePush(tls, _pParse)
	_1478sqlite3ExprCode(tls, _pParse, *(*uintptr)(unsafe.Pointer((_pFarg + 8) + 32*uintptr(_i))), _target)
	_1654sqlite3ExprCachePop(tls, _pParse)
	_i++
	goto _76

_78:
	_1569sqlite3VdbeResolveLabel(tls, _v, _endCoalesce)
	goto _4

_75:
	if (int32(*(*uint16)(unsafe.Pointer(_pDef + 2))) & int32(0x400)) == 0 {
		goto _79
	}

	return _1728sqlite3ExprCodeTarget(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pFarg + 8)), _target)

_79:
	_i = int32(0)
_80:
	if _i >= _nFarg {
		goto _82
	}

	if _i >= int32(32) || _1799sqlite3ExprIsConstant(tls, *(*uintptr)(unsafe.Pointer((_pFarg + 8) + 32*uintptr(_i)))) == 0 {
		goto _83
	}

	_constMask = uint32(_constMask | (uint32(1) << (uint(_i) % 32)))
_83:
	if (int32(*(*uint16)(unsafe.Pointer(_pDef + 2)))&int32(0x20)) == int32(0) || _pColl != 0 {
		goto _84
	}

	_pColl = _1789sqlite3ExprCollSeq(tls, _pParse, *(*uintptr)(unsafe.Pointer((_pFarg + 8) + 32*uintptr(_i))))
_84:
	_i++
	goto _80

_82:
	if _pFarg == 0 {
		goto _85
	}

	if _constMask == 0 {
		goto _87
	}

	_r1 = (*(*int32)(unsafe.Pointer(_pParse + 56))) + int32(1)
	{
		p := &(*(*int32)(unsafe.Pointer(_pParse + 56)))
		*p = int32(int32(*p) + _nFarg)
	}
	goto _88

_87:
	_r1 = _1558sqlite3GetTempRange(tls, _pParse, _nFarg)
_88:
	if (int32(*(*uint16)(unsafe.Pointer(_pDef + 2))) & int32(192)) == int32(0) {
		goto _89
	}

	_exprOp = *(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pFarg + 8))))
	if int32(_exprOp) != int32(145) && int32(_exprOp) != int32(147) {
		goto _90
	}

	*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pFarg + 8))) + 54)) = uint8(int32(*(*uint16)(unsafe.Pointer(_pDef + 2))) & int32(192))
_90:
_89:
	_1652sqlite3ExprCachePush(tls, _pParse)
	_1560sqlite3ExprCodeExprList(tls, _pParse, _pFarg, _r1, int32(0), uint8(3))
	_1654sqlite3ExprCachePop(tls, _pParse)
	goto _86

_85:
	_r1 = int32(0)
_86:
	if _nFarg < int32(2) || (*(*uint32)(unsafe.Pointer(_pExpr + 4)))&uint32(0x80) == 0 {
		goto _91
	}

	_pDef = _1866sqlite3VtabOverloadFunction(tls, _db, _pDef, _nFarg, *(*uintptr)(unsafe.Pointer((_pFarg + 8) + 32)))
	goto _92

_91:
	if _nFarg <= int32(0) {
		goto _93
	}

	_pDef = _1866sqlite3VtabOverloadFunction(tls, _db, _pDef, _nFarg, *(*uintptr)(unsafe.Pointer(_pFarg + 8)))
_93:
_92:
	if (int32(*(*uint16)(unsafe.Pointer(_pDef + 2))) & int32(0x20)) == 0 {
		goto _94
	}

	if _pColl != 0 {
		goto _95
	}

	_pColl = *(*uintptr)(unsafe.Pointer(_db + 16))
_95:
	_1475sqlite3VdbeAddOp4(tls, _v, int32(79), int32(0), int32(0), int32(0), _pColl, int32(-2))
_94:
	_1475sqlite3VdbeAddOp4(tls, _v, func() int32 {
		if (*(*int32)(unsafe.Pointer(_pParse + 68))) != 0 {
			return int32(161)
		}
		return int32(162)
	}(), int32(_constMask), _r1, _target, _pDef, int32(-8))
	_1072sqlite3VdbeChangeP5(tls, _v, uint16(uint8(_nFarg)))
	if _nFarg == 0 || _constMask != uint32(0) {
		goto _96
	}

	_1564sqlite3ReleaseTempRange(tls, _pParse, _r1, _nFarg)
_96:
	return _target

_42:
_43:
	if _op != int32(119) || set5(&_nCol, *(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pExpr + 32))))))) == int32(1) {
		goto _97
	}

	_1867sqlite3SubselectError(tls, _pParse, _nCol, int32(1))
	goto _98

_97:
	return _1868sqlite3CodeSubselect(tls, _pParse, _pExpr, int32(0), int32(0))

_98:
	goto _4

_44:
	if (*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pExpr + 16))) + 44))) != int32(0) {
		goto _99
	}

	*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pExpr + 16))) + 44)) = _1868sqlite3CodeSubselect(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pExpr + 16)), int32(0), int32(0))
_99:
	if (*(*int32)(unsafe.Pointer(_pExpr + 44))) == 0 || (*(*int32)(unsafe.Pointer(_pExpr + 44))) == set5(&_3n, _1608sqlite3ExprVectorSize(tls, *(*uintptr)(unsafe.Pointer(_pExpr + 16)))) {
		goto _100
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+26415 /* "%d columns assigned %d values" */, *(*int32)(unsafe.Pointer(_pExpr + 44)), _3n)
_100:
	return (*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pExpr + 16))) + 44))) + int32(*(*int16)(unsafe.Pointer(_pExpr + 48)))

_45:
	_destIfFalse = _1541sqlite3VdbeMakeLabel(tls, _v)
	_destIfNull = _1541sqlite3VdbeMakeLabel(tls, _v)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(70), int32(0), _target)
	_1807sqlite3ExprCodeIN(tls, _pParse, _pExpr, _destIfFalse, _destIfNull)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(67), int32(1), _target)
	_1569sqlite3VdbeResolveLabel(tls, _v, _destIfFalse)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(80), _target, int32(0))
	_1569sqlite3VdbeResolveLabel(tls, _v, _destIfNull)
	return _target

_46:
	_1806exprCodeBetween(tls, _pParse, _pExpr, _target, null, int32(0))
	return _target

_47:
_48:
_49:
	return _1728sqlite3ExprCodeTarget(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pExpr + 16)), _target)

_50:
	_pTab = *(*uintptr)(unsafe.Pointer(_pExpr + 64))
	_p1 = (((*(*int32)(unsafe.Pointer(_pExpr + 44))) * (int32(*(*int16)(unsafe.Pointer(_pTab + 70))) + int32(1))) + int32(1)) + int32(*(*int16)(unsafe.Pointer(_pExpr + 48)))

	_1240sqlite3VdbeAddOp2(tls, _v, int32(144), _p1, _target)
	if int32(*(*int16)(unsafe.Pointer(_pExpr + 48))) < int32(0) || int32(*(*int8)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pTab + 8))) + 32*uintptr(*(*int16)(unsafe.Pointer(_pExpr + 48)))) + 25))) != int32('E') {
		goto _101
	}

	_1489sqlite3VdbeAddOp1(tls, _v, int32(81), _target)
_101:
	goto _4

_51:
	_550sqlite3ErrorMsg(tls, _pParse, ts+31146 /* "row value misused" */)
	goto _4

_52:
	_addrINR = _1489sqlite3VdbeAddOp1(tls, _v, int32(23), *(*int32)(unsafe.Pointer(_pExpr + 44)))
	_1652sqlite3ExprCachePush(tls, _pParse)
	_inReg = _1728sqlite3ExprCodeTarget(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pExpr + 16)), _target)
	_1654sqlite3ExprCachePop(tls, _pParse)
	_1474sqlite3VdbeJumpHere(tls, _v, _addrINR)
	_1657sqlite3VdbeChangeP3(tls, _v, uint32(_addrINR), _inReg)
	goto _4

_53:
	_pTest = 0

	_pEList = *(*uintptr)(unsafe.Pointer(_pExpr + 32))
	_aListelem = _pEList + 8
	_nExpr = *(*int32)(unsafe.Pointer(_pEList))
	_endLabel = _1541sqlite3VdbeMakeLabel(tls, _v)
	if set4(&_pX, *(*uintptr)(unsafe.Pointer(_pExpr + 16))) == 0 {
		goto _102
	}

	*(*SExpr)(unsafe.Pointer(_tempX)) = *(*SExpr)(unsafe.Pointer(_pX))
	_1832exprToRegister(tls, _tempX, _1869exprCodeVector(tls, _pParse, _tempX, _regFree1))
	crt.Xmemset(tls, _opCompare, int32(0), uint64(72))
	*(*uint8)(unsafe.Pointer(_opCompare)) = uint8(53)
	*(*uintptr)(unsafe.Pointer(_opCompare + 16)) = _tempX
	_pTest = _opCompare
	*(*int32)(unsafe.Pointer(_regFree1)) = int32(0)
_102:
	_4i = int32(0)
_103:
	if _4i >= (_nExpr - int32(1)) {
		goto _105
	}

	_1652sqlite3ExprCachePush(tls, _pParse)
	if _pX == 0 {
		goto _106
	}

	*(*uintptr)(unsafe.Pointer(_opCompare + 24)) = *(*uintptr)(unsafe.Pointer(_aListelem + 32*uintptr(_4i)))
	goto _107

_106:
	_pTest = *(*uintptr)(unsafe.Pointer(_aListelem + 32*uintptr(_4i)))
_107:
	_nextCase = _1541sqlite3VdbeMakeLabel(tls, _v)
	_1571sqlite3ExprIfFalse(tls, _pParse, _pTest, _nextCase, int32(0x10))
	_1478sqlite3ExprCode(tls, _pParse, *(*uintptr)(unsafe.Pointer(_aListelem + 32*uintptr(_4i+int32(1)))), _target)
	_1479sqlite3VdbeGoto(tls, _v, _endLabel)
	_1654sqlite3ExprCachePop(tls, _pParse)
	_1569sqlite3VdbeResolveLabel(tls, _v, _nextCase)
	_4i = _4i + int32(2)
	goto _103

_105:
	if (_nExpr & int32(1)) == int32(0) {
		goto _108
	}

	_1652sqlite3ExprCachePush(tls, _pParse)
	_1478sqlite3ExprCode(tls, _pParse, *(*uintptr)(unsafe.Pointer((_pEList + 8) + 32*uintptr(_nExpr-int32(1)))), _target)
	_1654sqlite3ExprCachePop(tls, _pParse)
	goto _109

_108:
	_1240sqlite3VdbeAddOp2(tls, _v, int32(70), int32(0), _target)
_109:
	_1569sqlite3VdbeResolveLabel(tls, _v, _endLabel)
	goto _4

_54:
	if (*(*uintptr)(unsafe.Pointer(_pParse + 168))) != 0 {
		goto _110
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+31164 /* "RAISE() may only be used within ..." */)
	return int32(0)

_110:
	if int32(*(*int8)(unsafe.Pointer(_pExpr + 1))) != int32(2) {
		goto _111
	}

	_1495sqlite3MayAbort(tls, _pParse)
_111:
	if int32(*(*int8)(unsafe.Pointer(_pExpr + 1))) != int32(4) {
		goto _112
	}

	_1475sqlite3VdbeAddOp4(tls, _v, int32(66), int32(0), int32(4), int32(0), *(*uintptr)(unsafe.Pointer(_pExpr + 8)), int32(0))
	goto _113

_112:
	_1745sqlite3HaltConstraint(tls, _pParse, int32(1811), int32(*(*int8)(unsafe.Pointer(_pExpr + 1))), *(*uintptr)(unsafe.Pointer(_pExpr + 8)), int8(0), uint8(0))
_113:
	goto _4

_4:
	_1563sqlite3ReleaseTempReg(tls, _pParse, *(*int32)(unsafe.Pointer(_regFree1)))
	_1563sqlite3ReleaseTempReg(tls, _pParse, *(*int32)(unsafe.Pointer(_regFree2)))
	return _inReg
}

// _1729sqliteAuthBadReturnCode is defined at sqlite3.c:100514:13
func _1729sqliteAuthBadReturnCode(tls crt.TLS, _pParse uintptr /* *TParse = SParse */) {
	_550sqlite3ErrorMsg(tls, _pParse, ts+31214 /* "authorizer malfunction" */)
	*(*int32)(unsafe.Pointer(_pParse + 24)) = int32(1)
}

// _1730resizeIndexObject is defined at sqlite3.c:102308:12
func _1730resizeIndexObject(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pIdx uintptr /* *TIndex = SIndex */, _N int32) (r int32) {
	var (
		_zExtra uintptr // *int8
		_nByte  int32
	)
	if int32(*(*uint16)(unsafe.Pointer(_pIdx + 96))) < _N {
		goto _1
	}

	return int32(0)

_1:
	_nByte = int32(uint64(11) * uint64(_N))
	_zExtra = _295sqlite3DbMallocZero(tls, _db, uint64(_nByte))
	if _zExtra != 0 {
		goto _2
	}

	return int32(7)

_2:
	crt.Xmemcpy(tls, _zExtra, *(*uintptr)(unsafe.Pointer(_pIdx + 64)), uint64(8)*uint64(*(*uint16)(unsafe.Pointer(_pIdx + 96))))
	*(*uintptr)(unsafe.Pointer(_pIdx + 64)) = _zExtra
	_zExtra += uintptr(uint64(8) * uint64(_N))
	crt.Xmemcpy(tls, _zExtra, *(*uintptr)(unsafe.Pointer(_pIdx + 8)), uint64(2)*uint64(*(*uint16)(unsafe.Pointer(_pIdx + 96))))
	*(*uintptr)(unsafe.Pointer(_pIdx + 8)) = _zExtra
	_zExtra += uintptr(uint64(2) * uint64(_N))
	crt.Xmemcpy(tls, _zExtra, *(*uintptr)(unsafe.Pointer(_pIdx + 56)), uint64(*(*uint16)(unsafe.Pointer(_pIdx + 96))))
	*(*uintptr)(unsafe.Pointer(_pIdx + 56)) = _zExtra
	*(*uint16)(unsafe.Pointer(_pIdx + 96)) = uint16(_N)
	set207b(&(*(*uint8)(unsafe.Pointer(_pIdx + 99))), uint32(1))
	return int32(0)
}

// _1731sqlite3ColumnsFromExprList is defined at sqlite3.c:119359:20
func _1731sqlite3ColumnsFromExprList(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pEList uintptr /* *TExprList = SExprList */, _pnCol uintptr /* *Ti16 = int16 */, _paCol uintptr /* **TColumn = SColumn */) (r int32) {
	esc := crt.MustMalloc(40)
	var (
		_db       uintptr // *Tsqlite3 = Ssqlite3
		_i        int32
		_j        int32
		_cnt      = esc   // *Tu32 = uint32
		_aCol     uintptr // *TColumn = SColumn
		_pCol     uintptr // *TColumn = SColumn
		_nCol     int32
		_zName    uintptr // *int8
		_nName    int32
		_ht       = esc + 16 // *THash = SHash
		_pColExpr uintptr    // *TExpr = SExpr
		_iCol     int32
		_pTab     uintptr // *TTable = STable
	)
	defer crt.Free(esc)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_276sqlite3HashInit(tls, _ht)
	if _pEList == 0 {
		goto _1
	}

	_nCol = *(*int32)(unsafe.Pointer(_pEList))
	_aCol = _295sqlite3DbMallocZero(tls, _db, uint64(uint64(32)*uint64(_nCol)))
	if _nCol <= int32(32767) {
		goto _3
	}

	_nCol = int32(32767)
_3:
	goto _2

_1:
	_nCol = int32(0)
	_aCol = null
_2:
	*(*int16)(unsafe.Pointer(_pnCol)) = int16(_nCol)
	*(*uintptr)(unsafe.Pointer(_paCol)) = _aCol
	_i = int32(0)
	_pCol = _aCol
_4:
	if _i >= _nCol || (*(*uint8)(unsafe.Pointer(_db + 97))) != 0 {
		goto _6
	}

	if set4(&_zName, *(*uintptr)(unsafe.Pointer(((_pEList + 8) + 32*uintptr(_i)) + 8))) == 0 {
		goto _7
	}

	goto _8

_7:
	_pColExpr = _1510sqlite3ExprSkipCollate(tls, *(*uintptr)(unsafe.Pointer((_pEList + 8) + 32*uintptr(_i))))
_9:
	if int32(*(*uint8)(unsafe.Pointer(_pColExpr))) != int32(122) {
		goto _10
	}

	_pColExpr = *(*uintptr)(unsafe.Pointer(_pColExpr + 24))

	goto _9

_10:
	if int32(*(*uint8)(unsafe.Pointer(_pColExpr))) != int32(145) && int32(*(*uint8)(unsafe.Pointer(_pColExpr))) != int32(147) || (*(*uintptr)(unsafe.Pointer(_pColExpr + 64))) == 0 {
		goto _11
	}

	_iCol = int32(*(*int16)(unsafe.Pointer(_pColExpr + 48)))
	_pTab = *(*uintptr)(unsafe.Pointer(_pColExpr + 64))
	if _iCol >= int32(0) {
		goto _13
	}

	_iCol = int32(*(*int16)(unsafe.Pointer(_pTab + 68)))
_13:
	_zName = func() uintptr {
		if _iCol >= int32(0) {
			return *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTab + 8))) + 32*uintptr(_iCol)))
		}
		return ts + 20005 /* "rowid" */
	}()
	goto _12

_11:
	if int32(*(*uint8)(unsafe.Pointer(_pColExpr))) != int32(59) {
		goto _14
	}

	_zName = *(*uintptr)(unsafe.Pointer(_pColExpr + 8))
	goto _15

_14:
	_zName = *(*uintptr)(unsafe.Pointer(((_pEList + 8) + 32*uintptr(_i)) + 16))
_15:
_12:
_8:
	if _zName == 0 {
		goto _16
	}

	_zName = _183sqlite3DbStrDup(tls, _db, _zName)
	goto _17

_16:
	_zName = _226sqlite3MPrintf(tls, _db, ts+29430 /* "column%d" */, _i+int32(1))
_17:
	*(*uint32)(unsafe.Pointer(_cnt)) = uint32(0)
_18:
	if _zName == 0 || _424sqlite3HashFind(tls, _ht, _zName) == 0 {
		goto _19
	}

	_nName = _211sqlite3Strlen30(tls, _zName)
	if _nName <= int32(0) {
		goto _20
	}

	_j = _nName - int32(1)
_21:
	if _j <= int32(0) || int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(uint8(*(*int8)(unsafe.Pointer(_zName + uintptr(_j))))))))&int32(0x4) == 0 {
		goto _23
	}

	_j--
	goto _21

_23:
	if int32(*(*int8)(unsafe.Pointer(_zName + uintptr(_j)))) != int32(':') {
		goto _24
	}

	_nName = _j
_24:
_20:
	_zName = _226sqlite3MPrintf(tls, _db, ts+31237 /* "%.*z:%u" */, _nName, _zName, preinc195(&(*(*uint32)(unsafe.Pointer(_cnt)))))
	if (*(*uint32)(unsafe.Pointer(_cnt))) <= uint32(3) {
		goto _25
	}

	Xsqlite3_randomness(tls, int32(4), _cnt)
_25:
	goto _18

_19:
	*(*uintptr)(unsafe.Pointer(_pCol)) = _zName
	if _zName == 0 || _841sqlite3HashInsert(tls, _ht, _zName, _pCol) != _pCol {
		goto _26
	}

	_178sqlite3OomFault(tls, _db)
_26:
	_i++
	_pCol += 32
	goto _4

_6:
	_369sqlite3HashClear(tls, _ht)
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _27
	}

	_j = int32(0)
_28:
	if _j >= _i {
		goto _30
	}

	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_aCol + 32*uintptr(_j))))
	_j++
	goto _28

_30:
	_181sqlite3DbFree(tls, _db, _aCol)
	*(*uintptr)(unsafe.Pointer(_paCol)) = null
	*(*int16)(unsafe.Pointer(_pnCol)) = int16(0)
	return int32(7)

_27:
	return int32(0)
}

// _1732sqlite3SelectAddColumnTypeAndCollation is defined at sqlite3.c:119464:21
func _1732sqlite3SelectAddColumnTypeAndCollation(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pTab uintptr /* *TTable = STable */, _pSelect uintptr /* *TSelect = SSelect */) {
	esc := crt.MustMalloc(56)
	var (
		_db    uintptr // *Tsqlite3 = Ssqlite3
		_sNC   = esc   // *TNameContext = SNameContext
		_pCol  uintptr // *TColumn = SColumn
		_pColl uintptr // *TCollSeq = SCollSeq
		_i     int32
		_p     uintptr // *TExpr = SExpr
		_a     uintptr // *SExprList_item
		_zType uintptr // *int8
		_n     int32
		_m     int32
	)
	defer crt.Free(esc)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))

	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _1
	}

	return

_1:
	crt.Xmemset(tls, _sNC, int32(0), uint64(56))
	*(*uintptr)(unsafe.Pointer(_sNC + 8)) = *(*uintptr)(unsafe.Pointer(_pSelect + 32))
	_a = (*(*uintptr)(unsafe.Pointer(_pSelect))) + 8
	_i = int32(0)
	_pCol = *(*uintptr)(unsafe.Pointer(_pTab + 8))
_2:
	if _i >= int32(*(*int16)(unsafe.Pointer(_pTab + 70))) {
		goto _4
	}

	_p = *(*uintptr)(unsafe.Pointer(_a + 32*uintptr(_i)))
	_zType = _1870columnTypeImpl(tls, _sNC, _p)
	*(*int8)(unsafe.Pointer(_pCol + 25)) = _1817sqlite3ExprAffinity(tls, _p)
	if _zType == 0 {
		goto _5
	}

	_m = _211sqlite3Strlen30(tls, _zType)
	_n = _211sqlite3Strlen30(tls, *(*uintptr)(unsafe.Pointer(_pCol)))
	*(*uintptr)(unsafe.Pointer(_pCol)) = _939sqlite3DbReallocOrFree(tls, _db, *(*uintptr)(unsafe.Pointer(_pCol)), uint64((_n+_m)+int32(2)))
	if (*(*uintptr)(unsafe.Pointer(_pCol))) == 0 {
		goto _6
	}

	crt.Xmemcpy(tls, (*(*uintptr)(unsafe.Pointer(_pCol)))+uintptr(_n+int32(1)), _zType, uint64(_m+int32(1)))
	{
		p := &(*(*uint8)(unsafe.Pointer(_pCol + 27)))
		*p = uint8(int32(*p) | int32(0x4))
	}
_6:
_5:
	if int32(*(*int8)(unsafe.Pointer(_pCol + 25))) != int32(0) {
		goto _7
	}

	*(*int8)(unsafe.Pointer(_pCol + 25)) = int8('A')
_7:
	_pColl = _1789sqlite3ExprCollSeq(tls, _pParse, _p)
	if _pColl == 0 || (*(*uintptr)(unsafe.Pointer(_pCol + 16))) != 0 {
		goto _8
	}

	*(*uintptr)(unsafe.Pointer(_pCol + 16)) = _183sqlite3DbStrDup(tls, _db, *(*uintptr)(unsafe.Pointer(_pColl)))
_8:
	_i++
	_pCol += 32
	goto _2

_4:
	*(*int16)(unsafe.Pointer(_pTab + 74)) = int16(1)
}

// _1733azType [5]*int8, escapes: true, sqlite3.c:102270:23
var _1733azType = bss + 17616 // array of 5 pointer to char

func init() {
	*(*[5]uintptr)(unsafe.Pointer(_1733azType)) = [5]uintptr{
		0: ts + 4553,  /* "" */
		1: ts + 31245, /* " TEXT" */
		2: ts + 31251, /* " NUM" */
		3: ts + 31256, /* " INT" */
		4: ts + 31261, /* " REAL" */
	}
}

// _1734identLength is defined at sqlite3.c:102191:12
func _1734identLength(tls crt.TLS, _z uintptr /* *int8 */) (r int32) {
	var _n int32

	_n = int32(0)
_1:
	if (*(*int8)(unsafe.Pointer(_z))) == 0 {
		goto _3
	}

	if int32(*(*int8)(unsafe.Pointer(_z))) != int32('"') {
		goto _4
	}

	_n++
_4:
	_n++
	_z++
	goto _1

_3:
	return _n + int32(2)
}

// _1735identPut is defined at sqlite3.c:102212:13
func _1735identPut(tls crt.TLS, _z uintptr /* *int8 */, _pIdx uintptr /* *int32 */, _zSignedIdent uintptr /* *int8 */) {
	var (
		_zIdent    uintptr // *uint8
		_i         int32
		_j         int32
		_needQuote int32
	)
	_zIdent = _zSignedIdent
	_i = *(*int32)(unsafe.Pointer(_pIdx))
	_j = int32(0)
_1:
	if (*(*uint8)(unsafe.Pointer(_zIdent + uintptr(_j)))) == 0 {
		goto _3
	}

	if int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(*(*uint8)(unsafe.Pointer(_zIdent + uintptr(_j)))))))&int32(0x6) != 0 || int32(*(*uint8)(unsafe.Pointer(_zIdent + uintptr(_j)))) == int32('_') {
		goto _4
	}

	goto _3

_4:
	_j++
	goto _1

_3:
	_needQuote = bool2int((((int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(*(*uint8)(unsafe.Pointer(_zIdent))))))&int32(0x4) != 0) || (_212sqlite3KeywordCode(tls, _zIdent, _j) != int32(59))) || (int32(*(*uint8)(unsafe.Pointer(_zIdent + uintptr(_j)))) != int32(0))) || (_j == int32(0)))
	if _needQuote == 0 {
		goto _5
	}

	*(*int8)(unsafe.Pointer(_z + uintptr(postinc7(&_i)))) = int8('"')
_5:
	_j = int32(0)
_6:
	if (*(*uint8)(unsafe.Pointer(_zIdent + uintptr(_j)))) == 0 {
		goto _8
	}

	*(*int8)(unsafe.Pointer(_z + uintptr(postinc7(&_i)))) = int8(*(*uint8)(unsafe.Pointer(_zIdent + uintptr(_j))))
	if int32(*(*uint8)(unsafe.Pointer(_zIdent + uintptr(_j)))) != int32('"') {
		goto _9
	}

	*(*int8)(unsafe.Pointer(_z + uintptr(postinc7(&_i)))) = int8('"')
_9:
	_j++
	goto _6

_8:
	if _needQuote == 0 {
		goto _10
	}

	*(*int8)(unsafe.Pointer(_z + uintptr(postinc7(&_i)))) = int8('"')
_10:
	*(*int8)(unsafe.Pointer(_z + uintptr(_i))) = int8(0)
	*(*int32)(unsafe.Pointer(_pIdx)) = _i
}

// _1736exprIsConst is defined at sqlite3.c:93619:12
func _1736exprIsConst(tls crt.TLS, _p uintptr /* *TExpr = SExpr */, _initFlag int32, _iCur int32) (r int32) {
	esc := crt.MustMalloc(48)
	var _w = esc // *TWalker = SWalker
	defer crt.Free(esc)
	*(*uint8)(unsafe.Pointer(_w + 36)) = uint8(_initFlag)
	*(*uintptr)(unsafe.Pointer(_w + 8)) = fp56(_1871exprNodeIsConstant)
	*(*uintptr)(unsafe.Pointer(_w + 16)) = fp56(_1872sqlite3SelectWalkFail)
	*(*int32)(unsafe.Pointer(_w + 40)) = _iCur
	_1795sqlite3WalkExpr(tls, _w, _p)
	return int32(*(*uint8)(unsafe.Pointer(_w + 36)))
}

// _1737exprDup is defined at sqlite3.c:92989:13
func _1737exprDup(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _p uintptr /* *TExpr = SExpr */, _dupFlags int32, _pzBuffer uintptr /* **Tu8 = uint8 */) (r uintptr /* *TExpr = SExpr */) {
	esc := crt.MustMalloc(8)
	var (
		_pNew        uintptr // *TExpr = SExpr
		_zAlloc      = esc   // **Tu8 = uint8
		_staticFlag  uint32
		_nStructSize uint32
		_nNewSize    int32
		_nToken      int32
		_nSize       uint32
		_zToken      uintptr // *int8
	)
	defer crt.Free(esc)

	if _pzBuffer == 0 {
		goto _1
	}

	*(*uintptr)(unsafe.Pointer(_zAlloc)) = *(*uintptr)(unsafe.Pointer(_pzBuffer))
	_staticFlag = uint32(0x8000)
	goto _2

_1:
	*(*uintptr)(unsafe.Pointer(_zAlloc)) = _373sqlite3DbMallocRawNN(tls, _db, uint64(_1873dupedExprSize(tls, _p, _dupFlags)))
	_staticFlag = uint32(0)
_2:
	_pNew = *(*uintptr)(unsafe.Pointer(_zAlloc))
	if _pNew == 0 {
		goto _3
	}

	_nStructSize = uint32(_1874dupedExprStructSize(tls, _p, _dupFlags))
	_nNewSize = int32(_nStructSize & uint32(0xfff))
	if ((*(*uint32)(unsafe.Pointer(_p + 4)))&uint32(0x400)) != uint32(0) || (*(*uintptr)(unsafe.Pointer(_p + 8))) == 0 {
		goto _4
	}

	_nToken = _211sqlite3Strlen30(tls, *(*uintptr)(unsafe.Pointer(_p + 8))) + int32(1)
	goto _5

_4:
	_nToken = int32(0)
_5:
	if _dupFlags == 0 {
		goto _6
	}

	crt.Xmemcpy(tls, *(*uintptr)(unsafe.Pointer(_zAlloc)), _p, uint64(_nNewSize))
	goto _7

_6:
	_nSize = uint32(_1875exprStructSize(tls, _p))
	crt.Xmemcpy(tls, *(*uintptr)(unsafe.Pointer(_zAlloc)), _p, uint64(_nSize))
	if uint64(_nSize) >= uint64(72) {
		goto _8
	}

	crt.Xmemset(tls, (*(*uintptr)(unsafe.Pointer(_zAlloc)))+uintptr(_nSize), int32(0), uint64(72)-uint64(_nSize))
_8:
_7:
	{
		p := &(*(*uint32)(unsafe.Pointer(_pNew + 4)))
		*p = uint32(uint32(*p) & uint32(4294844415))
	}
	{
		p := &(*(*uint32)(unsafe.Pointer(_pNew + 4)))
		*p = uint32(uint32(*p) | (_nStructSize & uint32(24576)))
	}
	{
		p := &(*(*uint32)(unsafe.Pointer(_pNew + 4)))
		*p = uint32(uint32(*p) | _staticFlag)
	}
	if _nToken == 0 {
		goto _9
	}

	_zToken = set4(&(*(*uintptr)(unsafe.Pointer(_pNew + 8))), (*(*uintptr)(unsafe.Pointer(_zAlloc)))+uintptr(_nNewSize))
	crt.Xmemcpy(tls, _zToken, *(*uintptr)(unsafe.Pointer(_p + 8)), uint64(_nToken))
_9:
	if uint32(0) != (((*(*uint32)(unsafe.Pointer(_p + 4))) | (*(*uint32)(unsafe.Pointer(_pNew + 4)))) & uint32(8404992)) {
		goto _10
	}

	if ((*(*uint32)(unsafe.Pointer(_p + 4))) & uint32(0x800)) == uint32(0) {
		goto _11
	}

	*(*uintptr)(unsafe.Pointer(_pNew + 32)) = _1529sqlite3SelectDup(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 32)), _dupFlags)
	goto _12

_11:
	*(*uintptr)(unsafe.Pointer(_pNew + 32)) = _1518sqlite3ExprListDup(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 32)), _dupFlags)
_12:
_10:
	if ((*(*uint32)(unsafe.Pointer(_pNew + 4))) & uint32(24576)) == uint32(0) {
		goto _13
	}

	*(*uintptr)(unsafe.Pointer(_zAlloc)) += uintptr(_1876dupedExprNodeSize(tls, _p, _dupFlags))
	if ((*(*uint32)(unsafe.Pointer(_pNew + 4))) & uint32(8404992)) != uint32(0) {
		goto _15
	}

	*(*uintptr)(unsafe.Pointer(_pNew + 16)) = func() uintptr {
		if (*(*uintptr)(unsafe.Pointer(_p + 16))) != 0 {
			return _1737exprDup(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 16)), int32(0x1), _zAlloc)
		}
		return null
	}()
	*(*uintptr)(unsafe.Pointer(_pNew + 24)) = func() uintptr {
		if (*(*uintptr)(unsafe.Pointer(_p + 24))) != 0 {
			return _1737exprDup(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 24)), int32(0x1), _zAlloc)
		}
		return null
	}()
_15:
	if _pzBuffer == 0 {
		goto _16
	}

	*(*uintptr)(unsafe.Pointer(_pzBuffer)) = *(*uintptr)(unsafe.Pointer(_zAlloc))
_16:
	goto _14

_13:
	if ((*(*uint32)(unsafe.Pointer(_p + 4))) & uint32(8404992)) != uint32(0) {
		goto _17
	}

	if int32(*(*uint8)(unsafe.Pointer(_pNew))) != int32(152) {
		goto _18
	}

	*(*uintptr)(unsafe.Pointer(_pNew + 16)) = *(*uintptr)(unsafe.Pointer(_p + 16))

	goto _19

_18:
	*(*uintptr)(unsafe.Pointer(_pNew + 16)) = _1507sqlite3ExprDup(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 16)), int32(0))
_19:
	*(*uintptr)(unsafe.Pointer(_pNew + 24)) = _1507sqlite3ExprDup(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 24)), int32(0))
_17:
_14:
_3:
	return _pNew
}

// _1738exprAlwaysFalse is defined at sqlite3.c:92711:12
func _1738exprAlwaysFalse(tls crt.TLS, _p uintptr /* *TExpr = SExpr */) (r int32) {
	esc := crt.MustMalloc(4)
	var _v = esc // *int32
	defer crt.Free(esc)
	*(*int32)(unsafe.Pointer(_v)) = int32(0)
	if ((*(*uint32)(unsafe.Pointer(_p + 4))) & uint32(0x1)) == uint32(0) {
		goto _1
	}

	return int32(0)

_1:
	if _1762sqlite3ExprIsInteger(tls, _p, _v) != 0 {
		goto _2
	}

	return int32(0)

_2:
	return bool2int((*(*int32)(unsafe.Pointer(_v))) == int32(0))
}

// _1739sqlite3IndexedByLookup is defined at sqlite3.c:121690:20
func _1739sqlite3IndexedByLookup(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pFrom uintptr /* *SSrcList_item */) (r int32) {
	var (
		_pTab       uintptr // *TTable = STable
		_zIndexedBy uintptr // *int8
		_pIdx       uintptr // *TIndex = SIndex
	)
	if (*(*uintptr)(unsafe.Pointer(_pFrom + 32))) == 0 || (uint32((*(*uint8)(unsafe.Pointer((_pFrom + 60) + 1)))>>1)<<31>>31) == 0 {
		goto _1
	}

	_pTab = *(*uintptr)(unsafe.Pointer(_pFrom + 32))
	_zIndexedBy = *(*uintptr)(unsafe.Pointer(_pFrom + 96))
	_pIdx = *(*uintptr)(unsafe.Pointer(_pTab + 16))
_2:
	if _pIdx == 0 || _110sqlite3StrICmp(tls, *(*uintptr)(unsafe.Pointer(_pIdx)), _zIndexedBy) == 0 {
		goto _4
	}

	_pIdx = *(*uintptr)(unsafe.Pointer(_pIdx + 40))
	goto _2

_4:
	if _pIdx != 0 {
		goto _5
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+31267 /* "no such index: %s" */, _zIndexedBy, int32(0))
	*(*uint8)(unsafe.Pointer(_pParse + 29)) = uint8(1)
	return int32(1)

_5:
	*(*uintptr)(unsafe.Pointer(_pFrom + 104)) = _pIdx
_1:
	return int32(0)
}

// _1740sqlite3GetCollSeq is defined at sqlite3.c:105223:24
func _1740sqlite3GetCollSeq(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _enc uint8, _pColl uintptr /* *TCollSeq = SCollSeq */, _zName uintptr /* *int8 */) (r uintptr /* *TCollSeq = SCollSeq */) {
	var (
		_p  uintptr // *TCollSeq = SCollSeq
		_db uintptr // *Tsqlite3 = Ssqlite3
	)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_p = _pColl
	if _p != 0 {
		goto _1
	}

	_p = _280sqlite3FindCollSeq(tls, _db, _enc, _zName, int32(0))
_1:
	if _p != 0 && (*(*uintptr)(unsafe.Pointer(_p + 24))) != 0 {
		goto _2
	}

	_1877callCollNeeded(tls, _db, int32(_enc), _zName)
	_p = _280sqlite3FindCollSeq(tls, _db, _enc, _zName, int32(0))
_2:
	if _p == 0 || (*(*uintptr)(unsafe.Pointer(_p + 24))) != 0 || _1878synthCollSeq(tls, _db, _p) == 0 {
		goto _3
	}

	_p = null
_3:
	if _p != 0 {
		goto _4
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+31285 /* "no such collation sequence: %s" */, _zName)
_4:
	return _p
}

// _1741sqlite3UniqueConstraint is defined at sqlite3.c:104855:21
func _1741sqlite3UniqueConstraint(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _onError int32, _pIdx uintptr /* *TIndex = SIndex */) {
	esc := crt.MustMalloc(32)
	var (
		_zErr   uintptr // *int8
		_j      int32
		_errMsg = esc   // *TStrAccum = SStrAccum
		_pTab   uintptr // *TTable = STable
		_zCol   uintptr // *int8
	)
	defer crt.Free(esc)
	_pTab = *(*uintptr)(unsafe.Pointer(_pIdx + 24))
	_130sqlite3StrAccumInit(tls, _errMsg, *(*uintptr)(unsafe.Pointer(_pParse)), null, int32(0), int32(200))
	if (*(*uintptr)(unsafe.Pointer(_pIdx + 80))) == 0 {
		goto _1
	}

	_807sqlite3XPrintf(tls, _errMsg, ts+31316 /* "index '%q'" */, *(*uintptr)(unsafe.Pointer(_pIdx)))
	goto _2

_1:
	_j = int32(0)
_3:
	if _j >= int32(*(*uint16)(unsafe.Pointer(_pIdx + 94))) {
		goto _5
	}

	_zCol = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTab + 8))) + 32*uintptr(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 8))) + 2*uintptr(_j))))))
	if _j == 0 {
		goto _6
	}

	_301sqlite3StrAccumAppend(tls, _errMsg, ts+31327 /* ", " */, int32(2))
_6:
	_312sqlite3StrAccumAppendAll(tls, _errMsg, *(*uintptr)(unsafe.Pointer(_pTab)))
	_301sqlite3StrAccumAppend(tls, _errMsg, ts+12868 /* "." */, int32(1))
	_312sqlite3StrAccumAppendAll(tls, _errMsg, _zCol)
	_j++
	goto _3

_5:
_2:
	_zErr = _299sqlite3StrAccumFinish(tls, _errMsg)
	_1745sqlite3HaltConstraint(tls, _pParse, func() int32 {
		if int32(uint32(*(*uint8)(unsafe.Pointer(_pIdx + 99)))<<30>>30) == int32(2) {
			return int32(1555)
		}
		return int32(2067)
	}(), _onError, _zErr, int8(-7), uint8(2))
}

// _1742sqlite3VtabCallConnect is defined at sqlite3.c:126938:20
func _1742sqlite3VtabCallConnect(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pTab uintptr /* *TTable = STable */) (r int32) {
	esc := crt.MustMalloc(8)
	var (
		_db      uintptr // *Tsqlite3 = Ssqlite3
		_zMod    uintptr // *int8
		_pMod    uintptr // *TModule = SModule
		_rc      int32
		_zModule uintptr // *int8
		_zErr    = esc   // **int8
	)
	defer crt.Free(esc)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))

	if *(*int32)(unsafe.Pointer(_pTab + 84)) != 0 && _1037sqlite3GetVTable(tls, _db, _pTab) == 0 {
		goto _1
	}

	return int32(0)

_1:
	_zMod = *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pTab + 88))))
	_pMod = _424sqlite3HashFind(tls, _db+448, _zMod)
	if _pMod != 0 {
		goto _2
	}

	_zModule = *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pTab + 88))))
	_550sqlite3ErrorMsg(tls, _pParse, ts+20909 /* "no such module: %s" */, _zModule)
	_rc = int32(1)
	goto _3

_2:
	*(*uintptr)(unsafe.Pointer(_zErr)) = 0
	_rc = _1036vtabCallConstructor(tls, _db, _pTab, _pMod, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pMod))) + 16)), _zErr)
	if _rc == int32(0) {
		goto _4
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+429 /* "%s" */, *(*uintptr)(unsafe.Pointer(_zErr)))
	*(*int32)(unsafe.Pointer(_pParse + 24)) = _rc
_4:
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_zErr)))
_3:
	return _rc
}

// _1743sqlite3SrcListAssignCursors is defined at sqlite3.c:104482:21
func _1743sqlite3SrcListAssignCursors(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pList uintptr /* *TSrcList = SSrcList */) {
	var (
		_i     int32
		_pItem uintptr // *SSrcList_item
	)

	if _pList == 0 {
		goto _1
	}

	_i = int32(0)
	_pItem = _pList + 8
_2:
	if _i >= (*(*int32)(unsafe.Pointer(_pList))) {
		goto _4
	}

	if (*(*int32)(unsafe.Pointer(_pItem + 64))) < int32(0) {
		goto _5
	}

	goto _4

_5:
	*(*int32)(unsafe.Pointer(_pItem + 64)) = postinc7(&(*(*int32)(unsafe.Pointer(_pParse + 52))))
	if (*(*uintptr)(unsafe.Pointer(_pItem + 40))) == 0 {
		goto _6
	}

	_1743sqlite3SrcListAssignCursors(tls, _pParse, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pItem + 40))) + 32)))
_6:
	_i++
	_pItem += 112
	goto _2

_4:
_1:
}

// _1744sqlite3SrcListDup is defined at sqlite3.c:93180:24
func _1744sqlite3SrcListDup(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _p uintptr /* *TSrcList = SSrcList */, _flags int32) (r uintptr /* *TSrcList = SSrcList */) {
	var (
		_pNew     uintptr // *TSrcList = SSrcList
		_i        int32
		_nByte    int32
		_pNewItem uintptr // *SSrcList_item
		_pOldItem uintptr // *SSrcList_item
		_pTab     uintptr // *TTable = STable
	)

	if _p != 0 {
		goto _1
	}

	return null

_1:
	_nByte = int32(uint64(120) + func() uint64 {
		if (*(*int32)(unsafe.Pointer(_p))) > int32(0) {
			return uint64(112) * uint64((*(*int32)(unsafe.Pointer(_p)))-int32(1))
		}
		return uint64(0)
	}())
	_pNew = _373sqlite3DbMallocRawNN(tls, _db, uint64(_nByte))
	if _pNew != 0 {
		goto _2
	}

	return null

_2:
	*(*int32)(unsafe.Pointer(_pNew)) = int32(set25(&(*(*uint32)(unsafe.Pointer(_pNew + 4))), uint32(*(*int32)(unsafe.Pointer(_p)))))
	_i = int32(0)
_3:
	if _i >= (*(*int32)(unsafe.Pointer(_p))) {
		goto _5
	}

	_pNewItem = (_pNew + 8) + 112*uintptr(_i)
	_pOldItem = (_p + 8) + 112*uintptr(_i)
	*(*uintptr)(unsafe.Pointer(_pNewItem)) = *(*uintptr)(unsafe.Pointer(_pOldItem))
	*(*uintptr)(unsafe.Pointer(_pNewItem + 8)) = _183sqlite3DbStrDup(tls, _db, *(*uintptr)(unsafe.Pointer(_pOldItem + 8)))
	*(*uintptr)(unsafe.Pointer(_pNewItem + 16)) = _183sqlite3DbStrDup(tls, _db, *(*uintptr)(unsafe.Pointer(_pOldItem + 16)))
	*(*uintptr)(unsafe.Pointer(_pNewItem + 24)) = _183sqlite3DbStrDup(tls, _db, *(*uintptr)(unsafe.Pointer(_pOldItem + 24)))
	*(*struct {
		Xjointype uint8
		F1        uint8
	})(unsafe.Pointer(_pNewItem + 60)) = *(*struct {
		Xjointype uint8
		F1        uint8
	})(unsafe.Pointer(_pOldItem + 60))
	*(*int32)(unsafe.Pointer(_pNewItem + 64)) = *(*int32)(unsafe.Pointer(_pOldItem + 64))
	*(*int32)(unsafe.Pointer(_pNewItem + 48)) = *(*int32)(unsafe.Pointer(_pOldItem + 48))
	*(*int32)(unsafe.Pointer(_pNewItem + 52)) = *(*int32)(unsafe.Pointer(_pOldItem + 52))
	if (uint32((*(*uint8)(unsafe.Pointer((_pNewItem + 60) + 1)))>>1) << 31 >> 31) == 0 {
		goto _6
	}

	*(*uintptr)(unsafe.Pointer(_pNewItem + 96)) = _183sqlite3DbStrDup(tls, _db, *(*uintptr)(unsafe.Pointer(_pOldItem + 96)))
_6:
	*(*uintptr)(unsafe.Pointer(_pNewItem + 104)) = *(*uintptr)(unsafe.Pointer(_pOldItem + 104))
	if (uint32((*(*uint8)(unsafe.Pointer((_pNewItem + 60) + 1)))>>2) << 31 >> 31) == 0 {
		goto _7
	}

	*(*uintptr)(unsafe.Pointer(_pNewItem + 96)) = _1518sqlite3ExprListDup(tls, _db, *(*uintptr)(unsafe.Pointer(_pOldItem + 96)), _flags)
_7:
	_pTab = set4(&(*(*uintptr)(unsafe.Pointer(_pNewItem + 32))), *(*uintptr)(unsafe.Pointer(_pOldItem + 32)))
	if _pTab == 0 {
		goto _8
	}

	(*(*uint32)(unsafe.Pointer(_pTab + 60)))++
_8:
	*(*uintptr)(unsafe.Pointer(_pNewItem + 40)) = _1529sqlite3SelectDup(tls, _db, *(*uintptr)(unsafe.Pointer(_pOldItem + 40)), _flags)
	*(*uintptr)(unsafe.Pointer(_pNewItem + 72)) = _1507sqlite3ExprDup(tls, _db, *(*uintptr)(unsafe.Pointer(_pOldItem + 72)), _flags)
	*(*uintptr)(unsafe.Pointer(_pNewItem + 80)) = _1661sqlite3IdListDup(tls, _db, *(*uintptr)(unsafe.Pointer(_pOldItem + 80)))
	*(*uint64)(unsafe.Pointer(_pNewItem + 88)) = *(*uint64)(unsafe.Pointer(_pOldItem + 88))
	_i++
	goto _3

_5:
	return _pNew
}

// _1745sqlite3HaltConstraint is defined at sqlite3.c:104835:21
func _1745sqlite3HaltConstraint(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _errCode int32, _onError int32, _p4 uintptr /* *int8 */, _p4type int8, _p5Errmsg uint8) {
	var _v uintptr // *TVdbe = SVdbe

	_v = _1472sqlite3GetVdbe(tls, _pParse)

	if _onError != int32(2) {
		goto _1
	}

	_1495sqlite3MayAbort(tls, _pParse)
_1:
	_1475sqlite3VdbeAddOp4(tls, _v, int32(66), _errCode, _onError, int32(0), _p4, int32(_p4type))
	_1072sqlite3VdbeChangeP5(tls, _v, uint16(_p5Errmsg))
}

// _1746sqlite3TriggerList is defined at sqlite3.c:124001:24
func _1746sqlite3TriggerList(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pTab uintptr /* *TTable = STable */) (r uintptr /* *TTrigger = STrigger */) {
	var (
		_pTmpSchema uintptr // *TSchema = SSchema
		_pList      uintptr // *TTrigger = STrigger
		_p          uintptr // *THashElem = SHashElem
		_pTrig      uintptr // *TTrigger = STrigger
	)
	_pTmpSchema = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pParse))) + 32))) + 32) + 24))
	_pList = 0
	if (*(*uint8)(unsafe.Pointer(_pParse + 194))) == 0 {
		goto _1
	}

	return null

_1:
	if _pTmpSchema == (*(*uintptr)(unsafe.Pointer(_pTab + 112))) {
		goto _2
	}

	_p = *(*uintptr)(unsafe.Pointer((_pTmpSchema + 56) + 8))
_3:
	if _p == 0 {
		goto _5
	}

	_pTrig = *(*uintptr)(unsafe.Pointer(_p + 16))
	if (*(*uintptr)(unsafe.Pointer(_pTrig + 48))) != (*(*uintptr)(unsafe.Pointer(_pTab + 112))) || int32(0) != _110sqlite3StrICmp(tls, *(*uintptr)(unsafe.Pointer(_pTrig + 8)), *(*uintptr)(unsafe.Pointer(_pTab))) {
		goto _6
	}

	*(*uintptr)(unsafe.Pointer(_pTrig + 64)) = func() uintptr {
		if _pList != 0 {
			return _pList
		}
		return *(*uintptr)(unsafe.Pointer(_pTab + 104))
	}()
	_pList = _pTrig
_6:
	_p = *(*uintptr)(unsafe.Pointer(_p))
	goto _3

_5:
_2:
	return func() uintptr {
		if _pList != 0 {
			return _pList
		}
		return *(*uintptr)(unsafe.Pointer(_pTab + 104))
	}()
}

// _1747destroyTable is defined at sqlite3.c:103064:13
func _1747destroyTable(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pTab uintptr /* *TTable = STable */) {
	var (
		_iTab       int32
		_iDestroyed int32
		_pIdx       uintptr // *TIndex = SIndex
		_iLargest   int32
		_iIdx       int32
		_iDb        int32
	)
	_iTab = *(*int32)(unsafe.Pointer(_pTab + 56))
	_iDestroyed = int32(0)
_1:
	_iLargest = int32(0)
	if _iDestroyed != int32(0) && _iTab >= _iDestroyed {
		goto _3
	}

	_iLargest = _iTab
_3:
	_pIdx = *(*uintptr)(unsafe.Pointer(_pTab + 16))
_4:
	if _pIdx == 0 {
		goto _6
	}

	_iIdx = *(*int32)(unsafe.Pointer(_pIdx + 88))

	if _iDestroyed != int32(0) && _iIdx >= _iDestroyed || _iIdx <= _iLargest {
		goto _7
	}

	_iLargest = _iIdx
_7:
	_pIdx = *(*uintptr)(unsafe.Pointer(_pIdx + 40))
	goto _4

_6:
	if _iLargest != int32(0) {
		goto _8
	}

	return

	goto _9

_8:
	_iDb = _1069sqlite3SchemaToIndex(tls, *(*uintptr)(unsafe.Pointer(_pParse)), *(*uintptr)(unsafe.Pointer(_pTab + 112)))

	_1622destroyRootPage(tls, _pParse, _iLargest, _iDb)
	_iDestroyed = _iLargest
_9:
	goto _1
}

// _1748sqliteViewResetAll is defined at sqlite3.c:102969:13
func _1748sqliteViewResetAll(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _idx int32) {
	var (
		_i    uintptr // *THashElem = SHashElem
		_pTab uintptr // *TTable = STable
	)

	if (int32(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_idx)) + 24))) + 114))) & int32(0x2)) == int32(0x2) {
		goto _1
	}

	return

_1:
	_i = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_idx)) + 24))) + 8) + 8))
_2:
	if _i == 0 {
		goto _4
	}

	_pTab = *(*uintptr)(unsafe.Pointer(_i + 16))
	if (*(*uintptr)(unsafe.Pointer(_pTab + 24))) == 0 {
		goto _5
	}

	_1097sqlite3DeleteColumnNames(tls, _db, _pTab)
	*(*uintptr)(unsafe.Pointer(_pTab + 8)) = null
	*(*int16)(unsafe.Pointer(_pTab + 70)) = int16(0)
_5:
	_i = *(*uintptr)(unsafe.Pointer(_i))
	goto _2

_4:
	{
		p := &(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_idx)) + 24))) + 114)))
		*p = uint16(int32(*p) & int32(-3))
	}
}

// _1749sqlite3FixExprList is defined at sqlite3.c:100386:20
func _1749sqlite3FixExprList(tls crt.TLS, _pFix uintptr /* *TDbFixer = SDbFixer */, _pList uintptr /* *TExprList = SExprList */) (r int32) {
	var (
		_i     int32
		_pItem uintptr // *SExprList_item
	)
	if _pList != 0 {
		goto _1
	}

	return int32(0)

_1:
	_i = int32(0)
	_pItem = _pList + 8
_2:
	if _i >= (*(*int32)(unsafe.Pointer(_pList))) {
		goto _4
	}

	if _1660sqlite3FixExpr(tls, _pFix, *(*uintptr)(unsafe.Pointer(_pItem))) == 0 {
		goto _5
	}

	return int32(1)

_5:
	_i++
	_pItem += 32
	goto _2

_4:
	return int32(0)
}

// _1750withDup is defined at sqlite3.c:93088:13
func _1750withDup(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _p uintptr /* *TWith = SWith */) (r uintptr /* *TWith = SWith */) {
	var (
		_pRet  uintptr // *TWith = SWith
		_nByte int32
		_i     int32
	)
	_pRet = 0
	if _p == 0 {
		goto _1
	}

	_nByte = int32(uint64(48) + (uint64(32) * uint64((*(*int32)(unsafe.Pointer(_p)))-int32(1))))
	_pRet = _295sqlite3DbMallocZero(tls, _db, uint64(_nByte))
	if _pRet == 0 {
		goto _2
	}

	*(*int32)(unsafe.Pointer(_pRet)) = *(*int32)(unsafe.Pointer(_p))
	_i = int32(0)
_3:
	if _i >= (*(*int32)(unsafe.Pointer(_p))) {
		goto _5
	}

	*(*uintptr)(unsafe.Pointer(((_pRet + 16) + 32*uintptr(_i)) + 16)) = _1529sqlite3SelectDup(tls, _db, *(*uintptr)(unsafe.Pointer(((_p + 16) + 32*uintptr(_i)) + 16)), int32(0))
	*(*uintptr)(unsafe.Pointer(((_pRet + 16) + 32*uintptr(_i)) + 8)) = _1518sqlite3ExprListDup(tls, _db, *(*uintptr)(unsafe.Pointer(((_p + 16) + 32*uintptr(_i)) + 8)), int32(0))
	*(*uintptr)(unsafe.Pointer((_pRet + 16) + 32*uintptr(_i))) = _183sqlite3DbStrDup(tls, _db, *(*uintptr)(unsafe.Pointer((_p + 16) + 32*uintptr(_i))))
	_i++
	goto _3

_5:
_2:
_1:
	return _pRet
}

type SWhereLoop struct {
	Xprereq   uint64
	XmaskSelf uint64
	XiTab     uint8
	XiSortIdx uint8
	XrSetup   int16
	XrRun     int16
	XnOut     int16
	Xu        struct {
		X int64
		_ [8]byte
	}
	XwsFlags     uint32
	XnLTerm      uint16
	XnSkip       uint16
	XnLSlot      uint16
	XaLTerm      uintptr // **SWhereTerm
	XpNextLoop   uintptr // *SWhereLoop
	XaLTermSpace [3]uintptr
}

type SWhereClause struct {
	XpWInfo  uintptr // *SWhereInfo
	XpOuter  uintptr // *SWhereClause
	Xop      uint8
	XnTerm   int32
	XnSlot   int32
	Xa       uintptr // *SWhereTerm
	XaStatic [8]SWhereTerm
}

type SWhereMaskSet struct {
	XbVarSelect int32
	Xn          int32
	Xix         [64]int32
}

type SWhereLevel struct {
	XiLeftJoin    int32
	XiTabCur      int32
	XiIdxCur      int32
	XaddrBrk      int32
	XaddrNxt      int32
	XaddrSkip     int32
	XaddrCont     int32
	XaddrFirst    int32
	XaddrBody     int32
	XiLikeRepCntr uint32
	XaddrLikeRep  int32
	XiFrom        uint8
	Xop           uint8
	Xp3           uint8
	Xp5           uint8
	Xp1           int32
	Xp2           int32
	Xu            struct {
		X int64
		_ [8]byte
	}
	XpWLoop   uintptr // *SWhereLoop
	XnotReady uint64
}

// _1751sqlite3SelectExpand is defined at sqlite3.c:122340:13
func _1751sqlite3SelectExpand(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pSelect uintptr /* *TSelect = SSelect */) {
	esc := crt.MustMalloc(48)
	var _w = esc // *TWalker = SWalker
	defer crt.Free(esc)
	*(*uintptr)(unsafe.Pointer(_w + 8)) = fp56(_1879sqlite3ExprWalkNoop)
	*(*uintptr)(unsafe.Pointer(_w)) = _pParse
	if *(*uint8)(unsafe.Pointer(_pParse + 34)) == 0 {
		goto _1
	}

	*(*uintptr)(unsafe.Pointer(_w + 16)) = fp56(_1880convertCompoundSelectToSubquery)
	*(*uintptr)(unsafe.Pointer(_w + 24)) = null
	_1881sqlite3WalkSelect(tls, _w, _pSelect)
_1:
	*(*uintptr)(unsafe.Pointer(_w + 16)) = fp56(_1882selectExpander)
	*(*uintptr)(unsafe.Pointer(_w + 24)) = fp96(_1883selectPopWith)
	_1881sqlite3WalkSelect(tls, _w, _pSelect)
}

// _1752sqlite3ResolveSelectNames is defined at sqlite3.c:91749:21
func _1752sqlite3ResolveSelectNames(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _p uintptr /* *TSelect = SSelect */, _pOuterNC uintptr /* *TNameContext = SNameContext */) {
	esc := crt.MustMalloc(48)
	var _w = esc // *TWalker = SWalker
	defer crt.Free(esc)

	*(*uintptr)(unsafe.Pointer(_w + 8)) = fp56(_1812resolveExprStep)
	*(*uintptr)(unsafe.Pointer(_w + 16)) = fp56(_1813resolveSelectStep)
	*(*uintptr)(unsafe.Pointer(_w + 24)) = null
	*(*uintptr)(unsafe.Pointer(_w)) = _pParse
	*(*uintptr)(unsafe.Pointer(_w + 40)) = _pOuterNC
	_1881sqlite3WalkSelect(tls, _w, _p)
}

// _1753sqlite3SelectAddTypeInfo is defined at sqlite3.c:122403:13
func _1753sqlite3SelectAddTypeInfo(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pSelect uintptr /* *TSelect = SSelect */) {
	esc := crt.MustMalloc(48)
	var _w = esc // *TWalker = SWalker
	defer crt.Free(esc)
	*(*uintptr)(unsafe.Pointer(_w + 16)) = fp56(_1884sqlite3SelectWalkNoop)
	*(*uintptr)(unsafe.Pointer(_w + 24)) = fp96(_1885selectAddSubqueryTypeInfo)
	*(*uintptr)(unsafe.Pointer(_w + 8)) = fp56(_1879sqlite3ExprWalkNoop)
	*(*uintptr)(unsafe.Pointer(_w)) = _pParse
	_1881sqlite3WalkSelect(tls, _w, _pSelect)
}

// _1754generateColumnTypes is defined at sqlite3.c:119201:13
func _1754generateColumnTypes(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pTabList uintptr /* *TSrcList = SSrcList */, _pEList uintptr /* *TExprList = SExprList */) {
	esc := crt.MustMalloc(56)
	var (
		_v     uintptr // *TVdbe = SVdbe
		_i     int32
		_sNC   = esc   // *TNameContext = SNameContext
		_p     uintptr // *TExpr = SExpr
		_zType uintptr // *int8
	)
	defer crt.Free(esc)
	_v = *(*uintptr)(unsafe.Pointer(_pParse + 16))
	*(*uintptr)(unsafe.Pointer(_sNC + 8)) = _pTabList
	*(*uintptr)(unsafe.Pointer(_sNC)) = _pParse
	*(*uintptr)(unsafe.Pointer(_sNC + 32)) = null
	_i = int32(0)
_1:
	if _i >= (*(*int32)(unsafe.Pointer(_pEList))) {
		goto _3
	}

	_p = *(*uintptr)(unsafe.Pointer((_pEList + 8) + 32*uintptr(_i)))
	_zType = _1870columnTypeImpl(tls, _sNC, _p)
	_622sqlite3VdbeSetColName(tls, _v, _i, int32(1), _zType, uintptr(18446744073709551615))
	_i++
	goto _1

_3:
}

// _1755setJoinExpr is defined at sqlite3.c:118061:13
func _1755setJoinExpr(tls crt.TLS, _p uintptr /* *TExpr = SExpr */, _iTable int32) {
	var _i int32

_1:
	if _p == 0 {
		goto _2
	}

	{
		p := &(*(*uint32)(unsafe.Pointer(_p + 4)))
		*p = uint32(uint32(*p) | uint32(0x1))
	}

	*(*int16)(unsafe.Pointer(_p + 52)) = int16(_iTable)
	if int32(*(*uint8)(unsafe.Pointer(_p))) != int32(144) || (*(*uintptr)(unsafe.Pointer(_p + 32))) == 0 {
		goto _3
	}

	_i = int32(0)
_4:
	if _i >= (*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_p + 32))))) {
		goto _6
	}

	_1755setJoinExpr(tls, *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_p + 32))) + 8) + 32*uintptr(_i))), _iTable)
	_i++
	goto _4

_6:
_3:
	_1755setJoinExpr(tls, *(*uintptr)(unsafe.Pointer(_p + 16)), _iTable)
	_p = *(*uintptr)(unsafe.Pointer(_p + 24))
	goto _1

_2:
}

// _1756substSelect is defined at sqlite3.c:120930:13
func _1756substSelect(tls crt.TLS, _pSubst uintptr /* *TSubstContext = struct{XpParse ...tJoin int32;XpEList *SExprList;} */, _p uintptr /* *TSelect = SSelect */, _doPrior int32) {
	var (
		_pSrc  uintptr // *TSrcList = SSrcList
		_pItem uintptr // *SSrcList_item
		_i     int32
	)
	if _p != 0 {
		goto _1
	}

	return

_1:
_2:
	_1886substExprList(tls, _pSubst, *(*uintptr)(unsafe.Pointer(_p)))
	_1886substExprList(tls, _pSubst, *(*uintptr)(unsafe.Pointer(_p + 48)))
	_1886substExprList(tls, _pSubst, *(*uintptr)(unsafe.Pointer(_p + 64)))
	*(*uintptr)(unsafe.Pointer(_p + 56)) = _1769substExpr(tls, _pSubst, *(*uintptr)(unsafe.Pointer(_p + 56)))
	*(*uintptr)(unsafe.Pointer(_p + 40)) = _1769substExpr(tls, _pSubst, *(*uintptr)(unsafe.Pointer(_p + 40)))
	_pSrc = *(*uintptr)(unsafe.Pointer(_p + 32))

	_i = *(*int32)(unsafe.Pointer(_pSrc))
	_pItem = _pSrc + 8
_5:
	if _i <= int32(0) {
		goto _7
	}

	_1756substSelect(tls, _pSubst, *(*uintptr)(unsafe.Pointer(_pItem + 40)), int32(1))
	if (uint32((*(*uint8)(unsafe.Pointer((_pItem + 60) + 1)))>>2) << 31 >> 31) == 0 {
		goto _8
	}

	_1886substExprList(tls, _pSubst, *(*uintptr)(unsafe.Pointer(_pItem + 96)))
_8:
	_i--
	_pItem += 112
	goto _5

_7:
	if (_doPrior != 0) && (set4(&_p, *(*uintptr)(unsafe.Pointer(_p + 72))) != 0) {
		goto _2
	}
}

// _1757selectOpName is defined at sqlite3.c:118811:19
func _1757selectOpName(tls crt.TLS, _id int32) (r uintptr /* *int8 */) {
	var _z uintptr // *int8

	switch _id {
	case int32(116):
		goto _2
	case int32(118):
		goto _3
	case int32(117):
		goto _4
	default:
		goto _5
	}
_2:
	_z = ts + 31330 /* "UNION ALL" */
	goto _1

_3:
	_z = ts + 16345 /* "INTERSECT" */
	goto _1

_4:
	_z = ts + 16213 /* "EXCEPT" */
	goto _1

_5:
	_z = ts + 16573 /* "UNION" */
	goto _1

_1:
	return _z
}

// _1758multiSelectValues is defined at sqlite3.c:119882:12
func _1758multiSelectValues(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _p uintptr /* *TSelect = SSelect */, _pDest uintptr /* *TSelectDest = SSelectDest */) (r int32) {
	var (
		_pPrior uintptr // *TSelect = SSelect
		_nRow   int32
		_rc     int32
	)
	_nRow = int32(1)
	_rc = int32(0)

_1:
	if (*(*uintptr)(unsafe.Pointer(_p + 72))) != 0 {
		goto _4
	}

	goto _3

_4:
	_p = *(*uintptr)(unsafe.Pointer(_p + 72))
	_nRow++
	if 1 != 0 {
		goto _1
	}

	goto _3

_3:
_5:
	if _p == 0 {
		goto _6
	}

	_pPrior = *(*uintptr)(unsafe.Pointer(_p + 72))
	*(*uintptr)(unsafe.Pointer(_p + 72)) = null
	_rc = _1327sqlite3Select(tls, _pParse, _p, _pDest)
	*(*uintptr)(unsafe.Pointer(_p + 72)) = _pPrior
	if _rc == 0 {
		goto _7
	}

	goto _6

_7:
	*(*int16)(unsafe.Pointer(_p + 10)) = int16(_nRow)
	_p = *(*uintptr)(unsafe.Pointer(_p + 80))
	goto _5

_6:
	return _rc
}

// _1759generateWithRecursiveQuery is defined at sqlite3.c:119732:13
func _1759generateWithRecursiveQuery(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _p uintptr /* *TSelect = SSelect */, _pDest uintptr /* *TSelectDest = SSelectDest */) {
	esc := crt.MustMalloc(32)
	var (
		_pSrc       uintptr // *TSrcList = SSrcList
		_nCol       int32
		_v          uintptr // *TVdbe = SVdbe
		_pSetup     uintptr // *TSelect = SSelect
		_addrTop    int32
		_addrCont   int32
		_addrBreak  int32
		_iCurrent   int32
		_regCurrent int32
		_iQueue     int32
		_iDistinct  int32
		_eDest      int32
		_destQueue  = esc // *TSelectDest = SSelectDest
		_i          int32
		_rc         int32
		_pOrderBy   uintptr // *TExprList = SExprList
		_pLimit     uintptr // *TExpr = SExpr
		_pOffset    uintptr // *TExpr = SExpr
		_regLimit   int32
		_regOffset  int32
		_pKeyInfo   uintptr // *TKeyInfo = SKeyInfo
	)
	defer crt.Free(esc)
	_pSrc = *(*uintptr)(unsafe.Pointer(_p + 32))
	_nCol = *(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_p))))
	_v = *(*uintptr)(unsafe.Pointer(_pParse + 16))
	_pSetup = *(*uintptr)(unsafe.Pointer(_p + 72))
	_iCurrent = int32(0)
	_iDistinct = int32(0)
	_eDest = int32(5)
	if _1480sqlite3AuthCheck(tls, _pParse, int32(33), null, null, null) == 0 {
		goto _1
	}

	return

_1:
	_addrBreak = _1541sqlite3VdbeMakeLabel(tls, _v)
	*(*int16)(unsafe.Pointer(_p + 10)) = int16(320)
	_1542computeLimitRegisters(tls, _pParse, _p, _addrBreak)
	_pLimit = *(*uintptr)(unsafe.Pointer(_p + 88))
	_pOffset = *(*uintptr)(unsafe.Pointer(_p + 96))
	_regLimit = *(*int32)(unsafe.Pointer(_p + 16))
	_regOffset = *(*int32)(unsafe.Pointer(_p + 20))
	*(*uintptr)(unsafe.Pointer(_p + 88)) = set4(&(*(*uintptr)(unsafe.Pointer(_p + 96))), null)
	*(*int32)(unsafe.Pointer(_p + 16)) = set5(&(*(*int32)(unsafe.Pointer(_p + 20))), int32(0))
	_pOrderBy = *(*uintptr)(unsafe.Pointer(_p + 64))
	_i = int32(0)
_2:
	if _i >= (*(*int32)(unsafe.Pointer(_pSrc))) {
		goto _4
	}

	if (uint32((*(*uint8)(unsafe.Pointer((((_pSrc + 8) + 112*uintptr(_i)) + 60) + 1)))>>5) << 31 >> 31) == 0 {
		goto _5
	}

	_iCurrent = *(*int32)(unsafe.Pointer(((_pSrc + 8) + 112*uintptr(_i)) + 64))
	goto _4

_5:
	_i++
	goto _2

_4:
	_iQueue = postinc7(&(*(*int32)(unsafe.Pointer(_pParse + 52))))
	if int32(*(*uint8)(unsafe.Pointer(_p + 8))) != int32(115) {
		goto _6
	}

	_eDest = func() int32 {
		if _pOrderBy != 0 {
			return int32(8)
		}
		return int32(6)
	}()
	_iDistinct = postinc7(&(*(*int32)(unsafe.Pointer(_pParse + 52))))
	goto _7

_6:
	_eDest = func() int32 {
		if _pOrderBy != 0 {
			return int32(7)
		}
		return int32(5)
	}()
_7:
	_1497sqlite3SelectDestInit(tls, _destQueue, _eDest, _iQueue)
	_regCurrent = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))
	_1241sqlite3VdbeAddOp3(tls, _v, int32(111), _iCurrent, _regCurrent, _nCol)
	if _pOrderBy == 0 {
		goto _8
	}

	_pKeyInfo = _1887multiSelectOrderByKeyInfo(tls, _pParse, _p, int32(1))
	_1475sqlite3VdbeAddOp4(tls, _v, int32(108), _iQueue, (*(*int32)(unsafe.Pointer(_pOrderBy)))+int32(2), int32(0), _pKeyInfo, int32(-9))
	*(*uintptr)(unsafe.Pointer(_destQueue + 24)) = _pOrderBy
	goto _9

_8:
	_1240sqlite3VdbeAddOp2(tls, _v, int32(108), _iQueue, _nCol)
_9:
	if _iDistinct == 0 {
		goto _10
	}

	*(*int32)(unsafe.Pointer(_p + 24)) = _1240sqlite3VdbeAddOp2(tls, _v, int32(108), _iDistinct, int32(0))
	{
		p := &(*(*uint32)(unsafe.Pointer(_p + 12)))
		*p = uint32(uint32(*p) | uint32(0x20))
	}
_10:
	*(*uintptr)(unsafe.Pointer(_p + 64)) = null
	*(*uintptr)(unsafe.Pointer(_pSetup + 80)) = null
	_rc = _1327sqlite3Select(tls, _pParse, _pSetup, _destQueue)
	*(*uintptr)(unsafe.Pointer(_pSetup + 80)) = _p
	if _rc == 0 {
		goto _11
	}

	goto _end_of_recursive_query

_11:
	_addrTop = _1240sqlite3VdbeAddOp2(tls, _v, int32(37), _iQueue, _addrBreak)
	_1489sqlite3VdbeAddOp1(tls, _v, int32(124), _iCurrent)
	if _pOrderBy == 0 {
		goto _12
	}

	_1241sqlite3VdbeAddOp3(tls, _v, int32(96), _iQueue, (*(*int32)(unsafe.Pointer(_pOrderBy)))+int32(1), _regCurrent)
	goto _13

_12:
	_1240sqlite3VdbeAddOp2(tls, _v, int32(122), _iQueue, _regCurrent)
_13:
	_1489sqlite3VdbeAddOp1(tls, _v, int32(118), _iQueue)
	_addrCont = _1541sqlite3VdbeMakeLabel(tls, _v)
	_1788codeOffset(tls, _v, _regOffset, _addrCont)
	_1550selectInnerLoop(tls, _pParse, _p, _iCurrent, null, null, _pDest, _addrCont, _addrBreak)
	if _regLimit == 0 {
		goto _14
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(59), _regLimit, _addrBreak)
_14:
	_1569sqlite3VdbeResolveLabel(tls, _v, _addrCont)
	if ((*(*uint32)(unsafe.Pointer(_p + 12))) & uint32(0x8)) == 0 {
		goto _15
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+31340 /* "recursive aggregate queries not ..." */)
	goto _16

_15:
	*(*uintptr)(unsafe.Pointer(_p + 72)) = null
	_1327sqlite3Select(tls, _pParse, _p, _destQueue)

	*(*uintptr)(unsafe.Pointer(_p + 72)) = _pSetup
_16:
	_1479sqlite3VdbeGoto(tls, _v, _addrTop)
	_1569sqlite3VdbeResolveLabel(tls, _v, _addrBreak)
	goto _end_of_recursive_query
_end_of_recursive_query:
	_551sqlite3ExprListDelete(tls, *(*uintptr)(unsafe.Pointer(_pParse)), *(*uintptr)(unsafe.Pointer(_p + 64)))
	*(*uintptr)(unsafe.Pointer(_p + 64)) = _pOrderBy
	*(*uintptr)(unsafe.Pointer(_p + 88)) = _pLimit
	*(*uintptr)(unsafe.Pointer(_p + 96)) = _pOffset
	return
}

// _1760multiSelectOrderBy is defined at sqlite3.c:120528:12
func _1760multiSelectOrderBy(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _p uintptr /* *TSelect = SSelect */, _pDest uintptr /* *TSelectDest = SSelectDest */) (r int32) {
	esc := crt.MustMalloc(64)
	var (
		_i            int32
		_j            int32
		_pPrior       uintptr    // *TSelect = SSelect
		_v            uintptr    // *TVdbe = SVdbe
		_destA        = esc      // *TSelectDest = SSelectDest
		_destB        = esc + 32 // *TSelectDest = SSelectDest
		_regAddrA     int32
		_regAddrB     int32
		_addrSelectA  int32
		_addrSelectB  int32
		_regOutA      int32
		_regOutB      int32
		_addrOutA     int32
		_addrOutB     int32
		_addrEofA     int32
		_addrEofA_noB int32
		_addrEofB     int32
		_addrAltB     int32
		_addrAeqB     int32
		_addrAgtB     int32
		_regLimitA    int32
		_regLimitB    int32
		_regPrev      int32
		_savedLimit   int32
		_savedOffset  int32
		_labelCmpr    int32
		_labelEnd     int32
		_addr1        int32
		_op           int32
		_pKeyDup      uintptr // *TKeyInfo = SKeyInfo
		_pKeyMerge    uintptr // *TKeyInfo = SKeyInfo
		_db           uintptr // *Tsqlite3 = Ssqlite3
		_pOrderBy     uintptr // *TExprList = SExprList
		_nOrderBy     int32
		_aPermute     uintptr // *int32
		_iSub1        int32
		_iSub2        int32
		_pItem        uintptr // *SExprList_item
		_pNew         uintptr // *TExpr = SExpr
		_1pItem       uintptr // *SExprList_item
		_nExpr        int32
	)
	defer crt.Free(esc)
	_addrOutB = int32(0)
	_pKeyDup = 0

	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_v = *(*uintptr)(unsafe.Pointer(_pParse + 16))

	_labelEnd = _1541sqlite3VdbeMakeLabel(tls, _v)
	_labelCmpr = _1541sqlite3VdbeMakeLabel(tls, _v)
	_op = int32(*(*uint8)(unsafe.Pointer(_p + 8)))
	_pPrior = *(*uintptr)(unsafe.Pointer(_p + 72))

	_pOrderBy = *(*uintptr)(unsafe.Pointer(_p + 64))

	_nOrderBy = *(*int32)(unsafe.Pointer(_pOrderBy))
	if _op == int32(116) {
		goto _1
	}

	_i = int32(1)
_2:
	if int32(*(*uint8)(unsafe.Pointer(_db + 97))) != int32(0) || _i > (*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_p))))) {
		goto _4
	}

	_j = int32(0)
	_pItem = _pOrderBy + 8
_5:
	if _j >= _nOrderBy {
		goto _7
	}

	if int32(*(*uint16)(unsafe.Pointer(_pItem + 28))) != _i {
		goto _8
	}

	goto _7

_8:
	_j++
	_pItem += 32
	goto _5

_7:
	if _j != _nOrderBy {
		goto _9
	}

	_pNew = _1334sqlite3Expr(tls, _db, int32(134), null)
	if _pNew != 0 {
		goto _10
	}

	return int32(7)

_10:
	{
		p := &(*(*uint32)(unsafe.Pointer(_pNew + 4)))
		*p = uint32(uint32(*p) | uint32(0x400))
	}
	*(*int32)(unsafe.Pointer(_pNew + 8)) = _i
	*(*uintptr)(unsafe.Pointer(_p + 64)) = set4(&_pOrderBy, _1331sqlite3ExprListAppend(tls, _pParse, _pOrderBy, _pNew))
	if _pOrderBy == 0 {
		goto _11
	}

	*(*uint16)(unsafe.Pointer(((_pOrderBy + 8) + 32*uintptr(postinc7(&_nOrderBy))) + 28)) = uint16(_i)
_11:
_9:
	_i++
	goto _2

_4:
_1:
	_aPermute = _373sqlite3DbMallocRawNN(tls, _db, uint64(uint64(4)*uint64(_nOrderBy+int32(1))))
	if _aPermute == 0 {
		goto _12
	}

	*(*int32)(unsafe.Pointer(_aPermute)) = _nOrderBy
	_i = int32(1)
	_1pItem = _pOrderBy + 8
_14:
	if _i > _nOrderBy {
		goto _16
	}

	*(*int32)(unsafe.Pointer(_aPermute + 4*uintptr(_i))) = int32(*(*uint16)(unsafe.Pointer(_1pItem + 28))) - int32(1)
	_i++
	_1pItem += 32
	goto _14

_16:
	_pKeyMerge = _1887multiSelectOrderByKeyInfo(tls, _pParse, _p, int32(1))
	goto _13

_12:
	_pKeyMerge = null
_13:
	*(*uintptr)(unsafe.Pointer(_p + 64)) = _pOrderBy
	*(*uintptr)(unsafe.Pointer(_pPrior + 64)) = _1518sqlite3ExprListDup(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _pOrderBy, int32(0))
	if _op != int32(116) {
		goto _17
	}

	_regPrev = int32(0)
	goto _18

_17:
	_nExpr = *(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_p))))

	_regPrev = (*(*int32)(unsafe.Pointer(_pParse + 56))) + int32(1)
	{
		p := &(*(*int32)(unsafe.Pointer(_pParse + 56)))
		*p = int32(int32(*p) + (_nExpr + int32(1)))
	}
	_1240sqlite3VdbeAddOp2(tls, _v, int32(67), int32(0), _regPrev)
	_pKeyDup = _1765sqlite3KeyInfoAlloc(tls, _db, _nExpr, int32(1))
	if _pKeyDup == 0 {
		goto _19
	}

	_i = int32(0)
_20:
	if _i >= _nExpr {
		goto _22
	}

	*(*uintptr)(unsafe.Pointer((_pKeyDup + 32) + 8*uintptr(_i))) = _1766multiSelectCollSeq(tls, _pParse, _p, _i)
	*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pKeyDup + 24))) + uintptr(_i))) = uint8(0)
	_i++
	goto _20

_22:
_19:
_18:
	*(*uintptr)(unsafe.Pointer(_p + 72)) = null
	*(*uintptr)(unsafe.Pointer(_pPrior + 80)) = null
	_1888sqlite3ResolveOrderGroupBy(tls, _pParse, _p, *(*uintptr)(unsafe.Pointer(_p + 64)), ts+16440 /* "ORDER" */)
	if (*(*uintptr)(unsafe.Pointer(_pPrior + 72))) != 0 {
		goto _23
	}

	_1888sqlite3ResolveOrderGroupBy(tls, _pParse, _pPrior, *(*uintptr)(unsafe.Pointer(_pPrior + 64)), ts+16440 /* "ORDER" */)
_23:
	_1542computeLimitRegisters(tls, _pParse, _p, _labelEnd)
	if (*(*int32)(unsafe.Pointer(_p + 16))) == 0 || _op != int32(116) {
		goto _24
	}

	_regLimitA = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))
	_regLimitB = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))
	_1240sqlite3VdbeAddOp2(tls, _v, int32(75), func() int32 {
		if (*(*int32)(unsafe.Pointer(_p + 20))) != 0 {
			return (*(*int32)(unsafe.Pointer(_p + 20))) + int32(1)
		}
		return *(*int32)(unsafe.Pointer(_p + 16))
	}(), _regLimitA)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(75), _regLimitA, _regLimitB)
	goto _25

_24:
	_regLimitA = set5(&_regLimitB, int32(0))
_25:
	_777sqlite3ExprDelete(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 88)))
	*(*uintptr)(unsafe.Pointer(_p + 88)) = null
	_777sqlite3ExprDelete(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 96)))
	*(*uintptr)(unsafe.Pointer(_p + 96)) = null
	_regAddrA = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))
	_regAddrB = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))
	_regOutA = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))
	_regOutB = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))
	_1497sqlite3SelectDestInit(tls, _destA, int32(13), _regAddrA)
	_1497sqlite3SelectDestInit(tls, _destB, int32(13), _regAddrB)
	_addrSelectA = _1496sqlite3VdbeCurrentAddr(tls, _v) + int32(1)
	_addr1 = _1241sqlite3VdbeAddOp3(tls, _v, int32(15), _regAddrA, int32(0), _addrSelectA)
	*(*int32)(unsafe.Pointer(_pPrior + 16)) = _regLimitA
	_iSub1 = *(*int32)(unsafe.Pointer(_pParse + 484))
	_1327sqlite3Select(tls, _pParse, _pPrior, _destA)
	_1498sqlite3VdbeEndCoroutine(tls, _v, _regAddrA)
	_1474sqlite3VdbeJumpHere(tls, _v, _addr1)
	_addrSelectB = _1496sqlite3VdbeCurrentAddr(tls, _v) + int32(1)
	_addr1 = _1241sqlite3VdbeAddOp3(tls, _v, int32(15), _regAddrB, int32(0), _addrSelectB)
	_savedLimit = *(*int32)(unsafe.Pointer(_p + 16))
	_savedOffset = *(*int32)(unsafe.Pointer(_p + 20))
	*(*int32)(unsafe.Pointer(_p + 16)) = _regLimitB
	*(*int32)(unsafe.Pointer(_p + 20)) = int32(0)
	_iSub2 = *(*int32)(unsafe.Pointer(_pParse + 484))
	_1327sqlite3Select(tls, _pParse, _p, _destB)
	*(*int32)(unsafe.Pointer(_p + 16)) = _savedLimit
	*(*int32)(unsafe.Pointer(_p + 20)) = _savedOffset
	_1498sqlite3VdbeEndCoroutine(tls, _v, _regAddrB)
	_addrOutA = _1889generateOutputSubroutine(tls, _pParse, _p, _destA, _pDest, _regOutA, _regPrev, _pKeyDup, _labelEnd)
	if _op != int32(116) && _op != int32(115) {
		goto _26
	}

	_addrOutB = _1889generateOutputSubroutine(tls, _pParse, _p, _destB, _pDest, _regOutB, _regPrev, _pKeyDup, _labelEnd)
_26:
	_1259sqlite3KeyInfoUnref(tls, _pKeyDup)
	if _op != int32(117) && _op != int32(118) {
		goto _27
	}

	_addrEofA_noB = set5(&_addrEofA, _labelEnd)
	goto _28

_27:
	_addrEofA = _1240sqlite3VdbeAddOp2(tls, _v, int32(14), _regOutB, _addrOutB)
	_addrEofA_noB = _1240sqlite3VdbeAddOp2(tls, _v, int32(16), _regAddrB, _labelEnd)
	_1479sqlite3VdbeGoto(tls, _v, _addrEofA)
	*(*int16)(unsafe.Pointer(_p + 10)) = _1761sqlite3LogEstAdd(tls, *(*int16)(unsafe.Pointer(_p + 10)), *(*int16)(unsafe.Pointer(_pPrior + 10)))
_28:
	if _op != int32(118) {
		goto _29
	}

	_addrEofB = _addrEofA
	if int32(*(*int16)(unsafe.Pointer(_p + 10))) <= int32(*(*int16)(unsafe.Pointer(_pPrior + 10))) {
		goto _31
	}

	*(*int16)(unsafe.Pointer(_p + 10)) = *(*int16)(unsafe.Pointer(_pPrior + 10))
_31:
	goto _30

_29:
	_addrEofB = _1240sqlite3VdbeAddOp2(tls, _v, int32(14), _regOutA, _addrOutA)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(16), _regAddrA, _labelEnd)
	_1479sqlite3VdbeGoto(tls, _v, _addrEofB)
_30:
	_addrAltB = _1240sqlite3VdbeAddOp2(tls, _v, int32(14), _regOutA, _addrOutA)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(16), _regAddrA, _addrEofA)
	_1479sqlite3VdbeGoto(tls, _v, _labelCmpr)
	if _op != int32(116) {
		goto _32
	}

	_addrAeqB = _addrAltB
	goto _33

_32:
	if _op != int32(118) {
		goto _34
	}

	_addrAeqB = _addrAltB
	_addrAltB++
	goto _35

_34:
	_addrAeqB = _1240sqlite3VdbeAddOp2(tls, _v, int32(16), _regAddrA, _addrEofA)
	_1479sqlite3VdbeGoto(tls, _v, _labelCmpr)
_35:
_33:
	_addrAgtB = _1496sqlite3VdbeCurrentAddr(tls, _v)
	if _op != int32(116) && _op != int32(115) {
		goto _36
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(14), _regOutB, _addrOutB)
_36:
	_1240sqlite3VdbeAddOp2(tls, _v, int32(16), _regAddrB, _addrEofB)
	_1479sqlite3VdbeGoto(tls, _v, _labelCmpr)
	_1474sqlite3VdbeJumpHere(tls, _v, _addr1)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(16), _regAddrA, _addrEofA_noB)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(16), _regAddrB, _addrEofB)
	_1569sqlite3VdbeResolveLabel(tls, _v, _labelCmpr)
	_1475sqlite3VdbeAddOp4(tls, _v, int32(83), int32(0), int32(0), int32(0), _aPermute, int32(-15))
	_1475sqlite3VdbeAddOp4(tls, _v, int32(94), *(*int32)(unsafe.Pointer(_destA + 8)), *(*int32)(unsafe.Pointer(_destB + 8)), _nOrderBy, _pKeyMerge, int32(-9))
	_1072sqlite3VdbeChangeP5(tls, _v, uint16(0x1))
	_1241sqlite3VdbeAddOp3(tls, _v, int32(18), _addrAltB, _addrAeqB, _addrAgtB)
	_1569sqlite3VdbeResolveLabel(tls, _v, _labelEnd)
	if (*(*uintptr)(unsafe.Pointer(_p + 72))) == 0 {
		goto _37
	}

	_1094sqlite3SelectDelete(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 72)))
_37:
	*(*uintptr)(unsafe.Pointer(_p + 72)) = _pPrior
	*(*uintptr)(unsafe.Pointer(_pPrior + 80)) = _p
	_1764explainComposite(tls, _pParse, int32(*(*uint8)(unsafe.Pointer(_p + 8))), _iSub1, _iSub2, int32(0))
	return bool2int((*(*int32)(unsafe.Pointer(_pParse + 48))) != int32(0))
}

// _1761sqlite3LogEstAdd is defined at sqlite3.c:29519:23
func _1761sqlite3LogEstAdd(tls crt.TLS, _a int16, _b int16) (r int16) {
	if int32(_a) < int32(_b) {
		goto _1
	}

	if int32(_a) <= (int32(_b) + int32(49)) {
		goto _3
	}

	return _a

_3:
	if int32(_a) <= (int32(_b) + int32(31)) {
		goto _4
	}

	return int16(int32(_a) + int32(1))

_4:
	return int16(int32(_a) + int32(*(*uint8)(unsafe.Pointer(_1890x + uintptr(int32(_a)-int32(_b))))))

	goto _2

_1:
	if int32(_b) <= (int32(_a) + int32(49)) {
		goto _5
	}

	return _b

_5:
	if int32(_b) <= (int32(_a) + int32(31)) {
		goto _6
	}

	return int16(int32(_b) + int32(1))

_6:
	return int16(int32(_b) + int32(*(*uint8)(unsafe.Pointer(_1890x + uintptr(int32(_b)-int32(_a))))))

_2:
	return r
}

// _1762sqlite3ExprIsInteger is defined at sqlite3.c:93761:20
func _1762sqlite3ExprIsInteger(tls crt.TLS, _p uintptr /* *TExpr = SExpr */, _pValue uintptr /* *int32 */) (r int32) {
	esc := crt.MustMalloc(4)
	var (
		_rc int32
		_v  = esc // *int32
	)
	defer crt.Free(esc)
	_rc = int32(0)
	if _p != 0 {
		goto _1
	}

	return int32(0)

_1:
	if ((*(*uint32)(unsafe.Pointer(_p + 4))) & uint32(0x400)) == 0 {
		goto _2
	}

	*(*int32)(unsafe.Pointer(_pValue)) = *(*int32)(unsafe.Pointer(_p + 8))
	return int32(1)

_2:
	switch int32(*(*uint8)(unsafe.Pointer(_p))) {
	case int32(149):
		goto _4
	case int32(148):
		goto _5
	default:
		goto _6
	}
_4:
	_rc = _1762sqlite3ExprIsInteger(tls, *(*uintptr)(unsafe.Pointer(_p + 16)), _pValue)
	goto _3

_5:
	if _1762sqlite3ExprIsInteger(tls, *(*uintptr)(unsafe.Pointer(_p + 16)), _v) == 0 {
		goto _7
	}

	*(*int32)(unsafe.Pointer(_pValue)) = -(*(*int32)(unsafe.Pointer(_v)))
	_rc = int32(1)
_7:
	goto _3

_6:
	goto _3

_3:
	return _rc
}

// _1763findRightmost is defined at sqlite3.c:117867:15
func _1763findRightmost(tls crt.TLS, _p uintptr /* *TSelect = SSelect */) (r uintptr /* *TSelect = SSelect */) {
_1:
	if (*(*uintptr)(unsafe.Pointer(_p + 80))) == 0 {
		goto _2
	}

	_p = *(*uintptr)(unsafe.Pointer(_p + 80))
	goto _1

_2:
	return _p
}

// _1764explainComposite is defined at sqlite3.c:118871:13
func _1764explainComposite(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _op int32, _iSub1 int32, _iSub2 int32, _bUseTmp int32) {
	var (
		_v    uintptr // *TVdbe = SVdbe
		_zMsg uintptr // *int8
	)

	if int32(*(*uint8)(unsafe.Pointer(_pParse + 467))) != int32(2) {
		goto _1
	}

	_v = *(*uintptr)(unsafe.Pointer(_pParse + 16))
	_zMsg = _226sqlite3MPrintf(tls, *(*uintptr)(unsafe.Pointer(_pParse)), ts+31382 /* "COMPOUND SUBQUERIES %d AND %d %s..." */, _iSub1, _iSub2, func() uintptr {
		if _bUseTmp != 0 {
			return ts + 31419 /* "USING TEMP B-TREE " */
		}
		return ts + 4553 /* "" */
	}(), _1757selectOpName(tls, _op))
	_1475sqlite3VdbeAddOp4(tls, _v, int32(167), *(*int32)(unsafe.Pointer(_pParse + 480)), int32(0), int32(0), _zMsg, int32(-7))
_1:
}

// _1765sqlite3KeyInfoAlloc is defined at sqlite3.c:118721:24
func _1765sqlite3KeyInfoAlloc(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _N int32, _X int32) (r uintptr /* *TKeyInfo = SKeyInfo */) {
	var (
		_nExtra int32
		_p      uintptr // *TKeyInfo = SKeyInfo
	)
	_nExtra = int32((uint64(_N+_X) * uint64(9)) - uint64(8))
	_p = _373sqlite3DbMallocRawNN(tls, _db, uint64(uint64(40)+uint64(_nExtra)))
	if _p == 0 {
		goto _1
	}

	*(*uintptr)(unsafe.Pointer(_p + 24)) = (_p + 32) + 8*uintptr(_N+_X)
	*(*uint16)(unsafe.Pointer(_p + 6)) = uint16(_N)
	*(*uint16)(unsafe.Pointer(_p + 8)) = uint16(_N + _X)
	*(*uint8)(unsafe.Pointer(_p + 4)) = *(*uint8)(unsafe.Pointer(_db + 94))
	*(*uintptr)(unsafe.Pointer(_p + 16)) = _db
	*(*uint32)(unsafe.Pointer(_p)) = uint32(1)
	crt.Xmemset(tls, _p+40, int32(0), uint64(_nExtra))
	goto _2

_1:
	_178sqlite3OomFault(tls, _db)
_2:
	return _p
}

// _1766multiSelectCollSeq is defined at sqlite3.c:119640:16
func _1766multiSelectCollSeq(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _p uintptr /* *TSelect = SSelect */, _iCol int32) (r uintptr /* *TCollSeq = SCollSeq */) {
	var _pRet uintptr // *TCollSeq = SCollSeq

	if (*(*uintptr)(unsafe.Pointer(_p + 72))) == 0 {
		goto _1
	}

	_pRet = _1766multiSelectCollSeq(tls, _pParse, *(*uintptr)(unsafe.Pointer(_p + 72)), _iCol)
	goto _2

_1:
	_pRet = null
_2:
	if _pRet != 0 || _iCol >= (*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_p))))) {
		goto _3
	}

	_pRet = _1789sqlite3ExprCollSeq(tls, _pParse, *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_p))) + 8) + 32*uintptr(_iCol))))
_3:
	return _pRet
}

// _1767heightOfSelect is defined at sqlite3.c:92462:13
func _1767heightOfSelect(tls crt.TLS, _p uintptr /* *TSelect = SSelect */, _pnHeight uintptr /* *int32 */) {
	if _p == 0 {
		goto _1
	}

	_1834heightOfExpr(tls, *(*uintptr)(unsafe.Pointer(_p + 40)), _pnHeight)
	_1834heightOfExpr(tls, *(*uintptr)(unsafe.Pointer(_p + 56)), _pnHeight)
	_1834heightOfExpr(tls, *(*uintptr)(unsafe.Pointer(_p + 88)), _pnHeight)
	_1834heightOfExpr(tls, *(*uintptr)(unsafe.Pointer(_p + 96)), _pnHeight)
	_1835heightOfExprList(tls, *(*uintptr)(unsafe.Pointer(_p)), _pnHeight)
	_1835heightOfExprList(tls, *(*uintptr)(unsafe.Pointer(_p + 48)), _pnHeight)
	_1835heightOfExprList(tls, *(*uintptr)(unsafe.Pointer(_p + 64)), _pnHeight)
	_1767heightOfSelect(tls, *(*uintptr)(unsafe.Pointer(_p + 72)), _pnHeight)
_1:
}

// _1768sqlite3ExprIsTableConstant is defined at sqlite3.c:93660:20
func _1768sqlite3ExprIsTableConstant(tls crt.TLS, _p uintptr /* *TExpr = SExpr */, _iCur int32) (r int32) {
	return _1736exprIsConst(tls, _p, int32(3), _iCur)
}

// _1769substExpr is defined at sqlite3.c:120864:13
func _1769substExpr(tls crt.TLS, _pSubst uintptr /* *TSubstContext = struct{XpParse ...tJoin int32;XpEList *SExprList;} */, _pExpr uintptr /* *TExpr = SExpr */) (r uintptr /* *TExpr = SExpr */) {
	esc := crt.MustMalloc(72)
	var (
		_pNew      uintptr // *TExpr = SExpr
		_pCopy     uintptr // *TExpr = SExpr
		_ifNullRow = esc   // *TExpr = SExpr
		_db        uintptr // *Tsqlite3 = Ssqlite3
	)
	defer crt.Free(esc)
	if _pExpr != 0 {
		goto _1
	}

	return null

_1:
	if ((*(*uint32)(unsafe.Pointer(_pExpr + 4)))&uint32(0x1)) == uint32(0) || int32(*(*int16)(unsafe.Pointer(_pExpr + 52))) != (*(*int32)(unsafe.Pointer(_pSubst + 8))) {
		goto _2
	}

	*(*int16)(unsafe.Pointer(_pExpr + 52)) = int16(*(*int32)(unsafe.Pointer(_pSubst + 12)))
_2:
	if int32(*(*uint8)(unsafe.Pointer(_pExpr))) != int32(145) || (*(*int32)(unsafe.Pointer(_pExpr + 44))) != (*(*int32)(unsafe.Pointer(_pSubst + 8))) {
		goto _3
	}

	if int32(*(*int16)(unsafe.Pointer(_pExpr + 48))) >= int32(0) {
		goto _5
	}

	*(*uint8)(unsafe.Pointer(_pExpr)) = uint8(101)
	goto _6

_5:
	_pCopy = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pSubst + 24))) + 8) + 32*uintptr(*(*int16)(unsafe.Pointer(_pExpr + 48)))))

	if _1803sqlite3ExprIsVector(tls, _pCopy) == 0 {
		goto _7
	}

	_1891sqlite3VectorErrorMsg(tls, *(*uintptr)(unsafe.Pointer(_pSubst)), _pCopy)
	goto _8

_7:
	_db = *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pSubst))))
	if (*(*int32)(unsafe.Pointer(_pSubst + 16))) == 0 || int32(*(*uint8)(unsafe.Pointer(_pCopy))) == int32(145) {
		goto _9
	}

	crt.Xmemset(tls, _ifNullRow, int32(0), uint64(72))
	*(*uint8)(unsafe.Pointer(_ifNullRow)) = uint8(153)
	*(*uintptr)(unsafe.Pointer(_ifNullRow + 16)) = _pCopy
	*(*int32)(unsafe.Pointer(_ifNullRow + 44)) = *(*int32)(unsafe.Pointer(_pSubst + 12))
	_pCopy = _ifNullRow
_9:
	_pNew = _1507sqlite3ExprDup(tls, _db, _pCopy, int32(0))
	if _pNew == 0 || (*(*int32)(unsafe.Pointer(_pSubst + 16))) == 0 {
		goto _10
	}

	{
		p := &(*(*uint32)(unsafe.Pointer(_pNew + 4)))
		*p = uint32(uint32(*p) | uint32(0x100000))
	}
_10:
	if _pNew == 0 || ((*(*uint32)(unsafe.Pointer(_pExpr + 4)))&uint32(0x1)) == uint32(0) {
		goto _11
	}

	*(*int16)(unsafe.Pointer(_pNew + 52)) = *(*int16)(unsafe.Pointer(_pExpr + 52))
	{
		p := &(*(*uint32)(unsafe.Pointer(_pNew + 4)))
		*p = uint32(uint32(*p) | uint32(0x1))
	}
_11:
	_777sqlite3ExprDelete(tls, _db, _pExpr)
	_pExpr = _pNew
_8:
_6:
	goto _4

_3:
	if int32(*(*uint8)(unsafe.Pointer(_pExpr))) != int32(153) || (*(*int32)(unsafe.Pointer(_pExpr + 44))) != (*(*int32)(unsafe.Pointer(_pSubst + 8))) {
		goto _12
	}

	*(*int32)(unsafe.Pointer(_pExpr + 44)) = *(*int32)(unsafe.Pointer(_pSubst + 12))
_12:
	*(*uintptr)(unsafe.Pointer(_pExpr + 16)) = _1769substExpr(tls, _pSubst, *(*uintptr)(unsafe.Pointer(_pExpr + 16)))
	*(*uintptr)(unsafe.Pointer(_pExpr + 24)) = _1769substExpr(tls, _pSubst, *(*uintptr)(unsafe.Pointer(_pExpr + 24)))
	if ((*(*uint32)(unsafe.Pointer(_pExpr + 4))) & uint32(0x800)) == uint32(0) {
		goto _13
	}

	_1756substSelect(tls, _pSubst, *(*uintptr)(unsafe.Pointer(_pExpr + 32)), int32(1))
	goto _14

_13:
	_1886substExprList(tls, _pSubst, *(*uintptr)(unsafe.Pointer(_pExpr + 32)))
_14:
_4:
	return _pExpr
}

// _1770sqlite3ExprCompare is defined at sqlite3.c:96577:20
func _1770sqlite3ExprCompare(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pA uintptr /* *TExpr = SExpr */, _pB uintptr /* *TExpr = SExpr */, _iTab int32) (r int32) {
	var _combinedFlags uint32

	if _pA != 0 && _pB != 0 {
		goto _1
	}

	if _pB == _pA {
		return int32(0)
	}

	return int32(2)

_1:
	if _pParse == 0 || int32(*(*uint8)(unsafe.Pointer(_pA))) != int32(135) || _1892exprCompareVariable(tls, _pParse, _pA, _pB) == 0 {
		goto _2
	}

	return int32(0)

_2:
	_combinedFlags = (*(*uint32)(unsafe.Pointer(_pA + 4))) | (*(*uint32)(unsafe.Pointer(_pB + 4)))
	if (_combinedFlags & uint32(0x400)) == 0 {
		goto _3
	}

	if (((*(*uint32)(unsafe.Pointer(_pA + 4)))&(*(*uint32)(unsafe.Pointer(_pB + 4))))&uint32(0x400)) == uint32(0) || (*(*int32)(unsafe.Pointer(_pA + 8))) != (*(*int32)(unsafe.Pointer(_pB + 8))) {
		goto _4
	}

	return int32(0)

_4:
	return int32(2)

_3:
	if int32(*(*uint8)(unsafe.Pointer(_pA))) == int32(*(*uint8)(unsafe.Pointer(_pB))) {
		goto _5
	}

	if int32(*(*uint8)(unsafe.Pointer(_pA))) != int32(94) || _1770sqlite3ExprCompare(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pA + 16)), _pB, _iTab) >= int32(2) {
		goto _6
	}

	return int32(1)

_6:
	if int32(*(*uint8)(unsafe.Pointer(_pB))) != int32(94) || _1770sqlite3ExprCompare(tls, _pParse, _pA, *(*uintptr)(unsafe.Pointer(_pB + 16)), _iTab) >= int32(2) {
		goto _7
	}

	return int32(1)

_7:
	return int32(2)

_5:
	if int32(*(*uint8)(unsafe.Pointer(_pA))) == int32(145) || int32(*(*uint8)(unsafe.Pointer(_pA))) == int32(147) || (*(*uintptr)(unsafe.Pointer(_pA + 8))) == 0 {
		goto _8
	}

	if int32(*(*uint8)(unsafe.Pointer(_pA))) != int32(144) {
		goto _9
	}

	if _110sqlite3StrICmp(tls, *(*uintptr)(unsafe.Pointer(_pA + 8)), *(*uintptr)(unsafe.Pointer(_pB + 8))) == int32(0) {
		goto _11
	}

	return int32(2)

_11:
	goto _10

_9:
	if crt.Xstrcmp(tls, *(*uintptr)(unsafe.Pointer(_pA + 8)), *(*uintptr)(unsafe.Pointer(_pB + 8))) == int32(0) {
		goto _12
	}

	if int32(*(*uint8)(unsafe.Pointer(_pA))) == int32(94) {
		return int32(1)
	}

	return int32(2)

_12:
_10:
_8:
	if ((*(*uint32)(unsafe.Pointer(_pA + 4))) & uint32(0x10)) == ((*(*uint32)(unsafe.Pointer(_pB + 4))) & uint32(0x10)) {
		goto _13
	}

	return int32(2)

_13:
	if (_combinedFlags & uint32(0x4000)) != uint32(0) {
		goto _14
	}

	if (_combinedFlags & uint32(0x800)) == 0 {
		goto _15
	}

	return int32(2)

_15:
	if _1770sqlite3ExprCompare(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pA + 16)), *(*uintptr)(unsafe.Pointer(_pB + 16)), _iTab) == 0 {
		goto _16
	}

	return int32(2)

_16:
	if _1770sqlite3ExprCompare(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pA + 24)), *(*uintptr)(unsafe.Pointer(_pB + 24)), _iTab) == 0 {
		goto _17
	}

	return int32(2)

_17:
	if _1539sqlite3ExprListCompare(tls, *(*uintptr)(unsafe.Pointer(_pA + 32)), *(*uintptr)(unsafe.Pointer(_pB + 32)), _iTab) == 0 {
		goto _18
	}

	return int32(2)

_18:
	if (_combinedFlags&uint32(0x2000)) != uint32(0) || int32(*(*uint8)(unsafe.Pointer(_pA))) == int32(97) {
		goto _19
	}

	if int32(*(*int16)(unsafe.Pointer(_pA + 48))) == int32(*(*int16)(unsafe.Pointer(_pB + 48))) {
		goto _20
	}

	return int32(2)

_20:
	if (*(*int32)(unsafe.Pointer(_pA + 44))) == (*(*int32)(unsafe.Pointer(_pB + 44))) || (*(*int32)(unsafe.Pointer(_pA + 44))) == _iTab && (*(*int32)(unsafe.Pointer(_pB + 44))) < int32(0) {
		goto _21
	}

	return int32(2)

_21:
_19:
_14:
	return int32(0)
}

// _1771sqlite3ExprNNCollSeq is defined at sqlite3.c:92007:24
func _1771sqlite3ExprNNCollSeq(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pExpr uintptr /* *TExpr = SExpr */) (r uintptr /* *TCollSeq = SCollSeq */) {
	var _p uintptr // *TCollSeq = SCollSeq

	_p = _1789sqlite3ExprCollSeq(tls, _pParse, _pExpr)
	if _p != 0 {
		goto _1
	}

	_p = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pParse))) + 16))
_1:
	return _p
}

type SWhereLoopBuilder struct {
	XpWInfo   uintptr // *SWhereInfo
	XpWC      uintptr // *SWhereClause
	XpOrderBy uintptr // *SExprList
	XpNew     uintptr // *SWhereLoop
	XpOrSet   uintptr // *SWhereOrSet
	XbldFlags uint32
}

type SWhereTerm struct {
	XpExpr       uintptr // *SExpr
	XpWC         uintptr // *SWhereClause
	XtruthProb   int16
	XwtFlags     uint16
	XeOperator   uint16
	XnChild      uint8
	XeMatchOp    uint8
	XiParent     int32
	XleftCursor  int32
	XiField      int32
	Xu           struct{ X int64 }
	XprereqRight uint64
	XprereqAll   uint64
}

// _1772whereLoopInit is defined at sqlite3.c:133594:13
func _1772whereLoopInit(tls crt.TLS, _p uintptr /* *TWhereLoop = SWhereLoop */) {
	*(*uintptr)(unsafe.Pointer(_p + 56)) = _p + 72
	*(*uint16)(unsafe.Pointer(_p + 44)) = uint16(0)
	*(*uint16)(unsafe.Pointer(_p + 48)) = uint16(3)
	*(*uint32)(unsafe.Pointer(_p + 40)) = uint32(0)
}

// _1773sqlite3WhereClauseInit is defined at sqlite3.c:131676:21
func _1773sqlite3WhereClauseInit(tls crt.TLS, _pWC uintptr /* *TWhereClause = SWhereClause */, _pWInfo uintptr /* *TWhereInfo = SWhereInfo */) {
	*(*uintptr)(unsafe.Pointer(_pWC)) = _pWInfo
	*(*uintptr)(unsafe.Pointer(_pWC + 8)) = null
	*(*int32)(unsafe.Pointer(_pWC + 20)) = int32(0)
	*(*int32)(unsafe.Pointer(_pWC + 24)) = int32(8)
	*(*uintptr)(unsafe.Pointer(_pWC + 32)) = _pWC + 40
}

// _1774sqlite3WhereSplit is defined at sqlite3.c:131661:21
func _1774sqlite3WhereSplit(tls crt.TLS, _pWC uintptr /* *TWhereClause = SWhereClause */, _pExpr uintptr /* *TExpr = SExpr */, _op uint8) {
	var _pE2 uintptr // *TExpr = SExpr

	_pE2 = _1510sqlite3ExprSkipCollate(tls, _pExpr)
	*(*uint8)(unsafe.Pointer(_pWC + 16)) = _op
	if _pE2 != 0 {
		goto _1
	}

	return

_1:
	if int32(*(*uint8)(unsafe.Pointer(_pE2))) == int32(_op) {
		goto _2
	}

	_1893whereClauseInsert(tls, _pWC, _pExpr, uint16(0))
	goto _3

_2:
	_1774sqlite3WhereSplit(tls, _pWC, *(*uintptr)(unsafe.Pointer(_pE2 + 16)), _op)
	_1774sqlite3WhereSplit(tls, _pWC, *(*uintptr)(unsafe.Pointer(_pE2 + 24)), _op)
_3:
}

// _1775createMask is defined at sqlite3.c:131991:13
func _1775createMask(tls crt.TLS, _pMaskSet uintptr /* *TWhereMaskSet = SWhereMaskSet */, _iCursor int32) {
	*(*int32)(unsafe.Pointer((_pMaskSet + 8) + 4*uintptr(postinc7(&(*(*int32)(unsafe.Pointer(_pMaskSet + 4))))))) = _iCursor
}

// _1776sqlite3WhereTabFuncArgs is defined at sqlite3.c:131774:21
func _1776sqlite3WhereTabFuncArgs(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pItem uintptr /* *SSrcList_item */, _pWC uintptr /* *TWhereClause = SWhereClause */) {
	var (
		_pTab    uintptr // *TTable = STable
		_j       int32
		_k       int32
		_pArgs   uintptr // *TExprList = SExprList
		_pColRef uintptr // *TExpr = SExpr
		_pTerm   uintptr // *TExpr = SExpr
	)
	if int32(uint32((*(*uint8)(unsafe.Pointer((_pItem + 60) + 1)))>>2)<<31>>31) != int32(0) {
		goto _1
	}

	return

_1:
	_pTab = *(*uintptr)(unsafe.Pointer(_pItem + 32))

	_pArgs = *(*uintptr)(unsafe.Pointer(_pItem + 96))
	if _pArgs != 0 {
		goto _2
	}

	return

_2:
	_j = set5(&_k, int32(0))
_3:
	if _j >= (*(*int32)(unsafe.Pointer(_pArgs))) {
		goto _5
	}

_6:
	if _k >= int32(*(*int16)(unsafe.Pointer(_pTab + 70))) || (int32(*(*uint8)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pTab + 8))) + 32*uintptr(_k)) + 27)))&int32(0x2)) != int32(0) {
		goto _7
	}

	_k++
	goto _6

_7:
	if _k < int32(*(*int16)(unsafe.Pointer(_pTab + 70))) {
		goto _8
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+31438 /* "too many arguments on %s() - max..." */, *(*uintptr)(unsafe.Pointer(_pTab)), _j)
	return

_8:
	_pColRef = _1335sqlite3ExprAlloc(tls, *(*uintptr)(unsafe.Pointer(_pParse)), int32(145), null, int32(0))
	if _pColRef != 0 {
		goto _9
	}

	return

_9:
	*(*int32)(unsafe.Pointer(_pColRef + 44)) = *(*int32)(unsafe.Pointer(_pItem + 64))
	*(*int16)(unsafe.Pointer(_pColRef + 48)) = int16(postinc7(&_k))
	*(*uintptr)(unsafe.Pointer(_pColRef + 64)) = _pTab
	_pTerm = _1316sqlite3PExpr(tls, _pParse, int32(53), _pColRef, _1507sqlite3ExprDup(tls, *(*uintptr)(unsafe.Pointer(_pParse)), *(*uintptr)(unsafe.Pointer((_pArgs + 8) + 32*uintptr(_j))), int32(0)))
	_1893whereClauseInsert(tls, _pWC, _pTerm, uint16(0x1))
	_j++
	goto _3

_5:
}

// _1777sqlite3WhereExprAnalyze is defined at sqlite3.c:131757:21
func _1777sqlite3WhereExprAnalyze(tls crt.TLS, _pTabList uintptr /* *TSrcList = SSrcList */, _pWC uintptr /* *TWhereClause = SWhereClause */) {
	var _i int32

	_i = (*(*int32)(unsafe.Pointer(_pWC + 20))) - int32(1)
_1:
	if _i < int32(0) {
		goto _3
	}

	_1894exprAnalyze(tls, _pTabList, _pWC, _i)
	_i--
	goto _1

_3:
}

// _1778exprIsDeterministic is defined at sqlite3.c:136140:12
func _1778exprIsDeterministic(tls crt.TLS, _p uintptr /* *TExpr = SExpr */) (r int32) {
	esc := crt.MustMalloc(48)
	var _w = esc // *TWalker = SWalker
	defer crt.Free(esc)
	crt.Xmemset(tls, _w, int32(0), uint64(48))
	*(*uint8)(unsafe.Pointer(_w + 36)) = uint8(1)
	*(*uintptr)(unsafe.Pointer(_w + 8)) = fp56(_1895exprNodeIsDeterministic)
	*(*uintptr)(unsafe.Pointer(_w + 16)) = fp56(_1872sqlite3SelectWalkFail)
	_1795sqlite3WalkExpr(tls, _w, _p)
	return int32(*(*uint8)(unsafe.Pointer(_w + 36)))
}

// _1779isDistinctRedundant is defined at sqlite3.c:132250:12
func _1779isDistinctRedundant(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pTabList uintptr /* *TSrcList = SSrcList */, _pWC uintptr /* *TWhereClause = SWhereClause */, _pDistinct uintptr /* *TExprList = SExprList */) (r int32) {
	var (
		_pTab  uintptr // *TTable = STable
		_pIdx  uintptr // *TIndex = SIndex
		_i     int32
		_iBase int32
		_p     uintptr // *TExpr = SExpr
	)
	if (*(*int32)(unsafe.Pointer(_pTabList))) == int32(1) {
		goto _1
	}

	return int32(0)

_1:
	_iBase = *(*int32)(unsafe.Pointer(_pTabList + 8 + 64))
	_pTab = *(*uintptr)(unsafe.Pointer(_pTabList + 8 + 32))
	_i = int32(0)
_2:
	if _i >= (*(*int32)(unsafe.Pointer(_pDistinct))) {
		goto _4
	}

	_p = _1510sqlite3ExprSkipCollate(tls, *(*uintptr)(unsafe.Pointer((_pDistinct + 8) + 32*uintptr(_i))))
	if int32(*(*uint8)(unsafe.Pointer(_p))) != int32(145) || (*(*int32)(unsafe.Pointer(_p + 44))) != _iBase || int32(*(*int16)(unsafe.Pointer(_p + 48))) >= int32(0) {
		goto _5
	}

	return int32(1)

_5:
	_i++
	goto _2

_4:
	_pIdx = *(*uintptr)(unsafe.Pointer(_pTab + 16))
_6:
	if _pIdx == 0 {
		goto _8
	}

	if int32(*(*uint8)(unsafe.Pointer(_pIdx + 98))) != int32(0) {
		goto _9
	}

	goto _7

_9:
	_i = int32(0)
_10:
	if _i >= int32(*(*uint16)(unsafe.Pointer(_pIdx + 94))) {
		goto _12
	}

	if 0 != _1896sqlite3WhereFindTerm(tls, _pWC, _iBase, _i, uint64(18446744073709551615), uint32(0x2), _pIdx) {
		goto _13
	}

	if _1897findIndexCol(tls, _pParse, _pDistinct, _iBase, _pIdx, _i) >= int32(0) {
		goto _14
	}

	goto _12

_14:
	if _1898indexColumnNotNull(tls, _pIdx, _i) != int32(0) {
		goto _15
	}

	goto _12

_15:
_13:
	_i++
	goto _10

_12:
	if _i != int32(*(*uint16)(unsafe.Pointer(_pIdx + 94))) {
		goto _16
	}

	return int32(1)

_16:
_7:
	_pIdx = *(*uintptr)(unsafe.Pointer(_pIdx + 40))
	goto _6

_8:
	return int32(0)
}

// _1780whereShortCut is defined at sqlite3.c:136045:12
func _1780whereShortCut(tls crt.TLS, _pBuilder uintptr /* *TWhereLoopBuilder = SWhereLoopBuilder */) (r int32) {
	var (
		_pWInfo uintptr // *TWhereInfo = SWhereInfo
		_pItem  uintptr // *SSrcList_item
		_pWC    uintptr // *TWhereClause = SWhereClause
		_pTerm  uintptr // *TWhereTerm = SWhereTerm
		_pLoop  uintptr // *TWhereLoop = SWhereLoop
		_iCur   int32
		_j      int32
		_pTab   uintptr // *TTable = STable
		_pIdx   uintptr // *TIndex = SIndex
		_opMask int32
	)
	_pWInfo = *(*uintptr)(unsafe.Pointer(_pBuilder))
	if (int32(*(*uint16)(unsafe.Pointer(_pWInfo + 64))) & int32(0x20)) == 0 {
		goto _1
	}

	return int32(0)

_1:
	_pItem = (*(*uintptr)(unsafe.Pointer(_pWInfo + 8))) + 8
	_pTab = *(*uintptr)(unsafe.Pointer(_pItem + 32))
	if *(*int32)(unsafe.Pointer(_pTab + 84)) == 0 {
		goto _2
	}

	return int32(0)

_2:
	if (uint32((*(*uint8)(unsafe.Pointer((_pItem + 60) + 1)))>>1) << 31 >> 31) == 0 {
		goto _3
	}

	return int32(0)

_3:
	_iCur = *(*int32)(unsafe.Pointer(_pItem + 64))
	_pWC = _pWInfo + 104
	_pLoop = *(*uintptr)(unsafe.Pointer(_pBuilder + 24))
	*(*uint32)(unsafe.Pointer(_pLoop + 40)) = uint32(0)
	*(*uint16)(unsafe.Pointer(_pLoop + 46)) = uint16(0)
	_pTerm = _1896sqlite3WhereFindTerm(tls, _pWC, _iCur, int32(-1), uint64(0), uint32(130), null)
	if _pTerm == 0 {
		goto _4
	}

	*(*uint32)(unsafe.Pointer(_pLoop + 40)) = uint32(4353)
	*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pLoop + 56)))) = _pTerm
	*(*uint16)(unsafe.Pointer(_pLoop + 44)) = uint16(1)
	*(*uint16)(unsafe.Pointer(_pLoop + 24)) = uint16(1)
	*(*int16)(unsafe.Pointer(_pLoop + 20)) = int16(33)
	goto _5

_4:
	_pIdx = *(*uintptr)(unsafe.Pointer(_pTab + 16))
_6:
	if _pIdx == 0 {
		goto _8
	}

	if int32(*(*uint8)(unsafe.Pointer(_pIdx + 98))) != int32(0) && (*(*uintptr)(unsafe.Pointer(_pIdx + 72))) == 0 && int32(*(*uint16)(unsafe.Pointer(_pIdx + 94))) <= int32(3) {
		goto _9
	}

	goto _7

_9:
	_opMask = func() int32 {
		if (uint32((*(*uint8)(unsafe.Pointer(_pIdx + 99)))>>3) << 31 >> 31) != 0 {
			return int32(130)
		}
		return int32(0x2)
	}()
	_j = int32(0)
_10:
	if _j >= int32(*(*uint16)(unsafe.Pointer(_pIdx + 94))) {
		goto _12
	}

	_pTerm = _1896sqlite3WhereFindTerm(tls, _pWC, _iCur, _j, uint64(0), uint32(_opMask), _pIdx)
	if _pTerm != 0 {
		goto _13
	}

	goto _12

_13:
	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pLoop + 56))) + 8*uintptr(_j))) = _pTerm
	_j++
	goto _10

_12:
	if _j == int32(*(*uint16)(unsafe.Pointer(_pIdx + 94))) {
		goto _14
	}

	goto _7

_14:
	*(*uint32)(unsafe.Pointer(_pLoop + 40)) = uint32(4609)
	if (uint32((*(*uint8)(unsafe.Pointer(_pIdx + 99)))>>5)<<31>>31) == 0 && ((*(*uint64)(unsafe.Pointer(_pItem + 88)))&(^_1899columnsInIndex(tls, _pIdx))) != uint64(0) {
		goto _15
	}

	{
		p := &(*(*uint32)(unsafe.Pointer(_pLoop + 40)))
		*p = uint32(uint32(*p) | uint32(0x40))
	}
_15:
	*(*uint16)(unsafe.Pointer(_pLoop + 44)) = uint16(_j)
	*(*uint16)(unsafe.Pointer(_pLoop + 24)) = uint16(_j)
	*(*uintptr)(unsafe.Pointer(_pLoop + 24 + 8)) = _pIdx
	*(*int16)(unsafe.Pointer(_pLoop + 20)) = int16(39)
	goto _8

_7:
	_pIdx = *(*uintptr)(unsafe.Pointer(_pIdx + 40))
	goto _6

_8:
_5:
	if (*(*uint32)(unsafe.Pointer(_pLoop + 40))) == 0 {
		goto _16
	}

	*(*int16)(unsafe.Pointer(_pLoop + 22)) = int16(1)
	*(*uintptr)(unsafe.Pointer(_pWInfo + 920 + 72)) = _pLoop

	*(*uint64)(unsafe.Pointer(_pLoop + 8)) = uint64(1)
	*(*int32)(unsafe.Pointer(_pWInfo + 920 + 4)) = _iCur
	*(*int16)(unsafe.Pointer(_pWInfo + 96)) = int16(1)
	if (*(*uintptr)(unsafe.Pointer(_pWInfo + 16))) == 0 {
		goto _17
	}

	*(*int8)(unsafe.Pointer(_pWInfo + 67)) = int8(*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pWInfo + 16)))))
_17:
	if (int32(*(*uint16)(unsafe.Pointer(_pWInfo + 64))) & int32(0x100)) == 0 {
		goto _18
	}

	*(*uint8)(unsafe.Pointer(_pWInfo + 71)) = uint8(1)
_18:
	return int32(1)

_16:
	return int32(0)
}

// _1781whereLoopAddAll is defined at sqlite3.c:135221:12
func _1781whereLoopAddAll(tls crt.TLS, _pBuilder uintptr /* *TWhereLoopBuilder = SWhereLoopBuilder */) (r int32) {
	var (
		_pWInfo        uintptr // *TWhereInfo = SWhereInfo
		_mPrereq       uint64
		_mPrior        uint64
		_iTab          int32
		_pTabList      uintptr // *TSrcList = SSrcList
		_pItem         uintptr // *SSrcList_item
		_pEnd          uintptr // *SSrcList_item
		_db            uintptr // *Tsqlite3 = Ssqlite3
		_rc            int32
		_pNew          uintptr // *TWhereLoop = SWhereLoop
		_priorJointype uint8
		_mUnusable     uint64
		_p             uintptr // *SSrcList_item
	)
	_pWInfo = *(*uintptr)(unsafe.Pointer(_pBuilder))
	_mPrereq = uint64(0)
	_mPrior = uint64(0)
	_pTabList = *(*uintptr)(unsafe.Pointer(_pWInfo + 8))
	_pEnd = (_pTabList + 8) + 112*uintptr(*(*uint8)(unsafe.Pointer(_pWInfo + 66)))
	_db = *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pWInfo))))
	_rc = int32(0)
	_priorJointype = uint8(0)
	_pNew = *(*uintptr)(unsafe.Pointer(_pBuilder + 24))
	_1772whereLoopInit(tls, _pNew)
	_iTab = int32(0)
	_pItem = _pTabList + 8
_1:
	if _pItem >= _pEnd {
		goto _3
	}

	_mUnusable = uint64(0)
	*(*uint8)(unsafe.Pointer(_pNew + 16)) = uint8(_iTab)
	*(*uint64)(unsafe.Pointer(_pNew + 8)) = _1900sqlite3WhereGetMask(tls, _pWInfo+656, *(*int32)(unsafe.Pointer(_pItem + 64)))
	if ((int32(*(*uint8)(unsafe.Pointer(_pItem + 60))) | int32(_priorJointype)) & int32(10)) == int32(0) {
		goto _4
	}

	_mPrereq = _mPrior
_4:
	_priorJointype = *(*uint8)(unsafe.Pointer(_pItem + 60))
	if *(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pItem + 32)) + 84)) == 0 {
		goto _5
	}

	_p = _pItem + 112
_7:
	if _p >= _pEnd {
		goto _9
	}

	if _mUnusable == 0 && int32(*(*uint8)(unsafe.Pointer(_p + 60)))&int32(10) == 0 {
		goto _10
	}

	_mUnusable = uint64(_mUnusable | _1900sqlite3WhereGetMask(tls, _pWInfo+656, *(*int32)(unsafe.Pointer(_p + 64))))
_10:
	_p += 112
	goto _7

_9:
	_rc = _1901whereLoopAddVirtual(tls, _pBuilder, _mPrereq, _mUnusable)
	goto _6

_5:
	_rc = _1902whereLoopAddBtree(tls, _pBuilder, _mPrereq)
_6:
	if _rc != int32(0) {
		goto _11
	}

	_rc = _1903whereLoopAddOr(tls, _pBuilder, _mPrereq, _mUnusable)
_11:
	_mPrior = uint64(_mPrior | (*(*uint64)(unsafe.Pointer(_pNew + 8))))
	if _rc == 0 && (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _12
	}

	goto _3

_12:
	_iTab++
	_pItem += 112
	goto _1

_3:
	_1904whereLoopClear(tls, _db, _pNew)
	return _rc
}

// _1782wherePathSolver is defined at sqlite3.c:135666:12
func _1782wherePathSolver(tls crt.TLS, _pWInfo uintptr /* *TWhereInfo = SWhereInfo */, _nRowEst int16) (r int32) {
	esc := crt.MustMalloc(56)
	var (
		_mxChoice   int32
		_nLoop      int32
		_pParse     uintptr // *TParse = SParse
		_db         uintptr // *Tsqlite3 = Ssqlite3
		_iLoop      int32
		_ii         int32
		_jj         int32
		_mxI        int32
		_nOrderBy   int32
		_mxCost     int16
		_mxUnsorted int16
		_nTo        int32
		_nFrom      int32
		_aFrom      uintptr // *TWherePath = SWherePath
		_aTo        uintptr // *TWherePath = SWherePath
		_pFrom      uintptr // *TWherePath = SWherePath
		_pTo        uintptr // *TWherePath = SWherePath
		_pWLoop     uintptr // *TWhereLoop = SWhereLoop
		_pX         uintptr // **TWhereLoop = SWhereLoop
		_aSortCost  uintptr // *TLogEst = int16
		_pSpace     uintptr // *int8
		_nSpace     int32
		_nOut       int16
		_rCost      int16
		_rUnsorted  int16
		_isOrdered  int8
		_maskNew    uint64
		_revMask    = esc      // *TBitmask = Tu64 = Tsqlite_uint64 = uint64
		_pLevel     uintptr    // *TWhereLevel = SWhereLevel
		_notUsed    = esc + 16 // *TBitmask = Tu64 = Tsqlite_uint64 = uint64
		_rc         int32
		_wsFlags    uint32
		_m          = esc + 32 // *TBitmask = Tu64 = Tsqlite_uint64 = uint64
		_1rc        int32
		_2revMask   = esc + 48 // *TBitmask = Tu64 = Tsqlite_uint64 = uint64
		_nOrder     int32
	)
	defer crt.Free(esc)
	_mxI = int32(0)
	_mxCost = int16(0)
	_mxUnsorted = int16(0)
	_aSortCost = 0
	_pParse = *(*uintptr)(unsafe.Pointer(_pWInfo))
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_nLoop = int32(*(*uint8)(unsafe.Pointer(_pWInfo + 66)))
	_mxChoice = func() int32 {
		if _nLoop <= int32(1) {
			return int32(1)
		}
		return func() int32 {
			if _nLoop == int32(2) {
				return int32(5)
			}
			return int32(10)
		}()
	}()

	if (*(*uintptr)(unsafe.Pointer(_pWInfo + 16))) != 0 && int32(_nRowEst) != int32(0) {
		goto _1
	}

	_nOrderBy = int32(0)
	goto _2

_1:
	_nOrderBy = *(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pWInfo + 16))))
_2:
	_nSpace = int32(((uint64(32) + (uint64(8) * uint64(_nLoop))) * uint64(_mxChoice)) * uint64(2))
	_nSpace = int32(uint64(_nSpace) + (uint64(2) * uint64(_nOrderBy)))
	_pSpace = _373sqlite3DbMallocRawNN(tls, _db, uint64(_nSpace))
	if _pSpace != 0 {
		goto _3
	}

	return int32(7)

_3:
	_aTo = _pSpace
	_aFrom = _aTo + 32*uintptr(_mxChoice)
	crt.Xmemset(tls, _aFrom, int32(0), uint64(32))
	_pX = _aFrom + 32*uintptr(_mxChoice)
	_ii = _mxChoice * int32(2)
	_pFrom = _aTo
_4:
	if _ii <= int32(0) {
		goto _6
	}

	*(*uintptr)(unsafe.Pointer(_pFrom + 24)) = _pX
	_ii--
	_pFrom += 32
	_pX += 8 * uintptr(_nLoop)
	goto _4

_6:
	if _nOrderBy == 0 {
		goto _7
	}

	_aSortCost = _pX
	crt.Xmemset(tls, _aSortCost, int32(0), uint64(2)*uint64(_nOrderBy))
_7:
	*(*int16)(unsafe.Pointer(_aFrom + 16)) = int16(func() uint32 {
		if (*(*uint32)(unsafe.Pointer(_pParse + 180))) < uint32(48) {
			return *(*uint32)(unsafe.Pointer(_pParse + 180))
		}
		return uint32(48)
	}())

	_nFrom = int32(1)

	if _nOrderBy == 0 {
		goto _8
	}

	*(*int8)(unsafe.Pointer(_aFrom + 22)) = int8(func() int32 {
		if _nLoop > int32(0) {
			return int32(-1)
		}
		return _nOrderBy
	}())
_8:
	_iLoop = int32(0)
_9:
	if _iLoop >= _nLoop {
		goto _11
	}

	_nTo = int32(0)
	_ii = int32(0)
	_pFrom = _aFrom
_12:
	if _ii >= _nFrom {
		goto _14
	}

	_pWLoop = *(*uintptr)(unsafe.Pointer(_pWInfo + 80))
_15:
	if _pWLoop == 0 {
		goto _17
	}

	_isOrdered = *(*int8)(unsafe.Pointer(_pFrom + 22))
	*(*uint64)(unsafe.Pointer(_revMask)) = uint64(0)
	if ((*(*uint64)(unsafe.Pointer(_pWLoop))) & (^*(*uint64)(unsafe.Pointer(_pFrom)))) == uint64(0) {
		goto _18
	}

	goto _16

_18:
	if ((*(*uint64)(unsafe.Pointer(_pWLoop + 8))) & (*(*uint64)(unsafe.Pointer(_pFrom)))) == uint64(0) {
		goto _19
	}

	goto _16

_19:
	if ((*(*uint32)(unsafe.Pointer(_pWLoop + 40)))&uint32(0x4000)) == uint32(0) || int32(*(*int16)(unsafe.Pointer(_pFrom + 16))) >= int32(10) {
		goto _20
	}

	goto _16

_20:
	_rUnsorted = _1761sqlite3LogEstAdd(tls, *(*int16)(unsafe.Pointer(_pWLoop + 18)), int16(int32(*(*int16)(unsafe.Pointer(_pWLoop + 20)))+int32(*(*int16)(unsafe.Pointer(_pFrom + 16)))))
	_rUnsorted = _1761sqlite3LogEstAdd(tls, _rUnsorted, *(*int16)(unsafe.Pointer(_pFrom + 20)))
	_nOut = int16(int32(*(*int16)(unsafe.Pointer(_pFrom + 16))) + int32(*(*int16)(unsafe.Pointer(_pWLoop + 22))))
	_maskNew = (*(*uint64)(unsafe.Pointer(_pFrom))) | (*(*uint64)(unsafe.Pointer(_pWLoop + 8)))
	if int32(_isOrdered) >= int32(0) {
		goto _21
	}

	_isOrdered = _1905wherePathSatisfiesOrderBy(tls, _pWInfo, *(*uintptr)(unsafe.Pointer(_pWInfo + 16)), _pFrom, *(*uint16)(unsafe.Pointer(_pWInfo + 64)), uint16(_iLoop), _pWLoop, _revMask)
	goto _22

_21:
	*(*uint64)(unsafe.Pointer(_revMask)) = *(*uint64)(unsafe.Pointer(_pFrom + 8))
_22:
	if int32(_isOrdered) < int32(0) || int32(_isOrdered) >= _nOrderBy {
		goto _23
	}

	if int32(*(*int16)(unsafe.Pointer(_aSortCost + 2*uintptr(_isOrdered)))) != int32(0) {
		goto _25
	}

	*(*int16)(unsafe.Pointer(_aSortCost + 2*uintptr(_isOrdered))) = _1906whereSortingCost(tls, _pWInfo, _nRowEst, _nOrderBy, int32(_isOrdered))
_25:
	_rCost = _1761sqlite3LogEstAdd(tls, _rUnsorted, *(*int16)(unsafe.Pointer(_aSortCost + 2*uintptr(_isOrdered))))
	goto _24

_23:
	_rCost = _rUnsorted
	_rUnsorted = int16(int32(_rUnsorted) - int32(2))
_24:
	_jj = int32(0)
	_pTo = _aTo
_26:
	if _jj >= _nTo {
		goto _28
	}

	if (*(*uint64)(unsafe.Pointer(_pTo))) != _maskNew || ((int32(*(*int8)(unsafe.Pointer(_pTo + 22)))^int32(_isOrdered))&int32(0x80)) != int32(0) {
		goto _29
	}

	goto _28

_29:
	_jj++
	_pTo += 32
	goto _26

_28:
	if _jj < _nTo {
		goto _30
	}

	if _nTo < _mxChoice || int32(_rCost) <= int32(_mxCost) && (int32(_rCost) != int32(_mxCost) || int32(_rUnsorted) < int32(_mxUnsorted)) {
		goto _32
	}

	goto _16

_32:
	if _nTo >= _mxChoice {
		goto _33
	}

	_jj = postinc7(&_nTo)
	goto _34

_33:
	_jj = _mxI
_34:
	_pTo = _aTo + 32*uintptr(_jj)
	goto _31

_30:
	if int32(*(*int16)(unsafe.Pointer(_pTo + 18))) >= int32(_rCost) && (int32(*(*int16)(unsafe.Pointer(_pTo + 18))) != int32(_rCost) || int32(*(*int16)(unsafe.Pointer(_pTo + 16))) >= int32(_nOut) && (int32(*(*int16)(unsafe.Pointer(_pTo + 16))) != int32(_nOut) || int32(*(*int16)(unsafe.Pointer(_pTo + 20))) > int32(_rUnsorted))) {
		goto _35
	}

	goto _16

_35:
_31:
	*(*uint64)(unsafe.Pointer(_pTo)) = (*(*uint64)(unsafe.Pointer(_pFrom))) | (*(*uint64)(unsafe.Pointer(_pWLoop + 8)))
	*(*uint64)(unsafe.Pointer(_pTo + 8)) = *(*uint64)(unsafe.Pointer(_revMask))
	*(*int16)(unsafe.Pointer(_pTo + 16)) = _nOut
	*(*int16)(unsafe.Pointer(_pTo + 18)) = _rCost
	*(*int16)(unsafe.Pointer(_pTo + 20)) = _rUnsorted
	*(*int8)(unsafe.Pointer(_pTo + 22)) = _isOrdered
	crt.Xmemcpy(tls, *(*uintptr)(unsafe.Pointer(_pTo + 24)), *(*uintptr)(unsafe.Pointer(_pFrom + 24)), uint64(8)*uint64(_iLoop))
	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTo + 24))) + 8*uintptr(_iLoop))) = _pWLoop
	if _nTo < _mxChoice {
		goto _36
	}

	_mxI = int32(0)
	_mxCost = *(*int16)(unsafe.Pointer(_aTo + 18))
	_mxUnsorted = *(*int16)(unsafe.Pointer(_aTo + 16))
	_jj = int32(1)
	_pTo = _aTo + 32
_37:
	if _jj >= _mxChoice {
		goto _39
	}

	if int32(*(*int16)(unsafe.Pointer(_pTo + 18))) <= int32(_mxCost) && (int32(*(*int16)(unsafe.Pointer(_pTo + 18))) != int32(_mxCost) || int32(*(*int16)(unsafe.Pointer(_pTo + 20))) <= int32(_mxUnsorted)) {
		goto _40
	}

	_mxCost = *(*int16)(unsafe.Pointer(_pTo + 18))
	_mxUnsorted = *(*int16)(unsafe.Pointer(_pTo + 20))
	_mxI = _jj
_40:
	_jj++
	_pTo += 32
	goto _37

_39:
_36:
_16:
	_pWLoop = *(*uintptr)(unsafe.Pointer(_pWLoop + 64))
	goto _15

_17:
	_ii++
	_pFrom += 32
	goto _12

_14:
	_pFrom = _aTo
	_aTo = _aFrom
	_aFrom = _pFrom
	_nFrom = _nTo
	_iLoop++
	goto _9

_11:
	if _nFrom != int32(0) {
		goto _41
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+31474 /* "no query solution" */)
	_376sqlite3DbFreeNN(tls, _db, _pSpace)
	return int32(1)

_41:
	_pFrom = _aFrom
	_ii = int32(1)
_42:
	if _ii >= _nFrom {
		goto _44
	}

	if int32(*(*int16)(unsafe.Pointer(_pFrom + 18))) <= int32(*(*int16)(unsafe.Pointer((_aFrom + 32*uintptr(_ii)) + 18))) {
		goto _45
	}

	_pFrom = _aFrom + 32*uintptr(_ii)
_45:
	_ii++
	goto _42

_44:
	_iLoop = int32(0)
_46:
	if _iLoop >= _nLoop {
		goto _48
	}

	_pLevel = (_pWInfo + 920) + 88*uintptr(_iLoop)
	*(*uintptr)(unsafe.Pointer(_pLevel + 72)) = set4(&_pWLoop, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pFrom + 24))) + 8*uintptr(_iLoop))))
	*(*uint8)(unsafe.Pointer(_pLevel + 44)) = *(*uint8)(unsafe.Pointer(_pWLoop + 16))
	*(*int32)(unsafe.Pointer(_pLevel + 4)) = *(*int32)(unsafe.Pointer((((*(*uintptr)(unsafe.Pointer(_pWInfo + 8))) + 8) + 112*uintptr(*(*uint8)(unsafe.Pointer(_pLevel + 44)))) + 64))
	_iLoop++
	goto _46

_48:
	if (int32(*(*uint16)(unsafe.Pointer(_pWInfo + 64)))&int32(0x100)) == int32(0) || (int32(*(*uint16)(unsafe.Pointer(_pWInfo + 64)))&int32(0x80)) != int32(0) || int32(*(*uint8)(unsafe.Pointer(_pWInfo + 71))) != int32(0) || _nRowEst == 0 {
		goto _49
	}

	_rc = int32(_1905wherePathSatisfiesOrderBy(tls, _pWInfo, *(*uintptr)(unsafe.Pointer(_pWInfo + 24)), _pFrom, uint16(0x80), uint16(_nLoop-int32(1)), *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pFrom + 24))) + 8*uintptr(_nLoop-int32(1)))), _notUsed))
	if _rc != (*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pWInfo + 24))))) {
		goto _50
	}

	*(*uint8)(unsafe.Pointer(_pWInfo + 71)) = uint8(2)
_50:
_49:
	if (*(*uintptr)(unsafe.Pointer(_pWInfo + 16))) == 0 {
		goto _51
	}

	if (int32(*(*uint16)(unsafe.Pointer(_pWInfo + 64))) & int32(0x80)) == 0 {
		goto _52
	}

	if int32(*(*int8)(unsafe.Pointer(_pFrom + 22))) != (*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pWInfo + 16))))) {
		goto _54
	}

	*(*uint8)(unsafe.Pointer(_pWInfo + 71)) = uint8(2)
_54:
	goto _53

_52:
	*(*int8)(unsafe.Pointer(_pWInfo + 67)) = *(*int8)(unsafe.Pointer(_pFrom + 22))
	*(*uint64)(unsafe.Pointer(_pWInfo + 88)) = *(*uint64)(unsafe.Pointer(_pFrom + 8))
	if int32(*(*int8)(unsafe.Pointer(_pWInfo + 67))) > int32(0) {
		goto _55
	}

	*(*int8)(unsafe.Pointer(_pWInfo + 67)) = int8(0)
	if _nLoop <= int32(0) {
		goto _56
	}

	_wsFlags = *(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pFrom + 24))) + 8*uintptr(_nLoop-int32(1))))) + 40))
	if (_wsFlags&uint32(0x1000)) != uint32(0) || (_wsFlags&uint32(260)) == uint32(260) {
		goto _57
	}

	*(*uint64)(unsafe.Pointer(_m)) = uint64(0)
	_1rc = int32(_1905wherePathSatisfiesOrderBy(tls, _pWInfo, *(*uintptr)(unsafe.Pointer(_pWInfo + 16)), _pFrom, uint16(0x800), uint16(_nLoop-int32(1)), *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pFrom + 24))) + 8*uintptr(_nLoop-int32(1)))), _m))
	if _1rc != (*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pWInfo + 16))))) {
		goto _58
	}

	*(*uint8)(unsafe.Pointer(_pWInfo + 72)) = uint8(1)
	*(*uint64)(unsafe.Pointer(_pWInfo + 88)) = *(*uint64)(unsafe.Pointer(_m))
_58:
_57:
_56:
_55:
_53:
	if int32(*(*uint16)(unsafe.Pointer(_pWInfo + 64)))&int32(0x200) == 0 || int32(*(*int8)(unsafe.Pointer(_pWInfo + 67))) != (*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pWInfo + 16))))) || _nLoop <= int32(0) {
		goto _59
	}

	*(*uint64)(unsafe.Pointer(_2revMask)) = uint64(0)
	_nOrder = int32(_1905wherePathSatisfiesOrderBy(tls, _pWInfo, *(*uintptr)(unsafe.Pointer(_pWInfo + 16)), _pFrom, uint16(0), uint16(_nLoop-int32(1)), *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pFrom + 24))) + 8*uintptr(_nLoop-int32(1)))), _2revMask))

	if _nOrder != (*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pWInfo + 16))))) {
		goto _60
	}

	*(*uint8)(unsafe.Pointer(_pWInfo + 68)) = uint8(1)
	*(*uint64)(unsafe.Pointer(_pWInfo + 88)) = *(*uint64)(unsafe.Pointer(_2revMask))
_60:
_59:
_51:
	*(*int16)(unsafe.Pointer(_pWInfo + 96)) = *(*int16)(unsafe.Pointer(_pFrom + 16))
	_376sqlite3DbFreeNN(tls, _db, _pSpace)
	return int32(0)
}

// _1783sqlite3WhereExprListUsage is defined at sqlite3.c:131737:24
func _1783sqlite3WhereExprListUsage(tls crt.TLS, _pMaskSet uintptr /* *TWhereMaskSet = SWhereMaskSet */, _pList uintptr /* *TExprList = SExprList */) (r uint64) {
	var (
		_i    int32
		_mask uint64
	)
	_mask = uint64(0)
	if _pList == 0 {
		goto _1
	}

	_i = int32(0)
_2:
	if _i >= (*(*int32)(unsafe.Pointer(_pList))) {
		goto _4
	}

	_mask = uint64(_mask | _1907sqlite3WhereExprUsage(tls, _pMaskSet, *(*uintptr)(unsafe.Pointer((_pList + 8) + 32*uintptr(_i)))))
	_i++
	goto _2

_4:
_1:
	return _mask
}

// _1784constructAutomaticIndex is defined at sqlite3.c:132444:13
func _1784constructAutomaticIndex(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pWC uintptr /* *TWhereClause = SWhereClause */, _pSrc uintptr /* *SSrcList_item */, _notReady uint64, _pLevel uintptr /* *TWhereLevel = SWhereLevel */) {
	esc := crt.MustMalloc(8)
	var (
		_nKeyCol     int32
		_pTerm       uintptr // *TWhereTerm = SWhereTerm
		_pWCEnd      uintptr // *TWhereTerm = SWhereTerm
		_pIdx        uintptr // *TIndex = SIndex
		_v           uintptr // *TVdbe = SVdbe
		_addrInit    int32
		_pTable      uintptr // *TTable = STable
		_addrTop     int32
		_regRecord   int32
		_n           int32
		_i           int32
		_mxBitCol    int32
		_pColl       uintptr // *TCollSeq = SCollSeq
		_pLoop       uintptr // *TWhereLoop = SWhereLoop
		_zNotUsed    = esc   // **int8
		_idxCols     uint64
		_extraCols   uint64
		_sentWarning uint8
		_pPartial    uintptr // *TExpr = SExpr
		_iContinue   int32
		_pTabItem    uintptr // *SSrcList_item
		_addrCounter int32
		_regBase     int32
		_pExpr       uintptr // *TExpr = SExpr
		_iCol        int32
		_cMask       uint64
		_1iCol       int32
		_2cMask      uint64
		_pX          uintptr // *TExpr = SExpr
		_regYield    int32
	)
	defer crt.Free(esc)
	_sentWarning = uint8(0)
	_pPartial = 0
	_iContinue = int32(0)
	_addrCounter = int32(0)
	_v = *(*uintptr)(unsafe.Pointer(_pParse + 16))

	_addrInit = _1473sqlite3VdbeAddOp0(tls, _v, int32(20))
	_nKeyCol = int32(0)
	_pTable = *(*uintptr)(unsafe.Pointer(_pSrc + 32))
	_pWCEnd = (*(*uintptr)(unsafe.Pointer(_pWC + 32))) + 64*uintptr(*(*int32)(unsafe.Pointer(_pWC + 20)))
	_pLoop = *(*uintptr)(unsafe.Pointer(_pLevel + 72))
	_idxCols = uint64(0)
	_pTerm = *(*uintptr)(unsafe.Pointer(_pWC + 32))
_1:
	if _pTerm >= _pWCEnd {
		goto _3
	}

	_pExpr = *(*uintptr)(unsafe.Pointer(_pTerm))

	if (*(*uint64)(unsafe.Pointer(_pLoop))) != uint64(0) || (int32(*(*uint16)(unsafe.Pointer(_pTerm + 18)))&int32(0x2)) != int32(0) || ((*(*uint32)(unsafe.Pointer(_pExpr + 4)))&uint32(0x1)) != uint32(0) || _1768sqlite3ExprIsTableConstant(tls, _pExpr, *(*int32)(unsafe.Pointer(_pSrc + 64))) == 0 {
		goto _4
	}

	_pPartial = _1508sqlite3ExprAnd(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _pPartial, _1507sqlite3ExprDup(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _pExpr, int32(0)))
_4:
	if _1908termCanDriveIndex(tls, _pTerm, _pSrc, _notReady) == 0 {
		goto _5
	}

	_iCol = *(*int32)(unsafe.Pointer(_pTerm + 40))
	_cMask = func() uint64 {
		if _iCol >= int32(64) {
			return uint64(9223372036854775808)
		}
		return uint64(1) << (uint(_iCol) % 64)
	}()
	if _sentWarning != 0 {
		goto _6
	}

	Xsqlite3_log(tls, int32(284), ts+31492 /* "automatic index on %s(%s)" */, *(*uintptr)(unsafe.Pointer(_pTable)), *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTable + 8))) + 32*uintptr(_iCol))))
	_sentWarning = uint8(1)
_6:
	if (_idxCols & _cMask) != uint64(0) {
		goto _7
	}

	if _1909whereLoopResize(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _pLoop, _nKeyCol+int32(1)) == 0 {
		goto _8
	}

	goto _end_auto_index_create

_8:
	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pLoop + 56))) + 8*uintptr(postinc7(&_nKeyCol)))) = _pTerm
	_idxCols = uint64(_idxCols | _cMask)
_7:
_5:
	_pTerm += 64
	goto _1

_3:
	*(*uint16)(unsafe.Pointer(_pLoop + 24)) = set60(&(*(*uint16)(unsafe.Pointer(_pLoop + 44))), uint16(_nKeyCol))
	*(*uint32)(unsafe.Pointer(_pLoop + 40)) = uint32(16961)
	_extraCols = (*(*uint64)(unsafe.Pointer(_pSrc + 88))) & ((^_idxCols) | uint64(9223372036854775808))
	_mxBitCol = func() int32 {
		if int32(63) < int32(*(*int16)(unsafe.Pointer(_pTable + 70))) {
			return int32(63)
		}
		return int32(*(*int16)(unsafe.Pointer(_pTable + 70)))
	}()
	_i = int32(0)
_9:
	if _i >= _mxBitCol {
		goto _11
	}

	if (_extraCols & (uint64(1) << (uint(_i) % 64))) == 0 {
		goto _12
	}

	_nKeyCol++
_12:
	_i++
	goto _9

_11:
	if ((*(*uint64)(unsafe.Pointer(_pSrc + 88))) & uint64(9223372036854775808)) == 0 {
		goto _13
	}

	_nKeyCol = int32(_nKeyCol + ((int32(*(*int16)(unsafe.Pointer(_pTable + 70))) - int32(64)) + int32(1)))
_13:
	_pIdx = _1517sqlite3AllocateIndexObject(tls, *(*uintptr)(unsafe.Pointer(_pParse)), int16(_nKeyCol+int32(1)), int32(0), _zNotUsed)
	if _pIdx != 0 {
		goto _14
	}

	goto _end_auto_index_create

_14:
	*(*uintptr)(unsafe.Pointer(_pLoop + 24 + 8)) = _pIdx
	*(*uintptr)(unsafe.Pointer(_pIdx)) = ts + 31518 /* "auto-index" */
	*(*uintptr)(unsafe.Pointer(_pIdx + 24)) = _pTable
	_n = int32(0)
	_idxCols = uint64(0)
	_pTerm = *(*uintptr)(unsafe.Pointer(_pWC + 32))
_15:
	if _pTerm >= _pWCEnd {
		goto _17
	}

	if _1908termCanDriveIndex(tls, _pTerm, _pSrc, _notReady) == 0 {
		goto _18
	}

	_1iCol = *(*int32)(unsafe.Pointer(_pTerm + 40))
	_2cMask = func() uint64 {
		if _1iCol >= int32(64) {
			return uint64(9223372036854775808)
		}
		return uint64(1) << (uint(_1iCol) % 64)
	}()
	if (_idxCols & _2cMask) != uint64(0) {
		goto _19
	}

	_pX = *(*uintptr)(unsafe.Pointer(_pTerm))
	_idxCols = uint64(_idxCols | _2cMask)
	*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 8))) + 2*uintptr(_n))) = int16(*(*int32)(unsafe.Pointer(_pTerm + 40)))
	_pColl = _1910sqlite3BinaryCompareCollSeq(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pX + 16)), *(*uintptr)(unsafe.Pointer(_pX + 24)))
	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 64))) + 8*uintptr(_n))) = func() uintptr {
		if _pColl != 0 {
			return *(*uintptr)(unsafe.Pointer(_pColl))
		}
		return _224sqlite3StrBINARY
	}()
	_n++
_19:
_18:
	_pTerm += 64
	goto _15

_17:
	_i = int32(0)
_20:
	if _i >= _mxBitCol {
		goto _22
	}

	if (_extraCols & (uint64(1) << (uint(_i) % 64))) == 0 {
		goto _23
	}

	*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 8))) + 2*uintptr(_n))) = int16(_i)
	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 64))) + 8*uintptr(_n))) = _224sqlite3StrBINARY
	_n++
_23:
	_i++
	goto _20

_22:
	if ((*(*uint64)(unsafe.Pointer(_pSrc + 88))) & uint64(9223372036854775808)) == 0 {
		goto _24
	}

	_i = int32(63)
_25:
	if _i >= int32(*(*int16)(unsafe.Pointer(_pTable + 70))) {
		goto _27
	}

	*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 8))) + 2*uintptr(_n))) = int16(_i)
	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 64))) + 8*uintptr(_n))) = _224sqlite3StrBINARY
	_n++
	_i++
	goto _25

_27:
_24:
	*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 8))) + 2*uintptr(_n))) = int16(-1)
	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 64))) + 8*uintptr(_n))) = _224sqlite3StrBINARY

	*(*int32)(unsafe.Pointer(_pLevel + 8)) = postinc7(&(*(*int32)(unsafe.Pointer(_pParse + 52))))
	_1240sqlite3VdbeAddOp2(tls, _v, int32(107), *(*int32)(unsafe.Pointer(_pLevel + 8)), _nKeyCol+int32(1))
	_1589sqlite3VdbeSetP4KeyInfo(tls, _pParse, _pIdx)
	_1652sqlite3ExprCachePush(tls, _pParse)
	_pTabItem = ((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pWC))) + 8))) + 8) + 112*uintptr(*(*uint8)(unsafe.Pointer(_pLevel + 44)))
	if (uint32((*(*uint8)(unsafe.Pointer((_pTabItem + 60) + 1)))>>4) << 31 >> 31) == 0 {
		goto _28
	}

	_regYield = *(*int32)(unsafe.Pointer(_pTabItem + 52))
	_addrCounter = _1240sqlite3VdbeAddOp2(tls, _v, int32(67), int32(0), int32(0))
	_1241sqlite3VdbeAddOp3(tls, _v, int32(15), _regYield, int32(0), *(*int32)(unsafe.Pointer(_pTabItem + 48)))
	_addrTop = _1489sqlite3VdbeAddOp1(tls, _v, int32(16), _regYield)
	goto _29

_28:
	_addrTop = _1489sqlite3VdbeAddOp1(tls, _v, int32(37), *(*int32)(unsafe.Pointer(_pLevel + 4)))
_29:
	if _pPartial == 0 {
		goto _30
	}

	_iContinue = _1541sqlite3VdbeMakeLabel(tls, _v)
	_1571sqlite3ExprIfFalse(tls, _pParse, _pPartial, _iContinue, int32(0x10))
	{
		p := &(*(*uint32)(unsafe.Pointer(_pLoop + 40)))
		*p = uint32(uint32(*p) | uint32(0x20000))
	}
_30:
	_regRecord = _1562sqlite3GetTempReg(tls, _pParse)
	_regBase = _1655sqlite3GenerateIndexKey(tls, _pParse, _pIdx, *(*int32)(unsafe.Pointer(_pLevel + 4)), _regRecord, int32(0), null, null, int32(0))
	_1240sqlite3VdbeAddOp2(tls, _v, int32(127), *(*int32)(unsafe.Pointer(_pLevel + 8)), _regRecord)
	_1072sqlite3VdbeChangeP5(tls, _v, uint16(0x10))
	if _pPartial == 0 {
		goto _31
	}

	_1569sqlite3VdbeResolveLabel(tls, _v, _iContinue)
_31:
	if (uint32((*(*uint8)(unsafe.Pointer((_pTabItem + 60) + 1)))>>4) << 31 >> 31) == 0 {
		goto _32
	}

	_1725sqlite3VdbeChangeP2(tls, _v, uint32(_addrCounter), _regBase+_n)
	_1793translateColumnToCopy(tls, _pParse, _addrTop, *(*int32)(unsafe.Pointer(_pLevel + 4)), *(*int32)(unsafe.Pointer(_pTabItem + 56)), int32(1))
	_1479sqlite3VdbeGoto(tls, _v, _addrTop)
	set207b(&(*(*uint8)(unsafe.Pointer((_pTabItem + 60) + 1))), uint32(0))
	goto _33

_32:
	_1240sqlite3VdbeAddOp2(tls, _v, int32(7), *(*int32)(unsafe.Pointer(_pLevel + 4)), _addrTop+int32(1))
_33:
	_1072sqlite3VdbeChangeP5(tls, _v, uint16(3))
	_1474sqlite3VdbeJumpHere(tls, _v, _addrTop)
	_1563sqlite3ReleaseTempReg(tls, _pParse, _regRecord)
	_1654sqlite3ExprCachePop(tls, _pParse)
	_1474sqlite3VdbeJumpHere(tls, _v, _addrInit)
	goto _end_auto_index_create
_end_auto_index_create:
	_777sqlite3ExprDelete(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _pPartial)
}

// _1785sqlite3WhereExplainOneScan is defined at sqlite3.c:128242:20
func _1785sqlite3WhereExplainOneScan(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pTabList uintptr /* *TSrcList = SSrcList */, _pLevel uintptr /* *TWhereLevel = SWhereLevel */, _iLevel int32, _iFrom int32, _wctrlFlags uint16) (r int32) {
	esc := crt.MustMalloc(132)
	var (
		_ret      int32
		_pItem    uintptr // *SSrcList_item
		_v        uintptr // *TVdbe = SVdbe
		_db       uintptr // *Tsqlite3 = Ssqlite3
		_iId      int32
		_isSearch int32
		_pLoop    uintptr // *TWhereLoop = SWhereLoop
		_flags    uint32
		_zMsg     uintptr    // *int8
		_str      = esc      // *TStrAccum = SStrAccum
		_zBuf     = esc + 32 // *[100]int8
		_zFmt     uintptr    // *int8
		_pIdx     uintptr    // *TIndex = SIndex
		_zRangeOp uintptr    // *int8
	)
	defer crt.Free(esc)
	_ret = int32(0)
	if int32(*(*uint8)(unsafe.Pointer(_pParse + 467))) != int32(2) {
		goto _1
	}

	_pItem = (_pTabList + 8) + 112*uintptr(*(*uint8)(unsafe.Pointer(_pLevel + 44)))
	_v = *(*uintptr)(unsafe.Pointer(_pParse + 16))
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_iId = *(*int32)(unsafe.Pointer(_pParse + 480))
	_pLoop = *(*uintptr)(unsafe.Pointer(_pLevel + 72))
	_flags = *(*uint32)(unsafe.Pointer(_pLoop + 40))
	if _flags&uint32(0x2000) == 0 && int32(_wctrlFlags)&int32(0x20) == 0 {
		goto _2
	}

	return int32(0)

_2:
	_isSearch = bool2int((((_flags & uint32(48)) != uint32(0)) || (((_flags & uint32(0x400)) == uint32(0)) && (int32(*(*uint16)(unsafe.Pointer(_pLoop + 24))) > int32(0)))) || (int32(_wctrlFlags)&int32(3) != 0))
	_130sqlite3StrAccumInit(tls, _str, _db, _zBuf, int32(100), int32(1000000000))
	_312sqlite3StrAccumAppendAll(tls, _str, func() uintptr {
		if _isSearch != 0 {
			return ts + 31529 /* "SEARCH" */
		}
		return ts + 31536 /* "SCAN" */
	}())
	if (*(*uintptr)(unsafe.Pointer(_pItem + 40))) == 0 {
		goto _3
	}

	_807sqlite3XPrintf(tls, _str, ts+31541 /* " SUBQUERY %d" */, int32(*(*uint8)(unsafe.Pointer(_pItem + 62))))
	goto _4

_3:
	_807sqlite3XPrintf(tls, _str, ts+31554 /* " TABLE %s" */, *(*uintptr)(unsafe.Pointer(_pItem + 16)))
_4:
	if (*(*uintptr)(unsafe.Pointer(_pItem + 24))) == 0 {
		goto _5
	}

	_807sqlite3XPrintf(tls, _str, ts+31564 /* " AS %s" */, *(*uintptr)(unsafe.Pointer(_pItem + 24)))
_5:
	if (_flags & uint32(1280)) != uint32(0) {
		goto _6
	}

	_zFmt = 0

	_pIdx = *(*uintptr)(unsafe.Pointer(_pLoop + 24 + 8))

	if ((*(*uint32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pItem + 32)) + 64)))&uint32(0x20)) == uint32(0) || int32(uint32(*(*uint8)(unsafe.Pointer(_pIdx + 99)))<<30>>30) != int32(2) {
		goto _8
	}

	if _isSearch == 0 {
		goto _10
	}

	_zFmt = ts + 31571 /* "PRIMARY KEY" */
_10:
	goto _9

_8:
	if (_flags & uint32(0x20000)) == 0 {
		goto _11
	}

	_zFmt = ts + 31583 /* "AUTOMATIC PARTIAL COVERING INDEX" */
	goto _12

_11:
	if (_flags & uint32(0x4000)) == 0 {
		goto _13
	}

	_zFmt = ts + 31616 /* "AUTOMATIC COVERING INDEX" */
	goto _14

_13:
	if (_flags & uint32(0x40)) == 0 {
		goto _15
	}

	_zFmt = ts + 31641 /* "COVERING INDEX %s" */
	goto _16

_15:
	_zFmt = ts + 31659 /* "INDEX %s" */
_16:
_14:
_12:
_9:
	if _zFmt == 0 {
		goto _17
	}

	_301sqlite3StrAccumAppend(tls, _str, ts+31668 /* " USING " */, int32(7))
	_807sqlite3XPrintf(tls, _str, _zFmt, *(*uintptr)(unsafe.Pointer(_pIdx)))
	_1911explainIndexRange(tls, _str, _pLoop)
_17:
	goto _7

_6:
	if (_flags&uint32(0x100)) == uint32(0) || (_flags&uint32(0xf)) == uint32(0) {
		goto _18
	}

	if (_flags & uint32(5)) == 0 {
		goto _20
	}

	_zRangeOp = ts + 31676 /* "=" */
	goto _21

_20:
	if (_flags & uint32(0x30)) != uint32(0x30) {
		goto _22
	}

	_zRangeOp = ts + 31678 /* ">? AND rowid<" */
	goto _23

_22:
	if (_flags & uint32(0x20)) == 0 {
		goto _24
	}

	_zRangeOp = ts + 31692 /* ">" */
	goto _25

_24:
	_zRangeOp = ts + 31694 /* "<" */
_25:
_23:
_21:
	_807sqlite3XPrintf(tls, _str, ts+31696 /* " USING INTEGER PRIMARY KEY (rowi..." */, _zRangeOp)
	goto _19

_18:
	if (_flags & uint32(0x400)) == uint32(0) {
		goto _26
	}

	_807sqlite3XPrintf(tls, _str, ts+31734 /* " VIRTUAL TABLE INDEX %d:%s" */, *(*int32)(unsafe.Pointer(_pLoop + 24)), *(*uintptr)(unsafe.Pointer(_pLoop + 24 + 8)))
_26:
_19:
_7:
	_zMsg = _299sqlite3StrAccumFinish(tls, _str)
	_ret = _1475sqlite3VdbeAddOp4(tls, _v, int32(167), _iId, _iLevel, _iFrom, _zMsg, int32(-7))
_1:
	return _ret
}

// _1786sqlite3WhereCodeOneLoopStart is defined at sqlite3.c:129230:24
func _1786sqlite3WhereCodeOneLoopStart(tls crt.TLS, _pWInfo uintptr /* *TWhereInfo = SWhereInfo */, _iLevel int32, _notReady uint64) (r uint64) {
	esc := crt.MustMalloc(120)
	var (
		_j                 int32
		_k                 int32
		_iCur              int32
		_addrNxt           int32
		_omitTable         int32
		_bRev              int32
		_pLevel            uintptr // *TWhereLevel = SWhereLevel
		_pLoop             uintptr // *TWhereLoop = SWhereLoop
		_pWC               uintptr // *TWhereClause = SWhereClause
		_pTerm             uintptr // *TWhereTerm = SWhereTerm
		_pParse            uintptr // *TParse = SParse
		_db                uintptr // *Tsqlite3 = Ssqlite3
		_v                 uintptr // *TVdbe = SVdbe
		_pTabItem          uintptr // *SSrcList_item
		_addrBrk           int32
		_addrHalt          int32
		_addrCont          int32
		_iRowidReg         int32
		_iReleaseReg       int32
		_pIdx              uintptr // *TIndex = SIndex
		_iLoop             int32
		_regYield          int32
		_iReg              int32
		_addrNotFound      int32
		_nConstraint       int32
		_iIn               int32
		_iTarget           int32
		_pRight            uintptr // *TExpr = SExpr
		_pCompare          uintptr // *TExpr = SExpr
		_1pRight           uintptr // *TExpr = SExpr
		_pOp               uintptr // *TVdbeOp = SVdbeOp
		_testOp            int32
		_start             int32
		_memEndValue       int32
		_pStart            uintptr // *TWhereTerm = SWhereTerm
		_pEnd              uintptr // *TWhereTerm = SWhereTerm
		_pX                uintptr // *TExpr = SExpr
		_r1                int32
		_rTemp             = esc // *int32
		_op                int32
		_aMoveOp           = esc + 16 // *[4]uint8
		_2pX               uintptr    // *TExpr = SExpr
		_nEq               uint16
		_nBtm              uint16
		_nTop              uint16
		_regBase           int32
		_pRangeStart       uintptr // *TWhereTerm = SWhereTerm
		_pRangeEnd         uintptr // *TWhereTerm = SWhereTerm
		_startEq           int32
		_endEq             int32
		_start_constraints int32
		_3nConstraint      int32
		_iIdxCur           int32
		_nExtraReg         int32
		_4op               int32
		_zStartAff         = esc + 32 // **int8
		_zEndAff           uintptr    // *int8
		_bSeekPastNull     uint8
		_bStopAtNull       uint8
		_t                 uintptr // *TWhereTerm = SWhereTerm
		_5t                uint8
		_6t                uint8
		_7pRight           uintptr // *TExpr = SExpr
		_8pRight           uintptr // *TExpr = SExpr
		_pPk               uintptr // *TIndex = SIndex
		_pOrWc             uintptr // *TWhereClause = SWhereClause
		_pOrTab            uintptr // *TSrcList = SSrcList
		_pCov              uintptr // *TIndex = SIndex
		_iCovCur           int32
		_regReturn         int32
		_regRowset         int32
		_regRowid          int32
		_iLoopBody         int32
		_iRetInit          int32
		_untestedTerms     int32
		_ii                int32
		_wctrlFlags        uint16
		_pAndExpr          uintptr // *TExpr = SExpr
		_pTab              uintptr // *TTable = STable
		_nNotReady         int32
		_origSrc           uintptr // *SSrcList_item
		_9pPk              uintptr // *TIndex = SIndex
		_iTerm             int32
		_pExpr             uintptr // *TExpr = SExpr
		_pOrTerm           uintptr // *TWhereTerm = SWhereTerm
		_pSubWInfo         uintptr // *TWhereInfo = SWhereInfo
		_pOrExpr           uintptr // *TExpr = SExpr
		_jmp1              int32
		_pSubLoop          uintptr // *TWhereLoop = SWhereLoop
		_addrExplain       int32
		_                  = _addrExplain
		_r                 int32
		_iSet              int32
		_10pPk             uintptr // *TIndex = SIndex
		_nPk               int32
		_iPk               int32
		_iCol              int32
		_iNext             int32
		_pE                uintptr // *TExpr = SExpr
		_skipLikeAddr      int32
		_x                 uint32
		_11pE              uintptr    // *TExpr = SExpr
		_sEAlt             = esc + 48 // *TExpr = SExpr
		_pAlt              uintptr    // *TWhereTerm = SWhereTerm
	)
	defer crt.Free(esc)
	_iRowidReg = int32(0)
	_iReleaseReg = int32(0)
	_pIdx = 0
	_pParse = *(*uintptr)(unsafe.Pointer(_pWInfo))
	_v = *(*uintptr)(unsafe.Pointer(_pParse + 16))
	_pWC = _pWInfo + 104
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_pLevel = (_pWInfo + 920) + 88*uintptr(_iLevel)
	_pLoop = *(*uintptr)(unsafe.Pointer(_pLevel + 72))
	_pTabItem = ((*(*uintptr)(unsafe.Pointer(_pWInfo + 8))) + 8) + 112*uintptr(*(*uint8)(unsafe.Pointer(_pLevel + 44)))
	_iCur = *(*int32)(unsafe.Pointer(_pTabItem + 64))
	*(*uint64)(unsafe.Pointer(_pLevel + 80)) = _notReady & (^_1900sqlite3WhereGetMask(tls, _pWInfo+656, _iCur))
	_bRev = int32(((*(*uint64)(unsafe.Pointer(_pWInfo + 88))) >> (uint(_iLevel) % 64)) & uint64(1))
	_omitTable = bool2int((((*(*uint32)(unsafe.Pointer(_pLoop + 40))) & uint32(0x40)) != uint32(0)) && ((int32(*(*uint16)(unsafe.Pointer(_pWInfo + 64))) & int32(0x20)) == int32(0)))
	_addrBrk = set5(&(*(*int32)(unsafe.Pointer(_pLevel + 12))), set5(&(*(*int32)(unsafe.Pointer(_pLevel + 16))), _1541sqlite3VdbeMakeLabel(tls, _v)))
	_addrCont = set5(&(*(*int32)(unsafe.Pointer(_pLevel + 24))), _1541sqlite3VdbeMakeLabel(tls, _v))
	if int32(*(*uint8)(unsafe.Pointer(_pLevel + 44))) <= int32(0) || (int32(*(*uint8)(unsafe.Pointer(_pTabItem + 60)))&int32(0x8)) == int32(0) {
		goto _1
	}

	*(*int32)(unsafe.Pointer(_pLevel)) = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))
	_1240sqlite3VdbeAddOp2(tls, _v, int32(67), int32(0), *(*int32)(unsafe.Pointer(_pLevel)))
_1:
	_j = _iLevel
_2:
	if _j <= int32(0) || (*(*int32)(unsafe.Pointer((_pWInfo + 920) + 88*uintptr(_j)))) != int32(0) {
		goto _4
	}

	_j--
	goto _2

_4:
	_addrHalt = *(*int32)(unsafe.Pointer(((_pWInfo + 920) + 88*uintptr(_j)) + 12))
	if (uint32((*(*uint8)(unsafe.Pointer((_pTabItem + 60) + 1)))>>4) << 31 >> 31) == 0 {
		goto _5
	}

	_regYield = *(*int32)(unsafe.Pointer(_pTabItem + 52))
	_1241sqlite3VdbeAddOp3(tls, _v, int32(15), _regYield, int32(0), *(*int32)(unsafe.Pointer(_pTabItem + 48)))
	*(*int32)(unsafe.Pointer(_pLevel + 52)) = _1240sqlite3VdbeAddOp2(tls, _v, int32(16), _regYield, _addrBrk)
	*(*uint8)(unsafe.Pointer(_pLevel + 45)) = uint8(13)
	goto _6

_5:
	if ((*(*uint32)(unsafe.Pointer(_pLoop + 40))) & uint32(0x400)) == uint32(0) {
		goto _7
	}

	_nConstraint = int32(*(*uint16)(unsafe.Pointer(_pLoop + 44)))
	_1652sqlite3ExprCachePush(tls, _pParse)
	_iReg = _1558sqlite3GetTempRange(tls, _pParse, _nConstraint+int32(2))
	_addrNotFound = *(*int32)(unsafe.Pointer(_pLevel + 12))
	_j = int32(0)
_9:
	if _j >= _nConstraint {
		goto _11
	}

	_iTarget = (_iReg + _j) + int32(2)
	_pTerm = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pLoop + 56))) + 8*uintptr(_j)))
	if _pTerm != 0 {
		goto _12
	}

	goto _10

_12:
	if (int32(*(*uint16)(unsafe.Pointer(_pTerm + 20))) & int32(0x1)) == 0 {
		goto _13
	}

	_1916codeEqualityTerm(tls, _pParse, _pTerm, _pLevel, _j, _bRev, _iTarget)
	_addrNotFound = *(*int32)(unsafe.Pointer(_pLevel + 16))
	goto _14

_13:
	_pRight = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTerm))) + 24))
	_1917codeExprOrVector(tls, _pParse, _pRight, _iTarget, int32(1))
_14:
_10:
	_j++
	goto _9

_11:
	_1240sqlite3VdbeAddOp2(tls, _v, int32(67), *(*int32)(unsafe.Pointer(_pLoop + 24)), _iReg)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(67), _nConstraint, _iReg+int32(1))
	_1475sqlite3VdbeAddOp4(tls, _v, int32(11), _iCur, _addrNotFound, _iReg, *(*uintptr)(unsafe.Pointer(_pLoop + 24 + 8)), func() int32 {
		if (*(*uint8)(unsafe.Pointer(_pLoop + 24 + 4))) != 0 {
			return int32(-7)
		}
		return int32(-1)
	}())
	*(*uint8)(unsafe.Pointer(_pLoop + 24 + 4)) = uint8(0)
	*(*int32)(unsafe.Pointer(_pLevel + 48)) = _iCur
	*(*uint8)(unsafe.Pointer(_pLevel + 45)) = uint8(func() int32 {
		if (*(*uint8)(unsafe.Pointer(_pWInfo + 69))) != 0 {
			return int32(166)
		}
		return int32(61)
	}())
	*(*int32)(unsafe.Pointer(_pLevel + 52)) = _1496sqlite3VdbeCurrentAddr(tls, _v)
	_iIn = *(*int32)(unsafe.Pointer(_pLevel + 56))
	_j = _nConstraint - int32(1)
_15:
	if _j < int32(0) {
		goto _17
	}

	_pTerm = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pLoop + 56))) + 8*uintptr(_j)))
	if _j >= int32(16) || ((int32(*(*uint16)(unsafe.Pointer(_pLoop + 24 + 6)))>>(uint(_j)%32))&int32(1)) == 0 {
		goto _18
	}

	_1918disableTerm(tls, _pLevel, _pTerm)
	goto _19

_18:
	if (int32(*(*uint16)(unsafe.Pointer(_pTerm + 20))) & int32(0x1)) == int32(0) {
		goto _20
	}

	if (*(*uint8)(unsafe.Pointer(_db + 97))) != 0 {
		goto _21
	}

	_pOp = _1615sqlite3VdbeGetOp(tls, _v, *(*int32)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pLevel + 56 + 8))) + 12*uintptr(preinc47(&_iIn))) + 4)))

	_1241sqlite3VdbeAddOp3(tls, _v, int32(*(*uint8)(unsafe.Pointer(_pOp))), *(*int32)(unsafe.Pointer(_pOp + 4)), *(*int32)(unsafe.Pointer(_pOp + 8)), *(*int32)(unsafe.Pointer(_pOp + 12)))
_21:
	_pCompare = _1316sqlite3PExpr(tls, _pParse, int32(53), null, null)

	if _pCompare == 0 {
		goto _22
	}

	*(*uintptr)(unsafe.Pointer(_pCompare + 16)) = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTerm))) + 16))
	*(*uintptr)(unsafe.Pointer(_pCompare + 24)) = set4(&_1pRight, _1334sqlite3Expr(tls, _db, int32(150), null))
	if _1pRight == 0 {
		goto _23
	}

	*(*int32)(unsafe.Pointer(_1pRight + 44)) = (_iReg + _j) + int32(2)
	_1571sqlite3ExprIfFalse(tls, _pParse, _pCompare, *(*int32)(unsafe.Pointer(_pLevel + 24)), int32(0))
_23:
	*(*uintptr)(unsafe.Pointer(_pCompare + 16)) = null
	_777sqlite3ExprDelete(tls, _db, _pCompare)
_22:
_20:
_19:
	_j--
	goto _15

_17:
	_1654sqlite3ExprCachePop(tls, _pParse)
	goto _8

_7:
	if ((*(*uint32)(unsafe.Pointer(_pLoop + 40)))&uint32(0x100)) == uint32(0) || ((*(*uint32)(unsafe.Pointer(_pLoop + 40)))&uint32(5)) == uint32(0) {
		goto _24
	}

	_pTerm = *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pLoop + 56))))

	_iReleaseReg = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))
	_iRowidReg = _1916codeEqualityTerm(tls, _pParse, _pTerm, _pLevel, int32(0), _bRev, _iReleaseReg)
	if _iRowidReg == _iReleaseReg {
		goto _26
	}

	_1563sqlite3ReleaseTempReg(tls, _pParse, _iReleaseReg)
_26:
	_addrNxt = *(*int32)(unsafe.Pointer(_pLevel + 16))
	_1241sqlite3VdbeAddOp3(tls, _v, int32(31), _iCur, _addrNxt, _iRowidReg)
	_1792sqlite3ExprCacheAffinityChange(tls, _pParse, _iRowidReg, int32(1))
	_1816sqlite3ExprCacheStore(tls, _pParse, _iCur, int32(-1), _iRowidReg)
	*(*uint8)(unsafe.Pointer(_pLevel + 45)) = uint8(166)
	goto _25

_24:
	if ((*(*uint32)(unsafe.Pointer(_pLoop + 40)))&uint32(0x100)) == uint32(0) || ((*(*uint32)(unsafe.Pointer(_pLoop + 40)))&uint32(0x2)) == uint32(0) {
		goto _27
	}

	_testOp = int32(166)
	_memEndValue = int32(0)

	_j = int32(0)
	_pStart = set4(&_pEnd, null)
	if ((*(*uint32)(unsafe.Pointer(_pLoop + 40))) & uint32(0x20)) == 0 {
		goto _29
	}

	_pStart = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pLoop + 56))) + 8*uintptr(postinc7(&_j))))
_29:
	if ((*(*uint32)(unsafe.Pointer(_pLoop + 40))) & uint32(0x10)) == 0 {
		goto _30
	}

	_pEnd = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pLoop + 56))) + 8*uintptr(postinc7(&_j))))
_30:
	if _bRev == 0 {
		goto _31
	}

	_pTerm = _pStart
	_pStart = _pEnd
	_pEnd = _pTerm
_31:
	if _pStart == 0 {
		goto _32
	}

	crt.Copy(_aMoveOp, ts+31761, 4)

	_pX = *(*uintptr)(unsafe.Pointer(_pStart))

	if _1803sqlite3ExprIsVector(tls, *(*uintptr)(unsafe.Pointer(_pX + 24))) == 0 {
		goto _34
	}

	_r1 = set5(&(*(*int32)(unsafe.Pointer(_rTemp))), _1562sqlite3GetTempReg(tls, _pParse))
	_1917codeExprOrVector(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pX + 24)), _r1, int32(1))
	_op = int32(*(*uint8)(unsafe.Pointer(_aMoveOp + uintptr((int32(*(*uint8)(unsafe.Pointer(_pX)))-int32(54))|int32(0x1)))))
	goto _35

_34:
	_r1 = _1804sqlite3ExprCodeTemp(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pX + 24)), _rTemp)
	_1918disableTerm(tls, _pLevel, _pStart)
	_op = int32(*(*uint8)(unsafe.Pointer(_aMoveOp + uintptr(int32(*(*uint8)(unsafe.Pointer(_pX)))-int32(54)))))
_35:
	_1241sqlite3VdbeAddOp3(tls, _v, _op, _iCur, _addrBrk, _r1)
	_1792sqlite3ExprCacheAffinityChange(tls, _pParse, _r1, int32(1))
	_1563sqlite3ReleaseTempReg(tls, _pParse, *(*int32)(unsafe.Pointer(_rTemp)))
	goto _33

_32:
	_1240sqlite3VdbeAddOp2(tls, _v, func() int32 {
		if _bRev != 0 {
			return int32(33)
		}
		return int32(37)
	}(), _iCur, _addrHalt)
_33:
	if _pEnd == 0 {
		goto _36
	}

	_2pX = *(*uintptr)(unsafe.Pointer(_pEnd))

	_memEndValue = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))
	_1917codeExprOrVector(tls, _pParse, *(*uintptr)(unsafe.Pointer(_2pX + 24)), _memEndValue, int32(1))
	if int32(0) != _1803sqlite3ExprIsVector(tls, *(*uintptr)(unsafe.Pointer(_2pX + 24))) || int32(*(*uint8)(unsafe.Pointer(_2pX))) != int32(56) && int32(*(*uint8)(unsafe.Pointer(_2pX))) != int32(54) {
		goto _37
	}

	_testOp = func() int32 {
		if _bRev != 0 {
			return int32(55)
		}
		return int32(57)
	}()
	goto _38

_37:
	_testOp = func() int32 {
		if _bRev != 0 {
			return int32(56)
		}
		return int32(54)
	}()
_38:
	if int32(0) != _1803sqlite3ExprIsVector(tls, *(*uintptr)(unsafe.Pointer(_2pX + 24))) {
		goto _39
	}

	_1918disableTerm(tls, _pLevel, _pEnd)
_39:
_36:
	_start = _1496sqlite3VdbeCurrentAddr(tls, _v)
	*(*uint8)(unsafe.Pointer(_pLevel + 45)) = uint8(func() int32 {
		if _bRev != 0 {
			return int32(6)
		}
		return int32(7)
	}())
	*(*int32)(unsafe.Pointer(_pLevel + 48)) = _iCur
	*(*int32)(unsafe.Pointer(_pLevel + 52)) = _start

	if _testOp == int32(166) {
		goto _40
	}

	_iRowidReg = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))
	_1240sqlite3VdbeAddOp2(tls, _v, int32(123), _iCur, _iRowidReg)
	_1816sqlite3ExprCacheStore(tls, _pParse, _iCur, int32(-1), _iRowidReg)
	_1241sqlite3VdbeAddOp3(tls, _v, _testOp, _memEndValue, _addrBrk, _iRowidReg)
	_1072sqlite3VdbeChangeP5(tls, _v, uint16(83))
_40:
	goto _28

_27:
	if ((*(*uint32)(unsafe.Pointer(_pLoop + 40))) & uint32(0x200)) == 0 {
		goto _41
	}

	_nEq = *(*uint16)(unsafe.Pointer(_pLoop + 24))
	_nBtm = *(*uint16)(unsafe.Pointer(_pLoop + 24 + 2))
	_nTop = *(*uint16)(unsafe.Pointer(_pLoop + 24 + 4))
	_pRangeStart = 0
	_pRangeEnd = 0
	_nExtraReg = int32(0)
	_zEndAff = 0
	_bSeekPastNull = uint8(0)
	_bStopAtNull = uint8(0)
	_pIdx = *(*uintptr)(unsafe.Pointer(_pLoop + 24 + 8))
	_iIdxCur = *(*int32)(unsafe.Pointer(_pLevel + 8))

	if (int32(*(*uint16)(unsafe.Pointer(_pWInfo + 64)))&int32(0x1)) == int32(0) || int32(*(*int8)(unsafe.Pointer(_pWInfo + 67))) <= int32(0) || int32(*(*uint16)(unsafe.Pointer(_pIdx + 94))) <= int32(_nEq) {
		goto _43
	}

	_bSeekPastNull = uint8(1)
	_nExtraReg = int32(1)
_43:
	_j = int32(_nEq)
	if ((*(*uint32)(unsafe.Pointer(_pLoop + 40))) & uint32(0x20)) == 0 {
		goto _44
	}

	_pRangeStart = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pLoop + 56))) + 8*uintptr(postinc7(&_j))))
	_nExtraReg = func() int32 {
		if _nExtraReg > int32(*(*uint16)(unsafe.Pointer(_pLoop + 24 + 2))) {
			return _nExtraReg
		}
		return int32(*(*uint16)(unsafe.Pointer(_pLoop + 24 + 2)))
	}()

_44:
	if ((*(*uint32)(unsafe.Pointer(_pLoop + 40))) & uint32(0x10)) == 0 {
		goto _45
	}

	_pRangeEnd = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pLoop + 56))) + 8*uintptr(postinc7(&_j))))
	_nExtraReg = func() int32 {
		if _nExtraReg > int32(*(*uint16)(unsafe.Pointer(_pLoop + 24 + 4))) {
			return _nExtraReg
		}
		return int32(*(*uint16)(unsafe.Pointer(_pLoop + 24 + 4)))
	}()
	if (int32(*(*uint16)(unsafe.Pointer(_pRangeEnd + 18))) & int32(0x100)) == int32(0) {
		goto _46
	}

	*(*uint32)(unsafe.Pointer(_pLevel + 36)) = uint32(preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56)))))
	_1240sqlite3VdbeAddOp2(tls, _v, int32(67), int32(1), int32(*(*uint32)(unsafe.Pointer(_pLevel + 36))))
	*(*int32)(unsafe.Pointer(_pLevel + 40)) = _1496sqlite3VdbeCurrentAddr(tls, _v)

	{
		p := &(*(*uint32)(unsafe.Pointer(_pLevel + 36)))
		*p = uint32(uint32(*p) << uint32(1))
	}
	{
		p := &(*(*uint32)(unsafe.Pointer(_pLevel + 36)))
		*p = uint32(uint32(*p) | uint32(_bRev^bool2int(int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 56))) + uintptr(_nEq)))) == int32(1))))
	}
_46:
	if _pRangeStart != 0 {
		goto _47
	}

	_j = int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 8))) + 2*uintptr(_nEq))))
	if (_j < int32(0) || int32(*(*uint8)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 24))) + 8))) + 32*uintptr(_j)) + 24))) != int32(0)) && _j != int32(-2) {
		goto _48
	}

	_bSeekPastNull = uint8(1)
_48:
_47:
_45:
	if (int32(_nEq) >= int32(*(*uint16)(unsafe.Pointer(_pIdx + 94))) || _bRev != bool2int(int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 56))) + uintptr(_nEq)))) == int32(0))) && (_bRev == 0 || int32(*(*uint16)(unsafe.Pointer(_pIdx + 94))) != int32(_nEq)) {
		goto _49
	}

	_t = _pRangeEnd
	_pRangeEnd = _pRangeStart
	_pRangeStart = _t
	_5t = _bSeekPastNull
	_bSeekPastNull = _bStopAtNull
	_bStopAtNull = _5t
	_6t = uint8(_nBtm)
	_nBtm = _nTop
	_nTop = uint16(_6t)
_49:
	_regBase = _1919codeAllEqualityTerms(tls, _pParse, _pLevel, _bRev, _nExtraReg, _zStartAff)

	if (*(*uintptr)(unsafe.Pointer(_zStartAff))) == 0 || _nTop == 0 {
		goto _50
	}

	_zEndAff = _183sqlite3DbStrDup(tls, _db, (*(*uintptr)(unsafe.Pointer(_zStartAff)))+uintptr(_nEq))
_50:
	_addrNxt = *(*int32)(unsafe.Pointer(_pLevel + 16))
	_startEq = bool2int((_pRangeStart == 0) || ((int32(*(*uint16)(unsafe.Pointer(_pRangeStart + 20))) & int32(40)) != 0))
	_endEq = bool2int((_pRangeEnd == 0) || ((int32(*(*uint16)(unsafe.Pointer(_pRangeEnd + 20))) & int32(40)) != 0))
	_start_constraints = bool2int((_pRangeStart != 0) || (int32(_nEq) > int32(0)))
	_3nConstraint = int32(_nEq)
	if _pRangeStart == 0 {
		goto _51
	}

	_7pRight = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pRangeStart))) + 24))
	_1917codeExprOrVector(tls, _pParse, _7pRight, _regBase+int32(_nEq), int32(_nBtm))
	_1920whereLikeOptimizationStringFixup(tls, _v, _pLevel, _pRangeStart)
	if 1 == 0 || _1921sqlite3ExprCanBeNull(tls, _7pRight) == 0 {
		goto _53
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(50), _regBase+int32(_nEq), _addrNxt)
_53:
	if (*(*uintptr)(unsafe.Pointer(_zStartAff))) == 0 {
		goto _54
	}

	_1922updateRangeAffinityStr(tls, _7pRight, int32(_nBtm), (*(*uintptr)(unsafe.Pointer(_zStartAff)))+uintptr(_nEq))
_54:
	_3nConstraint = int32(_3nConstraint + int32(_nBtm))
	if _1803sqlite3ExprIsVector(tls, _7pRight) != int32(0) {
		goto _55
	}

	_1918disableTerm(tls, _pLevel, _pRangeStart)
	goto _56

_55:
	_startEq = int32(1)
_56:
	_bSeekPastNull = uint8(0)
	goto _52

_51:
	if _bSeekPastNull == 0 {
		goto _57
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(70), int32(0), _regBase+int32(_nEq))
	_3nConstraint++
	_startEq = int32(0)
	_start_constraints = int32(1)
_57:
_52:
	_1923codeApplyAffinity(tls, _pParse, _regBase, _3nConstraint-int32(_bSeekPastNull), *(*uintptr)(unsafe.Pointer(_zStartAff)))
	if int32(*(*uint16)(unsafe.Pointer(_pLoop + 46))) <= int32(0) || _3nConstraint != int32(*(*uint16)(unsafe.Pointer(_pLoop + 46))) {
		goto _58
	}

	goto _59

_58:
	_4op = int32(*(*uint8)(unsafe.Pointer(_1912aStartOp + uintptr(((_start_constraints<<(uint(2)%32))+(_startEq<<(uint(1)%32)))+_bRev))))

	_1071sqlite3VdbeAddOp4Int(tls, _v, _4op, _iIdxCur, _addrNxt, _regBase, _3nConstraint)
_59:
	_3nConstraint = int32(_nEq)
	if _pRangeEnd == 0 {
		goto _60
	}

	_8pRight = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pRangeEnd))) + 24))
	_1801sqlite3ExprCacheRemove(tls, _pParse, _regBase+int32(_nEq), int32(1))
	_1917codeExprOrVector(tls, _pParse, _8pRight, _regBase+int32(_nEq), int32(_nTop))
	_1920whereLikeOptimizationStringFixup(tls, _v, _pLevel, _pRangeEnd)
	if 1 == 0 || _1921sqlite3ExprCanBeNull(tls, _8pRight) == 0 {
		goto _62
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(50), _regBase+int32(_nEq), _addrNxt)
_62:
	if _zEndAff == 0 {
		goto _63
	}

	_1922updateRangeAffinityStr(tls, _8pRight, int32(_nTop), _zEndAff)
	_1923codeApplyAffinity(tls, _pParse, _regBase+int32(_nEq), int32(_nTop), _zEndAff)
	goto _64

_63:
_64:
	_3nConstraint = int32(_3nConstraint + int32(_nTop))
	if _1803sqlite3ExprIsVector(tls, _8pRight) != int32(0) {
		goto _65
	}

	_1918disableTerm(tls, _pLevel, _pRangeEnd)
	goto _66

_65:
	_endEq = int32(1)
_66:
	goto _61

_60:
	if _bStopAtNull == 0 {
		goto _67
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(70), int32(0), _regBase+int32(_nEq))
	_endEq = int32(0)
	_3nConstraint++
_67:
_61:
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_zStartAff)))
	_181sqlite3DbFree(tls, _db, _zEndAff)
	*(*int32)(unsafe.Pointer(_pLevel + 52)) = _1496sqlite3VdbeCurrentAddr(tls, _v)
	if _3nConstraint == 0 {
		goto _68
	}

	_4op = int32(*(*uint8)(unsafe.Pointer(_1913aEndOp + uintptr((_bRev*int32(2))+_endEq))))
	_1071sqlite3VdbeAddOp4Int(tls, _v, _4op, _iIdxCur, _addrNxt, _regBase, _3nConstraint)
_68:
	if _omitTable == 0 {
		goto _69
	}

	goto _70

_69:
	if ((*(*uint32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pIdx + 24)) + 64))) & uint32(0x20)) != uint32(0) {
		goto _71
	}

	if int32(*(*uint16)(unsafe.Pointer(_pWInfo + 64)))&int32(0x400) == 0 && (int32(*(*uint16)(unsafe.Pointer(_pWInfo + 64)))&int32(0x1000) == 0 || int32(*(*uint8)(unsafe.Pointer(_pWInfo + 69))) != int32(1)) {
		goto _73
	}

	_iRowidReg = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))
	_1240sqlite3VdbeAddOp2(tls, _v, int32(130), _iIdxCur, _iRowidReg)
	_1816sqlite3ExprCacheStore(tls, _pParse, _iCur, int32(-1), _iRowidReg)
	_1241sqlite3VdbeAddOp3(tls, _v, int32(32), _iCur, int32(0), _iRowidReg)
	goto _74

_73:
	_1924codeDeferredSeek(tls, _pWInfo, _pIdx, _iCur, _iIdxCur)
_74:
	goto _72

_71:
	if _iCur == _iIdxCur {
		goto _75
	}

	_pPk = _1060sqlite3PrimaryKeyIndex(tls, *(*uintptr)(unsafe.Pointer(_pIdx + 24)))
	_iRowidReg = _1558sqlite3GetTempRange(tls, _pParse, int32(*(*uint16)(unsafe.Pointer(_pPk + 94))))
	_j = int32(0)
_76:
	if _j >= int32(*(*uint16)(unsafe.Pointer(_pPk + 94))) {
		goto _78
	}

	_k = int32(_1521sqlite3ColumnOfIndex(tls, _pIdx, *(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPk + 8))) + 2*uintptr(_j)))))
	_1241sqlite3VdbeAddOp3(tls, _v, int32(96), _iIdxCur, _k, _iRowidReg+_j)
	_j++
	goto _76

_78:
	_1071sqlite3VdbeAddOp4Int(tls, _v, int32(29), _iCur, _addrCont, _iRowidReg, int32(*(*uint16)(unsafe.Pointer(_pPk + 94))))
_75:
_72:
_70:
	_1925whereIndexExprTrans(tls, _pIdx, _iCur, _iIdxCur, _pWInfo)
	if ((*(*uint32)(unsafe.Pointer(_pLoop + 40))) & uint32(0x1000)) == 0 {
		goto _79
	}

	*(*uint8)(unsafe.Pointer(_pLevel + 45)) = uint8(166)
	goto _80

_79:
	if _bRev == 0 {
		goto _81
	}

	*(*uint8)(unsafe.Pointer(_pLevel + 45)) = uint8(6)
	goto _82

_81:
	*(*uint8)(unsafe.Pointer(_pLevel + 45)) = uint8(7)
_82:
_80:
	*(*int32)(unsafe.Pointer(_pLevel + 48)) = _iIdxCur
	*(*uint8)(unsafe.Pointer(_pLevel + 46)) = uint8(func() int32 {
		if ((*(*uint32)(unsafe.Pointer(_pLoop + 40))) & uint32(0x10000)) != uint32(0) {
			return int32(1)
		}
		return int32(0)
	}())
	if ((*(*uint32)(unsafe.Pointer(_pLoop + 40))) & uint32(0xf)) != uint32(0) {
		goto _83
	}

	*(*uint8)(unsafe.Pointer(_pLevel + 47)) = uint8(1)
	goto _84

_83:
_84:
	if _omitTable == 0 {
		goto _85
	}

	_pIdx = null
_85:
	goto _42

_41:
	if ((*(*uint32)(unsafe.Pointer(_pLoop + 40))) & uint32(0x2000)) == 0 {
		goto _86
	}

	_pCov = 0
	_iCovCur = postinc7(&(*(*int32)(unsafe.Pointer(_pParse + 52))))
	_regReturn = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))
	_regRowset = int32(0)
	_regRowid = int32(0)
	_iLoopBody = _1541sqlite3VdbeMakeLabel(tls, _v)
	_untestedTerms = int32(0)
	_pAndExpr = 0
	_pTab = *(*uintptr)(unsafe.Pointer(_pTabItem + 32))
	_pTerm = *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pLoop + 56))))

	_pOrWc = *(*uintptr)(unsafe.Pointer(_pTerm + 40))
	*(*uint8)(unsafe.Pointer(_pLevel + 45)) = uint8(63)
	*(*int32)(unsafe.Pointer(_pLevel + 48)) = _regReturn
	if int32(*(*uint8)(unsafe.Pointer(_pWInfo + 66))) <= int32(1) {
		goto _88
	}

	_nNotReady = (int32(*(*uint8)(unsafe.Pointer(_pWInfo + 66))) - _iLevel) - int32(1)
	_pOrTab = _177sqlite3DbMallocRaw(tls, _db, uint64(uint64(120)+(uint64(_nNotReady)*uint64(112))))
	if _pOrTab != 0 {
		goto _90
	}

	return _notReady

_90:
	*(*uint32)(unsafe.Pointer(_pOrTab + 4)) = uint32(uint8(_nNotReady + int32(1)))
	*(*int32)(unsafe.Pointer(_pOrTab)) = int32(*(*uint32)(unsafe.Pointer(_pOrTab + 4)))
	crt.Xmemcpy(tls, _pOrTab+8, _pTabItem, uint64(112))
	_origSrc = (*(*uintptr)(unsafe.Pointer(_pWInfo + 8))) + 8
	_k = int32(1)
_91:
	if _k > _nNotReady {
		goto _93
	}

	crt.Xmemcpy(tls, (_pOrTab+8)+112*uintptr(_k), _origSrc+112*uintptr(*(*uint8)(unsafe.Pointer((_pLevel + 88*uintptr(_k)) + 44))), uint64(112))
	_k++
	goto _91

_93:
	goto _89

_88:
	_pOrTab = *(*uintptr)(unsafe.Pointer(_pWInfo + 8))
_89:
	if (int32(*(*uint16)(unsafe.Pointer(_pWInfo + 64))) & int32(0x10)) != int32(0) {
		goto _94
	}

	if ((*(*uint32)(unsafe.Pointer(_pTab + 64))) & uint32(0x20)) != uint32(0) {
		goto _95
	}

	_regRowset = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))
	_1240sqlite3VdbeAddOp2(tls, _v, int32(70), int32(0), _regRowset)
	goto _96

_95:
	_9pPk = _1060sqlite3PrimaryKeyIndex(tls, _pTab)
	_regRowset = postinc7(&(*(*int32)(unsafe.Pointer(_pParse + 52))))
	_1240sqlite3VdbeAddOp2(tls, _v, int32(108), _regRowset, int32(*(*uint16)(unsafe.Pointer(_9pPk + 94))))
	_1589sqlite3VdbeSetP4KeyInfo(tls, _pParse, _9pPk)
_96:
	_regRowid = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))
_94:
	_iRetInit = _1240sqlite3VdbeAddOp2(tls, _v, int32(67), int32(0), _regReturn)
	if (*(*int32)(unsafe.Pointer(_pWC + 20))) <= int32(1) {
		goto _97
	}

	_iTerm = int32(0)
_98:
	if _iTerm >= (*(*int32)(unsafe.Pointer(_pWC + 20))) {
		goto _100
	}

	_pExpr = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pWC + 32))) + 64*uintptr(_iTerm)))
	if (*(*uintptr)(unsafe.Pointer(_pWC + 32)))+64*uintptr(_iTerm) != _pTerm {
		goto _101
	}

	goto _99

_101:
	if ((*(*uint32)(unsafe.Pointer(_pExpr + 4))) & uint32(0x1)) == uint32(0) {
		goto _102
	}

	goto _99

_102:
	if (int32(*(*uint16)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pWC + 32))) + 64*uintptr(_iTerm)) + 18))) & int32(6)) == int32(0) {
		goto _103
	}

	goto _99

_103:
	if (int32(*(*uint16)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pWC + 32))) + 64*uintptr(_iTerm)) + 20))) & int32(0x1fff)) != int32(0) {
		goto _104
	}

	goto _99

_104:
	_pExpr = _1507sqlite3ExprDup(tls, _db, _pExpr, int32(0))
	_pAndExpr = _1508sqlite3ExprAnd(tls, _db, _pAndExpr, _pExpr)

_99:
	_iTerm++
	goto _98

_100:
	if _pAndExpr == 0 {
		goto _105
	}

	_pAndExpr = _1316sqlite3PExpr(tls, _pParse, int32(300), null, _pAndExpr)
_105:
_97:
	_wctrlFlags = uint16(int32(0x20) | (int32(*(*uint16)(unsafe.Pointer(_pWInfo + 64))) & int32(0x400)))
	_ii = int32(0)
_106:
	if _ii >= (*(*int32)(unsafe.Pointer(_pOrWc + 20))) {
		goto _108
	}

	_pOrTerm = (*(*uintptr)(unsafe.Pointer(_pOrWc + 32))) + 64*uintptr(_ii)
	if (*(*int32)(unsafe.Pointer(_pOrTerm + 28))) != _iCur && (int32(*(*uint16)(unsafe.Pointer(_pOrTerm + 20)))&int32(0x400)) == int32(0) {
		goto _109
	}

	_pOrExpr = *(*uintptr)(unsafe.Pointer(_pOrTerm))
	_jmp1 = int32(0)
	if _pAndExpr == 0 || ((*(*uint32)(unsafe.Pointer(_pOrExpr + 4)))&uint32(0x1)) != uint32(0) {
		goto _110
	}

	*(*uintptr)(unsafe.Pointer(_pAndExpr + 16)) = _pOrExpr
	_pOrExpr = _pAndExpr
_110:
	_pSubWInfo = _1544sqlite3WhereBegin(tls, _pParse, _pOrTab, _pOrExpr, null, null, _wctrlFlags, _iCovCur)

	if _pSubWInfo == 0 {
		goto _111
	}

	_addrExplain = _1785sqlite3WhereExplainOneScan(tls, _pParse, _pOrTab, _pSubWInfo+920, _iLevel, int32(*(*uint8)(unsafe.Pointer(_pLevel + 44))), uint16(0))

	if (int32(*(*uint16)(unsafe.Pointer(_pWInfo + 64))) & int32(0x10)) != int32(0) {
		goto _112
	}

	_iSet = func() int32 {
		if _ii == ((*(*int32)(unsafe.Pointer(_pOrWc + 20))) - int32(1)) {
			return int32(-1)
		}
		return _ii
	}()
	if ((*(*uint32)(unsafe.Pointer(_pTab + 64))) & uint32(0x20)) != uint32(0) {
		goto _113
	}

	_r = _1592sqlite3ExprCodeGetColumn(tls, _pParse, _pTab, int32(-1), _iCur, _regRowid, uint8(0))
	_jmp1 = _1071sqlite3VdbeAddOp4Int(tls, _v, int32(45), _regRowset, int32(0), _r, _iSet)
	goto _114

_113:
	_10pPk = _1060sqlite3PrimaryKeyIndex(tls, _pTab)
	_nPk = int32(*(*uint16)(unsafe.Pointer(_10pPk + 94)))
	_r = _1558sqlite3GetTempRange(tls, _pParse, _nPk)
	_iPk = int32(0)
_115:
	if _iPk >= _nPk {
		goto _117
	}

	_iCol = int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_10pPk + 8))) + 2*uintptr(_iPk))))
	_1561sqlite3ExprCodeGetColumnToReg(tls, _pParse, _pTab, _iCol, _iCur, _r+_iPk)
	_iPk++
	goto _115

_117:
	if _iSet == 0 {
		goto _118
	}

	_jmp1 = _1071sqlite3VdbeAddOp4Int(tls, _v, int32(30), _regRowset, int32(0), _r, _nPk)
_118:
	if _iSet < int32(0) {
		goto _119
	}

	_1241sqlite3VdbeAddOp3(tls, _v, int32(99), _r, _nPk, _regRowid)
	_1071sqlite3VdbeAddOp4Int(tls, _v, int32(127), _regRowset, _regRowid, _r, _nPk)
	if _iSet == 0 {
		goto _120
	}

	_1072sqlite3VdbeChangeP5(tls, _v, uint16(0x10))
_120:
_119:
	_1564sqlite3ReleaseTempRange(tls, _pParse, _r, _nPk)
_114:
_112:
	_1240sqlite3VdbeAddOp2(tls, _v, int32(14), _regReturn, _iLoopBody)
	if _jmp1 == 0 {
		goto _121
	}

	_1474sqlite3VdbeJumpHere(tls, _v, _jmp1)
_121:
	if (*(*uint8)(unsafe.Pointer(_pSubWInfo + 70))) == 0 {
		goto _122
	}

	_untestedTerms = int32(1)
_122:
	_pSubLoop = *(*uintptr)(unsafe.Pointer(_pSubWInfo + 920 + 72))

	if ((*(*uint32)(unsafe.Pointer(_pSubLoop + 40)))&uint32(0x200)) == uint32(0) || _ii != int32(0) && (*(*uintptr)(unsafe.Pointer(_pSubLoop + 24 + 8))) != _pCov || ((*(*uint32)(unsafe.Pointer(_pTab + 64)))&uint32(0x20)) != uint32(0) && int32(uint32(*(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pSubLoop + 24 + 8)) + 99)))<<30>>30) == int32(2) {
		goto _123
	}

	_pCov = *(*uintptr)(unsafe.Pointer(_pSubLoop + 24 + 8))
	goto _124

_123:
	_pCov = null
_124:
	_1553sqlite3WhereEnd(tls, _pSubWInfo)
_111:
_109:
	_ii++
	goto _106

_108:
	*(*uintptr)(unsafe.Pointer(_pLevel + 56)) = _pCov
	if _pCov == 0 {
		goto _125
	}

	*(*int32)(unsafe.Pointer(_pLevel + 8)) = _iCovCur
_125:
	if _pAndExpr == 0 {
		goto _126
	}

	*(*uintptr)(unsafe.Pointer(_pAndExpr + 16)) = null
	_777sqlite3ExprDelete(tls, _db, _pAndExpr)
_126:
	_1538sqlite3VdbeChangeP1(tls, _v, uint32(_iRetInit), _1496sqlite3VdbeCurrentAddr(tls, _v))
	_1479sqlite3VdbeGoto(tls, _v, *(*int32)(unsafe.Pointer(_pLevel + 12)))
	_1569sqlite3VdbeResolveLabel(tls, _v, _iLoopBody)
	if int32(*(*uint8)(unsafe.Pointer(_pWInfo + 66))) <= int32(1) {
		goto _127
	}

	_181sqlite3DbFree(tls, _db, _pOrTab)
_127:
	if _untestedTerms != 0 {
		goto _128
	}

	_1918disableTerm(tls, _pLevel, _pTerm)
_128:
	goto _87

_86:
	if (uint32((*(*uint8)(unsafe.Pointer((_pTabItem + 60) + 1)))>>5) << 31 >> 31) == 0 {
		goto _129
	}

	*(*uint8)(unsafe.Pointer(_pLevel + 45)) = uint8(166)
	goto _130

_129:
	*(*uint8)(unsafe.Pointer(_pLevel + 45)) = *(*uint8)(unsafe.Pointer(_1914aStep + uintptr(_bRev)))
	*(*int32)(unsafe.Pointer(_pLevel + 48)) = _iCur
	*(*int32)(unsafe.Pointer(_pLevel + 52)) = int32(1) + _1240sqlite3VdbeAddOp2(tls, _v, int32(*(*uint8)(unsafe.Pointer(_1915aStart + uintptr(_bRev)))), _iCur, _addrHalt)
	*(*uint8)(unsafe.Pointer(_pLevel + 47)) = uint8(1)
_130:
_87:
_42:
_28:
_25:
_8:
_6:
	_iLoop = func() int32 {
		if _pIdx != 0 {
			return int32(1)
		}
		return int32(2)
	}()
_131:
	_iNext = int32(0)
	_pTerm = *(*uintptr)(unsafe.Pointer(_pWC + 32))
	_j = *(*int32)(unsafe.Pointer(_pWC + 20))
_134:
	if _j <= int32(0) {
		goto _136
	}

	_skipLikeAddr = int32(0)
	if (int32(*(*uint16)(unsafe.Pointer(_pTerm + 18))) & int32(6)) == 0 {
		goto _137
	}

	goto _135

_137:
	if ((*(*uint64)(unsafe.Pointer(_pTerm + 56))) & (*(*uint64)(unsafe.Pointer(_pLevel + 80)))) == uint64(0) {
		goto _138
	}

	*(*uint8)(unsafe.Pointer(_pWInfo + 70)) = uint8(1)
	goto _135

_138:
	_pE = *(*uintptr)(unsafe.Pointer(_pTerm))

	if (*(*int32)(unsafe.Pointer(_pLevel))) == 0 || ((*(*uint32)(unsafe.Pointer(_pE + 4)))&uint32(0x1)) != uint32(0) {
		goto _139
	}

	goto _135

_139:
	if _iLoop != int32(1) || _1926sqlite3ExprCoveredByIndex(tls, _pE, *(*int32)(unsafe.Pointer(_pLevel + 4)), _pIdx) != 0 {
		goto _140
	}

	_iNext = int32(2)
	goto _135

_140:
	if _iLoop >= int32(3) || int32(*(*uint16)(unsafe.Pointer(_pTerm + 18)))&int32(0x1000) == 0 {
		goto _141
	}

	if _iNext != int32(0) {
		goto _142
	}

	_iNext = int32(3)
_142:
	goto _135

_141:
	if (int32(*(*uint16)(unsafe.Pointer(_pTerm + 18))) & int32(0x200)) == 0 {
		goto _143
	}

	_x = *(*uint32)(unsafe.Pointer(_pLevel + 36))

	_skipLikeAddr = _1489sqlite3VdbeAddOp1(tls, _v, func() int32 {
		if _x&uint32(1) != 0 {
			return int32(22)
		}
		return int32(21)
	}(), int32(_x>>(uint(1)%32)))
_143:
	_1571sqlite3ExprIfFalse(tls, _pParse, _pE, _addrCont, int32(0x10))
	if _skipLikeAddr == 0 {
		goto _144
	}

	_1474sqlite3VdbeJumpHere(tls, _v, _skipLikeAddr)
_144:
	{
		p := &(*(*uint16)(unsafe.Pointer(_pTerm + 18)))
		*p = uint16(int32(*p) | int32(0x4))
	}

_135:
	_j--
	_pTerm += 64
	goto _134

_136:
	_iLoop = _iNext
	if _iLoop > int32(0) {
		goto _131
	}

	_pTerm = *(*uintptr)(unsafe.Pointer(_pWC + 32))
	_j = *(*int32)(unsafe.Pointer(_pWC + 20))
_145:
	if _j <= int32(0) {
		goto _147
	}

	if (int32(*(*uint16)(unsafe.Pointer(_pTerm + 18))) & int32(6)) == 0 {
		goto _148
	}

	goto _146

_148:
	if (int32(*(*uint16)(unsafe.Pointer(_pTerm + 20))) & int32(130)) != int32(0) {
		goto _149
	}

	goto _146

_149:
	if (int32(*(*uint16)(unsafe.Pointer(_pTerm + 20))) & int32(0x800)) != int32(0) {
		goto _150
	}

	goto _146

_150:
	if (*(*int32)(unsafe.Pointer(_pTerm + 28))) == _iCur {
		goto _151
	}

	goto _146

_151:
	if (*(*int32)(unsafe.Pointer(_pLevel))) == 0 {
		goto _152
	}

	goto _146

_152:
	_11pE = *(*uintptr)(unsafe.Pointer(_pTerm))

	_pAlt = _1896sqlite3WhereFindTerm(tls, _pWC, _iCur, *(*int32)(unsafe.Pointer(_pTerm + 40)), _notReady, uint32(131), null)
	if _pAlt != 0 {
		goto _153
	}

	goto _146

_153:
	if (int32(*(*uint16)(unsafe.Pointer(_pAlt + 18))) & int32(0x4)) == 0 {
		goto _154
	}

	goto _146

_154:
	*(*SExpr)(unsafe.Pointer(_sEAlt)) = *(*SExpr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pAlt))))
	*(*uintptr)(unsafe.Pointer(_sEAlt + 16)) = *(*uintptr)(unsafe.Pointer(_11pE + 16))
	_1571sqlite3ExprIfFalse(tls, _pParse, _sEAlt, _addrCont, int32(0x10))

_146:
	_j--
	_pTerm += 64
	goto _145

_147:
	if (*(*int32)(unsafe.Pointer(_pLevel))) == 0 {
		goto _155
	}

	*(*int32)(unsafe.Pointer(_pLevel + 28)) = _1496sqlite3VdbeCurrentAddr(tls, _v)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(67), int32(1), *(*int32)(unsafe.Pointer(_pLevel)))
	_1559sqlite3ExprCacheClear(tls, _pParse)
	_pTerm = *(*uintptr)(unsafe.Pointer(_pWC + 32))
	_j = int32(0)
_156:
	if _j >= (*(*int32)(unsafe.Pointer(_pWC + 20))) {
		goto _158
	}

	if (int32(*(*uint16)(unsafe.Pointer(_pTerm + 18))) & int32(6)) == 0 {
		goto _159
	}

	goto _157

_159:
	if ((*(*uint64)(unsafe.Pointer(_pTerm + 56))) & (*(*uint64)(unsafe.Pointer(_pLevel + 80)))) == uint64(0) {
		goto _160
	}

	goto _157

_160:
	_1571sqlite3ExprIfFalse(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pTerm)), _addrCont, int32(0x10))
	{
		p := &(*(*uint16)(unsafe.Pointer(_pTerm + 18)))
		*p = uint16(int32(*p) | int32(0x4))
	}

_157:
	_j++
	_pTerm += 64
	goto _156

_158:
_155:
	return *(*uint64)(unsafe.Pointer(_pLevel + 80))
}

// _1787whereInfoFree is defined at sqlite3.c:133673:13
func _1787whereInfoFree(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pWInfo uintptr /* *TWhereInfo = SWhereInfo */) {
	var (
		_i      int32
		_pLevel uintptr // *TWhereLevel = SWhereLevel
		_p      uintptr // *TWhereLoop = SWhereLoop
	)
	if _pWInfo == 0 {
		goto _1
	}

	_i = int32(0)
_2:
	if _i >= int32(*(*uint8)(unsafe.Pointer(_pWInfo + 66))) {
		goto _4
	}

	_pLevel = (_pWInfo + 920) + 88*uintptr(_i)
	if (*(*uintptr)(unsafe.Pointer(_pLevel + 72))) == 0 || (*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pLevel + 72))) + 40)))&uint32(0x800) == 0 {
		goto _5
	}

	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_pLevel + 56 + 8)))
_5:
	_i++
	goto _2

_4:
	_1927sqlite3WhereClauseClear(tls, _pWInfo+104)
_6:
	if (*(*uintptr)(unsafe.Pointer(_pWInfo + 80))) == 0 {
		goto _7
	}

	_p = *(*uintptr)(unsafe.Pointer(_pWInfo + 80))
	*(*uintptr)(unsafe.Pointer(_pWInfo + 80)) = *(*uintptr)(unsafe.Pointer(_p + 64))
	_1928whereLoopDelete(tls, _db, _p)
	goto _6

_7:
	_376sqlite3DbFreeNN(tls, _db, _pWInfo)
_1:
}

// _1788codeOffset is defined at sqlite3.c:118312:13
func _1788codeOffset(tls crt.TLS, _v uintptr /* *TVdbe = SVdbe */, _iOffset int32, _iContinue int32) {
	if _iOffset <= int32(0) {
		goto _1
	}

	_1241sqlite3VdbeAddOp3(tls, _v, int32(48), _iOffset, _iContinue, int32(1))
_1:
}

// _1789sqlite3ExprCollSeq is defined at sqlite3.c:91938:24
func _1789sqlite3ExprCollSeq(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pExpr uintptr /* *TExpr = SExpr */) (r uintptr /* *TCollSeq = SCollSeq */) {
	var (
		_db    uintptr // *Tsqlite3 = Ssqlite3
		_pColl uintptr // *TCollSeq = SCollSeq
		_p     uintptr // *TExpr = SExpr
		_op    int32
		_j     int32
		_zColl uintptr // *int8
		_pNext uintptr // *TExpr = SExpr
		_i     int32
	)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_pColl = 0
	_p = _pExpr
_1:
	if _p == 0 {
		goto _2
	}

	_op = int32(*(*uint8)(unsafe.Pointer(_p)))
	if ((*(*uint32)(unsafe.Pointer(_p + 4))) & uint32(0x200)) == 0 {
		goto _3
	}

	goto _2

_3:
	if _op != int32(36) && _op != int32(149) {
		goto _4
	}

	_p = *(*uintptr)(unsafe.Pointer(_p + 16))
	goto _1

_4:
	if _op != int32(94) && (_op != int32(150) || int32(*(*uint8)(unsafe.Pointer(_p + 54))) != int32(94)) {
		goto _5
	}

	_pColl = _1740sqlite3GetCollSeq(tls, _pParse, *(*uint8)(unsafe.Pointer(_db + 94)), null, *(*uintptr)(unsafe.Pointer(_p + 8)))
	goto _2

_5:
	if _op != int32(147) && _op != int32(145) && _op != int32(150) && _op != int32(75) || (*(*uintptr)(unsafe.Pointer(_p + 64))) == 0 {
		goto _6
	}

	_j = int32(*(*int16)(unsafe.Pointer(_p + 48)))
	if _j < int32(0) {
		goto _7
	}

	_zColl = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 64))) + 8))) + 32*uintptr(_j)) + 16))
	_pColl = _280sqlite3FindCollSeq(tls, _db, *(*uint8)(unsafe.Pointer(_db + 94)), _zColl, int32(0))
_7:
	goto _2

_6:
	if ((*(*uint32)(unsafe.Pointer(_p + 4))) & uint32(0x100)) == 0 {
		goto _8
	}

	if (*(*uintptr)(unsafe.Pointer(_p + 16))) == 0 || ((*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 16))) + 4)))&uint32(0x100)) == uint32(0) {
		goto _10
	}

	_p = *(*uintptr)(unsafe.Pointer(_p + 16))
	goto _11

_10:
	_pNext = *(*uintptr)(unsafe.Pointer(_p + 24))

	if (*(*uintptr)(unsafe.Pointer(_p + 32))) == 0 || ((*(*uint32)(unsafe.Pointer(_p + 4)))&uint32(0x800)) != uint32(0) {
		goto _12
	}

	_i = int32(0)
_13:
	if _i >= (*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_p + 32))))) {
		goto _15
	}

	if ((*(*uint32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_p + 32))) + 8) + 32*uintptr(_i))) + 4))) & uint32(0x100)) == uint32(0) {
		goto _16
	}

	_pNext = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_p + 32))) + 8) + 32*uintptr(_i)))
	goto _15

_16:
	_i++
	goto _13

_15:
_12:
	_p = _pNext
_11:
	goto _9

_8:
	goto _2

_9:
	goto _1

_2:
	if _1929sqlite3CheckCollSeq(tls, _pParse, _pColl) == 0 {
		goto _17
	}

	_pColl = null
_17:
	return _pColl
}

// _1790codeDistinct is defined at sqlite3.c:118332:13
func _1790codeDistinct(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _iTab int32, _addrRepeat int32, _N int32, _iMem int32) {
	var (
		_v  uintptr // *TVdbe = SVdbe
		_r1 int32
	)
	_v = *(*uintptr)(unsafe.Pointer(_pParse + 16))
	_r1 = _1562sqlite3GetTempReg(tls, _pParse)
	_1071sqlite3VdbeAddOp4Int(tls, _v, int32(30), _iTab, _addrRepeat, _iMem, _N)
	_1241sqlite3VdbeAddOp3(tls, _v, int32(99), _iMem, _N, _r1)
	_1071sqlite3VdbeAddOp4Int(tls, _v, int32(127), _iTab, _r1, _iMem, _N)
	_1072sqlite3VdbeChangeP5(tls, _v, uint16(0x10))
	_1563sqlite3ReleaseTempReg(tls, _pParse, _r1)
}

// _1791pushOntoSorter is defined at sqlite3.c:118191:13
func _1791pushOntoSorter(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pSort uintptr /* *TSortCtx = SSortCtx */, _pSelect uintptr /* *TSelect = SSelect */, _regData int32, _regOrigData int32, _nData int32, _nPrefixReg int32) {
	var (
		_v          uintptr // *TVdbe = SVdbe
		_bSeq       int32
		_nExpr      int32
		_nBase      int32
		_regBase    int32
		_regRecord  int32
		_nOBSat     int32
		_op         int32
		_iLimit     int32
		_regPrevKey int32
		_addrFirst  int32
		_addrJmp    int32
		_pOp        uintptr // *TVdbeOp = SVdbeOp
		_nKey       int32
		_pKI        uintptr // *TKeyInfo = SKeyInfo
		_addr       int32
		_r1         int32
		_iBrk       int32
	)
	_v = *(*uintptr)(unsafe.Pointer(_pParse + 16))
	_bSeq = bool2int((int32(*(*uint8)(unsafe.Pointer(_pSort + 32))) & int32(0x1)) == int32(0))
	_nExpr = *(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pSort))))
	_nBase = (_nExpr + _bSeq) + _nData
	_regRecord = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))
	_nOBSat = *(*int32)(unsafe.Pointer(_pSort + 8))

	if _nPrefixReg == 0 {
		goto _1
	}

	_regBase = (_regData - _nExpr) - _bSeq
	goto _2

_1:
	_regBase = (*(*int32)(unsafe.Pointer(_pParse + 56))) + int32(1)
	{
		p := &(*(*int32)(unsafe.Pointer(_pParse + 56)))
		*p = int32(int32(*p) + _nBase)
	}
_2:
	_iLimit = func() int32 {
		if (*(*int32)(unsafe.Pointer(_pSelect + 20))) != 0 {
			return (*(*int32)(unsafe.Pointer(_pSelect + 20))) + int32(1)
		}
		return *(*int32)(unsafe.Pointer(_pSelect + 16))
	}()
	*(*int32)(unsafe.Pointer(_pSort + 28)) = _1541sqlite3VdbeMakeLabel(tls, _v)
	_1560sqlite3ExprCodeExprList(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pSort)), _regBase, _regOrigData, uint8(int32(0x1)|func() int32 {
		if _regOrigData != 0 {
			return int32(0x4)
		}
		return int32(0)
	}()))
	if _bSeq == 0 {
		goto _3
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(114), *(*int32)(unsafe.Pointer(_pSort + 12)), _regBase+_nExpr)
_3:
	if _nPrefixReg != int32(0) || _nData <= int32(0) {
		goto _4
	}

	_1567sqlite3ExprCodeMove(tls, _pParse, _regData, (_regBase+_nExpr)+_bSeq, _nData)
_4:
	_1241sqlite3VdbeAddOp3(tls, _v, int32(99), _regBase+_nOBSat, _nBase-_nOBSat, _regRecord)
	if _nOBSat <= int32(0) {
		goto _5
	}

	_regPrevKey = (*(*int32)(unsafe.Pointer(_pParse + 56))) + int32(1)
	{
		p := &(*(*int32)(unsafe.Pointer(_pParse + 56)))
		*p = int32(int32(*p) + (*(*int32)(unsafe.Pointer(_pSort + 8))))
	}
	_nKey = (_nExpr - (*(*int32)(unsafe.Pointer(_pSort + 8)))) + _bSeq
	if _bSeq == 0 {
		goto _6
	}

	_addrFirst = _1489sqlite3VdbeAddOp1(tls, _v, int32(22), _regBase+_nExpr)
	goto _7

_6:
	_addrFirst = _1489sqlite3VdbeAddOp1(tls, _v, int32(110), *(*int32)(unsafe.Pointer(_pSort + 12)))
_7:
	_1241sqlite3VdbeAddOp3(tls, _v, int32(94), _regPrevKey, _regBase, *(*int32)(unsafe.Pointer(_pSort + 8)))
	_pOp = _1615sqlite3VdbeGetOp(tls, _v, *(*int32)(unsafe.Pointer(_pSort + 24)))
	if (*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pParse))) + 97))) == 0 {
		goto _8
	}

	return

_8:
	*(*int32)(unsafe.Pointer(_pOp + 8)) = _nKey + _nData
	_pKI = *(*uintptr)(unsafe.Pointer(_pOp + 16))
	crt.Xmemset(tls, *(*uintptr)(unsafe.Pointer(_pKI + 24)), int32(0), uint64(*(*uint16)(unsafe.Pointer(_pKI + 6))))
	_1075sqlite3VdbeChangeP4(tls, _v, int32(-1), _pKI, int32(-9))
	*(*uintptr)(unsafe.Pointer(_pOp + 16)) = _1540keyInfoFromExprList(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pSort)), _nOBSat, (int32(*(*uint16)(unsafe.Pointer(_pKI + 8)))-int32(*(*uint16)(unsafe.Pointer(_pKI + 6))))-int32(1))
	_addrJmp = _1496sqlite3VdbeCurrentAddr(tls, _v)
	_1241sqlite3VdbeAddOp3(tls, _v, int32(18), _addrJmp+int32(1), int32(0), _addrJmp+int32(1))
	*(*int32)(unsafe.Pointer(_pSort + 20)) = _1541sqlite3VdbeMakeLabel(tls, _v)
	*(*int32)(unsafe.Pointer(_pSort + 16)) = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))
	_1240sqlite3VdbeAddOp2(tls, _v, int32(14), *(*int32)(unsafe.Pointer(_pSort + 16)), *(*int32)(unsafe.Pointer(_pSort + 20)))
	_1489sqlite3VdbeAddOp1(tls, _v, int32(134), *(*int32)(unsafe.Pointer(_pSort + 12)))
	if _iLimit == 0 {
		goto _9
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(22), _iLimit, *(*int32)(unsafe.Pointer(_pSort + 28)))
_9:
	_1474sqlite3VdbeJumpHere(tls, _v, _addrFirst)
	_1567sqlite3ExprCodeMove(tls, _pParse, _regBase, _regPrevKey, *(*int32)(unsafe.Pointer(_pSort + 8)))
	_1474sqlite3VdbeJumpHere(tls, _v, _addrJmp)
_5:
	if (int32(*(*uint8)(unsafe.Pointer(_pSort + 32))) & int32(0x1)) == 0 {
		goto _10
	}

	_op = int32(126)
	goto _11

_10:
	_op = int32(127)
_11:
	_1071sqlite3VdbeAddOp4Int(tls, _v, _op, *(*int32)(unsafe.Pointer(_pSort + 12)), _regRecord, _regBase+_nOBSat, _nBase-_nOBSat)
	if _iLimit == 0 {
		goto _12
	}

	_r1 = int32(0)
	_addr = _1489sqlite3VdbeAddOp1(tls, _v, int32(49), _iLimit)
	_1489sqlite3VdbeAddOp1(tls, _v, int32(33), *(*int32)(unsafe.Pointer(_pSort + 12)))
	if (*(*uint8)(unsafe.Pointer(_pSort + 33))) == 0 {
		goto _13
	}

	_r1 = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))
	_1241sqlite3VdbeAddOp3(tls, _v, int32(96), *(*int32)(unsafe.Pointer(_pSort + 12)), _nExpr, _r1)
_13:
	_1489sqlite3VdbeAddOp1(tls, _v, int32(118), *(*int32)(unsafe.Pointer(_pSort + 12)))
	if (*(*uint8)(unsafe.Pointer(_pSort + 33))) == 0 {
		goto _14
	}

	_iBrk = _1496sqlite3VdbeCurrentAddr(tls, _v) + int32(2)
	_1241sqlite3VdbeAddOp3(tls, _v, int32(53), _regBase+_nExpr, _iBrk, _r1)
	_1072sqlite3VdbeChangeP5(tls, _v, uint16(0x80))
_14:
	_1474sqlite3VdbeJumpHere(tls, _v, _addr)
_12:
}

// _1792sqlite3ExprCacheAffinityChange is defined at sqlite3.c:95199:21
func _1792sqlite3ExprCacheAffinityChange(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _iStart int32, _iCount int32) {
	_1801sqlite3ExprCacheRemove(tls, _pParse, _iStart, _iCount)
}

type SInLoop struct {
	XiCur       int32
	XaddrInTop  int32
	XeEndLoopOp uint8
}

// _1793translateColumnToCopy is defined at sqlite3.c:132327:13
func _1793translateColumnToCopy(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _iStart int32, _iTabCur int32, _iRegister int32, _bIncrRowid int32) {
	var (
		_v    uintptr // *TVdbe = SVdbe
		_pOp  uintptr // *TVdbeOp = SVdbeOp
		_iEnd int32
	)
	_v = *(*uintptr)(unsafe.Pointer(_pParse + 16))
	_pOp = _1615sqlite3VdbeGetOp(tls, _v, _iStart)
	_iEnd = _1496sqlite3VdbeCurrentAddr(tls, _v)
	if (*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pParse))) + 97))) == 0 {
		goto _1
	}

	return

_1:
_2:
	if _iStart >= _iEnd {
		goto _4
	}

	if (*(*int32)(unsafe.Pointer(_pOp + 4))) == _iTabCur {
		goto _5
	}

	goto _3

_5:
	if int32(*(*uint8)(unsafe.Pointer(_pOp))) != int32(96) {
		goto _6
	}

	*(*uint8)(unsafe.Pointer(_pOp)) = uint8(75)
	*(*int32)(unsafe.Pointer(_pOp + 4)) = (*(*int32)(unsafe.Pointer(_pOp + 8))) + _iRegister
	*(*int32)(unsafe.Pointer(_pOp + 8)) = *(*int32)(unsafe.Pointer(_pOp + 12))
	*(*int32)(unsafe.Pointer(_pOp + 12)) = int32(0)
	goto _7

_6:
	if int32(*(*uint8)(unsafe.Pointer(_pOp))) != int32(123) {
		goto _8
	}

	if _bIncrRowid == 0 {
		goto _9
	}

	*(*uint8)(unsafe.Pointer(_pOp)) = uint8(80)
	*(*int32)(unsafe.Pointer(_pOp + 4)) = *(*int32)(unsafe.Pointer(_pOp + 8))
	*(*int32)(unsafe.Pointer(_pOp + 8)) = int32(1)
	goto _10

_9:
	*(*uint8)(unsafe.Pointer(_pOp)) = uint8(70)
	*(*int32)(unsafe.Pointer(_pOp + 4)) = int32(0)
	*(*int32)(unsafe.Pointer(_pOp + 12)) = int32(0)
_10:
_8:
_7:
_3:
	_iStart++
	_pOp += 24
	goto _2

_4:
}

type SHavingToWhereCtx struct {
	XppWhere  uintptr // **SExpr
	XpGroupBy uintptr // *SExprList
}

type SWalker struct {
	XpParse           uintptr // *SParse
	XxExprCallback    uintptr // *func(crt.TLS, uintptr, uintptr) int32
	XxSelectCallback  uintptr // *func(crt.TLS, uintptr, uintptr) int32
	XxSelectCallback2 uintptr // *func(crt.TLS, uintptr, uintptr)
	XwalkerDepth      int32
	XeCode            uint8
	Xu                struct{ X int64 }
}

// _1794havingToWhereExprCb is defined at sqlite3.c:122630:12
func _1794havingToWhereExprCb(tls crt.TLS, _pWalker uintptr /* *TWalker = SWalker */, _pExpr uintptr /* *TExpr = SExpr */) (r int32) {
	var (
		_p      uintptr // *SHavingToWhereCtx
		_db     uintptr // *Tsqlite3 = Ssqlite3
		_pNew   uintptr // *TExpr = SExpr
		_pWhere uintptr // *TExpr = SExpr
		_t      SExpr
	)
	if int32(*(*uint8)(unsafe.Pointer(_pExpr))) == int32(44) {
		goto _1
	}

	_p = *(*uintptr)(unsafe.Pointer(_pWalker + 40))
	if _1930sqlite3ExprIsConstantOrGroupBy(tls, *(*uintptr)(unsafe.Pointer(_pWalker)), _pExpr, *(*uintptr)(unsafe.Pointer(_p + 8))) == 0 {
		goto _2
	}

	_db = *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pWalker))))
	_pNew = _1335sqlite3ExprAlloc(tls, _db, int32(134), _1360sqlite3IntTokens+16, int32(0))
	if _pNew == 0 {
		goto _3
	}

	_pWhere = *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_p))))
	_t = *(*SExpr)(unsafe.Pointer(_pNew))
	*(*SExpr)(unsafe.Pointer(_pNew)) = *(*SExpr)(unsafe.Pointer(_pExpr))
	*(*SExpr)(unsafe.Pointer(_pExpr)) = _t
	_pNew = _1508sqlite3ExprAnd(tls, _db, _pWhere, _pNew)
	*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_p)))) = _pNew
_3:
_2:
	return int32(1)

_1:
	return int32(0)
}

// _1795sqlite3WalkExpr is defined at sqlite3.c:90165:20
func _1795sqlite3WalkExpr(tls crt.TLS, _pWalker uintptr /* *TWalker = SWalker */, _pExpr uintptr /* *TExpr = SExpr */) (r int32) {
	if _pExpr != 0 {
		return _1931walkExpr(tls, _pWalker, _pExpr)
	}

	return int32(0)
}

// _1796analyzeAggregate is defined at sqlite3.c:96856:12
func _1796analyzeAggregate(tls crt.TLS, _pWalker uintptr /* *TWalker = SWalker */, _pExpr uintptr /* *TExpr = SExpr */) (r int32) {
	var (
		_i        int32
		_pNC      uintptr // *TNameContext = SNameContext
		_pParse   uintptr // *TParse = SParse
		_pSrcList uintptr // *TSrcList = SSrcList
		_pAggInfo uintptr // *TAggInfo = SAggInfo
		_pItem    uintptr // *SSrcList_item
		_pCol     uintptr // *SAggInfo_col
		_k        int32
		_j        int32
		_n        int32
		_pGB      uintptr // *TExprList = SExprList
		_pTerm    uintptr // *SExprList_item
		_pE       uintptr // *TExpr = SExpr
		_1pItem   uintptr // *SAggInfo_func
		_enc      uint8
	)
	_pNC = *(*uintptr)(unsafe.Pointer(_pWalker + 40))
	_pParse = *(*uintptr)(unsafe.Pointer(_pNC))
	_pSrcList = *(*uintptr)(unsafe.Pointer(_pNC + 8))
	_pAggInfo = *(*uintptr)(unsafe.Pointer(_pNC + 24))
	switch int32(*(*uint8)(unsafe.Pointer(_pExpr))) {
	case int32(147):
		goto _2
	case int32(145):
		goto _3
	case int32(146):
		goto _4
	}
	goto _1

_2:
_3:
	if _pSrcList == 0 {
		goto _5
	}

	_pItem = _pSrcList + 8
	_i = int32(0)
_6:
	if _i >= (*(*int32)(unsafe.Pointer(_pSrcList))) {
		goto _8
	}

	if (*(*int32)(unsafe.Pointer(_pExpr + 44))) != (*(*int32)(unsafe.Pointer(_pItem + 64))) {
		goto _9
	}

	_pCol = *(*uintptr)(unsafe.Pointer(_pAggInfo + 32))
	_k = int32(0)
_10:
	if _k >= (*(*int32)(unsafe.Pointer(_pAggInfo + 40))) {
		goto _12
	}

	if (*(*int32)(unsafe.Pointer(_pCol + 8))) != (*(*int32)(unsafe.Pointer(_pExpr + 44))) || (*(*int32)(unsafe.Pointer(_pCol + 12))) != int32(*(*int16)(unsafe.Pointer(_pExpr + 48))) {
		goto _13
	}

	goto _12

_13:
	_k++
	_pCol += 32
	goto _10

_12:
	if _k < (*(*int32)(unsafe.Pointer(_pAggInfo + 40))) || set5(&_k, _1932addAggInfoColumn(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _pAggInfo)) < int32(0) {
		goto _14
	}

	_pCol = (*(*uintptr)(unsafe.Pointer(_pAggInfo + 32))) + 32*uintptr(_k)
	*(*uintptr)(unsafe.Pointer(_pCol)) = *(*uintptr)(unsafe.Pointer(_pExpr + 64))
	*(*int32)(unsafe.Pointer(_pCol + 8)) = *(*int32)(unsafe.Pointer(_pExpr + 44))
	*(*int32)(unsafe.Pointer(_pCol + 12)) = int32(*(*int16)(unsafe.Pointer(_pExpr + 48)))
	*(*int32)(unsafe.Pointer(_pCol + 20)) = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))
	*(*int32)(unsafe.Pointer(_pCol + 16)) = int32(-1)
	*(*uintptr)(unsafe.Pointer(_pCol + 24)) = _pExpr
	if (*(*uintptr)(unsafe.Pointer(_pAggInfo + 24))) == 0 {
		goto _15
	}

	_pGB = *(*uintptr)(unsafe.Pointer(_pAggInfo + 24))
	_pTerm = _pGB + 8
	_n = *(*int32)(unsafe.Pointer(_pGB))
	_j = int32(0)
_16:
	if _j >= _n {
		goto _18
	}

	_pE = *(*uintptr)(unsafe.Pointer(_pTerm))
	if int32(*(*uint8)(unsafe.Pointer(_pE))) != int32(145) || (*(*int32)(unsafe.Pointer(_pE + 44))) != (*(*int32)(unsafe.Pointer(_pExpr + 44))) || int32(*(*int16)(unsafe.Pointer(_pE + 48))) != int32(*(*int16)(unsafe.Pointer(_pExpr + 48))) {
		goto _19
	}

	*(*int32)(unsafe.Pointer(_pCol + 16)) = _j
	goto _18

_19:
	_j++
	_pTerm += 32
	goto _16

_18:
_15:
	if (*(*int32)(unsafe.Pointer(_pCol + 16))) >= int32(0) {
		goto _20
	}

	*(*int32)(unsafe.Pointer(_pCol + 16)) = postinc7(&(*(*int32)(unsafe.Pointer(_pAggInfo + 12))))
_20:
_14:
	*(*uintptr)(unsafe.Pointer(_pExpr + 56)) = _pAggInfo
	*(*uint8)(unsafe.Pointer(_pExpr)) = uint8(147)
	*(*int16)(unsafe.Pointer(_pExpr + 50)) = int16(_k)
	goto _8

_9:
	_i++
	_pItem += 112
	goto _6

_8:
_5:
	return int32(1)

_4:
	if (int32(*(*uint16)(unsafe.Pointer(_pNC + 48)))&int32(0x8)) != int32(0) || (*(*int32)(unsafe.Pointer(_pWalker + 32))) != int32(*(*uint8)(unsafe.Pointer(_pExpr + 54))) {
		goto _21
	}

	_1pItem = *(*uintptr)(unsafe.Pointer(_pAggInfo + 48))
	_i = int32(0)
_23:
	if _i >= (*(*int32)(unsafe.Pointer(_pAggInfo + 56))) {
		goto _25
	}

	if _1770sqlite3ExprCompare(tls, null, *(*uintptr)(unsafe.Pointer(_1pItem)), _pExpr, int32(-1)) != int32(0) {
		goto _26
	}

	goto _25

_26:
	_i++
	_1pItem += 24
	goto _23

_25:
	if _i < (*(*int32)(unsafe.Pointer(_pAggInfo + 56))) {
		goto _27
	}

	_enc = *(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pParse)) + 94))
	_i = _1933addAggInfoFunc(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _pAggInfo)
	if _i < int32(0) {
		goto _28
	}

	_1pItem = (*(*uintptr)(unsafe.Pointer(_pAggInfo + 48))) + 24*uintptr(_i)
	*(*uintptr)(unsafe.Pointer(_1pItem)) = _pExpr
	*(*int32)(unsafe.Pointer(_1pItem + 16)) = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))

	*(*uintptr)(unsafe.Pointer(_1pItem + 8)) = _541sqlite3FindFunction(tls, *(*uintptr)(unsafe.Pointer(_pParse)), *(*uintptr)(unsafe.Pointer(_pExpr + 8)), func() int32 {
		if (*(*uintptr)(unsafe.Pointer(_pExpr + 32))) != 0 {
			return *(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pExpr + 32))))
		}
		return int32(0)
	}(), _enc, uint8(0))
	if ((*(*uint32)(unsafe.Pointer(_pExpr + 4))) & uint32(0x10)) == 0 {
		goto _29
	}

	*(*int32)(unsafe.Pointer(_1pItem + 20)) = postinc7(&(*(*int32)(unsafe.Pointer(_pParse + 52))))
	goto _30

_29:
	*(*int32)(unsafe.Pointer(_1pItem + 20)) = int32(-1)
_30:
_28:
_27:
	*(*int16)(unsafe.Pointer(_pExpr + 50)) = int16(_i)
	*(*uintptr)(unsafe.Pointer(_pExpr + 56)) = _pAggInfo
	return int32(1)

	goto _22

_21:
	return int32(0)

_22:
_1:
	return int32(0)
}

// _1797analyzeAggregatesInSelect is defined at sqlite3.c:96981:12
func _1797analyzeAggregatesInSelect(tls crt.TLS, _pWalker uintptr /* *TWalker = SWalker */, _pSelect uintptr /* *TSelect = SSelect */) (r int32) {
	(*(*int32)(unsafe.Pointer(_pWalker + 32)))++
	return int32(0)
}

// _1798analyzeAggregatesInSelectEnd is defined at sqlite3.c:96986:13
func _1798analyzeAggregatesInSelectEnd(tls crt.TLS, _pWalker uintptr /* *TWalker = SWalker */, _pSelect uintptr /* *TSelect = SSelect */) {
	(*(*int32)(unsafe.Pointer(_pWalker + 32)))--
}

// _1799sqlite3ExprIsConstant is defined at sqlite3.c:93640:20
func _1799sqlite3ExprIsConstant(tls crt.TLS, _p uintptr /* *TExpr = SExpr */) (r int32) {
	return _1736exprIsConst(tls, _p, int32(1), int32(0))
}

// _1800sqlite3ExprCodeAtInit is defined at sqlite3.c:95941:20
func _1800sqlite3ExprCodeAtInit(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pExpr uintptr /* *TExpr = SExpr */, _regDest int32) (r int32) {
	var (
		_p      uintptr // *TExprList = SExprList
		_pItem  uintptr // *SExprList_item
		_i      int32
		_1pItem uintptr // *SExprList_item
	)

	_p = *(*uintptr)(unsafe.Pointer(_pParse + 96))
	if _regDest >= int32(0) || _p == 0 {
		goto _1
	}

	_pItem = _p + 8
	_i = *(*int32)(unsafe.Pointer(_p))
_2:
	if _i <= int32(0) {
		goto _4
	}

	if (uint32((*(*uint8)(unsafe.Pointer(_pItem + 25)))>>2)<<31>>31) == 0 || _1770sqlite3ExprCompare(tls, null, *(*uintptr)(unsafe.Pointer(_pItem)), _pExpr, int32(-1)) != int32(0) {
		goto _5
	}

	return *(*int32)(unsafe.Pointer(_pItem + 28))

_5:
	_pItem += 32
	_i--
	goto _2

_4:
_1:
	_pExpr = _1507sqlite3ExprDup(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _pExpr, int32(0))
	_p = _1331sqlite3ExprListAppend(tls, _pParse, _p, _pExpr)
	if _p == 0 {
		goto _6
	}

	_1pItem = (_p + 8) + 32*uintptr((*(*int32)(unsafe.Pointer(_p)))-int32(1))
	set63b(&(*(*uint8)(unsafe.Pointer(_1pItem + 25))), uint32(bool2int(_regDest < int32(0))))
	if _regDest >= int32(0) {
		goto _7
	}

	_regDest = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))
_7:
	*(*int32)(unsafe.Pointer(_1pItem + 28)) = _regDest
_6:
	*(*uintptr)(unsafe.Pointer(_pParse + 96)) = _p
	return _regDest
}

type SyColCache struct {
	XiTable  int32
	XiColumn int16
	XtempReg uint8
	XiLevel  int32
	XiReg    int32
	Xlru     int32
}

// _1801sqlite3ExprCacheRemove is defined at sqlite3.c:95005:21
func _1801sqlite3ExprCacheRemove(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _iReg int32, _nReg int32) {
	var (
		_i int32
		_p uintptr // *SyColCache
	)
	_i = int32(0)
_1:
	if _i >= int32(*(*uint8)(unsafe.Pointer(_pParse + 37))) {
		goto _2
	}

	_p = (_pParse + 196) + 20*uintptr(_i)
	if (*(*int32)(unsafe.Pointer(_p + 12))) < _iReg || (*(*int32)(unsafe.Pointer(_p + 12))) >= (_iReg+_nReg) {
		goto _3
	}

	_1844cacheEntryClear(tls, _pParse, _i)
	goto _4

_3:
	_i++
_4:
	goto _1

_2:
}

type SAggInfo_func struct {
	XpExpr     uintptr // *SExpr
	XpFunc     uintptr // *SFuncDef
	XiMem      int32
	XiDistinct int32
}

// _1802sqlite3VdbeAppendP4 is defined at sqlite3.c:73219:21
func _1802sqlite3VdbeAppendP4(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */, _pP4 uintptr /* *void */, _n int32) {
	var _pOp uintptr // *TVdbeOp = SVdbeOp

	if (*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p))) + 97))) == 0 {
		goto _1
	}

	_1099freeP4(tls, *(*uintptr)(unsafe.Pointer(_p)), _n, _pP4)
	goto _2

_1:
	_pOp = (*(*uintptr)(unsafe.Pointer(_p + 104))) + 24*uintptr((*(*int32)(unsafe.Pointer(_p + 184)))-int32(1))

	*(*int8)(unsafe.Pointer(_pOp + 1)) = int8(_n)
	*(*uintptr)(unsafe.Pointer(_pOp + 16)) = _pP4
_2:
}

// _1803sqlite3ExprIsVector is defined at sqlite3.c:92165:20
func _1803sqlite3ExprIsVector(tls crt.TLS, _pExpr uintptr /* *TExpr = SExpr */) (r int32) {
	return bool2int(_1608sqlite3ExprVectorSize(tls, _pExpr) > int32(1))
}

// _1804sqlite3ExprCodeTemp is defined at sqlite3.c:95983:20
func _1804sqlite3ExprCodeTemp(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pExpr uintptr /* *TExpr = SExpr */, _pReg uintptr /* *int32 */) (r int32) {
	var (
		_r2 int32
		_r1 int32
	)
	_pExpr = _1510sqlite3ExprSkipCollate(tls, _pExpr)
	if *(*uint8)(unsafe.Pointer(_pParse + 35)) == 0 || int32(*(*uint8)(unsafe.Pointer(_pExpr))) == int32(150) || _1865sqlite3ExprIsConstantNotJoin(tls, _pExpr) == 0 {
		goto _1
	}

	*(*int32)(unsafe.Pointer(_pReg)) = int32(0)
	_r2 = _1800sqlite3ExprCodeAtInit(tls, _pParse, _pExpr, int32(-1))
	goto _2

_1:
	_r1 = _1562sqlite3GetTempReg(tls, _pParse)
	_r2 = _1728sqlite3ExprCodeTarget(tls, _pParse, _pExpr, _r1)
	if _r2 != _r1 {
		goto _3
	}

	*(*int32)(unsafe.Pointer(_pReg)) = _r1
	goto _4

_3:
	_1563sqlite3ReleaseTempReg(tls, _pParse, _r1)
	*(*int32)(unsafe.Pointer(_pReg)) = int32(0)
_4:
_2:
	return _r2
}

// _1805codeCompare is defined at sqlite3.c:92135:12
func _1805codeCompare(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pLeft uintptr /* *TExpr = SExpr */, _pRight uintptr /* *TExpr = SExpr */, _opcode int32, _in1 int32, _in2 int32, _dest int32, _jumpIfNull int32) (r int32) {
	var (
		_p5   int32
		_addr int32
		_p4   uintptr // *TCollSeq = SCollSeq
	)
	_p4 = _1910sqlite3BinaryCompareCollSeq(tls, _pParse, _pLeft, _pRight)
	_p5 = int32(_1934binaryCompareP5(tls, _pLeft, _pRight, _jumpIfNull))
	_addr = _1475sqlite3VdbeAddOp4(tls, *(*uintptr)(unsafe.Pointer(_pParse + 16)), _opcode, _in2, _dest, _in1, _p4, int32(-2))
	_1072sqlite3VdbeChangeP5(tls, *(*uintptr)(unsafe.Pointer(_pParse + 16)), uint16(uint8(_p5)))
	return _addr
}

// _1806exprCodeBetween is defined at sqlite3.c:96161:13
func _1806exprCodeBetween(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pExpr uintptr /* *TExpr = SExpr */, _dest int32, _xJump uintptr /* *func(crt.TLS, uintptr, uintptr, int32, int32) */, _jumpIfNull int32) {
	esc := crt.MustMalloc(324)
	var (
		_exprAnd   = esc       // *TExpr = SExpr
		_compLeft  = esc + 80  // *TExpr = SExpr
		_compRight = esc + 160 // *TExpr = SExpr
		_exprX     = esc + 240 // *TExpr = SExpr
		_regFree1  = esc + 320 // *int32
	)
	defer crt.Free(esc)
	*(*int32)(unsafe.Pointer(_regFree1)) = int32(0)
	crt.Xmemset(tls, _compLeft, int32(0), uint64(72))
	crt.Xmemset(tls, _compRight, int32(0), uint64(72))
	crt.Xmemset(tls, _exprAnd, int32(0), uint64(72))

	*(*SExpr)(unsafe.Pointer(_exprX)) = *(*SExpr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pExpr + 16))))
	*(*uint8)(unsafe.Pointer(_exprAnd)) = uint8(44)
	*(*uintptr)(unsafe.Pointer(_exprAnd + 16)) = _compLeft
	*(*uintptr)(unsafe.Pointer(_exprAnd + 24)) = _compRight
	*(*uint8)(unsafe.Pointer(_compLeft)) = uint8(57)
	*(*uintptr)(unsafe.Pointer(_compLeft + 16)) = _exprX
	*(*uintptr)(unsafe.Pointer(_compLeft + 24)) = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pExpr + 32))) + 8))
	*(*uint8)(unsafe.Pointer(_compRight)) = uint8(55)
	*(*uintptr)(unsafe.Pointer(_compRight + 16)) = _exprX
	*(*uintptr)(unsafe.Pointer(_compRight + 24)) = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pExpr + 32))) + 8) + 32))
	_1832exprToRegister(tls, _exprX, _1869exprCodeVector(tls, _pParse, _exprX, _regFree1))
	if _xJump == 0 {
		goto _1
	}

	fn219(_xJump)(tls, _pParse, _exprAnd, _dest, _jumpIfNull)
	goto _2

_1:
	{
		p := &(*(*uint32)(unsafe.Pointer(_exprX + 4)))
		*p = uint32(uint32(*p) | uint32(0x1))
	}
	_1728sqlite3ExprCodeTarget(tls, _pParse, _exprAnd, _dest)
_2:
	_1563sqlite3ReleaseTempReg(tls, _pParse, *(*int32)(unsafe.Pointer(_regFree1)))
}

// _1807sqlite3ExprCodeIN is defined at sqlite3.c:94638:13
func _1807sqlite3ExprCodeIN(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pExpr uintptr /* *TExpr = SExpr */, _destIfFalse int32, _destIfNull int32) {
	esc := crt.MustMalloc(36)
	var (
		_rRhsHasNull = esc // *int32
		_eType       int32
		_rLhs        int32
		_rLhsOrig    int32
		_v           uintptr // *TVdbe = SVdbe
		_aiMap       uintptr // *int32
		_zAff        uintptr // *int8
		_nVector     int32
		_iDummy      = esc + 16 // *int32
		_pLeft       uintptr    // *TExpr = SExpr
		_i           int32
		_destStep2   int32
		_destStep6   int32
		_addrTruthOp int32
		_destNotNull int32
		_addrTop     int32
		_pList       uintptr // *TExprList = SExprList
		_pColl       uintptr // *TCollSeq = SCollSeq
		_labelOk     int32
		_r2          int32
		_regToFree   = esc + 32 // *int32
		_regCkNull   int32
		_ii          int32
		_p           uintptr // *TExpr = SExpr
		_1p          uintptr // *TExpr = SExpr
		_2pColl      uintptr // *TCollSeq = SCollSeq
		_r3          int32
	)
	defer crt.Free(esc)
	*(*int32)(unsafe.Pointer(_rRhsHasNull)) = int32(0)
	_aiMap = 0
	_zAff = 0
	_destStep6 = int32(0)
	_pLeft = *(*uintptr)(unsafe.Pointer(_pExpr + 16))
	if _1935sqlite3ExprCheckIN(tls, _pParse, _pExpr) == 0 {
		goto _1
	}

	return

_1:
	_zAff = _1936exprINAffinity(tls, _pParse, _pExpr)
	_nVector = _1608sqlite3ExprVectorSize(tls, *(*uintptr)(unsafe.Pointer(_pExpr + 16)))
	_aiMap = _295sqlite3DbMallocZero(tls, *(*uintptr)(unsafe.Pointer(_pParse)), uint64((uint64(_nVector)*uint64(5))+uint64(1)))
	if (*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pParse))) + 97))) == 0 {
		goto _2
	}

	goto _sqlite3ExprCodeIN_oom_error

_2:
	_v = *(*uintptr)(unsafe.Pointer(_pParse + 16))

	_eType = _1937sqlite3FindInIndex(tls, _pParse, _pExpr, uint32(3), func() uintptr {
		if _destIfFalse == _destIfNull {
			return null
		}
		return _rRhsHasNull
	}(), _aiMap)

	_1652sqlite3ExprCachePush(tls, _pParse)
	_rLhsOrig = _1869exprCodeVector(tls, _pParse, _pLeft, _iDummy)
	_i = int32(0)
_3:
	if _i >= _nVector || (*(*int32)(unsafe.Pointer(_aiMap + 4*uintptr(_i)))) != _i {
		goto _5
	}

	_i++
	goto _3

_5:
	if _i != _nVector {
		goto _6
	}

	_rLhs = _rLhsOrig
	goto _7

_6:
	_rLhs = _1558sqlite3GetTempRange(tls, _pParse, _nVector)
	_i = int32(0)
_8:
	if _i >= _nVector {
		goto _10
	}

	_1241sqlite3VdbeAddOp3(tls, _v, int32(75), _rLhsOrig+_i, _rLhs+(*(*int32)(unsafe.Pointer(_aiMap + 4*uintptr(_i)))), int32(0))
	_i++
	goto _8

_10:
_7:
	if _eType != int32(5) {
		goto _11
	}

	_pList = *(*uintptr)(unsafe.Pointer(_pExpr + 32))
	_pColl = _1789sqlite3ExprCollSeq(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pExpr + 16)))
	_labelOk = _1541sqlite3VdbeMakeLabel(tls, _v)
	_regCkNull = int32(0)

	if _destIfNull == _destIfFalse {
		goto _12
	}

	_regCkNull = _1562sqlite3GetTempReg(tls, _pParse)
	_1241sqlite3VdbeAddOp3(tls, _v, int32(84), _rLhs, _rLhs, _regCkNull)
_12:
	_ii = int32(0)
_13:
	if _ii >= (*(*int32)(unsafe.Pointer(_pList))) {
		goto _15
	}

	_r2 = _1804sqlite3ExprCodeTemp(tls, _pParse, *(*uintptr)(unsafe.Pointer((_pList + 8) + 32*uintptr(_ii))), _regToFree)
	if _regCkNull == 0 || _1921sqlite3ExprCanBeNull(tls, *(*uintptr)(unsafe.Pointer((_pList + 8) + 32*uintptr(_ii)))) == 0 {
		goto _16
	}

	_1241sqlite3VdbeAddOp3(tls, _v, int32(84), _regCkNull, _r2, _regCkNull)
_16:
	if _ii >= ((*(*int32)(unsafe.Pointer(_pList)))-int32(1)) && _destIfNull == _destIfFalse {
		goto _17
	}

	_1475sqlite3VdbeAddOp4(tls, _v, int32(53), _rLhs, _labelOk, _r2, _pColl, int32(-2))
	_1072sqlite3VdbeChangeP5(tls, _v, uint16(*(*int8)(unsafe.Pointer(_zAff))))
	goto _18

_17:
	_1475sqlite3VdbeAddOp4(tls, _v, int32(52), _rLhs, _destIfFalse, _r2, _pColl, int32(-2))
	_1072sqlite3VdbeChangeP5(tls, _v, uint16(int32(*(*int8)(unsafe.Pointer(_zAff)))|int32(0x10)))
_18:
	_1563sqlite3ReleaseTempReg(tls, _pParse, *(*int32)(unsafe.Pointer(_regToFree)))
	_ii++
	goto _13

_15:
	if _regCkNull == 0 {
		goto _19
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(50), _regCkNull, _destIfNull)
	_1479sqlite3VdbeGoto(tls, _v, _destIfFalse)
_19:
	_1569sqlite3VdbeResolveLabel(tls, _v, _labelOk)
	_1563sqlite3ReleaseTempReg(tls, _pParse, _regCkNull)
	goto _sqlite3ExprCodeIN_finished

_11:
	if _destIfNull != _destIfFalse {
		goto _20
	}

	_destStep2 = _destIfFalse
	goto _21

_20:
	_destStep2 = set5(&_destStep6, _1541sqlite3VdbeMakeLabel(tls, _v))
_21:
	_i = int32(0)
_22:
	if _i >= _nVector {
		goto _24
	}

	_p = _1938sqlite3VectorFieldSubexpr(tls, *(*uintptr)(unsafe.Pointer(_pExpr + 16)), _i)
	if _1921sqlite3ExprCanBeNull(tls, _p) == 0 {
		goto _25
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(50), _rLhs+_i, _destStep2)
_25:
	_i++
	goto _22

_24:
	if _eType != int32(1) {
		goto _26
	}

	_1241sqlite3VdbeAddOp3(tls, _v, int32(31), *(*int32)(unsafe.Pointer(_pExpr + 44)), _destIfFalse, _rLhs)
	_addrTruthOp = _1473sqlite3VdbeAddOp0(tls, _v, int32(13))
	goto _27

_26:
	_1475sqlite3VdbeAddOp4(tls, _v, int32(98), _rLhs, _nVector, int32(0), _zAff, _nVector)
	if _destIfFalse != _destIfNull {
		goto _28
	}

	_1071sqlite3VdbeAddOp4Int(tls, _v, int32(29), *(*int32)(unsafe.Pointer(_pExpr + 44)), _destIfFalse, _rLhs, _nVector)
	goto _sqlite3ExprCodeIN_finished

_28:
	_addrTruthOp = _1071sqlite3VdbeAddOp4Int(tls, _v, int32(30), *(*int32)(unsafe.Pointer(_pExpr + 44)), int32(0), _rLhs, _nVector)
_27:
	if (*(*int32)(unsafe.Pointer(_rRhsHasNull))) == 0 || _nVector != int32(1) {
		goto _29
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(51), *(*int32)(unsafe.Pointer(_rRhsHasNull)), _destIfFalse)
_29:
	if _destIfFalse != _destIfNull {
		goto _30
	}

	_1479sqlite3VdbeGoto(tls, _v, _destIfFalse)
_30:
	if _destStep6 == 0 {
		goto _31
	}

	_1569sqlite3VdbeResolveLabel(tls, _v, _destStep6)
_31:
	_addrTop = _1240sqlite3VdbeAddOp2(tls, _v, int32(37), *(*int32)(unsafe.Pointer(_pExpr + 44)), _destIfFalse)
	if _nVector <= int32(1) {
		goto _32
	}

	_destNotNull = _1541sqlite3VdbeMakeLabel(tls, _v)
	goto _33

_32:
	_destNotNull = _destIfFalse
_33:
	_i = int32(0)
_34:
	if _i >= _nVector {
		goto _36
	}

	_r3 = _1562sqlite3GetTempReg(tls, _pParse)
	_1p = _1938sqlite3VectorFieldSubexpr(tls, _pLeft, _i)
	_2pColl = _1789sqlite3ExprCollSeq(tls, _pParse, _1p)
	_1241sqlite3VdbeAddOp3(tls, _v, int32(96), *(*int32)(unsafe.Pointer(_pExpr + 44)), _i, _r3)
	_1475sqlite3VdbeAddOp4(tls, _v, int32(52), _rLhs+_i, _destNotNull, _r3, _2pColl, int32(-2))
	_1563sqlite3ReleaseTempReg(tls, _pParse, _r3)
	_i++
	goto _34

_36:
	_1240sqlite3VdbeAddOp2(tls, _v, int32(13), int32(0), _destIfNull)
	if _nVector <= int32(1) {
		goto _37
	}

	_1569sqlite3VdbeResolveLabel(tls, _v, _destNotNull)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(7), *(*int32)(unsafe.Pointer(_pExpr + 44)), _addrTop+int32(1))
	_1240sqlite3VdbeAddOp2(tls, _v, int32(13), int32(0), _destIfFalse)
_37:
	_1474sqlite3VdbeJumpHere(tls, _v, _addrTruthOp)
	goto _sqlite3ExprCodeIN_finished
_sqlite3ExprCodeIN_finished:
	if _rLhs == _rLhsOrig {
		goto _38
	}

	_1563sqlite3ReleaseTempReg(tls, _pParse, _rLhs)
_38:
	_1654sqlite3ExprCachePop(tls, _pParse)
	goto _sqlite3ExprCodeIN_oom_error
_sqlite3ExprCodeIN_oom_error:
	_181sqlite3DbFree(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _aiMap)
	_181sqlite3DbFree(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _zAff)
}

// _1808exprAlwaysTrue is defined at sqlite3.c:92705:12
func _1808exprAlwaysTrue(tls crt.TLS, _p uintptr /* *TExpr = SExpr */) (r int32) {
	esc := crt.MustMalloc(4)
	var _v = esc // *int32
	defer crt.Free(esc)
	*(*int32)(unsafe.Pointer(_v)) = int32(0)
	if ((*(*uint32)(unsafe.Pointer(_p + 4))) & uint32(0x1)) == uint32(0) {
		goto _1
	}

	return int32(0)

_1:
	if _1762sqlite3ExprIsInteger(tls, _p, _v) != 0 {
		goto _2
	}

	return int32(0)

_2:
	return bool2int((*(*int32)(unsafe.Pointer(_v))) != int32(0))
}

// _1809checkColumnOverlap is defined at sqlite3.c:124555:12
func _1809checkColumnOverlap(tls crt.TLS, _pIdList uintptr /* *TIdList = SIdList */, _pEList uintptr /* *TExprList = SExprList */) (r int32) {
	var _e int32

	if _pIdList != 0 && _pEList != 0 {
		goto _1
	}

	return int32(1)

_1:
	_e = int32(0)
_2:
	if _e >= (*(*int32)(unsafe.Pointer(_pEList))) {
		goto _4
	}

	if _1939sqlite3IdListIndex(tls, _pIdList, *(*uintptr)(unsafe.Pointer(((_pEList + 8) + 32*uintptr(_e)) + 8))) < int32(0) {
		goto _5
	}

	return int32(1)

_5:
	_e++
	goto _2

_4:
	return int32(0)
}

// _1810fkChildIsModified is defined at sqlite3.c:109199:12
func _1810fkChildIsModified(tls crt.TLS, _pTab uintptr /* *TTable = STable */, _p uintptr /* *TFKey = SFKey */, _aChange uintptr /* *int32 */, _bChngRowid int32) (r int32) {
	var (
		_i         int32
		_iChildKey int32
	)
	_i = int32(0)
_1:
	if _i >= (*(*int32)(unsafe.Pointer(_p + 40))) {
		goto _3
	}

	_iChildKey = *(*int32)(unsafe.Pointer((_p + 64) + 16*uintptr(_i)))
	if (*(*int32)(unsafe.Pointer(_aChange + 4*uintptr(_iChildKey)))) < int32(0) {
		goto _4
	}

	return int32(1)

_4:
	if _iChildKey != int32(*(*int16)(unsafe.Pointer(_pTab + 68))) || _bChngRowid == 0 {
		goto _5
	}

	return int32(1)

_5:
	_i++
	goto _1

_3:
	return int32(0)
}

// _1811fkParentIsModified is defined at sqlite3.c:109226:12
func _1811fkParentIsModified(tls crt.TLS, _pTab uintptr /* *TTable = STable */, _p uintptr /* *TFKey = SFKey */, _aChange uintptr /* *int32 */, _bChngRowid int32) (r int32) {
	var (
		_i    int32
		_zKey uintptr // *int8
		_iKey int32
		_pCol uintptr // *TColumn = SColumn
	)
	_i = int32(0)
_1:
	if _i >= (*(*int32)(unsafe.Pointer(_p + 40))) {
		goto _3
	}

	_zKey = *(*uintptr)(unsafe.Pointer(((_p + 64) + 16*uintptr(_i)) + 8))
	_iKey = int32(0)
_4:
	if _iKey >= int32(*(*int16)(unsafe.Pointer(_pTab + 70))) {
		goto _6
	}

	if (*(*int32)(unsafe.Pointer(_aChange + 4*uintptr(_iKey)))) < int32(0) && (_iKey != int32(*(*int16)(unsafe.Pointer(_pTab + 68))) || _bChngRowid == 0) {
		goto _7
	}

	_pCol = (*(*uintptr)(unsafe.Pointer(_pTab + 8))) + 32*uintptr(_iKey)
	if _zKey == 0 {
		goto _8
	}

	if int32(0) != _110sqlite3StrICmp(tls, *(*uintptr)(unsafe.Pointer(_pCol)), _zKey) {
		goto _10
	}

	return int32(1)

_10:
	goto _9

_8:
	if (int32(*(*uint8)(unsafe.Pointer(_pCol + 27))) & int32(0x1)) == 0 {
		goto _11
	}

	return int32(1)

_11:
_9:
_7:
	_iKey++
	goto _4

_6:
	_i++
	goto _1

_3:
	return int32(0)
}

// _1812resolveExprStep is defined at sqlite3.c:90837:12
func _1812resolveExprStep(tls crt.TLS, _pWalker uintptr /* *TWalker = SWalker */, _pExpr uintptr /* *TExpr = SExpr */) (r int32) {
	var (
		_pNC            uintptr // *TNameContext = SNameContext
		_pParse         uintptr // *TParse = SParse
		_zColumn        uintptr // *int8
		_zTable         uintptr // *int8
		_zDb            uintptr // *int8
		_pRight         uintptr // *TExpr = SExpr
		_pList          uintptr // *TExprList = SExprList
		_n              int32
		_no_such_func   int32
		_wrong_num_args int32
		_is_agg         int32
		_nId            int32
		_zId            uintptr // *int8
		_pDef           uintptr // *TFuncDef = SFuncDef
		_enc            uint8
		_auth           int32
		_pNC2           uintptr // *TNameContext = SNameContext
		_nRef           int32
		_nLeft          int32
		_nRight         int32
	)
	_pNC = *(*uintptr)(unsafe.Pointer(_pWalker + 40))

	_pParse = *(*uintptr)(unsafe.Pointer(_pNC))

	switch int32(*(*uint8)(unsafe.Pointer(_pExpr))) {
	case int32(59):
		goto _2
	case int32(122):
		goto _3
	case int32(144):
		goto _4
	case int32(119):
		goto _5
	case int32(20):
		goto _6
	case int32(49):
		goto _7
	case int32(135):
		goto _8
	case int32(48):
		goto _9
	case int32(53):
		goto _10
	case int32(52):
		goto _11
	case int32(56):
		goto _12
	case int32(55):
		goto _13
	case int32(54):
		goto _14
	case int32(57):
		goto _15
	case int32(45):
		goto _16
	case int32(143):
		goto _17
	}
	goto _1

_2:
_3:
	if int32(*(*uint8)(unsafe.Pointer(_pExpr))) != int32(59) {
		goto _18
	}

	_zDb = null
	_zTable = null
	_zColumn = *(*uintptr)(unsafe.Pointer(_pExpr + 8))
	goto _19

_18:
	_1940notValid(tls, _pParse, _pNC, ts+31766 /* "the \".\" operator" */, int32(0x20))
	_pRight = *(*uintptr)(unsafe.Pointer(_pExpr + 24))
	if int32(*(*uint8)(unsafe.Pointer(_pRight))) != int32(59) {
		goto _20
	}

	_zDb = null
	_zTable = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pExpr + 16))) + 8))
	_zColumn = *(*uintptr)(unsafe.Pointer(_pRight + 8))
	goto _21

_20:
	_zDb = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pExpr + 16))) + 8))
	_zTable = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pRight + 16))) + 8))
	_zColumn = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pRight + 24))) + 8))
_21:
_19:
	return _1941lookupName(tls, _pParse, _zDb, _zTable, _zColumn, _pNC, _pExpr)

_4:
	_pList = *(*uintptr)(unsafe.Pointer(_pExpr + 32))
	_n = func() int32 {
		if _pList != 0 {
			return *(*int32)(unsafe.Pointer(_pList))
		}
		return int32(0)
	}()
	_no_such_func = int32(0)
	_wrong_num_args = int32(0)
	_is_agg = int32(0)
	_enc = *(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pParse)) + 94))

	_zId = *(*uintptr)(unsafe.Pointer(_pExpr + 8))
	_nId = _211sqlite3Strlen30(tls, _zId)
	_pDef = _541sqlite3FindFunction(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _zId, _n, _enc, uint8(0))
	if _pDef != 0 {
		goto _22
	}

	_pDef = _541sqlite3FindFunction(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _zId, int32(-2), _enc, uint8(0))
	if _pDef != 0 {
		goto _24
	}

	_no_such_func = int32(1)
	goto _25

_24:
	_wrong_num_args = int32(1)
_25:
	goto _23

_22:
	_is_agg = bool2int((*(*uintptr)(unsafe.Pointer(_pDef + 32))) != 0)
	if (int32(*(*uint16)(unsafe.Pointer(_pDef + 2))) & int32(0x400)) == 0 {
		goto _26
	}

	{
		p := &(*(*uint32)(unsafe.Pointer(_pExpr + 4)))
		*p = uint32(uint32(*p) | uint32(266240))
	}
	if _n != int32(2) {
		goto _27
	}

	*(*int32)(unsafe.Pointer(_pExpr + 44)) = _1942exprProbability(tls, *(*uintptr)(unsafe.Pointer((_pList + 8) + 32)))
	if (*(*int32)(unsafe.Pointer(_pExpr + 44))) >= int32(0) {
		goto _29
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+31783 /* "second argument to likelihood() ..." */)
	(*(*int32)(unsafe.Pointer(_pNC + 44)))++
_29:
	goto _28

_27:
	*(*int32)(unsafe.Pointer(_pExpr + 44)) = func() int32 {
		if int32(*(*int8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pDef + 40))))) == int32('u') {
			return int32(8388608)
		}
		return int32(125829120)
	}()
_28:
_26:
	_auth = _1480sqlite3AuthCheck(tls, _pParse, int32(31), null, *(*uintptr)(unsafe.Pointer(_pDef + 40)), null)
	if _auth == int32(0) {
		goto _30
	}

	if _auth != int32(1) {
		goto _31
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+31854 /* "not authorized to use function: ..." */, *(*uintptr)(unsafe.Pointer(_pDef + 40)))
	(*(*int32)(unsafe.Pointer(_pNC + 44)))++
_31:
	*(*uint8)(unsafe.Pointer(_pExpr)) = uint8(101)
	return int32(1)

_30:
	if (int32(*(*uint16)(unsafe.Pointer(_pDef + 2))) & int32(10240)) == 0 {
		goto _32
	}

	{
		p := &(*(*uint32)(unsafe.Pointer(_pExpr + 4)))
		*p = uint32(uint32(*p) | uint32(0x80000))
	}
_32:
	if (int32(*(*uint16)(unsafe.Pointer(_pDef + 2))) & int32(0x800)) != int32(0) {
		goto _33
	}

	_1940notValid(tls, _pParse, _pNC, ts+31889 /* "non-deterministic functions" */, int32(34))
_33:
_23:
	if _is_agg == 0 || (int32(*(*uint16)(unsafe.Pointer(_pNC + 48)))&int32(0x1)) != int32(0) {
		goto _34
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+31917 /* "misuse of aggregate function %.*..." */, _nId, _zId)
	(*(*int32)(unsafe.Pointer(_pNC + 44)))++
	_is_agg = int32(0)
	goto _35

_34:
	if _no_such_func == 0 || int32(*(*uint8)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pParse))) + 176) + 5))) != int32(0) {
		goto _36
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+31953 /* "no such function: %.*s" */, _nId, _zId)
	(*(*int32)(unsafe.Pointer(_pNC + 44)))++
	goto _37

_36:
	if _wrong_num_args == 0 {
		goto _38
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+31976 /* "wrong number of arguments to fun..." */, _nId, _zId)
	(*(*int32)(unsafe.Pointer(_pNC + 44)))++
_38:
_37:
_35:
	if _is_agg == 0 {
		goto _39
	}

	{
		p := &(*(*uint16)(unsafe.Pointer(_pNC + 48)))
		*p = uint16(int32(*p) & int32(-2))
	}
_39:
	_1943sqlite3WalkExprList(tls, _pWalker, _pList)
	if _is_agg == 0 {
		goto _40
	}

	_pNC2 = _pNC
	*(*uint8)(unsafe.Pointer(_pExpr)) = uint8(146)
	*(*uint8)(unsafe.Pointer(_pExpr + 54)) = uint8(0)
_41:
	if _pNC2 == 0 || _1944sqlite3FunctionUsesThisSrc(tls, _pExpr, *(*uintptr)(unsafe.Pointer(_pNC2 + 8))) != 0 {
		goto _42
	}

	(*(*uint8)(unsafe.Pointer(_pExpr + 54)))++
	_pNC2 = *(*uintptr)(unsafe.Pointer(_pNC2 + 32))
	goto _41

_42:
	if _pNC2 == 0 {
		goto _43
	}

	{
		p := &(*(*uint16)(unsafe.Pointer(_pNC2 + 48)))
		*p = uint16(int32(*p) | (int32(0x10) | (int32(*(*uint16)(unsafe.Pointer(_pDef + 2))) & int32(0x1000))))
	}
_43:
	{
		p := &(*(*uint16)(unsafe.Pointer(_pNC + 48)))
		*p = uint16(int32(*p) | int32(0x1))
	}
_40:
	return int32(1)

_5:
_6:
_7:
	if ((*(*uint32)(unsafe.Pointer(_pExpr + 4))) & uint32(0x800)) == uint32(0) {
		goto _44
	}

	_nRef = *(*int32)(unsafe.Pointer(_pNC + 40))
	_1940notValid(tls, _pParse, _pNC, ts+32021 /* "subqueries" */, int32(38))
	_1881sqlite3WalkSelect(tls, _pWalker, *(*uintptr)(unsafe.Pointer(_pExpr + 32)))

	if _nRef == (*(*int32)(unsafe.Pointer(_pNC + 40))) {
		goto _45
	}

	{
		p := &(*(*uint32)(unsafe.Pointer(_pExpr + 4)))
		*p = uint32(uint32(*p) | uint32(0x20))
	}
	{
		p := &(*(*uint16)(unsafe.Pointer(_pNC + 48)))
		*p = uint16(int32(*p) | int32(0x40))
	}
_45:
_44:
	goto _1

_8:
	_1940notValid(tls, _pParse, _pNC, ts+32032 /* "parameters" */, int32(38))
	goto _1

_9:
_10:
_11:
_12:
_13:
_14:
_15:
_16:
_17:
	if (*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pParse))) + 97))) == 0 {
		goto _46
	}

	goto _1

_46:
	_nLeft = _1608sqlite3ExprVectorSize(tls, *(*uintptr)(unsafe.Pointer(_pExpr + 16)))
	if int32(*(*uint8)(unsafe.Pointer(_pExpr))) != int32(48) {
		goto _47
	}

	_nRight = _1608sqlite3ExprVectorSize(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pExpr + 32))) + 8)))
	if _nRight != _nLeft {
		goto _49
	}

	_nRight = _1608sqlite3ExprVectorSize(tls, *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pExpr + 32))) + 8) + 32)))
_49:
	goto _48

_47:
	_nRight = _1608sqlite3ExprVectorSize(tls, *(*uintptr)(unsafe.Pointer(_pExpr + 24)))
_48:
	if _nLeft == _nRight {
		goto _50
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+31146 /* "row value misused" */)
_50:
	goto _1

_1:
	if ((*(*int32)(unsafe.Pointer(_pParse + 48))) != 0) || ((*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pParse))) + 97))) != 0) {
		return int32(2)
	}

	return int32(0)
}

// _1813resolveSelectStep is defined at sqlite3.c:91419:12
func _1813resolveSelectStep(tls crt.TLS, _pWalker uintptr /* *TWalker = SWalker */, _p uintptr /* *TSelect = SSelect */) (r int32) {
	esc := crt.MustMalloc(56)
	var (
		_pOuterNC      uintptr // *TNameContext = SNameContext
		_sNC           = esc   // *TNameContext = SNameContext
		_isCompound    int32
		_nCompound     int32
		_pParse        uintptr // *TParse = SParse
		_i             int32
		_pGroupBy      uintptr // *TExprList = SExprList
		_pLeftmost     uintptr // *TSelect = SSelect
		_db            uintptr // *Tsqlite3 = Ssqlite3
		_pSub          uintptr // *TSelect = SSelect
		_pItem         uintptr // *SSrcList_item
		_pNC           uintptr // *TNameContext = SNameContext
		_nRef          int32
		_zSavedContext uintptr // *int8
		_1pItem        uintptr // *SSrcList_item
		_2pSub         uintptr // *TSelect = SSelect
		_3pItem        uintptr // *SExprList_item
	)
	defer crt.Free(esc)

	if ((*(*uint32)(unsafe.Pointer(_p + 12))) & uint32(0x4)) == 0 {
		goto _1
	}

	return int32(1)

_1:
	_pOuterNC = *(*uintptr)(unsafe.Pointer(_pWalker + 40))
	_pParse = *(*uintptr)(unsafe.Pointer(_pWalker))
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	if ((*(*uint32)(unsafe.Pointer(_p + 12))) & uint32(0x40)) != uint32(0) {
		goto _2
	}

	_1530sqlite3SelectPrep(tls, _pParse, _p, _pOuterNC)
	if ((*(*int32)(unsafe.Pointer(_pParse + 48))) != 0) || ((*(*uint8)(unsafe.Pointer(_db + 97))) != 0) {
		return int32(2)
	}

	return int32(1)

_2:
	_isCompound = bool2int((*(*uintptr)(unsafe.Pointer(_p + 72))) != 0)
	_nCompound = int32(0)
	_pLeftmost = _p
_3:
	if _p == 0 {
		goto _4
	}

	{
		p := &(*(*uint32)(unsafe.Pointer(_p + 12)))
		*p = uint32(uint32(*p) | uint32(0x4))
	}
	crt.Xmemset(tls, _sNC, int32(0), uint64(56))
	*(*uintptr)(unsafe.Pointer(_sNC)) = _pParse
	if _1588sqlite3ResolveExprNames(tls, _sNC, *(*uintptr)(unsafe.Pointer(_p + 88))) == 0 && _1588sqlite3ResolveExprNames(tls, _sNC, *(*uintptr)(unsafe.Pointer(_p + 96))) == 0 {
		goto _5
	}

	return int32(2)

_5:
	if ((*(*uint32)(unsafe.Pointer(_p + 12))) & uint32(0x10000)) == 0 {
		goto _6
	}

	_pSub = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 32))) + 8 + 40))

	*(*uintptr)(unsafe.Pointer(_pSub + 64)) = *(*uintptr)(unsafe.Pointer(_p + 64))
	*(*uintptr)(unsafe.Pointer(_p + 64)) = null
_6:
	_i = int32(0)
_7:
	if _i >= (*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_p + 32))))) {
		goto _9
	}

	_pItem = ((*(*uintptr)(unsafe.Pointer(_p + 32))) + 8) + 112*uintptr(_i)
	if (*(*uintptr)(unsafe.Pointer(_pItem + 40))) == 0 {
		goto _10
	}

	_nRef = int32(0)
	_zSavedContext = *(*uintptr)(unsafe.Pointer(_pParse + 528))
	_pNC = _pOuterNC
_11:
	if _pNC == 0 {
		goto _13
	}

	_nRef = int32(_nRef + (*(*int32)(unsafe.Pointer(_pNC + 40))))
	_pNC = *(*uintptr)(unsafe.Pointer(_pNC + 32))
	goto _11

_13:
	if (*(*uintptr)(unsafe.Pointer(_pItem + 16))) == 0 {
		goto _14
	}

	*(*uintptr)(unsafe.Pointer(_pParse + 528)) = *(*uintptr)(unsafe.Pointer(_pItem + 16))
_14:
	_1752sqlite3ResolveSelectNames(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pItem + 40)), _pOuterNC)
	*(*uintptr)(unsafe.Pointer(_pParse + 528)) = _zSavedContext
	if (*(*int32)(unsafe.Pointer(_pParse + 48))) == 0 && (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _15
	}

	return int32(2)

_15:
	_pNC = _pOuterNC
_16:
	if _pNC == 0 {
		goto _18
	}

	_nRef = int32(_nRef - (*(*int32)(unsafe.Pointer(_pNC + 40))))
	_pNC = *(*uintptr)(unsafe.Pointer(_pNC + 32))
	goto _16

_18:
	set204b(&(*(*uint8)(unsafe.Pointer((_pItem + 60) + 1))), uint32(bool2int(_nRef != int32(0))))
_10:
	_i++
	goto _7

_9:
	*(*uint16)(unsafe.Pointer(_sNC + 48)) = uint16(0x1)
	*(*uintptr)(unsafe.Pointer(_sNC + 8)) = *(*uintptr)(unsafe.Pointer(_p + 32))
	*(*uintptr)(unsafe.Pointer(_sNC + 32)) = _pOuterNC
	if _1613sqlite3ResolveExprListNames(tls, _sNC, *(*uintptr)(unsafe.Pointer(_p))) == 0 {
		goto _19
	}

	return int32(2)

_19:
	_pGroupBy = *(*uintptr)(unsafe.Pointer(_p + 48))
	if _pGroupBy == 0 && (int32(*(*uint16)(unsafe.Pointer(_sNC + 48)))&int32(0x10)) == int32(0) {
		goto _20
	}

	{
		p := &(*(*uint32)(unsafe.Pointer(_p + 12)))
		*p = uint32(uint32(*p) | uint32(int32(0x8)|(int32(*(*uint16)(unsafe.Pointer(_sNC + 48)))&int32(0x1000))))
	}
	goto _21

_20:
	{
		p := &(*(*uint16)(unsafe.Pointer(_sNC + 48)))
		*p = uint16(int32(*p) & int32(-2))
	}
_21:
	if (*(*uintptr)(unsafe.Pointer(_p + 56))) == 0 || _pGroupBy != 0 {
		goto _22
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+32043 /* "a GROUP BY clause is required be..." */)
	return int32(2)

_22:
	*(*uintptr)(unsafe.Pointer(_sNC + 16)) = *(*uintptr)(unsafe.Pointer(_p))
	if _1588sqlite3ResolveExprNames(tls, _sNC, *(*uintptr)(unsafe.Pointer(_p + 56))) == 0 {
		goto _23
	}

	return int32(2)

_23:
	if _1588sqlite3ResolveExprNames(tls, _sNC, *(*uintptr)(unsafe.Pointer(_p + 40))) == 0 {
		goto _24
	}

	return int32(2)

_24:
	_i = int32(0)
_25:
	if _i >= (*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_p + 32))))) {
		goto _27
	}

	_1pItem = ((*(*uintptr)(unsafe.Pointer(_p + 32))) + 8) + 112*uintptr(_i)
	if (uint32((*(*uint8)(unsafe.Pointer((_1pItem + 60) + 1)))>>2)<<31>>31) == 0 || _1613sqlite3ResolveExprListNames(tls, _sNC, *(*uintptr)(unsafe.Pointer(_1pItem + 96))) == 0 {
		goto _28
	}

	return int32(2)

_28:
	_i++
	goto _25

_27:
	*(*uintptr)(unsafe.Pointer(_sNC + 32)) = null
	{
		p := &(*(*uint16)(unsafe.Pointer(_sNC + 48)))
		*p = uint16(int32(*p) | int32(0x1))
	}
	if ((*(*uint32)(unsafe.Pointer(_p + 12))) & uint32(0x10000)) == 0 {
		goto _29
	}

	_2pSub = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 32))) + 8 + 40))
	*(*uintptr)(unsafe.Pointer(_p + 64)) = *(*uintptr)(unsafe.Pointer(_2pSub + 64))
	*(*uintptr)(unsafe.Pointer(_2pSub + 64)) = null
_29:
	if _isCompound > _nCompound || _1945resolveOrderGroupBy(tls, _sNC, _p, *(*uintptr)(unsafe.Pointer(_p + 64)), ts+16440 /* "ORDER" */) == 0 {
		goto _30
	}

	return int32(2)

_30:
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _31
	}

	return int32(2)

_31:
	if _pGroupBy == 0 {
		goto _32
	}

	if _1945resolveOrderGroupBy(tls, _sNC, _p, _pGroupBy, ts+16277 /* "GROUP" */) == 0 && (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _33
	}

	return int32(2)

_33:
	_i = int32(0)
	_3pItem = _pGroupBy + 8
_34:
	if _i >= (*(*int32)(unsafe.Pointer(_pGroupBy))) {
		goto _36
	}

	if ((*(*uint32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_3pItem)) + 4))) & uint32(0x2)) == uint32(0) {
		goto _37
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+32087 /* "aggregate functions are not allo..." */)
	return int32(2)

_37:
	_i++
	_3pItem += 32
	goto _34

_36:
_32:
	if (*(*uintptr)(unsafe.Pointer(_p + 80))) == 0 || (*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_p))))) == (*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_p + 80))))))) {
		goto _38
	}

	_1946sqlite3SelectWrongNumTermsError(tls, _pParse, *(*uintptr)(unsafe.Pointer(_p + 80)))
	return int32(2)

_38:
	_p = *(*uintptr)(unsafe.Pointer(_p + 72))
	_nCompound++
	goto _3

_4:
	if _isCompound == 0 || _1947resolveCompoundOrderBy(tls, _pParse, _pLeftmost) == 0 {
		goto _39
	}

	return int32(2)

_39:
	return int32(1)
}

// _1814sqlite3ColumnDefault is defined at sqlite3.c:125118:21
func _1814sqlite3ColumnDefault(tls crt.TLS, _v uintptr /* *TVdbe = SVdbe */, _pTab uintptr /* *TTable = STable */, _i int32, _iReg int32) {
	esc := crt.MustMalloc(8)
	var (
		_pValue = esc // **Tsqlite3_value = Ssqlite3_value
		_enc    uint8
		_pCol   uintptr // *TColumn = SColumn
	)
	defer crt.Free(esc)

	if (*(*uintptr)(unsafe.Pointer(_pTab + 24))) != 0 {
		goto _1
	}

	*(*uintptr)(unsafe.Pointer(_pValue)) = 0
	_enc = *(*uint8)(unsafe.Pointer(_388sqlite3VdbeDb(tls, _v) + 94))
	_pCol = (*(*uintptr)(unsafe.Pointer(_pTab + 8))) + 32*uintptr(_i)

	_1676sqlite3ValueFromExpr(tls, _388sqlite3VdbeDb(tls, _v), *(*uintptr)(unsafe.Pointer(_pCol + 8)), _enc, uint8(*(*int8)(unsafe.Pointer(_pCol + 25))), _pValue)
	if (*(*uintptr)(unsafe.Pointer(_pValue))) == 0 {
		goto _2
	}

	_1802sqlite3VdbeAppendP4(tls, _v, *(*uintptr)(unsafe.Pointer(_pValue)), int32(-11))
_2:
_1:
	if int32(*(*int8)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pTab + 8))) + 32*uintptr(_i)) + 25))) != int32('E') {
		goto _3
	}

	_1489sqlite3VdbeAddOp1(tls, _v, int32(81), _iReg)
_3:
}

// _1815sqlite3ExprCachePinRegister is defined at sqlite3.c:95060:13
func _1815sqlite3ExprCachePinRegister(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _iReg int32) {
	var (
		_i int32
		_p uintptr // *SyColCache
	)
	_i = int32(0)
	_p = _pParse + 196
_1:
	if _i >= int32(*(*uint8)(unsafe.Pointer(_pParse + 37))) {
		goto _3
	}

	if (*(*int32)(unsafe.Pointer(_p + 12))) != _iReg {
		goto _4
	}

	*(*uint8)(unsafe.Pointer(_p + 6)) = uint8(0)
_4:
	_i++
	_p += 20
	goto _1

_3:
}

// _1816sqlite3ExprCacheStore is defined at sqlite3.c:94950:21
func _1816sqlite3ExprCacheStore(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _iTab int32, _iCol int32, _iReg int32) {
	var (
		_i      int32
		_minLru int32
		_idxLru int32
		_p      uintptr // *SyColCache
	)

	if (int32(*(*uint16)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pParse)) + 92))) & int32(0x2)) == int32(0) {
		goto _1
	}

	return

_1:
	if int32(*(*uint8)(unsafe.Pointer(_pParse + 37))) < int32(10) {
		goto _2
	}

	_minLru = int32(0x7fffffff)
	_idxLru = int32(-1)
	_i = int32(0)
	_p = _pParse + 196
_4:
	if _i >= int32(10) {
		goto _6
	}

	if (*(*int32)(unsafe.Pointer(_p + 16))) >= _minLru {
		goto _7
	}

	_idxLru = _i
	_minLru = *(*int32)(unsafe.Pointer(_p + 16))
_7:
	_i++
	_p += 20
	goto _4

_6:
	_p = (_pParse + 196) + 20*uintptr(_idxLru)
	goto _3

_2:
	_p = (_pParse + 196) + 20*uintptr(postinc163(&(*(*uint8)(unsafe.Pointer(_pParse + 37)))))
_3:
	*(*int32)(unsafe.Pointer(_p + 8)) = *(*int32)(unsafe.Pointer(_pParse + 72))
	*(*int32)(unsafe.Pointer(_p)) = _iTab
	*(*int16)(unsafe.Pointer(_p + 4)) = int16(_iCol)
	*(*int32)(unsafe.Pointer(_p + 12)) = _iReg
	*(*uint8)(unsafe.Pointer(_p + 6)) = uint8(0)
	*(*int32)(unsafe.Pointer(_p + 16)) = postinc7(&(*(*int32)(unsafe.Pointer(_pParse + 76))))
}

// _1817sqlite3ExprAffinity is defined at sqlite3.c:91846:21
func _1817sqlite3ExprAffinity(tls crt.TLS, _pExpr uintptr /* *TExpr = SExpr */) (r int8) {
	var _op int32

	_pExpr = _1510sqlite3ExprSkipCollate(tls, _pExpr)
	if ((*(*uint32)(unsafe.Pointer(_pExpr + 4))) & uint32(0x200)) == 0 {
		goto _1
	}

	return int8(0)

_1:
	_op = int32(*(*uint8)(unsafe.Pointer(_pExpr)))
	if _op != int32(119) {
		goto _2
	}

	return _1817sqlite3ExprAffinity(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pExpr + 32))))) + 8)))

_2:
	if _op != int32(150) {
		goto _3
	}

	_op = int32(*(*uint8)(unsafe.Pointer(_pExpr + 54)))
_3:
	if _op != int32(36) {
		goto _4
	}

	return _1505sqlite3AffinityType(tls, *(*uintptr)(unsafe.Pointer(_pExpr + 8)), null)

_4:
	if _op != int32(147) && _op != int32(145) || (*(*uintptr)(unsafe.Pointer(_pExpr + 64))) == 0 {
		goto _5
	}

	return _1948sqlite3TableColumnAffinity(tls, *(*uintptr)(unsafe.Pointer(_pExpr + 64)), int32(*(*int16)(unsafe.Pointer(_pExpr + 48))))

_5:
	if _op != int32(152) {
		goto _6
	}

	return _1817sqlite3ExprAffinity(tls, *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pExpr + 16))) + 32))))) + 8) + 32*uintptr(*(*int16)(unsafe.Pointer(_pExpr + 48))))))

_6:
	return *(*int8)(unsafe.Pointer(_pExpr + 1))
}

// _1818autoIncrementEnd is defined at sqlite3.c:110181:29
func _1818autoIncrementEnd(tls crt.TLS, _pParse uintptr /* *TParse = SParse */) {
	var (
		_p     uintptr // *TAutoincInfo = SAutoincInfo
		_v     uintptr // *TVdbe = SVdbe
		_db    uintptr // *Tsqlite3 = Ssqlite3
		_aOp   uintptr // *TVdbeOp = SVdbeOp
		_pDb   uintptr // *TDb = SDb
		_iRec  int32
		_memId int32
	)
	_v = *(*uintptr)(unsafe.Pointer(_pParse + 16))
	_db = *(*uintptr)(unsafe.Pointer(_pParse))

	_p = *(*uintptr)(unsafe.Pointer(_pParse + 152))
_1:
	if _p == 0 {
		goto _3
	}

	_pDb = (*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(*(*int32)(unsafe.Pointer(_p + 16)))
	_memId = *(*int32)(unsafe.Pointer(_p + 20))
	_iRec = _1562sqlite3GetTempReg(tls, _pParse)

	_1647sqlite3OpenTable(tls, _pParse, int32(0), *(*int32)(unsafe.Pointer(_p + 16)), *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pDb + 24))) + 104)), int32(105))
	_aOp = _1073sqlite3VdbeAddOpList(tls, _v, int32(5), _1950autoIncEnd, _1949iLn)
	if _aOp != 0 {
		goto _4
	}

	goto _3

_4:
	*(*int32)(unsafe.Pointer(_aOp + 4)) = _memId + int32(1)
	*(*int32)(unsafe.Pointer((_aOp + 24) + 8)) = _memId + int32(1)
	*(*int32)(unsafe.Pointer((_aOp + 48) + 4)) = _memId - int32(1)
	*(*int32)(unsafe.Pointer((_aOp + 48) + 12)) = _iRec
	*(*int32)(unsafe.Pointer((_aOp + 72) + 8)) = _iRec
	*(*int32)(unsafe.Pointer((_aOp + 72) + 12)) = _memId + int32(1)
	*(*uint16)(unsafe.Pointer((_aOp + 72) + 2)) = uint16(0x8)
	_1563sqlite3ReleaseTempReg(tls, _pParse, _iRec)
	_p = *(*uintptr)(unsafe.Pointer(_p))
	goto _1

_3:
}

// _1819getRowTrigger is defined at sqlite3.c:124857:19
func _1819getRowTrigger(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pTrigger uintptr /* *TTrigger = STrigger */, _pTab uintptr /* *TTable = STable */, _orconf int32) (r uintptr /* *TTriggerPrg = STriggerPrg */) {
	var (
		_pRoot uintptr // *TParse = SParse
		_pPrg  uintptr // *TTriggerPrg = STriggerPrg
	)
	_pRoot = func() uintptr {
		if (*(*uintptr)(unsafe.Pointer(_pParse + 160))) != 0 {
			return *(*uintptr)(unsafe.Pointer(_pParse + 160))
		}
		return _pParse
	}()

	_pPrg = *(*uintptr)(unsafe.Pointer(_pRoot + 568))
_1:
	if _pPrg == 0 || (*(*uintptr)(unsafe.Pointer(_pPrg))) == _pTrigger && (*(*int32)(unsafe.Pointer(_pPrg + 24))) == _orconf {
		goto _3
	}

	_pPrg = *(*uintptr)(unsafe.Pointer(_pPrg + 8))
	goto _1

_3:
	if _pPrg != 0 {
		goto _4
	}

	_pPrg = _1951codeRowTrigger(tls, _pParse, _pTrigger, _pTab, _orconf)
_4:
	return _pPrg
}

// _1820sqlite3CodeRowTriggerDirect is defined at sqlite3.c:124891:21
func _1820sqlite3CodeRowTriggerDirect(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _p uintptr /* *TTrigger = STrigger */, _pTab uintptr /* *TTable = STable */, _reg int32, _orconf int32, _ignoreJump int32) {
	var (
		_v          uintptr // *TVdbe = SVdbe
		_pPrg       uintptr // *TTriggerPrg = STriggerPrg
		_bRecursive int32
	)
	_v = _1472sqlite3GetVdbe(tls, _pParse)
	_pPrg = _1819getRowTrigger(tls, _pParse, _p, _pTab, _orconf)

	if _pPrg == 0 {
		goto _1
	}

	_bRecursive = bool2int(((*(*uintptr)(unsafe.Pointer(_p))) != 0) && (uint32(0) == ((*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pParse))) + 48))) & uint32(0x2000))))
	_1475sqlite3VdbeAddOp4(tls, _v, int32(46), _reg, _ignoreJump, preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56)))), *(*uintptr)(unsafe.Pointer(_pPrg + 16)), int32(-4))
	_1072sqlite3VdbeChangeP5(tls, _v, uint16(uint8(_bRecursive)))
_1:
}

// _1821checkConstraintUnchanged is defined at sqlite3.c:110978:12
func _1821checkConstraintUnchanged(tls crt.TLS, _pExpr uintptr /* *TExpr = SExpr */, _aiChng uintptr /* *int32 */, _chngRowid int32) (r int32) {
	esc := crt.MustMalloc(48)
	var _w = esc // *TWalker = SWalker
	defer crt.Free(esc)
	crt.Xmemset(tls, _w, int32(0), uint64(48))
	*(*uint8)(unsafe.Pointer(_w + 36)) = uint8(0)
	*(*uintptr)(unsafe.Pointer(_w + 8)) = fp56(_1952checkConstraintExprNode)
	*(*uintptr)(unsafe.Pointer(_w + 40)) = _aiChng
	_1795sqlite3WalkExpr(tls, _w, _pExpr)
	if _chngRowid != 0 {
		goto _1
	}

	{
		p := &(*(*uint8)(unsafe.Pointer(_w + 36)))
		*p = uint8(int32(*p) & int32(-3))
	}
_1:
	return bool2int((*(*uint8)(unsafe.Pointer(_w + 36))) == 0)
}

// _1822sqlite3RowidConstraint is defined at sqlite3.c:104890:21
func _1822sqlite3RowidConstraint(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _onError int32, _pTab uintptr /* *TTable = STable */) {
	var (
		_zMsg uintptr // *int8
		_rc   int32
	)
	if int32(*(*int16)(unsafe.Pointer(_pTab + 68))) < int32(0) {
		goto _1
	}

	_zMsg = _226sqlite3MPrintf(tls, *(*uintptr)(unsafe.Pointer(_pParse)), ts+15733 /* "%s.%s" */, *(*uintptr)(unsafe.Pointer(_pTab)), *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTab + 8))) + 32*uintptr(*(*int16)(unsafe.Pointer(_pTab + 68))))))
	_rc = int32(1555)
	goto _2

_1:
	_zMsg = _226sqlite3MPrintf(tls, *(*uintptr)(unsafe.Pointer(_pParse)), ts+32146 /* "%s.rowid" */, *(*uintptr)(unsafe.Pointer(_pTab)))
	_rc = int32(2579)
_2:
	_1745sqlite3HaltConstraint(tls, _pParse, _rc, _onError, _zMsg, int8(-7), uint8(2))
}

// _1823sqlite3MultiWrite is defined at sqlite3.c:104804:21
func _1823sqlite3MultiWrite(tls crt.TLS, _pParse uintptr /* *TParse = SParse */) {
	var _pToplevel uintptr // *TParse = SParse

	_pToplevel = func() uintptr {
		if (*(*uintptr)(unsafe.Pointer(_pParse + 160))) != 0 {
			return *(*uintptr)(unsafe.Pointer(_pParse + 160))
		}
		return _pParse
	}()
	*(*uint8)(unsafe.Pointer(_pToplevel + 32)) = uint8(1)
}

// _1824sqlite3ExprIfFalseDup is defined at sqlite3.c:96503:21
func _1824sqlite3ExprIfFalseDup(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pExpr uintptr /* *TExpr = SExpr */, _dest int32, _jumpIfNull int32) {
	var (
		_db    uintptr // *Tsqlite3 = Ssqlite3
		_pCopy uintptr // *TExpr = SExpr
	)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_pCopy = _1507sqlite3ExprDup(tls, _db, _pExpr, int32(0))
	if int32(*(*uint8)(unsafe.Pointer(_db + 97))) != int32(0) {
		goto _1
	}

	_1571sqlite3ExprIfFalse(tls, _pParse, _pCopy, _dest, _jumpIfNull)
_1:
	_777sqlite3ExprDelete(tls, _db, _pCopy)
}

// _1825sqlite3ExprCodeCopy is defined at sqlite3.c:96030:21
func _1825sqlite3ExprCodeCopy(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pExpr uintptr /* *TExpr = SExpr */, _target int32) {
	var _db uintptr // *Tsqlite3 = Ssqlite3

	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_pExpr = _1507sqlite3ExprDup(tls, _db, _pExpr, int32(0))
	if (*(*uint8)(unsafe.Pointer(_db + 97))) != 0 {
		goto _1
	}

	_1478sqlite3ExprCode(tls, _pParse, _pExpr, _target)
_1:
	_777sqlite3ExprDelete(tls, _db, _pExpr)
}

// _1826sqlite3AuthReadCol is defined at sqlite3.c:100528:20
func _1826sqlite3AuthReadCol(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _zTab uintptr /* *int8 */, _zCol uintptr /* *int8 */, _iDb int32) (r int32) {
	var (
		_db  uintptr // *Tsqlite3 = Ssqlite3
		_zDb uintptr // *int8
		_rc  int32
		_z   uintptr // *int8
	)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_zDb = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)))
	if (*(*uint8)(unsafe.Pointer((_db + 176) + 5))) == 0 {
		goto _1
	}

	return int32(0)

_1:
	_rc = fn212(*(*uintptr)(unsafe.Pointer(_db + 408)))(tls, *(*uintptr)(unsafe.Pointer(_db + 416)), int32(20), _zTab, _zCol, _zDb, *(*uintptr)(unsafe.Pointer(_pParse + 528)))
	if _rc != int32(1) {
		goto _2
	}

	_z = Xsqlite3_mprintf(tls, ts+15733 /* "%s.%s" */, _zTab, _zCol)
	if (*(*int32)(unsafe.Pointer(_db + 40))) <= int32(2) && _iDb == int32(0) {
		goto _4
	}

	_z = Xsqlite3_mprintf(tls, ts+32155 /* "%s.%z" */, _zDb, _z)
_4:
	_550sqlite3ErrorMsg(tls, _pParse, ts+32161 /* "access to %z is prohibited" */, _z)
	*(*int32)(unsafe.Pointer(_pParse + 24)) = int32(23)
	goto _3

_2:
	if _rc == int32(2) || _rc == int32(0) {
		goto _5
	}

	_1729sqliteAuthBadReturnCode(tls, _pParse)
_5:
_3:
	return _rc
}

// _1827fkLookupParent is defined at sqlite3.c:108751:13
func _1827fkLookupParent(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _iDb int32, _pTab uintptr /* *TTable = STable */, _pIdx uintptr /* *TIndex = SIndex */, _pFKey uintptr /* *TFKey = SFKey */, _aiCol uintptr /* *int32 */, _regData int32, _nIncr int32, _isIgnore int32) {
	var (
		_i          int32
		_v          uintptr // *TVdbe = SVdbe
		_iCur       int32
		_iOk        int32
		_iReg       int32
		_iMustBeInt int32
		_regTemp    int32
		_nCol       int32
		_1regTemp   int32
		_regRec     int32
		_iJump      int32
		_iChild     int32
		_iParent    int32
	)
	_v = _1472sqlite3GetVdbe(tls, _pParse)
	_iCur = (*(*int32)(unsafe.Pointer(_pParse + 52))) - int32(1)
	_iOk = _1541sqlite3VdbeMakeLabel(tls, _v)
	if _nIncr >= int32(0) {
		goto _1
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(47), int32(*(*uint8)(unsafe.Pointer(_pFKey + 44))), _iOk)
_1:
	_i = int32(0)
_2:
	if _i >= (*(*int32)(unsafe.Pointer(_pFKey + 40))) {
		goto _4
	}

	_iReg = ((*(*int32)(unsafe.Pointer(_aiCol + 4*uintptr(_i)))) + _regData) + int32(1)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(50), _iReg, _iOk)
	_i++
	goto _2

_4:
	if _isIgnore != int32(0) {
		goto _5
	}

	if _pIdx != 0 {
		goto _6
	}

	_regTemp = _1562sqlite3GetTempReg(tls, _pParse)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(76), ((*(*int32)(unsafe.Pointer(_aiCol)))+int32(1))+_regData, _regTemp)
	_iMustBeInt = _1240sqlite3VdbeAddOp2(tls, _v, int32(17), _regTemp, int32(0))
	if _pTab != (*(*uintptr)(unsafe.Pointer(_pFKey))) || _nIncr != int32(1) {
		goto _8
	}

	_1241sqlite3VdbeAddOp3(tls, _v, int32(53), _regData, _iOk, _regTemp)
	_1072sqlite3VdbeChangeP5(tls, _v, uint16(0x90))
_8:
	_1647sqlite3OpenTable(tls, _pParse, _iCur, _iDb, _pTab, int32(104))
	_1241sqlite3VdbeAddOp3(tls, _v, int32(32), _iCur, int32(0), _regTemp)
	_1479sqlite3VdbeGoto(tls, _v, _iOk)
	_1474sqlite3VdbeJumpHere(tls, _v, _1496sqlite3VdbeCurrentAddr(tls, _v)-int32(2))
	_1474sqlite3VdbeJumpHere(tls, _v, _iMustBeInt)
	_1563sqlite3ReleaseTempReg(tls, _pParse, _regTemp)
	goto _7

_6:
	_nCol = *(*int32)(unsafe.Pointer(_pFKey + 40))
	_1regTemp = _1558sqlite3GetTempRange(tls, _pParse, _nCol)
	_regRec = _1562sqlite3GetTempReg(tls, _pParse)
	_1241sqlite3VdbeAddOp3(tls, _v, int32(104), _iCur, *(*int32)(unsafe.Pointer(_pIdx + 88)), _iDb)
	_1589sqlite3VdbeSetP4KeyInfo(tls, _pParse, _pIdx)
	_i = int32(0)
_9:
	if _i >= _nCol {
		goto _11
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(75), ((*(*int32)(unsafe.Pointer(_aiCol + 4*uintptr(_i))))+int32(1))+_regData, _1regTemp+_i)
	_i++
	goto _9

_11:
	if _pTab != (*(*uintptr)(unsafe.Pointer(_pFKey))) || _nIncr != int32(1) {
		goto _12
	}

	_iJump = (_1496sqlite3VdbeCurrentAddr(tls, _v) + _nCol) + int32(1)
	_i = int32(0)
_13:
	if _i >= _nCol {
		goto _15
	}

	_iChild = ((*(*int32)(unsafe.Pointer(_aiCol + 4*uintptr(_i)))) + int32(1)) + _regData
	_iParent = (int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 8))) + 2*uintptr(_i)))) + int32(1)) + _regData

	if int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 8))) + 2*uintptr(_i)))) != int32(*(*int16)(unsafe.Pointer(_pTab + 68))) {
		goto _16
	}

	_iParent = _regData
_16:
	_1241sqlite3VdbeAddOp3(tls, _v, int32(52), _iChild, _iJump, _iParent)
	_1072sqlite3VdbeChangeP5(tls, _v, uint16(0x10))
	_i++
	goto _13

_15:
	_1479sqlite3VdbeGoto(tls, _v, _iOk)
_12:
	_1475sqlite3VdbeAddOp4(tls, _v, int32(99), _1regTemp, _nCol, _regRec, _1593sqlite3IndexAffinityStr(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _pIdx), _nCol)
	_1071sqlite3VdbeAddOp4Int(tls, _v, int32(30), _iCur, _iOk, _regRec, int32(0))
	_1563sqlite3ReleaseTempReg(tls, _pParse, _regRec)
	_1564sqlite3ReleaseTempRange(tls, _pParse, _1regTemp, _nCol)
_7:
_5:
	if (*(*uint8)(unsafe.Pointer(_pFKey + 44))) != 0 || (*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pParse))) + 48)))&uint32(0x80000) != 0 || (*(*uintptr)(unsafe.Pointer(_pParse + 160))) != 0 || (*(*uint8)(unsafe.Pointer(_pParse + 32))) != 0 {
		goto _17
	}

	_1745sqlite3HaltConstraint(tls, _pParse, int32(787), int32(2), null, int8(-1), uint8(4))
	goto _18

_17:
	if _nIncr <= int32(0) || int32(*(*uint8)(unsafe.Pointer(_pFKey + 44))) != int32(0) {
		goto _19
	}

	_1495sqlite3MayAbort(tls, _pParse)
_19:
	_1240sqlite3VdbeAddOp2(tls, _v, int32(145), int32(*(*uint8)(unsafe.Pointer(_pFKey + 44))), _nIncr)
_18:
	_1569sqlite3VdbeResolveLabel(tls, _v, _iOk)
	_1489sqlite3VdbeAddOp1(tls, _v, int32(112), _iCur)
}

// _1828isSetNullAction is defined at sqlite3.c:109255:12
func _1828isSetNullAction(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pFKey uintptr /* *TFKey = SFKey */) (r int32) {
	var (
		_pTop uintptr // *TParse = SParse
		_p    uintptr // *TTrigger = STrigger
	)
	_pTop = func() uintptr {
		if (*(*uintptr)(unsafe.Pointer(_pParse + 160))) != 0 {
			return *(*uintptr)(unsafe.Pointer(_pParse + 160))
		}
		return _pParse
	}()
	if (*(*uintptr)(unsafe.Pointer(_pTop + 568))) == 0 {
		goto _1
	}

	_p = *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pTop + 568))))
	if (_p != (*(*uintptr)(unsafe.Pointer(_pFKey + 48))) || int32(*(*uint8)(unsafe.Pointer(_pFKey + 45))) != int32(7)) && (_p != (*(*uintptr)(unsafe.Pointer((_pFKey + 48) + 8))) || int32(*(*uint8)(unsafe.Pointer((_pFKey + 45) + 1))) != int32(7)) {
		goto _2
	}

	return int32(1)

_2:
_1:
	return int32(0)
}

// _1829fkScanChildren is defined at sqlite3.c:108971:13
func _1829fkScanChildren(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pSrc uintptr /* *TSrcList = SSrcList */, _pTab uintptr /* *TTable = STable */, _pIdx uintptr /* *TIndex = SIndex */, _pFKey uintptr /* *TFKey = SFKey */, _aiCol uintptr /* *int32 */, _regData int32, _nIncr int32) {
	esc := crt.MustMalloc(56)
	var (
		_db           uintptr // *Tsqlite3 = Ssqlite3
		_i            int32
		_pWhere       uintptr // *TExpr = SExpr
		_sNameContext = esc   // *TNameContext = SNameContext
		_pWInfo       uintptr // *TWhereInfo = SWhereInfo
		_iFkIfZero    int32
		_v            uintptr // *TVdbe = SVdbe
		_pLeft        uintptr // *TExpr = SExpr
		_pRight       uintptr // *TExpr = SExpr
		_pEq          uintptr // *TExpr = SExpr
		_iCol         int16
		_zCol         uintptr // *int8
		_pNe          uintptr // *TExpr = SExpr
		_1pLeft       uintptr // *TExpr = SExpr
		_2pRight      uintptr // *TExpr = SExpr
		_3pEq         uintptr // *TExpr = SExpr
		_pAll         uintptr // *TExpr = SExpr
		_pPk          uintptr // *TIndex = SIndex
		_4iCol        int16
	)
	defer crt.Free(esc)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_pWhere = 0
	_iFkIfZero = int32(0)
	_v = _1472sqlite3GetVdbe(tls, _pParse)

	if _nIncr >= int32(0) {
		goto _1
	}

	_iFkIfZero = _1240sqlite3VdbeAddOp2(tls, _v, int32(47), int32(*(*uint8)(unsafe.Pointer(_pFKey + 44))), int32(0))
_1:
	_i = int32(0)
_2:
	if _i >= (*(*int32)(unsafe.Pointer(_pFKey + 40))) {
		goto _4
	}

	_iCol = int16(func() int32 {
		if _pIdx != 0 {
			return int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 8))) + 2*uintptr(_i))))
		}
		return int32(-1)
	}())
	_pLeft = _1953exprTableRegister(tls, _pParse, _pTab, _regData, _iCol)
	_iCol = int16(func() int32 {
		if _aiCol != 0 {
			return *(*int32)(unsafe.Pointer(_aiCol + 4*uintptr(_i)))
		}
		return *(*int32)(unsafe.Pointer(_pFKey + 64))
	}())

	_zCol = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pFKey))) + 8))) + 32*uintptr(_iCol)))
	_pRight = _1334sqlite3Expr(tls, _db, int32(59), _zCol)
	_pEq = _1316sqlite3PExpr(tls, _pParse, int32(53), _pLeft, _pRight)
	_pWhere = _1508sqlite3ExprAnd(tls, _db, _pWhere, _pEq)
	_i++
	goto _2

_4:
	if _pTab != (*(*uintptr)(unsafe.Pointer(_pFKey))) || _nIncr <= int32(0) {
		goto _5
	}

	if ((*(*uint32)(unsafe.Pointer(_pTab + 64))) & uint32(0x20)) != uint32(0) {
		goto _6
	}

	_1pLeft = _1953exprTableRegister(tls, _pParse, _pTab, _regData, int16(-1))
	_2pRight = _1954exprTableColumn(tls, _db, _pTab, *(*int32)(unsafe.Pointer(_pSrc + 8 + 64)), int16(-1))
	_pNe = _1316sqlite3PExpr(tls, _pParse, int32(52), _1pLeft, _2pRight)
	goto _7

_6:
	_pAll = 0
	_pPk = _1060sqlite3PrimaryKeyIndex(tls, _pTab)

	_i = int32(0)
_8:
	if _i >= int32(*(*uint16)(unsafe.Pointer(_pPk + 94))) {
		goto _10
	}

	_4iCol = *(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 8))) + 2*uintptr(_i)))

	_1pLeft = _1953exprTableRegister(tls, _pParse, _pTab, _regData, _4iCol)
	_2pRight = _1954exprTableColumn(tls, _db, _pTab, *(*int32)(unsafe.Pointer(_pSrc + 8 + 64)), _4iCol)
	_3pEq = _1316sqlite3PExpr(tls, _pParse, int32(53), _1pLeft, _2pRight)
	_pAll = _1508sqlite3ExprAnd(tls, _db, _pAll, _3pEq)
	_i++
	goto _8

_10:
	_pNe = _1316sqlite3PExpr(tls, _pParse, int32(19), _pAll, null)
_7:
	_pWhere = _1508sqlite3ExprAnd(tls, _db, _pWhere, _pNe)
_5:
	crt.Xmemset(tls, _sNameContext, int32(0), uint64(56))
	*(*uintptr)(unsafe.Pointer(_sNameContext + 8)) = _pSrc
	*(*uintptr)(unsafe.Pointer(_sNameContext)) = _pParse
	_1588sqlite3ResolveExprNames(tls, _sNameContext, _pWhere)
	if (*(*int32)(unsafe.Pointer(_pParse + 48))) != int32(0) {
		goto _11
	}

	_pWInfo = _1544sqlite3WhereBegin(tls, _pParse, _pSrc, _pWhere, null, null, uint16(0), int32(0))
	_1240sqlite3VdbeAddOp2(tls, _v, int32(145), int32(*(*uint8)(unsafe.Pointer(_pFKey + 44))), _nIncr)
	if _pWInfo == 0 {
		goto _12
	}

	_1553sqlite3WhereEnd(tls, _pWInfo)
_12:
_11:
	_777sqlite3ExprDelete(tls, _db, _pWhere)
	if _iFkIfZero == 0 {
		goto _13
	}

	_1474sqlite3VdbeJumpHere(tls, _v, _iFkIfZero)
_13:
}

// _1830fkActionTrigger is defined at sqlite3.c:109603:16
func _1830fkActionTrigger(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pTab uintptr /* *TTable = STable */, _pFKey uintptr /* *TFKey = SFKey */, _pChanges uintptr /* *TExprList = SExprList */) (r uintptr /* *TTrigger = STrigger */) {
	esc := crt.MustMalloc(112)
	var (
		_db       uintptr // *Tsqlite3 = Ssqlite3
		_action   int32
		_pTrigger uintptr // *TTrigger = STrigger
		_iAction  int32
		_zFrom    uintptr // *int8
		_nFrom    int32
		_pIdx     = esc      // **TIndex = SIndex
		_aiCol    = esc + 16 // **int32
		_pStep    uintptr    // *TTriggerStep = STriggerStep
		_pWhere   uintptr    // *TExpr = SExpr
		_pList    uintptr    // *TExprList = SExprList
		_pSelect  uintptr    // *TSelect = SSelect
		_i        int32
		_pWhen    uintptr    // *TExpr = SExpr
		_tOld     = esc + 32 // *TToken = SToken
		_tNew     = esc + 48 // *TToken = SToken
		_tFromCol = esc + 64 // *TToken = SToken
		_tToCol   = esc + 80 // *TToken = SToken
		_iFromCol int32
		_pEq      uintptr    // *TExpr = SExpr
		_pNew     uintptr    // *TExpr = SExpr
		_pDflt    uintptr    // *TExpr = SExpr
		_tFrom    = esc + 96 // *TToken = SToken
		_pRaise   uintptr    // *TExpr = SExpr
	)
	defer crt.Free(esc)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_iAction = bool2int(_pChanges != 0)
	_action = int32(*(*uint8)(unsafe.Pointer((_pFKey + 45) + uintptr(_iAction))))
	if _action != int32(6) || (*(*uint32)(unsafe.Pointer(_db + 48)))&uint32(0x80000) == 0 {
		goto _1
	}

	return null

_1:
	_pTrigger = *(*uintptr)(unsafe.Pointer((_pFKey + 48) + 8*uintptr(_iAction)))
	if _action == int32(0) || _pTrigger != 0 {
		goto _2
	}

	*(*uintptr)(unsafe.Pointer(_pIdx)) = 0
	*(*uintptr)(unsafe.Pointer(_aiCol)) = 0
	_pStep = 0
	_pWhere = 0
	_pList = 0
	_pSelect = 0
	_pWhen = 0
	if _1649sqlite3FkLocateIndex(tls, _pParse, _pTab, _pFKey, _pIdx, _aiCol) == 0 {
		goto _3
	}

	return null

_3:
	_i = int32(0)
_4:
	if _i >= (*(*int32)(unsafe.Pointer(_pFKey + 40))) {
		goto _6
	}

	*(*SToken)(unsafe.Pointer(_tOld)) = SToken{
		Xz: ts + 32188, /* "old" */
		Xn: uint32(3),
	}
	*(*SToken)(unsafe.Pointer(_tNew)) = SToken{
		Xz: ts + 4776, /* "new" */
		Xn: uint32(3),
	}
	_iFromCol = func() int32 {
		if (*(*uintptr)(unsafe.Pointer(_aiCol))) != 0 {
			return *(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_aiCol))) + 4*uintptr(_i)))
		}
		return *(*int32)(unsafe.Pointer(_pFKey + 64))
	}()

	_1516sqlite3TokenInit(tls, _tToCol, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTab + 8))) + 32*uintptr(func() int32 {
		if (*(*uintptr)(unsafe.Pointer(_pIdx))) != 0 {
			return int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx))) + 8))) + 2*uintptr(_i))))
		}
		return int32(*(*int16)(unsafe.Pointer(_pTab + 68)))
	}()))))
	_1516sqlite3TokenInit(tls, _tFromCol, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pFKey))) + 8))) + 32*uintptr(_iFromCol))))
	_pEq = _1316sqlite3PExpr(tls, _pParse, int32(53), _1316sqlite3PExpr(tls, _pParse, int32(122), _1335sqlite3ExprAlloc(tls, _db, int32(59), _tOld, int32(0)), _1335sqlite3ExprAlloc(tls, _db, int32(59), _tToCol, int32(0))), _1335sqlite3ExprAlloc(tls, _db, int32(59), _tFromCol, int32(0)))
	_pWhere = _1508sqlite3ExprAnd(tls, _db, _pWhere, _pEq)
	if _pChanges == 0 {
		goto _7
	}

	_pEq = _1316sqlite3PExpr(tls, _pParse, int32(45), _1316sqlite3PExpr(tls, _pParse, int32(122), _1335sqlite3ExprAlloc(tls, _db, int32(59), _tOld, int32(0)), _1335sqlite3ExprAlloc(tls, _db, int32(59), _tToCol, int32(0))), _1316sqlite3PExpr(tls, _pParse, int32(122), _1335sqlite3ExprAlloc(tls, _db, int32(59), _tNew, int32(0)), _1335sqlite3ExprAlloc(tls, _db, int32(59), _tToCol, int32(0))))
	_pWhen = _1508sqlite3ExprAnd(tls, _db, _pWhen, _pEq)
_7:
	if _action == int32(6) || _action == int32(9) && _pChanges == 0 {
		goto _8
	}

	if _action != int32(9) {
		goto _9
	}

	_pNew = _1316sqlite3PExpr(tls, _pParse, int32(122), _1335sqlite3ExprAlloc(tls, _db, int32(59), _tNew, int32(0)), _1335sqlite3ExprAlloc(tls, _db, int32(59), _tToCol, int32(0)))
	goto _10

_9:
	if _action != int32(8) {
		goto _11
	}

	_pDflt = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pFKey))) + 8))) + 32*uintptr(_iFromCol)) + 8))
	if _pDflt == 0 {
		goto _13
	}

	_pNew = _1507sqlite3ExprDup(tls, _db, _pDflt, int32(0))
	goto _14

_13:
	_pNew = _1335sqlite3ExprAlloc(tls, _db, int32(101), null, int32(0))
_14:
	goto _12

_11:
	_pNew = _1335sqlite3ExprAlloc(tls, _db, int32(101), null, int32(0))
_12:
_10:
	_pList = _1331sqlite3ExprListAppend(tls, _pParse, _pList, _pNew)
	_1332sqlite3ExprListSetName(tls, _pParse, _pList, _tFromCol, int32(0))
_8:
	_i++
	goto _4

_6:
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_aiCol)))
	_zFrom = *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pFKey))))
	_nFrom = _211sqlite3Strlen30(tls, _zFrom)
	if _action != int32(6) {
		goto _15
	}

	*(*uintptr)(unsafe.Pointer(_tFrom)) = _zFrom
	*(*uint32)(unsafe.Pointer(_tFrom + 8)) = uint32(_nFrom)
	_pRaise = _1334sqlite3Expr(tls, _db, int32(70), ts+20175 /* "FOREIGN KEY constraint failed" */)
	if _pRaise == 0 {
		goto _16
	}

	*(*int8)(unsafe.Pointer(_pRaise + 1)) = int8(2)
_16:
	_pSelect = _1330sqlite3SelectNew(tls, _pParse, _1331sqlite3ExprListAppend(tls, _pParse, null, _pRaise), _1340sqlite3SrcListAppend(tls, _db, null, _tFrom, null), _pWhere, null, null, null, uint32(0), null, null)
	_pWhere = null
_15:
	(*(*uint32)(unsafe.Pointer(_db + 352)))++
	_pTrigger = _295sqlite3DbMallocZero(tls, _db, uint64((uint64(144)+uint64(_nFrom))+uint64(1)))
	if _pTrigger == 0 {
		goto _17
	}

	_pStep = set4(&(*(*uintptr)(unsafe.Pointer(_pTrigger + 56))), _pTrigger+72)
	*(*uintptr)(unsafe.Pointer(_pStep + 24)) = _pStep + 72
	crt.Xmemcpy(tls, *(*uintptr)(unsafe.Pointer(_pStep + 24)), _zFrom, uint64(_nFrom))
	*(*uintptr)(unsafe.Pointer(_pStep + 32)) = _1507sqlite3ExprDup(tls, _db, _pWhere, int32(0x1))
	*(*uintptr)(unsafe.Pointer(_pStep + 40)) = _1518sqlite3ExprListDup(tls, _db, _pList, int32(0x1))
	*(*uintptr)(unsafe.Pointer(_pStep + 16)) = _1529sqlite3SelectDup(tls, _db, _pSelect, int32(0x1))
	if _pWhen == 0 {
		goto _18
	}

	_pWhen = _1316sqlite3PExpr(tls, _pParse, int32(19), _pWhen, null)
	*(*uintptr)(unsafe.Pointer(_pTrigger + 24)) = _1507sqlite3ExprDup(tls, _db, _pWhen, int32(0x1))
_18:
_17:
	(*(*uint32)(unsafe.Pointer(_db + 352)))--
	_777sqlite3ExprDelete(tls, _db, _pWhere)
	_777sqlite3ExprDelete(tls, _db, _pWhen)
	_551sqlite3ExprListDelete(tls, _db, _pList)
	_1094sqlite3SelectDelete(tls, _db, _pSelect)
	if int32(*(*uint8)(unsafe.Pointer(_db + 97))) != int32(1) {
		goto _19
	}

	_1257fkTriggerDelete(tls, _db, _pTrigger)
	return null

_19:
	switch _action {
	case int32(6):
		goto _21
	case int32(9):
		goto _22
	default:
		goto _23
	}
_21:
	*(*uint8)(unsafe.Pointer(_pStep)) = uint8(119)
	goto _20

_22:
	if _pChanges != 0 {
		goto _24
	}

	*(*uint8)(unsafe.Pointer(_pStep)) = uint8(109)
	goto _20

_24:
_23:
	*(*uint8)(unsafe.Pointer(_pStep)) = uint8(110)
_20:
	*(*uintptr)(unsafe.Pointer(_pStep + 8)) = _pTrigger
	*(*uintptr)(unsafe.Pointer(_pTrigger + 40)) = *(*uintptr)(unsafe.Pointer(_pTab + 112))
	*(*uintptr)(unsafe.Pointer(_pTrigger + 48)) = *(*uintptr)(unsafe.Pointer(_pTab + 112))
	*(*uintptr)(unsafe.Pointer((_pFKey + 48) + 8*uintptr(_iAction))) = _pTrigger
	*(*uint8)(unsafe.Pointer(_pTrigger + 16)) = uint8(func() int32 {
		if _pChanges != 0 {
			return int32(110)
		}
		return int32(109)
	}())
_2:
	return _pTrigger
}

// _1831xferCompatibleIndex is defined at sqlite3.c:111740:12
func _1831xferCompatibleIndex(tls crt.TLS, _pDest uintptr /* *TIndex = SIndex */, _pSrc uintptr /* *TIndex = SIndex */) (r int32) {
	var _i int32

	if int32(*(*uint16)(unsafe.Pointer(_pDest + 94))) == int32(*(*uint16)(unsafe.Pointer(_pSrc + 94))) {
		goto _1
	}

	return int32(0)

_1:
	if int32(*(*uint8)(unsafe.Pointer(_pDest + 98))) == int32(*(*uint8)(unsafe.Pointer(_pSrc + 98))) {
		goto _2
	}

	return int32(0)

_2:
	_i = int32(0)
_3:
	if _i >= int32(*(*uint16)(unsafe.Pointer(_pSrc + 94))) {
		goto _5
	}

	if int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pSrc + 8))) + 2*uintptr(_i)))) == int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pDest + 8))) + 2*uintptr(_i)))) {
		goto _6
	}

	return int32(0)

_6:
	if int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pSrc + 8))) + 2*uintptr(_i)))) != int32(-2) {
		goto _7
	}

	if _1770sqlite3ExprCompare(tls, null, *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pSrc + 80))) + 8) + 32*uintptr(_i))), *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pDest + 80))) + 8) + 32*uintptr(_i))), int32(-1)) == int32(0) {
		goto _8
	}

	return int32(0)

_8:
_7:
	if int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pSrc + 56))) + uintptr(_i)))) == int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pDest + 56))) + uintptr(_i)))) {
		goto _9
	}

	return int32(0)

_9:
	if Xsqlite3_stricmp(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pSrc + 64))) + 8*uintptr(_i))), *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pDest + 64))) + 8*uintptr(_i)))) == int32(0) {
		goto _10
	}

	return int32(0)

_10:
	_i++
	goto _3

_5:
	if _1770sqlite3ExprCompare(tls, null, *(*uintptr)(unsafe.Pointer(_pSrc + 72)), *(*uintptr)(unsafe.Pointer(_pDest + 72)), int32(-1)) == 0 {
		goto _11
	}

	return int32(0)

_11:
	return int32(1)
}

// _1832exprToRegister is defined at sqlite3.c:95238:13
func _1832exprToRegister(tls crt.TLS, _p uintptr /* *TExpr = SExpr */, _iReg int32) {
	*(*uint8)(unsafe.Pointer(_p + 54)) = *(*uint8)(unsafe.Pointer(_p))
	*(*uint8)(unsafe.Pointer(_p)) = uint8(150)
	*(*int32)(unsafe.Pointer(_p + 44)) = _iReg
	{
		p := &(*(*uint32)(unsafe.Pointer(_p + 4)))
		*p = uint32(uint32(*p) & uint32(4294963199))
	}
}

// _1833dummy TVdbeOp = SVdbeOp, escapes: true, sqlite3.c:73308:17
var _1833dummy = bss + 17656

// _1834heightOfExpr is defined at sqlite3.c:92447:13
func _1834heightOfExpr(tls crt.TLS, _p uintptr /* *TExpr = SExpr */, _pnHeight uintptr /* *int32 */) {
	if _p == 0 {
		goto _1
	}

	if (*(*int32)(unsafe.Pointer(_p + 40))) <= (*(*int32)(unsafe.Pointer(_pnHeight))) {
		goto _2
	}

	*(*int32)(unsafe.Pointer(_pnHeight)) = *(*int32)(unsafe.Pointer(_p + 40))
_2:
_1:
}

// _1835heightOfExprList is defined at sqlite3.c:92454:13
func _1835heightOfExprList(tls crt.TLS, _p uintptr /* *TExprList = SExprList */, _pnHeight uintptr /* *int32 */) {
	var _i int32

	if _p == 0 {
		goto _1
	}

	_i = int32(0)
_2:
	if _i >= (*(*int32)(unsafe.Pointer(_p))) {
		goto _4
	}

	_1834heightOfExpr(tls, *(*uintptr)(unsafe.Pointer((_p + 8) + 32*uintptr(_i))), _pnHeight)
	_i++
	goto _2

_4:
_1:
}

// _1836sqlite3ExprListFlags is defined at sqlite3.c:93513:20
func _1836sqlite3ExprListFlags(tls crt.TLS, _pList uintptr /* *TExprList = SExprList */) (r uint32) {
	var (
		_i     int32
		_m     uint32
		_pExpr uintptr // *TExpr = SExpr
	)
	_m = uint32(0)

	_i = int32(0)
_1:
	if _i >= (*(*int32)(unsafe.Pointer(_pList))) {
		goto _3
	}

	_pExpr = *(*uintptr)(unsafe.Pointer((_pList + 8) + 32*uintptr(_i)))

	_m = uint32(_m | (*(*uint32)(unsafe.Pointer(_pExpr + 4))))
	_i++
	goto _1

_3:
	return _m
}

// _1837pragCName [52]*int8, escapes: true, sqlite3.c:113747:19
var _1837pragCName = bss + 17680 // array of 52 pointer to char

func init() {
	*(*[52]uintptr)(unsafe.Pointer(_1837pragCName)) = [52]uintptr{
		0:  ts + 30183, /* "cache_size" */
		1:  ts + 32192, /* "cid" */
		2:  ts + 32196, /* "name" */
		3:  ts + 32201, /* "type" */
		4:  ts + 32206, /* "notnull" */
		5:  ts + 32214, /* "dflt_value" */
		6:  ts + 26943, /* "pk" */
		7:  ts + 26057, /* "tbl" */
		8:  ts + 26814, /* "idx" */
		9:  ts + 32225, /* "wdth" */
		10: ts + 32230, /* "hght" */
		11: ts + 32235, /* "flgs" */
		12: ts + 32240, /* "seqno" */
		13: ts + 32192, /* "cid" */
		14: ts + 32196, /* "name" */
		15: ts + 32240, /* "seqno" */
		16: ts + 32192, /* "cid" */
		17: ts + 32196, /* "name" */
		18: ts + 32246, /* "desc" */
		19: ts + 32251, /* "coll" */
		20: ts + 32256, /* "key" */
		21: ts + 32260, /* "seq" */
		22: ts + 32196, /* "name" */
		23: ts + 32264, /* "unique" */
		24: ts + 32271, /* "origin" */
		25: ts + 32278, /* "partial" */
		26: ts + 32260, /* "seq" */
		27: ts + 32196, /* "name" */
		28: ts + 32286, /* "file" */
		29: ts + 32196, /* "name" */
		30: ts + 32291, /* "builtin" */
		31: ts + 32196, /* "name" */
		32: ts + 32260, /* "seq" */
		33: ts + 32196, /* "name" */
		34: ts + 32299, /* "id" */
		35: ts + 32260, /* "seq" */
		36: ts + 4602,  /* "table" */
		37: ts + 20038, /* "from" */
		38: ts + 32302, /* "to" */
		39: ts + 32305, /* "on_update" */
		40: ts + 32315, /* "on_delete" */
		41: ts + 32325, /* "match" */
		42: ts + 4602,  /* "table" */
		43: ts + 20005, /* "rowid" */
		44: ts + 32331, /* "parent" */
		45: ts + 32338, /* "fkid" */
		46: ts + 32343, /* "busy" */
		47: ts + 4522,  /* "log" */
		48: ts + 32348, /* "checkpointed" */
		49: ts + 8134,  /* "timeout" */
		50: ts + 32361, /* "database" */
		51: ts + 32370, /* "status" */
	}
}

// _1838sqlite3VdbeAddOp4Dup8 is defined at sqlite3.c:72475:20
func _1838sqlite3VdbeAddOp4Dup8(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */, _op int32, _p1 int32, _p2 int32, _p3 int32, _zP4 uintptr /* *Tu8 = uint8 */, _p4type int32) (r int32) {
	var _p4copy uintptr // *int8

	_p4copy = _373sqlite3DbMallocRawNN(tls, _388sqlite3VdbeDb(tls, _p), uint64(8))
	if _p4copy == 0 {
		goto _1
	}

	crt.Xmemcpy(tls, _p4copy, _zP4, uint64(8))
_1:
	return _1475sqlite3VdbeAddOp4(tls, _p, _op, _p1, _p2, _p3, _p4copy, _p4type)
}

// _1839sqlite3WalHeapMemory is defined at sqlite3.c:58578:20
func _1839sqlite3WalHeapMemory(tls crt.TLS, _pWal uintptr /* *TWal = SWal */) (r int32) {
	return bool2int((_pWal != 0) && (int32(*(*uint8)(unsafe.Pointer(_pWal + 63))) == int32(2)))
}

// _1840sqlite3WalLimit is defined at sqlite3.c:56467:21
func _1840sqlite3WalLimit(tls crt.TLS, _pWal uintptr /* *TWal = SWal */, _iLimit int64) {
	if _pWal == 0 {
		goto _1
	}

	*(*int64)(unsafe.Pointer(_pWal + 32)) = _iLimit
_1:
}

// _1841getTempStore is defined at sqlite3.c:114411:12
func _1841getTempStore(tls crt.TLS, _z uintptr /* *int8 */) (r int32) {
	if int32(*(*int8)(unsafe.Pointer(_z))) < int32('0') || int32(*(*int8)(unsafe.Pointer(_z))) > int32('2') {
		goto _1
	}

	return int32(*(*int8)(unsafe.Pointer(_z))) - int32('0')

	goto _2

_1:
	if _110sqlite3StrICmp(tls, _z, ts+32286 /* "file" */) != int32(0) {
		goto _3
	}

	return int32(1)

	goto _4

_3:
	if _110sqlite3StrICmp(tls, _z, ts+19640 /* "memory" */) != int32(0) {
		goto _5
	}

	return int32(2)

	goto _6

_5:
	return int32(0)

_6:
_4:
_2:
	return r
}

// _1842likeInfoAlt ScompareInfo, escapes: true, sqlite3.c:107144:33
var _1842likeInfoAlt = ds + 17652

// _1843setLikeOptFlag is defined at sqlite3.c:108219:13
func _1843setLikeOptFlag(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _zName uintptr /* *int8 */, _flagVal uint8) {
	var _pDef uintptr // *TFuncDef = SFuncDef

	_pDef = _541sqlite3FindFunction(tls, _db, _zName, int32(2), uint8(1), uint8(0))
	if _pDef == 0 {
		goto _1
	}

	{
		p := &(*(*uint16)(unsafe.Pointer(_pDef + 2)))
		*p = uint16(int32(*p) | int32(_flagVal))
	}
_1:
}

// _1844cacheEntryClear is defined at sqlite3.c:94933:13
func _1844cacheEntryClear(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _i int32) {
	if (*(*uint8)(unsafe.Pointer(((_pParse + 196) + 20*uintptr(_i)) + 6))) == 0 {
		goto _1
	}

	if int32(*(*uint8)(unsafe.Pointer(_pParse + 31))) >= int32(8) {
		goto _2
	}

	*(*int32)(unsafe.Pointer((_pParse + 396) + 4*uintptr(postinc163(&(*(*uint8)(unsafe.Pointer(_pParse + 31))))))) = *(*int32)(unsafe.Pointer(((_pParse + 196) + 20*uintptr(_i)) + 12))
_2:
_1:
	(*(*uint8)(unsafe.Pointer(_pParse + 37)))--
	if _i >= int32(*(*uint8)(unsafe.Pointer(_pParse + 37))) {
		goto _3
	}

	*(*struct {
		XiTable  int32
		XiColumn int16
		XtempReg uint8
		XiLevel  int32
		XiReg    int32
		Xlru     int32
	})(unsafe.Pointer((_pParse + 196) + 20*uintptr(_i))) = *(*struct {
		XiTable  int32
		XiColumn int16
		XtempReg uint8
		XiLevel  int32
		XiReg    int32
		Xlru     int32
	})(unsafe.Pointer((_pParse + 196) + 20*uintptr(*(*uint8)(unsafe.Pointer(_pParse + 37)))))
_3:
}

// _1845sqlite3ExprCodeLoadIndexColumn is defined at sqlite3.c:95073:21
func _1845sqlite3ExprCodeLoadIndexColumn(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pIdx uintptr /* *TIndex = SIndex */, _iTabCur int32, _iIdxCol int32, _regOut int32) {
	var _iTabCol int16

	_iTabCol = *(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 8))) + 2*uintptr(_iIdxCol)))
	if int32(_iTabCol) != int32(-2) {
		goto _1
	}

	*(*int32)(unsafe.Pointer(_pParse + 68)) = _iTabCur + int32(1)
	_1825sqlite3ExprCodeCopy(tls, _pParse, *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pIdx + 80))) + 8) + 32*uintptr(_iIdxCol))), _regOut)
	*(*int32)(unsafe.Pointer(_pParse + 68)) = int32(0)
	goto _2

_1:
	_1591sqlite3ExprCodeGetColumnOfTable(tls, *(*uintptr)(unsafe.Pointer(_pParse + 16)), *(*uintptr)(unsafe.Pointer(_pIdx + 24)), _iTabCur, int32(_iTabCol), _regOut)
_2:
}

// _1846sqlite3VdbeDeletePriorOpcode is defined at sqlite3.c:73132:20
func _1846sqlite3VdbeDeletePriorOpcode(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */, _op uint8) (r int32) {
	if (*(*int32)(unsafe.Pointer(_p + 184))) <= int32(0) || int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 104))) + 24*uintptr((*(*int32)(unsafe.Pointer(_p + 184)))-int32(1))))) != int32(_op) {
		goto _1
	}

	return _1549sqlite3VdbeChangeToNoop(tls, _p, (*(*int32)(unsafe.Pointer(_p + 184)))-int32(1))

	goto _2

_1:
	return int32(0)

_2:
	return r
}

type SIdList_item struct {
	XzName uintptr // *int8
	Xidx   int32
}

// _1847attachFunc is defined at sqlite3.c:99905:13
func _1847attachFunc(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _NotUsed int32, _argv uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	esc := crt.MustMalloc(72)
	var (
		_i       int32
		_rc      int32
		_db      uintptr    // *Tsqlite3 = Ssqlite3
		_zName   uintptr    // *int8
		_zFile   uintptr    // *int8
		_zPath   = esc      // **int8
		_zErr    = esc + 16 // **int8
		_flags   = esc + 32 // *uint32
		_aNew    uintptr    // *TDb = SDb
		_pNew    uintptr    // *TDb = SDb
		_zErrDyn = esc + 48 // **int8
		_pVfs    = esc + 64 // **Tsqlite3_vfs = Ssqlite3_vfs
		_z       uintptr    // *int8
		_pPager  uintptr    // *TPager = SPager
		_iDb     int32
	)
	defer crt.Free(esc)
	_rc = int32(0)
	_db = Xsqlite3_context_db_handle(tls, _context)
	*(*uintptr)(unsafe.Pointer(_zPath)) = 0
	*(*uintptr)(unsafe.Pointer(_zErr)) = 0
	*(*uintptr)(unsafe.Pointer(_zErrDyn)) = 0

	_zFile = Xsqlite3_value_text(tls, *(*uintptr)(unsafe.Pointer(_argv)))
	_zName = Xsqlite3_value_text(tls, *(*uintptr)(unsafe.Pointer(_argv + 8)))
	if _zFile != 0 {
		goto _1
	}

	_zFile = ts + 4553 /* "" */
_1:
	if _zName != 0 {
		goto _2
	}

	_zName = ts + 4553 /* "" */
_2:
	if (*(*int32)(unsafe.Pointer(_db + 40))) < ((*(*int32)(unsafe.Pointer((_db + 124) + 28))) + int32(2)) {
		goto _3
	}

	*(*uintptr)(unsafe.Pointer(_zErrDyn)) = _226sqlite3MPrintf(tls, _db, ts+32377 /* "too many attached databases - ma..." */, *(*int32)(unsafe.Pointer((_db + 124) + 28)))
	goto _attach_error

_3:
	_i = int32(0)
_4:
	if _i >= (*(*int32)(unsafe.Pointer(_db + 40))) {
		goto _6
	}

	_z = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_i)))

	if _110sqlite3StrICmp(tls, _z, _zName) != int32(0) {
		goto _7
	}

	*(*uintptr)(unsafe.Pointer(_zErrDyn)) = _226sqlite3MPrintf(tls, _db, ts+32414 /* "database %s is already in use" */, _zName)
	goto _attach_error

_7:
	_i++
	goto _4

_6:
	if (*(*uintptr)(unsafe.Pointer(_db + 32))) != (_db + 568) {
		goto _8
	}

	_aNew = _373sqlite3DbMallocRawNN(tls, _db, uint64(96))
	if _aNew != 0 {
		goto _10
	}

	return

_10:
	crt.Xmemcpy(tls, _aNew, *(*uintptr)(unsafe.Pointer(_db + 32)), uint64(64))
	goto _9

_8:
	_aNew = _869sqlite3DbRealloc(tls, _db, *(*uintptr)(unsafe.Pointer(_db + 32)), uint64(uint64(32)*uint64((*(*int32)(unsafe.Pointer(_db + 40)))+int32(1))))
	if _aNew != 0 {
		goto _11
	}

	return

_11:
_9:
	*(*uintptr)(unsafe.Pointer(_db + 32)) = _aNew
	_pNew = (*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(*(*int32)(unsafe.Pointer(_db + 40)))
	crt.Xmemset(tls, _pNew, int32(0), uint64(32))
	*(*uint32)(unsafe.Pointer(_flags)) = *(*uint32)(unsafe.Pointer(_db + 76))
	_rc = _281sqlite3ParseUri(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db))) + 24)), _zFile, _flags, _pVfs, _zPath, _zErr)
	if _rc == int32(0) {
		goto _12
	}

	if _rc != int32(7) {
		goto _13
	}

	_178sqlite3OomFault(tls, _db)
_13:
	Xsqlite3_result_error(tls, _context, *(*uintptr)(unsafe.Pointer(_zErr)), int32(-1))
	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_zErr)))
	return

_12:
	*(*uint32)(unsafe.Pointer(_flags)) = uint32((*(*uint32)(unsafe.Pointer(_flags))) | uint32(0x100))
	_rc = _282sqlite3BtreeOpen(tls, *(*uintptr)(unsafe.Pointer(_pVfs)), *(*uintptr)(unsafe.Pointer(_zPath)), _db, _pNew+8, int32(0), int32(*(*uint32)(unsafe.Pointer(_flags))))
	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_zPath)))
	(*(*int32)(unsafe.Pointer(_db + 40)))++
	*(*uint8)(unsafe.Pointer(_db + 105)) = uint8(0)
	if _rc != int32(19) {
		goto _14
	}

	_rc = int32(1)
	*(*uintptr)(unsafe.Pointer(_zErrDyn)) = _226sqlite3MPrintf(tls, _db, ts+32444 /* "database is already attached" */)
	goto _15

_14:
	if _rc != int32(0) {
		goto _16
	}

	*(*uintptr)(unsafe.Pointer(_pNew + 24)) = _283sqlite3SchemaGet(tls, _db, *(*uintptr)(unsafe.Pointer(_pNew + 8)))
	if (*(*uintptr)(unsafe.Pointer(_pNew + 24))) != 0 {
		goto _17
	}

	_rc = int32(7)
	goto _18

_17:
	if (*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pNew + 24))) + 112))) == 0 || int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pNew + 24))) + 113))) == int32(*(*uint8)(unsafe.Pointer(_db + 94))) {
		goto _19
	}

	*(*uintptr)(unsafe.Pointer(_zErrDyn)) = _226sqlite3MPrintf(tls, _db, ts+18922 /* "attached databases must use the ..." */)
	_rc = int32(1)
_19:
_18:
	_139sqlite3BtreeEnter(tls, *(*uintptr)(unsafe.Pointer(_pNew + 8)))
	_pPager = _141sqlite3BtreePager(tls, *(*uintptr)(unsafe.Pointer(_pNew + 8)))
	_1638sqlite3PagerLockingMode(tls, _pPager, int32(*(*uint8)(unsafe.Pointer(_db + 99))))
	_1636sqlite3BtreeSecureDelete(tls, *(*uintptr)(unsafe.Pointer(_pNew + 8)), _1636sqlite3BtreeSecureDelete(tls, *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_db + 32)) + 8)), int32(-1)))
	_1028sqlite3BtreeSetPagerFlags(tls, *(*uintptr)(unsafe.Pointer(_pNew + 8)), uint32(0x3)|((*(*uint32)(unsafe.Pointer(_db + 48)))&uint32(0x38)))
	_169sqlite3BtreeLeave(tls, *(*uintptr)(unsafe.Pointer(_pNew + 8)))
_16:
_15:
	*(*uint8)(unsafe.Pointer(_pNew + 16)) = uint8(3)
	*(*uintptr)(unsafe.Pointer(_pNew)) = _183sqlite3DbStrDup(tls, _db, _zName)
	if _rc != int32(0) || (*(*uintptr)(unsafe.Pointer(_pNew))) != 0 {
		goto _20
	}

	_rc = int32(7)
_20:
	if _rc != int32(0) {
		goto _21
	}

	_219sqlite3BtreeEnterAll(tls, _db)
	_rc = _220sqlite3Init(tls, _db, _zErrDyn)
	_225sqlite3BtreeLeaveAll(tls, _db)
_21:
	if _rc == 0 {
		goto _22
	}

	_iDb = (*(*int32)(unsafe.Pointer(_db + 40))) - int32(1)

	if (*(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)) + 8))) == 0 {
		goto _23
	}

	_367sqlite3BtreeClose(tls, *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)) + 8)))
	*(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)) + 8)) = null
	*(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)) + 24)) = null
_23:
	_157sqlite3ResetAllSchemasOfConnection(tls, _db)
	*(*int32)(unsafe.Pointer(_db + 40)) = _iDb
	if _rc != int32(7) && _rc != int32(3082) {
		goto _24
	}

	_178sqlite3OomFault(tls, _db)
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_zErrDyn)))
	*(*uintptr)(unsafe.Pointer(_zErrDyn)) = _226sqlite3MPrintf(tls, _db, ts+17500 /* "out of memory" */)
	goto _25

_24:
	if (*(*uintptr)(unsafe.Pointer(_zErrDyn))) != 0 {
		goto _26
	}

	*(*uintptr)(unsafe.Pointer(_zErrDyn)) = _226sqlite3MPrintf(tls, _db, ts+32473 /* "unable to open database: %s" */, _zFile)
_26:
_25:
	goto _attach_error

_22:
	return

	goto _attach_error
_attach_error:
	if (*(*uintptr)(unsafe.Pointer(_zErrDyn))) == 0 {
		goto _27
	}

	Xsqlite3_result_error(tls, _context, *(*uintptr)(unsafe.Pointer(_zErrDyn)), int32(-1))
	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_zErrDyn)))
_27:
	if _rc == 0 {
		goto _28
	}

	Xsqlite3_result_error_code(tls, _context, _rc)
_28:
}

// _1848resolveAttachExpr is defined at sqlite3.c:99881:12
func _1848resolveAttachExpr(tls crt.TLS, _pName uintptr /* *TNameContext = SNameContext */, _pExpr uintptr /* *TExpr = SExpr */) (r int32) {
	var _rc int32

	_rc = int32(0)
	if _pExpr == 0 {
		goto _1
	}

	if int32(*(*uint8)(unsafe.Pointer(_pExpr))) == int32(59) {
		goto _2
	}

	_rc = _1588sqlite3ResolveExprNames(tls, _pName, _pExpr)
	goto _3

_2:
	*(*uint8)(unsafe.Pointer(_pExpr)) = uint8(97)
_3:
_1:
	return _rc
}

// _1849detachFunc is defined at sqlite3.c:100105:13
func _1849detachFunc(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _NotUsed int32, _argv uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	esc := crt.MustMalloc(128)
	var (
		_zName uintptr // *int8
		_db    uintptr // *Tsqlite3 = Ssqlite3
		_i     int32
		_pDb   uintptr // *TDb = SDb
		_zErr  = esc   // *[128]int8
	)
	defer crt.Free(esc)
	_zName = Xsqlite3_value_text(tls, *(*uintptr)(unsafe.Pointer(_argv)))
	_db = Xsqlite3_context_db_handle(tls, _context)
	_pDb = 0

	if _zName != 0 {
		goto _1
	}

	_zName = ts + 4553 /* "" */
_1:
	_i = int32(0)
_2:
	if _i >= (*(*int32)(unsafe.Pointer(_db + 40))) {
		goto _4
	}

	_pDb = (*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_i)
	if (*(*uintptr)(unsafe.Pointer(_pDb + 8))) != 0 {
		goto _5
	}

	goto _3

_5:
	if _110sqlite3StrICmp(tls, *(*uintptr)(unsafe.Pointer(_pDb)), _zName) != int32(0) {
		goto _6
	}

	goto _4

_6:
_3:
	_i++
	goto _2

_4:
	if _i < (*(*int32)(unsafe.Pointer(_db + 40))) {
		goto _7
	}

	Xsqlite3_snprintf(tls, int32(128), _zErr, ts+32501 /* "no such database: %s" */, _zName)
	goto _detach_error

_7:
	if _i >= int32(2) {
		goto _8
	}

	Xsqlite3_snprintf(tls, int32(128), _zErr, ts+32522 /* "cannot detach database %s" */, _zName)
	goto _detach_error

_8:
	if _142sqlite3BtreeIsInReadTrans(tls, *(*uintptr)(unsafe.Pointer(_pDb + 8))) == 0 && _450sqlite3BtreeIsInBackup(tls, *(*uintptr)(unsafe.Pointer(_pDb + 8))) == 0 {
		goto _9
	}

	Xsqlite3_snprintf(tls, int32(128), _zErr, ts+32548 /* "database %s is locked" */, _zName)
	goto _detach_error

_9:
	_367sqlite3BtreeClose(tls, *(*uintptr)(unsafe.Pointer(_pDb + 8)))
	*(*uintptr)(unsafe.Pointer(_pDb + 8)) = null
	*(*uintptr)(unsafe.Pointer(_pDb + 24)) = null
	_338sqlite3CollapseDatabaseArray(tls, _db)
	return

	goto _detach_error
_detach_error:
	Xsqlite3_result_error(tls, _context, _zErr, int32(-1))
}

// _1850collationMatch is defined at sqlite3.c:104914:12
func _1850collationMatch(tls crt.TLS, _zColl uintptr /* *int8 */, _pIndex uintptr /* *TIndex = SIndex */) (r int32) {
	var (
		_i int32
		_z uintptr // *int8
	)

	_i = int32(0)
_1:
	if _i >= int32(*(*uint16)(unsafe.Pointer(_pIndex + 96))) {
		goto _3
	}

	_z = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIndex + 64))) + 8*uintptr(_i)))

	if int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIndex + 8))) + 2*uintptr(_i)))) < int32(0) || int32(0) != _110sqlite3StrICmp(tls, _z, _zColl) {
		goto _4
	}

	return int32(1)

_4:
	_i++
	goto _1

_3:
	return int32(0)
}

// _1851openStatTable is defined at sqlite3.c:98104:13
func _1851openStatTable(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _iDb int32, _iStatCur int32, _zWhere uintptr /* *int8 */, _zWhereType uintptr /* *int8 */) {
	esc := crt.MustMalloc(19)
	var (
		_i          int32
		_db         uintptr    // *Tsqlite3 = Ssqlite3
		_pDb        uintptr    // *TDb = SDb
		_v          uintptr    // *TVdbe = SVdbe
		_aRoot      = esc      // *[3]int32
		_aCreateTbl = esc + 16 // *[3]uint8
		_zTab       uintptr    // *int8
		_pStat      uintptr    // *TTable = STable
	)
	defer crt.Free(esc)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_v = _1472sqlite3GetVdbe(tls, _pParse)
	if _v != 0 {
		goto _1
	}

	return

_1:
	_pDb = (*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)
	_i = int32(0)
_2:
	if _i >= int32(3) {
		goto _4
	}

	_zTab = *(*uintptr)(unsafe.Pointer(_1955aTable + 16*uintptr(_i)))
	if set4(&_pStat, _221sqlite3FindTable(tls, _db, _zTab, *(*uintptr)(unsafe.Pointer(_pDb)))) != 0 {
		goto _5
	}

	if (*(*uintptr)(unsafe.Pointer((_1955aTable + 16*uintptr(_i)) + 8))) == 0 {
		goto _7
	}

	_1502sqlite3NestedParse(tls, _pParse, ts+32570 /* "CREATE TABLE %Q.%s(%s)" */, *(*uintptr)(unsafe.Pointer(_pDb)), _zTab, *(*uintptr)(unsafe.Pointer((_1955aTable + 16*uintptr(_i)) + 8)))
	*(*int32)(unsafe.Pointer(_aRoot + 4*uintptr(_i))) = *(*int32)(unsafe.Pointer(_pParse + 132))
	*(*uint8)(unsafe.Pointer(_aCreateTbl + uintptr(_i))) = uint8(0x10)
_7:
	goto _6

_5:
	*(*int32)(unsafe.Pointer(_aRoot + 4*uintptr(_i))) = *(*int32)(unsafe.Pointer(_pStat + 56))
	*(*uint8)(unsafe.Pointer(_aCreateTbl + uintptr(_i))) = uint8(0)
	_1574sqlite3TableLock(tls, _pParse, _iDb, *(*int32)(unsafe.Pointer(_aRoot + 4*uintptr(_i))), uint8(1), _zTab)
	if _zWhere == 0 {
		goto _8
	}

	_1502sqlite3NestedParse(tls, _pParse, ts+29299 /* "DELETE FROM %Q.%s WHERE %s=%Q" */, *(*uintptr)(unsafe.Pointer(_pDb)), _zTab, _zWhereType, _zWhere)
	goto _9

_8:
	_1240sqlite3VdbeAddOp2(tls, _v, int32(133), *(*int32)(unsafe.Pointer(_aRoot + 4*uintptr(_i))), _iDb)
_9:
_6:
	_i++
	goto _2

_4:
	_i = int32(0)
_10:
	if (*(*uintptr)(unsafe.Pointer((_1955aTable + 16*uintptr(_i)) + 8))) == 0 {
		goto _12
	}

	_1071sqlite3VdbeAddOp4Int(tls, _v, int32(105), _iStatCur+_i, *(*int32)(unsafe.Pointer(_aRoot + 4*uintptr(_i))), _iDb, int32(3))
	_1072sqlite3VdbeChangeP5(tls, _v, uint16(*(*uint8)(unsafe.Pointer(_aCreateTbl + uintptr(_i)))))
	_i++
	goto _10

_12:
}

// _1852analyzeOneTable is defined at sqlite3.c:98905:13
func _1852analyzeOneTable(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pTab uintptr /* *TTable = STable */, _pOnlyIdx uintptr /* *TIndex = SIndex */, _iStatCur int32, _iMem int32, _iTab int32) {
	var (
		_db              uintptr // *Tsqlite3 = Ssqlite3
		_pIdx            uintptr // *TIndex = SIndex
		_iIdxCur         int32
		_iTabCur         int32
		_v               uintptr // *TVdbe = SVdbe
		_i               int32
		_jZeroRows       int32
		_iDb             int32
		_needTableCnt    uint8
		_regNewRowid     int32
		_regStat4        int32
		_regChng         int32
		_regTemp         int32
		_regTabname      int32
		_regIdxname      int32
		_regStat1        int32
		_regPrev         int32
		_nCol            int32
		_addrRewind      int32
		_addrNextRow     int32
		_zIdxName        uintptr // *int8
		_nColTest        int32
		_endDistinctTest int32
		_aGotoChng       uintptr // *int32
		_pColl           uintptr // *int8
	)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_jZeroRows = int32(-1)
	_needTableCnt = uint8(1)
	_regNewRowid = postinc7(&_iMem)
	_regStat4 = postinc7(&_iMem)
	_regChng = postinc7(&_iMem)
	_regTemp = postinc7(&_iMem)
	_regTabname = postinc7(&_iMem)
	_regIdxname = postinc7(&_iMem)
	_regStat1 = postinc7(&_iMem)
	_regPrev = _iMem
	*(*int32)(unsafe.Pointer(_pParse + 56)) = func() int32 {
		if (*(*int32)(unsafe.Pointer(_pParse + 56))) > _iMem {
			return *(*int32)(unsafe.Pointer(_pParse + 56))
		}
		return _iMem
	}()
	_v = _1472sqlite3GetVdbe(tls, _pParse)
	if _v != 0 && _pTab != 0 {
		goto _1
	}

	return

_1:
	if (*(*int32)(unsafe.Pointer(_pTab + 56))) != int32(0) {
		goto _2
	}

	return

_2:
	if Xsqlite3_strlike(tls, ts+6515 /* "sqlite_%" */, *(*uintptr)(unsafe.Pointer(_pTab)), uint32(0)) != int32(0) {
		goto _3
	}

	return

_3:
	_iDb = _1069sqlite3SchemaToIndex(tls, _db, *(*uintptr)(unsafe.Pointer(_pTab + 112)))

	if _1480sqlite3AuthCheck(tls, _pParse, int32(28), *(*uintptr)(unsafe.Pointer(_pTab)), null, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)))) == 0 {
		goto _4
	}

	return

_4:
	_1574sqlite3TableLock(tls, _pParse, _iDb, *(*int32)(unsafe.Pointer(_pTab + 56)), uint8(0), *(*uintptr)(unsafe.Pointer(_pTab)))
	_iTabCur = postinc7(&_iTab)
	_iIdxCur = postinc7(&_iTab)
	*(*int32)(unsafe.Pointer(_pParse + 52)) = func() int32 {
		if (*(*int32)(unsafe.Pointer(_pParse + 52))) > _iTab {
			return *(*int32)(unsafe.Pointer(_pParse + 52))
		}
		return _iTab
	}()
	_1647sqlite3OpenTable(tls, _pParse, _iTabCur, _iDb, _pTab, int32(104))
	_1648sqlite3VdbeLoadString(tls, _v, _regTabname, *(*uintptr)(unsafe.Pointer(_pTab)))
	_pIdx = *(*uintptr)(unsafe.Pointer(_pTab + 16))
_5:
	if _pIdx == 0 {
		goto _7
	}

	if _pOnlyIdx == 0 || _pOnlyIdx == _pIdx {
		goto _8
	}

	goto _6

_8:
	if (*(*uintptr)(unsafe.Pointer(_pIdx + 72))) != 0 {
		goto _9
	}

	_needTableCnt = uint8(0)
_9:
	if ((*(*uint32)(unsafe.Pointer(_pTab + 64)))&uint32(0x20)) == uint32(0) || int32(uint32(*(*uint8)(unsafe.Pointer(_pIdx + 99)))<<30>>30) != int32(2) {
		goto _10
	}

	_nCol = int32(*(*uint16)(unsafe.Pointer(_pIdx + 94)))
	_zIdxName = *(*uintptr)(unsafe.Pointer(_pTab))
	_nColTest = _nCol - int32(1)
	goto _11

_10:
	_nCol = int32(*(*uint16)(unsafe.Pointer(_pIdx + 96)))
	_zIdxName = *(*uintptr)(unsafe.Pointer(_pIdx))
	_nColTest = func() int32 {
		if (uint32((*(*uint8)(unsafe.Pointer(_pIdx + 99)))>>3) << 31 >> 31) != 0 {
			return int32(*(*uint16)(unsafe.Pointer(_pIdx + 94))) - int32(1)
		}
		return _nCol - int32(1)
	}()
_11:
	_1648sqlite3VdbeLoadString(tls, _v, _regIdxname, _zIdxName)
	*(*int32)(unsafe.Pointer(_pParse + 56)) = func() int32 {
		if (*(*int32)(unsafe.Pointer(_pParse + 56))) > (_regPrev + _nColTest) {
			return *(*int32)(unsafe.Pointer(_pParse + 56))
		}
		return _regPrev + _nColTest
	}()

	_1241sqlite3VdbeAddOp3(tls, _v, int32(104), _iIdxCur, *(*int32)(unsafe.Pointer(_pIdx + 88)), _iDb)
	_1589sqlite3VdbeSetP4KeyInfo(tls, _pParse, _pIdx)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(67), _nCol, _regStat4+int32(1))
	_1240sqlite3VdbeAddOp2(tls, _v, int32(67), int32(*(*uint16)(unsafe.Pointer(_pIdx + 94))), _regStat4+int32(2))
	_1475sqlite3VdbeAddOp4(tls, _v, int32(162), int32(0), _regStat4+int32(1), _regStat4, _1956statInitFuncdef, int32(-8))
	_1072sqlite3VdbeChangeP5(tls, _v, uint16(2))
	_addrRewind = _1489sqlite3VdbeAddOp1(tls, _v, int32(37), _iIdxCur)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(67), int32(0), _regChng)
	_addrNextRow = _1496sqlite3VdbeCurrentAddr(tls, _v)
	if _nColTest <= int32(0) {
		goto _12
	}

	_endDistinctTest = _1541sqlite3VdbeMakeLabel(tls, _v)
	_aGotoChng = _373sqlite3DbMallocRawNN(tls, _db, uint64(uint64(4)*uint64(_nColTest)))
	if _aGotoChng != 0 {
		goto _13
	}

	goto _6

_13:
	_1473sqlite3VdbeAddOp0(tls, _v, int32(13))
	_addrNextRow = _1496sqlite3VdbeCurrentAddr(tls, _v)
	if _nColTest != int32(1) || int32(*(*uint16)(unsafe.Pointer(_pIdx + 94))) != int32(1) || int32(*(*uint8)(unsafe.Pointer(_pIdx + 98))) == int32(0) {
		goto _14
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(51), _regPrev, _endDistinctTest)
_14:
	_i = int32(0)
_15:
	if _i >= _nColTest {
		goto _17
	}

	_pColl = _1519sqlite3LocateCollSeq(tls, _pParse, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 64))) + 8*uintptr(_i))))
	_1240sqlite3VdbeAddOp2(tls, _v, int32(67), _i, _regChng)
	_1241sqlite3VdbeAddOp3(tls, _v, int32(96), _iIdxCur, _i, _regTemp)
	*(*int32)(unsafe.Pointer(_aGotoChng + 4*uintptr(_i))) = _1475sqlite3VdbeAddOp4(tls, _v, int32(52), _regTemp, int32(0), _regPrev+_i, _pColl, int32(-2))
	_1072sqlite3VdbeChangeP5(tls, _v, uint16(0x80))
	_i++
	goto _15

_17:
	_1240sqlite3VdbeAddOp2(tls, _v, int32(67), _nColTest, _regChng)
	_1479sqlite3VdbeGoto(tls, _v, _endDistinctTest)
	_1474sqlite3VdbeJumpHere(tls, _v, _addrNextRow-int32(1))
	_i = int32(0)
_18:
	if _i >= _nColTest {
		goto _20
	}

	_1474sqlite3VdbeJumpHere(tls, _v, *(*int32)(unsafe.Pointer(_aGotoChng + 4*uintptr(_i))))
	_1241sqlite3VdbeAddOp3(tls, _v, int32(96), _iIdxCur, _i, _regPrev+_i)
	_i++
	goto _18

_20:
	_1569sqlite3VdbeResolveLabel(tls, _v, _endDistinctTest)
	_181sqlite3DbFree(tls, _db, _aGotoChng)
_12:
	_1475sqlite3VdbeAddOp4(tls, _v, int32(162), int32(1), _regStat4, _regTemp, _1957statPushFuncdef, int32(-8))
	_1072sqlite3VdbeChangeP5(tls, _v, uint16(2))
	_1240sqlite3VdbeAddOp2(tls, _v, int32(7), _iIdxCur, _addrNextRow)
	_1958callStatGet(tls, _v, _regStat4, int32(0), _regStat1)

	_1475sqlite3VdbeAddOp4(tls, _v, int32(99), _regTabname, int32(3), _regTemp, ts+32593 /* "BBB" */, int32(0))
	_1240sqlite3VdbeAddOp2(tls, _v, int32(115), _iStatCur, _regNewRowid)
	_1241sqlite3VdbeAddOp3(tls, _v, int32(116), _iStatCur, _regTemp, _regNewRowid)
	_1072sqlite3VdbeChangeP5(tls, _v, uint16(0x8))
	_1474sqlite3VdbeJumpHere(tls, _v, _addrRewind)

_6:
	_pIdx = *(*uintptr)(unsafe.Pointer(_pIdx + 40))
	goto _5

_7:
	if _pOnlyIdx != 0 || _needTableCnt == 0 {
		goto _21
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(100), _iTabCur, _regStat1)
	_jZeroRows = _1489sqlite3VdbeAddOp1(tls, _v, int32(22), _regStat1)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(70), int32(0), _regIdxname)

	_1475sqlite3VdbeAddOp4(tls, _v, int32(99), _regTabname, int32(3), _regTemp, ts+32593 /* "BBB" */, int32(0))
	_1240sqlite3VdbeAddOp2(tls, _v, int32(115), _iStatCur, _regNewRowid)
	_1241sqlite3VdbeAddOp3(tls, _v, int32(116), _iStatCur, _regTemp, _regNewRowid)
	_1072sqlite3VdbeChangeP5(tls, _v, uint16(0x8))
	_1474sqlite3VdbeJumpHere(tls, _v, _jZeroRows)
_21:
}

// _1853loadAnalysis is defined at sqlite3.c:99231:13
func _1853loadAnalysis(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _iDb int32) {
	var _v uintptr // *TVdbe = SVdbe

	_v = _1472sqlite3GetVdbe(tls, _pParse)
	if _v == 0 {
		goto _1
	}

	_1489sqlite3VdbeAddOp1(tls, _v, int32(138), _iDb)
_1:
}

// _1854whereOrName is defined at sqlite3.c:97381:13
func _1854whereOrName(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _zWhere uintptr /* *int8 */, _zConstant uintptr /* *int8 */) (r uintptr /* *int8 */) {
	var _zNew uintptr // *int8

	if _zWhere != 0 {
		goto _1
	}

	_zNew = _226sqlite3MPrintf(tls, _db, ts+32597 /* "name=%Q" */, _zConstant)
	goto _2

_1:
	_zNew = _226sqlite3MPrintf(tls, _db, ts+32605 /* "%s OR name=%Q" */, _zWhere, _zConstant)
	_181sqlite3DbFree(tls, _db, _zWhere)
_2:
	return _zNew
}

// _1855valueFromExpr is defined at sqlite3.c:71727:12
func _1855valueFromExpr(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pExpr uintptr /* *TExpr = SExpr */, _enc uint8, _affinity uint8, _ppVal uintptr /* **Tsqlite3_value = Ssqlite3_value */, _pCtx uintptr /* *SValueNewStat4Ctx */) (r int32) {
	esc := crt.MustMalloc(8)
	var (
		_op     int32
		_zVal   uintptr // *int8
		_pVal   = esc   // **Tsqlite3_value = Ssqlite3_value
		_negInt int32
		_zNeg   uintptr // *int8
		_rc     int32
		_aff    uint8
		_nVal   int32
	)
	defer crt.Free(esc)
	_zVal = 0
	*(*uintptr)(unsafe.Pointer(_pVal)) = 0
	_negInt = int32(1)
	_zNeg = ts + 4553 /* "" */
	_rc = int32(0)

_1:
	if set5(&_op, int32(*(*uint8)(unsafe.Pointer(_pExpr)))) != int32(149) && _op != int32(155) {
		goto _2
	}

	_pExpr = *(*uintptr)(unsafe.Pointer(_pExpr + 16))
	goto _1

_2:
	if _op != int32(150) {
		goto _3
	}

	_op = int32(*(*uint8)(unsafe.Pointer(_pExpr + 54)))
_3:
	if _op != int32(36) {
		goto _4
	}

	_aff = uint8(_1505sqlite3AffinityType(tls, *(*uintptr)(unsafe.Pointer(_pExpr + 8)), null))
	_rc = _1855valueFromExpr(tls, _db, *(*uintptr)(unsafe.Pointer(_pExpr + 16)), _enc, _aff, _ppVal, _pCtx)
	if (*(*uintptr)(unsafe.Pointer(_ppVal))) == 0 {
		goto _5
	}

	_659sqlite3VdbeMemCast(tls, *(*uintptr)(unsafe.Pointer(_ppVal)), _aff, uint8(1))
	_945sqlite3ValueApplyAffinity(tls, *(*uintptr)(unsafe.Pointer(_ppVal)), _affinity, uint8(1))
_5:
	return _rc

_4:
	if _op != int32(148) || int32(*(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pExpr + 16))))) != int32(134) && int32(*(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pExpr + 16))))) != int32(132) {
		goto _6
	}

	_pExpr = *(*uintptr)(unsafe.Pointer(_pExpr + 16))
	_op = int32(*(*uint8)(unsafe.Pointer(_pExpr)))
	_negInt = int32(-1)
	_zNeg = ts + 20097 /* "-" */
_6:
	if _op != int32(97) && _op != int32(132) && _op != int32(134) {
		goto _7
	}

	*(*uintptr)(unsafe.Pointer(_pVal)) = _1959valueNew(tls, _db, _pCtx)
	if (*(*uintptr)(unsafe.Pointer(_pVal))) != 0 {
		goto _9
	}

	goto _no_mem

_9:
	if ((*(*uint32)(unsafe.Pointer(_pExpr + 4))) & uint32(0x400)) == uint32(0) {
		goto _10
	}

	_527sqlite3VdbeMemSetInt64(tls, *(*uintptr)(unsafe.Pointer(_pVal)), int64(*(*int32)(unsafe.Pointer(_pExpr + 8)))*int64(_negInt))
	goto _11

_10:
	_zVal = _226sqlite3MPrintf(tls, _db, ts+8770 /* "%s%s" */, _zNeg, *(*uintptr)(unsafe.Pointer(_pExpr + 8)))
	if _zVal != 0 {
		goto _12
	}

	goto _no_mem

_12:
	_316sqlite3ValueSetStr(tls, *(*uintptr)(unsafe.Pointer(_pVal)), int32(-1), _zVal, uint8(1), fp10(_109sqlite3MallocSize))
_11:
	if _op != int32(134) && _op != int32(132) || int32(_affinity) != int32('A') {
		goto _13
	}

	_945sqlite3ValueApplyAffinity(tls, *(*uintptr)(unsafe.Pointer(_pVal)), uint8('C'), uint8(1))
	goto _14

_13:
	_945sqlite3ValueApplyAffinity(tls, *(*uintptr)(unsafe.Pointer(_pVal)), _affinity, uint8(1))
_14:
	if (int32(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pVal))) + 8))) & int32(12)) == 0 {
		goto _15
	}

	{
		p := &(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pVal))) + 8)))
		*p = uint16(int32(*p) & int32(-3))
	}
_15:
	if int32(_enc) == int32(1) {
		goto _16
	}

	_rc = _396sqlite3VdbeChangeEncoding(tls, *(*uintptr)(unsafe.Pointer(_pVal)), int32(_enc))
_16:
	goto _8

_7:
	if _op != int32(148) {
		goto _17
	}

	if int32(0) != _1855valueFromExpr(tls, _db, *(*uintptr)(unsafe.Pointer(_pExpr + 16)), _enc, _affinity, _pVal, _pCtx) || (*(*uintptr)(unsafe.Pointer(_pVal))) == 0 {
		goto _19
	}

	_946sqlite3VdbeMemNumerify(tls, *(*uintptr)(unsafe.Pointer(_pVal)))
	if (int32(*(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pVal))) + 8))) & int32(0x8)) == 0 {
		goto _20
	}

	*(*float64)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pVal)))) = -(*(*float64)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pVal)))))
	goto _21

_20:
	if (*(*int64)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pVal))))) != int64(-9223372036854775808) {
		goto _22
	}

	*(*float64)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pVal)))) = float64(9.223372036854776e+18)
	*(*uint16)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pVal)) + 8)) = uint16((int32(*(*uint16)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pVal)) + 8))) & int32(-49664)) | int32(0x8))
	goto _23

_22:
	*(*int64)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pVal)))) = -(*(*int64)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pVal)))))
_23:
_21:
	_945sqlite3ValueApplyAffinity(tls, *(*uintptr)(unsafe.Pointer(_pVal)), _affinity, _enc)
_19:
	goto _18

_17:
	if _op != int32(101) {
		goto _24
	}

	*(*uintptr)(unsafe.Pointer(_pVal)) = _1959valueNew(tls, _db, _pCtx)
	if (*(*uintptr)(unsafe.Pointer(_pVal))) != 0 {
		goto _26
	}

	goto _no_mem

_26:
	_946sqlite3VdbeMemNumerify(tls, *(*uintptr)(unsafe.Pointer(_pVal)))
	goto _25

_24:
	if _op != int32(133) {
		goto _27
	}

	*(*uintptr)(unsafe.Pointer(_pVal)) = _1959valueNew(tls, _db, _pCtx)
	if (*(*uintptr)(unsafe.Pointer(_pVal))) != 0 {
		goto _28
	}

	goto _no_mem

_28:
	_zVal = (*(*uintptr)(unsafe.Pointer(_pExpr + 8))) + 2
	_nVal = _211sqlite3Strlen30(tls, _zVal) - int32(1)

	_395sqlite3VdbeMemSetStr(tls, *(*uintptr)(unsafe.Pointer(_pVal)), _1863sqlite3HexToBlob(tls, _db, _zVal, _nVal), _nVal/int32(2), uint8(0), fp10(_109sqlite3MallocSize))
_27:
_25:
_18:
_8:
	*(*uintptr)(unsafe.Pointer(_ppVal)) = *(*uintptr)(unsafe.Pointer(_pVal))
	return _rc

	goto _no_mem
_no_mem:
	_178sqlite3OomFault(tls, _db)
	_181sqlite3DbFree(tls, _db, _zVal)

	_371sqlite3ValueFree(tls, *(*uintptr)(unsafe.Pointer(_pVal)))
	return int32(7)
}

type SPragmaVtab struct {
	Xbase    Ssqlite3_vtab
	Xdb      uintptr // *Ssqlite3
	XpName   uintptr // *struct{XzName *int8;XePragTyp uint8;XmPragFlg uint8;XiPragCName uint8;XnPragCName uint8;XiArg uint32;}
	XnHidden uint8
	XiHidden uint8
}

type SPragmaVtabCursor struct {
	Xbase    Ssqlite3_vtab_cursor
	XpPragma uintptr // *Ssqlite3_stmt
	XiRowid  int64
	XazArg   [2]uintptr
}

// _1856pragmaVtabCursorClear is defined at sqlite3.c:116622:13
func _1856pragmaVtabCursorClear(tls crt.TLS, _pCsr uintptr /* *TPragmaVtabCursor = SPragmaVtabCursor */) {
	var _i int32

	Xsqlite3_finalize(tls, *(*uintptr)(unsafe.Pointer(_pCsr + 8)))
	*(*uintptr)(unsafe.Pointer(_pCsr + 8)) = null
	_i = int32(0)
_1:
	if _i >= int32(2) {
		goto _3
	}

	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer((_pCsr + 24) + 8*uintptr(_i))))
	*(*uintptr)(unsafe.Pointer((_pCsr + 24) + 8*uintptr(_i))) = null
	_i++
	goto _1

_3:
}

// _1857aMx [6]uint16, escapes: true, sqlite3.c:19553:20
var _1857aMx = ds + 17656

// _1858closePendingFds is defined at sqlite3.c:31596:13
func _1858closePendingFds(tls crt.TLS, _pFile uintptr /* *TunixFile = SunixFile */) {
	var (
		_pInode uintptr // *TunixInodeInfo = SunixInodeInfo
		_p      uintptr // *TUnixUnusedFd = SUnixUnusedFd
		_pNext  uintptr // *TUnixUnusedFd = SUnixUnusedFd
	)
	_pInode = *(*uintptr)(unsafe.Pointer(_pFile + 16))
	_p = *(*uintptr)(unsafe.Pointer(_pInode + 48))
_1:
	if _p == 0 {
		goto _3
	}

	_pNext = *(*uintptr)(unsafe.Pointer(_p + 8))
	_1121robust_close(tls, _pFile, *(*int32)(unsafe.Pointer(_p)), int32(31602))
	Xsqlite3_free(tls, _p)
	_1270nUnusedFd--
	_p = _pNext
	goto _1

_3:
	*(*uintptr)(unsafe.Pointer(_pInode + 48)) = null
}

// _1859unixRemapfile is defined at sqlite3.c:35170:13
func _1859unixRemapfile(tls crt.TLS, _pFd uintptr /* *TunixFile = SunixFile */, _nNew int64) {
	var (
		_zErr      uintptr // *int8
		_h         int32
		_pOrig     uintptr // *Tu8 = uint8
		_nOrig     int64
		_pNew      uintptr // *Tu8 = uint8
		_flags     int32
		_szSyspage int32
		_nReuse    int64
		_pReq      uintptr // *Tu8 = uint8
	)
	_zErr = ts + 23974 /* "mmap" */
	_h = *(*int32)(unsafe.Pointer(_pFd + 24))
	_pOrig = *(*uintptr)(unsafe.Pointer(_pFd + 104))
	_nOrig = int64(*(*int64)(unsafe.Pointer(_pFd + 88)))
	_pNew = 0
	_flags = int32(0x1)

	if _pOrig == 0 {
		goto _1
	}

	_szSyspage = fn38(*(*uintptr)(unsafe.Pointer((_1118aSyscall + 600) + 8)))(tls)
	_nReuse = int64((*(*int64)(unsafe.Pointer(_pFd + 80))) & int64(^(_szSyspage - int32(1))))
	_pReq = _pOrig + uintptr(_nReuse)
	if _nReuse == _nOrig {
		goto _2
	}

	fn188(*(*uintptr)(unsafe.Pointer((_1118aSyscall + 552) + 8)))(tls, _pReq, uint64(_nOrig-_nReuse))
_2:
	_pNew = fn210(*(*uintptr)(unsafe.Pointer((_1118aSyscall + 528) + 8)))(tls, _pReq, uint64(_nNew-_nReuse), _flags, int32(0x1), _h, int64(_nReuse))
	if _pNew == uintptr(18446744073709551615) {
		goto _3
	}

	if _pNew == _pReq {
		goto _4
	}

	fn188(*(*uintptr)(unsafe.Pointer((_1118aSyscall + 552) + 8)))(tls, _pNew, uint64(_nNew-_nReuse))
	_pNew = null
	goto _5

_4:
	_pNew = _pOrig
_5:
_3:
	if _pNew != uintptr(18446744073709551615) && _pNew != 0 {
		goto _6
	}

	fn188(*(*uintptr)(unsafe.Pointer((_1118aSyscall + 552) + 8)))(tls, _pOrig, uint64(_nReuse))
_6:
_1:
	if _pNew != 0 {
		goto _7
	}

	_pNew = fn210(*(*uintptr)(unsafe.Pointer((_1118aSyscall + 528) + 8)))(tls, null, uint64(_nNew), _flags, int32(0x1), _h, int64(0))
_7:
	if _pNew != uintptr(18446744073709551615) {
		goto _8
	}

	_pNew = null
	_nNew = int64(0)
	_1116unixLogErrorAtLine(tls, int32(0), _zErr, *(*uintptr)(unsafe.Pointer(_pFd + 56)), int32(35235))
	*(*int64)(unsafe.Pointer(_pFd + 96)) = int64(0)
_8:
	*(*uintptr)(unsafe.Pointer(_pFd + 104)) = _pNew
	*(*int64)(unsafe.Pointer(_pFd + 80)) = set139(&(*(*int64)(unsafe.Pointer(_pFd + 88))), int64(_nNew))
}

type SSublist struct {
	XnList int32
	XaList uintptr // *uint16
}

// _1860walMerge is defined at sqlite3.c:56534:13
func _1860walMerge(tls crt.TLS, _aContent uintptr /* *Tu32 = uint32 */, _aLeft uintptr /* *Tht_slot = Tu16 = uint16 */, _nLeft int32, _paRight uintptr /* **Tht_slot = Tu16 = uint16 */, _pnRight uintptr /* *int32 */, _aTmp uintptr /* *Tht_slot = Tu16 = uint16 */) {
	var (
		_iLeft   int32
		_iRight  int32
		_iOut    int32
		_nRight  int32
		_aRight  uintptr // *Tht_slot = Tu16 = uint16
		_logpage uint16
		_dbpage  uint32
	)
	_iLeft = int32(0)
	_iRight = int32(0)
	_iOut = int32(0)
	_nRight = *(*int32)(unsafe.Pointer(_pnRight))
	_aRight = *(*uintptr)(unsafe.Pointer(_paRight))

_1:
	if _iRight >= _nRight && _iLeft >= _nLeft {
		goto _2
	}

	if _iLeft >= _nLeft || _iRight < _nRight && (*(*uint32)(unsafe.Pointer(_aContent + 4*uintptr(*(*uint16)(unsafe.Pointer(_aLeft + 2*uintptr(_iLeft))))))) >= (*(*uint32)(unsafe.Pointer(_aContent + 4*uintptr(*(*uint16)(unsafe.Pointer(_aRight + 2*uintptr(_iRight))))))) {
		goto _3
	}

	_logpage = *(*uint16)(unsafe.Pointer(_aLeft + 2*uintptr(postinc7(&_iLeft))))
	goto _4

_3:
	_logpage = *(*uint16)(unsafe.Pointer(_aRight + 2*uintptr(postinc7(&_iRight))))
_4:
	_dbpage = uint32(*(*uint32)(unsafe.Pointer(_aContent + 4*uintptr(_logpage))))
	*(*uint16)(unsafe.Pointer(_aTmp + 2*uintptr(postinc7(&_iOut)))) = _logpage
	if _iLeft >= _nLeft || (*(*uint32)(unsafe.Pointer(_aContent + 4*uintptr(*(*uint16)(unsafe.Pointer(_aLeft + 2*uintptr(_iLeft))))))) != uint32(_dbpage) {
		goto _5
	}

	_iLeft++
_5:
	goto _1

_2:
	*(*uintptr)(unsafe.Pointer(_paRight)) = _aLeft
	*(*int32)(unsafe.Pointer(_pnRight)) = _iOut
	crt.Xmemcpy(tls, _aLeft, _aTmp, uint64(2)*uint64(_iOut))
}

// _1861codeInteger is defined at sqlite3.c:94897:13
func _1861codeInteger(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pExpr uintptr /* *TExpr = SExpr */, _negFlag int32, _iMem int32) {
	esc := crt.MustMalloc(8)
	var (
		_v     uintptr // *TVdbe = SVdbe
		_i     int32
		_c     int32
		_value = esc   // *Ti64 = Tsqlite_int64 = int64
		_z     uintptr // *int8
	)
	defer crt.Free(esc)
	_v = *(*uintptr)(unsafe.Pointer(_pParse + 16))
	if ((*(*uint32)(unsafe.Pointer(_pExpr + 4))) & uint32(0x400)) == 0 {
		goto _1
	}

	_i = *(*int32)(unsafe.Pointer(_pExpr + 8))

	if _negFlag == 0 {
		goto _3
	}

	_i = -_i
_3:
	_1240sqlite3VdbeAddOp2(tls, _v, int32(67), _i, _iMem)
	goto _2

_1:
	_z = *(*uintptr)(unsafe.Pointer(_pExpr + 8))

	_c = _1088sqlite3DecOrHexToI64(tls, _z, _value)
	if (_c != int32(3) || _negFlag != 0) && _c != int32(2) && (_negFlag == 0 || (*(*int64)(unsafe.Pointer(_value))) != int64(-9223372036854775808)) {
		goto _4
	}

	if Xsqlite3_strnicmp(tls, _z, ts+32619 /* "0x" */, int32(2)) != int32(0) {
		goto _6
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+32622 /* "hex literal too big: %s%s" */, func() uintptr {
		if _negFlag != 0 {
			return ts + 20097 /* "-" */
		}
		return ts + 4553 /* "" */
	}(), _z)
	goto _7

_6:
	_1862codeReal(tls, _v, _z, _negFlag, _iMem)
_7:
	goto _5

_4:
	if _negFlag == 0 {
		goto _8
	}

	*(*int64)(unsafe.Pointer(_value)) = func() int64 {
		if _c == int32(3) {
			return int64(-9223372036854775808)
		}
		return -(*(*int64)(unsafe.Pointer(_value)))
	}()
_8:
	_1838sqlite3VdbeAddOp4Dup8(tls, _v, int32(68), int32(0), _iMem, int32(0), _value, int32(-14))
_5:
_2:
}

// _1862codeReal is defined at sqlite3.c:94879:13
func _1862codeReal(tls crt.TLS, _v uintptr /* *TVdbe = SVdbe */, _z uintptr /* *int8 */, _negateFlag int32, _iMem int32) {
	esc := crt.MustMalloc(8)
	var _value = esc // *float64
	defer crt.Free(esc)
	if _z == 0 {
		goto _1
	}

	_808sqlite3AtoF(tls, _z, _value, _211sqlite3Strlen30(tls, _z), uint8(1))

	if _negateFlag == 0 {
		goto _2
	}

	*(*float64)(unsafe.Pointer(_value)) = -(*(*float64)(unsafe.Pointer(_value)))
_2:
	_1838sqlite3VdbeAddOp4Dup8(tls, _v, int32(132), int32(0), _iMem, int32(0), _value, int32(-13))
_1:
}

// _1863sqlite3HexToBlob is defined at sqlite3.c:29336:21
func _1863sqlite3HexToBlob(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _z uintptr /* *int8 */, _n int32) (r uintptr /* *void */) {
	var (
		_zBlob uintptr // *int8
		_i     int32
	)
	_zBlob = _373sqlite3DbMallocRawNN(tls, _db, uint64((_n/int32(2))+int32(1)))
	_n--
	if _zBlob == 0 {
		goto _1
	}

	_i = int32(0)
_2:
	if _i >= _n {
		goto _4
	}

	*(*int8)(unsafe.Pointer(_zBlob + uintptr(_i/int32(2)))) = int8((int32(_508sqlite3HexToInt(tls, int32(*(*int8)(unsafe.Pointer(_z + uintptr(_i)))))) << (uint(4) % 32)) | int32(_508sqlite3HexToInt(tls, int32(*(*int8)(unsafe.Pointer(_z + uintptr(_i+int32(1))))))))
	_i = int32(_i + int32(2))
	goto _2

_4:
	*(*int8)(unsafe.Pointer(_zBlob + uintptr(_i/int32(2)))) = int8(0)
_1:
	return _zBlob
}

// _1864codeVectorCompare is defined at sqlite3.c:92342:13
func _1864codeVectorCompare(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pExpr uintptr /* *TExpr = SExpr */, _dest int32, _op uint8, _p5 uint8) {
	esc := crt.MustMalloc(56)
	var (
		_v        uintptr // *TVdbe = SVdbe
		_pLeft    uintptr // *TExpr = SExpr
		_pRight   uintptr // *TExpr = SExpr
		_nLeft    int32
		_i        int32
		_regLeft  int32
		_regRight int32
		_opx      uint8
		_addrDone int32
		_regFree1 = esc      // *int32
		_regFree2 = esc + 16 // *int32
		_pL       = esc + 32 // **TExpr = SExpr
		_pR       = esc + 48 // **TExpr = SExpr
		_r1       int32
		_r2       int32
	)
	defer crt.Free(esc)
	_v = *(*uintptr)(unsafe.Pointer(_pParse + 16))
	_pLeft = *(*uintptr)(unsafe.Pointer(_pExpr + 16))
	_pRight = *(*uintptr)(unsafe.Pointer(_pExpr + 24))
	_nLeft = _1608sqlite3ExprVectorSize(tls, _pLeft)
	_regLeft = int32(0)
	_regRight = int32(0)
	_opx = _op
	_addrDone = _1541sqlite3VdbeMakeLabel(tls, _v)
	if _nLeft == _1608sqlite3ExprVectorSize(tls, _pRight) {
		goto _1
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+31146 /* "row value misused" */)
	return

_1:
	_p5 = uint8(int32(_p5) | int32(0x20))
	if int32(_opx) != int32(55) {
		goto _2
	}

	_opx = uint8(56)
_2:
	if int32(_opx) != int32(57) {
		goto _3
	}

	_opx = uint8(54)
_3:
	_regLeft = _1960exprCodeSubselect(tls, _pParse, _pLeft)
	_regRight = _1960exprCodeSubselect(tls, _pParse, _pRight)
	_i = int32(0)
_4:
	if 1 == 0 {
		goto _6
	}

	*(*int32)(unsafe.Pointer(_regFree1)) = int32(0)
	*(*int32)(unsafe.Pointer(_regFree2)) = int32(0)

	if _i <= int32(0) {
		goto _7
	}

	_1652sqlite3ExprCachePush(tls, _pParse)
_7:
	_r1 = _1961exprVectorRegister(tls, _pParse, _pLeft, _i, _regLeft, _pL, _regFree1)
	_r2 = _1961exprVectorRegister(tls, _pParse, _pRight, _i, _regRight, _pR, _regFree2)
	_1805codeCompare(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pL)), *(*uintptr)(unsafe.Pointer(_pR)), int32(_opx), _r1, _r2, _dest, int32(_p5))
	_1563sqlite3ReleaseTempReg(tls, _pParse, *(*int32)(unsafe.Pointer(_regFree1)))
	_1563sqlite3ReleaseTempReg(tls, _pParse, *(*int32)(unsafe.Pointer(_regFree2)))
	if _i <= int32(0) {
		goto _8
	}

	_1654sqlite3ExprCachePop(tls, _pParse)
_8:
	if _i != (_nLeft - int32(1)) {
		goto _9
	}

	goto _6

_9:
	if int32(_opx) != int32(53) {
		goto _10
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(22), _dest, _addrDone)
	_p5 = uint8(int32(_p5) | int32(0x8))
	goto _11

_10:
	if int32(_opx) != int32(52) {
		goto _12
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(21), _dest, _addrDone)
	_p5 = uint8(int32(_p5) | int32(0x8))
	goto _13

_12:
	_1240sqlite3VdbeAddOp2(tls, _v, int32(58), int32(0), _addrDone)
	if _i != (_nLeft - int32(2)) {
		goto _14
	}

	_opx = _op
_14:
_13:
_11:
	_i++
	goto _4

_6:
	_1569sqlite3VdbeResolveLabel(tls, _v, _addrDone)
}

// _1865sqlite3ExprIsConstantNotJoin is defined at sqlite3.c:93650:20
func _1865sqlite3ExprIsConstantNotJoin(tls crt.TLS, _p uintptr /* *TExpr = SExpr */) (r int32) {
	return _1736exprIsConst(tls, _p, int32(2), int32(0))
}

// _1866sqlite3VtabOverloadFunction is defined at sqlite3.c:127351:24
func _1866sqlite3VtabOverloadFunction(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pDef uintptr /* *TFuncDef = SFuncDef */, _nArg int32, _pExpr uintptr /* *TExpr = SExpr */) (r uintptr /* *TFuncDef = SFuncDef */) {
	esc := crt.MustMalloc(24)
	var (
		_pTab       uintptr    // *TTable = STable
		_pVtab      uintptr    // *Tsqlite3_vtab = Ssqlite3_vtab
		_pMod       uintptr    // *Tsqlite3_module = Ssqlite3_module
		_xSFunc     = esc      // **func(crt.TLS, uintptr, int32, uintptr)
		_pArg       = esc + 16 // **void
		_pNew       uintptr    // *TFuncDef = SFuncDef
		_rc         int32
		_zLowerName uintptr // *int8
		_z          uintptr // *uint8
	)
	defer crt.Free(esc)
	*(*uintptr)(unsafe.Pointer(_xSFunc)) = 0
	*(*uintptr)(unsafe.Pointer(_pArg)) = 0
	_rc = int32(0)
	if _pExpr != 0 {
		goto _1
	}

	return _pDef

_1:
	if int32(*(*uint8)(unsafe.Pointer(_pExpr))) == int32(145) {
		goto _2
	}

	return _pDef

_2:
	_pTab = *(*uintptr)(unsafe.Pointer(_pExpr + 64))
	if _pTab != 0 {
		goto _3
	}

	return _pDef

_3:
	if *(*int32)(unsafe.Pointer(_pTab + 84)) != 0 {
		goto _4
	}

	return _pDef

_4:
	_pVtab = *(*uintptr)(unsafe.Pointer(_1037sqlite3GetVTable(tls, _db, _pTab) + 16))

	_pMod = *(*uintptr)(unsafe.Pointer(_pVtab))
	if (*(*uintptr)(unsafe.Pointer(_pMod + 144))) != 0 {
		goto _5
	}

	return _pDef

_5:
	_zLowerName = _183sqlite3DbStrDup(tls, _db, *(*uintptr)(unsafe.Pointer(_pDef + 40)))
	if _zLowerName == 0 {
		goto _6
	}

	_z = _zLowerName
_7:
	if (*(*uint8)(unsafe.Pointer(_z))) == 0 {
		goto _9
	}

	*(*uint8)(unsafe.Pointer(_z)) = *(*uint8)(unsafe.Pointer(_215sqlite3UpperToLower + uintptr(*(*uint8)(unsafe.Pointer(_z)))))
	_z++
	goto _7

_9:
	_rc = fn27(*(*uintptr)(unsafe.Pointer(_pMod + 144)))(tls, _pVtab, _nArg, _zLowerName, _xSFunc, _pArg)
	_181sqlite3DbFree(tls, _db, _zLowerName)
_6:
	if _rc != int32(0) {
		goto _10
	}

	return _pDef

_10:
	_pNew = _295sqlite3DbMallocZero(tls, _db, uint64((uint64(56)+uint64(_211sqlite3Strlen30(tls, *(*uintptr)(unsafe.Pointer(_pDef + 40)))))+uint64(1)))
	if _pNew != 0 {
		goto _11
	}

	return _pDef

_11:
	*(*SFuncDef)(unsafe.Pointer(_pNew)) = *(*SFuncDef)(unsafe.Pointer(_pDef))
	*(*uintptr)(unsafe.Pointer(_pNew + 40)) = _pNew + 56
	crt.Xmemcpy(tls, _pNew+56, *(*uintptr)(unsafe.Pointer(_pDef + 40)), uint64(_211sqlite3Strlen30(tls, *(*uintptr)(unsafe.Pointer(_pDef + 40)))+int32(1)))
	*(*uintptr)(unsafe.Pointer(_pNew + 24)) = *(*uintptr)(unsafe.Pointer(_xSFunc))
	*(*uintptr)(unsafe.Pointer(_pNew + 8)) = *(*uintptr)(unsafe.Pointer(_pArg))
	{
		p := &(*(*uint16)(unsafe.Pointer(_pNew + 2)))
		*p = uint16(int32(*p) | int32(0x10))
	}
	return _pNew
}

// _1867sqlite3SubselectError is defined at sqlite3.c:94296:21
func _1867sqlite3SubselectError(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _nActual int32, _nExpect int32) {
	var _zFmt uintptr // *int8

	_zFmt = ts + 32648 /* "sub-select returns %d columns - ..." */
	_550sqlite3ErrorMsg(tls, _pParse, _zFmt, _nActual, _nExpect)
}

// _1868sqlite3CodeSubselect is defined at sqlite3.c:94354:20
func _1868sqlite3CodeSubselect(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pExpr uintptr /* *TExpr = SExpr */, _rHasNullFlag int32, _isRowid int32) (r int32) {
	esc := crt.MustMalloc(96)
	var (
		_jmpIfDynamic int32
		_rReg         int32
		_v            uintptr // *TVdbe = SVdbe
		_zMsg         uintptr // *int8
		_addr         int32
		_pLeft        uintptr // *TExpr = SExpr
		_pKeyInfo     uintptr // *TKeyInfo = SKeyInfo
		_nVal         int32
		_pSelect      uintptr // *TSelect = SSelect
		_pEList       uintptr // *TExprList = SExprList
		_dest         = esc   // *TSelectDest = SSelectDest
		_i            int32
		_p            uintptr    // *TExpr = SExpr
		_affinity     = esc + 32 // *int8
		_1i           int32
		_pList        uintptr // *TExprList = SExprList
		_pItem        uintptr // *SExprList_item
		_r1           int32
		_r2           int32
		_r3           int32
		_pE2          uintptr    // *TExpr = SExpr
		_iValToIns    = esc + 48 // *int32
		_pSel         uintptr    // *TSelect = SSelect
		_2dest        = esc + 64 // *TSelectDest = SSelectDest
		_nReg         int32
	)
	defer crt.Free(esc)
	_jmpIfDynamic = int32(-1)
	_rReg = int32(0)
	_v = _1472sqlite3GetVdbe(tls, _pParse)
	if _v != 0 {
		goto _1
	}

	return int32(0)

_1:
	_1652sqlite3ExprCachePush(tls, _pParse)
	if ((*(*uint32)(unsafe.Pointer(_pExpr + 4))) & uint32(0x20)) != uint32(0) {
		goto _2
	}

	_jmpIfDynamic = _1473sqlite3VdbeAddOp0(tls, _v, int32(20))
_2:
	if int32(*(*uint8)(unsafe.Pointer(_pParse + 467))) != int32(2) {
		goto _3
	}

	_zMsg = _226sqlite3MPrintf(tls, *(*uintptr)(unsafe.Pointer(_pParse)), ts+32692 /* "EXECUTE %s%s SUBQUERY %d" */, func() uintptr {
		if _jmpIfDynamic >= int32(0) {
			return ts + 4553 /* "" */
		}
		return ts + 32717 /* "CORRELATED " */
	}(), func() uintptr {
		if int32(*(*uint8)(unsafe.Pointer(_pExpr))) == int32(49) {
			return ts + 32729 /* "LIST" */
		}
		return ts + 32734 /* "SCALAR" */
	}(), *(*int32)(unsafe.Pointer(_pParse + 484)))
	_1475sqlite3VdbeAddOp4(tls, _v, int32(167), *(*int32)(unsafe.Pointer(_pParse + 480)), int32(0), int32(0), _zMsg, int32(-7))
_3:
	switch int32(*(*uint8)(unsafe.Pointer(_pExpr))) {
	case int32(49):
		goto _5
	case int32(20):
		goto _6
	case int32(119):
		goto _7
	default:
		goto _8
	}
_5:
	_pLeft = *(*uintptr)(unsafe.Pointer(_pExpr + 16))
	_pKeyInfo = 0
	_nVal = _1608sqlite3ExprVectorSize(tls, _pLeft)

	*(*int32)(unsafe.Pointer(_pExpr + 44)) = postinc7(&(*(*int32)(unsafe.Pointer(_pParse + 52))))
	_addr = _1240sqlite3VdbeAddOp2(tls, _v, int32(108), *(*int32)(unsafe.Pointer(_pExpr + 44)), func() int32 {
		if _isRowid != 0 {
			return int32(0)
		}
		return _nVal
	}())
	_pKeyInfo = func() uintptr {
		if _isRowid != 0 {
			return null
		}
		return _1765sqlite3KeyInfoAlloc(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _nVal, int32(1))
	}()
	if ((*(*uint32)(unsafe.Pointer(_pExpr + 4))) & uint32(0x800)) == uint32(0) {
		goto _9
	}

	_pSelect = *(*uintptr)(unsafe.Pointer(_pExpr + 32))
	_pEList = *(*uintptr)(unsafe.Pointer(_pSelect))

	if (*(*int32)(unsafe.Pointer(_pEList))) != _nVal {
		goto _11
	}

	_1497sqlite3SelectDestInit(tls, _dest, int32(11), *(*int32)(unsafe.Pointer(_pExpr + 44)))
	*(*uintptr)(unsafe.Pointer(_dest + 16)) = _1936exprINAffinity(tls, _pParse, _pExpr)
	*(*int32)(unsafe.Pointer(_pSelect + 16)) = int32(0)
	if _1327sqlite3Select(tls, _pParse, _pSelect, _dest) == 0 {
		goto _12
	}

	_181sqlite3DbFree(tls, *(*uintptr)(unsafe.Pointer(_pParse)), *(*uintptr)(unsafe.Pointer(_dest + 16)))
	_1259sqlite3KeyInfoUnref(tls, _pKeyInfo)
	return int32(0)

_12:
	_181sqlite3DbFree(tls, *(*uintptr)(unsafe.Pointer(_pParse)), *(*uintptr)(unsafe.Pointer(_dest + 16)))

	_i = int32(0)
_13:
	if _i >= _nVal {
		goto _15
	}

	_p = _1938sqlite3VectorFieldSubexpr(tls, _pLeft, _i)
	*(*uintptr)(unsafe.Pointer((_pKeyInfo + 32) + 8*uintptr(_i))) = _1910sqlite3BinaryCompareCollSeq(tls, _pParse, _p, *(*uintptr)(unsafe.Pointer((_pEList + 8) + 32*uintptr(_i))))
	_i++
	goto _13

_15:
_11:
	goto _10

_9:
	if (*(*uintptr)(unsafe.Pointer(_pExpr + 32))) == 0 {
		goto _16
	}

	_pList = *(*uintptr)(unsafe.Pointer(_pExpr + 32))
	*(*int8)(unsafe.Pointer(_affinity)) = _1817sqlite3ExprAffinity(tls, _pLeft)
	if (*(*int8)(unsafe.Pointer(_affinity))) != 0 {
		goto _17
	}

	*(*int8)(unsafe.Pointer(_affinity)) = int8('A')
_17:
	if _pKeyInfo == 0 {
		goto _18
	}

	*(*uintptr)(unsafe.Pointer(_pKeyInfo + 32)) = _1789sqlite3ExprCollSeq(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pExpr + 16)))
_18:
	_r1 = _1562sqlite3GetTempReg(tls, _pParse)
	_r2 = _1562sqlite3GetTempReg(tls, _pParse)
	if _isRowid == 0 {
		goto _19
	}

	_1475sqlite3VdbeAddOp4(tls, _v, int32(72), int32(0), _r2, int32(0), ts+4553 /* "" */, int32(-1))
_19:
	_1i = *(*int32)(unsafe.Pointer(_pList))
	_pItem = _pList + 8
_20:
	if _1i <= int32(0) {
		goto _22
	}

	_pE2 = *(*uintptr)(unsafe.Pointer(_pItem))
	if _jmpIfDynamic < int32(0) || _1799sqlite3ExprIsConstant(tls, _pE2) != 0 {
		goto _23
	}

	_1549sqlite3VdbeChangeToNoop(tls, _v, _jmpIfDynamic)
	_jmpIfDynamic = int32(-1)
_23:
	if _isRowid == 0 || _1762sqlite3ExprIsInteger(tls, _pE2, _iValToIns) == 0 {
		goto _24
	}

	_1241sqlite3VdbeAddOp3(tls, _v, int32(117), *(*int32)(unsafe.Pointer(_pExpr + 44)), _r2, *(*int32)(unsafe.Pointer(_iValToIns)))
	goto _25

_24:
	_r3 = _1728sqlite3ExprCodeTarget(tls, _pParse, _pE2, _r1)
	if _isRowid == 0 {
		goto _26
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(17), _r3, _1496sqlite3VdbeCurrentAddr(tls, _v)+int32(2))
	_1241sqlite3VdbeAddOp3(tls, _v, int32(116), *(*int32)(unsafe.Pointer(_pExpr + 44)), _r2, _r3)
	goto _27

_26:
	_1475sqlite3VdbeAddOp4(tls, _v, int32(99), _r3, int32(1), _r2, _affinity, int32(1))
	_1792sqlite3ExprCacheAffinityChange(tls, _pParse, _r3, int32(1))
	_1071sqlite3VdbeAddOp4Int(tls, _v, int32(127), *(*int32)(unsafe.Pointer(_pExpr + 44)), _r2, _r3, int32(1))
_27:
_25:
	_1i--
	_pItem += 32
	goto _20

_22:
	_1563sqlite3ReleaseTempReg(tls, _pParse, _r1)
	_1563sqlite3ReleaseTempReg(tls, _pParse, _r2)
_16:
_10:
	if _pKeyInfo == 0 {
		goto _28
	}

	_1075sqlite3VdbeChangeP4(tls, _v, _addr, _pKeyInfo, int32(-9))
_28:
	goto _4

_6:
_7:
_8:
	_pSel = *(*uintptr)(unsafe.Pointer(_pExpr + 32))
	_nReg = func() int32 {
		if int32(*(*uint8)(unsafe.Pointer(_pExpr))) == int32(119) {
			return *(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pSel))))
		}
		return int32(1)
	}()
	_1497sqlite3SelectDestInit(tls, _2dest, int32(0), (*(*int32)(unsafe.Pointer(_pParse + 56)))+int32(1))
	{
		p := &(*(*int32)(unsafe.Pointer(_pParse + 56)))
		*p = int32(int32(*p) + _nReg)
	}
	if int32(*(*uint8)(unsafe.Pointer(_pExpr))) != int32(119) {
		goto _29
	}

	*(*uint8)(unsafe.Pointer(_2dest)) = uint8(10)
	*(*int32)(unsafe.Pointer(_2dest + 8)) = *(*int32)(unsafe.Pointer(_2dest + 4))
	*(*int32)(unsafe.Pointer(_2dest + 12)) = _nReg
	_1241sqlite3VdbeAddOp3(tls, _v, int32(70), int32(0), *(*int32)(unsafe.Pointer(_2dest + 4)), ((*(*int32)(unsafe.Pointer(_2dest + 4)))+_nReg)-int32(1))
	goto _30

_29:
	*(*uint8)(unsafe.Pointer(_2dest)) = uint8(3)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(67), int32(0), *(*int32)(unsafe.Pointer(_2dest + 4)))
_30:
	_777sqlite3ExprDelete(tls, *(*uintptr)(unsafe.Pointer(_pParse)), *(*uintptr)(unsafe.Pointer(_pSel + 88)))
	*(*uintptr)(unsafe.Pointer(_pSel + 88)) = _1335sqlite3ExprAlloc(tls, *(*uintptr)(unsafe.Pointer(_pParse)), int32(134), _1360sqlite3IntTokens+16, int32(0))
	*(*int32)(unsafe.Pointer(_pSel + 16)) = int32(0)
	{
		p := &(*(*uint32)(unsafe.Pointer(_pSel + 12)))
		*p = uint32(uint32(*p) & uint32(4294966271))
	}
	if _1327sqlite3Select(tls, _pParse, _pSel, _2dest) == 0 {
		goto _31
	}

	return int32(0)

_31:
	_rReg = *(*int32)(unsafe.Pointer(_2dest + 4))
	goto _4

_4:
	if _rHasNullFlag == 0 {
		goto _32
	}

	_1962sqlite3SetHasNullFlag(tls, _v, *(*int32)(unsafe.Pointer(_pExpr + 44)), _rHasNullFlag)
_32:
	if _jmpIfDynamic < int32(0) {
		goto _33
	}

	_1474sqlite3VdbeJumpHere(tls, _v, _jmpIfDynamic)
_33:
	_1654sqlite3ExprCachePop(tls, _pParse)
	return _rReg
}

// _1869exprCodeVector is defined at sqlite3.c:95255:12
func _1869exprCodeVector(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _p uintptr /* *TExpr = SExpr */, _piFreeable uintptr /* *int32 */) (r int32) {
	var (
		_iResult int32
		_nResult int32
		_i       int32
	)
	_nResult = _1608sqlite3ExprVectorSize(tls, _p)
	if _nResult != int32(1) {
		goto _1
	}

	_iResult = _1804sqlite3ExprCodeTemp(tls, _pParse, _p, _piFreeable)
	goto _2

_1:
	*(*int32)(unsafe.Pointer(_piFreeable)) = int32(0)
	if int32(*(*uint8)(unsafe.Pointer(_p))) != int32(119) {
		goto _3
	}

	_iResult = _1868sqlite3CodeSubselect(tls, _pParse, _p, int32(0), int32(0))
	goto _4

_3:
	_iResult = (*(*int32)(unsafe.Pointer(_pParse + 56))) + int32(1)
	{
		p := &(*(*int32)(unsafe.Pointer(_pParse + 56)))
		*p = int32(int32(*p) + _nResult)
	}
	_i = int32(0)
_5:
	if _i >= _nResult {
		goto _7
	}

	_1617sqlite3ExprCodeFactorable(tls, _pParse, *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_p + 32))) + 8) + 32*uintptr(_i))), _i+_iResult)
	_i++
	goto _5

_7:
_4:
_2:
	return _iResult
}

// _1870columnTypeImpl is defined at sqlite3.c:119055:19
func _1870columnTypeImpl(tls crt.TLS, _pNC uintptr /* *TNameContext = SNameContext */, _pExpr uintptr /* *TExpr = SExpr */) (r uintptr /* *int8 */) {
	esc := crt.MustMalloc(120)
	var (
		_zType    uintptr // *int8
		_j        int32
		_pTab     uintptr // *TTable = STable
		_pS       uintptr // *TSelect = SSelect
		_iCol     int32
		_pTabList uintptr    // *TSrcList = SSrcList
		_sNC      = esc      // *TNameContext = SNameContext
		_p        uintptr    // *TExpr = SExpr
		_1sNC     = esc + 64 // *TNameContext = SNameContext
		_2pS      uintptr    // *TSelect = SSelect
		_3p       uintptr    // *TExpr = SExpr
	)
	defer crt.Free(esc)
	_zType = 0

	switch int32(*(*uint8)(unsafe.Pointer(_pExpr))) {
	case int32(147):
		goto _2
	case int32(145):
		goto _3
	case int32(119):
		goto _4
	}
	goto _1

_2:
_3:
	_pTab = 0
	_pS = 0
	_iCol = int32(*(*int16)(unsafe.Pointer(_pExpr + 48)))
_5:
	if _pNC == 0 || _pTab != 0 {
		goto _6
	}

	_pTabList = *(*uintptr)(unsafe.Pointer(_pNC + 8))
	_j = int32(0)
_7:
	if _j >= (*(*int32)(unsafe.Pointer(_pTabList))) || (*(*int32)(unsafe.Pointer(((_pTabList + 8) + 112*uintptr(_j)) + 64))) == (*(*int32)(unsafe.Pointer(_pExpr + 44))) {
		goto _9
	}

	_j++
	goto _7

_9:
	if _j >= (*(*int32)(unsafe.Pointer(_pTabList))) {
		goto _10
	}

	_pTab = *(*uintptr)(unsafe.Pointer(((_pTabList + 8) + 112*uintptr(_j)) + 32))
	_pS = *(*uintptr)(unsafe.Pointer(((_pTabList + 8) + 112*uintptr(_j)) + 40))
	goto _11

_10:
	_pNC = *(*uintptr)(unsafe.Pointer(_pNC + 32))
_11:
	goto _5

_6:
	if _pTab != 0 {
		goto _12
	}

	goto _1

_12:
	if _pS == 0 {
		goto _13
	}

	if _iCol < int32(0) || _iCol >= (*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pS))))) {
		goto _15
	}

	_p = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pS))) + 8) + 32*uintptr(_iCol)))
	*(*uintptr)(unsafe.Pointer(_sNC + 8)) = *(*uintptr)(unsafe.Pointer(_pS + 32))
	*(*uintptr)(unsafe.Pointer(_sNC + 32)) = _pNC
	*(*uintptr)(unsafe.Pointer(_sNC)) = *(*uintptr)(unsafe.Pointer(_pNC))
	_zType = _1870columnTypeImpl(tls, _sNC, _p)
_15:
	goto _14

_13:
	if _iCol >= int32(0) {
		goto _16
	}

	_zType = ts + 10145 /* "INTEGER" */
	goto _17

_16:
	_zType = _223sqlite3ColumnType(tls, (*(*uintptr)(unsafe.Pointer(_pTab + 8)))+32*uintptr(_iCol), null)
_17:
_14:
	goto _1

_4:
	_2pS = *(*uintptr)(unsafe.Pointer(_pExpr + 32))
	_3p = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_2pS))) + 8))

	*(*uintptr)(unsafe.Pointer(_1sNC + 8)) = *(*uintptr)(unsafe.Pointer(_2pS + 32))
	*(*uintptr)(unsafe.Pointer(_1sNC + 32)) = _pNC
	*(*uintptr)(unsafe.Pointer(_1sNC)) = *(*uintptr)(unsafe.Pointer(_pNC))
	_zType = _1870columnTypeImpl(tls, _1sNC, _3p)
	goto _1

_1:
	return _zType
}

// _1871exprNodeIsConstant is defined at sqlite3.c:93563:12
func _1871exprNodeIsConstant(tls crt.TLS, _pWalker uintptr /* *TWalker = SWalker */, _pExpr uintptr /* *TExpr = SExpr */) (r int32) {
	if int32(*(*uint8)(unsafe.Pointer(_pWalker + 36))) != int32(2) || ((*(*uint32)(unsafe.Pointer(_pExpr + 4)))&uint32(0x1)) == uint32(0) {
		goto _1
	}

	*(*uint8)(unsafe.Pointer(_pWalker + 36)) = uint8(0)
	return int32(2)

_1:
	switch int32(*(*uint8)(unsafe.Pointer(_pExpr))) {
	case int32(144):
		goto _3
	case int32(59):
		goto _4
	case int32(145):
		goto _5
	case int32(146):
		goto _6
	case int32(147):
		goto _7
	case int32(153):
		goto _8
	case int32(135):
		goto _9
	default:
		goto _10
	}
_3:
	if int32(*(*uint8)(unsafe.Pointer(_pWalker + 36))) < int32(4) && ((*(*uint32)(unsafe.Pointer(_pExpr + 4)))&uint32(0x80000)) == uint32(0) {
		goto _11
	}

	return int32(0)

	goto _12

_11:
	*(*uint8)(unsafe.Pointer(_pWalker + 36)) = uint8(0)
	return int32(2)

_12:
_4:
_5:
_6:
_7:
	if int32(*(*uint8)(unsafe.Pointer(_pWalker + 36))) != int32(3) || (*(*int32)(unsafe.Pointer(_pExpr + 44))) != (*(*int32)(unsafe.Pointer(_pWalker + 40))) {
		goto _13
	}

	return int32(0)

_13:
_8:
	*(*uint8)(unsafe.Pointer(_pWalker + 36)) = uint8(0)
	return int32(2)

_9:
	if int32(*(*uint8)(unsafe.Pointer(_pWalker + 36))) != int32(5) {
		goto _14
	}

	*(*uint8)(unsafe.Pointer(_pExpr)) = uint8(101)
	goto _15

_14:
	if int32(*(*uint8)(unsafe.Pointer(_pWalker + 36))) != int32(4) {
		goto _16
	}

	*(*uint8)(unsafe.Pointer(_pWalker + 36)) = uint8(0)
	return int32(2)

_16:
_15:
_10:
	return int32(0)
	return r
}

// _1872sqlite3SelectWalkFail is defined at sqlite3.c:93532:20
func _1872sqlite3SelectWalkFail(tls crt.TLS, _pWalker uintptr /* *TWalker = SWalker */, _NotUsed uintptr /* *TSelect = SSelect */) (r int32) {
	*(*uint8)(unsafe.Pointer(_pWalker + 36)) = uint8(0)
	return int32(2)
}

// _1873dupedExprSize is defined at sqlite3.c:92970:12
func _1873dupedExprSize(tls crt.TLS, _p uintptr /* *TExpr = SExpr */, _flags int32) (r int32) {
	var _nByte int32

	_nByte = int32(0)
	if _p == 0 {
		goto _1
	}

	_nByte = _1876dupedExprNodeSize(tls, _p, _flags)
	if (_flags & int32(0x1)) == 0 {
		goto _2
	}

	_nByte = int32(_nByte + (_1873dupedExprSize(tls, *(*uintptr)(unsafe.Pointer(_p + 16)), _flags) + _1873dupedExprSize(tls, *(*uintptr)(unsafe.Pointer(_p + 24)), _flags)))
_2:
_1:
	return _nByte
}

// _1874dupedExprStructSize is defined at sqlite3.c:92922:12
func _1874dupedExprStructSize(tls crt.TLS, _p uintptr /* *TExpr = SExpr */, _flags int32) (r int32) {
	var _nSize int32

	if int32(0) != _flags && int32(*(*uint8)(unsafe.Pointer(_p))) != int32(152) {
		goto _1
	}

	_nSize = int32(72)
	goto _2

_1:
	if (*(*uintptr)(unsafe.Pointer(_p + 16))) == 0 && (*(*uintptr)(unsafe.Pointer(_p + 32))) == 0 {
		goto _3
	}

	_nSize = int32(8236)
	goto _4

_3:
	_nSize = int32(16400)
_4:
_2:
	return _nSize
}

// _1875exprStructSize is defined at sqlite3.c:92882:12
func _1875exprStructSize(tls crt.TLS, _p uintptr /* *TExpr = SExpr */) (r int32) {
	if ((*(*uint32)(unsafe.Pointer(_p + 4))) & uint32(0x4000)) == uint32(0) {
		goto _1
	}

	return int32(16)

_1:
	if ((*(*uint32)(unsafe.Pointer(_p + 4))) & uint32(0x2000)) == uint32(0) {
		goto _2
	}

	return int32(44)

_2:
	return int32(72)
}

// _1876dupedExprNodeSize is defined at sqlite3.c:92949:12
func _1876dupedExprNodeSize(tls crt.TLS, _p uintptr /* *TExpr = SExpr */, _flags int32) (r int32) {
	var _nByte int32

	_nByte = _1874dupedExprStructSize(tls, _p, _flags) & int32(0xfff)
	if ((*(*uint32)(unsafe.Pointer(_p + 4)))&uint32(0x400)) != uint32(0) || (*(*uintptr)(unsafe.Pointer(_p + 8))) == 0 {
		goto _1
	}

	_nByte = int32(_nByte + (_211sqlite3Strlen30(tls, *(*uintptr)(unsafe.Pointer(_p + 8))) + int32(1)))
_1:
	return (_nByte + int32(7)) & int32(-8)
}

// _1877callCollNeeded is defined at sqlite3.c:105164:13
func _1877callCollNeeded(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _enc int32, _zName uintptr /* *int8 */) {
	var (
		_zExternal  uintptr // *int8
		_1zExternal uintptr // *int8
		_pTmp       uintptr // *Tsqlite3_value = Ssqlite3_value
	)

	if (*(*uintptr)(unsafe.Pointer(_db + 312))) == 0 {
		goto _1
	}

	_zExternal = _183sqlite3DbStrDup(tls, _db, _zName)
	if _zExternal != 0 {
		goto _2
	}

	return

_2:
	fn220(*(*uintptr)(unsafe.Pointer(_db + 312)))(tls, *(*uintptr)(unsafe.Pointer(_db + 328)), _db, _enc, _zExternal)
	_181sqlite3DbFree(tls, _db, _zExternal)
_1:
	if (*(*uintptr)(unsafe.Pointer(_db + 320))) == 0 {
		goto _3
	}

	_pTmp = _314sqlite3ValueNew(tls, _db)
	_316sqlite3ValueSetStr(tls, _pTmp, int32(-1), _zName, uint8(1), null)
	_1zExternal = _289sqlite3ValueText(tls, _pTmp, uint8(2))
	if _1zExternal == 0 {
		goto _4
	}

	fn220(*(*uintptr)(unsafe.Pointer(_db + 320)))(tls, *(*uintptr)(unsafe.Pointer(_db + 328)), _db, int32(*(*uint8)(unsafe.Pointer(_db + 94))), _1zExternal)
_4:
	_371sqlite3ValueFree(tls, _pTmp)
_3:
}

// _1878synthCollSeq is defined at sqlite3.c:105193:12
func _1878synthCollSeq(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pColl uintptr /* *TCollSeq = SCollSeq */) (r int32) {
	var (
		_pColl2 uintptr // *TCollSeq = SCollSeq
		_z      uintptr // *int8
		_i      int32
	)
	_z = *(*uintptr)(unsafe.Pointer(_pColl))
	_i = int32(0)
_1:
	if _i >= int32(3) {
		goto _3
	}

	_pColl2 = _280sqlite3FindCollSeq(tls, _db, *(*uint8)(unsafe.Pointer(_1963aEnc + uintptr(_i))), _z, int32(0))
	if (*(*uintptr)(unsafe.Pointer(_pColl2 + 24))) == 0 {
		goto _4
	}

	crt.Xmemcpy(tls, _pColl, _pColl2, uint64(40))
	*(*uintptr)(unsafe.Pointer(_pColl + 32)) = null
	return int32(0)

_4:
	_i++
	goto _1

_3:
	return int32(1)
}

// _1879sqlite3ExprWalkNoop is defined at sqlite3.c:122303:20
func _1879sqlite3ExprWalkNoop(tls crt.TLS, _NotUsed uintptr /* *TWalker = SWalker */, _NotUsed2 uintptr /* *TExpr = SExpr */) (r int32) {
	return int32(0)
}

// _1880convertCompoundSelectToSubquery is defined at sqlite3.c:121729:12
func _1880convertCompoundSelectToSubquery(tls crt.TLS, _pWalker uintptr /* *TWalker = SWalker */, _p uintptr /* *TSelect = SSelect */) (r int32) {
	esc := crt.MustMalloc(16)
	var (
		_i       int32
		_pNew    uintptr // *TSelect = SSelect
		_pX      uintptr // *TSelect = SSelect
		_db      uintptr // *Tsqlite3 = Ssqlite3
		_a       uintptr // *SExprList_item
		_pNewSrc uintptr // *TSrcList = SSrcList
		_pParse  uintptr // *TParse = SParse
		_dummy   = esc   // *TToken = SToken
	)
	defer crt.Free(esc)
	if (*(*uintptr)(unsafe.Pointer(_p + 72))) != 0 {
		goto _1
	}

	return int32(0)

_1:
	if (*(*uintptr)(unsafe.Pointer(_p + 64))) != 0 {
		goto _2
	}

	return int32(0)

_2:
	_pX = _p
_3:
	if _pX == 0 || int32(*(*uint8)(unsafe.Pointer(_pX + 8))) != int32(116) && int32(*(*uint8)(unsafe.Pointer(_pX + 8))) != int32(119) {
		goto _5
	}

	_pX = *(*uintptr)(unsafe.Pointer(_pX + 72))
	goto _3

_5:
	if _pX != 0 {
		goto _6
	}

	return int32(0)

_6:
	_a = (*(*uintptr)(unsafe.Pointer(_p + 64))) + 8
	_i = (*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_p + 64))))) - int32(1)
_7:
	if _i < int32(0) {
		goto _9
	}

	if ((*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_a + 32*uintptr(_i)))) + 4))) & uint32(0x100)) == 0 {
		goto _10
	}

	goto _9

_10:
	_i--
	goto _7

_9:
	if _i >= int32(0) {
		goto _11
	}

	return int32(0)

_11:
	_pParse = *(*uintptr)(unsafe.Pointer(_pWalker))
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_pNew = _295sqlite3DbMallocZero(tls, _db, uint64(112))
	if _pNew != 0 {
		goto _12
	}

	return int32(2)

_12:
	crt.Xmemset(tls, _dummy, int32(0), uint64(16))
	_pNewSrc = _1329sqlite3SrcListAppendFromTerm(tls, _pParse, null, null, null, _dummy, _pNew, null, null)
	if _pNewSrc != 0 {
		goto _13
	}

	return int32(2)

_13:
	*(*SSelect)(unsafe.Pointer(_pNew)) = *(*SSelect)(unsafe.Pointer(_p))
	*(*uintptr)(unsafe.Pointer(_p + 32)) = _pNewSrc
	*(*uintptr)(unsafe.Pointer(_p)) = _1331sqlite3ExprListAppend(tls, _pParse, null, _1334sqlite3Expr(tls, _db, int32(154), null))
	*(*uint8)(unsafe.Pointer(_p + 8)) = uint8(119)
	*(*uintptr)(unsafe.Pointer(_p + 40)) = null
	*(*uintptr)(unsafe.Pointer(_pNew + 48)) = null
	*(*uintptr)(unsafe.Pointer(_pNew + 56)) = null
	*(*uintptr)(unsafe.Pointer(_pNew + 64)) = null
	*(*uintptr)(unsafe.Pointer(_p + 72)) = null
	*(*uintptr)(unsafe.Pointer(_p + 80)) = null
	*(*uintptr)(unsafe.Pointer(_p + 104)) = null
	{
		p := &(*(*uint32)(unsafe.Pointer(_p + 12)))
		*p = uint32(uint32(*p) & uint32(4294967039))
	}

	{
		p := &(*(*uint32)(unsafe.Pointer(_p + 12)))
		*p = uint32(uint32(*p) | uint32(0x10000))
	}

	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pNew + 72))) + 80)) = _pNew
	*(*uintptr)(unsafe.Pointer(_pNew + 88)) = null
	*(*uintptr)(unsafe.Pointer(_pNew + 96)) = null
	return int32(0)
}

// _1881sqlite3WalkSelect is defined at sqlite3.c:90246:20
func _1881sqlite3WalkSelect(tls crt.TLS, _pWalker uintptr /* *TWalker = SWalker */, _p uintptr /* *TSelect = SSelect */) (r int32) {
	var _rc int32

	if _p != 0 {
		goto _1
	}

	return int32(0)

_1:
	if (*(*uintptr)(unsafe.Pointer(_pWalker + 16))) != 0 {
		goto _2
	}

	return int32(0)

_2:
_3:
	_rc = fn58(*(*uintptr)(unsafe.Pointer(_pWalker + 16)))(tls, _pWalker, _p)
	if _rc == 0 {
		goto _6
	}

	return _rc & int32(2)

_6:
	if _1964sqlite3WalkSelectExpr(tls, _pWalker, _p) == 0 && _1965sqlite3WalkSelectFrom(tls, _pWalker, _p) == 0 {
		goto _7
	}

	return int32(2)

_7:
	if (*(*uintptr)(unsafe.Pointer(_pWalker + 24))) == 0 {
		goto _8
	}

	fn71(*(*uintptr)(unsafe.Pointer(_pWalker + 24)))(tls, _pWalker, _p)
_8:
	_p = *(*uintptr)(unsafe.Pointer(_p + 72))
	if _p != 0 {
		goto _3
	}

	return int32(0)
}

// _1882selectExpander is defined at sqlite3.c:122022:12
func _1882selectExpander(tls crt.TLS, _pWalker uintptr /* *TWalker = SWalker */, _p uintptr /* *TSelect = SSelect */) (r int32) {
	esc := crt.MustMalloc(16)
	var (
		_pParse      uintptr // *TParse = SParse
		_i           int32
		_j           int32
		_k           int32
		_pTabList    uintptr // *TSrcList = SSrcList
		_pEList      uintptr // *TExprList = SExprList
		_pFrom       uintptr // *SSrcList_item
		_db          uintptr // *Tsqlite3 = Ssqlite3
		_pE          uintptr // *TExpr = SExpr
		_pRight      uintptr // *TExpr = SExpr
		_pExpr       uintptr // *TExpr = SExpr
		_selFlags    uint16
		_pTab        uintptr // *TTable = STable
		_pSel        uintptr // *TSelect = SSelect
		_nCol        int16
		_a           uintptr // *SExprList_item
		_pNew        uintptr // *TExprList = SExprList
		_flags       int32
		_longNames   int32
		_tableSeen   int32
		_zTName      uintptr // *int8
		_1pTab       uintptr // *TTable = STable
		_pSub        uintptr // *TSelect = SSelect
		_zTabName    uintptr // *int8
		_zSchemaName uintptr // *int8
		_iDb         int32
		_zName       uintptr // *int8
		_zColname    uintptr // *int8
		_zToFree     uintptr // *int8
		_sColname    = esc   // *TToken = SToken
		_pLeft       uintptr // *TExpr = SExpr
		_pX          uintptr // *SExprList_item
	)
	defer crt.Free(esc)
	_pParse = *(*uintptr)(unsafe.Pointer(_pWalker))
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_selFlags = uint16(*(*uint32)(unsafe.Pointer(_p + 12)))
	{
		p := &(*(*uint32)(unsafe.Pointer(_p + 12)))
		*p = uint32(uint32(*p) | uint32(0x40))
	}
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _1
	}

	return int32(2)

_1:
	if (*(*uintptr)(unsafe.Pointer(_p + 32))) != 0 && (int32(_selFlags)&int32(0x40)) == int32(0) {
		goto _2
	}

	return int32(1)

_2:
	_pTabList = *(*uintptr)(unsafe.Pointer(_p + 32))
	_pEList = *(*uintptr)(unsafe.Pointer(_p))
	if *(*uintptr)(unsafe.Pointer(_p + 104)) == 0 {
		goto _3
	}

	_1343sqlite3WithPush(tls, _pParse, *(*uintptr)(unsafe.Pointer(_p + 104)), uint8(0))
_3:
	_1743sqlite3SrcListAssignCursors(tls, _pParse, _pTabList)
	_i = int32(0)
	_pFrom = _pTabList + 8
_4:
	if _i >= (*(*int32)(unsafe.Pointer(_pTabList))) {
		goto _6
	}

	if (uint32((*(*uint8)(unsafe.Pointer((_pFrom + 60) + 1)))>>5) << 31 >> 31) == 0 {
		goto _7
	}

	goto _5

_7:
	if _1966withExpand(tls, _pWalker, _pFrom) == 0 {
		goto _8
	}

	return int32(2)

_8:
	if (*(*uintptr)(unsafe.Pointer(_pFrom + 32))) == 0 {
		goto _9
	}

	goto _10

_9:
	if (*(*uintptr)(unsafe.Pointer(_pFrom + 16))) != 0 {
		goto _11
	}

	_pSel = *(*uintptr)(unsafe.Pointer(_pFrom + 40))

	if _1881sqlite3WalkSelect(tls, _pWalker, _pSel) == 0 {
		goto _13
	}

	return int32(2)

_13:
	*(*uintptr)(unsafe.Pointer(_pFrom + 32)) = set4(&_pTab, _295sqlite3DbMallocZero(tls, _db, uint64(128)))
	if _pTab != 0 {
		goto _14
	}

	return int32(2)

_14:
	*(*uint32)(unsafe.Pointer(_pTab + 60)) = uint32(1)
	if (*(*uintptr)(unsafe.Pointer(_pFrom + 24))) == 0 {
		goto _15
	}

	*(*uintptr)(unsafe.Pointer(_pTab)) = _183sqlite3DbStrDup(tls, _db, *(*uintptr)(unsafe.Pointer(_pFrom + 24)))
	goto _16

_15:
	*(*uintptr)(unsafe.Pointer(_pTab)) = _226sqlite3MPrintf(tls, _db, ts+32741 /* "subquery_%p" */, _pTab)
_16:
_17:
	if (*(*uintptr)(unsafe.Pointer(_pSel + 72))) == 0 {
		goto _18
	}

	_pSel = *(*uintptr)(unsafe.Pointer(_pSel + 72))
	goto _17

_18:
	_1731sqlite3ColumnsFromExprList(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pSel)), _pTab+70, _pTab+8)
	*(*int16)(unsafe.Pointer(_pTab + 68)) = int16(-1)
	*(*int16)(unsafe.Pointer(_pTab + 72)) = int16(200)

	{
		p := &(*(*uint32)(unsafe.Pointer(_pTab + 64)))
		*p = uint32(uint32(*p) | uint32(0x2))
	}
	goto _12

_11:
	*(*uintptr)(unsafe.Pointer(_pFrom + 32)) = set4(&_pTab, _1515sqlite3LocateTableItem(tls, _pParse, uint32(0), _pFrom))
	if _pTab != 0 {
		goto _19
	}

	return int32(2)

_19:
	if (*(*uint32)(unsafe.Pointer(_pTab + 60))) < uint32(0xffff) {
		goto _20
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+32753 /* "too many references to \"%s\": max..." */, *(*uintptr)(unsafe.Pointer(_pTab)))
	*(*uintptr)(unsafe.Pointer(_pFrom + 32)) = null
	return int32(2)

_20:
	(*(*uint32)(unsafe.Pointer(_pTab + 60)))++
	if *(*int32)(unsafe.Pointer(_pTab + 84)) != 0 || _1967cannotBeFunction(tls, _pParse, _pFrom) == 0 {
		goto _21
	}

	return int32(2)

_21:
	if *(*int32)(unsafe.Pointer(_pTab + 84)) == 0 && (*(*uintptr)(unsafe.Pointer(_pTab + 24))) == 0 {
		goto _22
	}

	if _1524sqlite3ViewGetColumnNames(tls, _pParse, _pTab) == 0 {
		goto _23
	}

	return int32(2)

_23:
	*(*uintptr)(unsafe.Pointer(_pFrom + 40)) = _1529sqlite3SelectDup(tls, _db, *(*uintptr)(unsafe.Pointer(_pTab + 24)), int32(0))
	_nCol = *(*int16)(unsafe.Pointer(_pTab + 70))
	*(*int16)(unsafe.Pointer(_pTab + 70)) = int16(-1)
	_1881sqlite3WalkSelect(tls, _pWalker, *(*uintptr)(unsafe.Pointer(_pFrom + 40)))
	*(*int16)(unsafe.Pointer(_pTab + 70)) = _nCol
_22:
_12:
_10:
	if _1739sqlite3IndexedByLookup(tls, _pParse, _pFrom) == 0 {
		goto _24
	}

	return int32(2)

_24:
_5:
	_i++
	_pFrom += 112
	goto _4

_6:
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 && _1968sqliteProcessJoin(tls, _pParse, _p) == 0 {
		goto _25
	}

	return int32(2)

_25:
	_k = int32(0)
_26:
	if _k >= (*(*int32)(unsafe.Pointer(_pEList))) {
		goto _28
	}

	_pE = *(*uintptr)(unsafe.Pointer((_pEList + 8) + 32*uintptr(_k)))
	if int32(*(*uint8)(unsafe.Pointer(_pE))) != int32(154) {
		goto _29
	}

	goto _28

_29:
	if int32(*(*uint8)(unsafe.Pointer(_pE))) != int32(122) || int32(*(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pE + 24))))) != int32(154) {
		goto _30
	}

	goto _28

_30:
	_k++
	goto _26

_28:
	if _k >= (*(*int32)(unsafe.Pointer(_pEList))) {
		goto _31
	}

	_a = _pEList + 8
	_pNew = 0
	_flags = int32(*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pParse))) + 48)))
	_longNames = bool2int(((_flags & int32(0x4)) != int32(0)) && ((_flags & int32(0x40)) == int32(0)))
	_k = int32(0)
_32:
	if _k >= (*(*int32)(unsafe.Pointer(_pEList))) {
		goto _34
	}

	_pE = *(*uintptr)(unsafe.Pointer(_a + 32*uintptr(_k)))
	_pRight = *(*uintptr)(unsafe.Pointer(_pE + 24))

	if int32(*(*uint8)(unsafe.Pointer(_pE))) == int32(154) || int32(*(*uint8)(unsafe.Pointer(_pE))) == int32(122) && int32(*(*uint8)(unsafe.Pointer(_pRight))) == int32(154) {
		goto _35
	}

	_pNew = _1331sqlite3ExprListAppend(tls, _pParse, _pNew, *(*uintptr)(unsafe.Pointer(_a + 32*uintptr(_k))))
	if _pNew == 0 {
		goto _37
	}

	*(*uintptr)(unsafe.Pointer(((_pNew + 8) + 32*uintptr((*(*int32)(unsafe.Pointer(_pNew)))-int32(1))) + 8)) = *(*uintptr)(unsafe.Pointer((_a + 32*uintptr(_k)) + 8))
	*(*uintptr)(unsafe.Pointer(((_pNew + 8) + 32*uintptr((*(*int32)(unsafe.Pointer(_pNew)))-int32(1))) + 16)) = *(*uintptr)(unsafe.Pointer((_a + 32*uintptr(_k)) + 16))
	*(*uintptr)(unsafe.Pointer((_a + 32*uintptr(_k)) + 8)) = null
	*(*uintptr)(unsafe.Pointer((_a + 32*uintptr(_k)) + 16)) = null
_37:
	*(*uintptr)(unsafe.Pointer(_a + 32*uintptr(_k))) = null
	goto _36

_35:
	_tableSeen = int32(0)
	_zTName = 0
	if int32(*(*uint8)(unsafe.Pointer(_pE))) != int32(122) {
		goto _38
	}

	_zTName = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pE + 16))) + 8))
_38:
	_i = int32(0)
	_pFrom = _pTabList + 8
_39:
	if _i >= (*(*int32)(unsafe.Pointer(_pTabList))) {
		goto _41
	}

	_1pTab = *(*uintptr)(unsafe.Pointer(_pFrom + 32))
	_pSub = *(*uintptr)(unsafe.Pointer(_pFrom + 40))
	_zTabName = *(*uintptr)(unsafe.Pointer(_pFrom + 24))
	_zSchemaName = 0
	if _zTabName != 0 {
		goto _42
	}

	_zTabName = *(*uintptr)(unsafe.Pointer(_1pTab))
_42:
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _43
	}

	goto _41

_43:
	if _pSub != 0 && ((*(*uint32)(unsafe.Pointer(_pSub + 12)))&uint32(0x800)) != uint32(0) {
		goto _44
	}

	_pSub = null
	if _zTName == 0 || _110sqlite3StrICmp(tls, _zTName, _zTabName) == int32(0) {
		goto _45
	}

	goto _40

_45:
	_iDb = _1069sqlite3SchemaToIndex(tls, _db, *(*uintptr)(unsafe.Pointer(_1pTab + 112)))
	_zSchemaName = func() uintptr {
		if _iDb >= int32(0) {
			return *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)))
		}
		return ts + 32792 /* "*" */
	}()
_44:
	_j = int32(0)
_46:
	if _j >= int32(*(*int16)(unsafe.Pointer(_1pTab + 70))) {
		goto _48
	}

	_zName = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_1pTab + 8))) + 32*uintptr(_j)))

	if _zTName == 0 || _pSub == 0 || _1969sqlite3MatchSpanName(tls, *(*uintptr)(unsafe.Pointer((((*(*uintptr)(unsafe.Pointer(_pSub))) + 8) + 32*uintptr(_j)) + 16)), null, _zTName, null) != int32(0) {
		goto _49
	}

	goto _47

_49:
	if ((*(*uint32)(unsafe.Pointer(_p + 12)))&uint32(0x20000)) != uint32(0) || (int32(*(*uint8)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_1pTab + 8))) + 32*uintptr(_j)) + 27)))&int32(0x2)) == int32(0) {
		goto _50
	}

	goto _47

_50:
	_tableSeen = int32(1)
	if _i <= int32(0) || _zTName != 0 {
		goto _51
	}

	if (int32(*(*uint8)(unsafe.Pointer(_pFrom + 60)))&int32(0x4)) == int32(0) || _1970tableAndColumnIndex(tls, _pTabList, _i, _zName, null, null) == 0 {
		goto _52
	}

	goto _47

_52:
	if _1939sqlite3IdListIndex(tls, *(*uintptr)(unsafe.Pointer(_pFrom + 80)), _zName) < int32(0) {
		goto _53
	}

	goto _47

_53:
_51:
	_pRight = _1334sqlite3Expr(tls, _db, int32(59), _zName)
	_zColname = _zName
	_zToFree = null
	if _longNames == 0 && (*(*int32)(unsafe.Pointer(_pTabList))) <= int32(1) {
		goto _54
	}

	_pLeft = _1334sqlite3Expr(tls, _db, int32(59), _zTabName)
	_pExpr = _1316sqlite3PExpr(tls, _pParse, int32(122), _pLeft, _pRight)
	if _zSchemaName == 0 {
		goto _56
	}

	_pLeft = _1334sqlite3Expr(tls, _db, int32(59), _zSchemaName)
	_pExpr = _1316sqlite3PExpr(tls, _pParse, int32(122), _pLeft, _pExpr)
_56:
	if _longNames == 0 {
		goto _57
	}

	_zColname = _226sqlite3MPrintf(tls, _db, ts+15733 /* "%s.%s" */, _zTabName, _zName)
	_zToFree = _zColname
_57:
	goto _55

_54:
	_pExpr = _pRight
_55:
	_pNew = _1331sqlite3ExprListAppend(tls, _pParse, _pNew, _pExpr)
	_1516sqlite3TokenInit(tls, _sColname, _zColname)
	_1332sqlite3ExprListSetName(tls, _pParse, _pNew, _sColname, int32(0))
	if _pNew == 0 || ((*(*uint32)(unsafe.Pointer(_p + 12)))&uint32(0x800)) == uint32(0) {
		goto _58
	}

	_pX = (_pNew + 8) + 32*uintptr((*(*int32)(unsafe.Pointer(_pNew)))-int32(1))
	if _pSub == 0 {
		goto _59
	}

	*(*uintptr)(unsafe.Pointer(_pX + 16)) = _183sqlite3DbStrDup(tls, _db, *(*uintptr)(unsafe.Pointer((((*(*uintptr)(unsafe.Pointer(_pSub))) + 8) + 32*uintptr(_j)) + 16)))
	goto _60

_59:
	*(*uintptr)(unsafe.Pointer(_pX + 16)) = _226sqlite3MPrintf(tls, _db, ts+32794 /* "%s.%s.%s" */, _zSchemaName, _zTabName, _zColname)
_60:
	set66b(&(*(*uint8)(unsafe.Pointer(_pX + 25))), uint32(1))
_58:
	_181sqlite3DbFree(tls, _db, _zToFree)

_47:
	_j++
	goto _46

_48:
_40:
	_i++
	_pFrom += 112
	goto _39

_41:
	if _tableSeen != 0 {
		goto _61
	}

	if _zTName == 0 {
		goto _62
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+32803 /* "no such table: %s" */, _zTName)
	goto _63

_62:
	_550sqlite3ErrorMsg(tls, _pParse, ts+32821 /* "no tables specified" */)
_63:
_61:
_36:
	_k++
	goto _32

_34:
	_551sqlite3ExprListDelete(tls, _db, _pEList)
	*(*uintptr)(unsafe.Pointer(_p)) = _pNew
_31:
	if (*(*uintptr)(unsafe.Pointer(_p))) == 0 || (*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_p))))) <= (*(*int32)(unsafe.Pointer((_db + 124) + 8))) {
		goto _64
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+32841 /* "too many columns in result set" */)
	return int32(2)

_64:
	return int32(0)
}

// _1883selectPopWith is defined at sqlite3.c:121984:13
func _1883selectPopWith(tls crt.TLS, _pWalker uintptr /* *TWalker = SWalker */, _p uintptr /* *TSelect = SSelect */) {
	var (
		_pParse uintptr // *TParse = SParse
		_pWith  uintptr // *TWith = SWith
	)
	_pParse = *(*uintptr)(unsafe.Pointer(_pWalker))
	if *(*uintptr)(unsafe.Pointer(_pParse + 576)) == 0 || (*(*uintptr)(unsafe.Pointer(_p + 72))) != 0 {
		goto _1
	}

	_pWith = *(*uintptr)(unsafe.Pointer(_1763findRightmost(tls, _p) + 104))
	if _pWith == 0 {
		goto _2
	}

	*(*uintptr)(unsafe.Pointer(_pParse + 576)) = *(*uintptr)(unsafe.Pointer(_pWith + 8))
_2:
_1:
}

// _1884sqlite3SelectWalkNoop is defined at sqlite3.c:122312:20
func _1884sqlite3SelectWalkNoop(tls crt.TLS, _NotUsed uintptr /* *TWalker = SWalker */, _NotUsed2 uintptr /* *TSelect = SSelect */) (r int32) {
	return int32(0)
}

// _1885selectAddSubqueryTypeInfo is defined at sqlite3.c:122369:13
func _1885selectAddSubqueryTypeInfo(tls crt.TLS, _pWalker uintptr /* *TWalker = SWalker */, _p uintptr /* *TSelect = SSelect */) {
	var (
		_pParse   uintptr // *TParse = SParse
		_i        int32
		_pTabList uintptr // *TSrcList = SSrcList
		_pFrom    uintptr // *SSrcList_item
		_pTab     uintptr // *TTable = STable
		_pSel     uintptr // *TSelect = SSelect
	)

	{
		p := &(*(*uint32)(unsafe.Pointer(_p + 12)))
		*p = uint32(uint32(*p) | uint32(0x80))
	}
	_pParse = *(*uintptr)(unsafe.Pointer(_pWalker))
	_pTabList = *(*uintptr)(unsafe.Pointer(_p + 32))
	_i = int32(0)
	_pFrom = _pTabList + 8
_1:
	if _i >= (*(*int32)(unsafe.Pointer(_pTabList))) {
		goto _3
	}

	_pTab = *(*uintptr)(unsafe.Pointer(_pFrom + 32))

	if ((*(*uint32)(unsafe.Pointer(_pTab + 64))) & uint32(0x2)) == uint32(0) {
		goto _4
	}

	_pSel = *(*uintptr)(unsafe.Pointer(_pFrom + 40))
	if _pSel == 0 {
		goto _5
	}

_6:
	if (*(*uintptr)(unsafe.Pointer(_pSel + 72))) == 0 {
		goto _7
	}

	_pSel = *(*uintptr)(unsafe.Pointer(_pSel + 72))
	goto _6

_7:
	_1732sqlite3SelectAddColumnTypeAndCollation(tls, _pParse, _pTab, _pSel)
_5:
_4:
	_i++
	_pFrom += 112
	goto _1

_3:
}

// _1886substExprList is defined at sqlite3.c:120920:13
func _1886substExprList(tls crt.TLS, _pSubst uintptr /* *TSubstContext = struct{XpParse ...tJoin int32;XpEList *SExprList;} */, _pList uintptr /* *TExprList = SExprList */) {
	var _i int32

	if _pList != 0 {
		goto _1
	}

	return

_1:
	_i = int32(0)
_2:
	if _i >= (*(*int32)(unsafe.Pointer(_pList))) {
		goto _4
	}

	*(*uintptr)(unsafe.Pointer((_pList + 8) + 32*uintptr(_i))) = _1769substExpr(tls, _pSubst, *(*uintptr)(unsafe.Pointer((_pList + 8) + 32*uintptr(_i))))
	_i++
	goto _2

_4:
}

// _1887multiSelectOrderByKeyInfo is defined at sqlite3.c:119666:16
func _1887multiSelectOrderByKeyInfo(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _p uintptr /* *TSelect = SSelect */, _nExtra int32) (r uintptr /* *TKeyInfo = SKeyInfo */) {
	var (
		_pOrderBy uintptr // *TExprList = SExprList
		_nOrderBy int32
		_db       uintptr // *Tsqlite3 = Ssqlite3
		_pRet     uintptr // *TKeyInfo = SKeyInfo
		_i        int32
		_pItem    uintptr // *SExprList_item
		_pTerm    uintptr // *TExpr = SExpr
		_pColl    uintptr // *TCollSeq = SCollSeq
	)
	_pOrderBy = *(*uintptr)(unsafe.Pointer(_p + 64))
	_nOrderBy = *(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_p + 64))))
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_pRet = _1765sqlite3KeyInfoAlloc(tls, _db, _nOrderBy+_nExtra, int32(1))
	if _pRet == 0 {
		goto _1
	}

	_i = int32(0)
_2:
	if _i >= _nOrderBy {
		goto _4
	}

	_pItem = (_pOrderBy + 8) + 32*uintptr(_i)
	_pTerm = *(*uintptr)(unsafe.Pointer(_pItem))
	if ((*(*uint32)(unsafe.Pointer(_pTerm + 4))) & uint32(0x100)) == 0 {
		goto _5
	}

	_pColl = _1789sqlite3ExprCollSeq(tls, _pParse, _pTerm)
	goto _6

_5:
	_pColl = _1766multiSelectCollSeq(tls, _pParse, _p, int32(*(*uint16)(unsafe.Pointer(_pItem + 28)))-int32(1))
	if _pColl != 0 {
		goto _7
	}

	_pColl = *(*uintptr)(unsafe.Pointer(_db + 16))
_7:
	*(*uintptr)(unsafe.Pointer((_pOrderBy + 8) + 32*uintptr(_i))) = _1971sqlite3ExprAddCollateString(tls, _pParse, _pTerm, *(*uintptr)(unsafe.Pointer(_pColl)))
_6:
	*(*uintptr)(unsafe.Pointer((_pRet + 32) + 8*uintptr(_i))) = _pColl
	*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pRet + 24))) + uintptr(_i))) = *(*uint8)(unsafe.Pointer(((_pOrderBy + 8) + 32*uintptr(_i)) + 24))
	_i++
	goto _2

_4:
_1:
	return _pRet
}

// _1888sqlite3ResolveOrderGroupBy is defined at sqlite3.c:91312:20
func _1888sqlite3ResolveOrderGroupBy(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pSelect uintptr /* *TSelect = SSelect */, _pOrderBy uintptr /* *TExprList = SExprList */, _zType uintptr /* *int8 */) (r int32) {
	var (
		_i      int32
		_db     uintptr // *Tsqlite3 = Ssqlite3
		_pEList uintptr // *TExprList = SExprList
		_pItem  uintptr // *SExprList_item
	)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	if _pOrderBy != 0 && (*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pParse))) + 97))) == 0 {
		goto _1
	}

	return int32(0)

_1:
	if (*(*int32)(unsafe.Pointer(_pOrderBy))) <= (*(*int32)(unsafe.Pointer((_db + 124) + 8))) {
		goto _2
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+32872 /* "too many terms in %s BY clause" */, _zType)
	return int32(1)

_2:
	_pEList = *(*uintptr)(unsafe.Pointer(_pSelect))

	_i = int32(0)
	_pItem = _pOrderBy + 8
_3:
	if _i >= (*(*int32)(unsafe.Pointer(_pOrderBy))) {
		goto _5
	}

	if (*(*uint16)(unsafe.Pointer(_pItem + 28))) == 0 {
		goto _6
	}

	if int32(*(*uint16)(unsafe.Pointer(_pItem + 28))) <= (*(*int32)(unsafe.Pointer(_pEList))) {
		goto _7
	}

	_1972resolveOutOfRangeError(tls, _pParse, _zType, _i+int32(1), *(*int32)(unsafe.Pointer(_pEList)))
	return int32(1)

_7:
	_1973resolveAlias(tls, _pParse, _pEList, int32(*(*uint16)(unsafe.Pointer(_pItem + 28)))-int32(1), *(*uintptr)(unsafe.Pointer(_pItem)), _zType, int32(0))
_6:
	_i++
	_pItem += 32
	goto _3

_5:
	return int32(0)
}

// _1889generateOutputSubroutine is defined at sqlite3.c:120319:12
func _1889generateOutputSubroutine(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _p uintptr /* *TSelect = SSelect */, _pIn uintptr /* *TSelectDest = SSelectDest */, _pDest uintptr /* *TSelectDest = SSelectDest */, _regReturn int32, _regPrev int32, _pKeyInfo uintptr /* *TKeyInfo = SKeyInfo */, _iBreak int32) (r int32) {
	var (
		_v         uintptr // *TVdbe = SVdbe
		_iContinue int32
		_addr      int32
		_addr1     int32
		_addr2     int32
		_r1        int32
		_r2        int32
		_1r1       int32
	)
	_v = *(*uintptr)(unsafe.Pointer(_pParse + 16))
	_addr = _1496sqlite3VdbeCurrentAddr(tls, _v)
	_iContinue = _1541sqlite3VdbeMakeLabel(tls, _v)
	if _regPrev == 0 {
		goto _1
	}

	_addr1 = _1489sqlite3VdbeAddOp1(tls, _v, int32(22), _regPrev)
	_addr2 = _1475sqlite3VdbeAddOp4(tls, _v, int32(94), *(*int32)(unsafe.Pointer(_pIn + 8)), _regPrev+int32(1), *(*int32)(unsafe.Pointer(_pIn + 12)), _1566sqlite3KeyInfoRef(tls, _pKeyInfo), int32(-9))
	_1241sqlite3VdbeAddOp3(tls, _v, int32(18), _addr2+int32(2), _iContinue, _addr2+int32(2))
	_1474sqlite3VdbeJumpHere(tls, _v, _addr1)
	_1241sqlite3VdbeAddOp3(tls, _v, int32(75), *(*int32)(unsafe.Pointer(_pIn + 8)), _regPrev+int32(1), (*(*int32)(unsafe.Pointer(_pIn + 12)))-int32(1))
	_1240sqlite3VdbeAddOp2(tls, _v, int32(67), int32(1), _regPrev)
_1:
	if (*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pParse))) + 97))) == 0 {
		goto _2
	}

	return int32(0)

_2:
	_1788codeOffset(tls, _v, *(*int32)(unsafe.Pointer(_p + 20)), _iContinue)

	switch int32(*(*uint8)(unsafe.Pointer(_pDest))) {
	case int32(12):
		goto _4
	case int32(11):
		goto _5
	case int32(10):
		goto _6
	case int32(13):
		goto _7
	default:
		goto _8
	}
_4:
	_r1 = _1562sqlite3GetTempReg(tls, _pParse)
	_r2 = _1562sqlite3GetTempReg(tls, _pParse)
	_1241sqlite3VdbeAddOp3(tls, _v, int32(99), *(*int32)(unsafe.Pointer(_pIn + 8)), *(*int32)(unsafe.Pointer(_pIn + 12)), _r1)
	_1240sqlite3VdbeAddOp2(tls, _v, int32(115), *(*int32)(unsafe.Pointer(_pDest + 4)), _r2)
	_1241sqlite3VdbeAddOp3(tls, _v, int32(116), *(*int32)(unsafe.Pointer(_pDest + 4)), _r1, _r2)
	_1072sqlite3VdbeChangeP5(tls, _v, uint16(0x8))
	_1563sqlite3ReleaseTempReg(tls, _pParse, _r2)
	_1563sqlite3ReleaseTempReg(tls, _pParse, _r1)
	goto _3

_5:
	_1r1 = _1562sqlite3GetTempReg(tls, _pParse)
	_1475sqlite3VdbeAddOp4(tls, _v, int32(99), *(*int32)(unsafe.Pointer(_pIn + 8)), *(*int32)(unsafe.Pointer(_pIn + 12)), _1r1, *(*uintptr)(unsafe.Pointer(_pDest + 16)), *(*int32)(unsafe.Pointer(_pIn + 12)))
	_1792sqlite3ExprCacheAffinityChange(tls, _pParse, *(*int32)(unsafe.Pointer(_pIn + 8)), *(*int32)(unsafe.Pointer(_pIn + 12)))
	_1071sqlite3VdbeAddOp4Int(tls, _v, int32(127), *(*int32)(unsafe.Pointer(_pDest + 4)), _1r1, *(*int32)(unsafe.Pointer(_pIn + 8)), *(*int32)(unsafe.Pointer(_pIn + 12)))
	_1563sqlite3ReleaseTempReg(tls, _pParse, _1r1)
	goto _3

_6:
	_1567sqlite3ExprCodeMove(tls, _pParse, *(*int32)(unsafe.Pointer(_pIn + 8)), *(*int32)(unsafe.Pointer(_pDest + 4)), int32(1))
	goto _3

_7:
	if (*(*int32)(unsafe.Pointer(_pDest + 8))) != int32(0) {
		goto _9
	}

	*(*int32)(unsafe.Pointer(_pDest + 8)) = _1558sqlite3GetTempRange(tls, _pParse, *(*int32)(unsafe.Pointer(_pIn + 12)))
	*(*int32)(unsafe.Pointer(_pDest + 12)) = *(*int32)(unsafe.Pointer(_pIn + 12))
_9:
	_1567sqlite3ExprCodeMove(tls, _pParse, *(*int32)(unsafe.Pointer(_pIn + 8)), *(*int32)(unsafe.Pointer(_pDest + 8)), *(*int32)(unsafe.Pointer(_pIn + 12)))
	_1489sqlite3VdbeAddOp1(tls, _v, int32(16), *(*int32)(unsafe.Pointer(_pDest + 4)))
	goto _3

_8:
	_1240sqlite3VdbeAddOp2(tls, _v, int32(78), *(*int32)(unsafe.Pointer(_pIn + 8)), *(*int32)(unsafe.Pointer(_pIn + 12)))
	_1792sqlite3ExprCacheAffinityChange(tls, _pParse, *(*int32)(unsafe.Pointer(_pIn + 8)), *(*int32)(unsafe.Pointer(_pIn + 12)))
	goto _3

_3:
	if (*(*int32)(unsafe.Pointer(_p + 16))) == 0 {
		goto _10
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(59), *(*int32)(unsafe.Pointer(_p + 16)), _iBreak)
_10:
	_1569sqlite3VdbeResolveLabel(tls, _v, _iContinue)
	_1489sqlite3VdbeAddOp1(tls, _v, int32(63), _regReturn)
	return _addr
}

// _1890x [32]uint8, escapes: true, sqlite3.c:29520:30
var _1890x = ds + 17668

// _1891sqlite3VectorErrorMsg is defined at sqlite3.c:94313:21
func _1891sqlite3VectorErrorMsg(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pExpr uintptr /* *TExpr = SExpr */) {
	if ((*(*uint32)(unsafe.Pointer(_pExpr + 4))) & uint32(0x800)) == 0 {
		goto _1
	}

	_1867sqlite3SubselectError(tls, _pParse, *(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pExpr + 32)))))), int32(1))
	goto _2

_1:
	_550sqlite3ErrorMsg(tls, _pParse, ts+31146 /* "row value misused" */)
_2:
}

// _1892exprCompareVariable is defined at sqlite3.c:96525:12
func _1892exprCompareVariable(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pVar uintptr /* *TExpr = SExpr */, _pExpr uintptr /* *TExpr = SExpr */) (r int32) {
	esc := crt.MustMalloc(8)
	var (
		_res  int32
		_iVar int32
		_pL   uintptr // *Tsqlite3_value = Ssqlite3_value
		_pR   = esc   // **Tsqlite3_value = Ssqlite3_value
	)
	defer crt.Free(esc)
	_res = int32(0)
	*(*uintptr)(unsafe.Pointer(_pR)) = 0
	_1676sqlite3ValueFromExpr(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _pExpr, uint8(1), uint8('A'), _pR)
	if (*(*uintptr)(unsafe.Pointer(_pR))) == 0 {
		goto _1
	}

	_iVar = int32(*(*int16)(unsafe.Pointer(_pVar + 48)))
	_1974sqlite3VdbeSetVarmask(tls, *(*uintptr)(unsafe.Pointer(_pParse + 16)), _iVar)
	_pL = _1975sqlite3VdbeGetBoundValue(tls, *(*uintptr)(unsafe.Pointer(_pParse + 496)), _iVar, uint8('A'))
	if _pL == 0 {
		goto _2
	}

	if Xsqlite3_value_type(tls, _pL) != int32(3) {
		goto _3
	}

	Xsqlite3_value_text(tls, _pL)
_3:
	_res = bool2int(int32(0) == _661sqlite3MemCompare(tls, _pL, *(*uintptr)(unsafe.Pointer(_pR)), null))
_2:
	_371sqlite3ValueFree(tls, *(*uintptr)(unsafe.Pointer(_pR)))
	_371sqlite3ValueFree(tls, _pL)
_1:
	return _res
}

type SWhereOrSet struct {
	Xn uint16
	Xa [3]SWhereOrCost
}

// _1893whereClauseInsert is defined at sqlite3.c:130336:12
func _1893whereClauseInsert(tls crt.TLS, _pWC uintptr /* *TWhereClause = SWhereClause */, _p uintptr /* *TExpr = SExpr */, _wtFlags uint16) (r int32) {
	var (
		_pTerm uintptr // *TWhereTerm = SWhereTerm
		_idx   int32
		_pOld  uintptr // *TWhereTerm = SWhereTerm
		_db    uintptr // *Tsqlite3 = Ssqlite3
	)
	if (*(*int32)(unsafe.Pointer(_pWC + 20))) < (*(*int32)(unsafe.Pointer(_pWC + 24))) {
		goto _1
	}

	_pOld = *(*uintptr)(unsafe.Pointer(_pWC + 32))
	_db = *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pWC))))))
	*(*uintptr)(unsafe.Pointer(_pWC + 32)) = _373sqlite3DbMallocRawNN(tls, _db, uint64((uint64(64)*uint64(*(*int32)(unsafe.Pointer(_pWC + 24))))*uint64(2)))
	if (*(*uintptr)(unsafe.Pointer(_pWC + 32))) != 0 {
		goto _2
	}

	if (int32(_wtFlags) & int32(0x1)) == 0 {
		goto _3
	}

	_777sqlite3ExprDelete(tls, _db, _p)
_3:
	*(*uintptr)(unsafe.Pointer(_pWC + 32)) = _pOld
	return int32(0)

_2:
	crt.Xmemcpy(tls, *(*uintptr)(unsafe.Pointer(_pWC + 32)), _pOld, uint64(64)*uint64(*(*int32)(unsafe.Pointer(_pWC + 20))))
	if _pOld == (_pWC + 40) {
		goto _4
	}

	_181sqlite3DbFree(tls, _db, _pOld)
_4:
	*(*int32)(unsafe.Pointer(_pWC + 24)) = int32(uint64(_744sqlite3DbMallocSize(tls, _db, *(*uintptr)(unsafe.Pointer(_pWC + 32)))) / uint64(64))
_1:
	_pTerm = (*(*uintptr)(unsafe.Pointer(_pWC + 32))) + 64*uintptr(set5(&_idx, postinc7(&(*(*int32)(unsafe.Pointer(_pWC + 20))))))
	if _p == 0 || ((*(*uint32)(unsafe.Pointer(_p + 4)))&uint32(0x40000)) == uint32(0) {
		goto _5
	}

	*(*int16)(unsafe.Pointer(_pTerm + 16)) = int16(int32(_703sqlite3LogEst(tls, uint64(*(*int32)(unsafe.Pointer(_p + 44))))) - int32(270))
	goto _6

_5:
	*(*int16)(unsafe.Pointer(_pTerm + 16)) = int16(1)
_6:
	*(*uintptr)(unsafe.Pointer(_pTerm)) = _1510sqlite3ExprSkipCollate(tls, _p)
	*(*uint16)(unsafe.Pointer(_pTerm + 18)) = _wtFlags
	*(*uintptr)(unsafe.Pointer(_pTerm + 8)) = _pWC
	*(*int32)(unsafe.Pointer(_pTerm + 24)) = int32(-1)
	crt.Xmemset(tls, _pTerm+20, int32(0), uint64(44))
	return _idx
}

// _1894exprAnalyze is defined at sqlite3.c:131244:13
func _1894exprAnalyze(tls crt.TLS, _pSrc uintptr /* *TSrcList = SSrcList */, _pWC uintptr /* *TWhereClause = SWhereClause */, _idxTerm int32) {
	esc := crt.MustMalloc(104)
	var (
		_pWInfo       uintptr // *TWhereInfo = SWhereInfo
		_pTerm        uintptr // *TWhereTerm = SWhereTerm
		_pMaskSet     uintptr // *TWhereMaskSet = SWhereMaskSet
		_pExpr        uintptr // *TExpr = SExpr
		_prereqLeft   uint64
		_prereqAll    uint64
		_extraRight   uint64
		_pStr1        = esc      // **TExpr = SExpr
		_isComplete   = esc + 16 // *int32
		_noCase       = esc + 32 // *int32
		_op           int32
		_pParse       uintptr    // *TParse = SParse
		_db           uintptr    // *Tsqlite3 = Ssqlite3
		_eOp2         = esc + 48 // *uint8
		_nLeft        int32
		_x            uint64
		_aiCurCol     = esc + 64 // *[2]int32
		_pLeft        uintptr    // *TExpr = SExpr
		_pRight       uintptr    // *TExpr = SExpr
		_opMask       uint16
		_pNew         uintptr // *TWhereTerm = SWhereTerm
		_pDup         uintptr // *TExpr = SExpr
		_eExtraOp     uint16
		_idxNew       int32
		_pList        uintptr // *TExprList = SExprList
		_i            int32
		_pNewExpr     uintptr // *TExpr = SExpr
		_1idxNew      int32
		_2pLeft       uintptr // *TExpr = SExpr
		_pStr2        uintptr // *TExpr = SExpr
		_pNewExpr1    uintptr // *TExpr = SExpr
		_pNewExpr2    uintptr // *TExpr = SExpr
		_idxNew1      int32
		_idxNew2      int32
		_zCollSeqName uintptr // *int8
		_wtFlags      uint16
		_3i           int32
		_c            int8
		_4c           uint8
		_pC           uintptr    // *Tu8 = uint8
		_5pRight      = esc + 80 // **TExpr = SExpr
		_6pLeft       = esc + 96 // **TExpr = SExpr
		_res          int32
		_7idxNew      int32
		_pNewTerm     uintptr // *TWhereTerm = SWhereTerm
		_prereqColumn uint64
		_prereqExpr   uint64
		_8pNewExpr    uintptr // *TExpr = SExpr
		_t            uintptr // *TExpr = SExpr
		_9i           int32
		_10idxNew     int32
		_11pNew       uintptr // *TExpr = SExpr
		_12pLeft      uintptr // *TExpr = SExpr
		_13pRight     uintptr // *TExpr = SExpr
		_14i          int32
		_15idxNew     int32
	)
	defer crt.Free(esc)
	_pWInfo = *(*uintptr)(unsafe.Pointer(_pWC))
	_extraRight = uint64(0)
	*(*uintptr)(unsafe.Pointer(_pStr1)) = 0
	*(*int32)(unsafe.Pointer(_isComplete)) = int32(0)
	*(*int32)(unsafe.Pointer(_noCase)) = int32(0)
	_pParse = *(*uintptr)(unsafe.Pointer(_pWInfo))
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _1
	}

	return

_1:
	_pTerm = (*(*uintptr)(unsafe.Pointer(_pWC + 32))) + 64*uintptr(_idxTerm)
	_pMaskSet = _pWInfo + 656
	_pExpr = *(*uintptr)(unsafe.Pointer(_pTerm))

	_prereqLeft = _1907sqlite3WhereExprUsage(tls, _pMaskSet, *(*uintptr)(unsafe.Pointer(_pExpr + 16)))
	_op = int32(*(*uint8)(unsafe.Pointer(_pExpr)))
	if _op != int32(49) {
		goto _2
	}

	if _1935sqlite3ExprCheckIN(tls, _pParse, _pExpr) == 0 {
		goto _4
	}

	return

_4:
	if ((*(*uint32)(unsafe.Pointer(_pExpr + 4))) & uint32(0x800)) == uint32(0) {
		goto _5
	}

	*(*uint64)(unsafe.Pointer(_pTerm + 48)) = _1977exprSelectUsage(tls, _pMaskSet, *(*uintptr)(unsafe.Pointer(_pExpr + 32)))
	goto _6

_5:
	*(*uint64)(unsafe.Pointer(_pTerm + 48)) = _1783sqlite3WhereExprListUsage(tls, _pMaskSet, *(*uintptr)(unsafe.Pointer(_pExpr + 32)))
_6:
	goto _3

_2:
	if _op != int32(50) {
		goto _7
	}

	*(*uint64)(unsafe.Pointer(_pTerm + 48)) = uint64(0)
	goto _8

_7:
	*(*uint64)(unsafe.Pointer(_pTerm + 48)) = _1907sqlite3WhereExprUsage(tls, _pMaskSet, *(*uintptr)(unsafe.Pointer(_pExpr + 24)))
_8:
_3:
	*(*int32)(unsafe.Pointer(_pMaskSet)) = int32(0)
	_prereqAll = _1907sqlite3WhereExprUsage(tls, _pMaskSet, _pExpr)
	if (*(*int32)(unsafe.Pointer(_pMaskSet))) == 0 {
		goto _9
	}

	{
		p := &(*(*uint16)(unsafe.Pointer(_pTerm + 18)))
		*p = uint16(int32(*p) | int32(0x1000))
	}
_9:
	if ((*(*uint32)(unsafe.Pointer(_pExpr + 4))) & uint32(0x1)) == uint32(0) {
		goto _10
	}

	_x = _1900sqlite3WhereGetMask(tls, _pMaskSet, int32(*(*int16)(unsafe.Pointer(_pExpr + 52))))
	_prereqAll = uint64(_prereqAll | _x)
	_extraRight = _x - uint64(1)
	if (_prereqAll >> (uint(1) % 64)) < _x {
		goto _11
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+32903 /* "ON clause references tables to i..." */)
	return

_11:
_10:
	*(*uint64)(unsafe.Pointer(_pTerm + 56)) = _prereqAll
	*(*int32)(unsafe.Pointer(_pTerm + 28)) = int32(-1)
	*(*int32)(unsafe.Pointer(_pTerm + 24)) = int32(-1)
	*(*uint16)(unsafe.Pointer(_pTerm + 20)) = uint16(0)
	if _1978allowedOp(tls, _op) == 0 {
		goto _12
	}

	_pLeft = _1510sqlite3ExprSkipCollate(tls, *(*uintptr)(unsafe.Pointer(_pExpr + 16)))
	_pRight = _1510sqlite3ExprSkipCollate(tls, *(*uintptr)(unsafe.Pointer(_pExpr + 24)))
	_opMask = uint16(func() int32 {
		if ((*(*uint64)(unsafe.Pointer(_pTerm + 48))) & _prereqLeft) == uint64(0) {
			return int32(0x1fff)
		}
		return int32(0x800)
	}())
	if (*(*int32)(unsafe.Pointer(_pTerm + 32))) <= int32(0) {
		goto _14
	}

	_pLeft = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pLeft + 32))) + 8) + 32*uintptr((*(*int32)(unsafe.Pointer(_pTerm + 32)))-int32(1))))
_14:
	if _1979exprMightBeIndexed(tls, _pSrc, _prereqLeft, _aiCurCol, _pLeft, _op) == 0 {
		goto _15
	}

	*(*int32)(unsafe.Pointer(_pTerm + 28)) = *(*int32)(unsafe.Pointer(_aiCurCol))
	*(*int32)(unsafe.Pointer(_pTerm + 40)) = *(*int32)(unsafe.Pointer(_aiCurCol + 4))
	*(*uint16)(unsafe.Pointer(_pTerm + 20)) = uint16(int32(_1980operatorMask(tls, _op)) & int32(_opMask))
_15:
	if _op != int32(45) {
		goto _16
	}

	{
		p := &(*(*uint16)(unsafe.Pointer(_pTerm + 18)))
		*p = uint16(int32(*p) | int32(0x800))
	}
_16:
	if _pRight == 0 || _1979exprMightBeIndexed(tls, _pSrc, *(*uint64)(unsafe.Pointer(_pTerm + 48)), _aiCurCol, _pRight, _op) == 0 {
		goto _17
	}

	_eExtraOp = uint16(0)

	if (*(*int32)(unsafe.Pointer(_pTerm + 28))) < int32(0) {
		goto _18
	}

	_pDup = _1507sqlite3ExprDup(tls, _db, _pExpr, int32(0))
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _20
	}

	_777sqlite3ExprDelete(tls, _db, _pDup)
	return

_20:
	_idxNew = _1893whereClauseInsert(tls, _pWC, _pDup, uint16(3))
	if _idxNew != int32(0) {
		goto _21
	}

	return

_21:
	_pNew = (*(*uintptr)(unsafe.Pointer(_pWC + 32))) + 64*uintptr(_idxNew)
	_1981markTermAsChild(tls, _pWC, _idxNew, _idxTerm)
	if _op != int32(45) {
		goto _22
	}

	{
		p := &(*(*uint16)(unsafe.Pointer(_pNew + 18)))
		*p = uint16(int32(*p) | int32(0x800))
	}
_22:
	_pTerm = (*(*uintptr)(unsafe.Pointer(_pWC + 32))) + 64*uintptr(_idxTerm)
	{
		p := &(*(*uint16)(unsafe.Pointer(_pTerm + 18)))
		*p = uint16(int32(*p) | int32(0x8))
	}
	if _1982termIsEquivalence(tls, _pParse, _pDup) == 0 {
		goto _23
	}

	{
		p := &(*(*uint16)(unsafe.Pointer(_pTerm + 20)))
		*p = uint16(int32(*p) | int32(0x800))
	}
	_eExtraOp = uint16(0x800)
_23:
	goto _19

_18:
	_pDup = _pExpr
	_pNew = _pTerm
_19:
	_1983exprCommute(tls, _pParse, _pDup)
	*(*int32)(unsafe.Pointer(_pNew + 28)) = *(*int32)(unsafe.Pointer(_aiCurCol))
	*(*int32)(unsafe.Pointer(_pNew + 40)) = *(*int32)(unsafe.Pointer(_aiCurCol + 4))
	*(*uint64)(unsafe.Pointer(_pNew + 48)) = _prereqLeft | _extraRight
	*(*uint64)(unsafe.Pointer(_pNew + 56)) = _prereqAll
	*(*uint16)(unsafe.Pointer(_pNew + 20)) = uint16((int32(_1980operatorMask(tls, int32(*(*uint8)(unsafe.Pointer(_pDup))))) + int32(_eExtraOp)) & int32(_opMask))
_17:
	goto _13

_12:
	if int32(*(*uint8)(unsafe.Pointer(_pExpr))) != int32(48) || int32(*(*uint8)(unsafe.Pointer(_pWC + 16))) != int32(44) {
		goto _24
	}

	_pList = *(*uintptr)(unsafe.Pointer(_pExpr + 32))

	_i = int32(0)
_26:
	if _i >= int32(2) {
		goto _28
	}

	_pNewExpr = _1316sqlite3PExpr(tls, _pParse, int32(*(*uint8)(unsafe.Pointer(_1976ops + uintptr(_i)))), _1507sqlite3ExprDup(tls, _db, *(*uintptr)(unsafe.Pointer(_pExpr + 16)), int32(0)), _1507sqlite3ExprDup(tls, _db, *(*uintptr)(unsafe.Pointer((_pList + 8) + 32*uintptr(_i))), int32(0)))
	_1984transferJoinMarkings(tls, _pNewExpr, _pExpr)
	_1idxNew = _1893whereClauseInsert(tls, _pWC, _pNewExpr, uint16(3))
	_1894exprAnalyze(tls, _pSrc, _pWC, _1idxNew)
	_pTerm = (*(*uintptr)(unsafe.Pointer(_pWC + 32))) + 64*uintptr(_idxTerm)
	_1981markTermAsChild(tls, _pWC, _1idxNew, _idxTerm)
	_i++
	goto _26

_28:
	goto _25

_24:
	if int32(*(*uint8)(unsafe.Pointer(_pExpr))) != int32(43) {
		goto _29
	}

	_1985exprAnalyzeOrTerm(tls, _pSrc, _pWC, _idxTerm)
	_pTerm = (*(*uintptr)(unsafe.Pointer(_pWC + 32))) + 64*uintptr(_idxTerm)
_29:
_25:
_13:
	if int32(*(*uint8)(unsafe.Pointer(_pWC + 16))) != int32(44) || _1986isLikeOrGlob(tls, _pParse, _pExpr, _pStr1, _isComplete, _noCase) == 0 {
		goto _30
	}

	_wtFlags = uint16(259)
	_2pLeft = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pExpr + 32))) + 8) + 32))
	_pStr2 = _1507sqlite3ExprDup(tls, _db, *(*uintptr)(unsafe.Pointer(_pStr1)), int32(0))
	if (*(*int32)(unsafe.Pointer(_noCase))) == 0 || (*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pParse))) + 97))) != 0 {
		goto _31
	}

	{
		p := &(*(*uint16)(unsafe.Pointer(_pTerm + 18)))
		*p = uint16(int32(*p) | int32(0x400))
	}
	_3i = int32(0)
_32:
	if int32(set15(&_c, *(*int8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pStr1))) + 8))) + uintptr(_3i))))) == int32(0) {
		goto _34
	}

	*(*int8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pStr1))) + 8))) + uintptr(_3i))) = int8(int32(_c) & (^(int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(uint8(_c))))) & int32(0x20))))
	*(*int8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pStr2 + 8))) + uintptr(_3i))) = int8(*(*uint8)(unsafe.Pointer(_215sqlite3UpperToLower + uintptr(uint8(_c)))))
	_3i++
	goto _32

_34:
_31:
	if (*(*uint8)(unsafe.Pointer(_db + 97))) != 0 {
		goto _35
	}

	_pC = (*(*uintptr)(unsafe.Pointer(_pStr2 + 8))) + uintptr(_211sqlite3Strlen30(tls, *(*uintptr)(unsafe.Pointer(_pStr2 + 8)))-int32(1))
	_4c = *(*uint8)(unsafe.Pointer(_pC))
	if (*(*int32)(unsafe.Pointer(_noCase))) == 0 {
		goto _36
	}

	if int32(_4c) != int32(64) {
		goto _37
	}

	*(*int32)(unsafe.Pointer(_isComplete)) = int32(0)
_37:
	_4c = *(*uint8)(unsafe.Pointer(_215sqlite3UpperToLower + uintptr(_4c)))
_36:
	*(*uint8)(unsafe.Pointer(_pC)) = uint8(int32(_4c) + int32(1))
_35:
	_zCollSeqName = func() uintptr {
		if (*(*int32)(unsafe.Pointer(_noCase))) != 0 {
			return ts + 12625 /* "NOCASE" */
		}
		return ts + 20082 /* "BINARY" */
	}()
	_pNewExpr1 = _1507sqlite3ExprDup(tls, _db, _2pLeft, int32(0))
	_pNewExpr1 = _1316sqlite3PExpr(tls, _pParse, int32(57), _1971sqlite3ExprAddCollateString(tls, _pParse, _pNewExpr1, _zCollSeqName), *(*uintptr)(unsafe.Pointer(_pStr1)))
	_1984transferJoinMarkings(tls, _pNewExpr1, _pExpr)
	_idxNew1 = _1893whereClauseInsert(tls, _pWC, _pNewExpr1, _wtFlags)
	_1894exprAnalyze(tls, _pSrc, _pWC, _idxNew1)
	_pNewExpr2 = _1507sqlite3ExprDup(tls, _db, _2pLeft, int32(0))
	_pNewExpr2 = _1316sqlite3PExpr(tls, _pParse, int32(56), _1971sqlite3ExprAddCollateString(tls, _pParse, _pNewExpr2, _zCollSeqName), _pStr2)
	_1984transferJoinMarkings(tls, _pNewExpr2, _pExpr)
	_idxNew2 = _1893whereClauseInsert(tls, _pWC, _pNewExpr2, _wtFlags)
	_1894exprAnalyze(tls, _pSrc, _pWC, _idxNew2)
	_pTerm = (*(*uintptr)(unsafe.Pointer(_pWC + 32))) + 64*uintptr(_idxTerm)
	if (*(*int32)(unsafe.Pointer(_isComplete))) == 0 {
		goto _38
	}

	_1981markTermAsChild(tls, _pWC, _idxNew1, _idxTerm)
	_1981markTermAsChild(tls, _pWC, _idxNew2, _idxTerm)
_38:
_30:
	if int32(*(*uint8)(unsafe.Pointer(_pWC + 16))) != int32(44) {
		goto _39
	}

	_res = _1987isAuxiliaryVtabOperator(tls, _pExpr, _eOp2, _6pLeft, _5pRight)
_40:
	if postinc24(&_res) <= int32(0) {
		goto _41
	}

	_prereqExpr = _1907sqlite3WhereExprUsage(tls, _pMaskSet, *(*uintptr)(unsafe.Pointer(_5pRight)))
	_prereqColumn = _1907sqlite3WhereExprUsage(tls, _pMaskSet, *(*uintptr)(unsafe.Pointer(_6pLeft)))
	if (_prereqExpr & _prereqColumn) != uint64(0) {
		goto _42
	}

	_8pNewExpr = _1316sqlite3PExpr(tls, _pParse, int32(46), null, _1507sqlite3ExprDup(tls, _db, *(*uintptr)(unsafe.Pointer(_5pRight)), int32(0)))
	if ((*(*uint32)(unsafe.Pointer(_pExpr + 4)))&uint32(0x1)) == uint32(0) || _8pNewExpr == 0 {
		goto _43
	}

	{
		p := &(*(*uint32)(unsafe.Pointer(_8pNewExpr + 4)))
		*p = uint32(uint32(*p) | uint32(0x1))
	}
_43:
	_7idxNew = _1893whereClauseInsert(tls, _pWC, _8pNewExpr, uint16(3))
	_pNewTerm = (*(*uintptr)(unsafe.Pointer(_pWC + 32))) + 64*uintptr(_7idxNew)
	*(*uint64)(unsafe.Pointer(_pNewTerm + 48)) = _prereqExpr
	*(*int32)(unsafe.Pointer(_pNewTerm + 28)) = *(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_6pLeft))) + 44))
	*(*int32)(unsafe.Pointer(_pNewTerm + 40)) = int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_6pLeft))) + 48)))
	*(*uint16)(unsafe.Pointer(_pNewTerm + 20)) = uint16(0x40)
	*(*uint8)(unsafe.Pointer(_pNewTerm + 23)) = *(*uint8)(unsafe.Pointer(_eOp2))
	_1981markTermAsChild(tls, _pWC, _7idxNew, _idxTerm)
	_pTerm = (*(*uintptr)(unsafe.Pointer(_pWC + 32))) + 64*uintptr(_idxTerm)
	{
		p := &(*(*uint16)(unsafe.Pointer(_pTerm + 18)))
		*p = uint16(int32(*p) | int32(0x8))
	}
	*(*uint64)(unsafe.Pointer(_pNewTerm + 56)) = *(*uint64)(unsafe.Pointer(_pTerm + 56))
_42:
	_t = *(*uintptr)(unsafe.Pointer(_6pLeft))
	*(*uintptr)(unsafe.Pointer(_6pLeft)) = *(*uintptr)(unsafe.Pointer(_5pRight))
	*(*uintptr)(unsafe.Pointer(_5pRight)) = _t
	goto _40

_41:
_39:
	if int32(*(*uint8)(unsafe.Pointer(_pWC + 16))) != int32(44) || int32(*(*uint8)(unsafe.Pointer(_pExpr))) != int32(53) && int32(*(*uint8)(unsafe.Pointer(_pExpr))) != int32(45) || set5(&_nLeft, _1608sqlite3ExprVectorSize(tls, *(*uintptr)(unsafe.Pointer(_pExpr + 16)))) <= int32(1) || _1608sqlite3ExprVectorSize(tls, *(*uintptr)(unsafe.Pointer(_pExpr + 24))) != _nLeft || ((*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pExpr + 16))) + 4)))&uint32(0x800)) != uint32(0) && ((*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pExpr + 24))) + 4)))&uint32(0x800)) != uint32(0) {
		goto _44
	}

	_9i = int32(0)
_45:
	if _9i >= _nLeft {
		goto _47
	}

	_12pLeft = _1609sqlite3ExprForVectorField(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pExpr + 16)), _9i)
	_13pRight = _1609sqlite3ExprForVectorField(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pExpr + 24)), _9i)
	_11pNew = _1316sqlite3PExpr(tls, _pParse, int32(*(*uint8)(unsafe.Pointer(_pExpr))), _12pLeft, _13pRight)
	_1984transferJoinMarkings(tls, _11pNew, _pExpr)
	_10idxNew = _1893whereClauseInsert(tls, _pWC, _11pNew, uint16(0x1))
	_1894exprAnalyze(tls, _pSrc, _pWC, _10idxNew)
	_9i++
	goto _45

_47:
	_pTerm = (*(*uintptr)(unsafe.Pointer(_pWC + 32))) + 64*uintptr(_idxTerm)
	*(*uint16)(unsafe.Pointer(_pTerm + 18)) = uint16(6)
	*(*uint16)(unsafe.Pointer(_pTerm + 20)) = uint16(0)
_44:
	if int32(*(*uint8)(unsafe.Pointer(_pWC + 16))) != int32(44) || int32(*(*uint8)(unsafe.Pointer(_pExpr))) != int32(49) || (*(*int32)(unsafe.Pointer(_pTerm + 32))) != int32(0) || int32(*(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pExpr + 16))))) != int32(151) || (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pExpr + 32))) + 72))) != 0 {
		goto _48
	}

	_14i = int32(0)
_49:
	if _14i >= _1608sqlite3ExprVectorSize(tls, *(*uintptr)(unsafe.Pointer(_pExpr + 16))) {
		goto _51
	}

	_15idxNew = _1893whereClauseInsert(tls, _pWC, _pExpr, uint16(0x2))
	*(*int32)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pWC + 32))) + 64*uintptr(_15idxNew)) + 32)) = _14i + int32(1)
	_1894exprAnalyze(tls, _pSrc, _pWC, _15idxNew)
	_1981markTermAsChild(tls, _pWC, _15idxNew, _idxTerm)
	_14i++
	goto _49

_51:
_48:
	_pTerm = (*(*uintptr)(unsafe.Pointer(_pWC + 32))) + 64*uintptr(_idxTerm)
	{
		p := &(*(*uint64)(unsafe.Pointer(_pTerm + 48)))
		*p = uint64(uint64(*p) | _extraRight)
	}
}

// _1895exprNodeIsDeterministic is defined at sqlite3.c:136127:12
func _1895exprNodeIsDeterministic(tls crt.TLS, _pWalker uintptr /* *TWalker = SWalker */, _pExpr uintptr /* *TExpr = SExpr */) (r int32) {
	if int32(*(*uint8)(unsafe.Pointer(_pExpr))) != int32(144) || bool2int(((*(*uint32)(unsafe.Pointer(_pExpr + 4)))&uint32(0x80000)) != uint32(0)) != int32(0) {
		goto _1
	}

	*(*uint8)(unsafe.Pointer(_pWalker + 36)) = uint8(0)
	return int32(2)

_1:
	return int32(0)
}

// _1896sqlite3WhereFindTerm is defined at sqlite3.c:132164:26
func _1896sqlite3WhereFindTerm(tls crt.TLS, _pWC uintptr /* *TWhereClause = SWhereClause */, _iCur int32, _iColumn int32, _notReady uint64, _op uint32, _pIdx uintptr /* *TIndex = SIndex */) (r uintptr /* *TWhereTerm = SWhereTerm */) {
	esc := crt.MustMalloc(112)
	var (
		_pResult uintptr // *TWhereTerm = SWhereTerm
		_p       uintptr // *TWhereTerm = SWhereTerm
		_scan    = esc   // *TWhereScan = SWhereScan
	)
	defer crt.Free(esc)
	_pResult = 0
	_p = _1988whereScanInit(tls, _scan, _pWC, _iCur, _iColumn, _op, _pIdx)
	_op = uint32(_op & uint32(130))
_1:
	if _p == 0 {
		goto _2
	}

	if ((*(*uint64)(unsafe.Pointer(_p + 48))) & _notReady) != uint64(0) {
		goto _3
	}

	if (*(*uint64)(unsafe.Pointer(_p + 48))) != uint64(0) || (uint32(*(*uint16)(unsafe.Pointer(_p + 20)))&_op) == uint32(0) {
		goto _4
	}

	return _p

_4:
	if _pResult != 0 {
		goto _5
	}

	_pResult = _p
_5:
_3:
	_p = _1989whereScanNext(tls, _scan)
	goto _1

_2:
	return _pResult
}

// _1897findIndexCol is defined at sqlite3.c:132198:12
func _1897findIndexCol(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pList uintptr /* *TExprList = SExprList */, _iBase int32, _pIdx uintptr /* *TIndex = SIndex */, _iCol int32) (r int32) {
	var (
		_i     int32
		_zColl uintptr // *int8
		_p     uintptr // *TExpr = SExpr
		_pColl uintptr // *TCollSeq = SCollSeq
	)
	_zColl = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 64))) + 8*uintptr(_iCol)))
	_i = int32(0)
_1:
	if _i >= (*(*int32)(unsafe.Pointer(_pList))) {
		goto _3
	}

	_p = _1510sqlite3ExprSkipCollate(tls, *(*uintptr)(unsafe.Pointer((_pList + 8) + 32*uintptr(_i))))
	if int32(*(*uint8)(unsafe.Pointer(_p))) != int32(145) || int32(*(*int16)(unsafe.Pointer(_p + 48))) != int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 8))) + 2*uintptr(_iCol)))) || (*(*int32)(unsafe.Pointer(_p + 44))) != _iBase {
		goto _4
	}

	_pColl = _1771sqlite3ExprNNCollSeq(tls, _pParse, *(*uintptr)(unsafe.Pointer((_pList + 8) + 32*uintptr(_i))))
	if int32(0) != _110sqlite3StrICmp(tls, *(*uintptr)(unsafe.Pointer(_pColl)), _zColl) {
		goto _5
	}

	return _i

_5:
_4:
	_i++
	goto _1

_3:
	return int32(-1)
}

// _1898indexColumnNotNull is defined at sqlite3.c:132227:12
func _1898indexColumnNotNull(tls crt.TLS, _pIdx uintptr /* *TIndex = SIndex */, _iCol int32) (r int32) {
	var _j int32

	_j = int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 8))) + 2*uintptr(_iCol))))
	if _j < int32(0) {
		goto _1
	}

	return int32(*(*uint8)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 24))) + 8))) + 32*uintptr(_j)) + 24)))

	goto _2

_1:
	if _j != int32(-1) {
		goto _3
	}

	return int32(1)

	goto _4

_3:
	return int32(0)

_4:
_2:
	return r
}

// _1899columnsInIndex is defined at sqlite3.c:134498:16
func _1899columnsInIndex(tls crt.TLS, _pIdx uintptr /* *TIndex = SIndex */) (r uint64) {
	var (
		_m uint64
		_j int32
		_x int32
	)
	_m = uint64(0)
	_j = int32(*(*uint16)(unsafe.Pointer(_pIdx + 96))) - int32(1)
_1:
	if _j < int32(0) {
		goto _3
	}

	_x = int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 8))) + 2*uintptr(_j))))
	if _x < int32(0) {
		goto _4
	}

	if _x >= int32(63) {
		goto _5
	}

	_m = uint64(_m | (uint64(1) << (uint(_x) % 64)))
_5:
_4:
	_j--
	goto _1

_3:
	return _m
}

// _1900sqlite3WhereGetMask is defined at sqlite3.c:131972:24
func _1900sqlite3WhereGetMask(tls crt.TLS, _pMaskSet uintptr /* *TWhereMaskSet = SWhereMaskSet */, _iCursor int32) (r uint64) {
	var _i int32

	_i = int32(0)
_1:
	if _i >= (*(*int32)(unsafe.Pointer(_pMaskSet + 4))) {
		goto _3
	}

	if (*(*int32)(unsafe.Pointer((_pMaskSet + 8) + 4*uintptr(_i)))) != _iCursor {
		goto _4
	}

	return uint64(1) << (uint(_i) % 64)

_4:
	_i++
	goto _1

_3:
	return uint64(0)
}

// _1901whereLoopAddVirtual is defined at sqlite3.c:134977:12
func _1901whereLoopAddVirtual(tls crt.TLS, _pBuilder uintptr /* *TWhereLoopBuilder = SWhereLoopBuilder */, _mPrereq uint64, _mUnusable uint64) (r int32) {
	esc := crt.MustMalloc(18)
	var (
		_rc           int32
		_pWInfo       uintptr // *TWhereInfo = SWhereInfo
		_pParse       uintptr // *TParse = SParse
		_pWC          uintptr // *TWhereClause = SWhereClause
		_pSrc         uintptr // *SSrcList_item
		_p            uintptr // *Tsqlite3_index_info = Ssqlite3_index_info
		_nConstraint  int32
		_bIn          = esc   // *int32
		_pNew         uintptr // *TWhereLoop = SWhereLoop
		_mBest        uint64
		_mNoOmit      = esc + 16 // *Tu16 = uint16
		_seenZero     int32
		_seenZeroNoIN int32
		_mPrev        uint64
		_mBestNoIn    uint64
		_i            int32
		_mNext        uint64
		_mThis        uint64
	)
	defer crt.Free(esc)
	_rc = int32(0)

	_pWInfo = *(*uintptr)(unsafe.Pointer(_pBuilder))
	_pParse = *(*uintptr)(unsafe.Pointer(_pWInfo))
	_pWC = *(*uintptr)(unsafe.Pointer(_pBuilder + 8))
	_pNew = *(*uintptr)(unsafe.Pointer(_pBuilder + 24))
	_pSrc = ((*(*uintptr)(unsafe.Pointer(_pWInfo + 8))) + 8) + 112*uintptr(*(*uint8)(unsafe.Pointer(_pNew + 16)))

	_p = _1990allocateIndexInfo(tls, _pParse, _pWC, _mUnusable, _pSrc, *(*uintptr)(unsafe.Pointer(_pBuilder + 16)), _mNoOmit)
	if _p != 0 {
		goto _1
	}

	return int32(7)

_1:
	*(*int16)(unsafe.Pointer(_pNew + 18)) = int16(0)
	*(*uint32)(unsafe.Pointer(_pNew + 40)) = uint32(0x400)
	*(*uint16)(unsafe.Pointer(_pNew + 44)) = uint16(0)
	*(*uint8)(unsafe.Pointer(_pNew + 24 + 4)) = uint8(0)
	_nConstraint = *(*int32)(unsafe.Pointer(_p))
	if _1909whereLoopResize(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _pNew, _nConstraint) == 0 {
		goto _2
	}

	_181sqlite3DbFree(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _p)
	return int32(7)

_2:
	_rc = _1991whereLoopAddVirtualOne(tls, _pBuilder, _mPrereq, uint64(18446744073709551615), uint16(0), _p, *(*uint16)(unsafe.Pointer(_mNoOmit)), _bIn)
	if _rc != int32(0) || set150(&_mBest, (*(*uint64)(unsafe.Pointer(_pNew)))&(^_mPrereq)) == uint64(0) {
		goto _3
	}

	_seenZero = int32(0)
	_seenZeroNoIN = int32(0)
	_mPrev = uint64(0)
	_mBestNoIn = uint64(0)
	if (*(*int32)(unsafe.Pointer(_bIn))) == 0 {
		goto _4
	}

	_rc = _1991whereLoopAddVirtualOne(tls, _pBuilder, _mPrereq, uint64(18446744073709551615), uint16(0x1), _p, *(*uint16)(unsafe.Pointer(_mNoOmit)), _bIn)

	_mBestNoIn = (*(*uint64)(unsafe.Pointer(_pNew))) & (^_mPrereq)
	if _mBestNoIn != uint64(0) {
		goto _5
	}

	_seenZero = int32(1)
	_seenZeroNoIN = int32(1)
_5:
_4:
_6:
	if _rc != int32(0) {
		goto _7
	}

	_mNext = uint64(18446744073709551615)

	_i = int32(0)
_8:
	if _i >= _nConstraint {
		goto _10
	}

	_mThis = (*(*uint64)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pWC + 32))) + 64*uintptr(*(*int32)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_p + 8))) + 12*uintptr(_i)) + 8)))) + 48))) & (^_mPrereq)
	if _mThis <= _mPrev || _mThis >= _mNext {
		goto _11
	}

	_mNext = _mThis
_11:
	_i++
	goto _8

_10:
	_mPrev = _mNext
	if _mNext != uint64(18446744073709551615) {
		goto _12
	}

	goto _7

_12:
	if _mNext != _mBest && _mNext != _mBestNoIn {
		goto _13
	}

	goto _6

_13:
	_rc = _1991whereLoopAddVirtualOne(tls, _pBuilder, _mPrereq, _mNext|_mPrereq, uint16(0), _p, *(*uint16)(unsafe.Pointer(_mNoOmit)), _bIn)
	if (*(*uint64)(unsafe.Pointer(_pNew))) != _mPrereq {
		goto _14
	}

	_seenZero = int32(1)
	if (*(*int32)(unsafe.Pointer(_bIn))) != int32(0) {
		goto _15
	}

	_seenZeroNoIN = int32(1)
_15:
_14:
	goto _6

_7:
	if _rc != int32(0) || _seenZero != int32(0) {
		goto _16
	}

	_rc = _1991whereLoopAddVirtualOne(tls, _pBuilder, _mPrereq, _mPrereq, uint16(0), _p, *(*uint16)(unsafe.Pointer(_mNoOmit)), _bIn)
	if (*(*int32)(unsafe.Pointer(_bIn))) != int32(0) {
		goto _17
	}

	_seenZeroNoIN = int32(1)
_17:
_16:
	if _rc != int32(0) || _seenZeroNoIN != int32(0) {
		goto _18
	}

	_rc = _1991whereLoopAddVirtualOne(tls, _pBuilder, _mPrereq, _mPrereq, uint16(0x1), _p, *(*uint16)(unsafe.Pointer(_mNoOmit)), _bIn)
_18:
_3:
	if (*(*int32)(unsafe.Pointer(_p + 56))) == 0 {
		goto _19
	}

	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_p + 48)))
_19:
	_376sqlite3DbFreeNN(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _p)
	return _rc
}

// _1902whereLoopAddBtree is defined at sqlite3.c:134571:12
func _1902whereLoopAddBtree(tls crt.TLS, _pBuilder uintptr /* *TWhereLoopBuilder = SWhereLoopBuilder */, _mPrereq uint64) (r int32) {
	esc := crt.MustMalloc(130)
	var (
		_pWInfo     uintptr     // *TWhereInfo = SWhereInfo
		_pProbe     uintptr     // *TIndex = SIndex
		_sPk        = esc       // *TIndex = SIndex
		_aiRowEstPk = esc + 112 // *[2]int16
		_aiColumnPk = esc + 128 // *Ti16 = int16
		_pTabList   uintptr     // *TSrcList = SSrcList
		_pSrc       uintptr     // *SSrcList_item
		_pNew       uintptr     // *TWhereLoop = SWhereLoop
		_rc         int32
		_iSortIdx   int32
		_b          int32
		_rSize      int16
		_rLogSize   int16
		_pWC        uintptr // *TWhereClause = SWhereClause
		_pTab       uintptr // *TTable = STable
		_pFirst     uintptr // *TIndex = SIndex
		_pTerm      uintptr // *TWhereTerm = SWhereTerm
		_pWCEnd     uintptr // *TWhereTerm = SWhereTerm
		_m          uint64
		_nLookup    int16
		_ii         int32
		_iCur       int32
		_pWC2       uintptr // *TWhereClause = SWhereClause
		_1pTerm     uintptr // *TWhereTerm = SWhereTerm
	)
	defer crt.Free(esc)
	*(*int16)(unsafe.Pointer(_aiColumnPk)) = int16(-1)
	_rc = int32(0)
	_iSortIdx = int32(1)
	_pNew = *(*uintptr)(unsafe.Pointer(_pBuilder + 24))
	_pWInfo = *(*uintptr)(unsafe.Pointer(_pBuilder))
	_pTabList = *(*uintptr)(unsafe.Pointer(_pWInfo + 8))
	_pSrc = (_pTabList + 8) + 112*uintptr(*(*uint8)(unsafe.Pointer(_pNew + 16)))
	_pTab = *(*uintptr)(unsafe.Pointer(_pSrc + 32))
	_pWC = *(*uintptr)(unsafe.Pointer(_pBuilder + 8))

	if (*(*uintptr)(unsafe.Pointer(_pSrc + 104))) == 0 {
		goto _1
	}

	_pProbe = *(*uintptr)(unsafe.Pointer(_pSrc + 104))
	goto _2

_1:
	if ((*(*uint32)(unsafe.Pointer(_pTab + 64))) & uint32(0x20)) == uint32(0) {
		goto _3
	}

	_pProbe = *(*uintptr)(unsafe.Pointer(_pTab + 16))
	goto _4

_3:
	crt.Xmemset(tls, _sPk, int32(0), uint64(104))
	*(*uint16)(unsafe.Pointer(_sPk + 94)) = uint16(1)
	*(*uint16)(unsafe.Pointer(_sPk + 96)) = uint16(1)
	*(*uintptr)(unsafe.Pointer(_sPk + 8)) = _aiColumnPk
	*(*uintptr)(unsafe.Pointer(_sPk + 16)) = _aiRowEstPk
	*(*uint8)(unsafe.Pointer(_sPk + 98)) = uint8(5)
	*(*uintptr)(unsafe.Pointer(_sPk + 24)) = _pTab
	*(*int16)(unsafe.Pointer(_sPk + 92)) = *(*int16)(unsafe.Pointer(_pTab + 74))
	*(*int16)(unsafe.Pointer(_aiRowEstPk)) = *(*int16)(unsafe.Pointer(_pTab + 72))
	*(*int16)(unsafe.Pointer(_aiRowEstPk + 2)) = int16(0)
	_pFirst = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pSrc + 32))) + 16))
	if int32(uint32(*(*uint8)(unsafe.Pointer((_pSrc + 60) + 1)))<<31>>31) != int32(0) {
		goto _5
	}

	*(*uintptr)(unsafe.Pointer(_sPk + 40)) = _pFirst
_5:
	_pProbe = _sPk
_4:
_2:
	_rSize = *(*int16)(unsafe.Pointer(_pTab + 72))
	_rLogSize = _1992estLog(tls, _rSize)
	if (*(*uintptr)(unsafe.Pointer(_pBuilder + 32))) != 0 || (int32(*(*uint16)(unsafe.Pointer(_pWInfo + 64)))&int32(0x20)) != int32(0) || ((*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pWInfo))))) + 48)))&uint32(0x8000)) == uint32(0) || (*(*uintptr)(unsafe.Pointer(_pSrc + 104))) != 0 || (uint32(*(*uint8)(unsafe.Pointer((_pSrc + 60) + 1)))<<31>>31) != 0 || ((*(*uint32)(unsafe.Pointer(_pTab + 64)))&uint32(0x20)) != uint32(0) || (uint32((*(*uint8)(unsafe.Pointer((_pSrc + 60) + 1)))>>3)<<31>>31) != 0 || (uint32((*(*uint8)(unsafe.Pointer((_pSrc + 60) + 1)))>>5)<<31>>31) != 0 {
		goto _6
	}

	_pWCEnd = (*(*uintptr)(unsafe.Pointer(_pWC + 32))) + 64*uintptr(*(*int32)(unsafe.Pointer(_pWC + 20)))
	_pTerm = *(*uintptr)(unsafe.Pointer(_pWC + 32))
_7:
	if _rc != int32(0) || _pTerm >= _pWCEnd {
		goto _9
	}

	if ((*(*uint64)(unsafe.Pointer(_pTerm + 48))) & (*(*uint64)(unsafe.Pointer(_pNew + 8)))) == 0 {
		goto _10
	}

	goto _8

_10:
	if _1908termCanDriveIndex(tls, _pTerm, _pSrc, uint64(0)) == 0 {
		goto _11
	}

	*(*uint16)(unsafe.Pointer(_pNew + 24)) = uint16(1)
	*(*uint16)(unsafe.Pointer(_pNew + 46)) = uint16(0)
	*(*uintptr)(unsafe.Pointer(_pNew + 24 + 8)) = null
	*(*uint16)(unsafe.Pointer(_pNew + 44)) = uint16(1)
	*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pNew + 56)))) = _pTerm
	*(*int16)(unsafe.Pointer(_pNew + 18)) = int16((int32(_rLogSize) + int32(_rSize)) + int32(4))
	if (*(*uintptr)(unsafe.Pointer(_pTab + 24))) != 0 || ((*(*uint32)(unsafe.Pointer(_pTab + 64)))&uint32(0x2)) != uint32(0) {
		goto _12
	}

	{
		p := &(*(*int16)(unsafe.Pointer(_pNew + 18)))
		*p = int16(int32(*p) + int32(24))
	}
_12:
	if int32(*(*int16)(unsafe.Pointer(_pNew + 18))) >= int32(0) {
		goto _13
	}

	*(*int16)(unsafe.Pointer(_pNew + 18)) = int16(0)
_13:
	*(*int16)(unsafe.Pointer(_pNew + 22)) = int16(43)

	*(*int16)(unsafe.Pointer(_pNew + 20)) = _1761sqlite3LogEstAdd(tls, _rLogSize, *(*int16)(unsafe.Pointer(_pNew + 22)))
	*(*uint32)(unsafe.Pointer(_pNew + 40)) = uint32(0x4000)
	*(*uint64)(unsafe.Pointer(_pNew)) = _mPrereq | (*(*uint64)(unsafe.Pointer(_pTerm + 48)))
	_rc = _1993whereLoopInsert(tls, _pBuilder, _pNew)
_11:
_8:
	_pTerm += 64
	goto _7

_9:
_6:
_14:
	if _rc != int32(0) || _pProbe == 0 {
		goto _16
	}

	if (*(*uintptr)(unsafe.Pointer(_pProbe + 72))) == 0 || _1994whereUsablePartialIndex(tls, *(*int32)(unsafe.Pointer(_pSrc + 64)), _pWC, *(*uintptr)(unsafe.Pointer(_pProbe + 72))) != 0 {
		goto _17
	}

	goto _15

_17:
	_rSize = *(*int16)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pProbe + 16))))
	*(*uint16)(unsafe.Pointer(_pNew + 24)) = uint16(0)
	*(*uint16)(unsafe.Pointer(_pNew + 24 + 2)) = uint16(0)
	*(*uint16)(unsafe.Pointer(_pNew + 24 + 4)) = uint16(0)
	*(*uint16)(unsafe.Pointer(_pNew + 46)) = uint16(0)
	*(*uint16)(unsafe.Pointer(_pNew + 44)) = uint16(0)
	*(*uint8)(unsafe.Pointer(_pNew + 17)) = uint8(0)
	*(*int16)(unsafe.Pointer(_pNew + 18)) = int16(0)
	*(*uint64)(unsafe.Pointer(_pNew)) = _mPrereq
	*(*int16)(unsafe.Pointer(_pNew + 22)) = _rSize
	*(*uintptr)(unsafe.Pointer(_pNew + 24 + 8)) = _pProbe
	_b = _1995indexMightHelpWithOrderBy(tls, _pBuilder, _pProbe, *(*int32)(unsafe.Pointer(_pSrc + 64)))

	if (*(*int32)(unsafe.Pointer(_pProbe + 88))) > int32(0) {
		goto _18
	}

	*(*uint32)(unsafe.Pointer(_pNew + 40)) = uint32(0x100)
	*(*uint8)(unsafe.Pointer(_pNew + 17)) = uint8(func() int32 {
		if _b != 0 {
			return _iSortIdx
		}
		return int32(0)
	}())
	*(*int16)(unsafe.Pointer(_pNew + 20)) = int16(int32(_rSize) + int32(16))
	_1996whereLoopOutputAdjust(tls, _pWC, _pNew, _rSize)
	_rc = _1993whereLoopInsert(tls, _pBuilder, _pNew)
	*(*int16)(unsafe.Pointer(_pNew + 22)) = _rSize
	if _rc == 0 {
		goto _20
	}

	goto _16

_20:
	goto _19

_18:
	if (uint32((*(*uint8)(unsafe.Pointer(_pProbe + 99)))>>5) << 31 >> 31) == 0 {
		goto _21
	}

	*(*uint32)(unsafe.Pointer(_pNew + 40)) = uint32(576)
	_m = uint64(0)
	goto _22

_21:
	_m = (*(*uint64)(unsafe.Pointer(_pSrc + 88))) & (^_1899columnsInIndex(tls, _pProbe))
	*(*uint32)(unsafe.Pointer(_pNew + 40)) = uint32(func() int32 {
		if _m == uint64(0) {
			return int32(576)
		}
		return int32(0x200)
	}())
_22:
	if _b == 0 && ((*(*uint32)(unsafe.Pointer(_pTab + 64)))&uint32(0x20)) == uint32(0) && (*(*uintptr)(unsafe.Pointer(_pProbe + 72))) == 0 && (_m != uint64(0) || int32(uint32((*(*uint8)(unsafe.Pointer(_pProbe + 99)))>>2)<<31>>31) != int32(0) || int32(*(*int16)(unsafe.Pointer(_pProbe + 92))) >= int32(*(*int16)(unsafe.Pointer(_pTab + 74))) || (int32(*(*uint16)(unsafe.Pointer(_pWInfo + 64)))&int32(0x4)) != int32(0) || (*(*int32)(unsafe.Pointer(_28sqlite3Config + 16))) == 0 || (int32(*(*uint16)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pWInfo)))) + 92)))&int32(0x20)) != int32(0)) {
		goto _23
	}

	*(*uint8)(unsafe.Pointer(_pNew + 17)) = uint8(func() int32 {
		if _b != 0 {
			return _iSortIdx
		}
		return int32(0)
	}())
	*(*int16)(unsafe.Pointer(_pNew + 20)) = int16((int32(_rSize) + int32(1)) + ((int32(15) * int32(*(*int16)(unsafe.Pointer(_pProbe + 92)))) / int32(*(*int16)(unsafe.Pointer(_pTab + 74)))))
	if _m == uint64(0) {
		goto _24
	}

	_nLookup = int16(int32(_rSize) + int32(16))
	_iCur = *(*int32)(unsafe.Pointer(_pSrc + 64))
	_pWC2 = _pWInfo + 104
	_ii = int32(0)
_25:
	if _ii >= (*(*int32)(unsafe.Pointer(_pWC2 + 20))) {
		goto _27
	}

	_1pTerm = (*(*uintptr)(unsafe.Pointer(_pWC2 + 32))) + 64*uintptr(_ii)
	if _1926sqlite3ExprCoveredByIndex(tls, *(*uintptr)(unsafe.Pointer(_1pTerm)), _iCur, _pProbe) != 0 {
		goto _28
	}

	goto _27

_28:
	if int32(*(*int16)(unsafe.Pointer(_1pTerm + 16))) > int32(0) {
		goto _29
	}

	_nLookup = int16(int32(_nLookup) + int32(*(*int16)(unsafe.Pointer(_1pTerm + 16))))
	goto _30

_29:
	_nLookup--
	if (int32(*(*uint16)(unsafe.Pointer(_1pTerm + 20))) & int32(130)) == 0 {
		goto _31
	}

	_nLookup = int16(int32(_nLookup) - int32(19))
_31:
_30:
	_ii++
	goto _25

_27:
	*(*int16)(unsafe.Pointer(_pNew + 20)) = _1761sqlite3LogEstAdd(tls, *(*int16)(unsafe.Pointer(_pNew + 20)), _nLookup)
_24:
	_1996whereLoopOutputAdjust(tls, _pWC, _pNew, _rSize)
	_rc = _1993whereLoopInsert(tls, _pBuilder, _pNew)
	*(*int16)(unsafe.Pointer(_pNew + 22)) = _rSize
	if _rc == 0 {
		goto _32
	}

	goto _16

_32:
_23:
_19:
	*(*uint32)(unsafe.Pointer(_pBuilder + 40)) = uint32(0)
	_rc = _1997whereLoopAddBtreeIndex(tls, _pBuilder, _pSrc, _pProbe, int16(0))
	if (*(*uint32)(unsafe.Pointer(_pBuilder + 40))) != uint32(0x1) {
		goto _33
	}

	{
		p := &(*(*uint32)(unsafe.Pointer(_pTab + 64)))
		*p = uint32(uint32(*p) | uint32(0x100))
	}
_33:
	if (*(*uintptr)(unsafe.Pointer(_pSrc + 104))) == 0 {
		goto _34
	}

	goto _16

_34:
_15:
	_pProbe = *(*uintptr)(unsafe.Pointer(_pProbe + 40))
	_iSortIdx++
	goto _14

_16:
	return _rc
}

// _1903whereLoopAddOr is defined at sqlite3.c:135098:12
func _1903whereLoopAddOr(tls crt.TLS, _pBuilder uintptr /* *TWhereLoopBuilder = SWhereLoopBuilder */, _mPrereq uint64, _mUnusable uint64) (r int32) {
	esc := crt.MustMalloc(792)
	var (
		_pWInfo    uintptr // *TWhereInfo = SWhereInfo
		_pWC       uintptr // *TWhereClause = SWhereClause
		_pNew      uintptr // *TWhereLoop = SWhereLoop
		_pTerm     uintptr // *TWhereTerm = SWhereTerm
		_pWCEnd    uintptr // *TWhereTerm = SWhereTerm
		_rc        int32
		_iCur      int32
		_tempWC    = esc       // *TWhereClause = SWhereClause
		_sSubBuild = esc + 560 // *TWhereLoopBuilder = SWhereLoopBuilder
		_sSum      = esc + 608 // *TWhereOrSet = SWhereOrSet
		_sCur      = esc + 672 // *TWhereOrSet = SWhereOrSet
		_pItem     uintptr     // *SSrcList_item
		_pOrWC     uintptr     // *TWhereClause = SWhereClause
		_pOrWCEnd  uintptr     // *TWhereTerm = SWhereTerm
		_pOrTerm   uintptr     // *TWhereTerm = SWhereTerm
		_once      int32
		_i         int32
		_j         int32
		_sPrev     = esc + 736 // *TWhereOrSet = SWhereOrSet
	)
	defer crt.Free(esc)
	_pWInfo = *(*uintptr)(unsafe.Pointer(_pBuilder))
	_rc = int32(0)
	_pWC = *(*uintptr)(unsafe.Pointer(_pBuilder + 8))
	_pWCEnd = (*(*uintptr)(unsafe.Pointer(_pWC + 32))) + 64*uintptr(*(*int32)(unsafe.Pointer(_pWC + 20)))
	_pNew = *(*uintptr)(unsafe.Pointer(_pBuilder + 24))
	crt.Xmemset(tls, _sSum, int32(0), uint64(56))
	_pItem = ((*(*uintptr)(unsafe.Pointer(_pWInfo + 8))) + 8) + 112*uintptr(*(*uint8)(unsafe.Pointer(_pNew + 16)))
	_iCur = *(*int32)(unsafe.Pointer(_pItem + 64))
	_pTerm = *(*uintptr)(unsafe.Pointer(_pWC + 32))
_1:
	if _pTerm >= _pWCEnd || _rc != int32(0) {
		goto _3
	}

	if (int32(*(*uint16)(unsafe.Pointer(_pTerm + 20)))&int32(0x200)) == int32(0) || ((*(*uint64)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTerm + 40))) + 552)))&(*(*uint64)(unsafe.Pointer(_pNew + 8)))) == uint64(0) {
		goto _4
	}

	_pOrWC = *(*uintptr)(unsafe.Pointer(_pTerm + 40))
	_pOrWCEnd = (*(*uintptr)(unsafe.Pointer(_pOrWC + 32))) + 64*uintptr(*(*int32)(unsafe.Pointer(_pOrWC + 20)))
	_once = int32(1)
	*(*SWhereLoopBuilder)(unsafe.Pointer(_sSubBuild)) = *(*SWhereLoopBuilder)(unsafe.Pointer(_pBuilder))
	*(*uintptr)(unsafe.Pointer(_sSubBuild + 16)) = null
	*(*uintptr)(unsafe.Pointer(_sSubBuild + 32)) = _sCur
	_pOrTerm = *(*uintptr)(unsafe.Pointer(_pOrWC + 32))
_5:
	if _pOrTerm >= _pOrWCEnd {
		goto _7
	}

	if (int32(*(*uint16)(unsafe.Pointer(_pOrTerm + 20))) & int32(0x400)) == int32(0) {
		goto _8
	}

	*(*uintptr)(unsafe.Pointer(_sSubBuild + 8)) = *(*uintptr)(unsafe.Pointer(_pOrTerm + 40))
	goto _9

_8:
	if (*(*int32)(unsafe.Pointer(_pOrTerm + 28))) != _iCur {
		goto _10
	}

	*(*uintptr)(unsafe.Pointer(_tempWC)) = *(*uintptr)(unsafe.Pointer(_pWC))
	*(*uintptr)(unsafe.Pointer(_tempWC + 8)) = _pWC
	*(*uint8)(unsafe.Pointer(_tempWC + 16)) = uint8(44)
	*(*int32)(unsafe.Pointer(_tempWC + 20)) = int32(1)
	*(*uintptr)(unsafe.Pointer(_tempWC + 32)) = _pOrTerm
	*(*uintptr)(unsafe.Pointer(_sSubBuild + 8)) = _tempWC
	goto _11

_10:
	goto _6

_11:
_9:
	*(*uint16)(unsafe.Pointer(_sCur)) = uint16(0)
	if *(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pItem + 32)) + 84)) == 0 {
		goto _12
	}

	_rc = _1901whereLoopAddVirtual(tls, _sSubBuild, _mPrereq, _mUnusable)
	goto _13

_12:
	_rc = _1902whereLoopAddBtree(tls, _sSubBuild, _mPrereq)
_13:
	if _rc != int32(0) {
		goto _14
	}

	_rc = _1903whereLoopAddOr(tls, _sSubBuild, _mPrereq, _mUnusable)
_14:
	if int32(*(*uint16)(unsafe.Pointer(_sCur))) != int32(0) {
		goto _15
	}

	*(*uint16)(unsafe.Pointer(_sSum)) = uint16(0)
	goto _7

	goto _16

_15:
	if _once == 0 {
		goto _17
	}

	_1998whereOrMove(tls, _sSum, _sCur)
	_once = int32(0)
	goto _18

_17:
	_1998whereOrMove(tls, _sPrev, _sSum)
	*(*uint16)(unsafe.Pointer(_sSum)) = uint16(0)
	_i = int32(0)
_19:
	if _i >= int32(*(*uint16)(unsafe.Pointer(_sPrev))) {
		goto _21
	}

	_j = int32(0)
_22:
	if _j >= int32(*(*uint16)(unsafe.Pointer(_sCur))) {
		goto _24
	}

	_1999whereOrInsert(tls, _sSum, (*(*uint64)(unsafe.Pointer((_sPrev + 8) + 16*uintptr(_i))))|(*(*uint64)(unsafe.Pointer((_sCur + 8) + 16*uintptr(_j)))), _1761sqlite3LogEstAdd(tls, *(*int16)(unsafe.Pointer(((_sPrev + 8) + 16*uintptr(_i)) + 8)), *(*int16)(unsafe.Pointer(((_sCur + 8) + 16*uintptr(_j)) + 8))), _1761sqlite3LogEstAdd(tls, *(*int16)(unsafe.Pointer(((_sPrev + 8) + 16*uintptr(_i)) + 10)), *(*int16)(unsafe.Pointer(((_sCur + 8) + 16*uintptr(_j)) + 10))))
	_j++
	goto _22

_24:
	_i++
	goto _19

_21:
_18:
_16:
_6:
	_pOrTerm += 64
	goto _5

_7:
	*(*uint16)(unsafe.Pointer(_pNew + 44)) = uint16(1)
	*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pNew + 56)))) = _pTerm
	*(*uint32)(unsafe.Pointer(_pNew + 40)) = uint32(0x2000)
	*(*int16)(unsafe.Pointer(_pNew + 18)) = int16(0)
	*(*uint8)(unsafe.Pointer(_pNew + 17)) = uint8(0)
	crt.Xmemset(tls, _pNew+24, int32(0), uint64(16))
	_i = int32(0)
_25:
	if _rc != int32(0) || _i >= int32(*(*uint16)(unsafe.Pointer(_sSum))) {
		goto _27
	}

	*(*int16)(unsafe.Pointer(_pNew + 20)) = int16(int32(*(*int16)(unsafe.Pointer(((_sSum + 8) + 16*uintptr(_i)) + 8))) + int32(1))
	*(*int16)(unsafe.Pointer(_pNew + 22)) = *(*int16)(unsafe.Pointer(((_sSum + 8) + 16*uintptr(_i)) + 10))
	*(*uint64)(unsafe.Pointer(_pNew)) = *(*uint64)(unsafe.Pointer((_sSum + 8) + 16*uintptr(_i)))
	_rc = _1993whereLoopInsert(tls, _pBuilder, _pNew)
	_i++
	goto _25

_27:
_4:
	_pTerm += 64
	goto _1

_3:
	return _rc
}

// _1904whereLoopClear is defined at sqlite3.c:133621:13
func _1904whereLoopClear(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _p uintptr /* *TWhereLoop = SWhereLoop */) {
	if (*(*uintptr)(unsafe.Pointer(_p + 56))) == (_p + 72) {
		goto _1
	}

	_376sqlite3DbFreeNN(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 56)))
_1:
	_2000whereLoopClearUnion(tls, _db, _p)
	_1772whereLoopInit(tls, _p)
}

type SWherePath struct {
	XmaskLoop  uint64
	XrevLoop   uint64
	XnRow      int16
	XrCost     int16
	XrUnsorted int16
	XisOrdered int8
	XaLoop     uintptr // **SWhereLoop
}

// _1905wherePathSatisfiesOrderBy is defined at sqlite3.c:135289:11
func _1905wherePathSatisfiesOrderBy(tls crt.TLS, _pWInfo uintptr /* *TWhereInfo = SWhereInfo */, _pOrderBy uintptr /* *TExprList = SExprList */, _pPath uintptr /* *TWherePath = SWherePath */, _wctrlFlags uint16, _nLoop uint16, _pLast uintptr /* *TWhereLoop = SWhereLoop */, _pRevMask uintptr /* *TBitmask = Tu64 = Tsqlite_uint64 = uint64 */) (r int8) {
	var (
		_revSet            uint8
		_rev               uint8
		_revIdx            uint8
		_isOrderDistinct   uint8
		_distinctColumns   uint8
		_isMatch           uint8
		_eqOpMask          uint16
		_nKeyCol           uint16
		_nColumn           uint16
		_nOrderBy          uint16
		_iLoop             int32
		_i                 int32
		_j                 int32
		_iCur              int32
		_iColumn           int32
		_pLoop             uintptr // *TWhereLoop = SWhereLoop
		_pTerm             uintptr // *TWhereTerm = SWhereTerm
		_pOBExpr           uintptr // *TExpr = SExpr
		_pColl             uintptr // *TCollSeq = SCollSeq
		_pIndex            uintptr // *TIndex = SIndex
		_db                uintptr // *Tsqlite3 = Ssqlite3
		_obSat             uint64
		_obDone            uint64
		_orderDistinctMask uint64
		_ready             uint64
		_bOnce             uint8
		_eOp               uint16
		_pX                uintptr // *TExpr = SExpr
		_pIdxExpr          uintptr // *TExpr = SExpr
		_p                 uintptr // *TExpr = SExpr
		_mTerm             uint64
		_m                 uint64
	)
	_pLoop = 0
	_db = *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pWInfo))))
	_obSat = uint64(0)

	if _nLoop == 0 || (int32(*(*uint16)(unsafe.Pointer(_db + 92)))&int32(0x40)) == int32(0) {
		goto _1
	}

	return int8(0)

_1:
	_nOrderBy = uint16(*(*int32)(unsafe.Pointer(_pOrderBy)))
	if int32(_nOrderBy) <= int32(63) {
		goto _2
	}

	return int8(0)

_2:
	_isOrderDistinct = uint8(1)
	_obDone = (uint64(1) << (uint(_nOrderBy) % 64)) - uint64(1)
	_orderDistinctMask = uint64(0)
	_ready = uint64(0)
	_eqOpMask = uint16(386)
	if (int32(_wctrlFlags) & int32(0x800)) == 0 {
		goto _3
	}

	_eqOpMask = uint16(int32(_eqOpMask) | int32(0x1))
_3:
	_iLoop = int32(0)
_4:
	if _isOrderDistinct == 0 || _obSat >= _obDone || _iLoop > int32(_nLoop) {
		goto _6
	}

	if _iLoop <= int32(0) {
		goto _7
	}

	_ready = uint64(_ready | (*(*uint64)(unsafe.Pointer(_pLoop + 8))))
_7:
	if _iLoop >= int32(_nLoop) {
		goto _8
	}

	_pLoop = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pPath + 24))) + 8*uintptr(_iLoop)))
	if (int32(_wctrlFlags) & int32(0x800)) == 0 {
		goto _10
	}

	goto _5

_10:
	goto _9

_8:
	_pLoop = _pLast
_9:
	if ((*(*uint32)(unsafe.Pointer(_pLoop + 40))) & uint32(0x400)) == 0 {
		goto _11
	}

	if (*(*int8)(unsafe.Pointer(_pLoop + 24 + 5))) == 0 {
		goto _13
	}

	_obSat = _obDone
_13:
	goto _6

	goto _12

_11:
	*(*uint16)(unsafe.Pointer(_pLoop + 24 + 6)) = uint16(0)
_12:
	_iCur = *(*int32)(unsafe.Pointer((((*(*uintptr)(unsafe.Pointer(_pWInfo + 8))) + 8) + 112*uintptr(*(*uint8)(unsafe.Pointer(_pLoop + 16)))) + 64))
	_i = int32(0)
_14:
	if _i >= int32(_nOrderBy) {
		goto _16
	}

	if ((uint64(1) << (uint(_i) % 64)) & _obSat) == 0 {
		goto _17
	}

	goto _15

_17:
	_pOBExpr = _1510sqlite3ExprSkipCollate(tls, *(*uintptr)(unsafe.Pointer((_pOrderBy + 8) + 32*uintptr(_i))))
	if int32(*(*uint8)(unsafe.Pointer(_pOBExpr))) == int32(145) {
		goto _18
	}

	goto _15

_18:
	if (*(*int32)(unsafe.Pointer(_pOBExpr + 44))) == _iCur {
		goto _19
	}

	goto _15

_19:
	_pTerm = _1896sqlite3WhereFindTerm(tls, _pWInfo+104, _iCur, int32(*(*int16)(unsafe.Pointer(_pOBExpr + 48))), ^_ready, uint32(_eqOpMask), null)
	if _pTerm != 0 {
		goto _20
	}

	goto _15

_20:
	if int32(*(*uint16)(unsafe.Pointer(_pTerm + 20))) != int32(0x1) {
		goto _21
	}

	_j = int32(0)
_22:
	if _j >= int32(*(*uint16)(unsafe.Pointer(_pLoop + 44))) || _pTerm == (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pLoop + 56))) + 8*uintptr(_j)))) {
		goto _24
	}

	_j++
	goto _22

_24:
	if _j < int32(*(*uint16)(unsafe.Pointer(_pLoop + 44))) {
		goto _25
	}

	goto _15

_25:
_21:
	if (int32(*(*uint16)(unsafe.Pointer(_pTerm + 20)))&int32(130)) == int32(0) || int32(*(*int16)(unsafe.Pointer(_pOBExpr + 48))) < int32(0) {
		goto _26
	}

	if _2001sqlite3ExprCollSeqMatch(tls, *(*uintptr)(unsafe.Pointer(_pWInfo)), *(*uintptr)(unsafe.Pointer((_pOrderBy + 8) + 32*uintptr(_i))), *(*uintptr)(unsafe.Pointer(_pTerm))) != int32(0) {
		goto _27
	}

	goto _15

_27:
_26:
	_obSat = uint64(_obSat | (uint64(1) << (uint(_i) % 64)))

_15:
	_i++
	goto _14

_16:
	if ((*(*uint32)(unsafe.Pointer(_pLoop + 40))) & uint32(0x1000)) != uint32(0) {
		goto _28
	}

	if ((*(*uint32)(unsafe.Pointer(_pLoop + 40))) & uint32(0x100)) == 0 {
		goto _29
	}

	_pIndex = null
	_nKeyCol = uint16(0)
	_nColumn = uint16(1)
	goto _30

_29:
	if set4(&_pIndex, *(*uintptr)(unsafe.Pointer(_pLoop + 24 + 8))) != 0 && (uint32((*(*uint8)(unsafe.Pointer(_pIndex + 99)))>>2)<<31>>31) == 0 {
		goto _31
	}

	return int8(0)

	goto _32

_31:
	_nKeyCol = *(*uint16)(unsafe.Pointer(_pIndex + 94))
	_nColumn = *(*uint16)(unsafe.Pointer(_pIndex + 96))

	_isOrderDistinct = uint8(bool2int(int32(*(*uint8)(unsafe.Pointer(_pIndex + 98))) != int32(0)))
_32:
_30:
	_rev = set23(&_revSet, uint8(0))
	_distinctColumns = uint8(0)
	_j = int32(0)
_33:
	if _j >= int32(_nColumn) {
		goto _35
	}

	_bOnce = uint8(1)

	if _j >= int32(*(*uint16)(unsafe.Pointer(_pLoop + 24))) || _j < int32(*(*uint16)(unsafe.Pointer(_pLoop + 46))) {
		goto _36
	}

	_eOp = *(*uint16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pLoop + 56))) + 8*uintptr(_j)))) + 20))
	if (int32(_eOp) & int32(_eqOpMask)) == int32(0) {
		goto _37
	}

	if (int32(_eOp) & int32(0x100)) == 0 {
		goto _39
	}

	_isOrderDistinct = uint8(0)
_39:
	goto _34

	goto _38

_37:
	if int32(_eOp)&int32(0x1) == 0 {
		goto _40
	}

	_pX = *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pLoop + 56))) + 8*uintptr(_j)))))
	_i = _j + int32(1)
_41:
	if _i >= int32(*(*uint16)(unsafe.Pointer(_pLoop + 24))) {
		goto _43
	}

	if (*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pLoop + 56))) + 8*uintptr(_i)))))) != _pX {
		goto _44
	}

	_bOnce = uint8(0)
	goto _43

_44:
	_i++
	goto _41

_43:
_40:
_38:
_36:
	if _pIndex == 0 {
		goto _45
	}

	_iColumn = int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIndex + 8))) + 2*uintptr(_j))))
	_revIdx = *(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIndex + 56))) + uintptr(_j)))
	if _iColumn != int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIndex + 24))) + 68))) {
		goto _47
	}

	_iColumn = int32(-1)
_47:
	goto _46

_45:
	_iColumn = int32(-1)
	_revIdx = uint8(0)
_46:
	if _isOrderDistinct == 0 || _iColumn < int32(0) || _j < int32(*(*uint16)(unsafe.Pointer(_pLoop + 24))) || int32(*(*uint8)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIndex + 24))) + 8))) + 32*uintptr(_iColumn)) + 24))) != int32(0) {
		goto _48
	}

	_isOrderDistinct = uint8(0)
_48:
	_isMatch = uint8(0)
	_i = int32(0)
_49:
	if _bOnce == 0 || _i >= int32(_nOrderBy) {
		goto _51
	}

	if ((uint64(1) << (uint(_i) % 64)) & _obSat) == 0 {
		goto _52
	}

	goto _50

_52:
	_pOBExpr = _1510sqlite3ExprSkipCollate(tls, *(*uintptr)(unsafe.Pointer((_pOrderBy + 8) + 32*uintptr(_i))))
	if (int32(_wctrlFlags) & int32(192)) != int32(0) {
		goto _53
	}

	_bOnce = uint8(0)
_53:
	if _iColumn < int32(-1) {
		goto _54
	}

	if int32(*(*uint8)(unsafe.Pointer(_pOBExpr))) == int32(145) {
		goto _56
	}

	goto _50

_56:
	if (*(*int32)(unsafe.Pointer(_pOBExpr + 44))) == _iCur {
		goto _57
	}

	goto _50

_57:
	if int32(*(*int16)(unsafe.Pointer(_pOBExpr + 48))) == _iColumn {
		goto _58
	}

	goto _50

_58:
	goto _55

_54:
	_pIdxExpr = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pIndex + 80))) + 8) + 32*uintptr(_j)))
	if _2002sqlite3ExprCompareSkip(tls, _pOBExpr, _pIdxExpr, _iCur) == 0 {
		goto _59
	}

	goto _50

_59:
_55:
	if _iColumn == int32(-1) {
		goto _60
	}

	_pColl = _1771sqlite3ExprNNCollSeq(tls, *(*uintptr)(unsafe.Pointer(_pWInfo)), *(*uintptr)(unsafe.Pointer((_pOrderBy + 8) + 32*uintptr(_i))))
	if _110sqlite3StrICmp(tls, *(*uintptr)(unsafe.Pointer(_pColl)), *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIndex + 64))) + 8*uintptr(_j)))) == int32(0) {
		goto _61
	}

	goto _50

_61:
_60:
	*(*uint16)(unsafe.Pointer(_pLoop + 24 + 6)) = uint16(_j + int32(1))
	_isMatch = uint8(1)
	goto _51

_50:
	_i++
	goto _49

_51:
	if _isMatch == 0 || (int32(_wctrlFlags)&int32(0x40)) != int32(0) {
		goto _62
	}

	if _revSet == 0 {
		goto _63
	}

	if (int32(_rev) ^ int32(_revIdx)) == int32(*(*uint8)(unsafe.Pointer(((_pOrderBy + 8) + 32*uintptr(_i)) + 24))) {
		goto _65
	}

	_isMatch = uint8(0)
_65:
	goto _64

_63:
	_rev = uint8(int32(_revIdx) ^ int32(*(*uint8)(unsafe.Pointer(((_pOrderBy + 8) + 32*uintptr(_i)) + 24))))
	if _rev == 0 {
		goto _66
	}

	{
		p := &(*(*uint64)(unsafe.Pointer(_pRevMask)))
		*p = uint64(uint64(*p) | (uint64(1) << (uint(_iLoop) % 64)))
	}
_66:
	_revSet = uint8(1)
_64:
_62:
	if _isMatch == 0 {
		goto _67
	}

	if _iColumn != int32(-1) {
		goto _69
	}

	_distinctColumns = uint8(1)
_69:
	_obSat = uint64(_obSat | (uint64(1) << (uint(_i) % 64)))
	goto _68

_67:
	if _j != int32(0) && _j >= int32(_nKeyCol) {
		goto _70
	}

	_isOrderDistinct = uint8(0)
_70:
	goto _35

_68:
_34:
	_j++
	goto _33

_35:
	if _distinctColumns == 0 {
		goto _71
	}

	_isOrderDistinct = uint8(1)
_71:
_28:
	if _isOrderDistinct == 0 {
		goto _72
	}

	_orderDistinctMask = uint64(_orderDistinctMask | (*(*uint64)(unsafe.Pointer(_pLoop + 8))))
	_i = int32(0)
_73:
	if _i >= int32(_nOrderBy) {
		goto _75
	}

	if ((uint64(1) << (uint(_i) % 64)) & _obSat) == 0 {
		goto _76
	}

	goto _74

_76:
	_p = *(*uintptr)(unsafe.Pointer((_pOrderBy + 8) + 32*uintptr(_i)))
	_mTerm = _1907sqlite3WhereExprUsage(tls, _pWInfo+656, _p)
	if _mTerm != uint64(0) || _1799sqlite3ExprIsConstant(tls, _p) != 0 {
		goto _77
	}

	goto _74

_77:
	if (_mTerm & (^_orderDistinctMask)) != uint64(0) {
		goto _78
	}

	_obSat = uint64(_obSat | (uint64(1) << (uint(_i) % 64)))
_78:
_74:
	_i++
	goto _73

_75:
_72:
_5:
	_iLoop++
	goto _4

_6:
	if _obSat != _obDone {
		goto _79
	}

	return int8(_nOrderBy)

_79:
	if _isOrderDistinct != 0 {
		goto _80
	}

	_i = int32(_nOrderBy) - int32(1)
_81:
	if _i <= int32(0) {
		goto _83
	}

	_m = (uint64(1) << (uint(_i) % 64)) - uint64(1)
	if (_obSat & _m) != _m {
		goto _84
	}

	return int8(_i)

_84:
	_i--
	goto _81

_83:
	return int8(0)

_80:
	return int8(-1)
}

// _1906whereSortingCost is defined at sqlite3.c:135621:15
func _1906whereSortingCost(tls crt.TLS, _pWInfo uintptr /* *TWhereInfo = SWhereInfo */, _nRow int16, _nOrderBy int32, _nSorted int32) (r int16) {
	var (
		_rScale    int16
		_rSortCost int16
	)

	_rScale = int16(int32(_703sqlite3LogEst(tls, uint64(((_nOrderBy-_nSorted)*int32(100))/_nOrderBy))) - int32(66))
	_rSortCost = int16((int32(_nRow) + int32(_rScale)) + int32(16))
	if (int32(*(*uint16)(unsafe.Pointer(_pWInfo + 64)))&int32(0x4000)) == int32(0) || int32(*(*int16)(unsafe.Pointer(_pWInfo + 40))) >= int32(_nRow) {
		goto _1
	}

	_nRow = *(*int16)(unsafe.Pointer(_pWInfo + 40))
_1:
	_rSortCost = int16(int32(_rSortCost) + int32(_1992estLog(tls, _nRow)))
	return _rSortCost
}

// _1907sqlite3WhereExprUsage is defined at sqlite3.c:131717:24
func _1907sqlite3WhereExprUsage(tls crt.TLS, _pMaskSet uintptr /* *TWhereMaskSet = SWhereMaskSet */, _p uintptr /* *TExpr = SExpr */) (r uint64) {
	var _mask uint64

	if _p != 0 {
		goto _1
	}

	return uint64(0)

_1:
	if int32(*(*uint8)(unsafe.Pointer(_p))) != int32(145) {
		goto _2
	}

	return _1900sqlite3WhereGetMask(tls, _pMaskSet, *(*int32)(unsafe.Pointer(_p + 44)))

_2:
	_mask = func() uint64 {
		if int32(*(*uint8)(unsafe.Pointer(_p))) == int32(153) {
			return _1900sqlite3WhereGetMask(tls, _pMaskSet, *(*int32)(unsafe.Pointer(_p + 44)))
		}
		return uint64(0)
	}()

	if (*(*uintptr)(unsafe.Pointer(_p + 16))) == 0 {
		goto _3
	}

	_mask = uint64(_mask | _1907sqlite3WhereExprUsage(tls, _pMaskSet, *(*uintptr)(unsafe.Pointer(_p + 16))))
_3:
	if (*(*uintptr)(unsafe.Pointer(_p + 24))) == 0 {
		goto _4
	}

	_mask = uint64(_mask | _1907sqlite3WhereExprUsage(tls, _pMaskSet, *(*uintptr)(unsafe.Pointer(_p + 24))))

	goto _5

_4:
	if ((*(*uint32)(unsafe.Pointer(_p + 4))) & uint32(0x800)) == uint32(0) {
		goto _6
	}

	if ((*(*uint32)(unsafe.Pointer(_p + 4))) & uint32(0x20)) == uint32(0) {
		goto _8
	}

	*(*int32)(unsafe.Pointer(_pMaskSet)) = int32(1)
_8:
	_mask = uint64(_mask | _1977exprSelectUsage(tls, _pMaskSet, *(*uintptr)(unsafe.Pointer(_p + 32))))
	goto _7

_6:
	if (*(*uintptr)(unsafe.Pointer(_p + 32))) == 0 {
		goto _9
	}

	_mask = uint64(_mask | _1783sqlite3WhereExprListUsage(tls, _pMaskSet, *(*uintptr)(unsafe.Pointer(_p + 32))))
_9:
_7:
_5:
	return _mask
}

// _1908termCanDriveIndex is defined at sqlite3.c:132411:12
func _1908termCanDriveIndex(tls crt.TLS, _pTerm uintptr /* *TWhereTerm = SWhereTerm */, _pSrc uintptr /* *SSrcList_item */, _notReady uint64) (r int32) {
	var _aff int8

	if (*(*int32)(unsafe.Pointer(_pTerm + 28))) == (*(*int32)(unsafe.Pointer(_pSrc + 64))) {
		goto _1
	}

	return int32(0)

_1:
	if (int32(*(*uint16)(unsafe.Pointer(_pTerm + 20))) & int32(130)) != int32(0) {
		goto _2
	}

	return int32(0)

_2:
	if int32(*(*uint8)(unsafe.Pointer(_pSrc + 60)))&int32(0x8) == 0 || ((*(*uint32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pTerm)) + 4)))&uint32(0x1)) != uint32(0) || int32(*(*uint16)(unsafe.Pointer(_pTerm + 20)))&int32(0x80) == 0 {
		goto _3
	}

	return int32(0)

_3:
	if ((*(*uint64)(unsafe.Pointer(_pTerm + 48))) & _notReady) == uint64(0) {
		goto _4
	}

	return int32(0)

_4:
	if (*(*int32)(unsafe.Pointer(_pTerm + 40))) >= int32(0) {
		goto _5
	}

	return int32(0)

_5:
	_aff = *(*int8)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pSrc + 32))) + 8))) + 32*uintptr(*(*int32)(unsafe.Pointer(_pTerm + 40)))) + 25))
	if _2003sqlite3IndexAffinityOk(tls, *(*uintptr)(unsafe.Pointer(_pTerm)), _aff) != 0 {
		goto _6
	}

	return int32(0)

_6:
	return int32(1)
}

// _1909whereLoopResize is defined at sqlite3.c:133630:12
func _1909whereLoopResize(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _p uintptr /* *TWhereLoop = SWhereLoop */, _n int32) (r int32) {
	var _paNew uintptr // **TWhereTerm = SWhereTerm

	if int32(*(*uint16)(unsafe.Pointer(_p + 48))) < _n {
		goto _1
	}

	return int32(0)

_1:
	_n = (_n + int32(7)) & int32(-8)
	_paNew = _373sqlite3DbMallocRawNN(tls, _db, uint64(uint64(8)*uint64(_n)))
	if _paNew != 0 {
		goto _2
	}

	return int32(7)

_2:
	crt.Xmemcpy(tls, _paNew, *(*uintptr)(unsafe.Pointer(_p + 56)), uint64(8)*uint64(*(*uint16)(unsafe.Pointer(_p + 48))))
	if (*(*uintptr)(unsafe.Pointer(_p + 56))) == (_p + 72) {
		goto _3
	}

	_376sqlite3DbFreeNN(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 56)))
_3:
	*(*uintptr)(unsafe.Pointer(_p + 56)) = _paNew
	*(*uint16)(unsafe.Pointer(_p + 48)) = uint16(_n)
	return int32(0)
}

// _1910sqlite3BinaryCompareCollSeq is defined at sqlite3.c:92112:24
func _1910sqlite3BinaryCompareCollSeq(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pLeft uintptr /* *TExpr = SExpr */, _pRight uintptr /* *TExpr = SExpr */) (r uintptr /* *TCollSeq = SCollSeq */) {
	var _pColl uintptr // *TCollSeq = SCollSeq

	if ((*(*uint32)(unsafe.Pointer(_pLeft + 4))) & uint32(0x100)) == 0 {
		goto _1
	}

	_pColl = _1789sqlite3ExprCollSeq(tls, _pParse, _pLeft)
	goto _2

_1:
	if _pRight == 0 || ((*(*uint32)(unsafe.Pointer(_pRight + 4)))&uint32(0x100)) == uint32(0) {
		goto _3
	}

	_pColl = _1789sqlite3ExprCollSeq(tls, _pParse, _pRight)
	goto _4

_3:
	_pColl = _1789sqlite3ExprCollSeq(tls, _pParse, _pLeft)
	if _pColl != 0 {
		goto _5
	}

	_pColl = _1789sqlite3ExprCollSeq(tls, _pParse, _pRight)
_5:
_4:
_2:
	return _pColl
}

// _1911explainIndexRange is defined at sqlite3.c:128208:13
func _1911explainIndexRange(tls crt.TLS, _pStr uintptr /* *TStrAccum = SStrAccum */, _pLoop uintptr /* *TWhereLoop = SWhereLoop */) {
	var (
		_pIndex uintptr // *TIndex = SIndex
		_nEq    uint16
		_nSkip  uint16
		_i      int32
		_j      int32
		_z      uintptr // *int8
	)
	_pIndex = *(*uintptr)(unsafe.Pointer(_pLoop + 24 + 8))
	_nEq = *(*uint16)(unsafe.Pointer(_pLoop + 24))
	_nSkip = *(*uint16)(unsafe.Pointer(_pLoop + 46))
	if int32(_nEq) != int32(0) || ((*(*uint32)(unsafe.Pointer(_pLoop + 40)))&uint32(48)) != uint32(0) {
		goto _1
	}

	return

_1:
	_301sqlite3StrAccumAppend(tls, _pStr, ts+32944 /* " (" */, int32(2))
	_i = int32(0)
_2:
	if _i >= int32(_nEq) {
		goto _4
	}

	_z = _2004explainIndexColumnName(tls, _pIndex, _i)
	if _i == 0 {
		goto _5
	}

	_301sqlite3StrAccumAppend(tls, _pStr, ts+5774 /* " AND " */, int32(5))
_5:
	_807sqlite3XPrintf(tls, _pStr, func() uintptr {
		if _i >= int32(_nSkip) {
			return ts + 32947 /* "%s=?" */
		}
		return ts + 32952 /* "ANY(%s)" */
	}(), _z)
	_i++
	goto _2

_4:
	_j = _i
	if ((*(*uint32)(unsafe.Pointer(_pLoop + 40))) & uint32(0x20)) == 0 {
		goto _6
	}

	_2005explainAppendTerm(tls, _pStr, _pIndex, int32(*(*uint16)(unsafe.Pointer(_pLoop + 24 + 2))), _j, _i, ts+31692 /* ">" */)
	_i = int32(1)
_6:
	if ((*(*uint32)(unsafe.Pointer(_pLoop + 40))) & uint32(0x10)) == 0 {
		goto _7
	}

	_2005explainAppendTerm(tls, _pStr, _pIndex, int32(*(*uint16)(unsafe.Pointer(_pLoop + 24 + 4))), _j, _i, ts+31694 /* "<" */)
_7:
	_301sqlite3StrAccumAppend(tls, _pStr, ts+8826 /* ")" */, int32(1))
}

// _1912aStartOp [8]uint8, escapes: true, sqlite3.c:129554:21
var _1912aStartOp = ds + 17700

// _1913aEndOp [4]uint8, escapes: true, sqlite3.c:129564:21
var _1913aEndOp = ds + 17708

// _1914aStep [2]uint8, escapes: true, sqlite3.c:130124:21
var _1914aStep = ds + 17712

// _1915aStart [2]uint8, escapes: true, sqlite3.c:130125:21
var _1915aStart = ds + 17714

// _1916codeEqualityTerm is defined at sqlite3.c:128515:12
func _1916codeEqualityTerm(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pTerm uintptr /* *TWhereTerm = SWhereTerm */, _pLevel uintptr /* *TWhereLevel = SWhereLevel */, _iEq int32, _bRev int32, _iTarget int32) (r int32) {
	var (
		_pX              uintptr // *TExpr = SExpr
		_v               uintptr // *TVdbe = SVdbe
		_iReg            int32
		_eType           int32
		_iTab            int32
		_pIn             uintptr // *SInLoop
		_pLoop           uintptr // *TWhereLoop = SWhereLoop
		_i               int32
		_nEq             int32
		_aiMap           uintptr // *int32
		_pSelect         uintptr // *TSelect = SSelect
		_db              uintptr // *Tsqlite3 = Ssqlite3
		_savedDbOptFlags uint16
		_pOrigRhs        uintptr // *TExprList = SExprList
		_pOrigLhs        uintptr // *TExprList = SExprList
		_pRhs            uintptr // *TExprList = SExprList
		_pLhs            uintptr // *TExprList = SExprList
		_iField          int32
		_pNewRhs         uintptr // *TExpr = SExpr
		_pNewLhs         uintptr // *TExpr = SExpr
		_pLeft           uintptr // *TExpr = SExpr
		_pOrderBy        uintptr // *TExprList = SExprList
		_iMap            int32
		_iOut            int32
		_iCol            int32
	)
	_pX = *(*uintptr)(unsafe.Pointer(_pTerm))
	_v = *(*uintptr)(unsafe.Pointer(_pParse + 16))

	if int32(*(*uint8)(unsafe.Pointer(_pX))) != int32(53) && int32(*(*uint8)(unsafe.Pointer(_pX))) != int32(45) {
		goto _1
	}

	_iReg = _1728sqlite3ExprCodeTarget(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pX + 24)), _iTarget)
	goto _2

_1:
	if int32(*(*uint8)(unsafe.Pointer(_pX))) != int32(50) {
		goto _3
	}

	_iReg = _iTarget
	_1240sqlite3VdbeAddOp2(tls, _v, int32(70), int32(0), _iReg)
	goto _4

_3:
	_eType = int32(5)
	_pLoop = *(*uintptr)(unsafe.Pointer(_pLevel + 72))
	_nEq = int32(0)
	_aiMap = 0
	if ((*(*uint32)(unsafe.Pointer(_pLoop + 40)))&uint32(0x400)) != uint32(0) || (*(*uintptr)(unsafe.Pointer(_pLoop + 24 + 8))) == 0 || (*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pLoop + 24 + 8))) + 56))) + uintptr(_iEq)))) == 0 {
		goto _5
	}

	_bRev = bool2int(_bRev == 0)
_5:
	_iReg = _iTarget
	_i = int32(0)
_6:
	if _i >= _iEq {
		goto _8
	}

	if (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pLoop + 56))) + 8*uintptr(_i)))) == 0 || (*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pLoop + 56))) + 8*uintptr(_i)))))) != _pX {
		goto _9
	}

	_1918disableTerm(tls, _pLevel, _pTerm)
	return _iTarget

_9:
	_i++
	goto _6

_8:
	_i = _iEq
_10:
	if _i >= int32(*(*uint16)(unsafe.Pointer(_pLoop + 44))) {
		goto _12
	}

	if *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pLoop + 56))) + 8*uintptr(_i))) == 0 || (*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pLoop + 56))) + 8*uintptr(_i)))))) != _pX {
		goto _13
	}

	_nEq++
_13:
	_i++
	goto _10

_12:
	if ((*(*uint32)(unsafe.Pointer(_pX + 4)))&uint32(0x800)) != uint32(0) && (*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pX + 32))))))) != int32(1) {
		goto _14
	}

	_eType = _1937sqlite3FindInIndex(tls, _pParse, _pX, uint32(0x4), null, null)
	goto _15

_14:
	_pSelect = *(*uintptr)(unsafe.Pointer(_pX + 32))
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_savedDbOptFlags = *(*uint16)(unsafe.Pointer(_db + 92))
	_pOrigRhs = *(*uintptr)(unsafe.Pointer(_pSelect))
	_pOrigLhs = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pX + 16))) + 32))
	_pRhs = 0
	_pLhs = 0
	_i = _iEq
_16:
	if _i >= int32(*(*uint16)(unsafe.Pointer(_pLoop + 44))) {
		goto _18
	}

	if (*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pLoop + 56))) + 8*uintptr(_i)))))) != _pX {
		goto _19
	}

	_iField = (*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pLoop + 56))) + 8*uintptr(_i)))) + 32))) - int32(1)
	_pNewRhs = _1507sqlite3ExprDup(tls, _db, *(*uintptr)(unsafe.Pointer((_pOrigRhs + 8) + 32*uintptr(_iField))), int32(0))
	_pNewLhs = _1507sqlite3ExprDup(tls, _db, *(*uintptr)(unsafe.Pointer((_pOrigLhs + 8) + 32*uintptr(_iField))), int32(0))
	_pRhs = _1331sqlite3ExprListAppend(tls, _pParse, _pRhs, _pNewRhs)
	_pLhs = _1331sqlite3ExprListAppend(tls, _pParse, _pLhs, _pNewLhs)
_19:
	_i++
	goto _16

_18:
	if (*(*uint8)(unsafe.Pointer(_db + 97))) != 0 {
		goto _20
	}

	_pLeft = *(*uintptr)(unsafe.Pointer(_pX + 16))
	if (*(*uintptr)(unsafe.Pointer(_pSelect + 64))) == 0 {
		goto _21
	}

	_pOrderBy = *(*uintptr)(unsafe.Pointer(_pSelect + 64))
	_i = int32(0)
_22:
	if _i >= (*(*int32)(unsafe.Pointer(_pOrderBy))) {
		goto _24
	}

	*(*uint16)(unsafe.Pointer(((_pOrderBy + 8) + 32*uintptr(_i)) + 28)) = uint16(0)
	_i++
	goto _22

_24:
_21:
	if (*(*int32)(unsafe.Pointer(_pLhs))) != int32(1) {
		goto _25
	}

	*(*uintptr)(unsafe.Pointer(_pX + 16)) = *(*uintptr)(unsafe.Pointer(_pLhs + 8))
	goto _26

_25:
	*(*uintptr)(unsafe.Pointer(_pLeft + 32)) = _pLhs
	_aiMap = _295sqlite3DbMallocZero(tls, *(*uintptr)(unsafe.Pointer(_pParse)), uint64(uint64(4)*uint64(_nEq)))
_26:
	*(*uintptr)(unsafe.Pointer(_pSelect)) = _pRhs
	{
		p := &(*(*uint16)(unsafe.Pointer(_db + 92)))
		*p = uint16(int32(*p) | int32(0x1))
	}
	_eType = _1937sqlite3FindInIndex(tls, _pParse, _pX, uint32(0x4), null, _aiMap)
	*(*uint16)(unsafe.Pointer(_db + 92)) = _savedDbOptFlags
	*(*uintptr)(unsafe.Pointer(_pSelect)) = _pOrigRhs
	*(*uintptr)(unsafe.Pointer(_pLeft + 32)) = _pOrigLhs
	*(*uintptr)(unsafe.Pointer(_pX + 16)) = _pLeft
_20:
	_551sqlite3ExprListDelete(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _pLhs)
	_551sqlite3ExprListDelete(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _pRhs)
_15:
	if _eType != int32(4) {
		goto _27
	}

	_bRev = bool2int(_bRev == 0)
_27:
	_iTab = *(*int32)(unsafe.Pointer(_pX + 44))
	_1240sqlite3VdbeAddOp2(tls, _v, func() int32 {
		if _bRev != 0 {
			return int32(33)
		}
		return int32(37)
	}(), _iTab, int32(0))

	{
		p := &(*(*uint32)(unsafe.Pointer(_pLoop + 40)))
		*p = uint32(uint32(*p) | uint32(0x800))
	}
	if (*(*int32)(unsafe.Pointer(_pLevel + 56))) != int32(0) {
		goto _28
	}

	*(*int32)(unsafe.Pointer(_pLevel + 16)) = _1541sqlite3VdbeMakeLabel(tls, _v)
_28:
	_i = *(*int32)(unsafe.Pointer(_pLevel + 56))
	{
		p := &(*(*int32)(unsafe.Pointer(_pLevel + 56)))
		*p = int32(int32(*p) + _nEq)
	}
	*(*uintptr)(unsafe.Pointer(_pLevel + 56 + 8)) = _939sqlite3DbReallocOrFree(tls, *(*uintptr)(unsafe.Pointer(_pParse)), *(*uintptr)(unsafe.Pointer(_pLevel + 56 + 8)), uint64(uint64(12)*uint64(*(*int32)(unsafe.Pointer(_pLevel + 56)))))
	_pIn = *(*uintptr)(unsafe.Pointer(_pLevel + 56 + 8))
	if _pIn == 0 {
		goto _29
	}

	_iMap = int32(0)
	_pIn += 12 * uintptr(_i)
	_i = _iEq
_31:
	if _i >= int32(*(*uint16)(unsafe.Pointer(_pLoop + 44))) {
		goto _33
	}

	if (*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pLoop + 56))) + 8*uintptr(_i)))))) != _pX {
		goto _34
	}

	_iOut = (_iReg + _i) - _iEq
	if _eType != int32(1) {
		goto _35
	}

	*(*int32)(unsafe.Pointer(_pIn + 4)) = _1240sqlite3VdbeAddOp2(tls, _v, int32(123), _iTab, _iOut)
	goto _36

_35:
	_iCol = func() int32 {
		if _aiMap != 0 {
			return *(*int32)(unsafe.Pointer(_aiMap + 4*uintptr(postinc7(&_iMap))))
		}
		return int32(0)
	}()
	*(*int32)(unsafe.Pointer(_pIn + 4)) = _1241sqlite3VdbeAddOp3(tls, _v, int32(96), _iTab, _iCol, _iOut)
_36:
	_1489sqlite3VdbeAddOp1(tls, _v, int32(50), _iOut)
	if _i != _iEq {
		goto _37
	}

	*(*int32)(unsafe.Pointer(_pIn)) = _iTab
	*(*uint8)(unsafe.Pointer(_pIn + 8)) = uint8(func() int32 {
		if _bRev != 0 {
			return int32(4)
		}
		return int32(5)
	}())
	goto _38

_37:
	*(*uint8)(unsafe.Pointer(_pIn + 8)) = uint8(166)
_38:
	_pIn += 12
_34:
	_i++
	goto _31

_33:
	goto _30

_29:
	*(*int32)(unsafe.Pointer(_pLevel + 56)) = int32(0)
_30:
	_181sqlite3DbFree(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _aiMap)
_4:
_2:
	_1918disableTerm(tls, _pLevel, _pTerm)
	return _iReg
}

// _1917codeExprOrVector is defined at sqlite3.c:129139:13
func _1917codeExprOrVector(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _p uintptr /* *TExpr = SExpr */, _iReg int32, _nReg int32) {
	var (
		_v       uintptr // *TVdbe = SVdbe
		_iSelect int32
		_i       int32
		_pList   uintptr // *TExprList = SExprList
	)

	if _p == 0 || _1803sqlite3ExprIsVector(tls, _p) == 0 {
		goto _1
	}

	if (*(*uint32)(unsafe.Pointer(_p + 4)))&uint32(0x800) == 0 {
		goto _3
	}

	_v = *(*uintptr)(unsafe.Pointer(_pParse + 16))
	_iSelect = _1868sqlite3CodeSubselect(tls, _pParse, _p, int32(0), int32(0))
	_1241sqlite3VdbeAddOp3(tls, _v, int32(75), _iSelect, _iReg, _nReg-int32(1))
	goto _4

_3:
	_pList = *(*uintptr)(unsafe.Pointer(_p + 32))

	_i = int32(0)
_5:
	if _i >= _nReg {
		goto _7
	}

	_1478sqlite3ExprCode(tls, _pParse, *(*uintptr)(unsafe.Pointer((_pList + 8) + 32*uintptr(_i))), _iReg+_i)
	_i++
	goto _5

_7:
_4:
	goto _2

_1:
	_1478sqlite3ExprCode(tls, _pParse, _p, _iReg)
_2:
}

// _1918disableTerm is defined at sqlite3.c:128416:13
func _1918disableTerm(tls crt.TLS, _pLevel uintptr /* *TWhereLevel = SWhereLevel */, _pTerm uintptr /* *TWhereTerm = SWhereTerm */) {
	var _nLoop int32

	_nLoop = int32(0)
_1:
	if _pTerm == 0 || (int32(*(*uint16)(unsafe.Pointer(_pTerm + 18)))&int32(0x4)) != int32(0) || (*(*int32)(unsafe.Pointer(_pLevel))) != int32(0) && ((*(*uint32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pTerm)) + 4)))&uint32(0x1)) == uint32(0) || ((*(*uint64)(unsafe.Pointer(_pLevel + 80)))&(*(*uint64)(unsafe.Pointer(_pTerm + 56)))) != uint64(0) {
		goto _2
	}

	if _nLoop == 0 || (int32(*(*uint16)(unsafe.Pointer(_pTerm + 18)))&int32(0x400)) == int32(0) {
		goto _3
	}

	{
		p := &(*(*uint16)(unsafe.Pointer(_pTerm + 18)))
		*p = uint16(int32(*p) | int32(0x200))
	}
	goto _4

_3:
	{
		p := &(*(*uint16)(unsafe.Pointer(_pTerm + 18)))
		*p = uint16(int32(*p) | int32(0x4))
	}
_4:
	if (*(*int32)(unsafe.Pointer(_pTerm + 24))) >= int32(0) {
		goto _5
	}

	goto _2

_5:
	_pTerm = (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTerm + 8))) + 32))) + 64*uintptr(*(*int32)(unsafe.Pointer(_pTerm + 24)))
	(*(*uint8)(unsafe.Pointer(_pTerm + 22)))--
	if int32(*(*uint8)(unsafe.Pointer(_pTerm + 22))) == int32(0) {
		goto _6
	}

	goto _2

_6:
	_nLoop++
	goto _1

_2:
}

// _1919codeAllEqualityTerms is defined at sqlite3.c:128725:12
func _1919codeAllEqualityTerms(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pLevel uintptr /* *TWhereLevel = SWhereLevel */, _bRev int32, _nExtraReg int32, _pzAff uintptr /* **int8 */) (r int32) {
	var (
		_nEq     uint16
		_nSkip   uint16
		_v       uintptr // *TVdbe = SVdbe
		_pIdx    uintptr // *TIndex = SIndex
		_pTerm   uintptr // *TWhereTerm = SWhereTerm
		_pLoop   uintptr // *TWhereLoop = SWhereLoop
		_j       int32
		_regBase int32
		_nReg    int32
		_zAff    uintptr // *int8
		_iIdxCur int32
		_r1      int32
		_pRight  uintptr // *TExpr = SExpr
	)
	_v = *(*uintptr)(unsafe.Pointer(_pParse + 16))
	_pLoop = *(*uintptr)(unsafe.Pointer(_pLevel + 72))

	_nEq = *(*uint16)(unsafe.Pointer(_pLoop + 24))
	_nSkip = *(*uint16)(unsafe.Pointer(_pLoop + 46))
	_pIdx = *(*uintptr)(unsafe.Pointer(_pLoop + 24 + 8))

	_regBase = (*(*int32)(unsafe.Pointer(_pParse + 56))) + int32(1)
	_nReg = int32(*(*uint16)(unsafe.Pointer(_pLoop + 24))) + _nExtraReg
	{
		p := &(*(*int32)(unsafe.Pointer(_pParse + 56)))
		*p = int32(int32(*p) + _nReg)
	}
	_zAff = _183sqlite3DbStrDup(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _1593sqlite3IndexAffinityStr(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _pIdx))

	if _nSkip == 0 {
		goto _1
	}

	_iIdxCur = *(*int32)(unsafe.Pointer(_pLevel + 8))
	_1489sqlite3VdbeAddOp1(tls, _v, func() int32 {
		if _bRev != 0 {
			return int32(33)
		}
		return int32(37)
	}(), _iIdxCur)
	_j = _1473sqlite3VdbeAddOp0(tls, _v, int32(13))
	*(*int32)(unsafe.Pointer(_pLevel + 20)) = _1071sqlite3VdbeAddOp4Int(tls, _v, func() int32 {
		if _bRev != 0 {
			return int32(24)
		}
		return int32(27)
	}(), _iIdxCur, int32(0), _regBase, int32(_nSkip))
	_1474sqlite3VdbeJumpHere(tls, _v, _j)
	_j = int32(0)
_2:
	if _j >= int32(_nSkip) {
		goto _4
	}

	_1241sqlite3VdbeAddOp3(tls, _v, int32(96), _iIdxCur, _j, _regBase+_j)
	_j++
	goto _2

_4:
_1:
	_j = int32(_nSkip)
_5:
	if _j >= int32(_nEq) {
		goto _7
	}

	_pTerm = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pLoop + 56))) + 8*uintptr(_j)))

	_r1 = _1916codeEqualityTerm(tls, _pParse, _pTerm, _pLevel, _j, _bRev, _regBase+_j)
	if _r1 == (_regBase + _j) {
		goto _8
	}

	if _nReg != int32(1) {
		goto _9
	}

	_1563sqlite3ReleaseTempReg(tls, _pParse, _regBase)
	_regBase = _r1
	goto _10

_9:
	_1240sqlite3VdbeAddOp2(tls, _v, int32(76), _r1, _regBase+_j)
_10:
_8:
	if (int32(*(*uint16)(unsafe.Pointer(_pTerm + 20))) & int32(0x1)) == 0 {
		goto _11
	}

	if ((*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTerm))) + 4))) & uint32(0x800)) == 0 {
		goto _13
	}

	if _zAff == 0 {
		goto _14
	}

	*(*int8)(unsafe.Pointer(_zAff + uintptr(_j))) = int8('A')
_14:
_13:
	goto _12

_11:
	if (int32(*(*uint16)(unsafe.Pointer(_pTerm + 20))) & int32(0x100)) != int32(0) {
		goto _15
	}

	_pRight = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTerm))) + 24))
	if (int32(*(*uint16)(unsafe.Pointer(_pTerm + 18)))&int32(0x800)) != int32(0) || _1921sqlite3ExprCanBeNull(tls, _pRight) == 0 {
		goto _16
	}

	_1240sqlite3VdbeAddOp2(tls, _v, int32(50), _regBase+_j, *(*int32)(unsafe.Pointer(_pLevel + 12)))
_16:
	if _zAff == 0 {
		goto _17
	}

	if int32(_2006sqlite3CompareAffinity(tls, _pRight, *(*int8)(unsafe.Pointer(_zAff + uintptr(_j))))) != int32('A') {
		goto _18
	}

	*(*int8)(unsafe.Pointer(_zAff + uintptr(_j))) = int8('A')
_18:
	if _2007sqlite3ExprNeedsNoAffinityChange(tls, _pRight, *(*int8)(unsafe.Pointer(_zAff + uintptr(_j)))) == 0 {
		goto _19
	}

	*(*int8)(unsafe.Pointer(_zAff + uintptr(_j))) = int8('A')
_19:
_17:
_15:
_12:
	_j++
	goto _5

_7:
	*(*uintptr)(unsafe.Pointer(_pzAff)) = _zAff
	return _regBase
}

// _1920whereLikeOptimizationStringFixup is defined at sqlite3.c:128845:13
func _1920whereLikeOptimizationStringFixup(tls crt.TLS, _v uintptr /* *TVdbe = SVdbe */, _pLevel uintptr /* *TWhereLevel = SWhereLevel */, _pTerm uintptr /* *TWhereTerm = SWhereTerm */) {
	var _pOp uintptr // *TVdbeOp = SVdbeOp

	if (int32(*(*uint16)(unsafe.Pointer(_pTerm + 18))) & int32(0x100)) == 0 {
		goto _1
	}

	_pOp = _1615sqlite3VdbeGetOp(tls, _v, int32(-1))

	*(*int32)(unsafe.Pointer(_pOp + 12)) = int32((*(*uint32)(unsafe.Pointer(_pLevel + 36))) >> (uint(1) % 32))
	*(*uint16)(unsafe.Pointer(_pOp + 2)) = uint16(uint8((*(*uint32)(unsafe.Pointer(_pLevel + 36))) & uint32(1)))
_1:
}

// _1921sqlite3ExprCanBeNull is defined at sqlite3.c:93807:20
func _1921sqlite3ExprCanBeNull(tls crt.TLS, _p uintptr /* *TExpr = SExpr */) (r int32) {
	var _op uint8

_1:
	if int32(*(*uint8)(unsafe.Pointer(_p))) != int32(149) && int32(*(*uint8)(unsafe.Pointer(_p))) != int32(148) {
		goto _2
	}

	_p = *(*uintptr)(unsafe.Pointer(_p + 16))
	goto _1

_2:
	_op = *(*uint8)(unsafe.Pointer(_p))
	if int32(_op) != int32(150) {
		goto _3
	}

	_op = *(*uint8)(unsafe.Pointer(_p + 54))
_3:
	switch int32(_op) {
	case int32(134):
		goto _5
	case int32(97):
		goto _6
	case int32(132):
		goto _7
	case int32(133):
		goto _8
	case int32(145):
		goto _9
	default:
		goto _10
	}
_5:
_6:
_7:
_8:
	return int32(0)

_9:
	return bool2int(((((*(*uint32)(unsafe.Pointer(_p + 4))) & uint32(0x100000)) != uint32(0)) || ((*(*uintptr)(unsafe.Pointer(_p + 64))) == 0)) || ((int32(*(*int16)(unsafe.Pointer(_p + 48))) >= int32(0)) && (int32(*(*uint8)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 64))) + 8))) + 32*uintptr(*(*int16)(unsafe.Pointer(_p + 48)))) + 24))) == int32(0))))

_10:
	return int32(1)
	return r
}

// _1922updateRangeAffinityStr is defined at sqlite3.c:128484:13
func _1922updateRangeAffinityStr(tls crt.TLS, _pRight uintptr /* *TExpr = SExpr */, _n int32, _zAff uintptr /* *int8 */) {
	var (
		_i int32
		_p uintptr // *TExpr = SExpr
	)
	_i = int32(0)
_1:
	if _i >= _n {
		goto _3
	}

	_p = _1938sqlite3VectorFieldSubexpr(tls, _pRight, _i)
	if int32(_2006sqlite3CompareAffinity(tls, _p, *(*int8)(unsafe.Pointer(_zAff + uintptr(_i))))) != int32('A') && _2007sqlite3ExprNeedsNoAffinityChange(tls, _p, *(*int8)(unsafe.Pointer(_zAff + uintptr(_i)))) == 0 {
		goto _4
	}

	*(*int8)(unsafe.Pointer(_zAff + uintptr(_i))) = int8('A')
_4:
	_i++
	goto _1

_3:
}

// _1923codeApplyAffinity is defined at sqlite3.c:128447:13
func _1923codeApplyAffinity(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _base int32, _n int32, _zAff uintptr /* *int8 */) {
	var _v uintptr // *TVdbe = SVdbe

	_v = *(*uintptr)(unsafe.Pointer(_pParse + 16))
	if _zAff != 0 {
		goto _1
	}

	return

_1:
_2:
	if _n <= int32(0) || int32(*(*int8)(unsafe.Pointer(_zAff))) != int32('A') {
		goto _3
	}

	_n--
	_base++
	_zAff++
	goto _2

_3:
_4:
	if _n <= int32(1) || int32(*(*int8)(unsafe.Pointer(_zAff + uintptr(_n-int32(1))))) != int32('A') {
		goto _5
	}

	_n--
	goto _4

_5:
	if _n <= int32(0) {
		goto _6
	}

	_1475sqlite3VdbeAddOp4(tls, _v, int32(98), _base, _n, int32(0), _zAff, _n)
	_1792sqlite3ExprCacheAffinityChange(tls, _pParse, _base, _n)
_6:
}

// _1924codeDeferredSeek is defined at sqlite3.c:129100:13
func _1924codeDeferredSeek(tls crt.TLS, _pWInfo uintptr /* *TWhereInfo = SWhereInfo */, _pIdx uintptr /* *TIndex = SIndex */, _iCur int32, _iIdxCur int32) {
	var (
		_pParse uintptr // *TParse = SParse
		_v      uintptr // *TVdbe = SVdbe
		_i      int32
		_pTab   uintptr // *TTable = STable
		_ai     uintptr // *int32
	)
	_pParse = *(*uintptr)(unsafe.Pointer(_pWInfo))
	_v = *(*uintptr)(unsafe.Pointer(_pParse + 16))

	_1241sqlite3VdbeAddOp3(tls, _v, int32(129), _iIdxCur, int32(0), _iCur)
	if int32(*(*uint16)(unsafe.Pointer(_pWInfo + 64)))&int32(0x20) == 0 || (*(*uint32)(unsafe.Pointer(func() uintptr {
		if (*(*uintptr)(unsafe.Pointer(_pParse + 160))) != 0 {
			return *(*uintptr)(unsafe.Pointer(_pParse + 160))
		}
		return _pParse
	}() + 120))) != uint32(0) {
		goto _1
	}

	_pTab = *(*uintptr)(unsafe.Pointer(_pIdx + 24))
	_ai = _295sqlite3DbMallocZero(tls, *(*uintptr)(unsafe.Pointer(_pParse)), uint64(uint64(4)*uint64(int32(*(*int16)(unsafe.Pointer(_pTab + 70)))+int32(1))))
	if _ai == 0 {
		goto _2
	}

	*(*int32)(unsafe.Pointer(_ai)) = int32(*(*int16)(unsafe.Pointer(_pTab + 70)))
	_i = int32(0)
_3:
	if _i >= (int32(*(*uint16)(unsafe.Pointer(_pIdx + 96))) - int32(1)) {
		goto _5
	}

	if int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 8))) + 2*uintptr(_i)))) < int32(0) {
		goto _6
	}

	*(*int32)(unsafe.Pointer(_ai + 4*uintptr(int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 8))) + 2*uintptr(_i))))+int32(1)))) = _i + int32(1)
_6:
	_i++
	goto _3

_5:
	_1075sqlite3VdbeChangeP4(tls, _v, int32(-1), _ai, int32(-15))
_2:
_1:
}

// _1925whereIndexExprTrans is defined at sqlite3.c:129198:13
func _1925whereIndexExprTrans(tls crt.TLS, _pIdx uintptr /* *TIndex = SIndex */, _iTabCur int32, _iIdxCur int32, _pWInfo uintptr /* *TWhereInfo = SWhereInfo */) {
	esc := crt.MustMalloc(72)
	var (
		_iIdxCol  int32
		_aColExpr uintptr    // *TExprList = SExprList
		_w        = esc      // *TWalker = SWalker
		_x        = esc + 48 // *TIdxExprTrans = struct{XpIdxExpr...;XiIdxCur int32;XiIdxCol int32;}
	)
	defer crt.Free(esc)
	_aColExpr = *(*uintptr)(unsafe.Pointer(_pIdx + 80))
	if _aColExpr != 0 {
		goto _1
	}

	return

_1:
	crt.Xmemset(tls, _w, int32(0), uint64(48))
	*(*uintptr)(unsafe.Pointer(_w + 8)) = fp56(_2008whereIndexExprTransNode)
	*(*uintptr)(unsafe.Pointer(_w + 40)) = _x
	*(*int32)(unsafe.Pointer(_x + 8)) = _iTabCur
	*(*int32)(unsafe.Pointer(_x + 12)) = _iIdxCur
	_iIdxCol = int32(0)
_2:
	if _iIdxCol >= (*(*int32)(unsafe.Pointer(_aColExpr))) {
		goto _4
	}

	if int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 8))) + 2*uintptr(_iIdxCol)))) == int32(-2) {
		goto _5
	}

	goto _3

_5:
	*(*int32)(unsafe.Pointer(_x + 16)) = _iIdxCol
	*(*uintptr)(unsafe.Pointer(_x)) = *(*uintptr)(unsafe.Pointer((_aColExpr + 8) + 32*uintptr(_iIdxCol)))
	_1795sqlite3WalkExpr(tls, _w, *(*uintptr)(unsafe.Pointer(_pWInfo + 32)))
	_1943sqlite3WalkExprList(tls, _w, *(*uintptr)(unsafe.Pointer(_pWInfo + 16)))
	_1943sqlite3WalkExprList(tls, _w, *(*uintptr)(unsafe.Pointer(_pWInfo + 24)))

_3:
	_iIdxCol++
	goto _2

_4:
}

// _1926sqlite3ExprCoveredByIndex is defined at sqlite3.c:96744:20
func _1926sqlite3ExprCoveredByIndex(tls crt.TLS, _pExpr uintptr /* *TExpr = SExpr */, _iCur int32, _pIdx uintptr /* *TIndex = SIndex */) (r int32) {
	esc := crt.MustMalloc(64)
	var (
		_w    = esc      // *TWalker = SWalker
		_xcov = esc + 48 // *SIdxCover
	)
	defer crt.Free(esc)
	crt.Xmemset(tls, _w, int32(0), uint64(48))
	*(*int32)(unsafe.Pointer(_xcov + 8)) = _iCur
	*(*uintptr)(unsafe.Pointer(_xcov)) = _pIdx
	*(*uintptr)(unsafe.Pointer(_w + 8)) = fp56(_2009exprIdxCover)
	*(*uintptr)(unsafe.Pointer(_w + 40)) = _xcov
	_1795sqlite3WalkExpr(tls, _w, _pExpr)
	return bool2int((*(*uint8)(unsafe.Pointer(_w + 36))) == 0)
}

// _1927sqlite3WhereClauseClear is defined at sqlite3.c:131692:21
func _1927sqlite3WhereClauseClear(tls crt.TLS, _pWC uintptr /* *TWhereClause = SWhereClause */) {
	var (
		_i  int32
		_a  uintptr // *TWhereTerm = SWhereTerm
		_db uintptr // *Tsqlite3 = Ssqlite3
	)
	_db = *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pWC))))))
	_i = (*(*int32)(unsafe.Pointer(_pWC + 20))) - int32(1)
	_a = *(*uintptr)(unsafe.Pointer(_pWC + 32))
_1:
	if _i < int32(0) {
		goto _3
	}

	if (int32(*(*uint16)(unsafe.Pointer(_a + 18))) & int32(0x1)) == 0 {
		goto _4
	}

	_777sqlite3ExprDelete(tls, _db, *(*uintptr)(unsafe.Pointer(_a)))
_4:
	if (int32(*(*uint16)(unsafe.Pointer(_a + 18))) & int32(0x10)) == 0 {
		goto _5
	}

	_2010whereOrInfoDelete(tls, _db, *(*uintptr)(unsafe.Pointer(_a + 40)))
	goto _6

_5:
	if (int32(*(*uint16)(unsafe.Pointer(_a + 18))) & int32(0x20)) == 0 {
		goto _7
	}

	_2011whereAndInfoDelete(tls, _db, *(*uintptr)(unsafe.Pointer(_a + 40)))
_7:
_6:
	_i--
	_a += 64
	goto _1

_3:
	if (*(*uintptr)(unsafe.Pointer(_pWC + 32))) == (_pWC + 40) {
		goto _8
	}

	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer(_pWC + 32)))
_8:
}

// _1928whereLoopDelete is defined at sqlite3.c:133665:13
func _1928whereLoopDelete(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _p uintptr /* *TWhereLoop = SWhereLoop */) {
	_1904whereLoopClear(tls, _db, _p)
	_376sqlite3DbFreeNN(tls, _db, _p)
}

// _1929sqlite3CheckCollSeq is defined at sqlite3.c:105264:20
func _1929sqlite3CheckCollSeq(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pColl uintptr /* *TCollSeq = SCollSeq */) (r int32) {
	var (
		_zName uintptr // *int8
		_db    uintptr // *Tsqlite3 = Ssqlite3
		_p     uintptr // *TCollSeq = SCollSeq
	)
	if _pColl == 0 || (*(*uintptr)(unsafe.Pointer(_pColl + 24))) != 0 {
		goto _1
	}

	_zName = *(*uintptr)(unsafe.Pointer(_pColl))
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_p = _1740sqlite3GetCollSeq(tls, _pParse, *(*uint8)(unsafe.Pointer(_db + 94)), _pColl, _zName)
	if _p != 0 {
		goto _2
	}

	return int32(1)

_2:
_1:
	return int32(0)
}

// _1930sqlite3ExprIsConstantOrGroupBy is defined at sqlite3.c:93712:20
func _1930sqlite3ExprIsConstantOrGroupBy(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _p uintptr /* *TExpr = SExpr */, _pGroupBy uintptr /* *TExprList = SExprList */) (r int32) {
	esc := crt.MustMalloc(48)
	var _w = esc // *TWalker = SWalker
	defer crt.Free(esc)
	*(*uint8)(unsafe.Pointer(_w + 36)) = uint8(1)
	*(*uintptr)(unsafe.Pointer(_w + 8)) = fp56(_2012exprNodeIsConstantOrGroupBy)
	*(*uintptr)(unsafe.Pointer(_w + 16)) = null
	*(*uintptr)(unsafe.Pointer(_w + 40)) = _pGroupBy
	*(*uintptr)(unsafe.Pointer(_w)) = _pParse
	_1795sqlite3WalkExpr(tls, _w, _p)
	return int32(*(*uint8)(unsafe.Pointer(_w + 36)))
}

// _1931walkExpr is defined at sqlite3.c:90142:28
func _1931walkExpr(tls crt.TLS, _pWalker uintptr /* *TWalker = SWalker */, _pExpr uintptr /* *TExpr = SExpr */) (r int32) {
	var _rc int32

_1:
	_rc = fn58(*(*uintptr)(unsafe.Pointer(_pWalker + 8)))(tls, _pWalker, _pExpr)
	if _rc == 0 {
		goto _3
	}

	return _rc & int32(2)

_3:
	if ((*(*uint32)(unsafe.Pointer(_pExpr + 4))) & uint32(8404992)) != uint32(0) {
		goto _4
	}

	if (*(*uintptr)(unsafe.Pointer(_pExpr + 16))) == 0 || _1931walkExpr(tls, _pWalker, *(*uintptr)(unsafe.Pointer(_pExpr + 16))) == 0 {
		goto _5
	}

	return int32(2)

_5:
	if (*(*uintptr)(unsafe.Pointer(_pExpr + 24))) == 0 {
		goto _6
	}

	_pExpr = *(*uintptr)(unsafe.Pointer(_pExpr + 24))
	goto _1

	goto _7

_6:
	if ((*(*uint32)(unsafe.Pointer(_pExpr + 4))) & uint32(0x800)) == uint32(0) {
		goto _8
	}

	if _1881sqlite3WalkSelect(tls, _pWalker, *(*uintptr)(unsafe.Pointer(_pExpr + 32))) == 0 {
		goto _10
	}

	return int32(2)

_10:
	goto _9

_8:
	if (*(*uintptr)(unsafe.Pointer(_pExpr + 32))) == 0 {
		goto _11
	}

	if _1943sqlite3WalkExprList(tls, _pWalker, *(*uintptr)(unsafe.Pointer(_pExpr + 32))) == 0 {
		goto _12
	}

	return int32(2)

_12:
_11:
_9:
_7:
_4:
	goto _2

	goto _1

_2:
	return int32(0)
}

// _1932addAggInfoColumn is defined at sqlite3.c:96823:12
func _1932addAggInfoColumn(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pInfo uintptr /* *TAggInfo = SAggInfo */) (r int32) {
	esc := crt.MustMalloc(4)
	var _i = esc // *int32
	defer crt.Free(esc)
	*(*uintptr)(unsafe.Pointer(_pInfo + 32)) = _1619sqlite3ArrayAllocate(tls, _db, *(*uintptr)(unsafe.Pointer(_pInfo + 32)), int32(32), _pInfo+40, _i)
	return *(*int32)(unsafe.Pointer(_i))
}

// _1933addAggInfoFunc is defined at sqlite3.c:96839:12
func _1933addAggInfoFunc(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pInfo uintptr /* *TAggInfo = SAggInfo */) (r int32) {
	esc := crt.MustMalloc(4)
	var _i = esc // *int32
	defer crt.Free(esc)
	*(*uintptr)(unsafe.Pointer(_pInfo + 48)) = _1619sqlite3ArrayAllocate(tls, _db, *(*uintptr)(unsafe.Pointer(_pInfo + 48)), int32(24), _pInfo+56, _i)
	return *(*int32)(unsafe.Pointer(_i))
}

// _1934binaryCompareP5 is defined at sqlite3.c:92094:11
func _1934binaryCompareP5(tls crt.TLS, _pExpr1 uintptr /* *TExpr = SExpr */, _pExpr2 uintptr /* *TExpr = SExpr */, _jumpIfNull int32) (r uint8) {
	var _aff uint8

	_aff = uint8(_1817sqlite3ExprAffinity(tls, _pExpr2))
	_aff = uint8(int32(uint8(_2006sqlite3CompareAffinity(tls, _pExpr1, int8(_aff)))) | int32(uint8(_jumpIfNull)))
	return _aff
}

// _1935sqlite3ExprCheckIN is defined at sqlite3.c:94597:20
func _1935sqlite3ExprCheckIN(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pIn uintptr /* *TExpr = SExpr */) (r int32) {
	var _nVector int32

	_nVector = _1608sqlite3ExprVectorSize(tls, *(*uintptr)(unsafe.Pointer(_pIn + 16)))
	if (*(*uint32)(unsafe.Pointer(_pIn + 4)))&uint32(0x800) == 0 {
		goto _1
	}

	if _nVector == (*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pIn + 32))))))) {
		goto _3
	}

	_1867sqlite3SubselectError(tls, _pParse, *(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pIn + 32)))))), _nVector)
	return int32(1)

_3:
	goto _2

_1:
	if _nVector == int32(1) {
		goto _4
	}

	_1891sqlite3VectorErrorMsg(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pIn + 16)))
	return int32(1)

_4:
_2:
	return int32(0)
}

// _1936exprINAffinity is defined at sqlite3.c:94264:13
func _1936exprINAffinity(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pExpr uintptr /* *TExpr = SExpr */) (r uintptr /* *int8 */) {
	var (
		_pLeft   uintptr // *TExpr = SExpr
		_nVal    int32
		_pSelect uintptr // *TSelect = SSelect
		_zRet    uintptr // *int8
		_i       int32
		_pA      uintptr // *TExpr = SExpr
		_a       int8
	)
	_pLeft = *(*uintptr)(unsafe.Pointer(_pExpr + 16))
	_nVal = _1608sqlite3ExprVectorSize(tls, _pLeft)
	_pSelect = func() uintptr {
		if (*(*uint32)(unsafe.Pointer(_pExpr + 4)))&uint32(0x800) != 0 {
			return *(*uintptr)(unsafe.Pointer(_pExpr + 32))
		}
		return null
	}()

	_zRet = _177sqlite3DbMallocRaw(tls, *(*uintptr)(unsafe.Pointer(_pParse)), uint64(_nVal+int32(1)))
	if _zRet == 0 {
		goto _1
	}

	_i = int32(0)
_2:
	if _i >= _nVal {
		goto _4
	}

	_pA = _1938sqlite3VectorFieldSubexpr(tls, _pLeft, _i)
	_a = _1817sqlite3ExprAffinity(tls, _pA)
	if _pSelect == 0 {
		goto _5
	}

	*(*int8)(unsafe.Pointer(_zRet + uintptr(_i))) = _2006sqlite3CompareAffinity(tls, *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pSelect))) + 8) + 32*uintptr(_i))), _a)
	goto _6

_5:
	*(*int8)(unsafe.Pointer(_zRet + uintptr(_i))) = _a
_6:
	_i++
	goto _2

_4:
	*(*int8)(unsafe.Pointer(_zRet + uintptr(_nVal))) = int8('\x00')
_1:
	return _zRet
}

// _1937sqlite3FindInIndex is defined at sqlite3.c:94042:20
func _1937sqlite3FindInIndex(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pX uintptr /* *TExpr = SExpr */, _inFlags uint32, _prRhsHasNull uintptr /* *int32 */, _aiMap uintptr /* *int32 */) (r int32) {
	var (
		_p               uintptr // *TSelect = SSelect
		_eType           int32
		_iTab            int32
		_mustBeUnique    int32
		_v               uintptr // *TVdbe = SVdbe
		_i               int32
		_pEList          uintptr // *TExprList = SExprList
		_db              uintptr // *Tsqlite3 = Ssqlite3
		_pTab            uintptr // *TTable = STable
		_iDb             int16
		_1pEList         uintptr // *TExprList = SExprList
		_nExpr           int32
		_iAddr           int32
		_pIdx            uintptr // *TIndex = SIndex
		_affinity_ok     int32
		_2i              int32
		_pLhs            uintptr // *TExpr = SExpr
		_iCol            int32
		_idxaff          int8
		_cmpaff          int8
		_colUsed         uint64
		_mCol            uint64
		_3pLhs           uintptr // *TExpr = SExpr
		_pRhs            uintptr // *TExpr = SExpr
		_pReq            uintptr // *TCollSeq = SCollSeq
		_j               int32
		_4iAddr          int32
		_savedNQueryLoop uint32
		_rMayHaveNull    int32
		_5i              int32
		_n               int32
	)
	_eType = int32(0)
	_iTab = postinc7(&(*(*int32)(unsafe.Pointer(_pParse + 52))))
	_v = _1472sqlite3GetVdbe(tls, _pParse)

	_mustBeUnique = bool2int((_inFlags & uint32(0x4)) != uint32(0))
	if _prRhsHasNull == 0 || (*(*uint32)(unsafe.Pointer(_pX + 4)))&uint32(0x800) == 0 {
		goto _1
	}

	_pEList = *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pX + 32))))
	_i = int32(0)
_2:
	if _i >= (*(*int32)(unsafe.Pointer(_pEList))) {
		goto _4
	}

	if _1921sqlite3ExprCanBeNull(tls, *(*uintptr)(unsafe.Pointer((_pEList + 8) + 32*uintptr(_i)))) == 0 {
		goto _5
	}

	goto _4

_5:
	_i++
	goto _2

_4:
	if _i != (*(*int32)(unsafe.Pointer(_pEList))) {
		goto _6
	}

	_prRhsHasNull = null
_6:
_1:
	if (*(*int32)(unsafe.Pointer(_pParse + 48))) != int32(0) || set4(&_p, _2013isCandidateForInOpt(tls, _pX)) == 0 {
		goto _7
	}

	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_1pEList = *(*uintptr)(unsafe.Pointer(_p))
	_nExpr = *(*int32)(unsafe.Pointer(_1pEList))

	_pTab = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 32))) + 8 + 32))
	_iDb = int16(_1069sqlite3SchemaToIndex(tls, _db, *(*uintptr)(unsafe.Pointer(_pTab + 112))))
	_1487sqlite3CodeVerifySchema(tls, _pParse, int32(_iDb))
	_1574sqlite3TableLock(tls, _pParse, int32(_iDb), *(*int32)(unsafe.Pointer(_pTab + 56)), uint8(0), *(*uintptr)(unsafe.Pointer(_pTab)))

	if _nExpr != int32(1) || int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_1pEList + 8))) + 48))) >= int32(0) {
		goto _8
	}

	_iAddr = _1473sqlite3VdbeAddOp0(tls, _v, int32(20))
	_1647sqlite3OpenTable(tls, _pParse, _iTab, int32(_iDb), _pTab, int32(104))
	_eType = int32(1)
	_1474sqlite3VdbeJumpHere(tls, _v, _iAddr)
	goto _9

_8:
	_affinity_ok = int32(1)
	_2i = int32(0)
_10:
	if _2i >= _nExpr || _affinity_ok == 0 {
		goto _12
	}

	_pLhs = _1938sqlite3VectorFieldSubexpr(tls, *(*uintptr)(unsafe.Pointer(_pX + 16)), _2i)
	_iCol = int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((_1pEList + 8) + 32*uintptr(_2i)))) + 48)))
	_idxaff = _1948sqlite3TableColumnAffinity(tls, _pTab, _iCol)
	_cmpaff = _2006sqlite3CompareAffinity(tls, _pLhs, _idxaff)
	switch int32(_cmpaff) {
	case int32('A'):
		goto _14
	case int32('B'):
		goto _15
	default:
		goto _16
	}
_14:
	goto _13

_15:
	goto _13

_16:
	_affinity_ok = bool2int(int32(_idxaff) >= int32('C'))
_13:
	_2i++
	goto _10

_12:
	if _affinity_ok == 0 {
		goto _17
	}

	_pIdx = *(*uintptr)(unsafe.Pointer(_pTab + 16))
_18:
	if _pIdx == 0 || _eType != int32(0) {
		goto _20
	}

	if int32(*(*uint16)(unsafe.Pointer(_pIdx + 96))) >= _nExpr {
		goto _21
	}

	goto _19

_21:
	if int32(*(*uint16)(unsafe.Pointer(_pIdx + 96))) < int32(63) {
		goto _22
	}

	goto _19

_22:
	if _mustBeUnique == 0 {
		goto _23
	}

	if int32(*(*uint16)(unsafe.Pointer(_pIdx + 94))) <= _nExpr && (int32(*(*uint16)(unsafe.Pointer(_pIdx + 96))) <= _nExpr || int32(*(*uint8)(unsafe.Pointer(_pIdx + 98))) != int32(0)) {
		goto _24
	}

	goto _19

_24:
_23:
	_colUsed = uint64(0)
	_2i = int32(0)
_25:
	if _2i >= _nExpr {
		goto _27
	}

	_3pLhs = _1938sqlite3VectorFieldSubexpr(tls, *(*uintptr)(unsafe.Pointer(_pX + 16)), _2i)
	_pRhs = *(*uintptr)(unsafe.Pointer((_1pEList + 8) + 32*uintptr(_2i)))
	_pReq = _1910sqlite3BinaryCompareCollSeq(tls, _pParse, _3pLhs, _pRhs)

	_j = int32(0)
_28:
	if _j >= _nExpr {
		goto _30
	}

	if int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 8))) + 2*uintptr(_j)))) == int32(*(*int16)(unsafe.Pointer(_pRhs + 48))) {
		goto _31
	}

	goto _29

_31:
	if _pReq == 0 || _110sqlite3StrICmp(tls, *(*uintptr)(unsafe.Pointer(_pReq)), *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 64))) + 8*uintptr(_j)))) == int32(0) {
		goto _32
	}

	goto _29

_32:
	goto _30

_29:
	_j++
	goto _28

_30:
	if _j != _nExpr {
		goto _33
	}

	goto _27

_33:
	_mCol = uint64(1) << (uint(_j) % 64)
	if (_mCol & _colUsed) == 0 {
		goto _34
	}

	goto _27

_34:
	_colUsed = uint64(_colUsed | _mCol)
	if _aiMap == 0 {
		goto _35
	}

	*(*int32)(unsafe.Pointer(_aiMap + 4*uintptr(_2i))) = _j
_35:
	_2i++
	goto _25

_27:
	if _colUsed != ((uint64(1) << (uint(_nExpr) % 64)) - uint64(1)) {
		goto _36
	}

	_4iAddr = _1473sqlite3VdbeAddOp0(tls, _v, int32(20))
	_1475sqlite3VdbeAddOp4(tls, _v, int32(167), int32(0), int32(0), int32(0), _226sqlite3MPrintf(tls, _db, ts+32960 /* "USING INDEX %s FOR IN-OPERATOR" */, *(*uintptr)(unsafe.Pointer(_pIdx))), int32(-7))
	_1241sqlite3VdbeAddOp3(tls, _v, int32(104), _iTab, *(*int32)(unsafe.Pointer(_pIdx + 88)), int32(_iDb))
	_1589sqlite3VdbeSetP4KeyInfo(tls, _pParse, _pIdx)

	_eType = int32(3) + int32(*(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pIdx + 56)))))
	if _prRhsHasNull == 0 {
		goto _37
	}

	*(*int32)(unsafe.Pointer(_prRhsHasNull)) = preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56))))
	if _nExpr != int32(1) {
		goto _38
	}

	_1962sqlite3SetHasNullFlag(tls, _v, _iTab, *(*int32)(unsafe.Pointer(_prRhsHasNull)))
_38:
_37:
	_1474sqlite3VdbeJumpHere(tls, _v, _4iAddr)
_36:
_19:
	_pIdx = *(*uintptr)(unsafe.Pointer(_pIdx + 40))
	goto _18

_20:
_17:
_9:
_7:
	if _eType != int32(0) || _inFlags&uint32(0x1) == 0 || ((*(*uint32)(unsafe.Pointer(_pX + 4)))&uint32(0x800)) != uint32(0) || _2014sqlite3InRhsIsConstant(tls, _pX) != 0 && (*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pX + 32))))) > int32(2) {
		goto _39
	}

	_eType = int32(5)
_39:
	if _eType != int32(0) {
		goto _40
	}

	_savedNQueryLoop = *(*uint32)(unsafe.Pointer(_pParse + 180))
	_rMayHaveNull = int32(0)
	_eType = int32(2)
	if (_inFlags & uint32(0x4)) == 0 {
		goto _42
	}

	*(*uint32)(unsafe.Pointer(_pParse + 180)) = uint32(0)
	if int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pX + 16))) + 48))) >= int32(0) || ((*(*uint32)(unsafe.Pointer(_pX + 4)))&uint32(0x800)) != uint32(0) {
		goto _44
	}

	_eType = int32(1)
_44:
	goto _43

_42:
	if _prRhsHasNull == 0 {
		goto _45
	}

	*(*int32)(unsafe.Pointer(_prRhsHasNull)) = set5(&_rMayHaveNull, preinc2(&(*(*int32)(unsafe.Pointer(_pParse + 56)))))
_45:
_43:
	_1868sqlite3CodeSubselect(tls, _pParse, _pX, _rMayHaveNull, bool2int(_eType == int32(1)))
	*(*uint32)(unsafe.Pointer(_pParse + 180)) = _savedNQueryLoop
	goto _41

_40:
	*(*int32)(unsafe.Pointer(_pX + 44)) = _iTab
_41:
	if _aiMap == 0 || _eType == int32(3) || _eType == int32(4) {
		goto _46
	}

	_n = _1608sqlite3ExprVectorSize(tls, *(*uintptr)(unsafe.Pointer(_pX + 16)))
	_5i = int32(0)
_47:
	if _5i >= _n {
		goto _49
	}

	*(*int32)(unsafe.Pointer(_aiMap + 4*uintptr(_5i))) = _5i
	_5i++
	goto _47

_49:
_46:
	return _eType
}

// _1938sqlite3VectorFieldSubexpr is defined at sqlite3.c:92202:21
func _1938sqlite3VectorFieldSubexpr(tls crt.TLS, _pVector uintptr /* *TExpr = SExpr */, _i int32) (r uintptr /* *TExpr = SExpr */) {
	if _1803sqlite3ExprIsVector(tls, _pVector) == 0 {
		goto _1
	}

	if int32(*(*uint8)(unsafe.Pointer(_pVector))) != int32(119) && int32(*(*uint8)(unsafe.Pointer(_pVector + 54))) != int32(119) {
		goto _2
	}

	return *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pVector + 32))))) + 8) + 32*uintptr(_i)))

	goto _3

_2:
	return *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pVector + 32))) + 8) + 32*uintptr(_i)))

_3:
_1:
	return _pVector
}

// _1939sqlite3IdListIndex is defined at sqlite3.c:104332:20
func _1939sqlite3IdListIndex(tls crt.TLS, _pList uintptr /* *TIdList = SIdList */, _zName uintptr /* *int8 */) (r int32) {
	var _i int32

	if _pList != 0 {
		goto _1
	}

	return int32(-1)

_1:
	_i = int32(0)
_2:
	if _i >= (*(*int32)(unsafe.Pointer(_pList + 8))) {
		goto _4
	}

	if _110sqlite3StrICmp(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pList))) + 16*uintptr(_i))), _zName) != int32(0) {
		goto _5
	}

	return _i

_5:
	_i++
	goto _2

_4:
	return int32(-1)
}

// _1940notValid is defined at sqlite3.c:90795:13
func _1940notValid(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pNC uintptr /* *TNameContext = SNameContext */, _zMsg uintptr /* *int8 */, _validMask int32) {
	var _zIn uintptr // *int8

	if (int32(*(*uint16)(unsafe.Pointer(_pNC + 48))) & _validMask) == int32(0) {
		goto _1
	}

	_zIn = ts + 32991 /* "partial index WHERE clauses" */
	if (int32(*(*uint16)(unsafe.Pointer(_pNC + 48))) & int32(0x20)) == 0 {
		goto _2
	}

	_zIn = ts + 33019 /* "index expressions" */
	goto _3

_2:
	if (int32(*(*uint16)(unsafe.Pointer(_pNC + 48))) & int32(0x4)) == 0 {
		goto _4
	}

	_zIn = ts + 33037 /* "CHECK constraints" */
_4:
_3:
	_550sqlite3ErrorMsg(tls, _pParse, ts+33055 /* "%s prohibited in %s" */, _zMsg, _zIn)
_1:
}

// _1941lookupName is defined at sqlite3.c:90444:12
func _1941lookupName(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _zDb uintptr /* *int8 */, _zTab uintptr /* *int8 */, _zCol uintptr /* *int8 */, _pNC uintptr /* *TNameContext = SNameContext */, _pExpr uintptr /* *TExpr = SExpr */) (r int32) {
	var (
		_i         int32
		_j         int32
		_cnt       int32
		_cntTab    int32
		_nSubquery int32
		_db        uintptr // *Tsqlite3 = Ssqlite3
		_pItem     uintptr // *SSrcList_item
		_pMatch    uintptr // *SSrcList_item
		_pTopNC    uintptr // *TNameContext = SNameContext
		_pSchema   uintptr // *TSchema = SSchema
		_isTrigger int32
		_pTab      uintptr // *TTable = STable
		_pCol      uintptr // *TColumn = SColumn
		_pEList    uintptr // *TExprList = SExprList
		_pSrcList  uintptr // *TSrcList = SSrcList
		_hit       int32
		_zTabName  uintptr // *int8
		_op        int32
		_iCol      int32
		_zAs       uintptr // *int8
		_pOrig     uintptr // *TExpr = SExpr
		_zErr      uintptr // *int8
		_n         int32
	)
	_cnt = int32(0)
	_cntTab = int32(0)
	_nSubquery = int32(0)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_pMatch = 0
	_pTopNC = _pNC
	_pSchema = 0
	_isTrigger = int32(0)
	_pTab = 0

	*(*int32)(unsafe.Pointer(_pExpr + 44)) = int32(-1)
	*(*uintptr)(unsafe.Pointer(_pExpr + 64)) = null
	if _zDb == 0 {
		goto _1
	}

	if (int32(*(*uint16)(unsafe.Pointer(_pNC + 48))) & int32(6)) == int32(0) {
		goto _2
	}

	_zDb = null
	goto _3

_2:
	_i = int32(0)
_4:
	if _i >= (*(*int32)(unsafe.Pointer(_db + 40))) {
		goto _6
	}

	if _110sqlite3StrICmp(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_i))), _zDb) != int32(0) {
		goto _7
	}

	_pSchema = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_i)) + 24))
	goto _6

_7:
	_i++
	goto _4

_6:
_3:
_1:
_8:
	_pSrcList = *(*uintptr)(unsafe.Pointer(_pNC + 8))
	if _pSrcList == 0 {
		goto _11
	}

	_i = int32(0)
	_pItem = _pSrcList + 8
_12:
	if _i >= (*(*int32)(unsafe.Pointer(_pSrcList))) {
		goto _14
	}

	_pTab = *(*uintptr)(unsafe.Pointer(_pItem + 32))

	if (*(*uintptr)(unsafe.Pointer(_pItem + 40))) == 0 || ((*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pItem + 40))) + 12)))&uint32(0x800)) == uint32(0) {
		goto _15
	}

	_hit = int32(0)
	_pEList = *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pItem + 40))))
	_j = int32(0)
_16:
	if _j >= (*(*int32)(unsafe.Pointer(_pEList))) {
		goto _18
	}

	if _1969sqlite3MatchSpanName(tls, *(*uintptr)(unsafe.Pointer(((_pEList + 8) + 32*uintptr(_j)) + 16)), _zCol, _zTab, _zDb) == 0 {
		goto _19
	}

	_cnt++
	_cntTab = int32(2)
	_pMatch = _pItem
	*(*int16)(unsafe.Pointer(_pExpr + 48)) = int16(_j)
	_hit = int32(1)
_19:
	_j++
	goto _16

_18:
	if _hit == 0 && _zTab != 0 {
		goto _20
	}

	goto _13

_20:
_15:
	if _zDb == 0 || (*(*uintptr)(unsafe.Pointer(_pTab + 112))) == _pSchema {
		goto _21
	}

	goto _13

_21:
	if _zTab == 0 {
		goto _22
	}

	_zTabName = func() uintptr {
		if (*(*uintptr)(unsafe.Pointer(_pItem + 24))) != 0 {
			return *(*uintptr)(unsafe.Pointer(_pItem + 24))
		}
		return *(*uintptr)(unsafe.Pointer(_pTab))
	}()

	if _110sqlite3StrICmp(tls, _zTabName, _zTab) == int32(0) {
		goto _23
	}

	goto _13

_23:
_22:
	if int32(0) != postinc7(&_cntTab) {
		goto _24
	}

	_pMatch = _pItem
_24:
	_j = int32(0)
	_pCol = *(*uintptr)(unsafe.Pointer(_pTab + 8))
_25:
	if _j >= int32(*(*int16)(unsafe.Pointer(_pTab + 70))) {
		goto _27
	}

	if _110sqlite3StrICmp(tls, *(*uintptr)(unsafe.Pointer(_pCol)), _zCol) != int32(0) {
		goto _28
	}

	if _cnt != int32(1) {
		goto _29
	}

	if (int32(*(*uint8)(unsafe.Pointer(_pItem + 60))) & int32(0x4)) == 0 {
		goto _30
	}

	goto _26

_30:
	if _2015nameInUsingClause(tls, *(*uintptr)(unsafe.Pointer(_pItem + 80)), _zCol) == 0 {
		goto _31
	}

	goto _26

_31:
_29:
	_cnt++
	_pMatch = _pItem
	*(*int16)(unsafe.Pointer(_pExpr + 48)) = int16(func() int32 {
		if _j == int32(*(*int16)(unsafe.Pointer(_pTab + 68))) {
			return int32(-1)
		}
		return int32(int16(_j))
	}())
	goto _27

_28:
_26:
	_j++
	_pCol += 32
	goto _25

_27:
_13:
	_i++
	_pItem += 112
	goto _12

_14:
	if _pMatch == 0 {
		goto _32
	}

	*(*int32)(unsafe.Pointer(_pExpr + 44)) = *(*int32)(unsafe.Pointer(_pMatch + 64))
	*(*uintptr)(unsafe.Pointer(_pExpr + 64)) = *(*uintptr)(unsafe.Pointer(_pMatch + 32))

	if (int32(*(*uint8)(unsafe.Pointer(_pMatch + 60))) & int32(0x8)) == int32(0) {
		goto _33
	}

	{
		p := &(*(*uint32)(unsafe.Pointer(_pExpr + 4)))
		*p = uint32(uint32(*p) | uint32(0x100000))
	}
_33:
	_pSchema = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pExpr + 64))) + 112))
_32:
_11:
	if _zDb != 0 || _zTab == 0 || _cntTab != int32(0) || (*(*uintptr)(unsafe.Pointer(_pParse + 168))) == 0 {
		goto _34
	}

	_op = int32(*(*uint8)(unsafe.Pointer(_pParse + 192)))

	if _op == int32(109) || _110sqlite3StrICmp(tls, ts+4776 /* "new" */, _zTab) != int32(0) {
		goto _35
	}

	*(*int32)(unsafe.Pointer(_pExpr + 44)) = int32(1)
	_pTab = *(*uintptr)(unsafe.Pointer(_pParse + 168))
	goto _36

_35:
	if _op == int32(108) || _110sqlite3StrICmp(tls, ts+32188 /* "old" */, _zTab) != int32(0) {
		goto _37
	}

	*(*int32)(unsafe.Pointer(_pExpr + 44)) = int32(0)
	_pTab = *(*uintptr)(unsafe.Pointer(_pParse + 168))
	goto _38

_37:
	_pTab = null
_38:
_36:
	if _pTab == 0 {
		goto _39
	}

	_pSchema = *(*uintptr)(unsafe.Pointer(_pTab + 112))
	_cntTab++
	_iCol = int32(0)
	_pCol = *(*uintptr)(unsafe.Pointer(_pTab + 8))
_40:
	if _iCol >= int32(*(*int16)(unsafe.Pointer(_pTab + 70))) {
		goto _42
	}

	if _110sqlite3StrICmp(tls, *(*uintptr)(unsafe.Pointer(_pCol)), _zCol) != int32(0) {
		goto _43
	}

	if _iCol != int32(*(*int16)(unsafe.Pointer(_pTab + 68))) {
		goto _44
	}

	_iCol = int32(-1)
_44:
	goto _42

_43:
	_iCol++
	_pCol += 32
	goto _40

_42:
	if _iCol < int32(*(*int16)(unsafe.Pointer(_pTab + 70))) || _222sqlite3IsRowid(tls, _zCol) == 0 || ((*(*uint32)(unsafe.Pointer(_pTab + 64)))&uint32(0x40)) != uint32(0) {
		goto _45
	}

	_iCol = int32(-1)
_45:
	if _iCol >= int32(*(*int16)(unsafe.Pointer(_pTab + 70))) {
		goto _46
	}

	_cnt++
	if _iCol >= int32(0) {
		goto _47
	}

	*(*int8)(unsafe.Pointer(_pExpr + 1)) = int8('D')
	goto _48

_47:
	if (*(*int32)(unsafe.Pointer(_pExpr + 44))) != int32(0) {
		goto _49
	}

	{
		p := &(*(*uint32)(unsafe.Pointer(_pParse + 184)))
		*p = uint32(uint32(*p) | func() uint32 {
			if _iCol >= int32(32) {
				return uint32(0xffffffff)
			}
			return uint32(1) << (uint(_iCol) % 32)
		}())
	}
	goto _50

_49:
	{
		p := &(*(*uint32)(unsafe.Pointer(_pParse + 188)))
		*p = uint32(uint32(*p) | func() uint32 {
			if _iCol >= int32(32) {
				return uint32(0xffffffff)
			}
			return uint32(1) << (uint(_iCol) % 32)
		}())
	}
_50:
_48:
	*(*int16)(unsafe.Pointer(_pExpr + 48)) = int16(_iCol)
	*(*uintptr)(unsafe.Pointer(_pExpr + 64)) = _pTab
	_isTrigger = int32(1)
_46:
_39:
_34:
	if _cnt != int32(0) || _cntTab != int32(1) || _pMatch == 0 || (int32(*(*uint16)(unsafe.Pointer(_pNC + 48)))&int32(0x20)) != int32(0) || _222sqlite3IsRowid(tls, _zCol) == 0 || ((*(*uint32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pMatch + 32)) + 64)))&uint32(0x40)) != uint32(0) {
		goto _51
	}

	_cnt = int32(1)
	*(*int16)(unsafe.Pointer(_pExpr + 48)) = int16(-1)
	*(*int8)(unsafe.Pointer(_pExpr + 1)) = int8('D')
_51:
	if set4(&_pEList, *(*uintptr)(unsafe.Pointer(_pNC + 16))) == 0 || _zTab != 0 || _cnt != int32(0) {
		goto _52
	}

	_j = int32(0)
_53:
	if _j >= (*(*int32)(unsafe.Pointer(_pEList))) {
		goto _55
	}

	_zAs = *(*uintptr)(unsafe.Pointer(((_pEList + 8) + 32*uintptr(_j)) + 8))
	if _zAs == 0 || _110sqlite3StrICmp(tls, _zAs, _zCol) != int32(0) {
		goto _56
	}

	_pOrig = *(*uintptr)(unsafe.Pointer((_pEList + 8) + 32*uintptr(_j)))
	if (int32(*(*uint16)(unsafe.Pointer(_pNC + 48)))&int32(0x1)) != int32(0) || ((*(*uint32)(unsafe.Pointer(_pOrig + 4)))&uint32(0x2)) == uint32(0) {
		goto _57
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+33075 /* "misuse of aliased aggregate %s" */, _zAs)
	return int32(2)

_57:
	if _1608sqlite3ExprVectorSize(tls, _pOrig) == int32(1) {
		goto _58
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+31146 /* "row value misused" */)
	return int32(2)

_58:
	_1973resolveAlias(tls, _pParse, _pEList, _j, _pExpr, ts+4553 /* "" */, _nSubquery)
	_cnt = int32(1)
	_pMatch = null

	goto _lookupname_end

_56:
	_j++
	goto _53

_55:
_52:
	if _cnt == 0 {
		goto _59
	}

	goto _10

_59:
	_pNC = *(*uintptr)(unsafe.Pointer(_pNC + 32))
	_nSubquery++
	if _pNC != 0 {
		goto _8
	}

	goto _10

_10:
	if _cnt != int32(0) || _zTab != 0 || ((*(*uint32)(unsafe.Pointer(_pExpr + 4)))&uint32(0x40)) == uint32(0) {
		goto _60
	}

	*(*uint8)(unsafe.Pointer(_pExpr)) = uint8(97)
	*(*uintptr)(unsafe.Pointer(_pExpr + 64)) = null
	return int32(1)

_60:
	if _cnt == int32(1) {
		goto _61
	}

	_zErr = func() uintptr {
		if _cnt == int32(0) {
			return ts + 33106 /* "no such column" */
		}
		return ts + 33121 /* "ambiguous column name" */
	}()
	if _zDb == 0 {
		goto _62
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+33143 /* "%s: %s.%s.%s" */, _zErr, _zDb, _zTab, _zCol)
	goto _63

_62:
	if _zTab == 0 {
		goto _64
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+23666 /* "%s: %s.%s" */, _zErr, _zTab, _zCol)
	goto _65

_64:
	_550sqlite3ErrorMsg(tls, _pParse, ts+23676 /* "%s: %s" */, _zErr, _zCol)
_65:
_63:
	*(*uint8)(unsafe.Pointer(_pParse + 29)) = uint8(1)
	(*(*int32)(unsafe.Pointer(_pTopNC + 44)))++
_61:
	if int32(*(*int16)(unsafe.Pointer(_pExpr + 48))) < int32(0) || _pMatch == 0 {
		goto _66
	}

	_n = int32(*(*int16)(unsafe.Pointer(_pExpr + 48)))
	if _n < int32(64) {
		goto _67
	}

	_n = int32(63)
_67:
	{
		p := &(*(*uint64)(unsafe.Pointer(_pMatch + 88)))
		*p = uint64(uint64(*p) | (uint64(1) << (uint(_n) % 64)))
	}
_66:
	_777sqlite3ExprDelete(tls, _db, *(*uintptr)(unsafe.Pointer(_pExpr + 16)))
	*(*uintptr)(unsafe.Pointer(_pExpr + 16)) = null
	_777sqlite3ExprDelete(tls, _db, *(*uintptr)(unsafe.Pointer(_pExpr + 24)))
	*(*uintptr)(unsafe.Pointer(_pExpr + 24)) = null
	*(*uint8)(unsafe.Pointer(_pExpr)) = uint8(func() int32 {
		if _isTrigger != 0 {
			return int32(75)
		}
		return int32(145)
	}())
	{
		p := &(*(*uint32)(unsafe.Pointer(_pExpr + 4)))
		*p = uint32(uint32(*p) | uint32(0x800000))
	}
	goto _lookupname_end
_lookupname_end:
	if _cnt != int32(1) {
		goto _68
	}

	if ((*(*uint32)(unsafe.Pointer(_pExpr + 4))) & uint32(0x400000)) != uint32(0) {
		goto _70
	}

	_2016sqlite3AuthRead(tls, _pParse, _pExpr, _pSchema, *(*uintptr)(unsafe.Pointer(_pNC + 8)))
_70:
_71:
	(*(*int32)(unsafe.Pointer(_pTopNC + 40)))++
	if _pTopNC != _pNC {
		goto _74
	}

	goto _73

_74:
	_pTopNC = *(*uintptr)(unsafe.Pointer(_pTopNC + 32))
	goto _71

_73:
	return int32(1)

	goto _69

_68:
	return int32(2)

_69:
	return r
}

// _1942exprProbability is defined at sqlite3.c:90817:12
func _1942exprProbability(tls crt.TLS, _p uintptr /* *TExpr = SExpr */) (r int32) {
	esc := crt.MustMalloc(8)
	var _r = esc // *float64
	defer crt.Free(esc)
	*(*float64)(unsafe.Pointer(_r)) = float64(-1)
	if int32(*(*uint8)(unsafe.Pointer(_p))) == int32(132) {
		goto _1
	}

	return int32(-1)

_1:
	_808sqlite3AtoF(tls, *(*uintptr)(unsafe.Pointer(_p + 8)), _r, _211sqlite3Strlen30(tls, *(*uintptr)(unsafe.Pointer(_p + 8))), uint8(1))

	if (*(*float64)(unsafe.Pointer(_r))) <= float64(1) {
		goto _2
	}

	return int32(-1)

_2:
	return int32((*(*float64)(unsafe.Pointer(_r))) * float64(1.34217728e+08))
}

// _1943sqlite3WalkExprList is defined at sqlite3.c:90173:20
func _1943sqlite3WalkExprList(tls crt.TLS, _pWalker uintptr /* *TWalker = SWalker */, _p uintptr /* *TExprList = SExprList */) (r int32) {
	var (
		_i     int32
		_pItem uintptr // *SExprList_item
	)
	if _p == 0 {
		goto _1
	}

	_i = *(*int32)(unsafe.Pointer(_p))
	_pItem = _p + 8
_2:
	if _i <= int32(0) {
		goto _4
	}

	if _1795sqlite3WalkExpr(tls, _pWalker, *(*uintptr)(unsafe.Pointer(_pItem))) == 0 {
		goto _5
	}

	return int32(2)

_5:
	_i--
	_pItem += 32
	goto _2

_4:
_1:
	return int32(0)
}

// _1944sqlite3FunctionUsesThisSrc is defined at sqlite3.c:96805:20
func _1944sqlite3FunctionUsesThisSrc(tls crt.TLS, _pExpr uintptr /* *TExpr = SExpr */, _pSrcList uintptr /* *TSrcList = SSrcList */) (r int32) {
	esc := crt.MustMalloc(64)
	var (
		_w   = esc      // *TWalker = SWalker
		_cnt = esc + 48 // *SSrcCount
	)
	defer crt.Free(esc)

	*(*uintptr)(unsafe.Pointer(_w + 8)) = fp56(_2017exprSrcCount)
	*(*uintptr)(unsafe.Pointer(_w + 16)) = null
	*(*uintptr)(unsafe.Pointer(_w + 40)) = _cnt
	*(*uintptr)(unsafe.Pointer(_cnt)) = _pSrcList
	*(*int32)(unsafe.Pointer(_cnt + 8)) = int32(0)
	*(*int32)(unsafe.Pointer(_cnt + 12)) = int32(0)
	_1943sqlite3WalkExprList(tls, _w, *(*uintptr)(unsafe.Pointer(_pExpr + 32)))
	return bool2int(((*(*int32)(unsafe.Pointer(_cnt + 8))) > int32(0)) || ((*(*int32)(unsafe.Pointer(_cnt + 12))) == int32(0)))
}

// _1945resolveOrderGroupBy is defined at sqlite3.c:91361:12
func _1945resolveOrderGroupBy(tls crt.TLS, _pNC uintptr /* *TNameContext = SNameContext */, _pSelect uintptr /* *TSelect = SSelect */, _pOrderBy uintptr /* *TExprList = SExprList */, _zType uintptr /* *int8 */) (r int32) {
	esc := crt.MustMalloc(4)
	var (
		_i       int32
		_j       int32
		_iCol    = esc   // *int32
		_pItem   uintptr // *SExprList_item
		_pParse  uintptr // *TParse = SParse
		_nResult int32
		_pE      uintptr // *TExpr = SExpr
		_pE2     uintptr // *TExpr = SExpr
	)
	defer crt.Free(esc)
	if _pOrderBy != 0 {
		goto _1
	}

	return int32(0)

_1:
	_nResult = *(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pSelect))))
	_pParse = *(*uintptr)(unsafe.Pointer(_pNC))
	_i = int32(0)
	_pItem = _pOrderBy + 8
_2:
	if _i >= (*(*int32)(unsafe.Pointer(_pOrderBy))) {
		goto _4
	}

	_pE = *(*uintptr)(unsafe.Pointer(_pItem))
	_pE2 = _1510sqlite3ExprSkipCollate(tls, _pE)
	if int32(*(*int8)(unsafe.Pointer(_zType))) == int32('G') {
		goto _5
	}

	*(*int32)(unsafe.Pointer(_iCol)) = _2018resolveAsName(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pSelect)), _pE2)
	if (*(*int32)(unsafe.Pointer(_iCol))) <= int32(0) {
		goto _6
	}

	*(*uint16)(unsafe.Pointer(_pItem + 28)) = uint16(*(*int32)(unsafe.Pointer(_iCol)))
	goto _3

_6:
_5:
	if _1762sqlite3ExprIsInteger(tls, _pE2, _iCol) == 0 {
		goto _7
	}

	if (*(*int32)(unsafe.Pointer(_iCol))) >= int32(1) && (*(*int32)(unsafe.Pointer(_iCol))) <= int32(0xffff) {
		goto _8
	}

	_1972resolveOutOfRangeError(tls, _pParse, _zType, _i+int32(1), _nResult)
	return int32(1)

_8:
	*(*uint16)(unsafe.Pointer(_pItem + 28)) = uint16(*(*int32)(unsafe.Pointer(_iCol)))
	goto _3

_7:
	*(*uint16)(unsafe.Pointer(_pItem + 28)) = uint16(0)
	if _1588sqlite3ResolveExprNames(tls, _pNC, _pE) == 0 {
		goto _9
	}

	return int32(1)

_9:
	_j = int32(0)
_10:
	if _j >= (*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pSelect))))) {
		goto _12
	}

	if _1770sqlite3ExprCompare(tls, null, _pE, *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pSelect))) + 8) + 32*uintptr(_j))), int32(-1)) != int32(0) {
		goto _13
	}

	*(*uint16)(unsafe.Pointer(_pItem + 28)) = uint16(_j + int32(1))
_13:
	_j++
	goto _10

_12:
_3:
	_i++
	_pItem += 32
	goto _2

_4:
	return _1888sqlite3ResolveOrderGroupBy(tls, _pParse, _pSelect, _pOrderBy, _zType)
}

// _1946sqlite3SelectWrongNumTermsError is defined at sqlite3.c:120290:21
func _1946sqlite3SelectWrongNumTermsError(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _p uintptr /* *TSelect = SSelect */) {
	if ((*(*uint32)(unsafe.Pointer(_p + 12))) & uint32(0x200)) == 0 {
		goto _1
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+33156 /* "all VALUES must have the same nu..." */)
	goto _2

_1:
	_550sqlite3ErrorMsg(tls, _pParse, ts+33202 /* "SELECTs to the left and right of..." */, _1757selectOpName(tls, int32(*(*uint8)(unsafe.Pointer(_p + 8)))))
_2:
}

// _1947resolveCompoundOrderBy is defined at sqlite3.c:91216:12
func _1947resolveCompoundOrderBy(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pSelect uintptr /* *TSelect = SSelect */) (r int32) {
	esc := crt.MustMalloc(4)
	var (
		_i        int32
		_pOrderBy uintptr // *TExprList = SExprList
		_pEList   uintptr // *TExprList = SExprList
		_db       uintptr // *Tsqlite3 = Ssqlite3
		_moreToDo int32
		_pItem    uintptr // *SExprList_item
		_iCol     = esc   // *int32
		_pE       uintptr // *TExpr = SExpr
		_pDup     uintptr // *TExpr = SExpr
		_pNew     uintptr // *TExpr = SExpr
		_pParent  uintptr // *TExpr = SExpr
	)
	defer crt.Free(esc)
	_moreToDo = int32(1)
	_pOrderBy = *(*uintptr)(unsafe.Pointer(_pSelect + 64))
	if _pOrderBy != 0 {
		goto _1
	}

	return int32(0)

_1:
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	if (*(*int32)(unsafe.Pointer(_pOrderBy))) <= (*(*int32)(unsafe.Pointer((_db + 124) + 8))) {
		goto _2
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+33284 /* "too many terms in ORDER BY claus..." */)
	return int32(1)

_2:
	_i = int32(0)
_3:
	if _i >= (*(*int32)(unsafe.Pointer(_pOrderBy))) {
		goto _5
	}

	set64b(&(*(*uint8)(unsafe.Pointer(((_pOrderBy + 8) + 32*uintptr(_i)) + 25))), uint32(0))
	_i++
	goto _3

_5:
	*(*uintptr)(unsafe.Pointer(_pSelect + 80)) = null
_6:
	if (*(*uintptr)(unsafe.Pointer(_pSelect + 72))) == 0 {
		goto _7
	}

	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pSelect + 72))) + 80)) = _pSelect
	_pSelect = *(*uintptr)(unsafe.Pointer(_pSelect + 72))
	goto _6

_7:
_8:
	if _pSelect == 0 || _moreToDo == 0 {
		goto _9
	}

	_moreToDo = int32(0)
	_pEList = *(*uintptr)(unsafe.Pointer(_pSelect))

	_i = int32(0)
	_pItem = _pOrderBy + 8
_10:
	if _i >= (*(*int32)(unsafe.Pointer(_pOrderBy))) {
		goto _12
	}

	*(*int32)(unsafe.Pointer(_iCol)) = int32(-1)
	if (uint32(*(*uint8)(unsafe.Pointer(_pItem + 25))) << 31 >> 31) == 0 {
		goto _13
	}

	goto _11

_13:
	_pE = _1510sqlite3ExprSkipCollate(tls, *(*uintptr)(unsafe.Pointer(_pItem)))
	if _1762sqlite3ExprIsInteger(tls, _pE, _iCol) == 0 {
		goto _14
	}

	if (*(*int32)(unsafe.Pointer(_iCol))) > int32(0) && (*(*int32)(unsafe.Pointer(_iCol))) <= (*(*int32)(unsafe.Pointer(_pEList))) {
		goto _16
	}

	_1972resolveOutOfRangeError(tls, _pParse, ts+16440 /* "ORDER" */, _i+int32(1), *(*int32)(unsafe.Pointer(_pEList)))
	return int32(1)

_16:
	goto _15

_14:
	*(*int32)(unsafe.Pointer(_iCol)) = _2018resolveAsName(tls, _pParse, _pEList, _pE)
	if (*(*int32)(unsafe.Pointer(_iCol))) != int32(0) {
		goto _17
	}

	_pDup = _1507sqlite3ExprDup(tls, _db, _pE, int32(0))
	if (*(*uint8)(unsafe.Pointer(_db + 97))) != 0 {
		goto _18
	}

	*(*int32)(unsafe.Pointer(_iCol)) = _2019resolveOrderByTermToExprList(tls, _pParse, _pSelect, _pDup)
_18:
	_777sqlite3ExprDelete(tls, _db, _pDup)
_17:
_15:
	if (*(*int32)(unsafe.Pointer(_iCol))) <= int32(0) {
		goto _19
	}

	_pNew = _1334sqlite3Expr(tls, _db, int32(134), null)
	if _pNew != 0 {
		goto _21
	}

	return int32(1)

_21:
	{
		p := &(*(*uint32)(unsafe.Pointer(_pNew + 4)))
		*p = uint32(uint32(*p) | uint32(0x400))
	}
	*(*int32)(unsafe.Pointer(_pNew + 8)) = *(*int32)(unsafe.Pointer(_iCol))
	if (*(*uintptr)(unsafe.Pointer(_pItem))) != _pE {
		goto _22
	}

	*(*uintptr)(unsafe.Pointer(_pItem)) = _pNew
	goto _23

_22:
	_pParent = *(*uintptr)(unsafe.Pointer(_pItem))

_24:
	if int32(*(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pParent + 16))))) != int32(94) {
		goto _25
	}

	_pParent = *(*uintptr)(unsafe.Pointer(_pParent + 16))
	goto _24

_25:
	*(*uintptr)(unsafe.Pointer(_pParent + 16)) = _pNew
_23:
	_777sqlite3ExprDelete(tls, _db, _pE)
	*(*uint16)(unsafe.Pointer(_pItem + 28)) = uint16(*(*int32)(unsafe.Pointer(_iCol)))
	set64b(&(*(*uint8)(unsafe.Pointer(_pItem + 25))), uint32(1))
	goto _20

_19:
	_moreToDo = int32(1)
_20:
_11:
	_i++
	_pItem += 32
	goto _10

_12:
	_pSelect = *(*uintptr)(unsafe.Pointer(_pSelect + 80))
	goto _8

_9:
	_i = int32(0)
_26:
	if _i >= (*(*int32)(unsafe.Pointer(_pOrderBy))) {
		goto _28
	}

	if int32(uint32(*(*uint8)(unsafe.Pointer(((_pOrderBy + 8) + 32*uintptr(_i)) + 25)))<<31>>31) != int32(0) {
		goto _29
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+33318 /* "%r ORDER BY term does not match ..." */, _i+int32(1))
	return int32(1)

_29:
	_i++
	goto _26

_28:
	return int32(0)
}

// _1948sqlite3TableColumnAffinity is defined at sqlite3.c:91825:21
func _1948sqlite3TableColumnAffinity(tls crt.TLS, _pTab uintptr /* *TTable = STable */, _iCol int32) (r int8) {
	if _iCol >= int32(0) {
		return *(*int8)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pTab + 8))) + 32*uintptr(_iCol)) + 25))
	}

	return int8('D')
}

// _1949iLn int32, escapes: false, sqlite3.c:110188:22
var _1949iLn int32

// _1950autoIncEnd [5]SVdbeOpList, escapes: true, sqlite3.c:110189:29
var _1950autoIncEnd = ds + 17716

// _1951codeRowTrigger is defined at sqlite3.c:124744:19
func _1951codeRowTrigger(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pTrigger uintptr /* *TTrigger = STrigger */, _pTab uintptr /* *TTable = STable */, _orconf int32) (r uintptr /* *TTriggerPrg = STriggerPrg */) {
	esc := crt.MustMalloc(56)
	var (
		_pTop        uintptr // *TParse = SParse
		_db          uintptr // *Tsqlite3 = Ssqlite3
		_pPrg        uintptr // *TTriggerPrg = STriggerPrg
		_pWhen       uintptr // *TExpr = SExpr
		_v           uintptr // *TVdbe = SVdbe
		_sNC         = esc   // *TNameContext = SNameContext
		_pProgram    uintptr // *TSubProgram = SSubProgram
		_pSubParse   uintptr // *TParse = SParse
		_iEndTrigger int32
	)
	defer crt.Free(esc)
	_pTop = func() uintptr {
		if (*(*uintptr)(unsafe.Pointer(_pParse + 160))) != 0 {
			return *(*uintptr)(unsafe.Pointer(_pParse + 160))
		}
		return _pParse
	}()
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_pWhen = 0
	_pProgram = 0
	_iEndTrigger = int32(0)

	_pPrg = _295sqlite3DbMallocZero(tls, _db, uint64(40))
	if _pPrg != 0 {
		goto _1
	}

	return null

_1:
	*(*uintptr)(unsafe.Pointer(_pPrg + 8)) = *(*uintptr)(unsafe.Pointer(_pTop + 568))
	*(*uintptr)(unsafe.Pointer(_pTop + 568)) = _pPrg
	*(*uintptr)(unsafe.Pointer(_pPrg + 16)) = set4(&_pProgram, _295sqlite3DbMallocZero(tls, _db, uint64(48)))
	if _pProgram != 0 {
		goto _2
	}

	return null

_2:
	_2020sqlite3VdbeLinkSubProgram(tls, *(*uintptr)(unsafe.Pointer(_pTop + 16)), _pProgram)
	*(*uintptr)(unsafe.Pointer(_pPrg)) = _pTrigger
	*(*int32)(unsafe.Pointer(_pPrg + 24)) = _orconf
	*(*uint32)(unsafe.Pointer(_pPrg + 28)) = uint32(0xffffffff)
	*(*uint32)(unsafe.Pointer((_pPrg + 28) + 4)) = uint32(0xffffffff)
	_pSubParse = _295sqlite3DbMallocZero(tls, _db, uint64(592))
	if _pSubParse != 0 {
		goto _3
	}

	return null

_3:
	crt.Xmemset(tls, _sNC, int32(0), uint64(56))
	*(*uintptr)(unsafe.Pointer(_sNC)) = _pSubParse
	*(*uintptr)(unsafe.Pointer(_pSubParse)) = _db
	*(*uintptr)(unsafe.Pointer(_pSubParse + 168)) = _pTab
	*(*uintptr)(unsafe.Pointer(_pSubParse + 160)) = _pTop
	*(*uintptr)(unsafe.Pointer(_pSubParse + 528)) = *(*uintptr)(unsafe.Pointer(_pTrigger))
	*(*uint8)(unsafe.Pointer(_pSubParse + 192)) = *(*uint8)(unsafe.Pointer(_pTrigger + 16))
	*(*uint32)(unsafe.Pointer(_pSubParse + 180)) = *(*uint32)(unsafe.Pointer(_pParse + 180))
	_v = _1472sqlite3GetVdbe(tls, _pSubParse)
	if _v == 0 {
		goto _4
	}

	_1075sqlite3VdbeChangeP4(tls, _v, int32(-1), _226sqlite3MPrintf(tls, _db, ts+33379 /* "-- TRIGGER %s" */, *(*uintptr)(unsafe.Pointer(_pTrigger))), int32(-7))
	if (*(*uintptr)(unsafe.Pointer(_pTrigger + 24))) == 0 {
		goto _5
	}

	_pWhen = _1507sqlite3ExprDup(tls, _db, *(*uintptr)(unsafe.Pointer(_pTrigger + 24)), int32(0))
	if int32(0) != _1588sqlite3ResolveExprNames(tls, _sNC, _pWhen) || int32(*(*uint8)(unsafe.Pointer(_db + 97))) != int32(0) {
		goto _6
	}

	_iEndTrigger = _1541sqlite3VdbeMakeLabel(tls, _v)
	_1571sqlite3ExprIfFalse(tls, _pSubParse, _pWhen, _iEndTrigger, int32(0x10))
_6:
	_777sqlite3ExprDelete(tls, _db, _pWhen)
_5:
	_2021codeTriggerProgram(tls, _pSubParse, *(*uintptr)(unsafe.Pointer(_pTrigger + 56)), _orconf)
	if _iEndTrigger == 0 {
		goto _7
	}

	_1569sqlite3VdbeResolveLabel(tls, _v, _iEndTrigger)
_7:
	_1473sqlite3VdbeAddOp0(tls, _v, int32(66))
	_2022transferParseError(tls, _pParse, _pSubParse)
	if int32(*(*uint8)(unsafe.Pointer(_db + 97))) != int32(0) {
		goto _8
	}

	*(*uintptr)(unsafe.Pointer(_pProgram)) = _2023sqlite3VdbeTakeOpArray(tls, _v, _pProgram+8, _pTop+136)
_8:
	*(*int32)(unsafe.Pointer(_pProgram + 12)) = *(*int32)(unsafe.Pointer(_pSubParse + 56))
	*(*int32)(unsafe.Pointer(_pProgram + 16)) = *(*int32)(unsafe.Pointer(_pSubParse + 52))
	*(*uintptr)(unsafe.Pointer(_pProgram + 32)) = _pTrigger
	*(*uint32)(unsafe.Pointer(_pPrg + 28)) = *(*uint32)(unsafe.Pointer(_pSubParse + 184))
	*(*uint32)(unsafe.Pointer((_pPrg + 28) + 4)) = *(*uint32)(unsafe.Pointer(_pSubParse + 188))
	_375sqlite3VdbeDelete(tls, _v)
_4:
	_319sqlite3ParserReset(tls, _pSubParse)
	_181sqlite3DbFree(tls, _db, _pSubParse)
	return _pPrg
}

// _1952checkConstraintExprNode is defined at sqlite3.c:110954:12
func _1952checkConstraintExprNode(tls crt.TLS, _pWalker uintptr /* *TWalker = SWalker */, _pExpr uintptr /* *TExpr = SExpr */) (r int32) {
	if int32(*(*uint8)(unsafe.Pointer(_pExpr))) != int32(145) {
		goto _1
	}

	if int32(*(*int16)(unsafe.Pointer(_pExpr + 48))) < int32(0) {
		goto _2
	}

	if (*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pWalker + 40))) + 4*uintptr(*(*int16)(unsafe.Pointer(_pExpr + 48)))))) < int32(0) {
		goto _4
	}

	{
		p := &(*(*uint8)(unsafe.Pointer(_pWalker + 36)))
		*p = uint8(int32(*p) | int32(0x1))
	}
_4:
	goto _3

_2:
	{
		p := &(*(*uint8)(unsafe.Pointer(_pWalker + 36)))
		*p = uint8(int32(*p) | int32(0x2))
	}
_3:
_1:
	return int32(0)
}

// _1953exprTableRegister is defined at sqlite3.c:108892:13
func _1953exprTableRegister(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pTab uintptr /* *TTable = STable */, _regBase int32, _iCol int16) (r uintptr /* *TExpr = SExpr */) {
	var (
		_pExpr uintptr // *TExpr = SExpr
		_pCol  uintptr // *TColumn = SColumn
		_zColl uintptr // *int8
		_db    uintptr // *Tsqlite3 = Ssqlite3
	)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_pExpr = _1334sqlite3Expr(tls, _db, int32(150), null)
	if _pExpr == 0 {
		goto _1
	}

	if int32(_iCol) < int32(0) || int32(_iCol) == int32(*(*int16)(unsafe.Pointer(_pTab + 68))) {
		goto _2
	}

	_pCol = (*(*uintptr)(unsafe.Pointer(_pTab + 8))) + 32*uintptr(_iCol)
	*(*int32)(unsafe.Pointer(_pExpr + 44)) = (_regBase + int32(_iCol)) + int32(1)
	*(*int8)(unsafe.Pointer(_pExpr + 1)) = *(*int8)(unsafe.Pointer(_pCol + 25))
	_zColl = *(*uintptr)(unsafe.Pointer(_pCol + 16))
	if _zColl != 0 {
		goto _4
	}

	_zColl = *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_db + 16))))
_4:
	_pExpr = _1971sqlite3ExprAddCollateString(tls, _pParse, _pExpr, _zColl)
	goto _3

_2:
	*(*int32)(unsafe.Pointer(_pExpr + 44)) = _regBase
	*(*int8)(unsafe.Pointer(_pExpr + 1)) = int8('D')
_3:
_1:
	return _pExpr
}

// _1954exprTableColumn is defined at sqlite3.c:108924:13
func _1954exprTableColumn(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pTab uintptr /* *TTable = STable */, _iCursor int32, _iCol int16) (r uintptr /* *TExpr = SExpr */) {
	var _pExpr uintptr // *TExpr = SExpr

	_pExpr = _1334sqlite3Expr(tls, _db, int32(145), null)
	if _pExpr == 0 {
		goto _1
	}

	*(*uintptr)(unsafe.Pointer(_pExpr + 64)) = _pTab
	*(*int32)(unsafe.Pointer(_pExpr + 44)) = _iCursor
	*(*int16)(unsafe.Pointer(_pExpr + 48)) = int16(_iCol)
_1:
	return _pExpr
}

// _1955aTable [3]struct{XzName *int8;XzCols *int8;}, escapes: true, sqlite3.c:98114:5
var _1955aTable = bss + 18096 // array of 3 struct{zName pointer to char; zCols pointer to char}

func init() {
	*(*[3]struct {
		XzName uintptr // *int8
		XzCols uintptr // *int8
	})(unsafe.Pointer(_1955aTable)) = [3]struct {
		XzName uintptr // *int8
		XzCols uintptr // *int8
	}{
		0:
		// *int8
		// *int8
		{
			XzName: ts + 3213,  /* "sqlite_stat1" */
			XzCols: ts + 33393, /* "tbl,idx,stat" */
		},
		1:
		// *int8
		// *int8
		{
			XzName: ts + 3253, /* "sqlite_stat3" */
		},
		2:
		// *int8
		// *int8
		{
			XzName: ts + 3293, /* "sqlite_stat4" */
		},
	}
}

// _1956statInitFuncdef TFuncDef = SFuncDef, escapes: true, sqlite3.c:98409:22
var _1956statInitFuncdef = bss + 18144 // FuncDef

func init() {
	*(*SFuncDef)(unsafe.Pointer(_1956statInitFuncdef)) = SFuncDef{
		XnArg:      int8(2),
		XfuncFlags: uint16(1),
		XxSFunc:    fp6(_2024statInit),
		XzName:     ts + 33406, /* "stat_init" */
	}
}

// _1957statPushFuncdef TFuncDef = SFuncDef, escapes: true, sqlite3.c:98725:22
var _1957statPushFuncdef = bss + 18200 // FuncDef

func init() {
	*(*SFuncDef)(unsafe.Pointer(_1957statPushFuncdef)) = SFuncDef{
		XnArg:      int8(2),
		XfuncFlags: uint16(1),
		XxSFunc:    fp6(_2025statPush),
		XzName:     ts + 33416, /* "stat_push" */
	}
}

// _1958callStatGet is defined at sqlite3.c:98887:13
func _1958callStatGet(tls crt.TLS, _v uintptr /* *TVdbe = SVdbe */, _regStat4 int32, _iParam int32, _regOut int32) {
	_1475sqlite3VdbeAddOp4(tls, _v, int32(162), int32(0), _regStat4, _regOut, _2026statGetFuncdef, int32(-8))
	_1072sqlite3VdbeChangeP5(tls, _v, uint16(1))
}

type SValueNewStat4Ctx struct {
	XpParse uintptr // *SParse
	XpIdx   uintptr // *SIndex
	XppRec  uintptr // **SUnpackedRecord
	XiVal   int32
}

// _1959valueNew is defined at sqlite3.c:71571:22
func _1959valueNew(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _p uintptr /* *SValueNewStat4Ctx */) (r uintptr /* *Tsqlite3_value = Ssqlite3_value */) {
	return _314sqlite3ValueNew(tls, _db)
}

// _1960exprCodeSubselect is defined at sqlite3.c:92281:12
func _1960exprCodeSubselect(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pExpr uintptr /* *TExpr = SExpr */) (r int32) {
	var _reg int32

	_reg = int32(0)
	if int32(*(*uint8)(unsafe.Pointer(_pExpr))) != int32(119) {
		goto _1
	}

	_reg = _1868sqlite3CodeSubselect(tls, _pParse, _pExpr, int32(0), int32(0))
_1:
	return _reg
}

// _1961exprVectorRegister is defined at sqlite3.c:92309:12
func _1961exprVectorRegister(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pVector uintptr /* *TExpr = SExpr */, _iField int32, _regSelect int32, _ppExpr uintptr /* **TExpr = SExpr */, _pRegFree uintptr /* *int32 */) (r int32) {
	var _op uint8

	_op = *(*uint8)(unsafe.Pointer(_pVector))

	if int32(_op) != int32(150) {
		goto _1
	}

	*(*uintptr)(unsafe.Pointer(_ppExpr)) = _1938sqlite3VectorFieldSubexpr(tls, _pVector, _iField)
	return (*(*int32)(unsafe.Pointer(_pVector + 44))) + _iField

_1:
	if int32(_op) != int32(119) {
		goto _2
	}

	*(*uintptr)(unsafe.Pointer(_ppExpr)) = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pVector + 32))))) + 8) + 32*uintptr(_iField)))
	return _regSelect + _iField

_2:
	*(*uintptr)(unsafe.Pointer(_ppExpr)) = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pVector + 32))) + 8) + 32*uintptr(_iField)))
	return _1804sqlite3ExprCodeTemp(tls, _pParse, *(*uintptr)(unsafe.Pointer(_ppExpr)), _pRegFree)
}

// _1962sqlite3SetHasNullFlag is defined at sqlite3.c:93931:13
func _1962sqlite3SetHasNullFlag(tls crt.TLS, _v uintptr /* *TVdbe = SVdbe */, _iCur int32, _regHasNull int32) {
	var _addr1 int32

	_1240sqlite3VdbeAddOp2(tls, _v, int32(67), int32(0), _regHasNull)
	_addr1 = _1489sqlite3VdbeAddOp1(tls, _v, int32(37), _iCur)
	_1241sqlite3VdbeAddOp3(tls, _v, int32(96), _iCur, int32(0), _regHasNull)
	_1072sqlite3VdbeChangeP5(tls, _v, uint16(0x80))
	_1474sqlite3VdbeJumpHere(tls, _v, _addr1)
}

// _1963aEnc [3]uint8, escapes: true, sqlite3.c:105197:19
var _1963aEnc = ds + 17736

// _1964sqlite3WalkSelectExpr is defined at sqlite3.c:90190:20
func _1964sqlite3WalkSelectExpr(tls crt.TLS, _pWalker uintptr /* *TWalker = SWalker */, _p uintptr /* *TSelect = SSelect */) (r int32) {
	if _1943sqlite3WalkExprList(tls, _pWalker, *(*uintptr)(unsafe.Pointer(_p))) == 0 {
		goto _1
	}

	return int32(2)

_1:
	if _1795sqlite3WalkExpr(tls, _pWalker, *(*uintptr)(unsafe.Pointer(_p + 40))) == 0 {
		goto _2
	}

	return int32(2)

_2:
	if _1943sqlite3WalkExprList(tls, _pWalker, *(*uintptr)(unsafe.Pointer(_p + 48))) == 0 {
		goto _3
	}

	return int32(2)

_3:
	if _1795sqlite3WalkExpr(tls, _pWalker, *(*uintptr)(unsafe.Pointer(_p + 56))) == 0 {
		goto _4
	}

	return int32(2)

_4:
	if _1943sqlite3WalkExprList(tls, _pWalker, *(*uintptr)(unsafe.Pointer(_p + 64))) == 0 {
		goto _5
	}

	return int32(2)

_5:
	if _1795sqlite3WalkExpr(tls, _pWalker, *(*uintptr)(unsafe.Pointer(_p + 88))) == 0 {
		goto _6
	}

	return int32(2)

_6:
	if _1795sqlite3WalkExpr(tls, _pWalker, *(*uintptr)(unsafe.Pointer(_p + 96))) == 0 {
		goto _7
	}

	return int32(2)

_7:
	return int32(0)
}

// _1965sqlite3WalkSelectFrom is defined at sqlite3.c:90208:20
func _1965sqlite3WalkSelectFrom(tls crt.TLS, _pWalker uintptr /* *TWalker = SWalker */, _p uintptr /* *TSelect = SSelect */) (r int32) {
	var (
		_pSrc  uintptr // *TSrcList = SSrcList
		_i     int32
		_pItem uintptr // *SSrcList_item
	)
	_pSrc = *(*uintptr)(unsafe.Pointer(_p + 32))
	if _pSrc == 0 {
		goto _1
	}

	_i = *(*int32)(unsafe.Pointer(_pSrc))
	_pItem = _pSrc + 8
_2:
	if _i <= int32(0) {
		goto _4
	}

	if (*(*uintptr)(unsafe.Pointer(_pItem + 40))) == 0 || _1881sqlite3WalkSelect(tls, _pWalker, *(*uintptr)(unsafe.Pointer(_pItem + 40))) == 0 {
		goto _5
	}

	return int32(2)

_5:
	if (uint32((*(*uint8)(unsafe.Pointer((_pItem + 60) + 1)))>>2)<<31>>31) == 0 || _1943sqlite3WalkExprList(tls, _pWalker, *(*uintptr)(unsafe.Pointer(_pItem + 96))) == 0 {
		goto _6
	}

	return int32(2)

_6:
	_i--
	_pItem += 112
	goto _2

_4:
_1:
	return int32(0)
}

// _1966withExpand is defined at sqlite3.c:121859:12
func _1966withExpand(tls crt.TLS, _pWalker uintptr /* *TWalker = SWalker */, _pFrom uintptr /* *SSrcList_item */) (r int32) {
	esc := crt.MustMalloc(8)
	var (
		_pParse        uintptr // *TParse = SParse
		_db            uintptr // *Tsqlite3 = Ssqlite3
		_pCte          uintptr // *SCte
		_pWith         = esc   // **TWith = SWith
		_pTab          uintptr // *TTable = STable
		_pEList        uintptr // *TExprList = SExprList
		_pSel          uintptr // *TSelect = SSelect
		_pLeft         uintptr // *TSelect = SSelect
		_bMayRecursive int32
		_pSavedWith    uintptr // *TWith = SWith
		_i             int32
		_pSrc          uintptr // *TSrcList = SSrcList
		_pItem         uintptr // *SSrcList_item
		_pPrior        uintptr // *TSelect = SSelect
	)
	defer crt.Free(esc)
	_pParse = *(*uintptr)(unsafe.Pointer(_pWalker))
	_db = *(*uintptr)(unsafe.Pointer(_pParse))

	_pCte = _2027searchWith(tls, *(*uintptr)(unsafe.Pointer(_pParse + 576)), _pFrom, _pWith)
	if _pCte == 0 {
		goto _1
	}

	if (*(*uintptr)(unsafe.Pointer(_pCte + 24))) == 0 {
		goto _2
	}

	_550sqlite3ErrorMsg(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pCte + 24)), *(*uintptr)(unsafe.Pointer(_pCte)))
	return int32(1)

_2:
	if _1967cannotBeFunction(tls, _pParse, _pFrom) == 0 {
		goto _3
	}

	return int32(1)

_3:
	*(*uintptr)(unsafe.Pointer(_pFrom + 32)) = set4(&_pTab, _295sqlite3DbMallocZero(tls, _db, uint64(128)))
	if _pTab != 0 {
		goto _4
	}

	return int32(2)

_4:
	*(*uint32)(unsafe.Pointer(_pTab + 60)) = uint32(1)
	*(*uintptr)(unsafe.Pointer(_pTab)) = _183sqlite3DbStrDup(tls, _db, *(*uintptr)(unsafe.Pointer(_pCte)))
	*(*int16)(unsafe.Pointer(_pTab + 68)) = int16(-1)
	*(*int16)(unsafe.Pointer(_pTab + 72)) = int16(200)

	{
		p := &(*(*uint32)(unsafe.Pointer(_pTab + 64)))
		*p = uint32(uint32(*p) | uint32(66))
	}
	*(*uintptr)(unsafe.Pointer(_pFrom + 40)) = _1529sqlite3SelectDup(tls, _db, *(*uintptr)(unsafe.Pointer(_pCte + 16)), int32(0))
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _5
	}

	return int32(7)

_5:
	_pSel = *(*uintptr)(unsafe.Pointer(_pFrom + 40))
	_bMayRecursive = bool2int((int32(*(*uint8)(unsafe.Pointer(_pSel + 8))) == int32(116)) || (int32(*(*uint8)(unsafe.Pointer(_pSel + 8))) == int32(115)))
	if _bMayRecursive == 0 {
		goto _6
	}

	_pSrc = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pFrom + 40))) + 32))
	_i = int32(0)
_7:
	if _i >= (*(*int32)(unsafe.Pointer(_pSrc))) {
		goto _9
	}

	_pItem = (_pSrc + 8) + 112*uintptr(_i)
	if (*(*uintptr)(unsafe.Pointer(_pItem + 8))) != 0 || (*(*uintptr)(unsafe.Pointer(_pItem + 16))) == 0 || int32(0) != _110sqlite3StrICmp(tls, *(*uintptr)(unsafe.Pointer(_pItem + 16)), *(*uintptr)(unsafe.Pointer(_pCte))) {
		goto _10
	}

	*(*uintptr)(unsafe.Pointer(_pItem + 32)) = _pTab
	set206b(&(*(*uint8)(unsafe.Pointer((_pItem + 60) + 1))), uint32(1))
	(*(*uint32)(unsafe.Pointer(_pTab + 60)))++
	{
		p := &(*(*uint32)(unsafe.Pointer(_pSel + 12)))
		*p = uint32(uint32(*p) | uint32(0x2000))
	}
_10:
	_i++
	goto _7

_9:
_6:
	if (*(*uint32)(unsafe.Pointer(_pTab + 60))) <= uint32(2) {
		goto _11
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+33426 /* "multiple references to recursive..." */, *(*uintptr)(unsafe.Pointer(_pCte)))
	return int32(1)

_11:
	*(*uintptr)(unsafe.Pointer(_pCte + 24)) = ts + 33469 /* "circular reference: %s" */
	_pSavedWith = *(*uintptr)(unsafe.Pointer(_pParse + 576))
	*(*uintptr)(unsafe.Pointer(_pParse + 576)) = *(*uintptr)(unsafe.Pointer(_pWith))
	if _bMayRecursive == 0 {
		goto _12
	}

	_pPrior = *(*uintptr)(unsafe.Pointer(_pSel + 72))

	*(*uintptr)(unsafe.Pointer(_pPrior + 104)) = *(*uintptr)(unsafe.Pointer(_pSel + 104))
	_1881sqlite3WalkSelect(tls, _pWalker, _pPrior)
	*(*uintptr)(unsafe.Pointer(_pPrior + 104)) = null
	goto _13

_12:
	_1881sqlite3WalkSelect(tls, _pWalker, _pSel)
_13:
	*(*uintptr)(unsafe.Pointer(_pParse + 576)) = *(*uintptr)(unsafe.Pointer(_pWith))
	_pLeft = _pSel
_14:
	if (*(*uintptr)(unsafe.Pointer(_pLeft + 72))) == 0 {
		goto _16
	}

	_pLeft = *(*uintptr)(unsafe.Pointer(_pLeft + 72))
	goto _14

_16:
	_pEList = *(*uintptr)(unsafe.Pointer(_pLeft))
	if (*(*uintptr)(unsafe.Pointer(_pCte + 8))) == 0 {
		goto _17
	}

	if _pEList == 0 || (*(*int32)(unsafe.Pointer(_pEList))) == (*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pCte + 8))))) {
		goto _18
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+33492 /* "table %s has %d values for %d co..." */, *(*uintptr)(unsafe.Pointer(_pCte)), *(*int32)(unsafe.Pointer(_pEList)), *(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pCte + 8)))))
	*(*uintptr)(unsafe.Pointer(_pParse + 576)) = _pSavedWith
	return int32(1)

_18:
	_pEList = *(*uintptr)(unsafe.Pointer(_pCte + 8))
_17:
	_1731sqlite3ColumnsFromExprList(tls, _pParse, _pEList, _pTab+70, _pTab+8)
	if _bMayRecursive == 0 {
		goto _19
	}

	if ((*(*uint32)(unsafe.Pointer(_pSel + 12))) & uint32(0x2000)) == 0 {
		goto _20
	}

	*(*uintptr)(unsafe.Pointer(_pCte + 24)) = ts + 33530 /* "multiple recursive references: %..." */
	goto _21

_20:
	*(*uintptr)(unsafe.Pointer(_pCte + 24)) = ts + 33564 /* "recursive reference in a subquer..." */
_21:
	_1881sqlite3WalkSelect(tls, _pWalker, _pSel)
_19:
	*(*uintptr)(unsafe.Pointer(_pCte + 24)) = null
	*(*uintptr)(unsafe.Pointer(_pParse + 576)) = _pSavedWith
_1:
	return int32(0)
}

// _1967cannotBeFunction is defined at sqlite3.c:121784:12
func _1967cannotBeFunction(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pFrom uintptr /* *SSrcList_item */) (r int32) {
	if (uint32((*(*uint8)(unsafe.Pointer((_pFrom + 60) + 1)))>>2) << 31 >> 31) == 0 {
		goto _1
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+33602 /* "'%s' is not a function" */, *(*uintptr)(unsafe.Pointer(_pFrom + 16)))
	return int32(1)

_1:
	return int32(0)
}

// _1968sqliteProcessJoin is defined at sqlite3.c:118092:12
func _1968sqliteProcessJoin(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _p uintptr /* *TSelect = SSelect */) (r int32) {
	esc := crt.MustMalloc(52)
	var (
		_pSrc      uintptr // *TSrcList = SSrcList
		_i         int32
		_j         int32
		_pLeft     uintptr // *SSrcList_item
		_pRight    uintptr // *SSrcList_item
		_pRightTab uintptr // *TTable = STable
		_isOuter   int32
		_zName     uintptr    // *int8
		_iLeft     = esc      // *int32
		_iLeftCol  = esc + 16 // *int32
		_pList     uintptr    // *TIdList = SIdList
		_1zName    uintptr    // *int8
		_2iLeft    = esc + 32 // *int32
		_3iLeftCol = esc + 48 // *int32
		_iRightCol int32
	)
	defer crt.Free(esc)
	_pSrc = *(*uintptr)(unsafe.Pointer(_p + 32))
	_pLeft = _pSrc + 8
	_pRight = _pLeft + 112
	_i = int32(0)
_1:
	if _i >= ((*(*int32)(unsafe.Pointer(_pSrc))) - int32(1)) {
		goto _3
	}

	_pRightTab = *(*uintptr)(unsafe.Pointer(_pRight + 32))
	if (*(*uintptr)(unsafe.Pointer(_pLeft + 32))) != 0 && _pRightTab != 0 {
		goto _4
	}

	goto _2

_4:
	_isOuter = bool2int((int32(*(*uint8)(unsafe.Pointer(_pRight + 60))) & int32(0x20)) != int32(0))
	if (int32(*(*uint8)(unsafe.Pointer(_pRight + 60))) & int32(0x4)) == 0 {
		goto _5
	}

	if (*(*uintptr)(unsafe.Pointer(_pRight + 72))) == 0 && (*(*uintptr)(unsafe.Pointer(_pRight + 80))) == 0 {
		goto _6
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+33625 /* "a NATURAL join may not have an O..." */, int32(0))
	return int32(1)

_6:
	_j = int32(0)
_7:
	if _j >= int32(*(*int16)(unsafe.Pointer(_pRightTab + 70))) {
		goto _9
	}

	_zName = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pRightTab + 8))) + 32*uintptr(_j)))
	if _1970tableAndColumnIndex(tls, _pSrc, _i+int32(1), _zName, _iLeft, _iLeftCol) == 0 {
		goto _10
	}

	_2028addWhereTerm(tls, _pParse, _pSrc, *(*int32)(unsafe.Pointer(_iLeft)), *(*int32)(unsafe.Pointer(_iLeftCol)), _i+int32(1), _j, _isOuter, _p+40)
_10:
	_j++
	goto _7

_9:
_5:
	if (*(*uintptr)(unsafe.Pointer(_pRight + 72))) == 0 || (*(*uintptr)(unsafe.Pointer(_pRight + 80))) == 0 {
		goto _11
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+33675 /* "cannot have both ON and USING cl..." */)
	return int32(1)

_11:
	if (*(*uintptr)(unsafe.Pointer(_pRight + 72))) == 0 {
		goto _12
	}

	if _isOuter == 0 {
		goto _13
	}

	_1755setJoinExpr(tls, *(*uintptr)(unsafe.Pointer(_pRight + 72)), *(*int32)(unsafe.Pointer(_pRight + 64)))
_13:
	*(*uintptr)(unsafe.Pointer(_p + 40)) = _1508sqlite3ExprAnd(tls, *(*uintptr)(unsafe.Pointer(_pParse)), *(*uintptr)(unsafe.Pointer(_p + 40)), *(*uintptr)(unsafe.Pointer(_pRight + 72)))
	*(*uintptr)(unsafe.Pointer(_pRight + 72)) = null
_12:
	if (*(*uintptr)(unsafe.Pointer(_pRight + 80))) == 0 {
		goto _14
	}

	_pList = *(*uintptr)(unsafe.Pointer(_pRight + 80))
	_j = int32(0)
_15:
	if _j >= (*(*int32)(unsafe.Pointer(_pList + 8))) {
		goto _17
	}

	_1zName = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pList))) + 16*uintptr(_j)))
	_iRightCol = _2029columnIndex(tls, _pRightTab, _1zName)
	if _iRightCol >= int32(0) && _1970tableAndColumnIndex(tls, _pSrc, _i+int32(1), _1zName, _2iLeft, _3iLeftCol) != 0 {
		goto _18
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+33730 /* "cannot join using column %s - co..." */, _1zName)
	return int32(1)

_18:
	_2028addWhereTerm(tls, _pParse, _pSrc, *(*int32)(unsafe.Pointer(_2iLeft)), *(*int32)(unsafe.Pointer(_3iLeftCol)), _i+int32(1), _iRightCol, _isOuter, _p+40)
	_j++
	goto _15

_17:
_14:
_2:
	_i++
	_pRight += 112
	_pLeft += 112
	goto _1

_3:
	return int32(0)
}

// _1969sqlite3MatchSpanName is defined at sqlite3.c:90394:20
func _1969sqlite3MatchSpanName(tls crt.TLS, _zSpan uintptr /* *int8 */, _zCol uintptr /* *int8 */, _zTab uintptr /* *int8 */, _zDb uintptr /* *int8 */) (r int32) {
	var _n int32

	_n = int32(0)
_1:
	if *(*int8)(unsafe.Pointer(_zSpan + uintptr(_n))) == 0 || int32(*(*int8)(unsafe.Pointer(_zSpan + uintptr(_n)))) == int32('.') {
		goto _3
	}

	_n++
	goto _1

_3:
	if _zDb == 0 || Xsqlite3_strnicmp(tls, _zSpan, _zDb, _n) == int32(0) && int32(*(*int8)(unsafe.Pointer(_zDb + uintptr(_n)))) == int32(0) {
		goto _4
	}

	return int32(0)

_4:
	_zSpan += uintptr(_n + int32(1))
	_n = int32(0)
_5:
	if *(*int8)(unsafe.Pointer(_zSpan + uintptr(_n))) == 0 || int32(*(*int8)(unsafe.Pointer(_zSpan + uintptr(_n)))) == int32('.') {
		goto _7
	}

	_n++
	goto _5

_7:
	if _zTab == 0 || Xsqlite3_strnicmp(tls, _zSpan, _zTab, _n) == int32(0) && int32(*(*int8)(unsafe.Pointer(_zTab + uintptr(_n)))) == int32(0) {
		goto _8
	}

	return int32(0)

_8:
	_zSpan += uintptr(_n + int32(1))
	if _zCol == 0 || _110sqlite3StrICmp(tls, _zSpan, _zCol) == int32(0) {
		goto _9
	}

	return int32(0)

_9:
	return int32(1)
}

// _1970tableAndColumnIndex is defined at sqlite3.c:117967:12
func _1970tableAndColumnIndex(tls crt.TLS, _pSrc uintptr /* *TSrcList = SSrcList */, _N int32, _zCol uintptr /* *int8 */, _piTab uintptr /* *int32 */, _piCol uintptr /* *int32 */) (r int32) {
	var (
		_i    int32
		_iCol int32
	)

	_i = int32(0)
_1:
	if _i >= _N {
		goto _3
	}

	_iCol = _2029columnIndex(tls, *(*uintptr)(unsafe.Pointer(((_pSrc + 8) + 112*uintptr(_i)) + 32)), _zCol)
	if _iCol < int32(0) {
		goto _4
	}

	if _piTab == 0 {
		goto _5
	}

	*(*int32)(unsafe.Pointer(_piTab)) = _i
	*(*int32)(unsafe.Pointer(_piCol)) = _iCol
_5:
	return int32(1)

_4:
	_i++
	goto _1

_3:
	return int32(0)
}

// _1971sqlite3ExprAddCollateString is defined at sqlite3.c:91898:21
func _1971sqlite3ExprAddCollateString(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pExpr uintptr /* *TExpr = SExpr */, _zC uintptr /* *int8 */) (r uintptr /* *TExpr = SExpr */) {
	esc := crt.MustMalloc(16)
	var _s = esc // *TToken = SToken
	defer crt.Free(esc)

	_1516sqlite3TokenInit(tls, _s, _zC)
	return _1352sqlite3ExprAddCollateToken(tls, _pParse, _pExpr, _s, int32(0))
}

// _1972resolveOutOfRangeError is defined at sqlite3.c:91190:13
func _1972resolveOutOfRangeError(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _zType uintptr /* *int8 */, _i int32, _mx int32) {
	_550sqlite3ErrorMsg(tls, _pParse, ts+33794 /* "%r %s BY term out of range - sho..." */, _i, _zType, _mx)
}

// _1973resolveAlias is defined at sqlite3.c:90328:13
func _1973resolveAlias(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pEList uintptr /* *TExprList = SExprList */, _iCol int32, _pExpr uintptr /* *TExpr = SExpr */, _zType uintptr /* *int8 */, _nSubquery int32) {
	var (
		_pOrig uintptr // *TExpr = SExpr
		_pDup  uintptr // *TExpr = SExpr
		_db    uintptr // *Tsqlite3 = Ssqlite3
	)

	_pOrig = *(*uintptr)(unsafe.Pointer((_pEList + 8) + 32*uintptr(_iCol)))

	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_pDup = _1507sqlite3ExprDup(tls, _db, _pOrig, int32(0))
	if _pDup != 0 {
		goto _1
	}

	return

_1:
	if int32(*(*int8)(unsafe.Pointer(_zType))) == int32('G') {
		goto _2
	}

	_2030incrAggFunctionDepth(tls, _pDup, _nSubquery)
_2:
	if int32(*(*uint8)(unsafe.Pointer(_pExpr))) != int32(94) {
		goto _3
	}

	_pDup = _1971sqlite3ExprAddCollateString(tls, _pParse, _pDup, *(*uintptr)(unsafe.Pointer(_pExpr + 8)))
_3:
	{
		p := &(*(*uint32)(unsafe.Pointer(_pDup + 4)))
		*p = uint32(uint32(*p) | uint32(0x400000))
	}
	{
		p := &(*(*uint32)(unsafe.Pointer(_pExpr + 4)))
		*p = uint32(uint32(*p) | uint32(0x8000))
	}
	_777sqlite3ExprDelete(tls, _db, _pExpr)
	crt.Xmemcpy(tls, _pExpr, _pDup, uint64(72))
	if ((*(*uint32)(unsafe.Pointer(_pExpr + 4)))&uint32(0x400)) != uint32(0) || (*(*uintptr)(unsafe.Pointer(_pExpr + 8))) == 0 {
		goto _4
	}

	*(*uintptr)(unsafe.Pointer(_pExpr + 8)) = _183sqlite3DbStrDup(tls, _db, *(*uintptr)(unsafe.Pointer(_pExpr + 8)))
	{
		p := &(*(*uint32)(unsafe.Pointer(_pExpr + 4)))
		*p = uint32(uint32(*p) | uint32(0x10000))
	}
_4:
	_181sqlite3DbFree(tls, _db, _pDup)
}

// _1974sqlite3VdbeSetVarmask is defined at sqlite3.c:76768:21
func _1974sqlite3VdbeSetVarmask(tls crt.TLS, _v uintptr /* *TVdbe = SVdbe */, _iVar int32) {
	if _iVar < int32(32) {
		goto _1
	}

	{
		p := &(*(*uint32)(unsafe.Pointer(_v + 268)))
		*p = uint32(uint32(*p) | uint32(0x80000000))
	}
	goto _2

_1:
	{
		p := &(*(*uint32)(unsafe.Pointer(_v + 268)))
		*p = uint32(uint32(*p) | (uint32(1) << (uint(_iVar-int32(1)) % 32)))
	}
_2:
}

// _1975sqlite3VdbeGetBoundValue is defined at sqlite3.c:76746:30
func _1975sqlite3VdbeGetBoundValue(tls crt.TLS, _v uintptr /* *TVdbe = SVdbe */, _iVar int32, _aff uint8) (r uintptr /* *Tsqlite3_value = Ssqlite3_value */) {
	var (
		_pMem uintptr // *TMem = Ssqlite3_value
		_pRet uintptr // *Tsqlite3_value = Ssqlite3_value
	)

	if _v == 0 {
		goto _1
	}

	_pMem = (*(*uintptr)(unsafe.Pointer(_v + 160))) + 56*uintptr(_iVar-int32(1))

	if int32(0) != (int32(*(*uint16)(unsafe.Pointer(_pMem + 8))) & int32(0x1)) {
		goto _2
	}

	_pRet = _314sqlite3ValueNew(tls, *(*uintptr)(unsafe.Pointer(_v)))
	if _pRet == 0 {
		goto _3
	}

	_298sqlite3VdbeMemCopy(tls, _pRet, _pMem)
	_945sqlite3ValueApplyAffinity(tls, _pRet, _aff, uint8(1))
_3:
	return _pRet

_2:
_1:
	return null
}

type SWhereOrCost struct {
	Xprereq uint64
	XrRun   int16
	XnOut   int16
}

// _1976ops [2]uint8, escapes: true, sqlite3.c:131381:21
var _1976ops = ds + 17739

// _1977exprSelectUsage is defined at sqlite3.c:131141:16
func _1977exprSelectUsage(tls crt.TLS, _pMaskSet uintptr /* *TWhereMaskSet = SWhereMaskSet */, _pS uintptr /* *TSelect = SSelect */) (r uint64) {
	var (
		_mask uint64
		_pSrc uintptr // *TSrcList = SSrcList
		_i    int32
	)
	_mask = uint64(0)
_1:
	if _pS == 0 {
		goto _2
	}

	_pSrc = *(*uintptr)(unsafe.Pointer(_pS + 32))
	_mask = uint64(_mask | _1783sqlite3WhereExprListUsage(tls, _pMaskSet, *(*uintptr)(unsafe.Pointer(_pS))))
	_mask = uint64(_mask | _1783sqlite3WhereExprListUsage(tls, _pMaskSet, *(*uintptr)(unsafe.Pointer(_pS + 48))))
	_mask = uint64(_mask | _1783sqlite3WhereExprListUsage(tls, _pMaskSet, *(*uintptr)(unsafe.Pointer(_pS + 64))))
	_mask = uint64(_mask | _1907sqlite3WhereExprUsage(tls, _pMaskSet, *(*uintptr)(unsafe.Pointer(_pS + 40))))
	_mask = uint64(_mask | _1907sqlite3WhereExprUsage(tls, _pMaskSet, *(*uintptr)(unsafe.Pointer(_pS + 56))))
	if _pSrc == 0 {
		goto _3
	}

	_i = int32(0)
_4:
	if _i >= (*(*int32)(unsafe.Pointer(_pSrc))) {
		goto _6
	}

	_mask = uint64(_mask | _1977exprSelectUsage(tls, _pMaskSet, *(*uintptr)(unsafe.Pointer(((_pSrc + 8) + 112*uintptr(_i)) + 40))))
	_mask = uint64(_mask | _1907sqlite3WhereExprUsage(tls, _pMaskSet, *(*uintptr)(unsafe.Pointer(((_pSrc + 8) + 112*uintptr(_i)) + 72))))
	_i++
	goto _4

_6:
_3:
	_pS = *(*uintptr)(unsafe.Pointer(_pS + 72))
	goto _1

_2:
	return _mask
}

// _1978allowedOp is defined at sqlite3.c:130377:12
func _1978allowedOp(tls crt.TLS, _op int32) (r int32) {
	return bool2int((((_op == int32(49)) || ((_op >= int32(53)) && (_op <= int32(57)))) || (_op == int32(50))) || (_op == int32(45)))
}

// _1979exprMightBeIndexed is defined at sqlite3.c:131199:12
func _1979exprMightBeIndexed(tls crt.TLS, _pFrom uintptr /* *TSrcList = SSrcList */, _mPrereq uint64, _aiCurCol uintptr /* *int32 */, _pExpr uintptr /* *TExpr = SExpr */, _op int32) (r int32) {
	if int32(*(*uint8)(unsafe.Pointer(_pExpr))) != int32(151) || (_op < int32(54) || _op > int32(57)) {
		goto _1
	}

	_pExpr = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pExpr + 32))) + 8))
_1:
	if int32(*(*uint8)(unsafe.Pointer(_pExpr))) != int32(145) {
		goto _2
	}

	*(*int32)(unsafe.Pointer(_aiCurCol)) = *(*int32)(unsafe.Pointer(_pExpr + 44))
	*(*int32)(unsafe.Pointer(_aiCurCol + 4)) = int32(*(*int16)(unsafe.Pointer(_pExpr + 48)))
	return int32(1)

_2:
	if _mPrereq != uint64(0) {
		goto _3
	}

	return int32(0)

_3:
	if (_mPrereq & (_mPrereq - uint64(1))) == uint64(0) {
		goto _4
	}

	return int32(0)

_4:
	return _2031exprMightBeIndexed2(tls, _pFrom, _mPrereq, _aiCurCol, _pExpr)
}

// _1980operatorMask is defined at sqlite3.c:130428:12
func _1980operatorMask(tls crt.TLS, _op int32) (r uint16) {
	var _c uint16

	if _op != int32(49) {
		goto _1
	}

	_c = uint16(0x1)
	goto _2

_1:
	if _op != int32(50) {
		goto _3
	}

	_c = uint16(0x100)
	goto _4

_3:
	if _op != int32(45) {
		goto _5
	}

	_c = uint16(0x80)
	goto _6

_5:
	_c = uint16(int32(0x2) << (uint(_op-int32(53)) % 32))
_6:
_4:
_2:
	return _c
}

// _1981markTermAsChild is defined at sqlite3.c:130688:13
func _1981markTermAsChild(tls crt.TLS, _pWC uintptr /* *TWhereClause = SWhereClause */, _iChild int32, _iParent int32) {
	*(*int32)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pWC + 32))) + 64*uintptr(_iChild)) + 24)) = _iParent
	*(*int16)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pWC + 32))) + 64*uintptr(_iChild)) + 16)) = *(*int16)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pWC + 32))) + 64*uintptr(_iParent)) + 16))
	(*(*uint8)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pWC + 32))) + 64*uintptr(_iParent)) + 22)))++
}

// _1982termIsEquivalence is defined at sqlite3.c:131118:12
func _1982termIsEquivalence(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pExpr uintptr /* *TExpr = SExpr */) (r int32) {
	var (
		_aff1  int8
		_aff2  int8
		_pColl uintptr // *TCollSeq = SCollSeq
	)
	if (int32(*(*uint16)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pParse)) + 92))) & int32(0x80)) == int32(0) {
		goto _1
	}

	return int32(0)

_1:
	if int32(*(*uint8)(unsafe.Pointer(_pExpr))) == int32(53) || int32(*(*uint8)(unsafe.Pointer(_pExpr))) == int32(45) {
		goto _2
	}

	return int32(0)

_2:
	if ((*(*uint32)(unsafe.Pointer(_pExpr + 4))) & uint32(0x1)) == uint32(0) {
		goto _3
	}

	return int32(0)

_3:
	_aff1 = _1817sqlite3ExprAffinity(tls, *(*uintptr)(unsafe.Pointer(_pExpr + 16)))
	_aff2 = _1817sqlite3ExprAffinity(tls, *(*uintptr)(unsafe.Pointer(_pExpr + 24)))
	if int32(_aff1) == int32(_aff2) || int32(_aff1) >= int32('C') && int32(_aff2) >= int32('C') {
		goto _4
	}

	return int32(0)

_4:
	_pColl = _1910sqlite3BinaryCompareCollSeq(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pExpr + 16)), *(*uintptr)(unsafe.Pointer(_pExpr + 24)))
	if _pColl != 0 && _110sqlite3StrICmp(tls, *(*uintptr)(unsafe.Pointer(_pColl)), ts+20082 /* "BINARY" */) != int32(0) {
		goto _5
	}

	return int32(1)

_5:
	return _2001sqlite3ExprCollSeqMatch(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pExpr + 16)), *(*uintptr)(unsafe.Pointer(_pExpr + 24)))
}

// _1983exprCommute is defined at sqlite3.c:130397:13
func _1983exprCommute(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pExpr uintptr /* *TExpr = SExpr */) {
	var (
		_expRight uint16
		_expLeft  uint16
		_t        uintptr // *TExpr = SExpr
	)
	_expRight = uint16((*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pExpr + 24))) + 4))) & uint32(0x100))
	_expLeft = uint16((*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pExpr + 16))) + 4))) & uint32(0x100))

	if int32(_expRight) != int32(_expLeft) {
		goto _1
	}

	if _expRight == 0 {
		goto _2
	}

	{
		p := &(*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pExpr + 24))) + 4)))
		*p = uint32(uint32(*p) & uint32(4294967039))
	}
	goto _3

_2:
	if _1789sqlite3ExprCollSeq(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pExpr + 16))) == 0 {
		goto _4
	}

	{
		p := &(*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pExpr + 16))) + 4)))
		*p = uint32(uint32(*p) | uint32(0x100))
	}
_4:
_3:
_1:
	_t = *(*uintptr)(unsafe.Pointer(_pExpr + 24))
	*(*uintptr)(unsafe.Pointer(_pExpr + 24)) = *(*uintptr)(unsafe.Pointer(_pExpr + 16))
	*(*uintptr)(unsafe.Pointer(_pExpr + 16)) = _t
	if int32(*(*uint8)(unsafe.Pointer(_pExpr))) < int32(54) {
		goto _5
	}

	*(*uint8)(unsafe.Pointer(_pExpr)) = uint8(((int32(*(*uint8)(unsafe.Pointer(_pExpr))) - int32(54)) ^ int32(2)) + int32(54))
_5:
}

// _1984transferJoinMarkings is defined at sqlite3.c:130678:13
func _1984transferJoinMarkings(tls crt.TLS, _pDerived uintptr /* *TExpr = SExpr */, _pBase uintptr /* *TExpr = SExpr */) {
	if _pDerived == 0 {
		goto _1
	}

	{
		p := &(*(*uint32)(unsafe.Pointer(_pDerived + 4)))
		*p = uint32(uint32(*p) | ((*(*uint32)(unsafe.Pointer(_pBase + 4))) & uint32(0x1)))
	}
	*(*int16)(unsafe.Pointer(_pDerived + 52)) = *(*int16)(unsafe.Pointer(_pBase + 52))
_1:
}

// _1985exprAnalyzeOrTerm is defined at sqlite3.c:130855:13
func _1985exprAnalyzeOrTerm(tls crt.TLS, _pSrc uintptr /* *TSrcList = SSrcList */, _pWC uintptr /* *TWhereClause = SWhereClause */, _idxTerm int32) {
	var (
		_pWInfo       uintptr // *TWhereInfo = SWhereInfo
		_pParse       uintptr // *TParse = SParse
		_db           uintptr // *Tsqlite3 = Ssqlite3
		_pTerm        uintptr // *TWhereTerm = SWhereTerm
		_pExpr        uintptr // *TExpr = SExpr
		_i            int32
		_pOrWc        uintptr // *TWhereClause = SWhereClause
		_pOrTerm      uintptr // *TWhereTerm = SWhereTerm
		_pOrInfo      uintptr // *TWhereOrInfo = SWhereOrInfo
		_chngToIN     uint64
		_indexable    uint64
		_pAndInfo     uintptr // *TWhereAndInfo = SWhereAndInfo
		_pAndWC       uintptr // *TWhereClause = SWhereClause
		_pAndTerm     uintptr // *TWhereTerm = SWhereTerm
		_j            int32
		_b            uint64
		_1b           uint64
		_pOther       uintptr // *TWhereTerm = SWhereTerm
		_iOne         int32
		_pOne         uintptr // *TWhereTerm = SWhereTerm
		_iTwo         int32
		_pTwo         uintptr // *TWhereTerm = SWhereTerm
		_okToChngToIN int32
		_iColumn      int32
		_iCursor      int32
		_2j           int32
		_affLeft      int32
		_affRight     int32
		_pDup         uintptr // *TExpr = SExpr
		_pList        uintptr // *TExprList = SExprList
		_pLeft        uintptr // *TExpr = SExpr
		_pNew         uintptr // *TExpr = SExpr
		_idxNew       int32
	)
	_pWInfo = *(*uintptr)(unsafe.Pointer(_pWC))
	_pParse = *(*uintptr)(unsafe.Pointer(_pWInfo))
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_pTerm = (*(*uintptr)(unsafe.Pointer(_pWC + 32))) + 64*uintptr(_idxTerm)
	_pExpr = *(*uintptr)(unsafe.Pointer(_pTerm))

	*(*uintptr)(unsafe.Pointer(_pTerm + 40)) = set4(&_pOrInfo, _295sqlite3DbMallocZero(tls, _db, uint64(560)))
	if _pOrInfo != 0 {
		goto _1
	}

	return

_1:
	{
		p := &(*(*uint16)(unsafe.Pointer(_pTerm + 18)))
		*p = uint16(int32(*p) | int32(0x10))
	}
	_pOrWc = _pOrInfo
	crt.Xmemset(tls, _pOrWc+40, int32(0), uint64(512))
	_1773sqlite3WhereClauseInit(tls, _pOrWc, _pWInfo)
	_1774sqlite3WhereSplit(tls, _pOrWc, _pExpr, uint8(43))
	_1777sqlite3WhereExprAnalyze(tls, _pSrc, _pOrWc)
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _2
	}

	return

_2:
	_indexable = uint64(18446744073709551615)
	_chngToIN = uint64(18446744073709551615)
	_i = (*(*int32)(unsafe.Pointer(_pOrWc + 20))) - int32(1)
	_pOrTerm = *(*uintptr)(unsafe.Pointer(_pOrWc + 32))
_3:
	if _i < int32(0) || _indexable == 0 {
		goto _5
	}

	if (int32(*(*uint16)(unsafe.Pointer(_pOrTerm + 20))) & int32(0x1ff)) != int32(0) {
		goto _6
	}

	_chngToIN = uint64(0)
	_pAndInfo = _373sqlite3DbMallocRawNN(tls, _db, uint64(552))
	if _pAndInfo == 0 {
		goto _8
	}

	_b = uint64(0)
	*(*uintptr)(unsafe.Pointer(_pOrTerm + 40)) = _pAndInfo
	{
		p := &(*(*uint16)(unsafe.Pointer(_pOrTerm + 18)))
		*p = uint16(int32(*p) | int32(0x20))
	}
	*(*uint16)(unsafe.Pointer(_pOrTerm + 20)) = uint16(0x400)
	_pAndWC = _pAndInfo
	crt.Xmemset(tls, _pAndWC+40, int32(0), uint64(512))
	_1773sqlite3WhereClauseInit(tls, _pAndWC, *(*uintptr)(unsafe.Pointer(_pWC)))
	_1774sqlite3WhereSplit(tls, _pAndWC, *(*uintptr)(unsafe.Pointer(_pOrTerm)), uint8(44))
	_1777sqlite3WhereExprAnalyze(tls, _pSrc, _pAndWC)
	*(*uintptr)(unsafe.Pointer(_pAndWC + 8)) = _pWC
	if (*(*uint8)(unsafe.Pointer(_db + 97))) != 0 {
		goto _9
	}

	_j = int32(0)
	_pAndTerm = *(*uintptr)(unsafe.Pointer(_pAndWC + 32))
_10:
	if _j >= (*(*int32)(unsafe.Pointer(_pAndWC + 20))) {
		goto _12
	}

	if _1978allowedOp(tls, int32(*(*uint8)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pAndTerm)))))) == 0 && int32(*(*uint16)(unsafe.Pointer(_pAndTerm + 20))) != int32(0x40) {
		goto _13
	}

	_b = uint64(_b | _1900sqlite3WhereGetMask(tls, _pWInfo+656, *(*int32)(unsafe.Pointer(_pAndTerm + 28))))
_13:
	_j++
	_pAndTerm += 64
	goto _10

_12:
_9:
	_indexable = uint64(_indexable & _b)
_8:
	goto _7

_6:
	if (int32(*(*uint16)(unsafe.Pointer(_pOrTerm + 18))) & int32(0x8)) == 0 {
		goto _14
	}

	goto _15

_14:
	_1b = _1900sqlite3WhereGetMask(tls, _pWInfo+656, *(*int32)(unsafe.Pointer(_pOrTerm + 28)))
	if (int32(*(*uint16)(unsafe.Pointer(_pOrTerm + 18))) & int32(0x2)) == 0 {
		goto _16
	}

	_pOther = (*(*uintptr)(unsafe.Pointer(_pOrWc + 32))) + 64*uintptr(*(*int32)(unsafe.Pointer(_pOrTerm + 24)))
	_1b = uint64(_1b | _1900sqlite3WhereGetMask(tls, _pWInfo+656, *(*int32)(unsafe.Pointer(_pOther + 28))))
_16:
	_indexable = uint64(_indexable & _1b)
	if (int32(*(*uint16)(unsafe.Pointer(_pOrTerm + 20))) & int32(0x2)) != int32(0) {
		goto _17
	}

	_chngToIN = uint64(0)
	goto _18

_17:
	_chngToIN = uint64(_chngToIN & _1b)
_18:
_15:
_7:
	_i--
	_pOrTerm += 64
	goto _3

_5:
	*(*uint64)(unsafe.Pointer(_pOrInfo + 552)) = _indexable
	*(*uint16)(unsafe.Pointer(_pTerm + 20)) = uint16(func() int32 {
		if _indexable == uint64(0) {
			return int32(0)
		}
		return int32(0x200)
	}())
	if _indexable == 0 || (*(*int32)(unsafe.Pointer(_pOrWc + 20))) != int32(2) {
		goto _19
	}

	_iOne = int32(0)
_20:
	if set4(&_pOne, _2032whereNthSubterm(tls, *(*uintptr)(unsafe.Pointer(_pOrWc + 32)), postinc7(&_iOne))) == 0 {
		goto _21
	}

	_iTwo = int32(0)
_22:
	if set4(&_pTwo, _2032whereNthSubterm(tls, (*(*uintptr)(unsafe.Pointer(_pOrWc + 32)))+64, postinc7(&_iTwo))) == 0 {
		goto _23
	}

	_2033whereCombineDisjuncts(tls, _pSrc, _pWC, _pOne, _pTwo)
	goto _22

_23:
	goto _20

_21:
_19:
	if _chngToIN == 0 {
		goto _24
	}

	_okToChngToIN = int32(0)
	_iColumn = int32(-1)
	_iCursor = int32(-1)
	_2j = int32(0)
	_2j = int32(0)
_25:
	if _2j >= int32(2) || _okToChngToIN != 0 {
		goto _27
	}

	_pOrTerm = *(*uintptr)(unsafe.Pointer(_pOrWc + 32))
	_i = (*(*int32)(unsafe.Pointer(_pOrWc + 20))) - int32(1)
_28:
	if _i < int32(0) {
		goto _30
	}

	{
		p := &(*(*uint16)(unsafe.Pointer(_pOrTerm + 18)))
		*p = uint16(int32(*p) & int32(-65))
	}
	if (*(*int32)(unsafe.Pointer(_pOrTerm + 28))) != _iCursor {
		goto _31
	}

	goto _29

_31:
	if (_chngToIN & _1900sqlite3WhereGetMask(tls, _pWInfo+656, *(*int32)(unsafe.Pointer(_pOrTerm + 28)))) != uint64(0) {
		goto _32
	}

	goto _29

_32:
	_iColumn = *(*int32)(unsafe.Pointer(_pOrTerm + 40))
	_iCursor = *(*int32)(unsafe.Pointer(_pOrTerm + 28))
	goto _30

_29:
	_i--
	_pOrTerm += 64
	goto _28

_30:
	if _i >= int32(0) {
		goto _33
	}

	goto _27

_33:
	_okToChngToIN = int32(1)

_34:
	if _i < int32(0) || _okToChngToIN == 0 {
		goto _36
	}

	if (*(*int32)(unsafe.Pointer(_pOrTerm + 28))) == _iCursor {
		goto _37
	}

	{
		p := &(*(*uint16)(unsafe.Pointer(_pOrTerm + 18)))
		*p = uint16(int32(*p) & int32(-65))
	}
	goto _38

_37:
	if (*(*int32)(unsafe.Pointer(_pOrTerm + 40))) == _iColumn {
		goto _39
	}

	_okToChngToIN = int32(0)
	goto _40

_39:
	_affRight = int32(_1817sqlite3ExprAffinity(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pOrTerm))) + 24))))
	_affLeft = int32(_1817sqlite3ExprAffinity(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pOrTerm))) + 16))))
	if _affRight == int32(0) || _affRight == _affLeft {
		goto _41
	}

	_okToChngToIN = int32(0)
	goto _42

_41:
	{
		p := &(*(*uint16)(unsafe.Pointer(_pOrTerm + 18)))
		*p = uint16(int32(*p) | int32(0x40))
	}
_42:
_40:
_38:
	_i--
	_pOrTerm += 64
	goto _34

_36:
	_2j++
	goto _25

_27:
	if _okToChngToIN == 0 {
		goto _43
	}

	_pList = 0
	_pLeft = 0
	_i = (*(*int32)(unsafe.Pointer(_pOrWc + 20))) - int32(1)
	_pOrTerm = *(*uintptr)(unsafe.Pointer(_pOrWc + 32))
_44:
	if _i < int32(0) {
		goto _46
	}

	if (int32(*(*uint16)(unsafe.Pointer(_pOrTerm + 18))) & int32(0x40)) != int32(0) {
		goto _47
	}

	goto _45

_47:
	_pDup = _1507sqlite3ExprDup(tls, _db, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pOrTerm))) + 24)), int32(0))
	_pList = _1331sqlite3ExprListAppend(tls, *(*uintptr)(unsafe.Pointer(_pWInfo)), _pList, _pDup)
	_pLeft = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pOrTerm))) + 16))

_45:
	_i--
	_pOrTerm += 64
	goto _44

_46:
	_pDup = _1507sqlite3ExprDup(tls, _db, _pLeft, int32(0))
	_pNew = _1316sqlite3PExpr(tls, _pParse, int32(49), _pDup, null)
	if _pNew == 0 {
		goto _48
	}

	_1984transferJoinMarkings(tls, _pNew, _pExpr)

	*(*uintptr)(unsafe.Pointer(_pNew + 32)) = _pList
	_idxNew = _1893whereClauseInsert(tls, _pWC, _pNew, uint16(3))
	_1894exprAnalyze(tls, _pSrc, _pWC, _idxNew)
	_pTerm = (*(*uintptr)(unsafe.Pointer(_pWC + 32))) + 64*uintptr(_idxTerm)
	_1981markTermAsChild(tls, _pWC, _idxNew, _idxTerm)
	goto _49

_48:
	_551sqlite3ExprListDelete(tls, _db, _pList)
_49:
	*(*uint16)(unsafe.Pointer(_pTerm + 20)) = uint16(0x1000)
_43:
_24:
}

// _1986isLikeOrGlob is defined at sqlite3.c:130466:12
func _1986isLikeOrGlob(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pExpr uintptr /* *TExpr = SExpr */, _ppPrefix uintptr /* **TExpr = SExpr */, _pisComplete uintptr /* *int32 */, _pnoCase uintptr /* *int32 */) (r int32) {
	esc := crt.MustMalloc(4)
	var (
		_z          uintptr // *Tu8 = uint8
		_pRight     uintptr // *TExpr = SExpr
		_pLeft      uintptr // *TExpr = SExpr
		_pList      uintptr // *TExprList = SExprList
		_c          int32
		_cnt        int32
		_wc         = esc   // *[4]int8
		_db         uintptr // *Tsqlite3 = Ssqlite3
		_pVal       uintptr // *Tsqlite3_value = Ssqlite3_value
		_op         int32
		_rc         int32
		_pReprepare uintptr // *TVdbe = SVdbe
		_iCol       int32
		_pPrefix    uintptr // *TExpr = SExpr
		_iFrom      int32
		_iTo        int32
		_zNew       uintptr // *int8
		_v          uintptr // *TVdbe = SVdbe
		_r1         int32
	)
	defer crt.Free(esc)
	_z = 0
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_pVal = 0
	if _2034sqlite3IsLikeFunction(tls, _db, _pExpr, _pnoCase, _wc) != 0 {
		goto _1
	}

	return int32(0)

_1:
	_pList = *(*uintptr)(unsafe.Pointer(_pExpr + 32))
	_pLeft = *(*uintptr)(unsafe.Pointer((_pList + 8) + 32))
	_pRight = _1510sqlite3ExprSkipCollate(tls, *(*uintptr)(unsafe.Pointer(_pList + 8)))
	_op = int32(*(*uint8)(unsafe.Pointer(_pRight)))
	if _op != int32(135) || ((*(*uint32)(unsafe.Pointer(_db + 48)))&uint32(0x800000)) != uint32(0) {
		goto _2
	}

	_pReprepare = *(*uintptr)(unsafe.Pointer(_pParse + 496))
	_iCol = int32(*(*int16)(unsafe.Pointer(_pRight + 48)))
	_pVal = _1975sqlite3VdbeGetBoundValue(tls, _pReprepare, _iCol, uint8('A'))
	if _pVal == 0 || Xsqlite3_value_type(tls, _pVal) != int32(3) {
		goto _4
	}

	_z = Xsqlite3_value_text(tls, _pVal)
_4:
	_1974sqlite3VdbeSetVarmask(tls, *(*uintptr)(unsafe.Pointer(_pParse + 16)), _iCol)

	goto _3

_2:
	if _op != int32(97) {
		goto _5
	}

	_z = *(*uintptr)(unsafe.Pointer(_pRight + 8))
_5:
_3:
	if _z == 0 {
		goto _6
	}

	if int32(*(*uint8)(unsafe.Pointer(_180sqlite3CtypeMap + uintptr(*(*uint8)(unsafe.Pointer(_z))))))&int32(0x4) == 0 && int32(*(*uint8)(unsafe.Pointer(_z))) != int32('-') {
		goto _7
	}

	if int32(*(*uint8)(unsafe.Pointer(_pLeft))) == int32(145) && int32(_1817sqlite3ExprAffinity(tls, _pLeft)) == int32('B') && *(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pLeft + 64)) + 84)) == 0 {
		goto _8
	}

	_371sqlite3ValueFree(tls, _pVal)
	return int32(0)

_8:
_7:
	_cnt = int32(0)
_9:
	if set5(&_c, int32(*(*uint8)(unsafe.Pointer(_z + uintptr(_cnt))))) == int32(0) || _c == int32(*(*int8)(unsafe.Pointer(_wc))) || _c == int32(*(*int8)(unsafe.Pointer(_wc + 1))) || _c == int32(*(*int8)(unsafe.Pointer(_wc + 2))) {
		goto _10
	}

	_cnt++
	if _c != int32(*(*int8)(unsafe.Pointer(_wc + 3))) || int32(*(*uint8)(unsafe.Pointer(_z + uintptr(_cnt)))) == int32(0) {
		goto _11
	}

	_cnt++
_11:
	goto _9

_10:
	if _cnt == int32(0) || int32(255) == int32(*(*uint8)(unsafe.Pointer(_z + uintptr(_cnt-int32(1))))) {
		goto _12
	}

	*(*int32)(unsafe.Pointer(_pisComplete)) = bool2int((_c == int32(*(*int8)(unsafe.Pointer(_wc)))) && (int32(*(*uint8)(unsafe.Pointer(_z + uintptr(_cnt+int32(1))))) == int32(0)))
	_pPrefix = _1334sqlite3Expr(tls, _db, int32(97), _z)
	if _pPrefix == 0 {
		goto _14
	}

	_zNew = *(*uintptr)(unsafe.Pointer(_pPrefix + 8))
	*(*int8)(unsafe.Pointer(_zNew + uintptr(_cnt))) = int8(0)
	_iFrom = set5(&_iTo, int32(0))
_15:
	if _iFrom >= _cnt {
		goto _17
	}

	if int32(*(*int8)(unsafe.Pointer(_zNew + uintptr(_iFrom)))) != int32(*(*int8)(unsafe.Pointer(_wc + 3))) {
		goto _18
	}

	_iFrom++
_18:
	*(*int8)(unsafe.Pointer(_zNew + uintptr(postinc7(&_iTo)))) = *(*int8)(unsafe.Pointer(_zNew + uintptr(_iFrom)))
	_iFrom++
	goto _15

_17:
	*(*int8)(unsafe.Pointer(_zNew + uintptr(_iTo))) = int8(0)
_14:
	*(*uintptr)(unsafe.Pointer(_ppPrefix)) = _pPrefix
	if _op != int32(135) {
		goto _19
	}

	_v = *(*uintptr)(unsafe.Pointer(_pParse + 16))
	_1974sqlite3VdbeSetVarmask(tls, _v, int32(*(*int16)(unsafe.Pointer(_pRight + 48))))
	if (*(*int32)(unsafe.Pointer(_pisComplete))) == 0 || (*(*int8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pRight + 8))) + 1))) == 0 {
		goto _20
	}

	_r1 = _1562sqlite3GetTempReg(tls, _pParse)
	_1728sqlite3ExprCodeTarget(tls, _pParse, _pRight, _r1)
	_1657sqlite3VdbeChangeP3(tls, _v, uint32(_1496sqlite3VdbeCurrentAddr(tls, _v)-int32(1)), int32(0))
	_1563sqlite3ReleaseTempReg(tls, _pParse, _r1)
_20:
_19:
	goto _13

_12:
	_z = null
_13:
_6:
	_rc = bool2int(_z != 0)
	_371sqlite3ValueFree(tls, _pVal)
	return _rc
}

// _1987isAuxiliaryVtabOperator is defined at sqlite3.c:130616:12
func _1987isAuxiliaryVtabOperator(tls crt.TLS, _pExpr uintptr /* *TExpr = SExpr */, _peOp2 uintptr /* *uint8 */, _ppLeft uintptr /* **TExpr = SExpr */, _ppRight uintptr /* **TExpr = SExpr */) (r int32) {
	var (
		_pList  uintptr // *TExprList = SExprList
		_pCol   uintptr // *TExpr = SExpr
		_i      int32
		_res    int32
		_pLeft  uintptr // *TExpr = SExpr
		_pRight uintptr // *TExpr = SExpr
		_t      uintptr // *TExpr = SExpr
	)
	if int32(*(*uint8)(unsafe.Pointer(_pExpr))) != int32(144) {
		goto _1
	}

	_pList = *(*uintptr)(unsafe.Pointer(_pExpr + 32))
	if _pList != 0 && (*(*int32)(unsafe.Pointer(_pList))) == int32(2) {
		goto _3
	}

	return int32(0)

_3:
	_pCol = *(*uintptr)(unsafe.Pointer((_pList + 8) + 32))
	if int32(*(*uint8)(unsafe.Pointer(_pCol))) == int32(145) && *(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pCol + 64)) + 84)) != 0 {
		goto _4
	}

	return int32(0)

_4:
	_i = int32(0)
_5:
	if _i >= int32(4) {
		goto _7
	}

	if _110sqlite3StrICmp(tls, *(*uintptr)(unsafe.Pointer(_pExpr + 8)), *(*uintptr)(unsafe.Pointer(_2035aOp + 16*uintptr(_i)))) != int32(0) {
		goto _8
	}

	*(*uint8)(unsafe.Pointer(_peOp2)) = *(*uint8)(unsafe.Pointer((_2035aOp + 16*uintptr(_i)) + 8))
	*(*uintptr)(unsafe.Pointer(_ppRight)) = *(*uintptr)(unsafe.Pointer(_pList + 8))
	*(*uintptr)(unsafe.Pointer(_ppLeft)) = _pCol
	return int32(1)

_8:
	_i++
	goto _5

_7:
	goto _2

_1:
	if int32(*(*uint8)(unsafe.Pointer(_pExpr))) != int32(52) && int32(*(*uint8)(unsafe.Pointer(_pExpr))) != int32(143) && int32(*(*uint8)(unsafe.Pointer(_pExpr))) != int32(51) {
		goto _9
	}

	_res = int32(0)
	_pLeft = *(*uintptr)(unsafe.Pointer(_pExpr + 16))
	_pRight = *(*uintptr)(unsafe.Pointer(_pExpr + 24))
	if int32(*(*uint8)(unsafe.Pointer(_pLeft))) != int32(145) || *(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pLeft + 64)) + 84)) == 0 {
		goto _10
	}

	_res++
_10:
	if _pRight == 0 || int32(*(*uint8)(unsafe.Pointer(_pRight))) != int32(145) || *(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pRight + 64)) + 84)) == 0 {
		goto _11
	}

	_res++
	_t = _pLeft
	_pLeft = _pRight
	_pRight = _t
_11:
	*(*uintptr)(unsafe.Pointer(_ppLeft)) = _pLeft
	*(*uintptr)(unsafe.Pointer(_ppRight)) = _pRight
	if int32(*(*uint8)(unsafe.Pointer(_pExpr))) != int32(52) {
		goto _12
	}

	*(*uint8)(unsafe.Pointer(_peOp2)) = uint8(68)
_12:
	if int32(*(*uint8)(unsafe.Pointer(_pExpr))) != int32(143) {
		goto _13
	}

	*(*uint8)(unsafe.Pointer(_peOp2)) = uint8(69)
_13:
	if int32(*(*uint8)(unsafe.Pointer(_pExpr))) != int32(51) {
		goto _14
	}

	*(*uint8)(unsafe.Pointer(_peOp2)) = uint8(70)
_14:
	return _res

_9:
_2:
	return int32(0)
}

type SWhereScan struct {
	XpOrigWC   uintptr // *SWhereClause
	XpWC       uintptr // *SWhereClause
	XzCollName uintptr // *int8
	XpIdxExpr  uintptr // *SExpr
	Xidxaff    int8
	XnEquiv    uint8
	XiEquiv    uint8
	XopMask    uint32
	Xk         int32
	XaiCur     [11]int32
	XaiColumn  [11]int16
}

// _1988whereScanInit is defined at sqlite3.c:132102:18
func _1988whereScanInit(tls crt.TLS, _pScan uintptr /* *TWhereScan = SWhereScan */, _pWC uintptr /* *TWhereClause = SWhereClause */, _iCur int32, _iColumn int32, _opMask uint32, _pIdx uintptr /* *TIndex = SIndex */) (r uintptr /* *TWhereTerm = SWhereTerm */) {
	var _j int32

	*(*uintptr)(unsafe.Pointer(_pScan)) = _pWC
	*(*uintptr)(unsafe.Pointer(_pScan + 8)) = _pWC
	*(*uintptr)(unsafe.Pointer(_pScan + 24)) = null
	*(*int8)(unsafe.Pointer(_pScan + 32)) = int8(0)
	*(*uintptr)(unsafe.Pointer(_pScan + 16)) = null
	if _pIdx == 0 {
		goto _1
	}

	_j = _iColumn
	_iColumn = int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 8))) + 2*uintptr(_j))))
	if _iColumn != int32(-2) {
		goto _3
	}

	*(*uintptr)(unsafe.Pointer(_pScan + 24)) = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pIdx + 80))) + 8) + 32*uintptr(_j)))
	*(*uintptr)(unsafe.Pointer(_pScan + 16)) = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 64))) + 8*uintptr(_j)))
	goto _4

_3:
	if _iColumn != int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 24))) + 68))) {
		goto _5
	}

	_iColumn = int32(-1)
	goto _6

_5:
	if _iColumn < int32(0) {
		goto _7
	}

	*(*int8)(unsafe.Pointer(_pScan + 32)) = *(*int8)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 24))) + 8))) + 32*uintptr(_iColumn)) + 25))
	*(*uintptr)(unsafe.Pointer(_pScan + 16)) = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 64))) + 8*uintptr(_j)))
_7:
_6:
_4:
	goto _2

_1:
	if _iColumn != int32(-2) {
		goto _8
	}

	return null

_8:
_2:
	*(*uint32)(unsafe.Pointer(_pScan + 36)) = _opMask
	*(*int32)(unsafe.Pointer(_pScan + 40)) = int32(0)
	*(*int32)(unsafe.Pointer(_pScan + 44)) = _iCur
	*(*int16)(unsafe.Pointer(_pScan + 88)) = int16(_iColumn)
	*(*uint8)(unsafe.Pointer(_pScan + 33)) = uint8(1)
	*(*uint8)(unsafe.Pointer(_pScan + 34)) = uint8(1)
	return _1989whereScanNext(tls, _pScan)
}

// _1989whereScanNext is defined at sqlite3.c:132001:18
func _1989whereScanNext(tls crt.TLS, _pScan uintptr /* *TWhereScan = SWhereScan */) (r uintptr /* *TWhereTerm = SWhereTerm */) {
	var (
		_iCur    int32
		_iColumn int16
		_pX      uintptr // *TExpr = SExpr
		_pWC     uintptr // *TWhereClause = SWhereClause
		_pTerm   uintptr // *TWhereTerm = SWhereTerm
		_k       int32
		_j       int32
		_pColl   uintptr // *TCollSeq = SCollSeq
		_pParse  uintptr // *TParse = SParse
	)
	_k = *(*int32)(unsafe.Pointer(_pScan + 40))

	_pWC = *(*uintptr)(unsafe.Pointer(_pScan + 8))
_1:
	_iColumn = *(*int16)(unsafe.Pointer((_pScan + 88) + 2*uintptr(int32(*(*uint8)(unsafe.Pointer(_pScan + 34)))-int32(1))))
	_iCur = *(*int32)(unsafe.Pointer((_pScan + 44) + 4*uintptr(int32(*(*uint8)(unsafe.Pointer(_pScan + 34)))-int32(1))))

_3:
	_pTerm = (*(*uintptr)(unsafe.Pointer(_pWC + 32))) + 64*uintptr(_k)
_6:
	if _k >= (*(*int32)(unsafe.Pointer(_pWC + 20))) {
		goto _8
	}

	if (*(*int32)(unsafe.Pointer(_pTerm + 28))) != _iCur || (*(*int32)(unsafe.Pointer(_pTerm + 40))) != int32(_iColumn) || int32(_iColumn) == int32(-2) && _2002sqlite3ExprCompareSkip(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTerm))) + 16)), *(*uintptr)(unsafe.Pointer(_pScan + 24)), _iCur) != int32(0) || int32(*(*uint8)(unsafe.Pointer(_pScan + 34))) > int32(1) && ((*(*uint32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pTerm)) + 4)))&uint32(0x1)) != uint32(0) {
		goto _9
	}

	if (int32(*(*uint16)(unsafe.Pointer(_pTerm + 20)))&int32(0x800)) == int32(0) || int32(*(*uint8)(unsafe.Pointer(_pScan + 33))) >= int32(11) || int32(*(*uint8)(unsafe.Pointer(set4(&_pX, _1510sqlite3ExprSkipCollate(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTerm))) + 24))))))) != int32(145) {
		goto _10
	}

	_j = int32(0)
_11:
	if _j >= int32(*(*uint8)(unsafe.Pointer(_pScan + 33))) {
		goto _13
	}

	if (*(*int32)(unsafe.Pointer((_pScan + 44) + 4*uintptr(_j)))) != (*(*int32)(unsafe.Pointer(_pX + 44))) || int32(*(*int16)(unsafe.Pointer((_pScan + 88) + 2*uintptr(_j)))) != int32(*(*int16)(unsafe.Pointer(_pX + 48))) {
		goto _14
	}

	goto _13

_14:
	_j++
	goto _11

_13:
	if _j != int32(*(*uint8)(unsafe.Pointer(_pScan + 33))) {
		goto _15
	}

	*(*int32)(unsafe.Pointer((_pScan + 44) + 4*uintptr(_j))) = *(*int32)(unsafe.Pointer(_pX + 44))
	*(*int16)(unsafe.Pointer((_pScan + 88) + 2*uintptr(_j))) = int16(*(*int16)(unsafe.Pointer(_pX + 48)))
	(*(*uint8)(unsafe.Pointer(_pScan + 33)))++
_15:
_10:
	if (uint32(*(*uint16)(unsafe.Pointer(_pTerm + 20))) & (*(*uint32)(unsafe.Pointer(_pScan + 36)))) == uint32(0) {
		goto _16
	}

	if (*(*uintptr)(unsafe.Pointer(_pScan + 16))) == 0 || (int32(*(*uint16)(unsafe.Pointer(_pTerm + 20)))&int32(0x100)) != int32(0) {
		goto _17
	}

	_pParse = *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pWC))))
	_pX = *(*uintptr)(unsafe.Pointer(_pTerm))
	if _2003sqlite3IndexAffinityOk(tls, _pX, *(*int8)(unsafe.Pointer(_pScan + 32))) != 0 {
		goto _18
	}

	goto _7

_18:
	_pColl = _1910sqlite3BinaryCompareCollSeq(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pX + 16)), *(*uintptr)(unsafe.Pointer(_pX + 24)))
	if _pColl != 0 {
		goto _19
	}

	_pColl = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pParse))) + 16))
_19:
	if _110sqlite3StrICmp(tls, *(*uintptr)(unsafe.Pointer(_pColl)), *(*uintptr)(unsafe.Pointer(_pScan + 16))) == 0 {
		goto _20
	}

	goto _7

_20:
_17:
	if (int32(*(*uint16)(unsafe.Pointer(_pTerm + 20)))&int32(130)) == int32(0) || int32(*(*uint8)(unsafe.Pointer(set4(&_pX, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTerm))) + 24)))))) != int32(145) || (*(*int32)(unsafe.Pointer(_pX + 44))) != (*(*int32)(unsafe.Pointer(_pScan + 44))) || int32(*(*int16)(unsafe.Pointer(_pX + 48))) != int32(*(*int16)(unsafe.Pointer(_pScan + 88))) {
		goto _21
	}

	goto _7

_21:
	*(*uintptr)(unsafe.Pointer(_pScan + 8)) = _pWC
	*(*int32)(unsafe.Pointer(_pScan + 40)) = _k + int32(1)
	return _pTerm

_16:
_9:
_7:
	_k++
	_pTerm += 64
	goto _6

_8:
	_pWC = *(*uintptr)(unsafe.Pointer(_pWC + 8))
	_k = int32(0)
	if _pWC != 0 {
		goto _3
	}

	if int32(*(*uint8)(unsafe.Pointer(_pScan + 34))) < int32(*(*uint8)(unsafe.Pointer(_pScan + 33))) {
		goto _22
	}

	goto _2

_22:
	_pWC = *(*uintptr)(unsafe.Pointer(_pScan))
	_k = int32(0)
	(*(*uint8)(unsafe.Pointer(_pScan + 34)))++
	goto _1

_2:
	return null
}

// _1990allocateIndexInfo is defined at sqlite3.c:132651:27
func _1990allocateIndexInfo(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pWC uintptr /* *TWhereClause = SWhereClause */, _mUnusable uint64, _pSrc uintptr /* *SSrcList_item */, _pOrderBy uintptr /* *TExprList = SExprList */, _pmNoOmit uintptr /* *Tu16 = uint16 */) (r uintptr /* *Tsqlite3_index_info = Ssqlite3_index_info */) {
	var (
		_i           int32
		_j           int32
		_nTerm       int32
		_pIdxCons    uintptr // *Ssqlite3_index_constraint
		_pIdxOrderBy uintptr // *Ssqlite3_index_orderby
		_pUsage      uintptr // *Ssqlite3_index_constraint_usage
		_pTerm       uintptr // *TWhereTerm = SWhereTerm
		_nOrderBy    int32
		_pIdxInfo    uintptr // *Tsqlite3_index_info = Ssqlite3_index_info
		_mNoOmit     uint16
		_n           int32
		_pExpr       uintptr // *TExpr = SExpr
		_op          uint16
		_1pExpr      uintptr // *TExpr = SExpr
	)
	_mNoOmit = uint16(0)
	_i = set5(&_nTerm, int32(0))
	_pTerm = *(*uintptr)(unsafe.Pointer(_pWC + 32))
_1:
	if _i >= (*(*int32)(unsafe.Pointer(_pWC + 20))) {
		goto _3
	}

	if (*(*int32)(unsafe.Pointer(_pTerm + 28))) == (*(*int32)(unsafe.Pointer(_pSrc + 64))) {
		goto _4
	}

	goto _2

_4:
	if ((*(*uint64)(unsafe.Pointer(_pTerm + 48))) & _mUnusable) == 0 {
		goto _5
	}

	goto _2

_5:
	if (int32(*(*uint16)(unsafe.Pointer(_pTerm + 20))) & int32(-2049)) != int32(0) {
		goto _6
	}

	goto _2

_6:
	goto _7

	goto _2

_7:
	_nTerm++

_2:
	_i++
	_pTerm += 64
	goto _1

_3:
	_nOrderBy = int32(0)
	if _pOrderBy == 0 {
		goto _8
	}

	_n = *(*int32)(unsafe.Pointer(_pOrderBy))
	_i = int32(0)
_9:
	if _i >= _n {
		goto _11
	}

	_pExpr = *(*uintptr)(unsafe.Pointer((_pOrderBy + 8) + 32*uintptr(_i)))
	if int32(*(*uint8)(unsafe.Pointer(_pExpr))) == int32(145) && (*(*int32)(unsafe.Pointer(_pExpr + 44))) == (*(*int32)(unsafe.Pointer(_pSrc + 64))) {
		goto _12
	}

	goto _11

_12:
	_i++
	goto _9

_11:
	if _i != _n {
		goto _13
	}

	_nOrderBy = _n
_13:
_8:
	_pIdxInfo = _295sqlite3DbMallocZero(tls, *(*uintptr)(unsafe.Pointer(_pParse)), uint64((uint64(96)+(uint64(20)*uint64(_nTerm)))+(uint64(8)*uint64(_nOrderBy))))
	if _pIdxInfo != 0 {
		goto _14
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+17500 /* "out of memory" */)
	return null

_14:
	_pIdxCons = _pIdxInfo + 96
	_pIdxOrderBy = _pIdxCons + 12*uintptr(_nTerm)
	_pUsage = _pIdxOrderBy + 8*uintptr(_nOrderBy)
	*(*int32)(unsafe.Pointer(_pIdxInfo)) = _nTerm
	*(*int32)(unsafe.Pointer(_pIdxInfo + 16)) = _nOrderBy
	*(*uintptr)(unsafe.Pointer(_pIdxInfo + 8)) = _pIdxCons
	*(*uintptr)(unsafe.Pointer(_pIdxInfo + 24)) = _pIdxOrderBy
	*(*uintptr)(unsafe.Pointer(_pIdxInfo + 32)) = _pUsage
	_i = set5(&_j, int32(0))
	_pTerm = *(*uintptr)(unsafe.Pointer(_pWC + 32))
_15:
	if _i >= (*(*int32)(unsafe.Pointer(_pWC + 20))) {
		goto _17
	}

	if (*(*int32)(unsafe.Pointer(_pTerm + 28))) == (*(*int32)(unsafe.Pointer(_pSrc + 64))) {
		goto _18
	}

	goto _16

_18:
	if ((*(*uint64)(unsafe.Pointer(_pTerm + 48))) & _mUnusable) == 0 {
		goto _19
	}

	goto _16

_19:
	if (int32(*(*uint16)(unsafe.Pointer(_pTerm + 20))) & int32(-2049)) != int32(0) {
		goto _20
	}

	goto _16

_20:
	goto _21

	goto _16

_21:
	*(*int32)(unsafe.Pointer(_pIdxCons + 12*uintptr(_j))) = *(*int32)(unsafe.Pointer(_pTerm + 40))
	*(*int32)(unsafe.Pointer((_pIdxCons + 12*uintptr(_j)) + 8)) = _i
	_op = uint16(int32(*(*uint16)(unsafe.Pointer(_pTerm + 20))) & int32(0x1fff))
	if int32(_op) != int32(0x1) {
		goto _22
	}

	_op = uint16(0x2)
_22:
	if int32(_op) != int32(0x40) {
		goto _23
	}

	*(*uint8)(unsafe.Pointer((_pIdxCons + 12*uintptr(_j)) + 4)) = *(*uint8)(unsafe.Pointer(_pTerm + 23))
	goto _24

_23:
	if (int32(_op) & int32(384)) == 0 {
		goto _25
	}

	if int32(_op) != int32(0x100) {
		goto _27
	}

	*(*uint8)(unsafe.Pointer((_pIdxCons + 12*uintptr(_j)) + 4)) = uint8(71)
	goto _28

_27:
	*(*uint8)(unsafe.Pointer((_pIdxCons + 12*uintptr(_j)) + 4)) = uint8(72)
_28:
	goto _26

_25:
	*(*uint8)(unsafe.Pointer((_pIdxCons + 12*uintptr(_j)) + 4)) = uint8(_op)

	if (int32(_op)&int32(60)) == 0 || _1803sqlite3ExprIsVector(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTerm))) + 24))) == 0 {
		goto _29
	}

	if _i >= int32(16) {
		goto _30
	}

	_mNoOmit = uint16(int32(_mNoOmit) | (int32(1) << (uint(_i) % 32)))
_30:
	if int32(_op) != int32(16) {
		goto _31
	}

	*(*uint8)(unsafe.Pointer((_pIdxCons + 12*uintptr(_j)) + 4)) = uint8(8)
_31:
	if int32(_op) != int32(4) {
		goto _32
	}

	*(*uint8)(unsafe.Pointer((_pIdxCons + 12*uintptr(_j)) + 4)) = uint8(32)
_32:
_29:
_26:
_24:
	_j++

_16:
	_i++
	_pTerm += 64
	goto _15

_17:
	_i = int32(0)
_33:
	if _i >= _nOrderBy {
		goto _35
	}

	_1pExpr = *(*uintptr)(unsafe.Pointer((_pOrderBy + 8) + 32*uintptr(_i)))
	*(*int32)(unsafe.Pointer(_pIdxOrderBy + 8*uintptr(_i))) = int32(*(*int16)(unsafe.Pointer(_1pExpr + 48)))
	*(*uint8)(unsafe.Pointer((_pIdxOrderBy + 8*uintptr(_i)) + 4)) = *(*uint8)(unsafe.Pointer(((_pOrderBy + 8) + 32*uintptr(_i)) + 24))
	_i++
	goto _33

_35:
	*(*uint16)(unsafe.Pointer(_pmNoOmit)) = _mNoOmit
	return _pIdxInfo
}

// _1991whereLoopAddVirtualOne is defined at sqlite3.c:134823:12
func _1991whereLoopAddVirtualOne(tls crt.TLS, _pBuilder uintptr /* *TWhereLoopBuilder = SWhereLoopBuilder */, _mPrereq uint64, _mUsable uint64, _mExclude uint16, _pIdxInfo uintptr /* *Tsqlite3_index_info = Ssqlite3_index_info */, _mNoOmit uint16, _pbIn uintptr /* *int32 */) (r int32) {
	var (
		_pWC         uintptr // *TWhereClause = SWhereClause
		_pIdxCons    uintptr // *Ssqlite3_index_constraint
		_pUsage      uintptr // *Ssqlite3_index_constraint_usage
		_i           int32
		_mxTerm      int32
		_rc          int32
		_pNew        uintptr // *TWhereLoop = SWhereLoop
		_pParse      uintptr // *TParse = SParse
		_pSrc        uintptr // *SSrcList_item
		_nConstraint int32
		_pTerm       uintptr // *TWhereTerm = SWhereTerm
		_iTerm       int32
		_1pTerm      uintptr // *TWhereTerm = SWhereTerm
		_j           int32
	)
	_pWC = *(*uintptr)(unsafe.Pointer(_pBuilder + 8))
	_pUsage = *(*uintptr)(unsafe.Pointer(_pIdxInfo + 32))
	_rc = int32(0)
	_pNew = *(*uintptr)(unsafe.Pointer(_pBuilder + 24))
	_pParse = *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pBuilder))))
	_pSrc = ((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pBuilder))) + 8))) + 8) + 112*uintptr(*(*uint8)(unsafe.Pointer(_pNew + 16)))
	_nConstraint = *(*int32)(unsafe.Pointer(_pIdxInfo))

	*(*int32)(unsafe.Pointer(_pbIn)) = int32(0)
	*(*uint64)(unsafe.Pointer(_pNew)) = _mPrereq
	_pIdxCons = *(*uintptr)(unsafe.Pointer(_pIdxInfo + 8))
	_i = int32(0)
_1:
	if _i >= _nConstraint {
		goto _3
	}

	_pTerm = (*(*uintptr)(unsafe.Pointer(_pWC + 32))) + 64*uintptr(*(*int32)(unsafe.Pointer(_pIdxCons + 8)))
	*(*uint8)(unsafe.Pointer(_pIdxCons + 5)) = uint8(0)
	if ((*(*uint64)(unsafe.Pointer(_pTerm + 48)))&_mUsable) != (*(*uint64)(unsafe.Pointer(_pTerm + 48))) || (int32(*(*uint16)(unsafe.Pointer(_pTerm + 20)))&int32(_mExclude)) != int32(0) {
		goto _4
	}

	*(*uint8)(unsafe.Pointer(_pIdxCons + 5)) = uint8(1)
_4:
	_i++
	_pIdxCons += 12
	goto _1

_3:
	crt.Xmemset(tls, _pUsage, int32(0), uint64(8)*uint64(_nConstraint))

	*(*uintptr)(unsafe.Pointer(_pIdxInfo + 48)) = null
	*(*int32)(unsafe.Pointer(_pIdxInfo + 40)) = int32(0)
	*(*int32)(unsafe.Pointer(_pIdxInfo + 60)) = int32(0)
	*(*float64)(unsafe.Pointer(_pIdxInfo + 64)) = float64(5e+98)
	*(*int64)(unsafe.Pointer(_pIdxInfo + 72)) = int64(25)
	*(*int32)(unsafe.Pointer(_pIdxInfo + 80)) = int32(0)
	*(*uint64)(unsafe.Pointer(_pIdxInfo + 88)) = uint64(int64(*(*uint64)(unsafe.Pointer(_pSrc + 88))))
	_rc = _2036vtabBestIndex(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pSrc + 32)), _pIdxInfo)
	if _rc == 0 {
		goto _5
	}

	return _rc

_5:
	_mxTerm = int32(-1)

	_i = int32(0)
_6:
	if _i >= _nConstraint {
		goto _8
	}

	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pNew + 56))) + 8*uintptr(_i))) = null
	_i++
	goto _6

_8:
	*(*uint16)(unsafe.Pointer(_pNew + 24 + 6)) = uint16(0)
	_pIdxCons = *(*uintptr)(unsafe.Pointer(_pIdxInfo + 8))
	_i = int32(0)
_9:
	if _i >= _nConstraint {
		goto _11
	}

	if set5(&_iTerm, (*(*int32)(unsafe.Pointer(_pUsage + 8*uintptr(_i))))-int32(1)) < int32(0) {
		goto _12
	}

	_j = *(*int32)(unsafe.Pointer(_pIdxCons + 8))
	if _iTerm < _nConstraint && _j >= int32(0) && _j < (*(*int32)(unsafe.Pointer(_pWC + 20))) && (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pNew + 56))) + 8*uintptr(_iTerm)))) == 0 && int32(*(*uint8)(unsafe.Pointer(_pIdxCons + 5))) != int32(0) {
		goto _13
	}

	_rc = int32(1)
	_550sqlite3ErrorMsg(tls, _pParse, ts+33850 /* "%s.xBestIndex malfunction" */, *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pSrc + 32)))))
	return _rc

_13:
	_1pTerm = (*(*uintptr)(unsafe.Pointer(_pWC + 32))) + 64*uintptr(_j)
	{
		p := &(*(*uint64)(unsafe.Pointer(_pNew)))
		*p = uint64(uint64(*p) | (*(*uint64)(unsafe.Pointer(_1pTerm + 48))))
	}

	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pNew + 56))) + 8*uintptr(_iTerm))) = _1pTerm
	if _iTerm <= _mxTerm {
		goto _14
	}

	_mxTerm = _iTerm
_14:
	if _iTerm >= int32(16) || (*(*uint8)(unsafe.Pointer((_pUsage + 8*uintptr(_i)) + 4))) == 0 {
		goto _15
	}

	{
		p := &(*(*uint16)(unsafe.Pointer(_pNew + 24 + 6)))
		*p = uint16(int32(*p) | (int32(1) << (uint(_iTerm) % 32)))
	}
_15:
	if (int32(*(*uint16)(unsafe.Pointer(_1pTerm + 20))) & int32(0x1)) == int32(0) {
		goto _16
	}

	*(*int32)(unsafe.Pointer(_pIdxInfo + 60)) = int32(0)
	{
		p := &(*(*int32)(unsafe.Pointer(_pIdxInfo + 80)))
		*p = int32(int32(*p) & int32(-2))
	}
	*(*int32)(unsafe.Pointer(_pbIn)) = int32(1)

_16:
_12:
	_i++
	_pIdxCons += 12
	goto _9

_11:
	{
		p := &(*(*uint16)(unsafe.Pointer(_pNew + 24 + 6)))
		*p = uint16(int32(*p) & (^int32(_mNoOmit)))
	}
	*(*uint16)(unsafe.Pointer(_pNew + 44)) = uint16(_mxTerm + int32(1))

	*(*int32)(unsafe.Pointer(_pNew + 24)) = *(*int32)(unsafe.Pointer(_pIdxInfo + 40))
	*(*uint8)(unsafe.Pointer(_pNew + 24 + 4)) = uint8(*(*int32)(unsafe.Pointer(_pIdxInfo + 56)))
	*(*int32)(unsafe.Pointer(_pIdxInfo + 56)) = int32(0)
	*(*uintptr)(unsafe.Pointer(_pNew + 24 + 8)) = *(*uintptr)(unsafe.Pointer(_pIdxInfo + 48))
	*(*int8)(unsafe.Pointer(_pNew + 24 + 5)) = int8(func() int32 {
		if (*(*int32)(unsafe.Pointer(_pIdxInfo + 60))) != 0 {
			return *(*int32)(unsafe.Pointer(_pIdxInfo + 16))
		}
		return int32(0)
	}())
	*(*int16)(unsafe.Pointer(_pNew + 18)) = int16(0)
	*(*int16)(unsafe.Pointer(_pNew + 20)) = _2037sqlite3LogEstFromDouble(tls, *(*float64)(unsafe.Pointer(_pIdxInfo + 64)))
	*(*int16)(unsafe.Pointer(_pNew + 22)) = _703sqlite3LogEst(tls, uint64(*(*int64)(unsafe.Pointer(_pIdxInfo + 72))))
	if ((*(*int32)(unsafe.Pointer(_pIdxInfo + 80))) & int32(1)) == 0 {
		goto _17
	}

	{
		p := &(*(*uint32)(unsafe.Pointer(_pNew + 40)))
		*p = uint32(uint32(*p) | uint32(0x1000))
	}
	goto _18

_17:
	{
		p := &(*(*uint32)(unsafe.Pointer(_pNew + 40)))
		*p = uint32(uint32(*p) & uint32(4294963199))
	}
_18:
	_rc = _1993whereLoopInsert(tls, _pBuilder, _pNew)
	if (*(*uint8)(unsafe.Pointer(_pNew + 24 + 4))) == 0 {
		goto _19
	}

	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_pNew + 24 + 8)))
	*(*uint8)(unsafe.Pointer(_pNew + 24 + 4)) = uint8(0)
_19:
	return _rc
}

// _1992estLog is defined at sqlite3.c:132311:15
func _1992estLog(tls crt.TLS, _N int16) (r int16) {
	if int32(_N) <= int32(10) {
		return int16(0)
	}

	return int16(int32(_703sqlite3LogEst(tls, uint64(_N))) - int32(33))
}

// _1993whereLoopInsert is defined at sqlite3.c:133876:12
func _1993whereLoopInsert(tls crt.TLS, _pBuilder uintptr /* *TWhereLoopBuilder = SWhereLoopBuilder */, _pTemplate uintptr /* *TWhereLoop = SWhereLoop */) (r int32) {
	var (
		_ppPrev uintptr // **TWhereLoop = SWhereLoop
		_p      uintptr // *TWhereLoop = SWhereLoop
		_pWInfo uintptr // *TWhereInfo = SWhereInfo
		_db     uintptr // *Tsqlite3 = Ssqlite3
		_rc     int32
		_ppTail uintptr // **TWhereLoop = SWhereLoop
		_pToDel uintptr // *TWhereLoop = SWhereLoop
		_pIndex uintptr // *TIndex = SIndex
	)
	_pWInfo = *(*uintptr)(unsafe.Pointer(_pBuilder))
	_db = *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pWInfo))))
	if (*(*uintptr)(unsafe.Pointer(_pBuilder + 32))) == 0 {
		goto _1
	}

	if (*(*uint16)(unsafe.Pointer(_pTemplate + 44))) == 0 {
		goto _2
	}

	_1999whereOrInsert(tls, *(*uintptr)(unsafe.Pointer(_pBuilder + 32)), *(*uint64)(unsafe.Pointer(_pTemplate)), *(*int16)(unsafe.Pointer(_pTemplate + 20)), *(*int16)(unsafe.Pointer(_pTemplate + 22)))
_2:
	return int32(0)

_1:
	_2038whereLoopAdjustCost(tls, *(*uintptr)(unsafe.Pointer(_pWInfo + 80)), _pTemplate)
	_ppPrev = _2039whereLoopFindLesser(tls, _pWInfo+80, _pTemplate)
	if _ppPrev != 0 {
		goto _3
	}

	return int32(0)

	goto _4

_3:
	_p = *(*uintptr)(unsafe.Pointer(_ppPrev))
_4:
	if _p != 0 {
		goto _5
	}

	*(*uintptr)(unsafe.Pointer(_ppPrev)) = set4(&_p, _373sqlite3DbMallocRawNN(tls, _db, uint64(96)))
	if _p != 0 {
		goto _7
	}

	return int32(7)

_7:
	_1772whereLoopInit(tls, _p)
	*(*uintptr)(unsafe.Pointer(_p + 64)) = null
	goto _6

_5:
	_ppTail = _p + 64
_8:
	if (*(*uintptr)(unsafe.Pointer(_ppTail))) == 0 {
		goto _9
	}

	_ppTail = _2039whereLoopFindLesser(tls, _ppTail, _pTemplate)
	if _ppTail != 0 {
		goto _10
	}

	goto _9

_10:
	_pToDel = *(*uintptr)(unsafe.Pointer(_ppTail))
	if _pToDel != 0 {
		goto _11
	}

	goto _9

_11:
	*(*uintptr)(unsafe.Pointer(_ppTail)) = *(*uintptr)(unsafe.Pointer(_pToDel + 64))
	_1928whereLoopDelete(tls, _db, _pToDel)
	goto _8

_9:
_6:
	_rc = _2040whereLoopXfer(tls, _db, _p, _pTemplate)
	if ((*(*uint32)(unsafe.Pointer(_p + 40))) & uint32(0x400)) != uint32(0) {
		goto _12
	}

	_pIndex = *(*uintptr)(unsafe.Pointer(_p + 24 + 8))
	if _pIndex == 0 || (*(*int32)(unsafe.Pointer(_pIndex + 88))) != int32(0) {
		goto _13
	}

	*(*uintptr)(unsafe.Pointer(_p + 24 + 8)) = null
_13:
_12:
	return _rc
}

// _1994whereUsablePartialIndex is defined at sqlite3.c:134515:12
func _1994whereUsablePartialIndex(tls crt.TLS, _iTab int32, _pWC uintptr /* *TWhereClause = SWhereClause */, _pWhere uintptr /* *TExpr = SExpr */) (r int32) {
	var (
		_i      int32
		_pTerm  uintptr // *TWhereTerm = SWhereTerm
		_pParse uintptr // *TParse = SParse
		_pExpr  uintptr // *TExpr = SExpr
	)
	_pParse = *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pWC))))
_1:
	if int32(*(*uint8)(unsafe.Pointer(_pWhere))) != int32(44) {
		goto _2
	}

	if _1994whereUsablePartialIndex(tls, _iTab, _pWC, *(*uintptr)(unsafe.Pointer(_pWhere + 16))) != 0 {
		goto _3
	}

	return int32(0)

_3:
	_pWhere = *(*uintptr)(unsafe.Pointer(_pWhere + 24))
	goto _1

_2:
	if ((*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pParse))) + 48))) & uint32(0x800000)) == 0 {
		goto _4
	}

	_pParse = null
_4:
	_i = int32(0)
	_pTerm = *(*uintptr)(unsafe.Pointer(_pWC + 32))
_5:
	if _i >= (*(*int32)(unsafe.Pointer(_pWC + 20))) {
		goto _7
	}

	_pExpr = *(*uintptr)(unsafe.Pointer(_pTerm))
	if ((*(*uint32)(unsafe.Pointer(_pExpr + 4)))&uint32(0x1)) != uint32(0) && int32(*(*int16)(unsafe.Pointer(_pExpr + 52))) != _iTab || _2041sqlite3ExprImpliesExpr(tls, _pParse, _pExpr, _pWhere, _iTab) == 0 {
		goto _8
	}

	return int32(1)

_8:
	_i++
	_pTerm += 64
	goto _5

_7:
	return int32(0)
}

// _1995indexMightHelpWithOrderBy is defined at sqlite3.c:134464:12
func _1995indexMightHelpWithOrderBy(tls crt.TLS, _pBuilder uintptr /* *TWhereLoopBuilder = SWhereLoopBuilder */, _pIndex uintptr /* *TIndex = SIndex */, _iCursor int32) (r int32) {
	var (
		_pOB      uintptr // *TExprList = SExprList
		_aColExpr uintptr // *TExprList = SExprList
		_ii       int32
		_jj       int32
		_pExpr    uintptr // *TExpr = SExpr
	)
	if (uint32((*(*uint8)(unsafe.Pointer(_pIndex + 99)))>>2) << 31 >> 31) == 0 {
		goto _1
	}

	return int32(0)

_1:
	if set4(&_pOB, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pBuilder))) + 16))) != 0 {
		goto _2
	}

	return int32(0)

_2:
	_ii = int32(0)
_3:
	if _ii >= (*(*int32)(unsafe.Pointer(_pOB))) {
		goto _5
	}

	_pExpr = _1510sqlite3ExprSkipCollate(tls, *(*uintptr)(unsafe.Pointer((_pOB + 8) + 32*uintptr(_ii))))
	if int32(*(*uint8)(unsafe.Pointer(_pExpr))) != int32(145) || (*(*int32)(unsafe.Pointer(_pExpr + 44))) != _iCursor {
		goto _6
	}

	if int32(*(*int16)(unsafe.Pointer(_pExpr + 48))) >= int32(0) {
		goto _8
	}

	return int32(1)

_8:
	_jj = int32(0)
_9:
	if _jj >= int32(*(*uint16)(unsafe.Pointer(_pIndex + 94))) {
		goto _11
	}

	if int32(*(*int16)(unsafe.Pointer(_pExpr + 48))) != int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIndex + 8))) + 2*uintptr(_jj)))) {
		goto _12
	}

	return int32(1)

_12:
	_jj++
	goto _9

_11:
	goto _7

_6:
	if set4(&_aColExpr, *(*uintptr)(unsafe.Pointer(_pIndex + 80))) == 0 {
		goto _13
	}

	_jj = int32(0)
_14:
	if _jj >= int32(*(*uint16)(unsafe.Pointer(_pIndex + 94))) {
		goto _16
	}

	if int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIndex + 8))) + 2*uintptr(_jj)))) == int32(-2) {
		goto _17
	}

	goto _15

_17:
	if _2002sqlite3ExprCompareSkip(tls, _pExpr, *(*uintptr)(unsafe.Pointer((_aColExpr + 8) + 32*uintptr(_jj))), _iCursor) != int32(0) {
		goto _18
	}

	return int32(1)

_18:
_15:
	_jj++
	goto _14

_16:
_13:
_7:
	_ii++
	goto _3

_5:
	return int32(0)
}

// _1996whereLoopOutputAdjust is defined at sqlite3.c:134004:13
func _1996whereLoopOutputAdjust(tls crt.TLS, _pWC uintptr /* *TWhereClause = SWhereClause */, _pLoop uintptr /* *TWhereLoop = SWhereLoop */, _nRow int16) {
	esc := crt.MustMalloc(4)
	var (
		_pTerm      uintptr // *TWhereTerm = SWhereTerm
		_pX         uintptr // *TWhereTerm = SWhereTerm
		_notAllowed uint64
		_i          int32
		_j          int32
		_k          = esc // *int32
		_iReduce    int16
		_pRight     uintptr // *TExpr = SExpr
	)
	defer crt.Free(esc)
	_notAllowed = ^((*(*uint64)(unsafe.Pointer(_pLoop))) | (*(*uint64)(unsafe.Pointer(_pLoop + 8))))
	_iReduce = int16(0)

	_i = *(*int32)(unsafe.Pointer(_pWC + 20))
	_pTerm = *(*uintptr)(unsafe.Pointer(_pWC + 32))
_1:
	if _i <= int32(0) {
		goto _3
	}

	if (int32(*(*uint16)(unsafe.Pointer(_pTerm + 18))) & int32(0x2)) == int32(0) {
		goto _4
	}

	goto _3

_4:
	if ((*(*uint64)(unsafe.Pointer(_pTerm + 56))) & (*(*uint64)(unsafe.Pointer(_pLoop + 8)))) != uint64(0) {
		goto _5
	}

	goto _2

_5:
	if ((*(*uint64)(unsafe.Pointer(_pTerm + 56))) & _notAllowed) == uint64(0) {
		goto _6
	}

	goto _2

_6:
	_j = int32(*(*uint16)(unsafe.Pointer(_pLoop + 44))) - int32(1)
_7:
	if _j < int32(0) {
		goto _9
	}

	_pX = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pLoop + 56))) + 8*uintptr(_j)))
	if _pX != 0 {
		goto _10
	}

	goto _8

_10:
	if _pX != _pTerm {
		goto _11
	}

	goto _9

_11:
	if (*(*int32)(unsafe.Pointer(_pX + 24))) < int32(0) || ((*(*uintptr)(unsafe.Pointer(_pWC + 32)))+64*uintptr(*(*int32)(unsafe.Pointer(_pX + 24)))) != _pTerm {
		goto _12
	}

	goto _9

_12:
_8:
	_j--
	goto _7

_9:
	if _j >= int32(0) {
		goto _13
	}

	if int32(*(*int16)(unsafe.Pointer(_pTerm + 16))) > int32(0) {
		goto _14
	}

	{
		p := &(*(*int16)(unsafe.Pointer(_pLoop + 22)))
		*p = int16(int32(*p) + int32(*(*int16)(unsafe.Pointer(_pTerm + 16))))
	}
	goto _15

_14:
	(*(*int16)(unsafe.Pointer(_pLoop + 22)))--
	if (int32(*(*uint16)(unsafe.Pointer(_pTerm + 20))) & int32(130)) == 0 {
		goto _16
	}

	_pRight = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTerm))) + 24))
	if _1762sqlite3ExprIsInteger(tls, _pRight, _k) == 0 || (*(*int32)(unsafe.Pointer(_k))) < int32(-1) || (*(*int32)(unsafe.Pointer(_k))) > int32(1) {
		goto _17
	}

	*(*int32)(unsafe.Pointer(_k)) = int32(10)
	goto _18

_17:
	*(*int32)(unsafe.Pointer(_k)) = int32(20)
_18:
	if int32(_iReduce) >= (*(*int32)(unsafe.Pointer(_k))) {
		goto _19
	}

	_iReduce = int16(*(*int32)(unsafe.Pointer(_k)))
_19:
_16:
_15:
_13:
_2:
	_i--
	_pTerm += 64
	goto _1

_3:
	if int32(*(*int16)(unsafe.Pointer(_pLoop + 22))) <= (int32(_nRow) - int32(_iReduce)) {
		goto _20
	}

	*(*int16)(unsafe.Pointer(_pLoop + 22)) = int16(int32(_nRow) - int32(_iReduce))
_20:
}

// _1997whereLoopAddBtreeIndex is defined at sqlite3.c:134138:12
func _1997whereLoopAddBtreeIndex(tls crt.TLS, _pBuilder uintptr /* *TWhereLoopBuilder = SWhereLoopBuilder */, _pSrc uintptr /* *SSrcList_item */, _pProbe uintptr /* *TIndex = SIndex */, _nInMul int16) (r int32) {
	esc := crt.MustMalloc(112)
	var (
		_pWInfo         uintptr // *TWhereInfo = SWhereInfo
		_pParse         uintptr // *TParse = SParse
		_db             uintptr // *Tsqlite3 = Ssqlite3
		_pNew           uintptr // *TWhereLoop = SWhereLoop
		_pTerm          uintptr // *TWhereTerm = SWhereTerm
		_opMask         int32
		_scan           = esc // *TWhereScan = SWhereScan
		_saved_prereq   uint64
		_saved_nLTerm   uint16
		_saved_nEq      uint16
		_saved_nBtm     uint16
		_saved_nTop     uint16
		_saved_nSkip    uint16
		_saved_wsFlags  uint32
		_saved_nOut     int16
		_rc             int32
		_rSize          int16
		_rLogSize       int16
		_pTop           uintptr // *TWhereTerm = SWhereTerm
		_pBtm           uintptr // *TWhereTerm = SWhereTerm
		_eOp            uint16
		_rCostIdx       int16
		_nOutUnadjusted int16
		_nIn            int32
		_pExpr          uintptr // *TExpr = SExpr
		_i              int32
		_iCol           int32
		_nEq            int32
		_nIter          int16
	)
	defer crt.Free(esc)
	_pWInfo = *(*uintptr)(unsafe.Pointer(_pBuilder))
	_pParse = *(*uintptr)(unsafe.Pointer(_pWInfo))
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_rc = int32(0)
	_pTop = 0
	_pBtm = 0
	_pNew = *(*uintptr)(unsafe.Pointer(_pBuilder + 24))
	if (*(*uint8)(unsafe.Pointer(_db + 97))) == 0 {
		goto _1
	}

	return int32(7)

_1:
	if ((*(*uint32)(unsafe.Pointer(_pNew + 40))) & uint32(0x20)) == 0 {
		goto _2
	}

	_opMask = int32(24)
	goto _3

_2:
	_opMask = int32(447)
_3:
	if (uint32((*(*uint8)(unsafe.Pointer(_pProbe + 99)))>>2) << 31 >> 31) == 0 {
		goto _4
	}

	_opMask = int32(_opMask & int32(-61))
_4:
	_saved_nEq = *(*uint16)(unsafe.Pointer(_pNew + 24))
	_saved_nBtm = *(*uint16)(unsafe.Pointer(_pNew + 24 + 2))
	_saved_nTop = *(*uint16)(unsafe.Pointer(_pNew + 24 + 4))
	_saved_nSkip = *(*uint16)(unsafe.Pointer(_pNew + 46))
	_saved_nLTerm = *(*uint16)(unsafe.Pointer(_pNew + 44))
	_saved_wsFlags = *(*uint32)(unsafe.Pointer(_pNew + 40))
	_saved_prereq = *(*uint64)(unsafe.Pointer(_pNew))
	_saved_nOut = *(*int16)(unsafe.Pointer(_pNew + 22))
	_pTerm = _1988whereScanInit(tls, _scan, *(*uintptr)(unsafe.Pointer(_pBuilder + 8)), *(*int32)(unsafe.Pointer(_pSrc + 64)), int32(_saved_nEq), uint32(_opMask), _pProbe)
	*(*int16)(unsafe.Pointer(_pNew + 18)) = int16(0)
	_rSize = *(*int16)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pProbe + 16))))
	_rLogSize = _1992estLog(tls, _rSize)

_5:
	if _rc != int32(0) || _pTerm == 0 {
		goto _7
	}

	_eOp = *(*uint16)(unsafe.Pointer(_pTerm + 20))
	_nIn = int32(0)
	if int32(_eOp) != int32(0x100) && 0 == 0 || _1898indexColumnNotNull(tls, _pProbe, int32(_saved_nEq)) == 0 {
		goto _8
	}

	goto _6

_8:
	if ((*(*uint64)(unsafe.Pointer(_pTerm + 48))) & (*(*uint64)(unsafe.Pointer(_pNew + 8)))) == 0 {
		goto _9
	}

	goto _6

_9:
	if (int32(*(*uint16)(unsafe.Pointer(_pTerm + 18)))&int32(0x100)) == 0 || int32(*(*uint16)(unsafe.Pointer(_pTerm + 20))) != int32(16) {
		goto _10
	}

	goto _6

_10:
	if (int32(*(*uint8)(unsafe.Pointer(_pSrc + 60)))&int32(0x8)) == int32(0) || ((*(*uint32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pTerm)) + 4)))&uint32(0x1)) != uint32(0) || (int32(_eOp)&int32(384)) == int32(0) {
		goto _11
	}

	goto _6

_11:
	if int32(*(*uint8)(unsafe.Pointer(_pProbe + 98))) == int32(0) || int32(_saved_nEq) != (int32(*(*uint16)(unsafe.Pointer(_pProbe + 94)))-int32(1)) {
		goto _12
	}

	{
		p := &(*(*uint32)(unsafe.Pointer(_pBuilder + 40)))
		*p = uint32(uint32(*p) | uint32(0x2))
	}
	goto _13

_12:
	{
		p := &(*(*uint32)(unsafe.Pointer(_pBuilder + 40)))
		*p = uint32(uint32(*p) | uint32(0x1))
	}
_13:
	*(*uint32)(unsafe.Pointer(_pNew + 40)) = _saved_wsFlags
	*(*uint16)(unsafe.Pointer(_pNew + 24)) = _saved_nEq
	*(*uint16)(unsafe.Pointer(_pNew + 24 + 2)) = _saved_nBtm
	*(*uint16)(unsafe.Pointer(_pNew + 24 + 4)) = _saved_nTop
	*(*uint16)(unsafe.Pointer(_pNew + 44)) = _saved_nLTerm
	if _1909whereLoopResize(tls, _db, _pNew, int32(*(*uint16)(unsafe.Pointer(_pNew + 44)))+int32(1)) == 0 {
		goto _14
	}

	goto _7

_14:
	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pNew + 56))) + 8*uintptr(postinc221(&(*(*uint16)(unsafe.Pointer(_pNew + 44))))))) = _pTerm
	*(*uint64)(unsafe.Pointer(_pNew)) = (_saved_prereq | (*(*uint64)(unsafe.Pointer(_pTerm + 48)))) & (^*(*uint64)(unsafe.Pointer(_pNew + 8)))

	if (int32(_eOp) & int32(0x1)) == 0 {
		goto _15
	}

	_pExpr = *(*uintptr)(unsafe.Pointer(_pTerm))
	{
		p := &(*(*uint32)(unsafe.Pointer(_pNew + 40)))
		*p = uint32(uint32(*p) | uint32(0x4))
	}
	if ((*(*uint32)(unsafe.Pointer(_pExpr + 4))) & uint32(0x800)) == uint32(0) {
		goto _17
	}

	_nIn = int32(46)

	_i = int32(0)
_19:
	if _i >= (int32(*(*uint16)(unsafe.Pointer(_pNew + 44))) - int32(1)) {
		goto _21
	}

	if (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pNew + 56))) + 8*uintptr(_i)))) == 0 || (*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pNew + 56))) + 8*uintptr(_i)))))) != _pExpr {
		goto _22
	}

	_nIn = int32(0)
_22:
	_i++
	goto _19

_21:
	goto _18

_17:
	if (*(*uintptr)(unsafe.Pointer(_pExpr + 32))) == 0 || (*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pExpr + 32))))) == 0 {
		goto _23
	}

	_nIn = int32(_703sqlite3LogEst(tls, uint64(*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pExpr + 32)))))))

_23:
_18:
	goto _16

_15:
	if (int32(_eOp) & int32(130)) == 0 {
		goto _24
	}

	_iCol = int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pProbe + 8))) + 2*uintptr(_saved_nEq))))
	{
		p := &(*(*uint32)(unsafe.Pointer(_pNew + 40)))
		*p = uint32(uint32(*p) | uint32(0x1))
	}

	if _iCol != int32(-1) && (_iCol <= int32(0) || int32(_nInMul) != int32(0) || int32(_saved_nEq) != (int32(*(*uint16)(unsafe.Pointer(_pProbe + 94)))-int32(1))) {
		goto _26
	}

	if _iCol < int32(0) || int32(uint32((*(*uint8)(unsafe.Pointer(_pProbe + 99)))>>3)<<31>>31) != int32(0) {
		goto _27
	}

	{
		p := &(*(*uint32)(unsafe.Pointer(_pNew + 40)))
		*p = uint32(uint32(*p) | uint32(0x10000))
	}
	goto _28

_27:
	{
		p := &(*(*uint32)(unsafe.Pointer(_pNew + 40)))
		*p = uint32(uint32(*p) | uint32(0x1000))
	}
_28:
_26:
	goto _25

_24:
	if (int32(_eOp) & int32(0x100)) == 0 {
		goto _29
	}

	{
		p := &(*(*uint32)(unsafe.Pointer(_pNew + 40)))
		*p = uint32(uint32(*p) | uint32(0x8))
	}
	goto _30

_29:
	if (int32(_eOp) & int32(36)) == 0 {
		goto _31
	}

	{
		p := &(*(*uint32)(unsafe.Pointer(_pNew + 40)))
		*p = uint32(uint32(*p) | uint32(34))
	}
	*(*uint16)(unsafe.Pointer(_pNew + 24 + 2)) = uint16(_2042whereRangeVectorLen(tls, _pParse, *(*int32)(unsafe.Pointer(_pSrc + 64)), _pProbe, int32(_saved_nEq), _pTerm))
	_pBtm = _pTerm
	_pTop = null
	if (int32(*(*uint16)(unsafe.Pointer(_pTerm + 18))) & int32(0x100)) == 0 {
		goto _33
	}

	_pTop = _pTerm + 64

	if _1909whereLoopResize(tls, _db, _pNew, int32(*(*uint16)(unsafe.Pointer(_pNew + 44)))+int32(1)) == 0 {
		goto _34
	}

	goto _7

_34:
	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pNew + 56))) + 8*uintptr(postinc221(&(*(*uint16)(unsafe.Pointer(_pNew + 44))))))) = _pTop
	{
		p := &(*(*uint32)(unsafe.Pointer(_pNew + 40)))
		*p = uint32(uint32(*p) | uint32(0x10))
	}
	*(*uint16)(unsafe.Pointer(_pNew + 24 + 4)) = uint16(1)
_33:
	goto _32

_31:
	{
		p := &(*(*uint32)(unsafe.Pointer(_pNew + 40)))
		*p = uint32(uint32(*p) | uint32(18))
	}
	*(*uint16)(unsafe.Pointer(_pNew + 24 + 4)) = uint16(_2042whereRangeVectorLen(tls, _pParse, *(*int32)(unsafe.Pointer(_pSrc + 64)), _pProbe, int32(_saved_nEq), _pTerm))
	_pTop = _pTerm
	_pBtm = func() uintptr {
		if ((*(*uint32)(unsafe.Pointer(_pNew + 40))) & uint32(0x20)) != uint32(0) {
			return *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pNew + 56))) + 8*uintptr(int32(*(*uint16)(unsafe.Pointer(_pNew + 44)))-int32(2))))
		}
		return null
	}()
_32:
_30:
_25:
_16:
	if ((*(*uint32)(unsafe.Pointer(_pNew + 40))) & uint32(0x2)) == 0 {
		goto _35
	}

	_2043whereRangeScanEst(tls, _pParse, _pBuilder, _pBtm, _pTop, _pNew)
	goto _36

_35:
	_nEq = int32(preinc143(&(*(*uint16)(unsafe.Pointer(_pNew + 24)))))

	if int32(*(*int16)(unsafe.Pointer(_pTerm + 16))) > int32(0) || int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pProbe + 8))) + 2*uintptr(_saved_nEq)))) < int32(0) {
		goto _37
	}

	{
		p := &(*(*int16)(unsafe.Pointer(_pNew + 22)))
		*p = int16(int32(*p) + int32(*(*int16)(unsafe.Pointer(_pTerm + 16))))
	}
	{
		p := &(*(*int16)(unsafe.Pointer(_pNew + 22)))
		*p = int16(int32(*p) - _nIn)
	}
	goto _38

_37:
	{
		p := &(*(*int16)(unsafe.Pointer(_pNew + 22)))
		*p = int16(int32(*p) + (int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pProbe + 16))) + 2*uintptr(_nEq)))) - int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pProbe + 16))) + 2*uintptr(_nEq-int32(1)))))))
	}
	if (int32(_eOp) & int32(0x100)) == 0 {
		goto _39
	}

	{
		p := &(*(*int16)(unsafe.Pointer(_pNew + 22)))
		*p = int16(int32(*p) + int32(10))
	}
_39:
_38:
_36:
	_rCostIdx = int16((int32(*(*int16)(unsafe.Pointer(_pNew + 22))) + int32(1)) + ((int32(15) * int32(*(*int16)(unsafe.Pointer(_pProbe + 92)))) / int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pSrc + 32))) + 74)))))
	*(*int16)(unsafe.Pointer(_pNew + 20)) = _1761sqlite3LogEstAdd(tls, _rLogSize, _rCostIdx)
	if ((*(*uint32)(unsafe.Pointer(_pNew + 40))) & uint32(320)) != uint32(0) {
		goto _40
	}

	*(*int16)(unsafe.Pointer(_pNew + 20)) = _1761sqlite3LogEstAdd(tls, *(*int16)(unsafe.Pointer(_pNew + 20)), int16(int32(*(*int16)(unsafe.Pointer(_pNew + 22)))+int32(16)))
_40:
	_nOutUnadjusted = *(*int16)(unsafe.Pointer(_pNew + 22))
	{
		p := &(*(*int16)(unsafe.Pointer(_pNew + 20)))
		*p = int16(int32(*p) + (int32(_nInMul) + _nIn))
	}
	{
		p := &(*(*int16)(unsafe.Pointer(_pNew + 22)))
		*p = int16(int32(*p) + (int32(_nInMul) + _nIn))
	}
	_1996whereLoopOutputAdjust(tls, *(*uintptr)(unsafe.Pointer(_pBuilder + 8)), _pNew, _rSize)
	_rc = _1993whereLoopInsert(tls, _pBuilder, _pNew)
	if ((*(*uint32)(unsafe.Pointer(_pNew + 40))) & uint32(0x2)) == 0 {
		goto _41
	}

	*(*int16)(unsafe.Pointer(_pNew + 22)) = _saved_nOut
	goto _42

_41:
	*(*int16)(unsafe.Pointer(_pNew + 22)) = _nOutUnadjusted
_42:
	if ((*(*uint32)(unsafe.Pointer(_pNew + 40)))&uint32(0x10)) != uint32(0) || int32(*(*uint16)(unsafe.Pointer(_pNew + 24))) >= int32(*(*uint16)(unsafe.Pointer(_pProbe + 96))) {
		goto _43
	}

	_1997whereLoopAddBtreeIndex(tls, _pBuilder, _pSrc, _pProbe, int16(int32(_nInMul)+_nIn))
_43:
	*(*int16)(unsafe.Pointer(_pNew + 22)) = _saved_nOut

_6:
	_pTerm = _1989whereScanNext(tls, _scan)
	goto _5

_7:
	*(*uint64)(unsafe.Pointer(_pNew)) = _saved_prereq
	*(*uint16)(unsafe.Pointer(_pNew + 24)) = _saved_nEq
	*(*uint16)(unsafe.Pointer(_pNew + 24 + 2)) = _saved_nBtm
	*(*uint16)(unsafe.Pointer(_pNew + 24 + 4)) = _saved_nTop
	*(*uint16)(unsafe.Pointer(_pNew + 46)) = _saved_nSkip
	*(*uint32)(unsafe.Pointer(_pNew + 40)) = _saved_wsFlags
	*(*int16)(unsafe.Pointer(_pNew + 22)) = _saved_nOut
	*(*uint16)(unsafe.Pointer(_pNew + 44)) = _saved_nLTerm

	if int32(_saved_nEq) != int32(_saved_nSkip) || (int32(_saved_nEq)+int32(1)) >= int32(*(*uint16)(unsafe.Pointer(_pProbe + 94))) || int32(uint32((*(*uint8)(unsafe.Pointer(_pProbe + 99)))>>6)<<31>>31) != int32(0) || int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pProbe + 16))) + 2*uintptr(int32(_saved_nEq)+int32(1))))) < int32(42) || set5(&_rc, _1909whereLoopResize(tls, _db, _pNew, int32(*(*uint16)(unsafe.Pointer(_pNew + 44)))+int32(1))) != int32(0) {
		goto _44
	}

	(*(*uint16)(unsafe.Pointer(_pNew + 24)))++
	(*(*uint16)(unsafe.Pointer(_pNew + 46)))++
	*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pNew + 56))) + 8*uintptr(postinc221(&(*(*uint16)(unsafe.Pointer(_pNew + 44))))))) = null
	{
		p := &(*(*uint32)(unsafe.Pointer(_pNew + 40)))
		*p = uint32(uint32(*p) | uint32(0x8000))
	}
	_nIter = int16(int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pProbe + 16))) + 2*uintptr(_saved_nEq)))) - int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pProbe + 16))) + 2*uintptr(int32(_saved_nEq)+int32(1))))))
	{
		p := &(*(*int16)(unsafe.Pointer(_pNew + 22)))
		*p = int16(int32(*p) - int32(_nIter))
	}
	_nIter = int16(int32(_nIter) + int32(5))
	_1997whereLoopAddBtreeIndex(tls, _pBuilder, _pSrc, _pProbe, int16(int32(_nIter)+int32(_nInMul)))
	*(*int16)(unsafe.Pointer(_pNew + 22)) = _saved_nOut
	*(*uint16)(unsafe.Pointer(_pNew + 24)) = _saved_nEq
	*(*uint16)(unsafe.Pointer(_pNew + 46)) = _saved_nSkip
	*(*uint32)(unsafe.Pointer(_pNew + 40)) = _saved_wsFlags
_44:
	return _rc
}

// _1998whereOrMove is defined at sqlite3.c:131923:13
func _1998whereOrMove(tls crt.TLS, _pDest uintptr /* *TWhereOrSet = SWhereOrSet */, _pSrc uintptr /* *TWhereOrSet = SWhereOrSet */) {
	*(*uint16)(unsafe.Pointer(_pDest)) = *(*uint16)(unsafe.Pointer(_pSrc))
	crt.Xmemcpy(tls, _pDest+8, _pSrc+8, uint64(*(*uint16)(unsafe.Pointer(_pDest)))*uint64(16))
}

// _1999whereOrInsert is defined at sqlite3.c:131935:12
func _1999whereOrInsert(tls crt.TLS, _pSet uintptr /* *TWhereOrSet = SWhereOrSet */, _prereq uint64, _rRun int16, _nOut int16) (r int32) {
	var (
		_i uint16
		_p uintptr // *TWhereOrCost = SWhereOrCost
	)
	_i = *(*uint16)(unsafe.Pointer(_pSet))
	_p = _pSet + 8
_1:
	if int32(_i) <= int32(0) {
		goto _3
	}

	if int32(_rRun) > int32(*(*int16)(unsafe.Pointer(_p + 8))) || (_prereq&(*(*uint64)(unsafe.Pointer(_p)))) != _prereq {
		goto _4
	}

	goto _whereOrInsert_done

_4:
	if int32(*(*int16)(unsafe.Pointer(_p + 8))) > int32(_rRun) || ((*(*uint64)(unsafe.Pointer(_p)))&_prereq) != (*(*uint64)(unsafe.Pointer(_p))) {
		goto _5
	}

	return int32(0)

_5:
	_i--
	_p += 16
	goto _1

_3:
	if int32(*(*uint16)(unsafe.Pointer(_pSet))) >= int32(3) {
		goto _6
	}

	_p = (_pSet + 8) + 16*uintptr(postinc221(&(*(*uint16)(unsafe.Pointer(_pSet)))))
	*(*int16)(unsafe.Pointer(_p + 10)) = _nOut
	goto _7

_6:
	_p = _pSet + 8
	_i = uint16(1)
_8:
	if int32(_i) >= int32(*(*uint16)(unsafe.Pointer(_pSet))) {
		goto _10
	}

	if int32(*(*int16)(unsafe.Pointer(_p + 8))) <= int32(*(*int16)(unsafe.Pointer(((_pSet + 8) + 16*uintptr(_i)) + 8))) {
		goto _11
	}

	_p = (_pSet + 8) + 16*uintptr(_i)
_11:
	_i++
	goto _8

_10:
	if int32(*(*int16)(unsafe.Pointer(_p + 8))) > int32(_rRun) {
		goto _12
	}

	return int32(0)

_12:
_7:
	goto _whereOrInsert_done
_whereOrInsert_done:
	*(*uint64)(unsafe.Pointer(_p)) = _prereq
	*(*int16)(unsafe.Pointer(_p + 8)) = _rRun
	if int32(*(*int16)(unsafe.Pointer(_p + 10))) <= int32(_nOut) {
		goto _13
	}

	*(*int16)(unsafe.Pointer(_p + 10)) = _nOut
_13:
	return int32(1)
}

// _2000whereLoopClearUnion is defined at sqlite3.c:133604:13
func _2000whereLoopClearUnion(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _p uintptr /* *TWhereLoop = SWhereLoop */) {
	if ((*(*uint32)(unsafe.Pointer(_p + 40))) & uint32(17408)) == 0 {
		goto _1
	}

	if ((*(*uint32)(unsafe.Pointer(_p + 40)))&uint32(0x400)) == uint32(0) || (*(*uint8)(unsafe.Pointer(_p + 24 + 4))) == 0 {
		goto _2
	}

	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_p + 24 + 8)))
	*(*uint8)(unsafe.Pointer(_p + 24 + 4)) = uint8(0)
	*(*uintptr)(unsafe.Pointer(_p + 24 + 8)) = null
	goto _3

_2:
	if ((*(*uint32)(unsafe.Pointer(_p + 40)))&uint32(0x4000)) == uint32(0) || (*(*uintptr)(unsafe.Pointer(_p + 24 + 8))) == 0 {
		goto _4
	}

	_181sqlite3DbFree(tls, _db, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 24 + 8))) + 32)))
	_376sqlite3DbFreeNN(tls, _db, *(*uintptr)(unsafe.Pointer(_p + 24 + 8)))
	*(*uintptr)(unsafe.Pointer(_p + 24 + 8)) = null
_4:
_3:
_1:
}

// _2001sqlite3ExprCollSeqMatch is defined at sqlite3.c:92017:20
func _2001sqlite3ExprCollSeqMatch(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pE1 uintptr /* *TExpr = SExpr */, _pE2 uintptr /* *TExpr = SExpr */) (r int32) {
	var (
		_pColl1 uintptr // *TCollSeq = SCollSeq
		_pColl2 uintptr // *TCollSeq = SCollSeq
	)
	_pColl1 = _1771sqlite3ExprNNCollSeq(tls, _pParse, _pE1)
	_pColl2 = _1771sqlite3ExprNNCollSeq(tls, _pParse, _pE2)
	return bool2int(_110sqlite3StrICmp(tls, *(*uintptr)(unsafe.Pointer(_pColl1)), *(*uintptr)(unsafe.Pointer(_pColl2))) == int32(0))
}

// _2002sqlite3ExprCompareSkip is defined at sqlite3.c:96656:20
func _2002sqlite3ExprCompareSkip(tls crt.TLS, _pA uintptr /* *TExpr = SExpr */, _pB uintptr /* *TExpr = SExpr */, _iTab int32) (r int32) {
	return _1770sqlite3ExprCompare(tls, null, _1510sqlite3ExprSkipCollate(tls, _pA), _1510sqlite3ExprSkipCollate(tls, _pB), _iTab)
}

// _2003sqlite3IndexAffinityOk is defined at sqlite3.c:92078:20
func _2003sqlite3IndexAffinityOk(tls crt.TLS, _pExpr uintptr /* *TExpr = SExpr */, _idx_affinity int8) (r int32) {
	var _aff int8

	_aff = _2044comparisonAffinity(tls, _pExpr)
	switch int32(_aff) {
	case int32('A'):
		goto _2
	case int32('B'):
		goto _3
	default:
		goto _4
	}
_2:
	return int32(1)

_3:
	return bool2int(int32(_idx_affinity) == int32('B'))

_4:
	return bool2int(int32(_idx_affinity) >= int32('C'))
	return r
}

// _2004explainIndexColumnName is defined at sqlite3.c:128149:19
func _2004explainIndexColumnName(tls crt.TLS, _pIdx uintptr /* *TIndex = SIndex */, _i int32) (r uintptr /* *int8 */) {
	_i = int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 8))) + 2*uintptr(_i))))
	if _i != int32(-2) {
		goto _1
	}

	return ts + 33876 /* "<expr>" */

_1:
	if _i != int32(-1) {
		goto _2
	}

	return ts + 20005 /* "rowid" */

_2:
	return *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 24))) + 8))) + 32*uintptr(_i)))
}

// _2005explainAppendTerm is defined at sqlite3.c:128164:13
func _2005explainAppendTerm(tls crt.TLS, _pStr uintptr /* *TStrAccum = SStrAccum */, _pIdx uintptr /* *TIndex = SIndex */, _nTerm int32, _iTerm int32, _bAnd int32, _zOp uintptr /* *int8 */) {
	var _i int32

	if _bAnd == 0 {
		goto _1
	}

	_301sqlite3StrAccumAppend(tls, _pStr, ts+5774 /* " AND " */, int32(5))
_1:
	if _nTerm <= int32(1) {
		goto _2
	}

	_301sqlite3StrAccumAppend(tls, _pStr, ts+5384 /* "(" */, int32(1))
_2:
	_i = int32(0)
_3:
	if _i >= _nTerm {
		goto _5
	}

	if _i == 0 {
		goto _6
	}

	_301sqlite3StrAccumAppend(tls, _pStr, ts+416 /* "," */, int32(1))
_6:
	_312sqlite3StrAccumAppendAll(tls, _pStr, _2004explainIndexColumnName(tls, _pIdx, _iTerm+_i))
	_i++
	goto _3

_5:
	if _nTerm <= int32(1) {
		goto _7
	}

	_301sqlite3StrAccumAppend(tls, _pStr, ts+8826 /* ")" */, int32(1))
_7:
	_301sqlite3StrAccumAppend(tls, _pStr, _zOp, int32(1))
	if _nTerm <= int32(1) {
		goto _8
	}

	_301sqlite3StrAccumAppend(tls, _pStr, ts+5384 /* "(" */, int32(1))
_8:
	_i = int32(0)
_9:
	if _i >= _nTerm {
		goto _11
	}

	if _i == 0 {
		goto _12
	}

	_301sqlite3StrAccumAppend(tls, _pStr, ts+416 /* "," */, int32(1))
_12:
	_301sqlite3StrAccumAppend(tls, _pStr, ts+7810 /* "?" */, int32(1))
	_i++
	goto _9

_11:
	if _nTerm <= int32(1) {
		goto _13
	}

	_301sqlite3StrAccumAppend(tls, _pStr, ts+8826 /* ")" */, int32(1))
_13:
}

// _2006sqlite3CompareAffinity is defined at sqlite3.c:92028:21
func _2006sqlite3CompareAffinity(tls crt.TLS, _pExpr uintptr /* *TExpr = SExpr */, _aff2 int8) (r int8) {
	var _aff1 int8

	_aff1 = _1817sqlite3ExprAffinity(tls, _pExpr)
	if _aff1 == 0 || _aff2 == 0 {
		goto _1
	}

	if int32(_aff1) < int32('C') && int32(_aff2) < int32('C') {
		goto _3
	}

	return int8('C')

	goto _4

_3:
	return int8('A')

_4:
	goto _2

_1:
	if _aff1 != 0 || _aff2 != 0 {
		goto _5
	}

	return int8('A')

	goto _6

_5:
	return int8(int32(_aff1) + int32(_aff2))

_6:
_2:
	return r
}

// _2007sqlite3ExprNeedsNoAffinityChange is defined at sqlite3.c:93837:20
func _2007sqlite3ExprNeedsNoAffinityChange(tls crt.TLS, _p uintptr /* *TExpr = SExpr */, _aff int8) (r int32) {
	var _op uint8

	if int32(_aff) != int32('A') {
		goto _1
	}

	return int32(1)

_1:
_2:
	if int32(*(*uint8)(unsafe.Pointer(_p))) != int32(149) && int32(*(*uint8)(unsafe.Pointer(_p))) != int32(148) {
		goto _3
	}

	_p = *(*uintptr)(unsafe.Pointer(_p + 16))
	goto _2

_3:
	_op = *(*uint8)(unsafe.Pointer(_p))
	if int32(_op) != int32(150) {
		goto _4
	}

	_op = *(*uint8)(unsafe.Pointer(_p + 54))
_4:
	switch int32(_op) {
	case int32(134):
		goto _6
	case int32(132):
		goto _7
	case int32(97):
		goto _8
	case int32(133):
		goto _9
	case int32(145):
		goto _10
	default:
		goto _11
	}
_6:
	return bool2int((int32(_aff) == int32('D')) || (int32(_aff) == int32('C')))

_7:
	return bool2int((int32(_aff) == int32('E')) || (int32(_aff) == int32('C')))

_8:
	return bool2int(int32(_aff) == int32('B'))

_9:
	return int32(1)

_10:
	return bool2int((int32(*(*int16)(unsafe.Pointer(_p + 48))) < int32(0)) && ((int32(_aff) == int32('D')) || (int32(_aff) == int32('C'))))

_11:
	return int32(0)
	return r
}

// _2008whereIndexExprTransNode is defined at sqlite3.c:129180:12
func _2008whereIndexExprTransNode(tls crt.TLS, _p uintptr /* *TWalker = SWalker */, _pExpr uintptr /* *TExpr = SExpr */) (r int32) {
	var _pX uintptr // *TIdxExprTrans = struct{XpIdxExp...;XiIdxCur int32;XiIdxCol int32;}

	_pX = *(*uintptr)(unsafe.Pointer(_p + 40))
	if _1770sqlite3ExprCompare(tls, null, _pExpr, *(*uintptr)(unsafe.Pointer(_pX)), *(*int32)(unsafe.Pointer(_pX + 8))) != int32(0) {
		goto _1
	}

	*(*uint8)(unsafe.Pointer(_pExpr)) = uint8(145)
	*(*int32)(unsafe.Pointer(_pExpr + 44)) = *(*int32)(unsafe.Pointer(_pX + 12))
	*(*int16)(unsafe.Pointer(_pExpr + 48)) = int16(*(*int32)(unsafe.Pointer(_pX + 16)))
	*(*uintptr)(unsafe.Pointer(_pExpr + 64)) = null
	return int32(1)

	goto _2

_1:
	return int32(0)

_2:
	return r
}

type SIdxCover struct {
	XpIdx uintptr // *SIndex
	XiCur int32
}

// _2009exprIdxCover is defined at sqlite3.c:96723:12
func _2009exprIdxCover(tls crt.TLS, _pWalker uintptr /* *TWalker = SWalker */, _pExpr uintptr /* *TExpr = SExpr */) (r int32) {
	if int32(*(*uint8)(unsafe.Pointer(_pExpr))) != int32(145) || (*(*int32)(unsafe.Pointer(_pExpr + 44))) != (*(*int32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pWalker + 40))) + 8))) || int32(_1521sqlite3ColumnOfIndex(tls, *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pWalker + 40)))), *(*int16)(unsafe.Pointer(_pExpr + 48)))) >= int32(0) {
		goto _1
	}

	*(*uint8)(unsafe.Pointer(_pWalker + 36)) = uint8(1)
	return int32(2)

_1:
	return int32(0)
}

// _2010whereOrInfoDelete is defined at sqlite3.c:130304:13
func _2010whereOrInfoDelete(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _p uintptr /* *TWhereOrInfo = SWhereOrInfo */) {
	_1927sqlite3WhereClauseClear(tls, _p)
	_181sqlite3DbFree(tls, _db, _p)
}

// _2011whereAndInfoDelete is defined at sqlite3.c:130312:13
func _2011whereAndInfoDelete(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _p uintptr /* *TWhereAndInfo = SWhereAndInfo */) {
	_1927sqlite3WhereClauseClear(tls, _p)
	_181sqlite3DbFree(tls, _db, _p)
}

// _2012exprNodeIsConstantOrGroupBy is defined at sqlite3.c:93668:12
func _2012exprNodeIsConstantOrGroupBy(tls crt.TLS, _pWalker uintptr /* *TWalker = SWalker */, _pExpr uintptr /* *TExpr = SExpr */) (r int32) {
	var (
		_pGroupBy uintptr // *TExprList = SExprList
		_i        int32
		_p        uintptr // *TExpr = SExpr
		_pColl    uintptr // *TCollSeq = SCollSeq
	)
	_pGroupBy = *(*uintptr)(unsafe.Pointer(_pWalker + 40))
	_i = int32(0)
_1:
	if _i >= (*(*int32)(unsafe.Pointer(_pGroupBy))) {
		goto _3
	}

	_p = *(*uintptr)(unsafe.Pointer((_pGroupBy + 8) + 32*uintptr(_i)))
	if _1770sqlite3ExprCompare(tls, null, _pExpr, _p, int32(-1)) >= int32(2) {
		goto _4
	}

	_pColl = _1771sqlite3ExprNNCollSeq(tls, *(*uintptr)(unsafe.Pointer(_pWalker)), _p)
	if Xsqlite3_stricmp(tls, ts+20082 /* "BINARY" */, *(*uintptr)(unsafe.Pointer(_pColl))) != int32(0) {
		goto _5
	}

	return int32(1)

_5:
_4:
	_i++
	goto _1

_3:
	if ((*(*uint32)(unsafe.Pointer(_pExpr + 4))) & uint32(0x800)) == uint32(0) {
		goto _6
	}

	*(*uint8)(unsafe.Pointer(_pWalker + 36)) = uint8(0)
	return int32(2)

_6:
	return _1871exprNodeIsConstant(tls, _pWalker, _pExpr)
}

// _2013isCandidateForInOpt is defined at sqlite3.c:93885:15
func _2013isCandidateForInOpt(tls crt.TLS, _pX uintptr /* *TExpr = SExpr */) (r uintptr /* *TSelect = SSelect */) {
	var (
		_p      uintptr // *TSelect = SSelect
		_pSrc   uintptr // *TSrcList = SSrcList
		_pEList uintptr // *TExprList = SExprList
		_pTab   uintptr // *TTable = STable
		_i      int32
		_pRes   uintptr // *TExpr = SExpr
	)
	if ((*(*uint32)(unsafe.Pointer(_pX + 4))) & uint32(0x800)) != uint32(0) {
		goto _1
	}

	return null

_1:
	if ((*(*uint32)(unsafe.Pointer(_pX + 4))) & uint32(0x20)) == uint32(0) {
		goto _2
	}

	return null

_2:
	_p = *(*uintptr)(unsafe.Pointer(_pX + 32))
	if (*(*uintptr)(unsafe.Pointer(_p + 72))) == 0 {
		goto _3
	}

	return null

_3:
	if ((*(*uint32)(unsafe.Pointer(_p + 12))) & uint32(9)) == 0 {
		goto _4
	}

	return null

_4:
	if (*(*uintptr)(unsafe.Pointer(_p + 88))) == 0 {
		goto _5
	}

	return null

_5:
	if (*(*uintptr)(unsafe.Pointer(_p + 40))) == 0 {
		goto _6
	}

	return null

_6:
	_pSrc = *(*uintptr)(unsafe.Pointer(_p + 32))

	if (*(*int32)(unsafe.Pointer(_pSrc))) == int32(1) {
		goto _7
	}

	return null

_7:
	if (*(*uintptr)(unsafe.Pointer(_pSrc + 8 + 40))) == 0 {
		goto _8
	}

	return null

_8:
	_pTab = *(*uintptr)(unsafe.Pointer(_pSrc + 8 + 32))

	if *(*int32)(unsafe.Pointer(_pTab + 84)) == 0 {
		goto _9
	}

	return null

_9:
	_pEList = *(*uintptr)(unsafe.Pointer(_p))

	_i = int32(0)
_10:
	if _i >= (*(*int32)(unsafe.Pointer(_pEList))) {
		goto _12
	}

	_pRes = *(*uintptr)(unsafe.Pointer((_pEList + 8) + 32*uintptr(_i)))
	if int32(*(*uint8)(unsafe.Pointer(_pRes))) == int32(145) {
		goto _13
	}

	return null

_13:
	_i++
	goto _10

_12:
	return _p
}

// _2014sqlite3InRhsIsConstant is defined at sqlite3.c:93948:12
func _2014sqlite3InRhsIsConstant(tls crt.TLS, _pIn uintptr /* *TExpr = SExpr */) (r int32) {
	var (
		_pLHS uintptr // *TExpr = SExpr
		_res  int32
	)

	_pLHS = *(*uintptr)(unsafe.Pointer(_pIn + 16))
	*(*uintptr)(unsafe.Pointer(_pIn + 16)) = null
	_res = _1799sqlite3ExprIsConstant(tls, _pIn)
	*(*uintptr)(unsafe.Pointer(_pIn + 16)) = _pLHS
	return _res
}

// _2015nameInUsingClause is defined at sqlite3.c:90377:12
func _2015nameInUsingClause(tls crt.TLS, _pUsing uintptr /* *TIdList = SIdList */, _zCol uintptr /* *int8 */) (r int32) {
	var _k int32

	if _pUsing == 0 {
		goto _1
	}

	_k = int32(0)
_2:
	if _k >= (*(*int32)(unsafe.Pointer(_pUsing + 8))) {
		goto _4
	}

	if _110sqlite3StrICmp(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pUsing))) + 16*uintptr(_k))), _zCol) != int32(0) {
		goto _5
	}

	return int32(1)

_5:
	_k++
	goto _2

_4:
_1:
	return int32(0)
}

// _2016sqlite3AuthRead is defined at sqlite3.c:100564:21
func _2016sqlite3AuthRead(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pExpr uintptr /* *TExpr = SExpr */, _pSchema uintptr /* *TSchema = SSchema */, _pTabList uintptr /* *TSrcList = SSrcList */) {
	var (
		_db   uintptr // *Tsqlite3 = Ssqlite3
		_pTab uintptr // *TTable = STable
		_zCol uintptr // *int8
		_iSrc int32
		_iDb  int32
		_iCol int32
	)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_pTab = 0
	if (*(*uintptr)(unsafe.Pointer(_db + 408))) != 0 {
		goto _1
	}

	return

_1:
	_iDb = _1069sqlite3SchemaToIndex(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _pSchema)
	if _iDb >= int32(0) {
		goto _2
	}

	return

_2:
	if int32(*(*uint8)(unsafe.Pointer(_pExpr))) != int32(75) {
		goto _3
	}

	_pTab = *(*uintptr)(unsafe.Pointer(_pParse + 168))
	goto _4

_3:
	_iSrc = int32(0)
_5:
	if _iSrc >= (*(*int32)(unsafe.Pointer(_pTabList))) {
		goto _7
	}

	if (*(*int32)(unsafe.Pointer(_pExpr + 44))) != (*(*int32)(unsafe.Pointer(((_pTabList + 8) + 112*uintptr(_iSrc)) + 64))) {
		goto _8
	}

	_pTab = *(*uintptr)(unsafe.Pointer(((_pTabList + 8) + 112*uintptr(_iSrc)) + 32))
	goto _7

_8:
	_iSrc++
	goto _5

_7:
_4:
	_iCol = int32(*(*int16)(unsafe.Pointer(_pExpr + 48)))
	if _pTab != 0 {
		goto _9
	}

	return

_9:
	if _iCol < int32(0) {
		goto _10
	}

	_zCol = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTab + 8))) + 32*uintptr(_iCol)))
	goto _11

_10:
	if int32(*(*int16)(unsafe.Pointer(_pTab + 68))) < int32(0) {
		goto _12
	}

	_zCol = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTab + 8))) + 32*uintptr(*(*int16)(unsafe.Pointer(_pTab + 68)))))
	goto _13

_12:
	_zCol = ts + 15868 /* "ROWID" */
_13:
_11:
	if int32(2) != _1826sqlite3AuthReadCol(tls, _pParse, *(*uintptr)(unsafe.Pointer(_pTab)), _zCol, _iDb) {
		goto _14
	}

	*(*uint8)(unsafe.Pointer(_pExpr)) = uint8(101)
_14:
}

type SSrcCount struct {
	XpSrc   uintptr // *SSrcList
	XnThis  int32
	XnOther int32
}

// _2017exprSrcCount is defined at sqlite3.c:96776:12
func _2017exprSrcCount(tls crt.TLS, _pWalker uintptr /* *TWalker = SWalker */, _pExpr uintptr /* *TExpr = SExpr */) (r int32) {
	var (
		_i    int32
		_p    uintptr // *SSrcCount
		_pSrc uintptr // *TSrcList = SSrcList
		_nSrc int32
	)
	if int32(*(*uint8)(unsafe.Pointer(_pExpr))) != int32(145) && int32(*(*uint8)(unsafe.Pointer(_pExpr))) != int32(147) {
		goto _1
	}

	_p = *(*uintptr)(unsafe.Pointer(_pWalker + 40))
	_pSrc = *(*uintptr)(unsafe.Pointer(_p))
	_nSrc = func() int32 {
		if _pSrc != 0 {
			return *(*int32)(unsafe.Pointer(_pSrc))
		}
		return int32(0)
	}()
	_i = int32(0)
_2:
	if _i >= _nSrc {
		goto _4
	}

	if (*(*int32)(unsafe.Pointer(_pExpr + 44))) != (*(*int32)(unsafe.Pointer(((_pSrc + 8) + 112*uintptr(_i)) + 64))) {
		goto _5
	}

	goto _4

_5:
	_i++
	goto _2

_4:
	if _i >= _nSrc {
		goto _6
	}

	(*(*int32)(unsafe.Pointer(_p + 8)))++
	goto _7

_6:
	(*(*int32)(unsafe.Pointer(_p + 12)))++
_7:
_1:
	return int32(0)
}

// _2018resolveAsName is defined at sqlite3.c:91104:12
func _2018resolveAsName(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pEList uintptr /* *TExprList = SExprList */, _pE uintptr /* *TExpr = SExpr */) (r int32) {
	var (
		_i    int32
		_zCol uintptr // *int8
		_zAs  uintptr // *int8
	)

	if int32(*(*uint8)(unsafe.Pointer(_pE))) != int32(59) {
		goto _1
	}

	_zCol = *(*uintptr)(unsafe.Pointer(_pE + 8))
	_i = int32(0)
_2:
	if _i >= (*(*int32)(unsafe.Pointer(_pEList))) {
		goto _4
	}

	_zAs = *(*uintptr)(unsafe.Pointer(((_pEList + 8) + 32*uintptr(_i)) + 8))
	if _zAs == 0 || _110sqlite3StrICmp(tls, _zAs, _zCol) != int32(0) {
		goto _5
	}

	return _i + int32(1)

_5:
	_i++
	goto _2

_4:
_1:
	return int32(0)
}

// _2019resolveOrderByTermToExprList is defined at sqlite3.c:91143:12
func _2019resolveOrderByTermToExprList(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pSelect uintptr /* *TSelect = SSelect */, _pE uintptr /* *TExpr = SExpr */) (r int32) {
	esc := crt.MustMalloc(56)
	var (
		_i            int32
		_pEList       uintptr // *TExprList = SExprList
		_nc           = esc   // *TNameContext = SNameContext
		_db           uintptr // *Tsqlite3 = Ssqlite3
		_rc           int32
		_savedSuppErr uint8
	)
	defer crt.Free(esc)

	_pEList = *(*uintptr)(unsafe.Pointer(_pSelect))
	crt.Xmemset(tls, _nc, int32(0), uint64(56))
	*(*uintptr)(unsafe.Pointer(_nc)) = _pParse
	*(*uintptr)(unsafe.Pointer(_nc + 8)) = *(*uintptr)(unsafe.Pointer(_pSelect + 32))
	*(*uintptr)(unsafe.Pointer(_nc + 16)) = _pEList
	*(*uint16)(unsafe.Pointer(_nc + 48)) = uint16(0x1)
	*(*int32)(unsafe.Pointer(_nc + 44)) = int32(0)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_savedSuppErr = *(*uint8)(unsafe.Pointer(_db + 101))
	*(*uint8)(unsafe.Pointer(_db + 101)) = uint8(1)
	_rc = _1588sqlite3ResolveExprNames(tls, _nc, _pE)
	*(*uint8)(unsafe.Pointer(_db + 101)) = _savedSuppErr
	if _rc == 0 {
		goto _1
	}

	return int32(0)

_1:
	_i = int32(0)
_2:
	if _i >= (*(*int32)(unsafe.Pointer(_pEList))) {
		goto _4
	}

	if _1770sqlite3ExprCompare(tls, null, *(*uintptr)(unsafe.Pointer((_pEList + 8) + 32*uintptr(_i))), _pE, int32(-1)) >= int32(2) {
		goto _5
	}

	return _i + int32(1)

_5:
	_i++
	goto _2

_4:
	return int32(0)
}

// _2020sqlite3VdbeLinkSubProgram is defined at sqlite3.c:73108:21
func _2020sqlite3VdbeLinkSubProgram(tls crt.TLS, _pVdbe uintptr /* *TVdbe = SVdbe */, _p uintptr /* *TSubProgram = SSubProgram */) {
	*(*uintptr)(unsafe.Pointer(_p + 40)) = *(*uintptr)(unsafe.Pointer(_pVdbe + 272))
	*(*uintptr)(unsafe.Pointer(_pVdbe + 272)) = _p
}

// _2021codeTriggerProgram is defined at sqlite3.c:124633:12
func _2021codeTriggerProgram(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pStepList uintptr /* *TTriggerStep = STriggerStep */, _orconf int32) (r int32) {
	esc := crt.MustMalloc(32)
	var (
		_pStep   uintptr // *TTriggerStep = STriggerStep
		_v       uintptr // *TVdbe = SVdbe
		_db      uintptr // *Tsqlite3 = Ssqlite3
		_sDest   = esc   // *TSelectDest = SSelectDest
		_pSelect uintptr // *TSelect = SSelect
	)
	defer crt.Free(esc)
	_v = *(*uintptr)(unsafe.Pointer(_pParse + 16))
	_db = *(*uintptr)(unsafe.Pointer(_pParse))

	_pStep = _pStepList
_1:
	if _pStep == 0 {
		goto _3
	}

	*(*uint8)(unsafe.Pointer(_pParse + 193)) = uint8(func() int32 {
		if _orconf == int32(10) {
			return int32(*(*uint8)(unsafe.Pointer(_pStep + 1)))
		}
		return int32(uint8(_orconf))
	}())

	switch int32(*(*uint8)(unsafe.Pointer(_pStep))) {
	case int32(110):
		goto _5
	case int32(108):
		goto _6
	case int32(109):
		goto _7
	default:
		goto _8
	}
_5:
	_1346sqlite3Update(tls, _pParse, _2045targetSrcList(tls, _pParse, _pStep), _1518sqlite3ExprListDup(tls, _db, *(*uintptr)(unsafe.Pointer(_pStep + 40)), int32(0)), _1507sqlite3ExprDup(tls, _db, *(*uintptr)(unsafe.Pointer(_pStep + 32)), int32(0)), int32(*(*uint8)(unsafe.Pointer(_pParse + 193))))
	goto _4

_6:
	_1348sqlite3Insert(tls, _pParse, _2045targetSrcList(tls, _pParse, _pStep), _1529sqlite3SelectDup(tls, _db, *(*uintptr)(unsafe.Pointer(_pStep + 16)), int32(0)), _1661sqlite3IdListDup(tls, _db, *(*uintptr)(unsafe.Pointer(_pStep + 48))), int32(*(*uint8)(unsafe.Pointer(_pParse + 193))))
	goto _4

_7:
	_1344sqlite3DeleteFrom(tls, _pParse, _2045targetSrcList(tls, _pParse, _pStep), _1507sqlite3ExprDup(tls, _db, *(*uintptr)(unsafe.Pointer(_pStep + 32)), int32(0)))
	goto _4

_8:
	_pSelect = _1529sqlite3SelectDup(tls, _db, *(*uintptr)(unsafe.Pointer(_pStep + 16)), int32(0))
	_1497sqlite3SelectDestInit(tls, _sDest, int32(4), int32(0))
	_1327sqlite3Select(tls, _pParse, _pSelect, _sDest)
	_1094sqlite3SelectDelete(tls, _db, _pSelect)
	goto _4

_4:
	if int32(*(*uint8)(unsafe.Pointer(_pStep))) == int32(119) {
		goto _9
	}

	_1473sqlite3VdbeAddOp0(tls, _v, int32(119))
_9:
	_pStep = *(*uintptr)(unsafe.Pointer(_pStep + 56))
	goto _1

_3:
	return int32(0)
}

// _2022transferParseError is defined at sqlite3.c:124728:13
func _2022transferParseError(tls crt.TLS, _pTo uintptr /* *TParse = SParse */, _pFrom uintptr /* *TParse = SParse */) {
	if (*(*int32)(unsafe.Pointer(_pTo + 48))) != int32(0) {
		goto _1
	}

	*(*uintptr)(unsafe.Pointer(_pTo + 8)) = *(*uintptr)(unsafe.Pointer(_pFrom + 8))
	*(*int32)(unsafe.Pointer(_pTo + 48)) = *(*int32)(unsafe.Pointer(_pFrom + 48))
	*(*int32)(unsafe.Pointer(_pTo + 24)) = *(*int32)(unsafe.Pointer(_pFrom + 24))
	goto _2

_1:
	_181sqlite3DbFree(tls, *(*uintptr)(unsafe.Pointer(_pFrom)), *(*uintptr)(unsafe.Pointer(_pFrom + 8)))
_2:
}

// _2023sqlite3VdbeTakeOpArray is defined at sqlite3.c:72897:23
func _2023sqlite3VdbeTakeOpArray(tls crt.TLS, _p uintptr /* *TVdbe = SVdbe */, _pnOp uintptr /* *int32 */, _pnMaxArg uintptr /* *int32 */) (r uintptr /* *TVdbeOp = SVdbeOp */) {
	var _aOp uintptr // *TVdbeOp = SVdbeOp

	_aOp = *(*uintptr)(unsafe.Pointer(_p + 104))

	_1246resolveP2Values(tls, _p, _pnMaxArg)
	*(*int32)(unsafe.Pointer(_pnOp)) = *(*int32)(unsafe.Pointer(_p + 184))
	*(*uintptr)(unsafe.Pointer(_p + 104)) = null
	return _aOp
}

// _2024statInit is defined at sqlite3.c:98327:13
func _2024statInit(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _argc int32, _argv uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	var (
		_p       uintptr // *TStat4Accum = SStat4Accum
		_nCol    int32
		_nKeyCol int32
		_nColUp  int32
		_n       int32
		_db      uintptr // *Tsqlite3 = Ssqlite3
	)

	_nCol = Xsqlite3_value_int(tls, *(*uintptr)(unsafe.Pointer(_argv)))

	_nColUp = (_nCol + int32(1)) & int32(-2)
	_nKeyCol = Xsqlite3_value_int(tls, *(*uintptr)(unsafe.Pointer(_argv + 8)))

	_n = int32((uint64(88) + (uint64(4) * uint64(_nColUp))) + (uint64(4) * uint64(_nColUp)))
	_db = Xsqlite3_context_db_handle(tls, _context)
	_p = _295sqlite3DbMallocZero(tls, _db, uint64(_n))
	if _p != 0 {
		goto _1
	}

	Xsqlite3_result_error_nomem(tls, _context)
	return

_1:
	*(*uintptr)(unsafe.Pointer(_p + 80)) = _db
	*(*uint32)(unsafe.Pointer(_p)) = uint32(0)
	*(*int32)(unsafe.Pointer(_p + 8)) = _nCol
	*(*int32)(unsafe.Pointer(_p + 12)) = _nKeyCol
	*(*uintptr)(unsafe.Pointer((_p + 24) + 8)) = _p + 88
	*(*uintptr)(unsafe.Pointer(_p + 24)) = (*(*uintptr)(unsafe.Pointer((_p + 24) + 8))) + 4*uintptr(_nColUp)
	Xsqlite3_result_blob(tls, _context, _p, int32(88), fp18(_2046stat4Destructor))
}

// _2025statPush is defined at sqlite3.c:98656:13
func _2025statPush(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _argc int32, _argv uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	var (
		_i     int32
		_p     uintptr // *TStat4Accum = SStat4Accum
		_iChng int32
	)
	_p = Xsqlite3_value_blob(tls, *(*uintptr)(unsafe.Pointer(_argv)))
	_iChng = Xsqlite3_value_int(tls, *(*uintptr)(unsafe.Pointer(_argv + 8)))

	if (*(*uint32)(unsafe.Pointer(_p))) != uint32(0) {
		goto _1
	}

	_i = int32(0)
_3:
	if _i >= (*(*int32)(unsafe.Pointer(_p + 8))) {
		goto _5
	}

	*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 24))) + 4*uintptr(_i))) = uint32(1)
	_i++
	goto _3

_5:
	goto _2

_1:
	_2047samplePushPrevious(tls, _p, _iChng)
	_i = int32(0)
_6:
	if _i >= _iChng {
		goto _8
	}

	(*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 24))) + 4*uintptr(_i))))++
	_i++
	goto _6

_8:
	_i = _iChng
_9:
	if _i >= (*(*int32)(unsafe.Pointer(_p + 8))) {
		goto _11
	}

	(*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((_p + 24) + 8))) + 4*uintptr(_i))))++
	*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 24))) + 4*uintptr(_i))) = uint32(1)
	_i++
	goto _9

_11:
_2:
	(*(*uint32)(unsafe.Pointer(_p)))++
}

// _2026statGetFuncdef TFuncDef = SFuncDef, escapes: true, sqlite3.c:98876:22
var _2026statGetFuncdef = bss + 18256 // FuncDef

func init() {
	*(*SFuncDef)(unsafe.Pointer(_2026statGetFuncdef)) = SFuncDef{
		XnArg:      int8(1),
		XfuncFlags: uint16(1),
		XxSFunc:    fp6(_2048statGet),
		XzName:     ts + 33883, /* "stat_get" */
	}
}

// _2027searchWith is defined at sqlite3.c:121803:19
func _2027searchWith(tls crt.TLS, _pWith uintptr /* *TWith = SWith */, _pItem uintptr /* *SSrcList_item */, _ppContext uintptr /* **TWith = SWith */) (r uintptr /* *SCte */) {
	var (
		_zName uintptr // *int8
		_p     uintptr // *TWith = SWith
		_i     int32
	)
	if (*(*uintptr)(unsafe.Pointer(_pItem + 8))) != 0 || set4(&_zName, *(*uintptr)(unsafe.Pointer(_pItem + 16))) == 0 {
		goto _1
	}

	_p = _pWith
_2:
	if _p == 0 {
		goto _4
	}

	_i = int32(0)
_5:
	if _i >= (*(*int32)(unsafe.Pointer(_p))) {
		goto _7
	}

	if _110sqlite3StrICmp(tls, _zName, *(*uintptr)(unsafe.Pointer((_p + 16) + 32*uintptr(_i)))) != int32(0) {
		goto _8
	}

	*(*uintptr)(unsafe.Pointer(_ppContext)) = _p
	return (_p + 16) + 32*uintptr(_i)

_8:
	_i++
	goto _5

_7:
	_p = *(*uintptr)(unsafe.Pointer(_p + 8))
	goto _2

_4:
_1:
	return null
}

// _2028addWhereTerm is defined at sqlite3.c:118002:13
func _2028addWhereTerm(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pSrc uintptr /* *TSrcList = SSrcList */, _iLeft int32, _iColLeft int32, _iRight int32, _iColRight int32, _isOuterJoin int32, _ppWhere uintptr /* **TExpr = SExpr */) {
	var (
		_db  uintptr // *Tsqlite3 = Ssqlite3
		_pE1 uintptr // *TExpr = SExpr
		_pE2 uintptr // *TExpr = SExpr
		_pEq uintptr // *TExpr = SExpr
	)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))

	_pE1 = _2049sqlite3CreateColumnExpr(tls, _db, _pSrc, _iLeft, _iColLeft)
	_pE2 = _2049sqlite3CreateColumnExpr(tls, _db, _pSrc, _iRight, _iColRight)
	_pEq = _1316sqlite3PExpr(tls, _pParse, int32(53), _pE1, _pE2)
	if _pEq == 0 || _isOuterJoin == 0 {
		goto _1
	}

	{
		p := &(*(*uint32)(unsafe.Pointer(_pEq + 4)))
		*p = uint32(uint32(*p) | uint32(0x1))
	}

	*(*int16)(unsafe.Pointer(_pEq + 52)) = int16(*(*int32)(unsafe.Pointer(_pE2 + 44)))
_1:
	*(*uintptr)(unsafe.Pointer(_ppWhere)) = _1508sqlite3ExprAnd(tls, _db, *(*uintptr)(unsafe.Pointer(_ppWhere)), _pEq)
}

// _2029columnIndex is defined at sqlite3.c:117950:12
func _2029columnIndex(tls crt.TLS, _pTab uintptr /* *TTable = STable */, _zCol uintptr /* *int8 */) (r int32) {
	var _i int32

	_i = int32(0)
_1:
	if _i >= int32(*(*int16)(unsafe.Pointer(_pTab + 70))) {
		goto _3
	}

	if _110sqlite3StrICmp(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTab + 8))) + 32*uintptr(_i))), _zCol) != int32(0) {
		goto _4
	}

	return _i

_4:
	_i++
	goto _1

_3:
	return int32(-1)
}

// _2030incrAggFunctionDepth is defined at sqlite3.c:90299:13
func _2030incrAggFunctionDepth(tls crt.TLS, _pExpr uintptr /* *TExpr = SExpr */, _N int32) {
	esc := crt.MustMalloc(48)
	var _w = esc // *TWalker = SWalker
	defer crt.Free(esc)
	if _N <= int32(0) {
		goto _1
	}

	crt.Xmemset(tls, _w, int32(0), uint64(48))
	*(*uintptr)(unsafe.Pointer(_w + 8)) = fp56(_2050incrAggDepth)
	*(*int32)(unsafe.Pointer(_w + 40)) = _N
	_1795sqlite3WalkExpr(tls, _w, _pExpr)
_1:
}

// _2031exprMightBeIndexed2 is defined at sqlite3.c:131175:28
func _2031exprMightBeIndexed2(tls crt.TLS, _pFrom uintptr /* *TSrcList = SSrcList */, _mPrereq uint64, _aiCurCol uintptr /* *int32 */, _pExpr uintptr /* *TExpr = SExpr */) (r int32) {
	var (
		_pIdx uintptr // *TIndex = SIndex
		_i    int32
		_iCur int32
	)
	_i = int32(0)
_1:
	if _mPrereq <= uint64(1) {
		goto _3
	}

	_i++
	_mPrereq = uint64(_mPrereq >> uint32(1))
	goto _1

_3:
	_iCur = *(*int32)(unsafe.Pointer(((_pFrom + 8) + 112*uintptr(_i)) + 64))
	_pIdx = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(((_pFrom + 8) + 112*uintptr(_i)) + 32))) + 16))
_4:
	if _pIdx == 0 {
		goto _6
	}

	if (*(*uintptr)(unsafe.Pointer(_pIdx + 80))) != 0 {
		goto _7
	}

	goto _5

_7:
	_i = int32(0)
_8:
	if _i >= int32(*(*uint16)(unsafe.Pointer(_pIdx + 94))) {
		goto _10
	}

	if int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 8))) + 2*uintptr(_i)))) == int32(-2) {
		goto _11
	}

	goto _9

_11:
	if _2002sqlite3ExprCompareSkip(tls, _pExpr, *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pIdx + 80))) + 8) + 32*uintptr(_i))), _iCur) != int32(0) {
		goto _12
	}

	*(*int32)(unsafe.Pointer(_aiCurCol)) = _iCur
	*(*int32)(unsafe.Pointer(_aiCurCol + 4)) = int32(-2)
	return int32(1)

_12:
_9:
	_i++
	goto _8

_10:
_5:
	_pIdx = *(*uintptr)(unsafe.Pointer(_pIdx + 40))
	goto _4

_6:
	return int32(0)
}

type SWhereOrInfo struct {
	Xwc        SWhereClause
	Xindexable uint64
}

type SWhereAndInfo struct{ Xwc SWhereClause }

// _2032whereNthSubterm is defined at sqlite3.c:130699:18
func _2032whereNthSubterm(tls crt.TLS, _pTerm uintptr /* *TWhereTerm = SWhereTerm */, _N int32) (r uintptr /* *TWhereTerm = SWhereTerm */) {
	if int32(*(*uint16)(unsafe.Pointer(_pTerm + 20))) == int32(0x400) {
		goto _1
	}

	if _N == int32(0) {
		return _pTerm
	}

	return null

_1:
	if _N >= (*(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pTerm + 40)) + 20))) {
		goto _2
	}

	return (*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pTerm + 40)) + 32))) + 64*uintptr(_N)

_2:
	return null
}

// _2033whereCombineDisjuncts is defined at sqlite3.c:130729:13
func _2033whereCombineDisjuncts(tls crt.TLS, _pSrc uintptr /* *TSrcList = SSrcList */, _pWC uintptr /* *TWhereClause = SWhereClause */, _pOne uintptr /* *TWhereTerm = SWhereTerm */, _pTwo uintptr /* *TWhereTerm = SWhereTerm */) {
	var (
		_eOp    uint16
		_db     uintptr // *Tsqlite3 = Ssqlite3
		_pNew   uintptr // *TExpr = SExpr
		_op     int32
		_idxNew int32
	)
	_eOp = uint16(int32(*(*uint16)(unsafe.Pointer(_pOne + 20))) | int32(*(*uint16)(unsafe.Pointer(_pTwo + 20))))
	if (int32(*(*uint16)(unsafe.Pointer(_pOne + 20))) & int32(62)) != int32(0) {
		goto _1
	}

	return

_1:
	if (int32(*(*uint16)(unsafe.Pointer(_pTwo + 20))) & int32(62)) != int32(0) {
		goto _2
	}

	return

_2:
	if (int32(_eOp)&int32(26)) == int32(_eOp) || (int32(_eOp)&int32(38)) == int32(_eOp) {
		goto _3
	}

	return

_3:
	if _1770sqlite3ExprCompare(tls, null, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pOne))) + 16)), *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTwo))) + 16)), int32(-1)) == 0 {
		goto _4
	}

	return

_4:
	if _1770sqlite3ExprCompare(tls, null, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pOne))) + 24)), *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTwo))) + 24)), int32(-1)) == 0 {
		goto _5
	}

	return

_5:
	if (int32(_eOp) & (int32(_eOp) - int32(1))) == int32(0) {
		goto _6
	}

	if (int32(_eOp) & int32(24)) == 0 {
		goto _7
	}

	_eOp = uint16(8)
	goto _8

_7:
	_eOp = uint16(32)
_8:
_6:
	_db = *(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pWC))))))
	_pNew = _1507sqlite3ExprDup(tls, _db, *(*uintptr)(unsafe.Pointer(_pOne)), int32(0))
	if _pNew != 0 {
		goto _9
	}

	return

_9:
	_op = int32(53)
_10:
	if int32(_eOp) == (int32(0x2) << (uint(_op-int32(53)) % 32)) {
		goto _12
	}

	_op++
	goto _10

_12:
	*(*uint8)(unsafe.Pointer(_pNew)) = uint8(_op)
	_idxNew = _1893whereClauseInsert(tls, _pWC, _pNew, uint16(3))
	_1894exprAnalyze(tls, _pSrc, _pWC, _idxNew)
}

// _2034sqlite3IsLikeFunction is defined at sqlite3.c:108265:20
func _2034sqlite3IsLikeFunction(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pExpr uintptr /* *TExpr = SExpr */, _pIsNocase uintptr /* *int32 */, _aWc uintptr /* *int8 */) (r int32) {
	var (
		_pDef    uintptr // *TFuncDef = SFuncDef
		_nExpr   int32
		_pEscape uintptr // *TExpr = SExpr
		_zEscape uintptr // *int8
	)
	if int32(*(*uint8)(unsafe.Pointer(_pExpr))) == int32(144) && (*(*uintptr)(unsafe.Pointer(_pExpr + 32))) != 0 {
		goto _1
	}

	return int32(0)

_1:
	_nExpr = *(*int32)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pExpr + 32))))
	_pDef = _541sqlite3FindFunction(tls, _db, *(*uintptr)(unsafe.Pointer(_pExpr + 8)), _nExpr, uint8(1), uint8(0))
	if _pDef != 0 && (int32(*(*uint16)(unsafe.Pointer(_pDef + 2)))&int32(0x4)) != int32(0) {
		goto _2
	}

	return int32(0)

_2:
	if _nExpr >= int32(3) {
		goto _3
	}

	*(*int8)(unsafe.Pointer(_aWc + 3)) = int8(0)
	goto _4

_3:
	_pEscape = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pExpr + 32))) + 8) + 64))
	if int32(*(*uint8)(unsafe.Pointer(_pEscape))) == int32(97) {
		goto _5
	}

	return int32(0)

_5:
	_zEscape = *(*uintptr)(unsafe.Pointer(_pEscape + 8))
	if int32(*(*int8)(unsafe.Pointer(_zEscape))) != int32(0) && int32(*(*int8)(unsafe.Pointer(_zEscape + 1))) == int32(0) {
		goto _6
	}

	return int32(0)

_6:
	*(*int8)(unsafe.Pointer(_aWc + 3)) = *(*int8)(unsafe.Pointer(_zEscape))
_4:
	crt.Xmemcpy(tls, _aWc, *(*uintptr)(unsafe.Pointer(_pDef + 8)), uint64(3))

	*(*int32)(unsafe.Pointer(_pIsNocase)) = bool2int((int32(*(*uint16)(unsafe.Pointer(_pDef + 2))) & int32(0x8)) == int32(0))
	return int32(1)
}

// _2035aOp [4]struct{XzOp *int8;XeOp2 uint8;}, escapes: true, sqlite3.c:130626:7
var _2035aOp = bss + 18312 // array of 4 struct{zOp pointer to char; eOp2 unsigned char}

func init() {
	*(*[4]struct {
		XzOp  uintptr // *int8
		XeOp2 uint8
	})(unsafe.Pointer(_2035aOp)) = [4]struct {
		XzOp  uintptr // *int8
		XeOp2 uint8
	}{
		0:
		// *int8

		{
			XzOp:  ts + 32325, /* "match" */
			XeOp2: uint8(64),
		},
		1:
		// *int8

		{
			XzOp:  ts + 17096, /* "glob" */
			XeOp2: uint8(66),
		},
		2:
		// *int8

		{
			XzOp:  ts + 17101, /* "like" */
			XeOp2: uint8(65),
		},
		3:
		// *int8

		{
			XzOp:  ts + 33892, /* "regexp" */
			XeOp2: uint8(67),
		},
	}
}

type Ssqlite3_index_orderby struct {
	XiColumn int32
	Xdesc    uint8
}

type Ssqlite3_index_constraint_usage struct {
	XargvIndex int32
	Xomit      uint8
}

// _2036vtabBestIndex is defined at sqlite3.c:132797:12
func _2036vtabBestIndex(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pTab uintptr /* *TTable = STable */, _p uintptr /* *Tsqlite3_index_info = Ssqlite3_index_info */) (r int32) {
	var (
		_pVtab uintptr // *Tsqlite3_vtab = Ssqlite3_vtab
		_rc    int32
	)
	_pVtab = *(*uintptr)(unsafe.Pointer(_1037sqlite3GetVTable(tls, *(*uintptr)(unsafe.Pointer(_pParse)), _pTab) + 16))
	_rc = fn58(*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pVtab))) + 24)))(tls, _pVtab, _p)
	if _rc == int32(0) {
		goto _1
	}

	if _rc != int32(7) {
		goto _2
	}

	_178sqlite3OomFault(tls, *(*uintptr)(unsafe.Pointer(_pParse)))
	goto _3

_2:
	if (*(*uintptr)(unsafe.Pointer(_pVtab + 16))) != 0 {
		goto _4
	}

	_550sqlite3ErrorMsg(tls, _pParse, ts+429 /* "%s" */, _123sqlite3ErrStr(tls, _rc))
	goto _5

_4:
	_550sqlite3ErrorMsg(tls, _pParse, ts+429 /* "%s" */, *(*uintptr)(unsafe.Pointer(_pVtab + 16)))
_5:
_3:
_1:
	Xsqlite3_free(tls, *(*uintptr)(unsafe.Pointer(_pVtab + 16)))
	*(*uintptr)(unsafe.Pointer(_pVtab + 16)) = null
	return *(*int32)(unsafe.Pointer(_pParse + 48))
}

// _2037sqlite3LogEstFromDouble is defined at sqlite3.c:29570:23
func _2037sqlite3LogEstFromDouble(tls crt.TLS, ax float64) (r int16) {
	esc := crt.MustMalloc(24)
	var (
		_x = esc      // *float64
		_a = esc + 16 // *Tu64 = Tsqlite_uint64 = uint64
		_e int16
	)
	defer crt.Free(esc)
	*(*float64)(unsafe.Pointer(_x)) = ax

	if (*(*float64)(unsafe.Pointer(_x))) > float64(1) {
		goto _1
	}

	return int16(0)

_1:
	if (*(*float64)(unsafe.Pointer(_x))) > float64(2000000000) {
		goto _2
	}

	return _703sqlite3LogEst(tls, uint64(*(*float64)(unsafe.Pointer(_x))))

_2:
	crt.Xmemcpy(tls, _a, _x, uint64(8))
	_e = int16(((*(*uint64)(unsafe.Pointer(_a))) >> (uint(52) % 64)) - uint64(1022))
	return int16(int32(_e) * int32(10))
}

// _2038whereLoopAdjustCost is defined at sqlite3.c:133751:13
func _2038whereLoopAdjustCost(tls crt.TLS, _p uintptr /* *TWhereLoop = SWhereLoop */, _pTemplate uintptr /* *TWhereLoop = SWhereLoop */) {
	if ((*(*uint32)(unsafe.Pointer(_pTemplate + 40))) & uint32(0x200)) != uint32(0) {
		goto _1
	}

	return

_1:
_2:
	if _p == 0 {
		goto _4
	}

	if int32(*(*uint8)(unsafe.Pointer(_p + 16))) == int32(*(*uint8)(unsafe.Pointer(_pTemplate + 16))) {
		goto _5
	}

	goto _3

_5:
	if ((*(*uint32)(unsafe.Pointer(_p + 40))) & uint32(0x200)) != uint32(0) {
		goto _6
	}

	goto _3

_6:
	if _2051whereLoopCheaperProperSubset(tls, _p, _pTemplate) == 0 {
		goto _7
	}

	*(*int16)(unsafe.Pointer(_pTemplate + 20)) = *(*int16)(unsafe.Pointer(_p + 20))
	*(*int16)(unsafe.Pointer(_pTemplate + 22)) = int16(int32(*(*int16)(unsafe.Pointer(_p + 22))) - int32(1))
	goto _8

_7:
	if _2051whereLoopCheaperProperSubset(tls, _pTemplate, _p) == 0 {
		goto _9
	}

	*(*int16)(unsafe.Pointer(_pTemplate + 20)) = *(*int16)(unsafe.Pointer(_p + 20))
	*(*int16)(unsafe.Pointer(_pTemplate + 22)) = int16(int32(*(*int16)(unsafe.Pointer(_p + 22))) + int32(1))
_9:
_8:
_3:
	_p = *(*uintptr)(unsafe.Pointer(_p + 64))
	goto _2

_4:
}

// _2039whereLoopFindLesser is defined at sqlite3.c:133788:18
func _2039whereLoopFindLesser(tls crt.TLS, _ppPrev uintptr /* **TWhereLoop = SWhereLoop */, _pTemplate uintptr /* *TWhereLoop = SWhereLoop */) (r uintptr /* **TWhereLoop = SWhereLoop */) {
	var _p uintptr // *TWhereLoop = SWhereLoop

	_p = *(*uintptr)(unsafe.Pointer(_ppPrev))
_1:
	if _p == 0 {
		goto _3
	}

	if int32(*(*uint8)(unsafe.Pointer(_p + 16))) == int32(*(*uint8)(unsafe.Pointer(_pTemplate + 16))) && int32(*(*uint8)(unsafe.Pointer(_p + 17))) == int32(*(*uint8)(unsafe.Pointer(_pTemplate + 17))) {
		goto _4
	}

	goto _2

_4:
	if ((*(*uint32)(unsafe.Pointer(_p + 40)))&uint32(0x4000)) == uint32(0) || int32(*(*uint16)(unsafe.Pointer(_pTemplate + 46))) != int32(0) || ((*(*uint32)(unsafe.Pointer(_pTemplate + 40)))&uint32(0x200)) == uint32(0) || ((*(*uint32)(unsafe.Pointer(_pTemplate + 40)))&uint32(0x1)) == uint32(0) || ((*(*uint64)(unsafe.Pointer(_p)))&(*(*uint64)(unsafe.Pointer(_pTemplate)))) != (*(*uint64)(unsafe.Pointer(_pTemplate))) {
		goto _5
	}

	goto _3

_5:
	if ((*(*uint64)(unsafe.Pointer(_p)))&(*(*uint64)(unsafe.Pointer(_pTemplate)))) != (*(*uint64)(unsafe.Pointer(_p))) || int32(*(*int16)(unsafe.Pointer(_p + 18))) > int32(*(*int16)(unsafe.Pointer(_pTemplate + 18))) || int32(*(*int16)(unsafe.Pointer(_p + 20))) > int32(*(*int16)(unsafe.Pointer(_pTemplate + 20))) || int32(*(*int16)(unsafe.Pointer(_p + 22))) > int32(*(*int16)(unsafe.Pointer(_pTemplate + 22))) {
		goto _6
	}

	return null

_6:
	if ((*(*uint64)(unsafe.Pointer(_p)))&(*(*uint64)(unsafe.Pointer(_pTemplate)))) != (*(*uint64)(unsafe.Pointer(_pTemplate))) || int32(*(*int16)(unsafe.Pointer(_p + 20))) < int32(*(*int16)(unsafe.Pointer(_pTemplate + 20))) || int32(*(*int16)(unsafe.Pointer(_p + 22))) < int32(*(*int16)(unsafe.Pointer(_pTemplate + 22))) {
		goto _7
	}

	goto _3

_7:
_2:
	_ppPrev = _p + 64
	_p = *(*uintptr)(unsafe.Pointer(_ppPrev))
	goto _1

_3:
	return _ppPrev
}

// _2040whereLoopXfer is defined at sqlite3.c:133646:12
func _2040whereLoopXfer(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pTo uintptr /* *TWhereLoop = SWhereLoop */, _pFrom uintptr /* *TWhereLoop = SWhereLoop */) (r int32) {
	_2000whereLoopClearUnion(tls, _db, _pTo)
	if _1909whereLoopResize(tls, _db, _pTo, int32(*(*uint16)(unsafe.Pointer(_pFrom + 44)))) == 0 {
		goto _1
	}

	crt.Xmemset(tls, _pTo+24, int32(0), uint64(16))
	return int32(7)

_1:
	crt.Xmemcpy(tls, _pTo, _pFrom, uint64(48))
	crt.Xmemcpy(tls, *(*uintptr)(unsafe.Pointer(_pTo + 56)), *(*uintptr)(unsafe.Pointer(_pFrom + 56)), uint64(*(*uint16)(unsafe.Pointer(_pTo + 44)))*uint64(8))
	if ((*(*uint32)(unsafe.Pointer(_pFrom + 40))) & uint32(0x400)) == 0 {
		goto _2
	}

	*(*uint8)(unsafe.Pointer(_pFrom + 24 + 4)) = uint8(0)
	goto _3

_2:
	if ((*(*uint32)(unsafe.Pointer(_pFrom + 40))) & uint32(0x4000)) == uint32(0) {
		goto _4
	}

	*(*uintptr)(unsafe.Pointer(_pFrom + 24 + 8)) = null
_4:
_3:
	return int32(0)
}

// _2041sqlite3ExprImpliesExpr is defined at sqlite3.c:96688:20
func _2041sqlite3ExprImpliesExpr(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pE1 uintptr /* *TExpr = SExpr */, _pE2 uintptr /* *TExpr = SExpr */, _iTab int32) (r int32) {
	var _pX uintptr // *TExpr = SExpr

	if _1770sqlite3ExprCompare(tls, _pParse, _pE1, _pE2, _iTab) != int32(0) {
		goto _1
	}

	return int32(1)

_1:
	if int32(*(*uint8)(unsafe.Pointer(_pE2))) != int32(43) || _2041sqlite3ExprImpliesExpr(tls, _pParse, _pE1, *(*uintptr)(unsafe.Pointer(_pE2 + 16)), _iTab) == 0 && _2041sqlite3ExprImpliesExpr(tls, _pParse, _pE1, *(*uintptr)(unsafe.Pointer(_pE2 + 24)), _iTab) == 0 {
		goto _2
	}

	return int32(1)

_2:
	if int32(*(*uint8)(unsafe.Pointer(_pE2))) != int32(51) || int32(*(*uint8)(unsafe.Pointer(_pE1))) == int32(50) || int32(*(*uint8)(unsafe.Pointer(_pE1))) == int32(45) {
		goto _3
	}

	_pX = _1510sqlite3ExprSkipCollate(tls, *(*uintptr)(unsafe.Pointer(_pE1 + 16)))
	if _1770sqlite3ExprCompare(tls, _pParse, _pX, *(*uintptr)(unsafe.Pointer(_pE2 + 16)), _iTab) != int32(0) {
		goto _4
	}

	return int32(1)

_4:
_3:
	return int32(0)
}

// _2042whereRangeVectorLen is defined at sqlite3.c:134067:12
func _2042whereRangeVectorLen(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _iCur int32, _pIdx uintptr /* *TIndex = SIndex */, _nEq int32, _pTerm uintptr /* *TWhereTerm = SWhereTerm */) (r int32) {
	var (
		_nCmp   int32
		_i      int32
		_aff    int8
		_idxaff int8
		_pColl  uintptr // *TCollSeq = SCollSeq
		_pLhs   uintptr // *TExpr = SExpr
		_pRhs   uintptr // *TExpr = SExpr
	)
	_nCmp = _1608sqlite3ExprVectorSize(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTerm))) + 16)))
	_nCmp = func() int32 {
		if _nCmp < (int32(*(*uint16)(unsafe.Pointer(_pIdx + 96))) - _nEq) {
			return _nCmp
		}
		return int32(*(*uint16)(unsafe.Pointer(_pIdx + 96))) - _nEq
	}()
	_i = int32(1)
_1:
	if _i >= _nCmp {
		goto _3
	}

	_idxaff = int8(0)
	_pLhs = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTerm))) + 16))) + 32))) + 8) + 32*uintptr(_i)))
	_pRhs = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pTerm))) + 24))
	if ((*(*uint32)(unsafe.Pointer(_pRhs + 4))) & uint32(0x800)) == 0 {
		goto _4
	}

	_pRhs = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pRhs + 32))))) + 8) + 32*uintptr(_i)))
	goto _5

_4:
	_pRhs = *(*uintptr)(unsafe.Pointer(((*(*uintptr)(unsafe.Pointer(_pRhs + 32))) + 8) + 32*uintptr(_i)))
_5:
	if int32(*(*uint8)(unsafe.Pointer(_pLhs))) == int32(145) && (*(*int32)(unsafe.Pointer(_pLhs + 44))) == _iCur && int32(*(*int16)(unsafe.Pointer(_pLhs + 48))) == int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 8))) + 2*uintptr(_i+_nEq)))) && int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 56))) + uintptr(_i+_nEq)))) == int32(*(*uint8)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 56))) + uintptr(_nEq)))) {
		goto _6
	}

	goto _3

_6:
	_aff = _2006sqlite3CompareAffinity(tls, _pRhs, _1817sqlite3ExprAffinity(tls, _pLhs))
	_idxaff = _1948sqlite3TableColumnAffinity(tls, *(*uintptr)(unsafe.Pointer(_pIdx + 24)), int32(*(*int16)(unsafe.Pointer(_pLhs + 48))))
	if int32(_aff) == int32(_idxaff) {
		goto _7
	}

	goto _3

_7:
	_pColl = _1910sqlite3BinaryCompareCollSeq(tls, _pParse, _pLhs, _pRhs)
	if _pColl != 0 {
		goto _8
	}

	goto _3

_8:
	if _110sqlite3StrICmp(tls, *(*uintptr)(unsafe.Pointer(_pColl)), *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pIdx + 64))) + 8*uintptr(_i+_nEq)))) == 0 {
		goto _9
	}

	goto _3

_9:
	_i++
	goto _1

_3:
	return _i
}

// _2043whereRangeScanEst is defined at sqlite3.c:133213:12
func _2043whereRangeScanEst(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pBuilder uintptr /* *TWhereLoopBuilder = SWhereLoopBuilder */, _pLower uintptr /* *TWhereTerm = SWhereTerm */, _pUpper uintptr /* *TWhereTerm = SWhereTerm */, _pLoop uintptr /* *TWhereLoop = SWhereLoop */) (r int32) {
	var (
		_rc   int32
		_nOut int32
		_nNew int16
	)
	_rc = int32(0)
	_nOut = int32(*(*int16)(unsafe.Pointer(_pLoop + 22)))

	_nNew = _2052whereRangeAdjust(tls, _pLower, int16(_nOut))
	_nNew = _2052whereRangeAdjust(tls, _pUpper, _nNew)
	if _pLower == 0 || int32(*(*int16)(unsafe.Pointer(_pLower + 16))) <= int32(0) || _pUpper == 0 || int32(*(*int16)(unsafe.Pointer(_pUpper + 16))) <= int32(0) {
		goto _1
	}

	_nNew = int16(int32(_nNew) - int32(20))
_1:
	_nOut = int32(_nOut - (bool2int(_pLower != 0) + bool2int(_pUpper != 0)))
	if int32(_nNew) >= int32(10) {
		goto _2
	}

	_nNew = int16(10)
_2:
	if int32(_nNew) >= _nOut {
		goto _3
	}

	_nOut = int32(_nNew)
_3:
	*(*int16)(unsafe.Pointer(_pLoop + 22)) = int16(_nOut)
	return _rc
}

// _2044comparisonAffinity is defined at sqlite3.c:92055:13
func _2044comparisonAffinity(tls crt.TLS, _pExpr uintptr /* *TExpr = SExpr */) (r int8) {
	var _aff int8

	_aff = _1817sqlite3ExprAffinity(tls, *(*uintptr)(unsafe.Pointer(_pExpr + 16)))
	if (*(*uintptr)(unsafe.Pointer(_pExpr + 24))) == 0 {
		goto _1
	}

	_aff = _2006sqlite3CompareAffinity(tls, *(*uintptr)(unsafe.Pointer(_pExpr + 24)), _aff)
	goto _2

_1:
	if ((*(*uint32)(unsafe.Pointer(_pExpr + 4))) & uint32(0x800)) == uint32(0) {
		goto _3
	}

	_aff = _2006sqlite3CompareAffinity(tls, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(*(*uintptr)(unsafe.Pointer(_pExpr + 32))))) + 8)), _aff)
	goto _4

_3:
	if int32(_aff) != int32(0) {
		goto _5
	}

	_aff = int8('A')
_5:
_4:
_2:
	return _aff
}

// _2045targetSrcList is defined at sqlite3.c:124606:16
func _2045targetSrcList(tls crt.TLS, _pParse uintptr /* *TParse = SParse */, _pStep uintptr /* *TTriggerStep = STriggerStep */) (r uintptr /* *TSrcList = SSrcList */) {
	var (
		_db   uintptr // *Tsqlite3 = Ssqlite3
		_iDb  int32
		_pSrc uintptr // *TSrcList = SSrcList
		_zDb  uintptr // *int8
	)
	_db = *(*uintptr)(unsafe.Pointer(_pParse))
	_pSrc = _1340sqlite3SrcListAppend(tls, _db, null, null, null)
	if _pSrc == 0 {
		goto _1
	}

	*(*uintptr)(unsafe.Pointer(((_pSrc + 8) + 112*uintptr((*(*int32)(unsafe.Pointer(_pSrc)))-int32(1))) + 16)) = _183sqlite3DbStrDup(tls, _db, *(*uintptr)(unsafe.Pointer(_pStep + 24)))
	_iDb = _1069sqlite3SchemaToIndex(tls, _db, *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pStep + 8))) + 40)))
	if _iDb != int32(0) && _iDb < int32(2) {
		goto _2
	}

	_zDb = *(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_db + 32))) + 32*uintptr(_iDb)))
	*(*uintptr)(unsafe.Pointer(((_pSrc + 8) + 112*uintptr((*(*int32)(unsafe.Pointer(_pSrc)))-int32(1))) + 8)) = _183sqlite3DbStrDup(tls, _db, _zDb)
_2:
_1:
	return _pSrc
}

type SStat4Accum struct {
	XnRow       uint32
	XnPSample   uint32
	XnCol       int32
	XnKeyCol    int32
	XmxSample   int32
	Xcurrent    SStat4Sample
	XiPrn       uint32
	XaBest      uintptr // *SStat4Sample
	XiMin       int32
	XnSample    int32
	XnMaxEqZero int32
	XiGet       int32
	Xa          uintptr // *SStat4Sample
	Xdb         uintptr // *Ssqlite3
}

// _2046stat4Destructor is defined at sqlite3.c:98293:13
func _2046stat4Destructor(tls crt.TLS, _pOld uintptr /* *void */) {
	var _p uintptr // *TStat4Accum = SStat4Accum

	_p = _pOld
	_181sqlite3DbFree(tls, *(*uintptr)(unsafe.Pointer(_p + 80)), _p)
}

// _2047samplePushPrevious is defined at sqlite3.c:98580:13
func _2047samplePushPrevious(tls crt.TLS, _p uintptr /* *TStat4Accum = SStat4Accum */, _iChng int32) {
}

// _2048statGet is defined at sqlite3.c:98761:13
func _2048statGet(tls crt.TLS, _context uintptr /* *Tsqlite3_context = Ssqlite3_context */, _argc int32, _argv uintptr /* **Tsqlite3_value = Ssqlite3_value */) {
	var (
		_p         uintptr // *TStat4Accum = SStat4Accum
		_z         uintptr // *int8
		_i         int32
		_zRet      uintptr // *int8
		_nDistinct uint64
		_iVal      uint64
	)
	_p = Xsqlite3_value_blob(tls, *(*uintptr)(unsafe.Pointer(_argv)))

	_zRet = _135sqlite3MallocZero(tls, uint64(((*(*int32)(unsafe.Pointer(_p + 12)))+int32(1))*int32(25)))
	if _zRet != 0 {
		goto _1
	}

	Xsqlite3_result_error_nomem(tls, _context)
	return

_1:
	Xsqlite3_snprintf(tls, int32(24), _zRet, ts+33899 /* "%llu" */, uint64(*(*uint32)(unsafe.Pointer(_p))))
	_z = _zRet + uintptr(_211sqlite3Strlen30(tls, _zRet))
	_i = int32(0)
_2:
	if _i >= (*(*int32)(unsafe.Pointer(_p + 12))) {
		goto _4
	}

	_nDistinct = uint64((*(*uint32)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer((_p + 24) + 8))) + 4*uintptr(_i)))) + uint32(1))
	_iVal = ((uint64(*(*uint32)(unsafe.Pointer(_p))) + _nDistinct) - uint64(1)) / _nDistinct
	Xsqlite3_snprintf(tls, int32(24), _z, ts+33904 /* " %llu" */, _iVal)
	_z += uintptr(_211sqlite3Strlen30(tls, _z))

	_i++
	goto _2

_4:
	Xsqlite3_result_text(tls, _context, _zRet, int32(-1), fp18(Xsqlite3_free))
}

// _2049sqlite3CreateColumnExpr is defined at sqlite3.c:90773:21
func _2049sqlite3CreateColumnExpr(tls crt.TLS, _db uintptr /* *Tsqlite3 = Ssqlite3 */, _pSrc uintptr /* *TSrcList = SSrcList */, _iSrc int32, _iCol int32) (r uintptr /* *TExpr = SExpr */) {
	var (
		_p     uintptr // *TExpr = SExpr
		_pItem uintptr // *SSrcList_item
	)
	_p = _1335sqlite3ExprAlloc(tls, _db, int32(145), null, int32(0))
	if _p == 0 {
		goto _1
	}

	_pItem = (_pSrc + 8) + 112*uintptr(_iSrc)
	*(*uintptr)(unsafe.Pointer(_p + 64)) = *(*uintptr)(unsafe.Pointer(_pItem + 32))
	*(*int32)(unsafe.Pointer(_p + 44)) = *(*int32)(unsafe.Pointer(_pItem + 64))
	if int32(*(*int16)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_p + 64))) + 68))) != _iCol {
		goto _2
	}

	*(*int16)(unsafe.Pointer(_p + 48)) = int16(-1)
	goto _3

_2:
	*(*int16)(unsafe.Pointer(_p + 48)) = int16(_iCol)
	{
		p := &(*(*uint64)(unsafe.Pointer(_pItem + 88)))
		*p = uint64(uint64(*p) | (uint64(1) << (uint(func() int32 {
			if _iCol >= int32(64) {
				return int32(63)
			}
			return _iCol
		}()) % 64)))
	}
_3:
_1:
	return _p
}

// _2050incrAggDepth is defined at sqlite3.c:90295:12
func _2050incrAggDepth(tls crt.TLS, _pWalker uintptr /* *TWalker = SWalker */, _pExpr uintptr /* *TExpr = SExpr */) (r int32) {
	if int32(*(*uint8)(unsafe.Pointer(_pExpr))) != int32(146) {
		goto _1
	}

	{
		p := &(*(*uint8)(unsafe.Pointer(_pExpr + 54)))
		*p = uint8(int32(*p) + (*(*int32)(unsafe.Pointer(_pWalker + 40))))
	}
_1:
	return int32(0)
}

// _2051whereLoopCheaperProperSubset is defined at sqlite3.c:133710:12
func _2051whereLoopCheaperProperSubset(tls crt.TLS, _pX uintptr /* *TWhereLoop = SWhereLoop */, _pY uintptr /* *TWhereLoop = SWhereLoop */) (r int32) {
	var (
		_i int32
		_j int32
	)
	if (int32(*(*uint16)(unsafe.Pointer(_pX + 44))) - int32(*(*uint16)(unsafe.Pointer(_pX + 46)))) < (int32(*(*uint16)(unsafe.Pointer(_pY + 44))) - int32(*(*uint16)(unsafe.Pointer(_pY + 46)))) {
		goto _1
	}

	return int32(0)

_1:
	if int32(*(*uint16)(unsafe.Pointer(_pY + 46))) <= int32(*(*uint16)(unsafe.Pointer(_pX + 46))) {
		goto _2
	}

	return int32(0)

_2:
	if int32(*(*int16)(unsafe.Pointer(_pX + 20))) < int32(*(*int16)(unsafe.Pointer(_pY + 20))) {
		goto _3
	}

	if int32(*(*int16)(unsafe.Pointer(_pX + 20))) <= int32(*(*int16)(unsafe.Pointer(_pY + 20))) {
		goto _4
	}

	return int32(0)

_4:
	if int32(*(*int16)(unsafe.Pointer(_pX + 22))) <= int32(*(*int16)(unsafe.Pointer(_pY + 22))) {
		goto _5
	}

	return int32(0)

_5:
_3:
	_i = int32(*(*uint16)(unsafe.Pointer(_pX + 44))) - int32(1)
_6:
	if _i < int32(0) {
		goto _8
	}

	if (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pX + 56))) + 8*uintptr(_i)))) != 0 {
		goto _9
	}

	goto _7

_9:
	_j = int32(*(*uint16)(unsafe.Pointer(_pY + 44))) - int32(1)
_10:
	if _j < int32(0) {
		goto _12
	}

	if (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pY + 56))) + 8*uintptr(_j)))) != (*(*uintptr)(unsafe.Pointer((*(*uintptr)(unsafe.Pointer(_pX + 56))) + 8*uintptr(_i)))) {
		goto _13
	}

	goto _12

_13:
	_j--
	goto _10

_12:
	if _j >= int32(0) {
		goto _14
	}

	return int32(0)

_14:
_7:
	_i--
	goto _6

_8:
	if ((*(*uint32)(unsafe.Pointer(_pX + 40)))&uint32(0x40)) == uint32(0) || ((*(*uint32)(unsafe.Pointer(_pY + 40)))&uint32(0x40)) != uint32(0) {
		goto _15
	}

	return int32(0)

_15:
	return int32(1)
}

// _2052whereRangeAdjust is defined at sqlite3.c:133038:15
func _2052whereRangeAdjust(tls crt.TLS, _pTerm uintptr /* *TWhereTerm = SWhereTerm */, _nNew int16) (r int16) {
	var _nRet int16

	_nRet = _nNew
	if _pTerm == 0 {
		goto _1
	}

	if int32(*(*int16)(unsafe.Pointer(_pTerm + 16))) > int32(0) {
		goto _2
	}

	_nRet = int16(int32(_nRet) + int32(*(*int16)(unsafe.Pointer(_pTerm + 16))))
	goto _3

_2:
	_nRet = int16(int32(_nRet) - int32(20))

_3:
_1:
	return _nRet
}

type SStat4Sample struct {
	XanEq  uintptr // *uint32
	XanDLt uintptr // *uint32
}

func init() { nz64 = -nz64 }

type Ssqlite3_blob struct{ uintptr }

type Ssqlite3_pcache struct{ uintptr }

type Ssqlite3_stmt struct{ uintptr }

func preinc(p *uintptr, n uintptr) uintptr { *p += n; return *p }

func fn137(p uintptr) func(crt.TLS) { return *(*func(crt.TLS))(unsafe.Pointer(&p)) }

func fn38(p uintptr) func(crt.TLS) int32 { return *(*func(crt.TLS) int32)(unsafe.Pointer(&p)) }

func fn175(p uintptr) func(crt.TLS) uint32 { return *(*func(crt.TLS) uint32)(unsafe.Pointer(&p)) }

func fn48(p uintptr) func(crt.TLS, int32) int32 {
	return *(*func(crt.TLS, int32) int32)(unsafe.Pointer(&p))
}

func fn17(p uintptr) func(crt.TLS, int32) uintptr {
	return *(*func(crt.TLS, int32) uintptr)(unsafe.Pointer(&p))
}

func fn174(p uintptr) func(crt.TLS, int32, int32, ...interface{}) int32 {
	return *(*func(crt.TLS, int32, int32, ...interface{}) int32)(unsafe.Pointer(&p))
}

func fn147(p uintptr) func(crt.TLS, int32, int32, int32) uintptr {
	return *(*func(crt.TLS, int32, int32, int32) uintptr)(unsafe.Pointer(&p))
}

func fn218(p uintptr) func(crt.TLS, int32, int64) int32 {
	return *(*func(crt.TLS, int32, int64) int32)(unsafe.Pointer(&p))
}

func fn173(p uintptr) func(crt.TLS, int32, uint32) int32 {
	return *(*func(crt.TLS, int32, uint32) int32)(unsafe.Pointer(&p))
}

func fn176(p uintptr) func(crt.TLS, int32, uint32, uint32) int32 {
	return *(*func(crt.TLS, int32, uint32, uint32) int32)(unsafe.Pointer(&p))
}

func fn172(p uintptr) func(crt.TLS, int32, uintptr) int32 {
	return *(*func(crt.TLS, int32, uintptr) int32)(unsafe.Pointer(&p))
}

func fn153(p uintptr) func(crt.TLS, int32, uintptr, uint64) int64 {
	return *(*func(crt.TLS, int32, uintptr, uint64) int64)(unsafe.Pointer(&p))
}

func fn142(p uintptr) func(crt.TLS, int32, uintptr, uintptr) int32 {
	return *(*func(crt.TLS, int32, uintptr, uintptr) int32)(unsafe.Pointer(&p))
}

func fn28(p uintptr) func(crt.TLS, uint32, uintptr, uintptr, uintptr) int32 {
	return *(*func(crt.TLS, uint32, uintptr, uintptr, uintptr) int32)(unsafe.Pointer(&p))
}

func fn16(p uintptr) func(crt.TLS, uintptr) { return *(*func(crt.TLS, uintptr))(unsafe.Pointer(&p)) }

func fn12(p uintptr) func(crt.TLS, uintptr) int32 {
	return *(*func(crt.TLS, uintptr) int32)(unsafe.Pointer(&p))
}

func fn13(p uintptr) func(crt.TLS, uintptr) uintptr {
	return *(*func(crt.TLS, uintptr) uintptr)(unsafe.Pointer(&p))
}

func fn148(p uintptr) func(crt.TLS, uintptr, int32) {
	return *(*func(crt.TLS, uintptr, int32))(unsafe.Pointer(&p))
}

func fn50(p uintptr) func(crt.TLS, uintptr, int32) int32 {
	return *(*func(crt.TLS, uintptr, int32) int32)(unsafe.Pointer(&p))
}

func fn51(p uintptr) func(crt.TLS, uintptr, int32) uintptr {
	return *(*func(crt.TLS, uintptr, int32) uintptr)(unsafe.Pointer(&p))
}

func fn171(p uintptr) func(crt.TLS, uintptr, int32, int32) int32 {
	return *(*func(crt.TLS, uintptr, int32, int32) int32)(unsafe.Pointer(&p))
}

func fn189(p uintptr) func(crt.TLS, uintptr, int32, int32, int32) int32 {
	return *(*func(crt.TLS, uintptr, int32, int32, int32) int32)(unsafe.Pointer(&p))
}

func fn211(p uintptr) func(crt.TLS, uintptr, int32, int32, int32, uintptr) int32 {
	return *(*func(crt.TLS, uintptr, int32, int32, int32, uintptr) int32)(unsafe.Pointer(&p))
}

func fn68(p uintptr) func(crt.TLS, uintptr, int32, uintptr) {
	return *(*func(crt.TLS, uintptr, int32, uintptr))(unsafe.Pointer(&p))
}

func fn52(p uintptr) func(crt.TLS, uintptr, int32, uintptr) int32 {
	return *(*func(crt.TLS, uintptr, int32, uintptr) int32)(unsafe.Pointer(&p))
}

func fn69(p uintptr) func(crt.TLS, uintptr, int32, uintptr, int32, uintptr) int32 {
	return *(*func(crt.TLS, uintptr, int32, uintptr, int32, uintptr) int32)(unsafe.Pointer(&p))
}

func fn21(p uintptr) func(crt.TLS, uintptr, int32, uintptr, uintptr) int32 {
	return *(*func(crt.TLS, uintptr, int32, uintptr, uintptr) int32)(unsafe.Pointer(&p))
}

func fn67(p uintptr) func(crt.TLS, uintptr, int32, uintptr, uintptr, int64) {
	return *(*func(crt.TLS, uintptr, int32, uintptr, uintptr, int64))(unsafe.Pointer(&p))
}

func fn27(p uintptr) func(crt.TLS, uintptr, int32, uintptr, uintptr, uintptr) int32 {
	return *(*func(crt.TLS, uintptr, int32, uintptr, uintptr, uintptr) int32)(unsafe.Pointer(&p))
}

func fn212(p uintptr) func(crt.TLS, uintptr, int32, uintptr, uintptr, uintptr, uintptr) int32 {
	return *(*func(crt.TLS, uintptr, int32, uintptr, uintptr, uintptr, uintptr) int32)(unsafe.Pointer(&p))
}

func fn59(p uintptr) func(crt.TLS, uintptr, int64) int32 {
	return *(*func(crt.TLS, uintptr, int64) int32)(unsafe.Pointer(&p))
}

func fn191(p uintptr) func(crt.TLS, uintptr, int64, int32, uintptr) int32 {
	return *(*func(crt.TLS, uintptr, int64, int32, uintptr) int32)(unsafe.Pointer(&p))
}

func fn155(p uintptr) func(crt.TLS, uintptr, int64, uintptr) int32 {
	return *(*func(crt.TLS, uintptr, int64, uintptr) int32)(unsafe.Pointer(&p))
}

func fn160(p uintptr) func(crt.TLS, uintptr, uint32) {
	return *(*func(crt.TLS, uintptr, uint32))(unsafe.Pointer(&p))
}

func fn203(p uintptr) func(crt.TLS, uintptr, uint32) int32 {
	return *(*func(crt.TLS, uintptr, uint32) int32)(unsafe.Pointer(&p))
}

func fn158(p uintptr) func(crt.TLS, uintptr, uint32, int32) uintptr {
	return *(*func(crt.TLS, uintptr, uint32, int32) uintptr)(unsafe.Pointer(&p))
}

func fn170(p uintptr) func(crt.TLS, uintptr, uint32, uint32, uintptr) int32 {
	return *(*func(crt.TLS, uintptr, uint32, uint32, uintptr) int32)(unsafe.Pointer(&p))
}

func fn43(p uintptr) func(crt.TLS, uintptr, uint32, uintptr, int32) int32 {
	return *(*func(crt.TLS, uintptr, uint32, uintptr, int32) int32)(unsafe.Pointer(&p))
}

func fn188(p uintptr) func(crt.TLS, uintptr, uint64) uintptr {
	return *(*func(crt.TLS, uintptr, uint64) uintptr)(unsafe.Pointer(&p))
}

func fn210(p uintptr) func(crt.TLS, uintptr, uint64, int32, int32, int32, int64) uintptr {
	return *(*func(crt.TLS, uintptr, uint64, int32, int32, int32, int64) uintptr)(unsafe.Pointer(&p))
}

func fn71(p uintptr) func(crt.TLS, uintptr, uintptr) {
	return *(*func(crt.TLS, uintptr, uintptr))(unsafe.Pointer(&p))
}

func fn58(p uintptr) func(crt.TLS, uintptr, uintptr) int32 {
	return *(*func(crt.TLS, uintptr, uintptr) int32)(unsafe.Pointer(&p))
}

func fn144(p uintptr) func(crt.TLS, uintptr, uintptr) uint16 {
	return *(*func(crt.TLS, uintptr, uintptr) uint16)(unsafe.Pointer(&p))
}

func fn73(p uintptr) func(crt.TLS, uintptr, uintptr) uintptr {
	return *(*func(crt.TLS, uintptr, uintptr) uintptr)(unsafe.Pointer(&p))
}

func fn157(p uintptr) func(crt.TLS, uintptr, uintptr, int32) {
	return *(*func(crt.TLS, uintptr, uintptr, int32))(unsafe.Pointer(&p))
}

func fn70(p uintptr) func(crt.TLS, uintptr, uintptr, int32) int32 {
	return *(*func(crt.TLS, uintptr, uintptr, int32) int32)(unsafe.Pointer(&p))
}

func fn219(p uintptr) func(crt.TLS, uintptr, uintptr, int32, int32) {
	return *(*func(crt.TLS, uintptr, uintptr, int32, int32))(unsafe.Pointer(&p))
}

func fn44(p uintptr) func(crt.TLS, uintptr, uintptr, int32, int64) int32 {
	return *(*func(crt.TLS, uintptr, uintptr, int32, int64) int32)(unsafe.Pointer(&p))
}

func fn220(p uintptr) func(crt.TLS, uintptr, uintptr, int32, uintptr) {
	return *(*func(crt.TLS, uintptr, uintptr, int32, uintptr))(unsafe.Pointer(&p))
}

func fn136(p uintptr) func(crt.TLS, uintptr, uintptr, int32, uintptr) int32 {
	return *(*func(crt.TLS, uintptr, uintptr, int32, uintptr) int32)(unsafe.Pointer(&p))
}

func fn167(p uintptr) func(crt.TLS, uintptr, uintptr, int32, uintptr, uintptr, uintptr) int32 {
	return *(*func(crt.TLS, uintptr, uintptr, int32, uintptr, uintptr, uintptr) int32)(unsafe.Pointer(&p))
}

func fn202(p uintptr) func(crt.TLS, uintptr, uintptr, uint32, uint32) {
	return *(*func(crt.TLS, uintptr, uintptr, uint32, uint32))(unsafe.Pointer(&p))
}

func fn46(p uintptr) func(crt.TLS, uintptr, uintptr, uint64) {
	return *(*func(crt.TLS, uintptr, uintptr, uint64))(unsafe.Pointer(&p))
}

func fn152(p uintptr) func(crt.TLS, uintptr, uintptr, uint64) int64 {
	return *(*func(crt.TLS, uintptr, uintptr, uint64) int64)(unsafe.Pointer(&p))
}

func fn45(p uintptr) func(crt.TLS, uintptr, uintptr, uintptr) {
	return *(*func(crt.TLS, uintptr, uintptr, uintptr))(unsafe.Pointer(&p))
}

func fn49(p uintptr) func(crt.TLS, uintptr, uintptr, uintptr) int32 {
	return *(*func(crt.TLS, uintptr, uintptr, uintptr) int32)(unsafe.Pointer(&p))
}

func fn74(p uintptr) func(crt.TLS, uintptr, uintptr, uintptr) uintptr {
	return *(*func(crt.TLS, uintptr, uintptr, uintptr) uintptr)(unsafe.Pointer(&p))
}

func fn72(p uintptr) func(crt.TLS, uintptr, uintptr, uintptr, int32) int32 {
	return *(*func(crt.TLS, uintptr, uintptr, uintptr, int32) int32)(unsafe.Pointer(&p))
}

func fn154(p uintptr) func(crt.TLS, uintptr, uintptr, uintptr, int32, uintptr) int32 {
	return *(*func(crt.TLS, uintptr, uintptr, uintptr, int32, uintptr) int32)(unsafe.Pointer(&p))
}

func fn165(p uintptr) func(crt.TLS, uintptr, uintptr, uintptr, int32, uintptr, int32) int32 {
	return *(*func(crt.TLS, uintptr, uintptr, uintptr, int32, uintptr, int32) int32)(unsafe.Pointer(&p))
}

func fp99(f func(crt.TLS)) uintptr { return *(*uintptr)(unsafe.Pointer(&f)) }

func fp90(f func(crt.TLS) int32) uintptr { return *(*uintptr)(unsafe.Pointer(&f)) }

func fp106(f func(crt.TLS) int64) uintptr { return *(*uintptr)(unsafe.Pointer(&f)) }

func fp184(f func(crt.TLS) uint32) uintptr { return *(*uintptr)(unsafe.Pointer(&f)) }

func fp89(f func(crt.TLS) uintptr) uintptr { return *(*uintptr)(unsafe.Pointer(&f)) }

func fp1(f func(crt.TLS, int32)) uintptr { return *(*uintptr)(unsafe.Pointer(&f)) }

func fp31(f func(crt.TLS, int32) int32) uintptr { return *(*uintptr)(unsafe.Pointer(&f)) }

func fp105(f func(crt.TLS, int32) int64) uintptr { return *(*uintptr)(unsafe.Pointer(&f)) }

func fp29(f func(crt.TLS, int32) uintptr) uintptr { return *(*uintptr)(unsafe.Pointer(&f)) }

func fp107(f func(crt.TLS, int32, ...interface{}) int32) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp179(f func(crt.TLS, int32, int32, ...interface{}) int32) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp32(f func(crt.TLS, int32, int32, int32) uintptr) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp178(f func(crt.TLS, int32, int64) int32) uintptr { return *(*uintptr)(unsafe.Pointer(&f)) }

func fp181(f func(crt.TLS, int32, uint32) int32) uintptr { return *(*uintptr)(unsafe.Pointer(&f)) }

func fp183(f func(crt.TLS, int32, uint32, uint32) int32) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp187(f func(crt.TLS, int32, uint64, ...interface{}) int32) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp108(f func(crt.TLS, int32, uintptr)) uintptr { return *(*uintptr)(unsafe.Pointer(&f)) }

func fp177(f func(crt.TLS, int32, uintptr) int32) uintptr { return *(*uintptr)(unsafe.Pointer(&f)) }

func fp115(f func(crt.TLS, int32, uintptr, ...interface{})) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp180(f func(crt.TLS, int32, uintptr, uint64) int64) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp162(f func(crt.TLS, int32, uintptr, uintptr) int32) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp119(f func(crt.TLS, int32, uintptr, uintptr, *[]interface{}) uintptr) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp97(f func(crt.TLS, int32, uintptr, uintptr, ...interface{}) uintptr) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp110(f func(crt.TLS, int32, uintptr, uintptr, int32) int32) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp116(f func(crt.TLS, int64) int64) uintptr { return *(*uintptr)(unsafe.Pointer(&f)) }

func fp14(f func(crt.TLS, uint32, uintptr, uintptr, uintptr) int32) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp122(f func(crt.TLS, uint64) uintptr) uintptr { return *(*uintptr)(unsafe.Pointer(&f)) }

func fp18(f func(crt.TLS, uintptr)) uintptr { return *(*uintptr)(unsafe.Pointer(&f)) }

func fp100(f func(crt.TLS, uintptr) float64) uintptr { return *(*uintptr)(unsafe.Pointer(&f)) }

func fp10(f func(crt.TLS, uintptr) int32) uintptr { return *(*uintptr)(unsafe.Pointer(&f)) }

func fp88(f func(crt.TLS, uintptr) int64) uintptr { return *(*uintptr)(unsafe.Pointer(&f)) }

func fp129(f func(crt.TLS, uintptr) uint32) uintptr { return *(*uintptr)(unsafe.Pointer(&f)) }

func fp123(f func(crt.TLS, uintptr) uint64) uintptr { return *(*uintptr)(unsafe.Pointer(&f)) }

func fp11(f func(crt.TLS, uintptr) uintptr) uintptr { return *(*uintptr)(unsafe.Pointer(&f)) }

func fp101(f func(crt.TLS, uintptr, *[]interface{}) uintptr) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp91(f func(crt.TLS, uintptr, ...interface{}) uintptr) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp94(f func(crt.TLS, uintptr, float64)) uintptr { return *(*uintptr)(unsafe.Pointer(&f)) }

func fp33(f func(crt.TLS, uintptr, int32)) uintptr { return *(*uintptr)(unsafe.Pointer(&f)) }

func fp80(f func(crt.TLS, uintptr, int32) float64) uintptr { return *(*uintptr)(unsafe.Pointer(&f)) }

func fp26(f func(crt.TLS, uintptr, int32) int32) uintptr { return *(*uintptr)(unsafe.Pointer(&f)) }

func fp81(f func(crt.TLS, uintptr, int32) int64) uintptr { return *(*uintptr)(unsafe.Pointer(&f)) }

func fp30(f func(crt.TLS, uintptr, int32) uintptr) uintptr { return *(*uintptr)(unsafe.Pointer(&f)) }

func fp113(f func(crt.TLS, uintptr, int32, ...interface{}) int32) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp75(f func(crt.TLS, uintptr, int32, float64) int32) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp76(f func(crt.TLS, uintptr, int32, int32) int32) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp199(f func(crt.TLS, uintptr, int32, int32, int32) int32) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp198(f func(crt.TLS, uintptr, int32, int32, int32, uintptr) int32) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp77(f func(crt.TLS, uintptr, int32, int64) int32) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp128(f func(crt.TLS, uintptr, int32, uint64) int32) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp6(f func(crt.TLS, uintptr, int32, uintptr)) uintptr { return *(*uintptr)(unsafe.Pointer(&f)) }

func fp78(f func(crt.TLS, uintptr, int32, uintptr) int32) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp39(f func(crt.TLS, uintptr, int32, uintptr, int32, uintptr) int32) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp120(f func(crt.TLS, uintptr, int32, uintptr, uint64, uintptr) int32) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp121(f func(crt.TLS, uintptr, int32, uintptr, uint64, uintptr, uint8) int32) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp92(f func(crt.TLS, uintptr, int32, uintptr, uintptr)) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp9(f func(crt.TLS, uintptr, int32, uintptr, uintptr) int32) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp114(f func(crt.TLS, uintptr, int32, uintptr, uintptr, int32) int32) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp3(f func(crt.TLS, uintptr, int32, uintptr, uintptr, uintptr) int32) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp8(f func(crt.TLS, uintptr, int32, uintptr, uintptr, uintptr, uintptr) int32) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp95(f func(crt.TLS, uintptr, int64)) uintptr { return *(*uintptr)(unsafe.Pointer(&f)) }

func fp117(f func(crt.TLS, uintptr, int64) int32) uintptr { return *(*uintptr)(unsafe.Pointer(&f)) }

func fp200(f func(crt.TLS, uintptr, int64, int32, uintptr) int32) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp201(f func(crt.TLS, uintptr, int64, uintptr) int32) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp37(f func(crt.TLS, uintptr, uint32)) uintptr { return *(*uintptr)(unsafe.Pointer(&f)) }

func fp182(f func(crt.TLS, uintptr, uint32) int32) uintptr { return *(*uintptr)(unsafe.Pointer(&f)) }

func fp34(f func(crt.TLS, uintptr, uint32, int32) uintptr) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp149(f func(crt.TLS, uintptr, uint32, uint32, uintptr) int32) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp140(f func(crt.TLS, uintptr, uint32, uintptr, int32) int32) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp131(f func(crt.TLS, uintptr, uint32, uintptr, uintptr) int32) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp127(f func(crt.TLS, uintptr, uint64) int32) uintptr { return *(*uintptr)(unsafe.Pointer(&f)) }

func fp124(f func(crt.TLS, uintptr, uint64) uintptr) uintptr { return *(*uintptr)(unsafe.Pointer(&f)) }

func fp185(f func(crt.TLS, uintptr, uint64, int32, int32, int32, int64) uintptr) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp96(f func(crt.TLS, uintptr, uintptr)) uintptr { return *(*uintptr)(unsafe.Pointer(&f)) }

func fp56(f func(crt.TLS, uintptr, uintptr) int32) uintptr { return *(*uintptr)(unsafe.Pointer(&f)) }

func fp156(f func(crt.TLS, uintptr, uintptr) uint16) uintptr { return *(*uintptr)(unsafe.Pointer(&f)) }

func fp109(f func(crt.TLS, uintptr, uintptr) uintptr) uintptr { return *(*uintptr)(unsafe.Pointer(&f)) }

func fp35(f func(crt.TLS, uintptr, uintptr, int32)) uintptr { return *(*uintptr)(unsafe.Pointer(&f)) }

func fp57(f func(crt.TLS, uintptr, uintptr, int32) int32) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp215(f func(crt.TLS, uintptr, uintptr, int32, int32)) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp103(f func(crt.TLS, uintptr, uintptr, int32, int32) int32) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp84(f func(crt.TLS, uintptr, uintptr, int32, int32, uintptr, uintptr, uintptr, uintptr) int32) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp112(f func(crt.TLS, uintptr, uintptr, int32, int32, uintptr, uintptr, uintptr, uintptr, uintptr) int32) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp190(f func(crt.TLS, uintptr, uintptr, int32, int64) int32) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp132(f func(crt.TLS, uintptr, uintptr, int32, uint32, uintptr, uintptr) int32) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp93(f func(crt.TLS, uintptr, uintptr, int32, uintptr)) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp104(f func(crt.TLS, uintptr, uintptr, int32, uintptr) int32) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp83(f func(crt.TLS, uintptr, uintptr, int32, uintptr, uintptr) int32) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp55(f func(crt.TLS, uintptr, uintptr, int32, uintptr, uintptr, uintptr) int32) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp118(f func(crt.TLS, uintptr, uintptr, int64) int64) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp130(f func(crt.TLS, uintptr, uintptr, uint32) int32) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp36(f func(crt.TLS, uintptr, uintptr, uint32, uint32)) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp186(f func(crt.TLS, uintptr, uintptr, uint64) int64) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp125(f func(crt.TLS, uintptr, uintptr, uint64, uintptr)) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp126(f func(crt.TLS, uintptr, uintptr, uint64, uintptr, uint8)) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp20(f func(crt.TLS, uintptr, uintptr, uintptr)) uintptr { return *(*uintptr)(unsafe.Pointer(&f)) }

func fp79(f func(crt.TLS, uintptr, uintptr, uintptr) int32) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp82(f func(crt.TLS, uintptr, uintptr, uintptr) uintptr) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp54(f func(crt.TLS, uintptr, uintptr, uintptr, int32) int32) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp135(f func(crt.TLS, uintptr, uintptr, uintptr, int32, uintptr) int32) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp193(f func(crt.TLS, uintptr, uintptr, uintptr, int32, uintptr, int32) int32) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp133(f func(crt.TLS, uintptr, uintptr, uintptr, uintptr)) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp85(f func(crt.TLS, uintptr, uintptr, uintptr, uintptr) int32) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp111(f func(crt.TLS, uintptr, uintptr, uintptr, uintptr) uintptr) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp102(f func(crt.TLS, uintptr, uintptr, uintptr, uintptr, int64, int32, uintptr) int32) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp86(f func(crt.TLS, uintptr, uintptr, uintptr, uintptr, uintptr) int32) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp87(f func(crt.TLS, uintptr, uintptr, uintptr, uintptr, uintptr, uintptr) int32) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func fp98(f func(crt.TLS, uintptr, uintptr, uintptr, uintptr, uintptr, uintptr, uintptr, uintptr, uintptr) int32) uintptr {
	return *(*uintptr)(unsafe.Pointer(&f))
}

func postinc24(p *int32) int32 { r := *p; *p += -1; return r }

func postinc7(p *int32) int32 { r := *p; *p += 1; return r }

func postinc65(p *int64) int64 { r := *p; *p += 1; return r }

func postinc145(p *int8) int8 { r := *p; *p += -1; return r }

func postinc221(p *uint16) uint16 { r := *p; *p += 1; return r }

func postinc53(p *uint32) uint32 { r := *p; *p += 1; return r }

func postinc151(p *uint64) uint64 { r := *p; *p += 1; return r }

func postinc163(p *uint8) uint8 { r := *p; *p += 1; return r }

func postinc19(p *uintptr) uintptr { r := *p; *p += 1; return r }

func postinc192(p *uintptr) uintptr { r := *p; *p += 18446744073709551584; return r }

func postinc209(p *uintptr) uintptr { r := *p; *p += 18446744073709551615; return r }

func postinc213(p *uintptr) uintptr { r := *p; *p += 2; return r }

func postinc166(p *uintptr) uintptr { r := *p; *p += 24; return r }

func postinc159(p *uintptr) uintptr { r := *p; *p += 4; return r }

func postinc61(p *uintptr) uintptr { r := *p; *p += 56; return r }

func preinc138(p *int16) int16 { *p += -1; return *p }

func preinc208(p *int16) int16 { *p += 1; return *p }

func preinc47(p *int32) int32 { *p += -1; return *p }

func preinc2(p *int32) int32 { *p += 1; return *p }

func preinc161(p *int8) int8 { *p += -1; return *p }

func preinc143(p *uint16) uint16 { *p += 1; return *p }

func preinc195(p *uint32) uint32 { *p += 1; return *p }

func preinc134(p *uint32) uint32 { *p += 4294967295; return *p }

func preinc164(p *uint8) uint8 { *p += 1; return *p }

func preinc214(p *uint8) uint8 { *p += 255; return *p }

func preinc40(p *uintptr) uintptr { *p += 1; return *p }

func preinc41(p *uintptr) uintptr { *p += 18446744073709551615; return *p }

func preinc62(p *uintptr) uintptr { *p += 56; return *p }

func rsh141(p *uint64, v uint64) uint64 { *p >>= v % 64; return *p }

func set5(p *int32, v int32) int32 { *p = v; return v }

func set139(p *int64, v int64) int64 { *p = v; return v }

func set15(p *int8, v int8) int8 { *p = v; return v }

func set60(p *uint16, v uint16) uint16 { *p = v; return v }

func set25(p *uint32, v uint32) uint32 { *p = v; return v }

func set150(p *uint64, v uint64) uint64 { *p = v; return v }

func set23(p *uint8, v uint8) uint8 { *p = v; return v }

func set4(p *uintptr, v uintptr) uintptr { *p = v; return v }

func set42b(p *uint16, v uint32) uint32 {
	*p = (*p &^ (1<<1 - 1)) | (uint16(v) & (1<<1 - 1))
	return v << (32 - 1) >> (32 - 1)
}

func set22b(p *uint16, v uint32) uint32 {
	*p = (*p &^ ((1<<1 - 1) << 1)) | (uint16(v) << 1 & ((1<<1 - 1) << 1))
	return v << (32 - 1) >> (32 - 1)
}

func set216b(p *uint16, v uint32) uint32 {
	*p = (*p &^ ((1<<1 - 1) << 4)) | (uint16(v) << 4 & ((1<<1 - 1) << 4))
	return v << (32 - 1) >> (32 - 1)
}

func set217b(p *uint16, v uint32) uint32 {
	*p = (*p &^ ((1<<1 - 1) << 5)) | (uint16(v) << 5 & ((1<<1 - 1) << 5))
	return v << (32 - 1) >> (32 - 1)
}

func set168b(p *uint16, v uint32) uint32 {
	*p = (*p &^ ((1<<1 - 1) << 6)) | (uint16(v) << 6 & ((1<<1 - 1) << 6))
	return v << (32 - 1) >> (32 - 1)
}

func set196b(p *uint16, v uint32) uint32 {
	*p = (*p &^ ((1<<1 - 1) << 7)) | (uint16(v) << 7 & ((1<<1 - 1) << 7))
	return v << (32 - 1) >> (32 - 1)
}

func set197b(p *uint16, v uint32) uint32 {
	*p = (*p &^ ((1<<1 - 1) << 8)) | (uint16(v) << 8 & ((1<<1 - 1) << 8))
	return v << (32 - 1) >> (32 - 1)
}

func set169b(p *uint16, v uint32) uint32 {
	*p = (*p &^ ((1<<2 - 1) << 2)) | (uint16(v) << 2 & ((1<<2 - 1) << 2))
	return v << (32 - 2) >> (32 - 2)
}

func set64b(p *uint8, v uint32) uint32 {
	*p = (*p &^ (1<<1 - 1)) | (uint8(v) & (1<<1 - 1))
	return v << (32 - 1) >> (32 - 1)
}

func set66b(p *uint8, v uint32) uint32 {
	*p = (*p &^ ((1<<1 - 1) << 1)) | (uint8(v) << 1 & ((1<<1 - 1) << 1))
	return v << (32 - 1) >> (32 - 1)
}

func set63b(p *uint8, v uint32) uint32 {
	*p = (*p &^ ((1<<1 - 1) << 2)) | (uint8(v) << 2 & ((1<<1 - 1) << 2))
	return v << (32 - 1) >> (32 - 1)
}

func set204b(p *uint8, v uint32) uint32 {
	*p = (*p &^ ((1<<1 - 1) << 3)) | (uint8(v) << 3 & ((1<<1 - 1) << 3))
	return v << (32 - 1) >> (32 - 1)
}

func set207b(p *uint8, v uint32) uint32 {
	*p = (*p &^ ((1<<1 - 1) << 4)) | (uint8(v) << 4 & ((1<<1 - 1) << 4))
	return v << (32 - 1) >> (32 - 1)
}

func set206b(p *uint8, v uint32) uint32 {
	*p = (*p &^ ((1<<1 - 1) << 5)) | (uint8(v) << 5 & ((1<<1 - 1) << 5))
	return v << (32 - 1) >> (32 - 1)
}

func set194b(p *uint8, v uint32) uint32 {
	*p = (*p &^ ((1<<1 - 1) << 6)) | (uint8(v) << 6 & ((1<<1 - 1) << 6))
	return v << (32 - 1) >> (32 - 1)
}

func set146b(p *uint8, v uint32) uint32 {
	*p = (*p &^ ((1<<1 - 1) << 7)) | (uint8(v) << 7 & ((1<<1 - 1) << 7))
	return v << (32 - 1) >> (32 - 1)
}

func set205b(p *uint8, v uint32) uint32 {
	*p = (*p &^ (1<<2 - 1)) | (uint8(v) & (1<<2 - 1))
	return v << (32 - 2) >> (32 - 2)
}

var (
	bss     = crt.BSS(&bssInit[0])
	bssInit [18376]byte
	ds      = crt.DS(dsInit)
	dsInit  = []byte{0x6d, 0x61, 0x69, 0x6e, 0x00, 0x33, 0x2e, 0x32, 0x31, 0x2e, 0x30, 0x00, 0x20, 0x20, 0x20, 0x2d, 0x61, 0x73, 0x63, 0x69, 0x69, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x73, 0x65, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x20, 0x6d, 0x6f, 0x64, 0x65, 0x20, 0x74, 0x6f, 0x20, 0x27, 0x61, 0x73, 0x63, 0x69, 0x69, 0x27, 0x0a, 0x20, 0x20, 0x20, 0x2d, 0x62, 0x61, 0x69, 0x6c, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x73, 0x74, 0x6f, 0x70, 0x20, 0x61, 0x66, 0x74, 0x65, 0x72, 0x20, 0x68, 0x69, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x61, 0x6e, 0x20, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x0a, 0x20, 0x20, 0x20, 0x2d, 0x62, 0x61, 0x74, 0x63, 0x68, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x20, 0x62, 0x61, 0x74, 0x63, 0x68, 0x20, 0x49, 0x2f, 0x4f, 0x0a, 0x20, 0x20, 0x20, 0x2d, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x73, 0x65, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x20, 0x6d, 0x6f, 0x64, 0x65, 0x20, 0x74, 0x6f, 0x20, 0x27, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x27, 0x0a, 0x20, 0x20, 0x20, 0x2d, 0x63, 0x6d, 0x64, 0x20, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x72, 0x75, 0x6e, 0x20, 0x22, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x22, 0x20, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x20, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x73, 0x74, 0x64, 0x69, 0x6e, 0x0a, 0x20, 0x20, 0x20, 0x2d, 0x63, 0x73, 0x76, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x73, 0x65, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x20, 0x6d, 0x6f, 0x64, 0x65, 0x20, 0x74, 0x6f, 0x20, 0x27, 0x63, 0x73, 0x76, 0x27, 0x0a, 0x20, 0x20, 0x20, 0x2d, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x20, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x20, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x0a, 0x20, 0x20, 0x20, 0x2d, 0x69, 0x6e, 0x69, 0x74, 0x20, 0x46, 0x49, 0x4c, 0x45, 0x4e, 0x41, 0x4d, 0x45, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x61, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x64, 0x20, 0x66, 0x69, 0x6c, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x2d, 0x5b, 0x6e, 0x6f, 0x5d, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x6f, 0x72, 0x20, 0x6f, 0x66, 0x66, 0x0a, 0x20, 0x20, 0x20, 0x2d, 0x68, 0x65, 0x6c, 0x70, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x73, 0x68, 0x6f, 0x77, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x2d, 0x68, 0x74, 0x6d, 0x6c, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x73, 0x65, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x20, 0x6d, 0x6f, 0x64, 0x65, 0x20, 0x74, 0x6f, 0x20, 0x48, 0x54, 0x4d, 0x4c, 0x0a, 0x20, 0x20, 0x20, 0x2d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x49, 0x2f, 0x4f, 0x0a, 0x20, 0x20, 0x20, 0x2d, 0x6c, 0x69, 0x6e, 0x65, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x73, 0x65, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x20, 0x6d, 0x6f, 0x64, 0x65, 0x20, 0x74, 0x6f, 0x20, 0x27, 0x6c, 0x69, 0x6e, 0x65, 0x27, 0x0a, 0x20, 0x20, 0x20, 0x2d, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x73, 0x65, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x20, 0x6d, 0x6f, 0x64, 0x65, 0x20, 0x74, 0x6f, 0x20, 0x27, 0x6c, 0x69, 0x73, 0x74, 0x27, 0x0a, 0x20, 0x20, 0x20, 0x2d, 0x6c, 0x6f, 0x6f, 0x6b, 0x61, 0x73, 0x69, 0x64, 0x65, 0x20, 0x53, 0x49, 0x5a, 0x45, 0x20, 0x4e, 0x20, 0x20, 0x20, 0x20, 0x75, 0x73, 0x65, 0x20, 0x4e, 0x20, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x20, 0x6f, 0x66, 0x20, 0x53, 0x5a, 0x20, 0x62, 0x79, 0x74, 0x65, 0x73, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x6c, 0x6f, 0x6f, 0x6b, 0x61, 0x73, 0x69, 0x64, 0x65, 0x20, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x0a, 0x20, 0x20, 0x20, 0x2d, 0x6d, 0x6d, 0x61, 0x70, 0x20, 0x4e, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x6d, 0x6d, 0x61, 0x70, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x20, 0x73, 0x65, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x4e, 0x0a, 0x20, 0x20, 0x20, 0x2d, 0x6e, 0x65, 0x77, 0x6c, 0x69, 0x6e, 0x65, 0x20, 0x53, 0x45, 0x50, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x73, 0x65, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x20, 0x72, 0x6f, 0x77, 0x20, 0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x3a, 0x20, 0x27, 0x5c, 0x6e, 0x27, 0x0a, 0x20, 0x20, 0x20, 0x2d, 0x6e, 0x75, 0x6c, 0x6c, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x54, 0x45, 0x58, 0x54, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x73, 0x65, 0x74, 0x20, 0x74, 0x65, 0x78, 0x74, 0x20, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x4e, 0x55, 0x4c, 0x4c, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x27, 0x27, 0x0a, 0x20, 0x20, 0x20, 0x2d, 0x70, 0x61, 0x67, 0x65, 0x63, 0x61, 0x63, 0x68, 0x65, 0x20, 0x53, 0x49, 0x5a, 0x45, 0x20, 0x4e, 0x20, 0x20, 0x20, 0x20, 0x75, 0x73, 0x65, 0x20, 0x4e, 0x20, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x20, 0x6f, 0x66, 0x20, 0x53, 0x5a, 0x20, 0x62, 0x79, 0x74, 0x65, 0x73, 0x20, 0x65, 0x61, 0x63, 0x68, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x70, 0x61, 0x67, 0x65, 0x20, 0x63, 0x61, 0x63, 0x68, 0x65, 0x20, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x0a, 0x20, 0x20, 0x20, 0x2d, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x73, 0x65, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x20, 0x6d, 0x6f, 0x64, 0x65, 0x20, 0x74, 0x6f, 0x20, 0x27, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x27, 0x0a, 0x20, 0x20, 0x20, 0x2d, 0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x53, 0x45, 0x50, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x73, 0x65, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x20, 0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x3a, 0x20, 0x27, 0x7c, 0x27, 0x0a, 0x20, 0x20, 0x20, 0x2d, 0x73, 0x74, 0x61, 0x74, 0x73, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x20, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x20, 0x73, 0x74, 0x61, 0x74, 0x73, 0x20, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x20, 0x65, 0x61, 0x63, 0x68, 0x20, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x2d, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x73, 0x68, 0x6f, 0x77, 0x20, 0x53, 0x51, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x0a, 0x20, 0x20, 0x20, 0x2d, 0x76, 0x66, 0x73, 0x20, 0x4e, 0x41, 0x4d, 0x45, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x75, 0x73, 0x65, 0x20, 0x4e, 0x41, 0x4d, 0x45, 0x20, 0x61, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x56, 0x46, 0x53, 0x0a, 0x00, 0x64, 0x6f, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x00, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x20, 0x4f, 0x4e, 0x7c, 0x4f, 0x46, 0x46, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x53, 0x68, 0x6f, 0x77, 0x20, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x72, 0x20, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x0a, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x20, 0x3f, 0x44, 0x42, 0x3f, 0x20, 0x46, 0x49, 0x4c, 0x45, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x20, 0x44, 0x42, 0x20, 0x28, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x22, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x29, 0x20, 0x74, 0x6f, 0x20, 0x46, 0x49, 0x4c, 0x45, 0x0a, 0x2e, 0x62, 0x61, 0x69, 0x6c, 0x20, 0x6f, 0x6e, 0x7c, 0x6f, 0x66, 0x66, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x53, 0x74, 0x6f, 0x70, 0x20, 0x61, 0x66, 0x74, 0x65, 0x72, 0x20, 0x68, 0x69, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x61, 0x6e, 0x20, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x20, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x4f, 0x46, 0x46, 0x0a, 0x2e, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x20, 0x6f, 0x6e, 0x7c, 0x6f, 0x66, 0x66, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x54, 0x75, 0x72, 0x6e, 0x20, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x20, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x20, 0x6f, 0x6e, 0x20, 0x6f, 0x72, 0x20, 0x6f, 0x66, 0x66, 0x2e, 0x20, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x4f, 0x46, 0x46, 0x0a, 0x2e, 0x63, 0x64, 0x20, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x4f, 0x52, 0x59, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x20, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x20, 0x74, 0x6f, 0x20, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x4f, 0x52, 0x59, 0x0a, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x20, 0x6f, 0x6e, 0x7c, 0x6f, 0x66, 0x66, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x53, 0x68, 0x6f, 0x77, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x6f, 0x66, 0x20, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 0x53, 0x51, 0x4c, 0x0a, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x20, 0x47, 0x4c, 0x4f, 0x42, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x46, 0x61, 0x69, 0x6c, 0x20, 0x69, 0x66, 0x20, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x20, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x20, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x20, 0x64, 0x6f, 0x65, 0x73, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x0a, 0x2e, 0x63, 0x6c, 0x6f, 0x6e, 0x65, 0x20, 0x4e, 0x45, 0x57, 0x44, 0x42, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x69, 0x6e, 0x74, 0x6f, 0x20, 0x4e, 0x45, 0x57, 0x44, 0x42, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x74, 0x68, 0x65, 0x20, 0x65, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x0a, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x4c, 0x69, 0x73, 0x74, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x20, 0x6f, 0x66, 0x20, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x20, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x0a, 0x2e, 0x64, 0x62, 0x69, 0x6e, 0x66, 0x6f, 0x20, 0x3f, 0x44, 0x42, 0x3f, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x53, 0x68, 0x6f, 0x77, 0x20, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x20, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x61, 0x62, 0x6f, 0x75, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x0a, 0x2e, 0x64, 0x75, 0x6d, 0x70, 0x20, 0x3f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x3f, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x44, 0x75, 0x6d, 0x70, 0x20, 0x74, 0x68, 0x65, 0x20, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x20, 0x69, 0x6e, 0x20, 0x61, 0x6e, 0x20, 0x53, 0x51, 0x4c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x20, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x49, 0x66, 0x20, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x2c, 0x20, 0x6f, 0x6e, 0x6c, 0x79, 0x20, 0x64, 0x75, 0x6d, 0x70, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x20, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x4c, 0x49, 0x4b, 0x45, 0x20, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x20, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x2e, 0x0a, 0x2e, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x6f, 0x6e, 0x7c, 0x6f, 0x66, 0x66, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x54, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x20, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x6f, 0x6e, 0x20, 0x6f, 0x72, 0x20, 0x6f, 0x66, 0x66, 0x0a, 0x2e, 0x65, 0x71, 0x70, 0x20, 0x6f, 0x6e, 0x7c, 0x6f, 0x66, 0x66, 0x7c, 0x66, 0x75, 0x6c, 0x6c, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x20, 0x45, 0x58, 0x50, 0x4c, 0x41, 0x49, 0x4e, 0x20, 0x51, 0x55, 0x45, 0x52, 0x59, 0x20, 0x50, 0x4c, 0x41, 0x4e, 0x0a, 0x2e, 0x65, 0x78, 0x69, 0x74, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x45, 0x78, 0x69, 0x74, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x0a, 0x2e, 0x66, 0x75, 0x6c, 0x6c, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x20, 0x3f, 0x2d, 0x2d, 0x69, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x3f, 0x20, 0x53, 0x68, 0x6f, 0x77, 0x20, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x74, 0x68, 0x65, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x73, 0x71, 0x6c, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x0a, 0x2e, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x20, 0x6f, 0x6e, 0x7c, 0x6f, 0x66, 0x66, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x54, 0x75, 0x72, 0x6e, 0x20, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x20, 0x6f, 0x66, 0x20, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x6f, 0x72, 0x20, 0x6f, 0x66, 0x66, 0x0a, 0x2e, 0x68, 0x65, 0x6c, 0x70, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x53, 0x68, 0x6f, 0x77, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x0a, 0x2e, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x46, 0x49, 0x4c, 0x45, 0x20, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x20, 0x20, 0x20, 0x20, 0x20, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x46, 0x49, 0x4c, 0x45, 0x20, 0x69, 0x6e, 0x74, 0x6f, 0x20, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x0a, 0x2e, 0x69, 0x6d, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x20, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x20, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x20, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x69, 0x6d, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x20, 0x6f, 0x6e, 0x20, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x20, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x0a, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x20, 0x3f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x3f, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x53, 0x68, 0x6f, 0x77, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x20, 0x6f, 0x66, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x49, 0x66, 0x20, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x2c, 0x20, 0x6f, 0x6e, 0x6c, 0x79, 0x20, 0x73, 0x68, 0x6f, 0x77, 0x20, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x20, 0x4c, 0x49, 0x4b, 0x45, 0x20, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x20, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x2e, 0x0a, 0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x20, 0x3f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x3f, 0x20, 0x3f, 0x56, 0x41, 0x4c, 0x3f, 0x20, 0x20, 0x20, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x20, 0x6f, 0x72, 0x20, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x61, 0x6e, 0x20, 0x53, 0x51, 0x4c, 0x49, 0x54, 0x45, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x0a, 0x2e, 0x6c, 0x69, 0x6e, 0x74, 0x20, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x70, 0x6f, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x20, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x20, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x2e, 0x20, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6b, 0x65, 0x79, 0x2d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x20, 0x20, 0x20, 0x20, 0x20, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x20, 0x6b, 0x65, 0x79, 0x20, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x0a, 0x2e, 0x6c, 0x6f, 0x61, 0x64, 0x20, 0x46, 0x49, 0x4c, 0x45, 0x20, 0x3f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x3f, 0x20, 0x20, 0x20, 0x20, 0x20, 0x4c, 0x6f, 0x61, 0x64, 0x20, 0x61, 0x6e, 0x20, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x0a, 0x2e, 0x6c, 0x6f, 0x67, 0x20, 0x46, 0x49, 0x4c, 0x45, 0x7c, 0x6f, 0x66, 0x66, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x54, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x20, 0x6f, 0x6e, 0x20, 0x6f, 0x72, 0x20, 0x6f, 0x66, 0x66, 0x2e, 0x20, 0x20, 0x46, 0x49, 0x4c, 0x45, 0x20, 0x63, 0x61, 0x6e, 0x20, 0x62, 0x65, 0x20, 0x73, 0x74, 0x64, 0x65, 0x72, 0x72, 0x2f, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x0a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x20, 0x4d, 0x4f, 0x44, 0x45, 0x20, 0x3f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x3f, 0x20, 0x20, 0x20, 0x20, 0x20, 0x53, 0x65, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x20, 0x6d, 0x6f, 0x64, 0x65, 0x20, 0x77, 0x68, 0x65, 0x72, 0x65, 0x20, 0x4d, 0x4f, 0x44, 0x45, 0x20, 0x69, 0x73, 0x20, 0x6f, 0x6e, 0x65, 0x20, 0x6f, 0x66, 0x3a, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x61, 0x73, 0x63, 0x69, 0x69, 0x20, 0x20, 0x20, 0x20, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x2f, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x64, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 0x30, 0x78, 0x31, 0x46, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x30, 0x78, 0x31, 0x45, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 0x73, 0x76, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x2d, 0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x65, 0x64, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x20, 0x20, 0x20, 0x4c, 0x65, 0x66, 0x74, 0x2d, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x20, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x2e, 0x20, 0x20, 0x28, 0x53, 0x65, 0x65, 0x20, 0x2e, 0x77, 0x69, 0x64, 0x74, 0x68, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x68, 0x74, 0x6d, 0x6c, 0x20, 0x20, 0x20, 0x20, 0x20, 0x48, 0x54, 0x4d, 0x4c, 0x20, 0x3c, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x3e, 0x20, 0x63, 0x6f, 0x64, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x20, 0x20, 0x20, 0x53, 0x51, 0x4c, 0x20, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x20, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x69, 0x6e, 0x65, 0x20, 0x20, 0x20, 0x20, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x70, 0x65, 0x72, 0x20, 0x6c, 0x69, 0x6e, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x20, 0x20, 0x20, 0x20, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x20, 0x64, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 0x22, 0x7c, 0x22, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x20, 0x20, 0x20, 0x20, 0x45, 0x73, 0x63, 0x61, 0x70, 0x65, 0x20, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x20, 0x61, 0x73, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x53, 0x51, 0x4c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x61, 0x62, 0x73, 0x20, 0x20, 0x20, 0x20, 0x20, 0x54, 0x61, 0x62, 0x2d, 0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x65, 0x64, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x63, 0x6c, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x54, 0x43, 0x4c, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x0a, 0x2e, 0x6e, 0x75, 0x6c, 0x6c, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x55, 0x73, 0x65, 0x20, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x20, 0x69, 0x6e, 0x20, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x4e, 0x55, 0x4c, 0x4c, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x0a, 0x2e, 0x6f, 0x6e, 0x63, 0x65, 0x20, 0x46, 0x49, 0x4c, 0x45, 0x4e, 0x41, 0x4d, 0x45, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6e, 0x65, 0x78, 0x74, 0x20, 0x53, 0x51, 0x4c, 0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x20, 0x6f, 0x6e, 0x6c, 0x79, 0x20, 0x74, 0x6f, 0x20, 0x46, 0x49, 0x4c, 0x45, 0x4e, 0x41, 0x4d, 0x45, 0x0a, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x20, 0x3f, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x3f, 0x20, 0x3f, 0x46, 0x49, 0x4c, 0x45, 0x3f, 0x20, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x20, 0x65, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x72, 0x65, 0x6f, 0x70, 0x65, 0x6e, 0x20, 0x46, 0x49, 0x4c, 0x45, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x54, 0x68, 0x65, 0x20, 0x2d, 0x2d, 0x6e, 0x65, 0x77, 0x20, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x73, 0x74, 0x61, 0x72, 0x74, 0x73, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x61, 0x6e, 0x20, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x20, 0x66, 0x69, 0x6c, 0x65, 0x0a, 0x2e, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x20, 0x3f, 0x46, 0x49, 0x4c, 0x45, 0x4e, 0x41, 0x4d, 0x45, 0x3f, 0x20, 0x20, 0x20, 0x20, 0x20, 0x53, 0x65, 0x6e, 0x64, 0x20, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x46, 0x49, 0x4c, 0x45, 0x4e, 0x41, 0x4d, 0x45, 0x20, 0x6f, 0x72, 0x20, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x0a, 0x2e, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x20, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x2e, 0x2e, 0x2e, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x20, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x20, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x0a, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x20, 0x4d, 0x41, 0x49, 0x4e, 0x20, 0x43, 0x4f, 0x4e, 0x54, 0x49, 0x4e, 0x55, 0x45, 0x20, 0x20, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x20, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x73, 0x0a, 0x2e, 0x71, 0x75, 0x69, 0x74, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x45, 0x78, 0x69, 0x74, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x0a, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x20, 0x46, 0x49, 0x4c, 0x45, 0x4e, 0x41, 0x4d, 0x45, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x20, 0x53, 0x51, 0x4c, 0x20, 0x69, 0x6e, 0x20, 0x46, 0x49, 0x4c, 0x45, 0x4e, 0x41, 0x4d, 0x45, 0x0a, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x20, 0x3f, 0x44, 0x42, 0x3f, 0x20, 0x46, 0x49, 0x4c, 0x45, 0x20, 0x20, 0x20, 0x20, 0x20, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x44, 0x42, 0x20, 0x28, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x22, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x29, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x46, 0x49, 0x4c, 0x45, 0x0a, 0x2e, 0x73, 0x61, 0x76, 0x65, 0x20, 0x46, 0x49, 0x4c, 0x45, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x57, 0x72, 0x69, 0x74, 0x65, 0x20, 0x69, 0x6e, 0x2d, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x20, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x20, 0x69, 0x6e, 0x74, 0x6f, 0x20, 0x46, 0x49, 0x4c, 0x45, 0x0a, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x73, 0x74, 0x61, 0x74, 0x73, 0x20, 0x6f, 0x6e, 0x7c, 0x6f, 0x66, 0x66, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x54, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x71, 0x6c, 0x69, 0x74, 0x65, 0x33, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x5f, 0x73, 0x63, 0x61, 0x6e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x28, 0x29, 0x20, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x6f, 0x72, 0x20, 0x6f, 0x66, 0x66, 0x0a, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x20, 0x3f, 0x50, 0x41, 0x54, 0x54, 0x45, 0x52, 0x4e, 0x3f, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x53, 0x68, 0x6f, 0x77, 0x20, 0x74, 0x68, 0x65, 0x20, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x20, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x20, 0x50, 0x41, 0x54, 0x54, 0x45, 0x52, 0x4e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x41, 0x64, 0x64, 0x20, 0x2d, 0x2d, 0x69, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x70, 0x72, 0x65, 0x74, 0x74, 0x79, 0x2d, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x0a, 0x2e, 0x73, 0x65, 0x6c, 0x66, 0x74, 0x65, 0x73, 0x74, 0x20, 0x3f, 0x2d, 0x2d, 0x69, 0x6e, 0x69, 0x74, 0x3f, 0x20, 0x20, 0x20, 0x20, 0x20, 0x52, 0x75, 0x6e, 0x20, 0x74, 0x65, 0x73, 0x74, 0x73, 0x20, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x53, 0x45, 0x4c, 0x46, 0x54, 0x45, 0x53, 0x54, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x0a, 0x2e, 0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x43, 0x4f, 0x4c, 0x20, 0x3f, 0x52, 0x4f, 0x57, 0x3f, 0x20, 0x20, 0x20, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x20, 0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x6c, 0x79, 0x20, 0x74, 0x68, 0x65, 0x20, 0x72, 0x6f, 0x77, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x62, 0x6f, 0x74, 0x68, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x20, 0x6d, 0x6f, 0x64, 0x65, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x2e, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x0a, 0x2e, 0x73, 0x68, 0x61, 0x33, 0x73, 0x75, 0x6d, 0x20, 0x3f, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x2e, 0x2e, 0x2e, 0x3f, 0x20, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x20, 0x61, 0x20, 0x53, 0x48, 0x41, 0x33, 0x20, 0x68, 0x61, 0x73, 0x68, 0x20, 0x6f, 0x66, 0x20, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x0a, 0x2e, 0x73, 0x68, 0x65, 0x6c, 0x6c, 0x20, 0x43, 0x4d, 0x44, 0x20, 0x41, 0x52, 0x47, 0x53, 0x2e, 0x2e, 0x2e, 0x20, 0x20, 0x20, 0x20, 0x20, 0x52, 0x75, 0x6e, 0x20, 0x43, 0x4d, 0x44, 0x20, 0x41, 0x52, 0x47, 0x53, 0x2e, 0x2e, 0x2e, 0x20, 0x69, 0x6e, 0x20, 0x61, 0x20, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x20, 0x73, 0x68, 0x65, 0x6c, 0x6c, 0x0a, 0x2e, 0x73, 0x68, 0x6f, 0x77, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x53, 0x68, 0x6f, 0x77, 0x20, 0x74, 0x68, 0x65, 0x20, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x76, 0x61, 0x72, 0x69, 0x6f, 0x75, 0x73, 0x20, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x0a, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x73, 0x20, 0x3f, 0x6f, 0x6e, 0x7c, 0x6f, 0x66, 0x66, 0x3f, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x53, 0x68, 0x6f, 0x77, 0x20, 0x73, 0x74, 0x61, 0x74, 0x73, 0x20, 0x6f, 0x72, 0x20, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x74, 0x61, 0x74, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x6f, 0x72, 0x20, 0x6f, 0x66, 0x66, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x20, 0x43, 0x4d, 0x44, 0x20, 0x41, 0x52, 0x47, 0x53, 0x2e, 0x2e, 0x2e, 0x20, 0x20, 0x20, 0x20, 0x52, 0x75, 0x6e, 0x20, 0x43, 0x4d, 0x44, 0x20, 0x41, 0x52, 0x47, 0x53, 0x2e, 0x2e, 0x2e, 0x20, 0x69, 0x6e, 0x20, 0x61, 0x20, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x20, 0x73, 0x68, 0x65, 0x6c, 0x6c, 0x0a, 0x2e, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x20, 0x3f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x3f, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x4c, 0x69, 0x73, 0x74, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x49, 0x66, 0x20, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x2c, 0x20, 0x6f, 0x6e, 0x6c, 0x79, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x20, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x4c, 0x49, 0x4b, 0x45, 0x20, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x20, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x2e, 0x0a, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x20, 0x4e, 0x41, 0x4d, 0x45, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x20, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x27, 0x74, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x2d, 0x6f, 0x75, 0x74, 0x2e, 0x74, 0x78, 0x74, 0x27, 0x0a, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x20, 0x4d, 0x53, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x54, 0x72, 0x79, 0x20, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x20, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x4d, 0x53, 0x20, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x0a, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x20, 0x6f, 0x6e, 0x7c, 0x6f, 0x66, 0x66, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x54, 0x75, 0x72, 0x6e, 0x20, 0x53, 0x51, 0x4c, 0x20, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x20, 0x6f, 0x6e, 0x20, 0x6f, 0x72, 0x20, 0x6f, 0x66, 0x66, 0x0a, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x20, 0x46, 0x49, 0x4c, 0x45, 0x7c, 0x6f, 0x66, 0x66, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x20, 0x65, 0x61, 0x63, 0x68, 0x20, 0x53, 0x51, 0x4c, 0x20, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x61, 0x73, 0x20, 0x69, 0x74, 0x20, 0x69, 0x73, 0x20, 0x72, 0x75, 0x6e, 0x0a, 0x2e, 0x76, 0x66, 0x73, 0x69, 0x6e, 0x66, 0x6f, 0x20, 0x3f, 0x41, 0x55, 0x58, 0x3f, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x61, 0x62, 0x6f, 0x75, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x74, 0x6f, 0x70, 0x2d, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x20, 0x56, 0x46, 0x53, 0x0a, 0x2e, 0x76, 0x66, 0x73, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x4c, 0x69, 0x73, 0x74, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x56, 0x46, 0x53, 0x65, 0x73, 0x0a, 0x2e, 0x76, 0x66, 0x73, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x3f, 0x41, 0x55, 0x58, 0x3f, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x56, 0x46, 0x53, 0x20, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x0a, 0x2e, 0x77, 0x69, 0x64, 0x74, 0x68, 0x20, 0x4e, 0x55, 0x4d, 0x31, 0x20, 0x4e, 0x55, 0x4d, 0x32, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x20, 0x20, 0x53, 0x65, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x20, 0x77, 0x69, 0x64, 0x74, 0x68, 0x73, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x22, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x22, 0x20, 0x6d, 0x6f, 0x64, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x4e, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x20, 0x72, 0x69, 0x67, 0x68, 0x74, 0x2d, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x0a, 0x00, 0x73, 0x68, 0x65, 0x6c, 0x6c, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x00, 0x73, 0x68, 0x65, 0x6c, 0x6c, 0x41, 0x64, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x80, 0x00, 0x40, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x0a, 0x0a, 0x0a, 0x0a, 0x0a, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x80, 0x00, 0x00, 0x00, 0x40, 0x80, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x2a, 0x3f, 0x5b, 0x00, 0x00, 0x00, 0x00, 0x00, 0xca, 0x9a, 0x3b, 0x00, 0xca, 0x9a, 0x3b, 0xd0, 0x07, 0x00, 0x00, 0xe8, 0x03, 0x00, 0x00, 0xf4, 0x01, 0x00, 0x00, 0x80, 0xb2, 0xe6, 0x0e, 0x7f, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x50, 0xc3, 0x00, 0x00, 0xe7, 0x03, 0x00, 0x00, 0xe8, 0x03, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f, 0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3a, 0x3b, 0x3c, 0x3d, 0x3e, 0x3f, 0x40, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7a, 0x5b, 0x5c, 0x5d, 0x5e, 0x5f, 0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7a, 0x7b, 0x7c, 0x7d, 0x7e, 0x7f, 0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8a, 0x8b, 0x8c, 0x8d, 0x8e, 0x8f, 0x90, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9a, 0x9b, 0x9c, 0x9d, 0x9e, 0x9f, 0xa0, 0xa1, 0xa2, 0xa3, 0xa4, 0xa5, 0xa6, 0xa7, 0xa8, 0xa9, 0xaa, 0xab, 0xac, 0xad, 0xae, 0xaf, 0xb0, 0xb1, 0xb2, 0xb3, 0xb4, 0xb5, 0xb6, 0xb7, 0xb8, 0xb9, 0xba, 0xbb, 0xbc, 0xbd, 0xbe, 0xbf, 0xc0, 0xc1, 0xc2, 0xc3, 0xc4, 0xc5, 0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xcb, 0xcc, 0xcd, 0xce, 0xcf, 0xd0, 0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda, 0xdb, 0xdc, 0xdd, 0xde, 0xdf, 0xe0, 0xe1, 0xe2, 0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xeb, 0xec, 0xed, 0xee, 0xef, 0xf0, 0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8, 0xf9, 0xfa, 0xfb, 0xfc, 0xfd, 0xfe, 0xff, 0x42, 0x49, 0x4e, 0x41, 0x52, 0x59, 0x00, 0x25, 0x5f, 0x00, 0x01, 0x65, 0x78, 0x65, 0x63, 0x5f, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x02, 0x03, 0x04, 0x02, 0x02, 0x02, 0x01, 0x01, 0x02, 0x03, 0x04, 0x02, 0x02, 0x02, 0x01, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x01, 0x03, 0x03, 0x02, 0x04, 0x02, 0x02, 0x02, 0x01, 0x04, 0x02, 0x02, 0x02, 0x04, 0x05, 0x02, 0x06, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x06, 0x06, 0x05, 0x05, 0x05, 0x05, 0x05, 0x07, 0x01, 0x07, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x74, 0x68, 0x73, 0x74, 0x6e, 0x64, 0x72, 0x64, 0x00, 0x64, 0x0a, 0x01, 0x10, 0x00, 0x00, 0x73, 0x00, 0x04, 0x05, 0x00, 0x00, 0x67, 0x00, 0x01, 0x03, 0x1e, 0x00, 0x7a, 0x00, 0x04, 0x06, 0x00, 0x00, 0x71, 0x00, 0x04, 0x09, 0x00, 0x00, 0x51, 0x00, 0x04, 0x0a, 0x00, 0x00, 0x77, 0x00, 0x04, 0x0e, 0x00, 0x00, 0x63, 0x00, 0x00, 0x08, 0x00, 0x00, 0x6f, 0x08, 0x00, 0x00, 0x00, 0x02, 0x75, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x78, 0x10, 0x00, 0x00, 0x10, 0x01, 0x58, 0x10, 0x00, 0x00, 0x00, 0x04, 0x66, 0x00, 0x01, 0x01, 0x00, 0x00, 0x65, 0x00, 0x01, 0x02, 0x1e, 0x00, 0x45, 0x00, 0x01, 0x02, 0x0e, 0x00, 0x47, 0x00, 0x01, 0x03, 0x0e, 0x00, 0x69, 0x0a, 0x01, 0x10, 0x00, 0x00, 0x6e, 0x00, 0x00, 0x04, 0x00, 0x00, 0x25, 0x00, 0x00, 0x07, 0x00, 0x00, 0x70, 0x10, 0x00, 0x0d, 0x00, 0x01, 0x54, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x53, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x72, 0x0a, 0x01, 0x0f, 0x00, 0x00, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x00, 0x2d, 0x78, 0x30, 0x00, 0x58, 0x30, 0x00, 0x01, 0x02, 0x05, 0x0a, 0x0f, 0x14, 0x19, 0x19, 0x19, 0x32, 0x32, 0x64, 0x00, 0x01, 0x03, 0x08, 0x12, 0x21, 0x35, 0x4e, 0x67, 0x80, 0xb2, 0xe4, 0x04, 0x05, 0x03, 0x05, 0x01, 0x05, 0x01, 0x05, 0x02, 0x05, 0x02, 0x05, 0x01, 0x05, 0x01, 0x05, 0x04, 0x05, 0x03, 0x05, 0x01, 0x05, 0x01, 0x05, 0x02, 0x05, 0x02, 0x05, 0x01, 0x05, 0x01, 0x05, 0x53, 0x51, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x20, 0x33, 0x00, 0xd9, 0xd5, 0x05, 0xf9, 0x20, 0xa1, 0x63, 0xd7, 0x01, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x01, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x00, 0x02, 0x02, 0x00, 0x01, 0x02, 0x01, 0x01, 0x01, 0x02, 0x01, 0x02, 0x00, 0x10, 0x00, 0x02, 0x02, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x00, 0x01, 0x02, 0x03, 0x00, 0x01, 0x00, 0x00, 0x4c, 0x69, 0x75, 0x4a, 0x00, 0x2d, 0x00, 0x00, 0x52, 0x00, 0x4d, 0x00, 0x00, 0x2a, 0x0c, 0x4e, 0x0f, 0x00, 0x74, 0x55, 0x36, 0x70, 0x00, 0x13, 0x00, 0x00, 0x79, 0x00, 0x77, 0x73, 0x00, 0x16, 0x5d, 0x00, 0x09, 0x00, 0x00, 0x46, 0x47, 0x00, 0x45, 0x06, 0x00, 0x30, 0x5a, 0x66, 0x00, 0x76, 0x65, 0x00, 0x00, 0x2c, 0x00, 0x67, 0x18, 0x00, 0x11, 0x00, 0x7a, 0x35, 0x17, 0x00, 0x05, 0x6e, 0x19, 0x60, 0x00, 0x00, 0x7c, 0x6a, 0x3c, 0x7b, 0x39, 0x1c, 0x37, 0x00, 0x5b, 0x00, 0x64, 0x1a, 0x00, 0x63, 0x00, 0x00, 0x00, 0x5f, 0x5c, 0x61, 0x58, 0x6d, 0x0e, 0x27, 0x6c, 0x00, 0x51, 0x00, 0x12, 0x59, 0x6f, 0x20, 0x00, 0x78, 0x50, 0x71, 0x3e, 0x2e, 0x54, 0x00, 0x00, 0x5e, 0x28, 0x3b, 0x72, 0x00, 0x24, 0x00, 0x00, 0x1d, 0x00, 0x56, 0x3f, 0x40, 0x00, 0x14, 0x3d, 0x00, 0x38, 0x07, 0x07, 0x05, 0x04, 0x06, 0x04, 0x05, 0x03, 0x06, 0x07, 0x03, 0x06, 0x06, 0x07, 0x07, 0x03, 0x08, 0x02, 0x06, 0x05, 0x04, 0x04, 0x03, 0x0a, 0x04, 0x06, 0x0b, 0x06, 0x02, 0x07, 0x05, 0x05, 0x09, 0x06, 0x09, 0x09, 0x07, 0x0a, 0x0a, 0x04, 0x06, 0x02, 0x03, 0x09, 0x04, 0x02, 0x06, 0x05, 0x07, 0x04, 0x05, 0x07, 0x06, 0x06, 0x05, 0x06, 0x05, 0x05, 0x09, 0x07, 0x07, 0x03, 0x02, 0x04, 0x04, 0x07, 0x03, 0x06, 0x04, 0x07, 0x06, 0x0c, 0x06, 0x09, 0x04, 0x06, 0x05, 0x04, 0x07, 0x06, 0x05, 0x06, 0x07, 0x05, 0x04, 0x05, 0x06, 0x05, 0x07, 0x03, 0x07, 0x0d, 0x02, 0x02, 0x04, 0x06, 0x06, 0x08, 0x05, 0x11, 0x0c, 0x07, 0x08, 0x08, 0x02, 0x04, 0x04, 0x04, 0x04, 0x04, 0x02, 0x02, 0x06, 0x05, 0x08, 0x05, 0x08, 0x03, 0x05, 0x05, 0x06, 0x04, 0x09, 0x03, 0x52, 0x45, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x45, 0x44, 0x45, 0x53, 0x43, 0x41, 0x50, 0x45, 0x41, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x45, 0x59, 0x42, 0x45, 0x46, 0x4f, 0x52, 0x45, 0x49, 0x47, 0x4e, 0x4f, 0x52, 0x45, 0x47, 0x45, 0x58, 0x50, 0x4c, 0x41, 0x49, 0x4e, 0x53, 0x54, 0x45, 0x41, 0x44, 0x44, 0x41, 0x54, 0x41, 0x42, 0x41, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x46, 0x54, 0x48, 0x45, 0x4e, 0x44, 0x45, 0x46, 0x45, 0x52, 0x52, 0x41, 0x42, 0x4c, 0x45, 0x4c, 0x53, 0x45, 0x58, 0x43, 0x45, 0x50, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x41, 0x54, 0x55, 0x52, 0x41, 0x4c, 0x54, 0x45, 0x52, 0x41, 0x49, 0x53, 0x45, 0x58, 0x43, 0x4c, 0x55, 0x53, 0x49, 0x56, 0x45, 0x58, 0x49, 0x53, 0x54, 0x53, 0x41, 0x56, 0x45, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x53, 0x45, 0x43, 0x54, 0x52, 0x49, 0x47, 0x47, 0x45, 0x52, 0x45, 0x46, 0x45, 0x52, 0x45, 0x4e, 0x43, 0x45, 0x53, 0x43, 0x4f, 0x4e, 0x53, 0x54, 0x52, 0x41, 0x49, 0x4e, 0x54, 0x4f, 0x46, 0x46, 0x53, 0x45, 0x54, 0x45, 0x4d, 0x50, 0x4f, 0x52, 0x41, 0x52, 0x59, 0x55, 0x4e, 0x49, 0x51, 0x55, 0x45, 0x52, 0x59, 0x57, 0x49, 0x54, 0x48, 0x4f, 0x55, 0x54, 0x45, 0x52, 0x45, 0x4c, 0x45, 0x41, 0x53, 0x45, 0x41, 0x54, 0x54, 0x41, 0x43, 0x48, 0x41, 0x56, 0x49, 0x4e, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x42, 0x45, 0x47, 0x49, 0x4e, 0x4e, 0x45, 0x52, 0x45, 0x43, 0x55, 0x52, 0x53, 0x49, 0x56, 0x45, 0x42, 0x45, 0x54, 0x57, 0x45, 0x45, 0x4e, 0x4f, 0x54, 0x4e, 0x55, 0x4c, 0x4c, 0x49, 0x4b, 0x45, 0x43, 0x41, 0x53, 0x43, 0x41, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x43, 0x41, 0x53, 0x45, 0x43, 0x4f, 0x4c, 0x4c, 0x41, 0x54, 0x45, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x44, 0x45, 0x54, 0x41, 0x43, 0x48, 0x49, 0x4d, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x54, 0x45, 0x4a, 0x4f, 0x49, 0x4e, 0x53, 0x45, 0x52, 0x54, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x50, 0x4c, 0x41, 0x4e, 0x41, 0x4c, 0x59, 0x5a, 0x45, 0x50, 0x52, 0x41, 0x47, 0x4d, 0x41, 0x42, 0x4f, 0x52, 0x54, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x53, 0x56, 0x49, 0x52, 0x54, 0x55, 0x41, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x57, 0x48, 0x45, 0x4e, 0x57, 0x48, 0x45, 0x52, 0x45, 0x4e, 0x41, 0x4d, 0x45, 0x41, 0x46, 0x54, 0x45, 0x52, 0x45, 0x50, 0x4c, 0x41, 0x43, 0x45, 0x41, 0x4e, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x41, 0x55, 0x54, 0x4f, 0x49, 0x4e, 0x43, 0x52, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x43, 0x41, 0x53, 0x54, 0x43, 0x4f, 0x4c, 0x55, 0x4d, 0x4e, 0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x54, 0x43, 0x4f, 0x4e, 0x46, 0x4c, 0x49, 0x43, 0x54, 0x43, 0x52, 0x4f, 0x53, 0x53, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x53, 0x54, 0x41, 0x4d, 0x50, 0x52, 0x49, 0x4d, 0x41, 0x52, 0x59, 0x44, 0x45, 0x46, 0x45, 0x52, 0x52, 0x45, 0x44, 0x49, 0x53, 0x54, 0x49, 0x4e, 0x43, 0x54, 0x44, 0x52, 0x4f, 0x50, 0x46, 0x41, 0x49, 0x4c, 0x46, 0x52, 0x4f, 0x4d, 0x46, 0x55, 0x4c, 0x4c, 0x47, 0x4c, 0x4f, 0x42, 0x59, 0x49, 0x46, 0x49, 0x53, 0x4e, 0x55, 0x4c, 0x4c, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x45, 0x53, 0x54, 0x52, 0x49, 0x43, 0x54, 0x52, 0x49, 0x47, 0x48, 0x54, 0x52, 0x4f, 0x4c, 0x4c, 0x42, 0x41, 0x43, 0x4b, 0x52, 0x4f, 0x57, 0x55, 0x4e, 0x49, 0x4f, 0x4e, 0x55, 0x53, 0x49, 0x4e, 0x47, 0x56, 0x41, 0x43, 0x55, 0x55, 0x4d, 0x56, 0x49, 0x45, 0x57, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x4c, 0x59, 0x00, 0x00, 0x02, 0x00, 0x02, 0x00, 0x08, 0x00, 0x09, 0x00, 0x0e, 0x00, 0x10, 0x00, 0x14, 0x00, 0x17, 0x00, 0x19, 0x00, 0x19, 0x00, 0x1d, 0x00, 0x21, 0x00, 0x24, 0x00, 0x29, 0x00, 0x2e, 0x00, 0x30, 0x00, 0x35, 0x00, 0x36, 0x00, 0x3b, 0x00, 0x3e, 0x00, 0x41, 0x00, 0x43, 0x00, 0x45, 0x00, 0x4e, 0x00, 0x51, 0x00, 0x56, 0x00, 0x5b, 0x00, 0x5f, 0x00, 0x60, 0x00, 0x65, 0x00, 0x69, 0x00, 0x6d, 0x00, 0x75, 0x00, 0x7a, 0x00, 0x80, 0x00, 0x88, 0x00, 0x8e, 0x00, 0x98, 0x00, 0x9f, 0x00, 0xa2, 0x00, 0xa2, 0x00, 0xa5, 0x00, 0xa7, 0x00, 0xa7, 0x00, 0xab, 0x00, 0xb0, 0x00, 0xb3, 0x00, 0xb8, 0x00, 0xb8, 0x00, 0xbc, 0x00, 0xc0, 0x00, 0xc7, 0x00, 0xcc, 0x00, 0xd1, 0x00, 0xd4, 0x00, 0xda, 0x00, 0xdd, 0x00, 0xe1, 0x00, 0xea, 0x00, 0xf0, 0x00, 0xf0, 0x00, 0xf0, 0x00, 0xf3, 0x00, 0xf6, 0x00, 0xfa, 0x00, 0xfb, 0x00, 0xff, 0x00, 0x05, 0x01, 0x09, 0x01, 0x10, 0x01, 0x16, 0x01, 0x22, 0x01, 0x28, 0x01, 0x31, 0x01, 0x33, 0x01, 0x39, 0x01, 0x3e, 0x01, 0x40, 0x01, 0x47, 0x01, 0x4c, 0x01, 0x51, 0x01, 0x57, 0x01, 0x5d, 0x01, 0x62, 0x01, 0x66, 0x01, 0x69, 0x01, 0x6f, 0x01, 0x73, 0x01, 0x7a, 0x01, 0x7c, 0x01, 0x83, 0x01, 0x85, 0x01, 0x87, 0x01, 0x90, 0x01, 0x94, 0x01, 0x9a, 0x01, 0xa0, 0x01, 0xa8, 0x01, 0xad, 0x01, 0xad, 0x01, 0xbd, 0x01, 0xc4, 0x01, 0xcb, 0x01, 0xcc, 0x01, 0xd3, 0x01, 0xd7, 0x01, 0xdb, 0x01, 0xdf, 0x01, 0xe3, 0x01, 0xe6, 0x01, 0xe8, 0x01, 0xea, 0x01, 0xf0, 0x01, 0xf4, 0x01, 0xfc, 0x01, 0x01, 0x02, 0x09, 0x02, 0x0c, 0x02, 0x11, 0x02, 0x16, 0x02, 0x1c, 0x02, 0x20, 0x02, 0x25, 0x02, 0x50, 0x60, 0x8c, 0x27, 0x3a, 0x29, 0x68, 0x42, 0x21, 0x71, 0x3d, 0x3e, 0x2f, 0x02, 0x40, 0x8e, 0x26, 0x18, 0x77, 0x10, 0x62, 0x8a, 0x0b, 0x70, 0x8b, 0x75, 0x06, 0x1c, 0x6b, 0x62, 0x8d, 0x46, 0x09, 0x14, 0x0d, 0x76, 0x4b, 0x69, 0x63, 0x83, 0x44, 0x43, 0x6f, 0x15, 0x15, 0x2b, 0x67, 0x03, 0x19, 0x4f, 0x62, 0x0e, 0x20, 0x80, 0x7f, 0x6e, 0x05, 0x62, 0x47, 0x30, 0x33, 0x13, 0x41, 0x65, 0x2f, 0x23, 0x1f, 0x6d, 0x88, 0x5e, 0x11, 0x52, 0x28, 0x08, 0x7c, 0x6c, 0x2e, 0x04, 0x1e, 0x45, 0x1b, 0x78, 0x4e, 0x81, 0x89, 0x82, 0x51, 0x1d, 0x48, 0x2c, 0x64, 0x6a, 0x0f, 0x31, 0x24, 0x3c, 0x0a, 0x25, 0x62, 0x52, 0x52, 0x66, 0x07, 0x79, 0x2d, 0x72, 0x2a, 0x7b, 0x62, 0x2f, 0x22, 0x12, 0x32, 0x7e, 0x49, 0x62, 0x0c, 0x4a, 0x73, 0x7d, 0x4c, 0x4d, 0x3f, 0x74, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x00, 0x15, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x2b, 0x03, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x3a, 0x00, 0x26, 0x00, 0x00, 0x00, 0x01, 0x42, 0x00, 0x00, 0x43, 0x00, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x31, 0x41, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x34, 0x10, 0x22, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x48, 0x4f, 0x00, 0x08, 0x00, 0x68, 0x62, 0x00, 0x6b, 0x00, 0x57, 0x00, 0x4b, 0x33, 0x00, 0x1b, 0x25, 0x49, 0x53, 0x00, 0x23, 0x44, 0x00, 0x00, 0x73, 0x68, 0x65, 0x6c, 0x6c, 0x46, 0x6b, 0x65, 0x79, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x61, 0x75, 0x73, 0x65, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x82, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8a, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x00, 0x00, 0x80, 0x8b, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x81, 0x80, 0x00, 0x80, 0x00, 0x00, 0x00, 0x80, 0x09, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x8a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x80, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x8b, 0x80, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x89, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x02, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x0a, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x80, 0x81, 0x80, 0x00, 0x80, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x08, 0x80, 0x00, 0x80, 0x00, 0x00, 0x00, 0x80, 0x00, 0x01, 0x02, 0x03, 0x04, 0x06, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x02, 0x02, 0x03, 0x03, 0x04, 0x04, 0x05, 0x05, 0x06, 0x06, 0x07, 0x07, 0x08, 0x08, 0x09, 0x09, 0x0a, 0x0a, 0x0b, 0x0b, 0x0c, 0x0c, 0x0d, 0x0d, 0x0e, 0x0e, 0x0f, 0x0f, 0x10, 0x10, 0x11, 0x11, 0x12, 0x12, 0x13, 0x13, 0x14, 0x14, 0x15, 0x15, 0x16, 0x16, 0x17, 0x17, 0x18, 0x18, 0x19, 0x19, 0x1a, 0x1a, 0x1b, 0x1b, 0x1c, 0x1c, 0x1d, 0x1d, 0x1e, 0x1e, 0x1f, 0x1f, 0x20, 0x20, 0x21, 0x21, 0x22, 0x22, 0x23, 0x23, 0x24, 0x24, 0x25, 0x25, 0x26, 0x26, 0x27, 0x27, 0x28, 0x28, 0x29, 0x29, 0x2a, 0x2a, 0x2b, 0x2b, 0x2c, 0x2c, 0x2d, 0x2d, 0x2e, 0x2e, 0x2f, 0x2f, 0x30, 0x30, 0x31, 0x31, 0x32, 0x32, 0x33, 0x33, 0x34, 0x34, 0x35, 0x35, 0x36, 0x36, 0x37, 0x37, 0x38, 0x38, 0x39, 0x39, 0x10, 0x10, 0x02, 0x10, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x03, 0x00, 0x05, 0x00, 0x06, 0x00, 0x07, 0x00, 0x08, 0x00, 0x09, 0x00, 0x01, 0x01, 0x03, 0x00, 0x05, 0x00, 0x06, 0x00, 0x08, 0x00, 0x01, 0x01, 0x00, 0x01, 0x00, 0x00, 0x6f, 0x00, 0x75, 0x00, 0x74, 0x00, 0x20, 0x00, 0x6f, 0x00, 0x66, 0x00, 0x20, 0x00, 0x6d, 0x00, 0x65, 0x00, 0x6d, 0x00, 0x6f, 0x00, 0x72, 0x00, 0x79, 0x00, 0x00, 0x00, 0x62, 0x00, 0x61, 0x00, 0x64, 0x00, 0x20, 0x00, 0x70, 0x00, 0x61, 0x00, 0x72, 0x00, 0x61, 0x00, 0x6d, 0x00, 0x65, 0x00, 0x74, 0x00, 0x65, 0x00, 0x72, 0x00, 0x20, 0x00, 0x6f, 0x00, 0x72, 0x00, 0x20, 0x00, 0x6f, 0x00, 0x74, 0x00, 0x68, 0x00, 0x65, 0x00, 0x72, 0x00, 0x20, 0x00, 0x41, 0x00, 0x50, 0x00, 0x49, 0x00, 0x20, 0x00, 0x6d, 0x00, 0x69, 0x00, 0x73, 0x00, 0x75, 0x00, 0x73, 0x00, 0x65, 0x00, 0x00, 0x00, 0x98, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, 0x20, 0x00, 0x05, 0x01, 0x60, 0x00, 0x00, 0x01, 0x4e, 0x01, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0xea, 0x03, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0xeb, 0x03, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0xec, 0x03, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0xed, 0x03, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0xee, 0x03, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0xef, 0x03, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x01, 0x04, 0x03, 0x02, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x7f, 0x1b, 0x1b, 0x1b, 0x1b, 0x1b, 0x1b, 0x1b, 0x1b, 0x1b, 0x07, 0x07, 0x1b, 0x07, 0x07, 0x1b, 0x1b, 0x1b, 0x1b, 0x1b, 0x1b, 0x1b, 0x1b, 0x1b, 0x1b, 0x1b, 0x1b, 0x1b, 0x1b, 0x1b, 0x1b, 0x1b, 0x1b, 0x07, 0x0f, 0x08, 0x05, 0x04, 0x16, 0x18, 0x08, 0x11, 0x12, 0x15, 0x14, 0x17, 0x0b, 0x1a, 0x10, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x05, 0x13, 0x0c, 0x0e, 0x0d, 0x06, 0x05, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x01, 0x01, 0x09, 0x1b, 0x1b, 0x1b, 0x01, 0x08, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x01, 0x01, 0x1b, 0x0a, 0x1b, 0x19, 0x1b, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x10, 0x00, 0x01, 0x00, 0x01, 0x01, 0x01, 0x03, 0x03, 0x01, 0x12, 0x01, 0x03, 0x03, 0x01, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x23, 0x26, 0x26, 0x0b, 0x01, 0x01, 0x03, 0x03, 0x03, 0x03, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x01, 0x03, 0x01, 0x01, 0x01, 0x02, 0x02, 0x08, 0x00, 0x10, 0x10, 0x10, 0x10, 0x00, 0x10, 0x10, 0x00, 0x00, 0x10, 0x10, 0x00, 0x00, 0x02, 0x02, 0x02, 0x00, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x00, 0x12, 0x00, 0x10, 0x00, 0x00, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x04, 0x04, 0x00, 0x00, 0x10, 0x10, 0x10, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x10, 0x00, 0x04, 0x1a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x63, 0x01, 0x78, 0x03, 0xfd, 0x03, 0x8d, 0x03, 0x27, 0x04, 0x27, 0x04, 0x27, 0x04, 0x27, 0x04, 0x14, 0x00, 0xed, 0xff, 0x42, 0x00, 0x42, 0x00, 0xaa, 0x00, 0x27, 0x04, 0x27, 0x04, 0x27, 0x04, 0x27, 0x04, 0x27, 0x04, 0x27, 0x04, 0x27, 0x04, 0xf9, 0xff, 0xf9, 0xff, 0x24, 0x00, 0x49, 0x00, 0x45, 0x00, 0x1b, 0x00, 0x76, 0x00, 0xde, 0x00, 0x12, 0x01, 0x46, 0x01, 0x7a, 0x01, 0xae, 0x01, 0xe2, 0x01, 0x16, 0x02, 0x4d, 0x02, 0x84, 0x02, 0xb8, 0x02, 0xb8, 0x02, 0xb8, 0x02, 0xb8, 0x02, 0xb8, 0x02, 0xb8, 0x02, 0xb8, 0x02, 0xb8, 0x02, 0xb8, 0x02, 0xb8, 0x02, 0xb8, 0x02, 0xb8, 0x02, 0xb8, 0x02, 0xb8, 0x02, 0xb8, 0x02, 0xb8, 0x02, 0xb8, 0x02, 0xec, 0x02, 0xb8, 0x02, 0x1f, 0x03, 0x51, 0x03, 0x51, 0x03, 0xd4, 0x03, 0x27, 0x04, 0x27, 0x04, 0x27, 0x04, 0x27, 0x04, 0x27, 0x04, 0x27, 0x04, 0x27, 0x04, 0x27, 0x04, 0x27, 0x04, 0x27, 0x04, 0x27, 0x04, 0x27, 0x04, 0x27, 0x04, 0x27, 0x04, 0x27, 0x04, 0x27, 0x04, 0x27, 0x04, 0x27, 0x04, 0x27, 0x04, 0x27, 0x04, 0x27, 0x04, 0x27, 0x04, 0x27, 0x04, 0x27, 0x04, 0x27, 0x04, 0x27, 0x04, 0x27, 0x04, 0x27, 0x04, 0x27, 0x04, 0x27, 0x04, 0x27, 0x04, 0x3b, 0x04, 0x27, 0x04, 0x27, 0x04, 0x27, 0x04, 0x27, 0x04, 0x27, 0x04, 0x27, 0x04, 0x27, 0x04, 0x27, 0x04, 0x27, 0x04, 0x27, 0x04, 0x27, 0x04, 0x27, 0x04, 0x27, 0x04, 0xd5, 0xff, 0x60, 0x04, 0x60, 0x04, 0x60, 0x04, 0x60, 0x04, 0x60, 0x04, 0xe1, 0xff, 0xb8, 0xff, 0xac, 0xff, 0xf2, 0x00, 0x80, 0x04, 0x9b, 0x02, 0xd2, 0x00, 0xd2, 0x00, 0xf2, 0x00, 0x35, 0x01, 0x50, 0x01, 0xc9, 0xff, 0x1e, 0x06, 0x1e, 0x06, 0x1e, 0x06, 0x52, 0x03, 0x52, 0x03, 0x52, 0x03, 0x72, 0x02, 0x72, 0x02, 0x4c, 0x02, 0x4c, 0x02, 0x82, 0x03, 0xdd, 0x00, 0x08, 0x01, 0xf2, 0x00, 0xf2, 0x00, 0xf2, 0x00, 0xf2, 0x00, 0xf2, 0x00, 0xf2, 0x00, 0xf2, 0x00, 0xf2, 0x00, 0xf2, 0x00, 0xf2, 0x00, 0xf2, 0x00, 0xf2, 0x00, 0xf2, 0x00, 0xf2, 0x00, 0xf2, 0x00, 0xf2, 0x00, 0xf2, 0x00, 0xf2, 0x00, 0xf2, 0x00, 0xf2, 0x00, 0xf0, 0x01, 0xa3, 0x02, 0x21, 0x01, 0x21, 0x01, 0x50, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x06, 0x1e, 0x06, 0x1e, 0x06, 0x3a, 0x02, 0x62, 0x00, 0x62, 0x00, 0xbe, 0x03, 0x85, 0x01, 0xc2, 0x01, 0xc8, 0x03, 0xf5, 0x03, 0x08, 0x04, 0x03, 0x04, 0xf2, 0x00, 0xf2, 0x00, 0xf2, 0x00, 0xf2, 0x00, 0xf2, 0x00, 0xf2, 0x00, 0xf2, 0x00, 0xf2, 0x00, 0xf2, 0x00, 0xf2, 0x00, 0xf2, 0x00, 0xf2, 0x00, 0xf2, 0x00, 0xf2, 0x00, 0xf2, 0x00, 0xf2, 0x00, 0x3a, 0x04, 0x3a, 0x04, 0x3a, 0x04, 0xf2, 0x00, 0xf2, 0x00, 0x15, 0x02, 0xf2, 0x00, 0xf2, 0x00, 0xf2, 0x00, 0xdb, 0x03, 0xf2, 0x00, 0xf2, 0x00, 0xb8, 0x04, 0xf2, 0x00, 0xf2, 0x00, 0xf2, 0x00, 0xf2, 0x00, 0xf2, 0x00, 0xf2, 0x00, 0xf2, 0x00, 0xf2, 0x00, 0xf2, 0x00, 0xf2, 0x00, 0xb3, 0x01, 0x13, 0x02, 0xe9, 0x03, 0xe9, 0x03, 0xe9, 0x03, 0x40, 0x03, 0xb2, 0x01, 0xf2, 0x04, 0x52, 0x02, 0x3a, 0x00, 0x5f, 0x03, 0x5f, 0x03, 0xb8, 0x03, 0x3a, 0x00, 0xb8, 0x03, 0xb2, 0x03, 0xe2, 0x02, 0xef, 0x00, 0x91, 0x00, 0x5f, 0x03, 0x0d, 0x02, 0x91, 0x00, 0x91, 0x00, 0x3b, 0x01, 0x87, 0x02, 0x16, 0x03, 0x96, 0x04, 0x5f, 0x04, 0x5f, 0x04, 0xb4, 0x04, 0xb4, 0x04, 0x5f, 0x04, 0xe2, 0x04, 0xd0, 0x04, 0x7b, 0x04, 0xef, 0x04, 0xef, 0x04, 0xef, 0x04, 0xef, 0x04, 0x5f, 0x04, 0xf1, 0x04, 0x7b, 0x04, 0xe2, 0x04, 0xd0, 0x04, 0xd0, 0x04, 0x7b, 0x04, 0x5f, 0x04, 0xf1, 0x04, 0xa2, 0x04, 0x11, 0x05, 0x5f, 0x04, 0x5f, 0x04, 0xf1, 0x04, 0x5c, 0x05, 0x5f, 0x04, 0xf1, 0x04, 0x5f, 0x04, 0xf1, 0x04, 0x5c, 0x05, 0x0e, 0x05, 0x0e, 0x05, 0x0e, 0x05, 0x3e, 0x05, 0x5c, 0x05, 0x0e, 0x05, 0x15, 0x05, 0x0e, 0x05, 0x3e, 0x05, 0x0e, 0x05, 0x0e, 0x05, 0x06, 0x05, 0x1a, 0x05, 0x06, 0x05, 0x1a, 0x05, 0x06, 0x05, 0x1a, 0x05, 0x06, 0x05, 0x1a, 0x05, 0x5f, 0x04, 0x76, 0x05, 0x5f, 0x04, 0x05, 0x05, 0x5c, 0x05, 0x36, 0x05, 0x36, 0x05, 0x5c, 0x05, 0x18, 0x05, 0x1c, 0x05, 0x1b, 0x05, 0x1d, 0x05, 0x7b, 0x04, 0x84, 0x05, 0x85, 0x05, 0x94, 0x05, 0x94, 0x05, 0x9f, 0x05, 0x9f, 0x05, 0x9f, 0x05, 0x1e, 0x06, 0x1e, 0x06, 0x1e, 0x06, 0x1e, 0x06, 0x1e, 0x06, 0x1e, 0x06, 0x1e, 0x06, 0x1e, 0x06, 0xcc, 0x00, 0x41, 0x01, 0xad, 0x01, 0xd3, 0x01, 0x42, 0x02, 0xf1, 0x01, 0x88, 0x03, 0xe3, 0x02, 0x1b, 0x04, 0x19, 0x03, 0x1a, 0x03, 0x1e, 0x03, 0x20, 0x03, 0x22, 0x03, 0x46, 0x03, 0x00, 0x03, 0xfe, 0x02, 0x21, 0x03, 0xfa, 0x02, 0x4f, 0x03, 0x55, 0x03, 0x2c, 0x03, 0x7b, 0x03, 0xa9, 0x02, 0x10, 0x03, 0x80, 0x03, 0x60, 0x03, 0xe4, 0x03, 0xb1, 0x05, 0xb3, 0x05, 0xa1, 0x05, 0x2a, 0x05, 0xaa, 0x05, 0x69, 0x05, 0xab, 0x05, 0xa5, 0x05, 0xa6, 0x05, 0x46, 0x05, 0x3c, 0x05, 0x51, 0x05, 0x48, 0x05, 0xad, 0x05, 0x49, 0x05, 0xb5, 0x05, 0xc6, 0x05, 0x4d, 0x05, 0x47, 0x05, 0x96, 0x05, 0x97, 0x05, 0x98, 0x05, 0x99, 0x05, 0x5a, 0x05, 0x6f, 0x05, 0xae, 0x05, 0x57, 0x05, 0xd1, 0x05, 0xce, 0x05, 0xbe, 0x05, 0x6a, 0x05, 0x4b, 0x05, 0x95, 0x05, 0xbf, 0x05, 0x9a, 0x05, 0x90, 0x05, 0xb2, 0x05, 0x71, 0x05, 0xc7, 0x05, 0xca, 0x05, 0xcd, 0x05, 0x72, 0x05, 0x78, 0x05, 0xcf, 0x05, 0xa2, 0x05, 0xd0, 0x05, 0xd2, 0x05, 0xcc, 0x05, 0xd3, 0x05, 0xa8, 0x05, 0xcb, 0x05, 0xd5, 0x05, 0xac, 0x05, 0xc8, 0x05, 0xd8, 0x05, 0xd9, 0x05, 0xda, 0x05, 0xdb, 0x05, 0x7e, 0x05, 0xd6, 0x05, 0xdc, 0x05, 0xde, 0x05, 0xdd, 0x05, 0x7c, 0x05, 0xe1, 0x05, 0xe2, 0x05, 0x9b, 0x05, 0xdf, 0x05, 0xe4, 0x05, 0x80, 0x05, 0xe3, 0x05, 0xe0, 0x05, 0xe5, 0x05, 0xe6, 0x05, 0xe7, 0x05, 0xe3, 0x05, 0xe9, 0x05, 0xec, 0x05, 0xed, 0x05, 0xeb, 0x05, 0xef, 0x05, 0xf1, 0x05, 0xfe, 0x05, 0xf3, 0x05, 0xf5, 0x05, 0xf4, 0x05, 0xf6, 0x05, 0xf7, 0x05, 0xf9, 0x05, 0xfa, 0x05, 0xf6, 0x05, 0xfc, 0x05, 0xfb, 0x05, 0xfd, 0x05, 0xff, 0x05, 0x01, 0x06, 0x93, 0x05, 0x9e, 0x05, 0xa0, 0x05, 0xa3, 0x05, 0x02, 0x06, 0x06, 0x06, 0x1a, 0x06, 0x13, 0x90, 0x91, 0x92, 0x93, 0x18, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x36, 0x37, 0x38, 0x39, 0x3a, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x98, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x5e, 0x3b, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x3b, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0xc1, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0xc2, 0xc3, 0x61, 0x4f, 0x0b, 0x58, 0x59, 0x98, 0x1a, 0x13, 0xab, 0x98, 0xce, 0x60, 0x61, 0x62, 0x48, 0x64, 0xb3, 0x3b, 0x98, 0x1f, 0xa3, 0x4f, 0x6b, 0xdb, 0x6d, 0xac, 0xad, 0x27, 0x4f, 0xac, 0xad, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x98, 0x84, 0xc7, 0x86, 0x6c, 0x6d, 0x6e, 0xc4, 0x60, 0x61, 0x62, 0x63, 0xd1, 0x13, 0x66, 0x67, 0x68, 0x48, 0xcf, 0xd0, 0x1a, 0x48, 0x77, 0x78, 0x4f, 0x71, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x1f, 0x6c, 0x6d, 0x6e, 0x52, 0x6c, 0x6d, 0x6e, 0x27, 0xd2, 0x44, 0xaf, 0x82, 0x13, 0xda, 0xaf, 0x77, 0x78, 0xfa, 0x61, 0xdd, 0xde, 0xdf, 0x65, 0xac, 0x98, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x98, 0x98, 0x84, 0x85, 0x86, 0xdd, 0xde, 0xdf, 0x42, 0xdd, 0xde, 0xdf, 0xac, 0x13, 0xc1, 0x16, 0x17, 0x98, 0x18, 0x1a, 0xac, 0xad, 0x2e, 0x2f, 0x30, 0x31, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0xdd, 0xde, 0xdf, 0xcf, 0xd0, 0x2e, 0x16, 0x17, 0x94, 0x95, 0x1a, 0xf2, 0xac, 0x13, 0x9a, 0xda, 0x9c, 0x17, 0x58, 0x59, 0xf1, 0x3b, 0xa3, 0xa3, 0x53, 0x65, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x98, 0x9d, 0x98, 0xc4, 0xc4, 0x10, 0x60, 0x61, 0x62, 0x1a, 0x84, 0xfa, 0x86, 0x13, 0x6b, 0x53, 0x3b, 0x17, 0xd3, 0xd4, 0xac, 0xad, 0xac, 0xad, 0x01, 0x02, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0xf4, 0x98, 0x61, 0xcf, 0xd0, 0xcf, 0xd0, 0xb9, 0xdd, 0xde, 0xdf, 0x98, 0x4b, 0x13, 0x4d, 0xb3, 0xb4, 0x17, 0x5d, 0x5e, 0xe4, 0xac, 0xad, 0xe7, 0xbc, 0x98, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0xc1, 0x98, 0x7b, 0x98, 0xcf, 0xd0, 0x98, 0xa8, 0xa9, 0xaa, 0xa8, 0xa9, 0xaa, 0x13, 0xa0, 0x16, 0x17, 0x17, 0xa4, 0x77, 0x78, 0xac, 0xad, 0xac, 0xad, 0x8c, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x63, 0x16, 0x17, 0x66, 0x67, 0x68, 0xc2, 0xc3, 0x00, 0x01, 0x02, 0xf7, 0xf8, 0x13, 0x71, 0xbe, 0xbf, 0x17, 0xce, 0xbe, 0xbf, 0x3b, 0xe1, 0x98, 0x53, 0x98, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x5a, 0xb5, 0x98, 0x6c, 0x6d, 0x6e, 0x60, 0x61, 0x62, 0x73, 0x53, 0x75, 0x76, 0x13, 0xc1, 0x98, 0x17, 0x98, 0x98, 0x1a, 0x1d, 0x98, 0xac, 0xad, 0x21, 0x98, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x16, 0x98, 0x10, 0x40, 0xc1, 0xcf, 0x98, 0xc1, 0x0c, 0x07, 0x08, 0x09, 0x98, 0x6c, 0x6d, 0x6e, 0x13, 0x98, 0xa4, 0x92, 0x93, 0xac, 0xad, 0x1b, 0xa3, 0xb5, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x3b, 0x2a, 0x62, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0xee, 0x16, 0xc4, 0x3e, 0xa3, 0x52, 0x4b, 0x98, 0x4d, 0x98, 0x7c, 0x58, 0x59, 0x48, 0x98, 0x89, 0x13, 0x8b, 0x98, 0x60, 0x61, 0x18, 0x98, 0x98, 0x65, 0x8a, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0xc4, 0x3b, 0x13, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x84, 0x85, 0x86, 0x98, 0xc1, 0xdb, 0xf5, 0xf6, 0xc1, 0x98, 0x98, 0x2e, 0x98, 0x13, 0xa6, 0xa7, 0x98, 0xd9, 0xe8, 0xd9, 0x60, 0x61, 0x62, 0xed, 0xd9, 0x8a, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x4f, 0xc1, 0xee, 0xa6, 0xa7, 0xd3, 0xd4, 0x17, 0x17, 0x74, 0x1a, 0x1a, 0xc3, 0x13, 0x79, 0x98, 0xd9, 0x98, 0x98, 0x98, 0x6b, 0x64, 0xd9, 0xce, 0xa3, 0x70, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0xbb, 0xbb, 0x07, 0x08, 0x98, 0xc4, 0x16, 0x84, 0x18, 0x86, 0x17, 0x17, 0x13, 0x1a, 0x1a, 0x17, 0x98, 0x17, 0x1a, 0x17, 0x1a, 0x3b, 0x1a, 0xa3, 0xac, 0xad, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x2c, 0x2d, 0x2e, 0x2f, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x98, 0x1a, 0xee, 0x98, 0x17, 0xc4, 0x65, 0x1a, 0x61, 0x64, 0x65, 0x13, 0x13, 0x17, 0x3b, 0x98, 0x1a, 0x70, 0x98, 0x17, 0xac, 0xad, 0x1a, 0xac, 0xad, 0x13, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x2d, 0x2e, 0x2f, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x13, 0x14, 0x61, 0x16, 0x17, 0xcf, 0xa3, 0x17, 0xa3, 0x84, 0x1a, 0x86, 0x17, 0xd5, 0x98, 0x1a, 0x3b, 0x24, 0x98, 0x16, 0x98, 0x13, 0x14, 0x62, 0x16, 0x98, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x5e, 0x24, 0xc4, 0x3b, 0xc4, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x7c, 0x3b, 0x46, 0x60, 0xa3, 0x61, 0x70, 0x3b, 0xb5, 0x98, 0x98, 0x4f, 0x3b, 0x47, 0x52, 0x13, 0x1a, 0x98, 0x98, 0x98, 0x58, 0x59, 0x98, 0x46, 0x16, 0x98, 0xa3, 0x5f, 0x60, 0x61, 0x62, 0x98, 0x4f, 0x65, 0x16, 0x52, 0x98, 0xc4, 0x60, 0x61, 0x62, 0x58, 0x59, 0x13, 0x14, 0x61, 0x16, 0xa3, 0x5f, 0x60, 0x61, 0x62, 0x98, 0x16, 0x65, 0x18, 0xac, 0xad, 0x98, 0xc4, 0x24, 0x3b, 0x16, 0x98, 0x84, 0x85, 0x86, 0x87, 0x88, 0x18, 0x05, 0x3b, 0xac, 0xad, 0x98, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0xc4, 0x98, 0x11, 0x3b, 0xd2, 0x84, 0x85, 0x86, 0x87, 0x88, 0x3b, 0xcf, 0x60, 0x16, 0x46, 0x1e, 0x6a, 0x20, 0x60, 0x61, 0x62, 0xac, 0xad, 0x98, 0x3b, 0x28, 0x52, 0x98, 0x60, 0x61, 0x62, 0x98, 0x58, 0x59, 0x5a, 0xba, 0x3b, 0x16, 0xbf, 0x5f, 0x60, 0x61, 0x62, 0xac, 0xad, 0x65, 0x13, 0x14, 0x61, 0x16, 0x3b, 0x98, 0x98, 0x98, 0x45, 0x3b, 0x98, 0xba, 0x98, 0x98, 0x98, 0x4c, 0x61, 0x24, 0x4f, 0x50, 0x13, 0x14, 0x35, 0x16, 0x98, 0xac, 0xad, 0x60, 0x61, 0x62, 0x84, 0x85, 0x86, 0x87, 0x88, 0x23, 0x7a, 0x24, 0xea, 0xba, 0x3b, 0x60, 0x61, 0x62, 0xac, 0xad, 0x60, 0x61, 0x62, 0x98, 0xe9, 0x46, 0x98, 0x72, 0x98, 0x7c, 0xd2, 0xd2, 0xba, 0xd2, 0x3b, 0xc6, 0xc5, 0x52, 0xd6, 0x41, 0x96, 0x98, 0xc9, 0x58, 0x59, 0x46, 0xc9, 0x49, 0x7c, 0xef, 0x5f, 0x60, 0x61, 0x62, 0x8d, 0xef, 0x65, 0x52, 0xa9, 0xaa, 0xb0, 0x98, 0x98, 0x58, 0x59, 0x15, 0x36, 0x37, 0x38, 0x39, 0x5f, 0x60, 0x61, 0x62, 0xa4, 0xd6, 0x65, 0xd6, 0xa9, 0xaa, 0xa3, 0xb8, 0xb4, 0xaf, 0xe3, 0x6f, 0xaf, 0x84, 0x85, 0x86, 0x87, 0x88, 0xc8, 0xb7, 0x98, 0xb9, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x84, 0x85, 0x86, 0x87, 0x88, 0x0c, 0xc4, 0xac, 0xad, 0xaf, 0x98, 0xc6, 0xe6, 0x98, 0x9b, 0x4e, 0x98, 0xf3, 0x98, 0x3c, 0x1b, 0x98, 0x9f, 0x98, 0x9f, 0x98, 0x7a, 0x26, 0x98, 0xdb, 0xac, 0xad, 0xe6, 0xac, 0xad, 0x2a, 0xac, 0xad, 0xac, 0xad, 0x67, 0xac, 0xad, 0xac, 0xad, 0xac, 0xad, 0xed, 0xac, 0xad, 0x98, 0xf0, 0x98, 0x9f, 0x98, 0x3e, 0xf0, 0x16, 0xdc, 0x98, 0x2b, 0x98, 0x82, 0x98, 0xbd, 0x98, 0x12, 0x98, 0x12, 0xc0, 0xac, 0xad, 0xac, 0xad, 0xac, 0xad, 0xc0, 0x8c, 0x98, 0xac, 0xad, 0xac, 0xad, 0xac, 0xad, 0xac, 0xad, 0xac, 0xad, 0xc9, 0x98, 0xc0, 0x9f, 0x98, 0x9e, 0xc0, 0x98, 0xc9, 0xac, 0xad, 0x98, 0xdc, 0x98, 0xbd, 0x98, 0xbd, 0x9f, 0x98, 0x89, 0x98, 0xac, 0xad, 0x98, 0xac, 0xad, 0x98, 0xac, 0xad, 0x98, 0xc9, 0xac, 0xad, 0xac, 0xad, 0xac, 0xad, 0x98, 0xac, 0xad, 0xac, 0xad, 0x98, 0xac, 0xad, 0x98, 0xac, 0xad, 0x98, 0xac, 0xad, 0x98, 0x5a, 0x98, 0x3d, 0x98, 0x9e, 0xac, 0xad, 0x98, 0x9e, 0x98, 0xac, 0xad, 0x98, 0xac, 0xad, 0x98, 0xac, 0xad, 0xec, 0xac, 0xad, 0xac, 0xad, 0xac, 0xad, 0xeb, 0x74, 0xac, 0xad, 0xac, 0xad, 0x79, 0xac, 0xad, 0x9f, 0xac, 0xad, 0x9f, 0x16, 0xb1, 0x9f, 0x9e, 0xb1, 0x9f, 0x9e, 0x6b, 0xae, 0xae, 0xae, 0x3f, 0xb6, 0x6a, 0xb6, 0xae, 0xb1, 0x7d, 0xb0, 0x6b, 0xd8, 0xae, 0xd7, 0xae, 0xae, 0x9f, 0x16, 0x9f, 0x89, 0xe0, 0xb1, 0xd8, 0xd8, 0xd7, 0x5e, 0xd7, 0xb1, 0xd8, 0xd7, 0x81, 0x7e, 0x80, 0x7f, 0x19, 0xa2, 0x1a, 0xa1, 0x0d, 0x99, 0xcd, 0x99, 0x06, 0xe2, 0x97, 0xca, 0xcc, 0xc9, 0xe5, 0xe5, 0x97, 0xcb, 0xa5, 0x97, 0xa5, 0xb2, 0xb2, 0xa5, 0x04, 0x03, 0x16, 0x8e, 0x0f, 0x51, 0x10, 0x17, 0x17, 0x78, 0x83, 0x6f, 0x14, 0xf9, 0x7b, 0xf9, 0x10, 0x7d, 0x01, 0x7b, 0x6f, 0x83, 0x35, 0x35, 0x35, 0x35, 0x60, 0x22, 0x7a, 0x01, 0x05, 0x16, 0x6b, 0xf6, 0x8c, 0x43, 0x1a, 0x4a, 0x29, 0x6b, 0x43, 0x14, 0x18, 0x13, 0x69, 0x70, 0x17, 0x42, 0x16, 0x16, 0x1c, 0x16, 0x16, 0x42, 0x16, 0x16, 0x25, 0x42, 0x17, 0x17, 0x17, 0x74, 0x17, 0x16, 0x1a, 0x7a, 0x1a, 0x17, 0x17, 0x16, 0x60, 0x7c, 0x1a, 0x17, 0x1a, 0x17, 0x22, 0x22, 0x17, 0x17, 0x1a, 0x17, 0x16, 0x22, 0x0b, 0x17, 0x16, 0x18, 0x7a, 0x17, 0x16, 0x1a, 0x16, 0x18, 0x17, 0x17, 0x0f, 0x17, 0x16, 0x7a, 0x17, 0x7a, 0x01, 0xfb, 0x7a, 0x00, 0x00, 0x3b, 0x3b, 0x3b, 0x3b, 0x00, 0x3b, 0x3b, 0x3b, 0x00, 0x3b, 0x3b, 0x3b, 0x3b, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x00, 0x3b, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x3b, 0x3b, 0x3b, 0x3b, 0x3b, 0x3b, 0x3b, 0x3b, 0x3b, 0x3b, 0x3b, 0x3b, 0x3b, 0x3b, 0x3b, 0x3b, 0x00, 0x00, 0x00, 0x3b, 0x3b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x3b, 0x3b, 0x3b, 0x3b, 0x3b, 0x3b, 0x3b, 0x3b, 0x3b, 0x3b, 0x3b, 0x3b, 0x3b, 0x3b, 0x3b, 0x3b, 0x3b, 0x3b, 0x3b, 0x3b, 0x3b, 0x3b, 0x00, 0x44, 0x01, 0x2b, 0x05, 0x9b, 0x00, 0x9b, 0x00, 0x02, 0x00, 0xcb, 0x00, 0x5e, 0x00, 0x5e, 0x00, 0x5e, 0x00, 0x5d, 0x00, 0x5e, 0x01, 0x62, 0x00, 0x62, 0x00, 0x62, 0x00, 0x62, 0x00, 0x5b, 0x00, 0x5f, 0x00, 0x5f, 0x00, 0x5e, 0x00, 0x5e, 0x00, 0x5e, 0x00, 0x5d, 0x00, 0x5e, 0x01, 0x0c, 0x01, 0x63, 0x00, 0x64, 0x00, 0x5a, 0x00, 0xcb, 0x03, 0xcb, 0x03, 0x4f, 0x03, 0x52, 0x03, 0x47, 0x03, 0x47, 0x03, 0x61, 0x00, 0x61, 0x00, 0x62, 0x00, 0x62, 0x00, 0x62, 0x00, 0x62, 0x00, 0x5e, 0x01, 0xc9, 0x03, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x5f, 0x00, 0x5f, 0x00, 0x5e, 0x00, 0x5e, 0x00, 0x5e, 0x00, 0x5d, 0x00, 0x5e, 0x01, 0xb6, 0x03, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x5f, 0x00, 0x5f, 0x00, 0x5e, 0x00, 0x5e, 0x00, 0x5e, 0x00, 0x5d, 0x00, 0x5e, 0x01, 0xfa, 0x00, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x5f, 0x00, 0x5f, 0x00, 0x5e, 0x00, 0x5e, 0x00, 0x5e, 0x00, 0x5d, 0x00, 0x5e, 0x01, 0xe0, 0x00, 0xe0, 0x00, 0xc9, 0x03, 0x84, 0x00, 0x78, 0x03, 0x5c, 0x01, 0x5b, 0x01, 0x9f, 0x01, 0xac, 0x00, 0x44, 0x01, 0x06, 0x05, 0xc1, 0x01, 0x9e, 0x01, 0xb6, 0x03, 0xb7, 0x03, 0xb8, 0x03, 0x28, 0x03, 0xd1, 0x03, 0x08, 0x04, 0xb6, 0x03, 0x2c, 0x01, 0x12, 0x03, 0xac, 0x01, 0x84, 0x00, 0xcf, 0x03, 0x6a, 0x01, 0xd0, 0x03, 0x09, 0x00, 0x09, 0x00, 0x13, 0x03, 0x84, 0x00, 0x34, 0x00, 0x34, 0x00, 0x63, 0x00, 0x64, 0x00, 0x5a, 0x00, 0xcb, 0x03, 0xcb, 0x03, 0x4f, 0x03, 0x52, 0x03, 0x47, 0x03, 0x47, 0x03, 0x61, 0x00, 0x61, 0x00, 0x62, 0x00, 0x62, 0x00, 0x62, 0x00, 0x62, 0x00, 0x74, 0x01, 0xd2, 0x03, 0xf1, 0x00, 0xd2, 0x03, 0x06, 0x01, 0x71, 0x01, 0x05, 0x01, 0x78, 0x00, 0xb6, 0x03, 0xb7, 0x03, 0xb8, 0x03, 0xc2, 0x00, 0x3a, 0x00, 0x44, 0x01, 0x91, 0x01, 0x8e, 0x01, 0x8d, 0x01, 0x28, 0x03, 0xab, 0x01, 0xad, 0x01, 0x4b, 0x00, 0x28, 0x03, 0xec, 0x04, 0xec, 0x04, 0x84, 0x00, 0x8c, 0x01, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x5f, 0x00, 0x5f, 0x00, 0x5e, 0x00, 0x5e, 0x00, 0x5e, 0x00, 0x5d, 0x00, 0x5e, 0x01, 0x63, 0x00, 0x64, 0x00, 0x5a, 0x00, 0xcb, 0x03, 0xcb, 0x03, 0x4f, 0x03, 0x52, 0x03, 0x47, 0x03, 0x47, 0x03, 0x61, 0x00, 0x61, 0x00, 0x62, 0x00, 0x62, 0x00, 0x62, 0x00, 0x62, 0x00, 0x12, 0x03, 0x06, 0x01, 0x71, 0x01, 0x05, 0x01, 0x3a, 0x03, 0x06, 0x01, 0x6c, 0x01, 0xfb, 0x00, 0x13, 0x03, 0x3c, 0x04, 0x65, 0x00, 0x5a, 0x04, 0x48, 0x00, 0x44, 0x01, 0xe3, 0x00, 0x59, 0x04, 0xf2, 0x00, 0x9b, 0x01, 0xba, 0x01, 0x33, 0x03, 0x5c, 0x00, 0x59, 0x00, 0xb2, 0x00, 0x32, 0x03, 0xfe, 0x03, 0x0c, 0x01, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x5f, 0x00, 0x5f, 0x00, 0x5e, 0x00, 0x5e, 0x00, 0x5e, 0x00, 0x5d, 0x00, 0x5e, 0x01, 0x63, 0x00, 0x64, 0x00, 0x5a, 0x00, 0xcb, 0x03, 0xcb, 0x03, 0x4f, 0x03, 0x52, 0x03, 0x47, 0x03, 0x47, 0x03, 0x61, 0x00, 0x61, 0x00, 0x62, 0x00, 0x62, 0x00, 0x62, 0x00, 0x62, 0x00, 0xc1, 0x01, 0x74, 0x01, 0x32, 0x03, 0x32, 0x03, 0x34, 0x03, 0x5c, 0x00, 0x59, 0x00, 0xb2, 0x00, 0x3c, 0x00, 0x5c, 0x00, 0x59, 0x00, 0xb2, 0x00, 0x01, 0x04, 0x44, 0x01, 0x65, 0x01, 0xa2, 0x03, 0x24, 0x05, 0x2c, 0x01, 0x3d, 0x00, 0x24, 0x05, 0x34, 0x00, 0x34, 0x00, 0x44, 0x03, 0x44, 0x03, 0x50, 0x03, 0x53, 0x03, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x5f, 0x00, 0x5f, 0x00, 0x5e, 0x00, 0x5e, 0x00, 0x5e, 0x00, 0x5d, 0x00, 0x5e, 0x01, 0x63, 0x00, 0x64, 0x00, 0x5a, 0x00, 0xcb, 0x03, 0xcb, 0x03, 0x4f, 0x03, 0x52, 0x03, 0x47, 0x03, 0x47, 0x03, 0x61, 0x00, 0x61, 0x00, 0x62, 0x00, 0x62, 0x00, 0x62, 0x00, 0x62, 0x00, 0x5c, 0x00, 0x59, 0x00, 0xb2, 0x00, 0xab, 0x01, 0x9c, 0x01, 0xc6, 0x00, 0xa2, 0x03, 0x25, 0x05, 0xc6, 0x01, 0xe3, 0x03, 0x25, 0x05, 0x63, 0x01, 0x00, 0x04, 0x44, 0x01, 0xf3, 0x00, 0xe7, 0x00, 0x72, 0x00, 0x15, 0x01, 0x5c, 0x01, 0x5b, 0x01, 0xda, 0x04, 0xb6, 0x03, 0xa0, 0x01, 0x2f, 0x04, 0xa0, 0x03, 0x48, 0x03, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x5f, 0x00, 0x5f, 0x00, 0x5e, 0x00, 0x5e, 0x00, 0x5e, 0x00, 0x5d, 0x00, 0x5e, 0x01, 0x63, 0x00, 0x64, 0x00, 0x5a, 0x00, 0xcb, 0x03, 0xcb, 0x03, 0x4f, 0x03, 0x52, 0x03, 0x47, 0x03, 0x47, 0x03, 0x61, 0x00, 0x61, 0x00, 0x62, 0x00, 0x62, 0x00, 0x62, 0x00, 0x62, 0x00, 0xc1, 0x01, 0x48, 0x01, 0xc1, 0x01, 0x78, 0x00, 0x17, 0x00, 0x00, 0x01, 0xb6, 0x03, 0xb7, 0x03, 0xb8, 0x03, 0xc8, 0x03, 0xd2, 0x03, 0xb6, 0x01, 0xd2, 0x03, 0x44, 0x01, 0x49, 0x01, 0xa0, 0x03, 0xba, 0x03, 0xbd, 0x02, 0xc8, 0x00, 0xaf, 0x00, 0x34, 0x00, 0x34, 0x00, 0x34, 0x00, 0x34, 0x00, 0xab, 0x03, 0x61, 0x01, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x5f, 0x00, 0x5f, 0x00, 0x5e, 0x00, 0x5e, 0x00, 0x5e, 0x00, 0x5d, 0x00, 0x5e, 0x01, 0x63, 0x00, 0x64, 0x00, 0x5a, 0x00, 0xcb, 0x03, 0xcb, 0x03, 0x4f, 0x03, 0x52, 0x03, 0x47, 0x03, 0x47, 0x03, 0x61, 0x00, 0x61, 0x00, 0x62, 0x00, 0x62, 0x00, 0x62, 0x00, 0x62, 0x00, 0x62, 0x01, 0xc1, 0x01, 0xba, 0x03, 0xab, 0x01, 0xa1, 0x01, 0xab, 0x01, 0xaa, 0x01, 0x0a, 0x05, 0x5c, 0x00, 0x59, 0x00, 0xb2, 0x00, 0x0c, 0x01, 0xfd, 0x00, 0x44, 0x01, 0xff, 0x00, 0x22, 0x04, 0x0d, 0x04, 0xb6, 0x02, 0x5d, 0x00, 0x5e, 0x01, 0x7f, 0x01, 0x34, 0x00, 0x34, 0x00, 0x7c, 0x01, 0x22, 0x04, 0x76, 0x01, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x5f, 0x00, 0x5f, 0x00, 0x5e, 0x00, 0x5e, 0x00, 0x5e, 0x00, 0x5d, 0x00, 0x5e, 0x01, 0x63, 0x00, 0x64, 0x00, 0x5a, 0x00, 0xcb, 0x03, 0xcb, 0x03, 0x4f, 0x03, 0x52, 0x03, 0x47, 0x03, 0x47, 0x03, 0x61, 0x00, 0x61, 0x00, 0x62, 0x00, 0x62, 0x00, 0x62, 0x00, 0x62, 0x00, 0xe4, 0x00, 0xc1, 0x01, 0xa7, 0x00, 0xc1, 0x01, 0xab, 0x01, 0x97, 0x01, 0x9d, 0x00, 0xbe, 0x01, 0xbe, 0x01, 0xbe, 0x01, 0x5d, 0x01, 0x5d, 0x01, 0x5d, 0x01, 0x44, 0x01, 0x36, 0x01, 0x3c, 0x01, 0xdf, 0x03, 0x3b, 0x03, 0x40, 0x01, 0xf2, 0x00, 0x9b, 0x01, 0x33, 0x00, 0x33, 0x00, 0x24, 0x00, 0x24, 0x00, 0xfe, 0x00, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x5f, 0x00, 0x5f, 0x00, 0x5e, 0x00, 0x5e, 0x00, 0x5e, 0x00, 0x5d, 0x00, 0x5e, 0x01, 0x63, 0x00, 0x64, 0x00, 0x5a, 0x00, 0xcb, 0x03, 0xcb, 0x03, 0x4f, 0x03, 0x52, 0x03, 0x47, 0x03, 0x47, 0x03, 0x61, 0x00, 0x61, 0x00, 0x62, 0x00, 0x62, 0x00, 0x62, 0x00, 0x62, 0x00, 0xc2, 0x00, 0x3c, 0x01, 0xa1, 0x03, 0x91, 0x01, 0x8e, 0x01, 0x8d, 0x01, 0xe0, 0x00, 0xe0, 0x00, 0xf1, 0x04, 0xab, 0x03, 0x61, 0x01, 0x26, 0x05, 0x3d, 0x01, 0x44, 0x01, 0x8c, 0x01, 0x27, 0x04, 0x27, 0x04, 0x2d, 0x03, 0x9e, 0x01, 0x25, 0x04, 0x25, 0x04, 0xb6, 0x03, 0x2b, 0x01, 0xc0, 0x01, 0xe0, 0x03, 0x0c, 0x01, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x5f, 0x00, 0x5f, 0x00, 0x5e, 0x00, 0x5e, 0x00, 0x5e, 0x00, 0x5d, 0x00, 0x5e, 0x01, 0x63, 0x00, 0x64, 0x00, 0x5a, 0x00, 0xcb, 0x03, 0xcb, 0x03, 0x4f, 0x03, 0x52, 0x03, 0x47, 0x03, 0x47, 0x03, 0x61, 0x00, 0x61, 0x00, 0x62, 0x00, 0x62, 0x00, 0x62, 0x00, 0x62, 0x00, 0xf5, 0x02, 0x11, 0x04, 0xc1, 0x01, 0x7d, 0x03, 0x7d, 0x03, 0x82, 0x01, 0xb6, 0x03, 0xb7, 0x03, 0xb8, 0x03, 0x9a, 0x01, 0xe0, 0x03, 0xeb, 0x02, 0xeb, 0x02, 0x44, 0x01, 0xe5, 0x00, 0x0c, 0x01, 0xdd, 0x00, 0x28, 0x01, 0x0c, 0x01, 0x03, 0x03, 0x7a, 0x03, 0x7a, 0x01, 0x34, 0x00, 0x34, 0x00, 0x7a, 0x03, 0xa5, 0x01, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x5f, 0x00, 0x5f, 0x00, 0x5e, 0x00, 0x5e, 0x00, 0x5e, 0x00, 0x5d, 0x00, 0x5e, 0x01, 0x63, 0x00, 0x64, 0x00, 0x5a, 0x00, 0xcb, 0x03, 0xcb, 0x03, 0x4f, 0x03, 0x52, 0x03, 0x47, 0x03, 0x47, 0x03, 0x61, 0x00, 0x61, 0x00, 0x62, 0x00, 0x62, 0x00, 0x62, 0x00, 0x62, 0x00, 0x67, 0x00, 0xc1, 0x01, 0x13, 0x01, 0x80, 0x01, 0xd9, 0x04, 0x57, 0x01, 0x9d, 0x00, 0xb7, 0x04, 0x8d, 0x03, 0x9d, 0x02, 0x9e, 0x02, 0x9f, 0x02, 0xb0, 0x00, 0xc5, 0x00, 0xc4, 0x00, 0xc3, 0x00, 0x44, 0x01, 0x2a, 0x01, 0x3f, 0x01, 0xf2, 0x04, 0x02, 0x00, 0x25, 0x00, 0x25, 0x00, 0x8e, 0x03, 0x6e, 0x04, 0x10, 0x04, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x5f, 0x00, 0x5f, 0x00, 0x5e, 0x00, 0x5e, 0x00, 0x5e, 0x00, 0x5d, 0x00, 0x5e, 0x01, 0xb9, 0x02, 0x8f, 0x03, 0xb1, 0x00, 0x63, 0x00, 0x64, 0x00, 0x5a, 0x00, 0xcb, 0x03, 0xcb, 0x03, 0x4f, 0x03, 0x52, 0x03, 0x47, 0x03, 0x47, 0x03, 0x61, 0x00, 0x61, 0x00, 0x62, 0x00, 0x62, 0x00, 0x62, 0x00, 0x62, 0x00, 0xe6, 0x00, 0x92, 0x00, 0x78, 0x00, 0xdf, 0x02, 0xd3, 0x04, 0x3a, 0x03, 0x0e, 0x01, 0x75, 0x04, 0x11, 0x01, 0x75, 0x04, 0x03, 0x03, 0xab, 0x00, 0xaa, 0x00, 0xe0, 0x02, 0x75, 0x04, 0x52, 0x00, 0x44, 0x01, 0x50, 0x00, 0x0c, 0x01, 0xb9, 0x02, 0x33, 0x03, 0x9e, 0x00, 0x0c, 0x01, 0x7a, 0x01, 0x32, 0x03, 0x4e, 0x00, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x5f, 0x00, 0x5f, 0x00, 0x5e, 0x00, 0x5e, 0x00, 0x5e, 0x00, 0x5d, 0x00, 0x5e, 0x01, 0x78, 0x00, 0xb6, 0x03, 0x89, 0x01, 0x63, 0x00, 0x64, 0x00, 0x5a, 0x00, 0xcb, 0x03, 0xcb, 0x03, 0x4f, 0x03, 0x52, 0x03, 0x47, 0x03, 0x47, 0x03, 0x61, 0x00, 0x61, 0x00, 0x62, 0x00, 0x62, 0x00, 0x62, 0x00, 0x62, 0x00, 0x32, 0x03, 0x32, 0x03, 0x34, 0x03, 0x75, 0x04, 0x2e, 0x04, 0x72, 0x01, 0x4b, 0x01, 0x85, 0x00, 0x2a, 0x04, 0x75, 0x04, 0xe2, 0x04, 0xc6, 0x00, 0x0c, 0x01, 0x44, 0x01, 0xf8, 0x03, 0x4a, 0x01, 0xf5, 0x00, 0x4d, 0x01, 0x18, 0x00, 0x4e, 0x01, 0xb6, 0x03, 0xb7, 0x03, 0xb8, 0x03, 0x70, 0x01, 0x4f, 0x01, 0x51, 0x00, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x5f, 0x00, 0x5f, 0x00, 0x5e, 0x00, 0x5e, 0x00, 0x5e, 0x00, 0x5d, 0x00, 0x5e, 0x01, 0x63, 0x00, 0x64, 0x00, 0x5a, 0x00, 0xcb, 0x03, 0xcb, 0x03, 0x4f, 0x03, 0x52, 0x03, 0x47, 0x03, 0x47, 0x03, 0x61, 0x00, 0x61, 0x00, 0x62, 0x00, 0x62, 0x00, 0x62, 0x00, 0x62, 0x00, 0x84, 0x00, 0x0b, 0x01, 0x04, 0x01, 0xbd, 0x01, 0x4a, 0x01, 0xdf, 0x00, 0xaf, 0x00, 0x09, 0x05, 0x9d, 0x03, 0xf0, 0x02, 0xd4, 0x02, 0x3e, 0x01, 0x31, 0x04, 0x44, 0x01, 0xef, 0x02, 0xf6, 0x00, 0x81, 0x01, 0x2d, 0x01, 0x2d, 0x01, 0x7a, 0x01, 0x49, 0x01, 0x69, 0x01, 0x58, 0x01, 0x9e, 0x01, 0xd1, 0x04, 0x18, 0x01, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x5f, 0x00, 0x5f, 0x00, 0x5e, 0x00, 0x5e, 0x00, 0x5e, 0x00, 0x5d, 0x00, 0x5e, 0x01, 0x63, 0x00, 0x58, 0x00, 0x5a, 0x00, 0xcb, 0x03, 0xcb, 0x03, 0x4f, 0x03, 0x52, 0x03, 0x47, 0x03, 0x47, 0x03, 0x61, 0x00, 0x61, 0x00, 0x62, 0x00, 0x62, 0x00, 0x62, 0x00, 0x62, 0x00, 0x51, 0x01, 0x5a, 0x01, 0xd1, 0x02, 0xd2, 0x02, 0xc1, 0x01, 0x78, 0x00, 0x76, 0x00, 0x77, 0x03, 0xa2, 0x00, 0x77, 0x03, 0x2a, 0x03, 0x73, 0x01, 0x44, 0x01, 0xca, 0x00, 0xca, 0x00, 0x75, 0x01, 0xf9, 0x00, 0x07, 0x01, 0xca, 0x00, 0x8a, 0x01, 0x4a, 0x00, 0xc0, 0x02, 0xd0, 0x00, 0x2d, 0x04, 0x0c, 0x00, 0x0c, 0x00, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x5f, 0x00, 0x5f, 0x00, 0x5e, 0x00, 0x5e, 0x00, 0x5e, 0x00, 0x5d, 0x00, 0x5e, 0x01, 0x64, 0x00, 0x5a, 0x00, 0xcb, 0x03, 0xcb, 0x03, 0x4f, 0x03, 0x52, 0x03, 0x47, 0x03, 0x47, 0x03, 0x61, 0x00, 0x61, 0x00, 0x62, 0x00, 0x62, 0x00, 0x62, 0x00, 0x62, 0x00, 0xc1, 0x01, 0x03, 0x03, 0xe8, 0x00, 0xc1, 0x01, 0x16, 0x01, 0x78, 0x00, 0x1e, 0x01, 0x4a, 0x00, 0xc0, 0x02, 0xca, 0x02, 0xc9, 0x02, 0x44, 0x01, 0x56, 0x01, 0xed, 0x02, 0x6d, 0x03, 0xb9, 0x04, 0x4d, 0x00, 0x1d, 0x01, 0xe7, 0x04, 0x0c, 0x03, 0x34, 0x00, 0x34, 0x00, 0xca, 0x00, 0x1b, 0x00, 0x1b, 0x00, 0xa2, 0x01, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x5f, 0x00, 0x5f, 0x00, 0x5e, 0x00, 0x5e, 0x00, 0x5e, 0x00, 0x5d, 0x00, 0x5e, 0x01, 0x5a, 0x00, 0xcb, 0x03, 0xcb, 0x03, 0x4f, 0x03, 0x52, 0x03, 0x47, 0x03, 0x47, 0x03, 0x61, 0x00, 0x61, 0x00, 0x62, 0x00, 0x62, 0x00, 0x62, 0x00, 0x62, 0x00, 0x56, 0x00, 0xbc, 0x01, 0x6d, 0x03, 0x03, 0x00, 0xa9, 0x04, 0xa6, 0x01, 0xf5, 0x03, 0x69, 0x03, 0xb3, 0x01, 0x76, 0x03, 0xd0, 0x00, 0x76, 0x03, 0xb1, 0x02, 0x43, 0x04, 0x01, 0x01, 0x74, 0x00, 0x36, 0x03, 0xbf, 0x01, 0xce, 0x04, 0x75, 0x00, 0xcd, 0x04, 0x56, 0x00, 0xbc, 0x01, 0xb1, 0x00, 0x03, 0x00, 0x7d, 0x01, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x5f, 0x00, 0x5f, 0x00, 0x5e, 0x00, 0x5e, 0x00, 0x5e, 0x00, 0x5d, 0x00, 0x5e, 0x01, 0x53, 0x01, 0xbf, 0x01, 0x78, 0x00, 0x5f, 0x01, 0x78, 0x00, 0xd4, 0x00, 0xa9, 0x00, 0x1f, 0x01, 0x94, 0x01, 0x1a, 0x01, 0x93, 0x01, 0xc7, 0x00, 0x03, 0x03, 0xb6, 0x03, 0xb1, 0x01, 0xa3, 0x01, 0xb7, 0x01, 0x36, 0x03, 0x18, 0x01, 0xb3, 0x02, 0x0f, 0x04, 0x08, 0x01, 0x0d, 0x01, 0x84, 0x00, 0x5f, 0x01, 0x99, 0x00, 0x3a, 0x03, 0x78, 0x01, 0x4a, 0x00, 0x10, 0x01, 0x12, 0x01, 0x14, 0x01, 0x53, 0x00, 0x54, 0x00, 0x1e, 0x04, 0xb1, 0x01, 0x93, 0x00, 0x0e, 0x04, 0xbb, 0x01, 0x55, 0x00, 0x5f, 0x01, 0xc3, 0x01, 0xc2, 0x01, 0x19, 0x01, 0x84, 0x00, 0x32, 0x03, 0x19, 0x00, 0x3a, 0x03, 0xc1, 0x01, 0x78, 0x00, 0xb6, 0x03, 0xb7, 0x03, 0xb8, 0x03, 0x53, 0x00, 0x54, 0x00, 0x56, 0x00, 0xbc, 0x01, 0xb3, 0x02, 0x03, 0x00, 0x98, 0x01, 0x55, 0x00, 0x5f, 0x01, 0xc3, 0x01, 0xc2, 0x01, 0xc1, 0x01, 0x05, 0x00, 0x32, 0x03, 0xcb, 0x00, 0x20, 0x00, 0x20, 0x00, 0x53, 0x04, 0x78, 0x00, 0xbf, 0x01, 0xb6, 0x03, 0xe1, 0x00, 0x74, 0x04, 0x32, 0x03, 0x32, 0x03, 0x34, 0x03, 0x35, 0x03, 0x13, 0x00, 0xcb, 0x00, 0xe2, 0x00, 0xb6, 0x03, 0x26, 0x00, 0x26, 0x00, 0x3f, 0x04, 0x3a, 0x01, 0x3a, 0x01, 0x39, 0x01, 0xd7, 0x00, 0x37, 0x01, 0x78, 0x00, 0xc1, 0x01, 0xa6, 0x02, 0x5f, 0x01, 0xed, 0x00, 0x32, 0x03, 0x32, 0x03, 0x34, 0x03, 0x35, 0x03, 0x13, 0x00, 0xc9, 0x03, 0x99, 0x01, 0x79, 0x01, 0x01, 0x00, 0xb1, 0x01, 0xb4, 0x00, 0xc2, 0x02, 0xf8, 0x00, 0xb6, 0x03, 0xb7, 0x03, 0xb8, 0x03, 0x0a, 0x00, 0x0a, 0x00, 0xc1, 0x01, 0xc9, 0x03, 0xf7, 0x00, 0x3a, 0x03, 0x4a, 0x04, 0xb6, 0x03, 0xb7, 0x03, 0xb8, 0x03, 0xae, 0x01, 0x53, 0x00, 0x54, 0x00, 0xf4, 0x02, 0x50, 0x01, 0xb6, 0x03, 0x14, 0x00, 0xaf, 0x01, 0x55, 0x00, 0x5f, 0x01, 0xc3, 0x01, 0xc2, 0x01, 0x0a, 0x00, 0x0a, 0x00, 0x32, 0x03, 0x56, 0x00, 0xbc, 0x01, 0xc9, 0x03, 0x03, 0x00, 0xb6, 0x03, 0xc1, 0x01, 0x2e, 0x01, 0x2f, 0x01, 0xb6, 0x00, 0xb6, 0x03, 0x7a, 0x04, 0x52, 0x01, 0xfd, 0x03, 0xf7, 0x03, 0xec, 0x03, 0xb7, 0x00, 0xc9, 0x03, 0xbf, 0x01, 0x84, 0x00, 0xb5, 0x00, 0x4c, 0x00, 0xbc, 0x01, 0x15, 0x00, 0x03, 0x00, 0xc1, 0x01, 0x0a, 0x00, 0x0a, 0x00, 0xb6, 0x03, 0xb7, 0x03, 0xb8, 0x03, 0x32, 0x03, 0x32, 0x03, 0x34, 0x03, 0x35, 0x03, 0x13, 0x00, 0xcb, 0x02, 0xff, 0x04, 0xbf, 0x01, 0x85, 0x01, 0xe9, 0x00, 0x5f, 0x01, 0xb6, 0x03, 0xb7, 0x03, 0xb8, 0x03, 0x0a, 0x00, 0x0a, 0x00, 0xb6, 0x03, 0xb7, 0x03, 0xb8, 0x03, 0xeb, 0x03, 0xda, 0x00, 0xb1, 0x01, 0xed, 0x03, 0x45, 0x01, 0xf9, 0x04, 0x05, 0x03, 0x21, 0x01, 0x23, 0x01, 0xa8, 0x01, 0x25, 0x01, 0x5f, 0x01, 0x07, 0x00, 0x9f, 0x00, 0x3a, 0x03, 0x6b, 0x01, 0x92, 0x01, 0x3b, 0x01, 0x68, 0x01, 0x69, 0x04, 0x53, 0x00, 0x54, 0x00, 0xb1, 0x01, 0xd0, 0x04, 0xcc, 0x02, 0x04, 0x03, 0x03, 0x01, 0x55, 0x00, 0x5f, 0x01, 0xc3, 0x01, 0xc2, 0x01, 0x66, 0x01, 0x77, 0x01, 0x32, 0x03, 0x3a, 0x03, 0x68, 0x01, 0x67, 0x01, 0x8f, 0x01, 0xbb, 0x04, 0x9d, 0x00, 0x53, 0x00, 0x54, 0x00, 0xa9, 0x02, 0x62, 0x00, 0x62, 0x00, 0x62, 0x00, 0x62, 0x00, 0x55, 0x00, 0x5f, 0x01, 0xc3, 0x01, 0xc2, 0x01, 0x43, 0x01, 0xfc, 0x00, 0x32, 0x03, 0x27, 0x01, 0xbb, 0x04, 0xbd, 0x04, 0xd3, 0x04, 0xad, 0x00, 0x0d, 0x04, 0x1c, 0x01, 0xb2, 0x01, 0x54, 0x01, 0xb4, 0x04, 0x32, 0x03, 0x32, 0x03, 0x34, 0x03, 0x35, 0x03, 0x13, 0x00, 0x34, 0x01, 0xea, 0x00, 0xc1, 0x01, 0xea, 0x00, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x5f, 0x00, 0x5f, 0x00, 0x5e, 0x00, 0x5e, 0x00, 0x5e, 0x00, 0x5d, 0x00, 0x5e, 0x01, 0x32, 0x03, 0x32, 0x03, 0x34, 0x03, 0x35, 0x03, 0x13, 0x00, 0x8d, 0x03, 0x78, 0x00, 0x27, 0x00, 0x27, 0x00, 0xb3, 0x04, 0xc1, 0x01, 0xa8, 0x00, 0x68, 0x01, 0xc1, 0x01, 0xfc, 0x04, 0x6f, 0x01, 0xc1, 0x01, 0x87, 0x00, 0xc1, 0x01, 0xda, 0x03, 0x8e, 0x03, 0xc1, 0x01, 0xe1, 0x04, 0xc1, 0x01, 0xdf, 0x04, 0xc1, 0x01, 0xcd, 0x00, 0xd7, 0x03, 0xc1, 0x01, 0x72, 0x01, 0x28, 0x00, 0x28, 0x00, 0xbb, 0x04, 0x29, 0x00, 0x29, 0x00, 0x8f, 0x03, 0x2a, 0x00, 0x2a, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x66, 0x03, 0x1d, 0x00, 0x1d, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x2b, 0x00, 0x2b, 0x00, 0x7b, 0x01, 0x2c, 0x00, 0x2c, 0x00, 0xc1, 0x01, 0x3b, 0x00, 0xc1, 0x01, 0x4c, 0x01, 0xc1, 0x01, 0xb0, 0x01, 0x3e, 0x00, 0x90, 0x00, 0x9c, 0x00, 0xc1, 0x01, 0x82, 0x00, 0xc1, 0x01, 0x48, 0x00, 0xc1, 0x01, 0x89, 0x00, 0xc1, 0x01, 0x6d, 0x01, 0xc1, 0x01, 0x88, 0x01, 0x8b, 0x00, 0x2d, 0x00, 0x2d, 0x00, 0x0b, 0x00, 0x0b, 0x00, 0x2e, 0x00, 0x2e, 0x00, 0x8c, 0x00, 0xb0, 0x04, 0xc1, 0x01, 0x69, 0x00, 0x69, 0x00, 0x2f, 0x00, 0x2f, 0x00, 0x30, 0x00, 0x30, 0x00, 0x21, 0x00, 0x21, 0x00, 0x31, 0x00, 0x31, 0x00, 0x66, 0x04, 0xc1, 0x01, 0x8d, 0x00, 0x6e, 0x01, 0xc1, 0x01, 0xb9, 0x00, 0x8e, 0x00, 0xc1, 0x01, 0xd2, 0x04, 0x32, 0x00, 0x32, 0x00, 0xc1, 0x01, 0xa0, 0x00, 0xc1, 0x01, 0x94, 0x00, 0xc1, 0x01, 0x70, 0x04, 0x7e, 0x01, 0xc1, 0x01, 0x43, 0x00, 0xc1, 0x01, 0x22, 0x00, 0x22, 0x00, 0xc1, 0x01, 0x7a, 0x00, 0x7a, 0x00, 0xc1, 0x01, 0x7b, 0x00, 0x7b, 0x00, 0xc1, 0x01, 0xae, 0x04, 0x7c, 0x00, 0x7c, 0x00, 0x38, 0x00, 0x38, 0x00, 0x23, 0x00, 0x23, 0x00, 0xc1, 0x01, 0x6a, 0x00, 0x6a, 0x00, 0x35, 0x00, 0x35, 0x00, 0xc1, 0x01, 0x6b, 0x00, 0x6b, 0x00, 0xc1, 0x01, 0x6c, 0x00, 0x6c, 0x00, 0xc1, 0x01, 0x68, 0x00, 0x68, 0x00, 0xc1, 0x01, 0x96, 0x01, 0xc1, 0x01, 0x84, 0x01, 0xc1, 0x01, 0xbd, 0x00, 0x79, 0x00, 0x79, 0x00, 0xc1, 0x01, 0xbe, 0x00, 0xc1, 0x01, 0x77, 0x00, 0x77, 0x00, 0xc1, 0x01, 0x70, 0x00, 0x70, 0x00, 0xc1, 0x01, 0x6f, 0x00, 0x6f, 0x00, 0xc2, 0x04, 0x6d, 0x00, 0x6d, 0x00, 0x6e, 0x00, 0x6e, 0x00, 0x37, 0x00, 0x37, 0x00, 0x0a, 0x01, 0xf0, 0x02, 0x39, 0x00, 0x39, 0x00, 0x36, 0x00, 0x36, 0x00, 0xef, 0x02, 0x1a, 0x00, 0x1a, 0x00, 0x4b, 0x04, 0x1e, 0x00, 0x1e, 0x00, 0xdb, 0x00, 0x9a, 0x00, 0x86, 0x01, 0x0f, 0x01, 0xbf, 0x00, 0x41, 0x01, 0xee, 0x03, 0xc0, 0x00, 0x95, 0x01, 0x21, 0x04, 0x20, 0x04, 0x1f, 0x04, 0x55, 0x01, 0x18, 0x04, 0xc2, 0x02, 0x17, 0x04, 0x05, 0x04, 0x42, 0x01, 0xa4, 0x01, 0x04, 0x04, 0x47, 0x00, 0x47, 0x04, 0x1b, 0x01, 0x20, 0x01, 0x03, 0x04, 0x08, 0x05, 0xcc, 0x00, 0x06, 0x00, 0x29, 0x01, 0x4f, 0x00, 0xa0, 0x04, 0xb5, 0x01, 0x48, 0x04, 0x46, 0x04, 0x22, 0x01, 0x59, 0x01, 0x24, 0x01, 0xb9, 0x01, 0x45, 0x04, 0x26, 0x01, 0x66, 0x00, 0xa9, 0x01, 0x49, 0x00, 0xa7, 0x01, 0xd5, 0x00, 0xf4, 0x03, 0x16, 0x00, 0xc4, 0x01, 0xb1, 0x03, 0xd6, 0x00, 0x35, 0x04, 0xd8, 0x00, 0xd9, 0x00, 0xee, 0x00, 0xc5, 0x01, 0x32, 0x01, 0x30, 0x01, 0x33, 0x01, 0xef, 0x00, 0xf0, 0x00, 0xe9, 0x03, 0x31, 0x01, 0x7d, 0x00, 0xe4, 0x03, 0x7e, 0x00, 0x73, 0x00, 0xeb, 0x00, 0x7f, 0x00, 0x99, 0x02, 0x60, 0x01, 0xa6, 0x00, 0xf4, 0x00, 0xb3, 0x00, 0x64, 0x01, 0x71, 0x00, 0x75, 0x03, 0x73, 0x03, 0x26, 0x03, 0x88, 0x00, 0x80, 0x00, 0xe2, 0x02, 0x46, 0x01, 0x8a, 0x00, 0x47, 0x01, 0x02, 0x01, 0xb8, 0x00, 0x83, 0x03, 0x8f, 0x00, 0x81, 0x00, 0x91, 0x00, 0x3f, 0x00, 0x40, 0x00, 0x41, 0x00, 0x42, 0x00, 0x86, 0x03, 0xba, 0x00, 0xbb, 0x00, 0x82, 0x03, 0x08, 0x00, 0x0d, 0x00, 0xbc, 0x00, 0x86, 0x00, 0x09, 0x01, 0x7b, 0x03, 0xca, 0x00, 0xd4, 0x03, 0x83, 0x01, 0x96, 0x00, 0x95, 0x00, 0xa8, 0x02, 0xa1, 0x00, 0x87, 0x01, 0xc1, 0x00, 0x1d, 0x01, 0x17, 0x01, 0x8b, 0x01, 0x97, 0x00, 0x44, 0x00, 0xcd, 0x02, 0x0e, 0x00, 0x0f, 0x00, 0x90, 0x01, 0x45, 0x00, 0x10, 0x00, 0x83, 0x00, 0xec, 0x00, 0x39, 0x03, 0x38, 0x03, 0x55, 0x03, 0xea, 0x02, 0xee, 0x02, 0x04, 0x00, 0x46, 0x00, 0xae, 0x00, 0x9d, 0x01, 0xdc, 0x00, 0xde, 0x00, 0x98, 0x00, 0x0b, 0x03, 0x06, 0x03, 0x4d, 0x00, 0x64, 0x03, 0x4a, 0x00, 0x56, 0x03, 0xc9, 0x00, 0x11, 0x00, 0x54, 0x03, 0x8c, 0x03, 0xce, 0x00, 0x8b, 0x03, 0xcf, 0x00, 0x12, 0x00, 0x59, 0x03, 0xa6, 0x03, 0xa3, 0x00, 0xb4, 0x01, 0xd2, 0x00, 0xa7, 0x03, 0xa4, 0x00, 0xd1, 0x00, 0xa5, 0x00, 0xb8, 0x01, 0x58, 0x03, 0x37, 0x03, 0x38, 0x01, 0xb2, 0x02, 0x57, 0x00, 0xd3, 0x00, 0x35, 0x01, 0x01, 0x05, 0xac, 0x03, 0xe3, 0x03, 0x00, 0x05, 0xf6, 0x04, 0xec, 0x04, 0xec, 0x04, 0xec, 0x04, 0xa9, 0x04, 0xa9, 0x04, 0xa9, 0x04, 0xa9, 0x04, 0xec, 0x04, 0x40, 0x04, 0x5d, 0x04, 0x5d, 0x04, 0xdc, 0x04, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0xa8, 0x04, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0xec, 0x04, 0x44, 0x04, 0x63, 0x04, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0xaa, 0x04, 0xab, 0x04, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0xdb, 0x04, 0xdd, 0x04, 0x6d, 0x04, 0x6c, 0x04, 0x6b, 0x04, 0x6a, 0x04, 0xca, 0x04, 0x50, 0x04, 0x68, 0x04, 0x61, 0x04, 0x65, 0x04, 0xaa, 0x04, 0xa4, 0x04, 0xa5, 0x04, 0xa3, 0x04, 0xa7, 0x04, 0xab, 0x04, 0x2a, 0x05, 0x64, 0x04, 0x86, 0x04, 0x94, 0x04, 0x85, 0x04, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x8e, 0x04, 0x93, 0x04, 0x9a, 0x04, 0x92, 0x04, 0x8f, 0x04, 0x88, 0x04, 0x87, 0x04, 0x89, 0x04, 0x8a, 0x04, 0x2a, 0x05, 0xf3, 0x03, 0x23, 0x04, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x8b, 0x04, 0x2a, 0x05, 0x8c, 0x04, 0x97, 0x04, 0x96, 0x04, 0x95, 0x04, 0xe3, 0x04, 0xfe, 0x04, 0xfd, 0x04, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0xf6, 0x04, 0xec, 0x04, 0xf9, 0x03, 0xf9, 0x03, 0x2a, 0x05, 0xec, 0x04, 0xec, 0x04, 0xec, 0x04, 0xec, 0x04, 0xec, 0x04, 0xec, 0x04, 0xe8, 0x04, 0x44, 0x04, 0x3b, 0x04, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0xe0, 0x04, 0xde, 0x04, 0x2a, 0x05, 0xb8, 0x04, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x40, 0x04, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0xf8, 0x04, 0x2a, 0x05, 0xc5, 0x04, 0x40, 0x04, 0x40, 0x04, 0x40, 0x04, 0x42, 0x04, 0x30, 0x04, 0x3a, 0x04, 0xe5, 0x03, 0x67, 0x04, 0x52, 0x04, 0x52, 0x04, 0x1f, 0x05, 0x67, 0x04, 0x1f, 0x05, 0x0a, 0x04, 0x0c, 0x05, 0x07, 0x04, 0x5d, 0x04, 0x52, 0x04, 0xa6, 0x04, 0x5d, 0x04, 0x5d, 0x04, 0x41, 0x04, 0x3a, 0x04, 0x2a, 0x05, 0x22, 0x05, 0x49, 0x04, 0x49, 0x04, 0x21, 0x05, 0x21, 0x05, 0x49, 0x04, 0x72, 0x04, 0x26, 0x04, 0x67, 0x04, 0x2c, 0x04, 0x2c, 0x04, 0x2c, 0x04, 0x2c, 0x04, 0x49, 0x04, 0xf0, 0x03, 0x67, 0x04, 0x72, 0x04, 0x26, 0x04, 0x26, 0x04, 0x67, 0x04, 0x49, 0x04, 0xf0, 0x03, 0xc9, 0x04, 0x1c, 0x05, 0x49, 0x04, 0x49, 0x04, 0xf0, 0x03, 0xb1, 0x04, 0x49, 0x04, 0xf0, 0x03, 0x49, 0x04, 0xf0, 0x03, 0xb1, 0x04, 0x24, 0x04, 0x24, 0x04, 0x24, 0x04, 0x19, 0x04, 0xb1, 0x04, 0x24, 0x04, 0x0a, 0x04, 0x24, 0x04, 0x19, 0x04, 0x24, 0x04, 0x24, 0x04, 0x56, 0x04, 0x51, 0x04, 0x56, 0x04, 0x51, 0x04, 0x56, 0x04, 0x51, 0x04, 0x56, 0x04, 0x51, 0x04, 0x49, 0x04, 0xac, 0x04, 0x49, 0x04, 0x2a, 0x05, 0xb1, 0x04, 0xb5, 0x04, 0xb5, 0x04, 0xb1, 0x04, 0x62, 0x04, 0x57, 0x04, 0x60, 0x04, 0x5e, 0x04, 0x67, 0x04, 0xf6, 0x03, 0x1c, 0x04, 0xfb, 0x04, 0xfb, 0x04, 0xf7, 0x04, 0xf7, 0x04, 0xf7, 0x04, 0x27, 0x05, 0x27, 0x05, 0xe8, 0x04, 0x07, 0x05, 0x07, 0x05, 0x0c, 0x04, 0x0c, 0x04, 0x07, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x02, 0x05, 0x2a, 0x05, 0xba, 0x04, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x77, 0x04, 0x2a, 0x05, 0xe1, 0x03, 0xe5, 0x04, 0x2a, 0x05, 0x2a, 0x05, 0xe4, 0x04, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x1e, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0xc8, 0x04, 0xc7, 0x04, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x32, 0x04, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x10, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x5f, 0x04, 0x2a, 0x05, 0x58, 0x04, 0x2a, 0x05, 0x2a, 0x05, 0x15, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0xee, 0x04, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0xed, 0x04, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x2a, 0x05, 0x79, 0x04, 0x2a, 0x05, 0x78, 0x04, 0x7c, 0x04, 0x2a, 0x05, 0xea, 0x03, 0x2a, 0x05, 0x93, 0xff, 0x93, 0xfd, 0x94, 0xff, 0x95, 0xfd, 0x96, 0x00, 0x96, 0xff, 0x96, 0xff, 0x96, 0xff, 0x95, 0xfe, 0x95, 0xfe, 0x95, 0xfe, 0x95, 0xfd, 0x95, 0xfb, 0x9a, 0xfa, 0x9c, 0xff, 0x9e, 0x00, 0x9e, 0xfd, 0x9d, 0xff, 0x9d, 0x00, 0x9b, 0xfb, 0x9b, 0xfe, 0xa2, 0x00, 0xa2, 0xfe, 0xa4, 0xfe, 0xa6, 0x00, 0xa6, 0xfc, 0xa6, 0xfa, 0xa7, 0xfe, 0xab, 0xfe, 0xab, 0xfe, 0xab, 0xfc, 0xab, 0xfd, 0xab, 0xfd, 0xab, 0xfe, 0xab, 0xfd, 0xab, 0xfb, 0xab, 0xfe, 0xab, 0xfc, 0xab, 0xfc, 0xab, 0xff, 0xab, 0xfe, 0xb0, 0x00, 0xb0, 0xff, 0xb2, 0x00, 0xb2, 0xfe, 0xb4, 0xfe, 0xb4, 0xfd, 0xb4, 0xfd, 0xb4, 0xfd, 0xb5, 0xfe, 0xb5, 0xfe, 0xb5, 0xff, 0xb5, 0xff, 0xb5, 0xfe, 0xb3, 0xfd, 0xb3, 0xfe, 0xb6, 0x00, 0xb6, 0xfe, 0xb6, 0xfe, 0xa1, 0x00, 0xb8, 0xff, 0xb9, 0xfe, 0xb9, 0xf9, 0xb9, 0xfb, 0xb9, 0xfb, 0xb9, 0xf6, 0xbc, 0x00, 0xae, 0x00, 0xae, 0xfd, 0xbd, 0x00, 0xbd, 0xfe, 0xbe, 0xff, 0xbe, 0xff, 0x95, 0xfc, 0xc0, 0xfe, 0xc0, 0x00, 0x95, 0xf7, 0x95, 0xfc, 0x95, 0xff, 0xa3, 0xfe, 0xc2, 0xfd, 0xc5, 0xff, 0xc5, 0xfe, 0xc5, 0xff, 0xc3, 0xf7, 0xce, 0xfc, 0xce, 0xfb, 0xc6, 0xff, 0xc6, 0xff, 0xc6, 0x00, 0xd1, 0x00, 0xc7, 0xfd, 0xc7, 0xfe, 0xc7, 0xfc, 0xd2, 0xfe, 0xd2, 0x00, 0xc8, 0x00, 0xc8, 0xfe, 0xd4, 0xfe, 0xd4, 0x00, 0xd3, 0xf9, 0xd3, 0xf7, 0xd3, 0xf9, 0xd3, 0xf9, 0x9f, 0x00, 0x9f, 0xfe, 0xc1, 0xfe, 0xd5, 0xff, 0xd5, 0xfe, 0xd5, 0xfd, 0xd5, 0xfc, 0xd7, 0xfe, 0xd7, 0x00, 0xd6, 0x00, 0xd6, 0xfd, 0xd6, 0xfe, 0xd8, 0xfc, 0xd8, 0x00, 0xcc, 0x00, 0xcc, 0xfd, 0xba, 0xfc, 0xba, 0xfe, 0xaf, 0xff, 0xaf, 0xff, 0xaf, 0x00, 0xca, 0x00, 0xca, 0xfd, 0xcb, 0x00, 0xcb, 0xfe, 0xcd, 0x00, 0xcd, 0xfe, 0xcd, 0xfc, 0xcd, 0xfc, 0x95, 0xfa, 0xc9, 0x00, 0xc9, 0xfe, 0x95, 0xf8, 0xda, 0xfb, 0xda, 0xf9, 0xda, 0xfd, 0xda, 0xfb, 0x95, 0xfa, 0x95, 0xf9, 0xdb, 0xfe, 0xdb, 0xff, 0xdc, 0x00, 0xdc, 0xfd, 0xd9, 0xfd, 0xd9, 0xff, 0xad, 0xfd, 0xad, 0xff, 0xad, 0xff, 0xad, 0xfd, 0xad, 0xfb, 0xac, 0xff, 0xac, 0xff, 0xac, 0xff, 0xad, 0xff, 0xad, 0xfd, 0xad, 0xfa, 0xad, 0xfb, 0xad, 0xfc, 0xac, 0xff, 0xad, 0xfb, 0xad, 0xfd, 0xad, 0xfd, 0xad, 0xfd, 0xad, 0xfd, 0xad, 0xfd, 0xad, 0xfd, 0xad, 0xfd, 0xad, 0xfd, 0xdd, 0xfe, 0xad, 0xfd, 0xad, 0xfb, 0xad, 0xfe, 0xad, 0xfd, 0xad, 0xfd, 0xad, 0xfc, 0xad, 0xfe, 0xad, 0xfe, 0xad, 0xfe, 0xad, 0xfe, 0xde, 0xff, 0xde, 0xfe, 0xad, 0xfb, 0xdf, 0xff, 0xdf, 0xfe, 0xad, 0xfb, 0xad, 0xfd, 0xad, 0xfb, 0xad, 0xfb, 0xad, 0xfc, 0xad, 0xfb, 0xe2, 0xfb, 0xe2, 0xfc, 0xe3, 0xfe, 0xe3, 0x00, 0xe1, 0xff, 0xe1, 0x00, 0xd0, 0x00, 0xcf, 0xfd, 0xcf, 0xff, 0xe0, 0x00, 0xe0, 0xfd, 0x95, 0xf4, 0xe4, 0xff, 0xe4, 0x00, 0xb1, 0x00, 0xb1, 0xfd, 0xbb, 0xfb, 0xbb, 0xfd, 0xe5, 0x00, 0xe5, 0xfe, 0x95, 0xfc, 0x95, 0xff, 0x95, 0xfe, 0x95, 0xfd, 0x95, 0xfb, 0x95, 0xfa, 0x95, 0xfb, 0x95, 0xfa, 0xa9, 0xfe, 0xaa, 0xfe, 0x95, 0xfb, 0xe7, 0xf5, 0xe9, 0xff, 0xe9, 0xfe, 0xe9, 0x00, 0xea, 0xff, 0xea, 0xff, 0xea, 0xfd, 0xec, 0x00, 0xec, 0xfe, 0xe8, 0xfd, 0xe8, 0xfe, 0xee, 0xfd, 0xef, 0xfd, 0xef, 0xfe, 0xed, 0xf9, 0xed, 0xfb, 0xed, 0xfb, 0xed, 0xff, 0xad, 0xfc, 0xad, 0xfa, 0xbf, 0xff, 0xbf, 0xff, 0xbf, 0xff, 0x95, 0xfc, 0x95, 0xfa, 0x95, 0xfd, 0xf1, 0x00, 0xf1, 0xfe, 0x95, 0xff, 0x95, 0xfd, 0x95, 0xff, 0x95, 0xfd, 0x95, 0xfa, 0x95, 0xf9, 0xf2, 0xff, 0x95, 0xff, 0x95, 0xfc, 0xf4, 0xf8, 0xf6, 0x00, 0xf7, 0xff, 0xf7, 0xfd, 0xf8, 0xff, 0xc4, 0x00, 0xc4, 0xfe, 0xc4, 0xfd, 0xfa, 0xfa, 0xfa, 0xf8, 0x90, 0xff, 0x91, 0xfe, 0x91, 0xff, 0x92, 0xff, 0x92, 0xfd, 0x93, 0x00, 0x97, 0x00, 0x97, 0xff, 0x97, 0xfe, 0x99, 0xff, 0x99, 0x00, 0x95, 0xfe, 0xa0, 0xfc, 0xa0, 0xfe, 0x98, 0xff, 0x98, 0xff, 0x98, 0xff, 0xa6, 0xff, 0xa7, 0xff, 0xa8, 0xff, 0xa8, 0xff, 0xa5, 0xfe, 0xa5, 0x00, 0xab, 0xfe, 0xa1, 0xfe, 0xb7, 0xfd, 0xb7, 0xff, 0xb8, 0x00, 0xbc, 0xff, 0xbe, 0xff, 0xc2, 0xff, 0xc3, 0xff, 0xd1, 0xfe, 0xd2, 0xff, 0xad, 0xff, 0xdd, 0xff, 0xd0, 0xff, 0xe6, 0xff, 0xe6, 0xff, 0xe6, 0xff, 0xe6, 0xff, 0xe6, 0xff, 0xa9, 0xff, 0xeb, 0x00, 0xeb, 0xfd, 0xee, 0xff, 0xef, 0x00, 0xf0, 0xff, 0xf0, 0x00, 0xf3, 0x00, 0xf3, 0xff, 0xf5, 0xff, 0xf5, 0xfd, 0xf6, 0xfe, 0xf9, 0x00, 0xf9, 0xfc, 0xf9, 0xfe, 0x6f, 0x6e, 0x6f, 0x66, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x79, 0x65, 0x73, 0x74, 0x72, 0x75, 0x65, 0x78, 0x74, 0x72, 0x61, 0x66, 0x75, 0x6c, 0x6c, 0x00, 0x00, 0x01, 0x02, 0x04, 0x09, 0x0c, 0x0f, 0x14, 0x02, 0x02, 0x03, 0x05, 0x03, 0x04, 0x05, 0x04, 0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x03, 0x02, 0x02, 0x04, 0x08, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x61, 0x6c, 0x65, 0x66, 0x74, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x69, 0x67, 0x68, 0x74, 0x66, 0x75, 0x6c, 0x6c, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x00, 0x00, 0x07, 0x04, 0x06, 0x04, 0x28, 0x0a, 0x05, 0x20, 0x0e, 0x05, 0x30, 0x13, 0x04, 0x38, 0x17, 0x05, 0x01, 0x1c, 0x05, 0x03, 0x02, 0x00, 0x00, 0x00, 0x65, 0x00, 0x01, 0x03, 0x30, 0x01, 0x08, 0x00, 0x43, 0x00, 0x02, 0x00, 0x59, 0x01, 0x02, 0x01, 0x30, 0x01, 0x08, 0x00, 0x43, 0x00, 0x01, 0x00, 0xa6, 0x00, 0x00, 0x00, 0x4e, 0x01, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x65, 0x00, 0x01, 0x04, 0x15, 0x01, 0x00, 0x00, 0x42, 0x00, 0x02, 0x00, 0x66, 0x00, 0x07, 0x00, 0x50, 0x01, 0x00, 0x00, 0x31, 0x01, 0x04, 0x00, 0x61, 0x00, 0x03, 0x00, 0x4e, 0x03, 0x01, 0x00, 0x42, 0x00, 0x00, 0x00, 0x61, 0x00, 0x03, 0x00, 0x0d, 0x00, 0x03, 0x00, 0x02, 0x00, 0x01, 0x00, 0x66, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x65, 0x00, 0x01, 0x00, 0x4e, 0x01, 0x01, 0x00, 0x71, 0xff, 0xbf, 0xff, 0x8c, 0x00, 0x48, 0x03, 0x4c, 0x00, 0xb4, 0x00, 0xb6, 0x00, 0xe9, 0x00, 0xe8, 0x01, 0xe7, 0xff, 0x0c, 0x00, 0x10, 0x00, 0x3b, 0x00, 0x75, 0x03, 0x8b, 0x03, 0xa7, 0x03, 0x86, 0x01, 0xc1, 0x02, 0xba, 0x03, 0x1d, 0x01, 0xe5, 0x03, 0xf9, 0x03, 0xfa, 0x03, 0x8a, 0xff, 0x01, 0x04, 0x8b, 0x00, 0xab, 0x00, 0xab, 0x00, 0xab, 0x00, 0xab, 0x00, 0xab, 0x00, 0xab, 0x00, 0xab, 0x00, 0xab, 0x00, 0xab, 0x00, 0xab, 0x00, 0xab, 0x00, 0xab, 0x00, 0xab, 0x00, 0xab, 0x00, 0xab, 0x00, 0xab, 0x00, 0xab, 0x00, 0xab, 0x00, 0xab, 0x00, 0xab, 0x00, 0xab, 0x00, 0xab, 0x00, 0xab, 0x00, 0xab, 0x00, 0xab, 0x00, 0xab, 0x00, 0xab, 0x00, 0xab, 0x00, 0xab, 0x00, 0xab, 0x00, 0xab, 0x00, 0xab, 0x00, 0xbb, 0xff, 0x1f, 0x01, 0xb9, 0x01, 0x92, 0x02, 0xc4, 0x02, 0x58, 0x03, 0x1a, 0x04, 0x31, 0x04, 0x34, 0x04, 0x37, 0x04, 0x39, 0x04, 0x3c, 0x04, 0x3e, 0x04, 0x40, 0x04, 0x43, 0x04, 0x59, 0x04, 0x5b, 0x04, 0x5d, 0x04, 0x62, 0x04, 0x64, 0x04, 0x66, 0x04, 0x68, 0x04, 0x6a, 0x04, 0x75, 0x04, 0x81, 0x04, 0x84, 0x04, 0x87, 0x04, 0x8b, 0x04, 0x8d, 0x04, 0x8f, 0x04, 0x92, 0x04, 0x94, 0x04, 0x97, 0x04, 0x9a, 0x04, 0x9d, 0x04, 0xa5, 0x04, 0xaa, 0x04, 0xad, 0x04, 0xb0, 0x04, 0xb3, 0x04, 0xb5, 0x04, 0xb7, 0x04, 0xbb, 0x04, 0xbd, 0x04, 0xc0, 0x04, 0xc3, 0x04, 0xab, 0x00, 0xab, 0x00, 0xab, 0x00, 0xab, 0x00, 0xab, 0x00, 0xab, 0x00, 0xab, 0x00, 0xab, 0x00, 0xab, 0x00, 0x31, 0x00, 0xb0, 0x00, 0xdc, 0x00, 0x13, 0x01, 0x16, 0x01, 0x22, 0x01, 0xab, 0x00, 0x2c, 0x01, 0xab, 0x00, 0xab, 0x00, 0xab, 0x00, 0xab, 0x00, 0xab, 0xff, 0xab, 0xff, 0xab, 0xff, 0xe4, 0xff, 0x4d, 0x00, 0x39, 0x01, 0x3d, 0x01, 0xc8, 0xff, 0xfc, 0x00, 0xfc, 0x00, 0xbe, 0x01, 0x7f, 0xff, 0xf3, 0x00, 0x69, 0x01, 0x93, 0x01, 0x96, 0x01, 0x01, 0x02, 0x05, 0x02, 0x99, 0x01, 0xf6, 0x01, 0x06, 0x02, 0xf8, 0x01, 0xfd, 0x01, 0x6d, 0x02, 0x29, 0x02, 0x32, 0x02, 0x6b, 0x02, 0x2f, 0x02, 0x5d, 0x00, 0x6c, 0x02, 0xd1, 0x01, 0xc5, 0x01, 0x26, 0x02, 0x4f, 0x02, 0x3b, 0x02, 0x67, 0x02, 0x9a, 0x02, 0xee, 0x02, 0xf0, 0x02, 0x1d, 0x03, 0x33, 0x03, 0xcf, 0x01, 0x24, 0x02, 0xb7, 0xff, 0x1c, 0x00, 0x44, 0x00, 0x78, 0x00, 0x01, 0x01, 0xce, 0x00, 0x67, 0x01, 0x95, 0x01, 0x9d, 0x01, 0xc4, 0x01, 0xc9, 0x01, 0x30, 0x02, 0x36, 0x02, 0x69, 0x02, 0x9e, 0x02, 0xd0, 0x02, 0xd3, 0x02, 0x01, 0x03, 0x05, 0x03, 0x07, 0x03, 0x0c, 0x03, 0x2d, 0x03, 0x2e, 0x03, 0x35, 0x03, 0x36, 0x03, 0x37, 0x03, 0x3a, 0x03, 0x68, 0x01, 0xb4, 0x01, 0x0f, 0x03, 0x3d, 0x03, 0x43, 0x03, 0xc3, 0x02, 0x5e, 0x03, 0x63, 0x03, 0x6e, 0x03, 0x3e, 0x03, 0x8f, 0x03, 0x93, 0x03, 0x73, 0x03, 0xa8, 0x03, 0xa9, 0x03, 0xac, 0x03, 0x67, 0x01, 0xae, 0x03, 0xaf, 0x03, 0xb0, 0x03, 0xd3, 0x03, 0xd6, 0x03, 0xd8, 0x03, 0x76, 0x03, 0x83, 0x03, 0xa0, 0x03, 0xa1, 0x03, 0xa3, 0x03, 0xc3, 0x02, 0xb3, 0x03, 0xb1, 0x03, 0xe6, 0x03, 0xb5, 0x03, 0xa4, 0x03, 0xc9, 0x03, 0x96, 0x03, 0xb9, 0x03, 0x9c, 0x03, 0xe0, 0x03, 0xed, 0x03, 0xf2, 0x03, 0xf8, 0x03, 0xcb, 0x03, 0xc5, 0x03, 0xfb, 0x03, 0x19, 0x04, 0xe8, 0x03, 0x04, 0x04, 0x32, 0x04, 0xdd, 0x03, 0x36, 0x04, 0x38, 0x04, 0x02, 0x04, 0x07, 0x04, 0x55, 0x04, 0x1d, 0x04, 0x42, 0x04, 0x4f, 0x04, 0x44, 0x04, 0x4b, 0x04, 0x5a, 0x04, 0x5e, 0x04, 0x7c, 0x04, 0x7f, 0x04, 0x57, 0x04, 0x48, 0x04, 0x69, 0x04, 0x6b, 0x04, 0x6d, 0x04, 0x8a, 0x04, 0xb2, 0x04, 0x72, 0x04, 0x7a, 0x04, 0xcf, 0x04, 0xd2, 0x04, 0xb6, 0x04, 0xc2, 0x04, 0xd5, 0x04, 0xd7, 0x04, 0xd8, 0x04, 0xda, 0x04, 0xc5, 0x04, 0xcc, 0x04, 0xcd, 0x04, 0xce, 0x04, 0xc8, 0x04, 0xd1, 0x04, 0xd3, 0x04, 0xd4, 0x04, 0xd9, 0x04, 0xca, 0x04, 0xdb, 0x04, 0xdc, 0x04, 0xae, 0x04, 0xb1, 0x04, 0xb9, 0x04, 0xbc, 0x04, 0xba, 0x04, 0xbe, 0x04, 0xbf, 0x04, 0xc1, 0x04, 0xec, 0x04, 0xaf, 0x04, 0xee, 0x04, 0xc4, 0x04, 0xdf, 0x04, 0xc6, 0x04, 0xc7, 0x04, 0xe5, 0x04, 0xd6, 0x04, 0xdd, 0x04, 0xe3, 0x04, 0xde, 0x04, 0xe1, 0x04, 0xfc, 0x04, 0xff, 0x04, 0x09, 0x05, 0x0b, 0x05, 0x10, 0x05, 0x16, 0x05, 0x19, 0x05, 0xc9, 0x04, 0xcb, 0x04, 0xe0, 0x04, 0x0a, 0x05, 0x0c, 0x05, 0x00, 0x05, 0x01, 0x05, 0x0f, 0x05, 0x00, 0x01, 0x02, 0x03, 0x04, 0x06, 0x08, 0x00, 0x00, 0x00, 0x46, 0x00, 0x00, 0x00, 0x25, 0x00, 0x09, 0x00, 0x60, 0x00, 0x00, 0x00, 0x34, 0x00, 0x07, 0x00, 0x7b, 0x00, 0x00, 0x00, 0x60, 0x00, 0x01, 0x00, 0x0d, 0x00, 0x09, 0x00, 0x07, 0x00, 0x02, 0x00, 0x43, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x25, 0x5f, 0x00, 0x00, 0x0c, 0x00, 0x0e, 0x00, 0x18, 0x00, 0x1f, 0x00, 0x3b, 0x00, 0x0f, 0x27, 0x0a, 0x0a, 0x09, 0x09, 0x08, 0x08, 0x07, 0x07, 0x07, 0x06, 0x06, 0x06, 0x05, 0x05, 0x05, 0x04, 0x04, 0x04, 0x04, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x00, 0x00, 0x25, 0x21, 0x1b, 0x18, 0x1a, 0x19, 0x29, 0x27, 0x26, 0x28, 0x07, 0x06, 0x25, 0x21, 0x33, 0x00, 0x02, 0x00, 0x73, 0x00, 0x00, 0x00, 0x63, 0x00, 0x02, 0x00, 0x74, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x03, 0x02, 0x01, 0x39, 0x37}
	nz64    float64
	ts      = crt.TS("2017-10-24 18:55:49 1a584e499906b5c87ec7d43d4abce641fdf017c42125b083109bc77c4de48827\x00SQLite header and source version mismatch\n%s\n%s\n\x00argc>=1 && argv && argv[0]\x00/home/jnml/src/github.com/cznic/sqlite2go/_sqlite/sqlite-amalgamation-3210000/shell.c\x00out of memory\n\x00-separator\x00-nullvalue\x00-newline\x00-cmd\x00-init\x00-batch\x00-heap\x00-pagecache\x00-lookaside\x00-mmap\x00-vfs\x00no such VFS: \"%s\"\n\x00:memory:\x00-html\x00-list\x00-quote\x00-line\x00-column\x00-csv\x00,\x00-ascii\x00\x1f\x00\x1e\x00%s\x00-header\x00-noheader\x00-echo\x00-eqp\x00-eqpfull\x00-stats\x00-scanstats\x00-backslash\x00-bail\x00-version\x00%s %s\n\x00-interactive\x00-help\x00Error: %s\n\x00Error: unable to process SQL \"%s\"\n\x00%s: Error: unknown option: %s\n\x00Use -help for a list of options.\n\x00Error: unable to process SQL: %s\n\x00SQLite version %s %.19s\nEnter \".help\" for usage hints.\n\x00Connected to a \x00transient in-memory database\x00.\nUse \".open FILENAME\" to reopen on a persistent database.\n\x00%s/.sqlite_history\x00|\x00\n\x00sqlite> \x00   ...> \x00%s: Error: missing argument to %s\n\x00Error: unable to open database \"%s\": %s\n\x00shell_add_schema\x00-- warning: cannot find home directory; cannot read ~/.sqliterc\n\x00%s/.sqliterc\x00rb\x00-- Loading resources from %s\n\x00Usage: %s [OPTIONS] FILENAME [SQL]\nFILENAME is the name of an SQLite database. A new database is created\nif the file does not previously exist.\n\x00OPTIONS include:\n%s\x00Use the -help option for additional information\n\x00auth\x00Usage: .auth ON|OFF\n\x00backup\x00save\x00unknown option: %s\n\x00too many arguments to .backup\n\x00missing FILENAME argument on .backup\n\x00main\x00Error: cannot open \"%s\"\n\x00bail\x00Usage: .bail on|off\n\x00binary\x00Usage: .binary on|off\n\x00cd\x00Cannot change to directory \"%s\"\n\x00Usage: .cd DIRECTORY\n\x00breakpoint\x00changes\x00Usage: .changes on|off\n\x00check\x00Usage: .check GLOB-PATTERN\n\x00testcase-out.txt\x00Error: cannot read 'testcase-out.txt'\n\x00testcase-%s FAILED\n Expected: [%s]\n      Got: [%s]\n\x00testcase-%s ok\n\x00clone\x00Usage: .clone FILENAME\n\x00databases\x00: \x00SELECT name, file FROM pragma_database_list\x00dbinfo\x00dump\x00preserve-rowids\x00newlines\x00Unknown option \"%s\" on \".dump\"\n\x00Usage: .dump ?--preserve-rowids? ?--newlines? ?LIKE-PATTERN?\n\x00PRAGMA foreign_keys=OFF;\n\x00BEGIN TRANSACTION;\n\x00SAVEPOINT dump; PRAGMA writable_schema=ON\x00SELECT name, type, sql FROM sqlite_master WHERE sql NOT NULL AND type=='table' AND name!='sqlite_sequence'\x00SELECT name, type, sql FROM sqlite_master WHERE name=='sqlite_sequence'\x00SELECT sql FROM sqlite_master WHERE sql NOT NULL AND type IN ('index','trigger','view')\x00SELECT name, type, sql FROM sqlite_master WHERE tbl_name LIKE %Q AND type=='table'  AND sql NOT NULL\x00SELECT sql FROM sqlite_master WHERE sql NOT NULL  AND type IN ('index','trigger','view')  AND tbl_name LIKE %Q\x00PRAGMA writable_schema=OFF;\n\x00PRAGMA writable_schema=OFF;\x00RELEASE dump;\x00ROLLBACK; -- due to errors\n\x00COMMIT;\n\x00echo\x00Usage: .echo on|off\n\x00eqp\x00full\x00Usage: .eqp on|off|full\n\x00exit\x00explain\x00auto\x00fullschema\x00indent\x00Usage: .fullschema ?--indent?\n\x00SELECT sql FROM  (SELECT sql sql, type type, tbl_name tbl_name, name name, rowid x     FROM sqlite_master UNION ALL   SELECT sql, type, tbl_name, name, rowid FROM sqlite_temp_master) WHERE type!='meta' AND sql NOTNULL AND name NOT LIKE 'sqlite_%' ORDER BY rowid\x00SELECT rowid FROM sqlite_master WHERE name GLOB 'sqlite_stat[134]'\x00/* No STAT tables available */\n\x00ANALYZE sqlite_master;\n\x00SELECT 'ANALYZE sqlite_master'\x00sqlite_stat1\x00SELECT * FROM sqlite_stat1\x00sqlite_stat3\x00SELECT * FROM sqlite_stat3\x00sqlite_stat4\x00SELECT * FROM sqlite_stat4\x00headers\x00Usage: .headers on|off\n\x00help\x00import\x00Usage: .import FILE TABLE\n\x00Error: non-null column separator required for import\n\x00Error: multi-character column separators not allowed for import\n\x00Error: non-null row separator required for import\n\x00\r\n\x00Error: multi-character row separators not allowed for import\n\x00r\x00<pipe>\x00SELECT * FROM %s\x00Error: out of memory\n\x00no such table: *\x00CREATE TABLE %s\x00%z%c\n  \"%w\" TEXT\x00%s: empty file\n\x00%z\n)\x00CREATE TABLE %s(...) failed: %s\n\x00INSERT INTO \"%w\" VALUES(?\x00BEGIN\x00%s:%d: expected %d columns but found %d - filling the rest with NULL\n\x00%s:%d: expected %d columns but found %d - extras ignored\n\x00%s:%d: INSERT failed: %s\n\x00COMMIT\x00imposter\x00Usage: .imposter INDEX IMPOSTER\n\x00SELECT rootpage FROM sqlite_master WHERE name='%q' AND type='index'\x00no such index: \"%s\"\n\x00PRAGMA index_xinfo='%q'\x00_ROWID_\x00expr%d\x00\"%w\"\x00%z,\"%w\"\x00CREATE TABLE \"%w\"(%s,PRIMARY KEY(%s))WITHOUT ROWID\x00Error in [%s]: %s\n\x00%s;\n\x00WARNING: writing to an imposter table will corrupt the index!\n\x00SQLITE_TESTCTRL_IMPOSTER returns %d\n\x00limits\x00%20s %d\n\x00Usage: .limit NAME ?NEW-VALUE?\n\x00ambiguous limit: \"%s\"\n\x00unknown limit: \"%s\"\nenter \".limits\" with no arguments for a list.\n\x00lint\x00load\x00Usage: .load FILE ?ENTRYPOINT?\n\x00log\x00Usage: .log FILENAME\n\x00mode\x00\x00lines\x00columns\x00list\x00html\x00tcl\x00 \x00csv\x00tabs\x00\t\x00insert\x00table\x00quote\x00ascii\x00current output mode: %s\n\x00Error: mode should be one of: ascii column csv html insert line list quote tabs tcl\n\x00nullvalue\x00%.*s\x00Usage: .nullvalue STRING\n\x00open\x00new\x00Error: cannot open '%s'\n\x00output\x00once\x00stdout\x00Usage: .%s FILE\n\x00Usage: .once FILE\n\x00w\x00Error: cannot open pipe \"%s\"\n\x00off\x00Error: cannot write to \"%s\"\n\x00print\x00prompt\x00quit\x00read\x00Usage: .read FILE\n\x00restore\x00Usage: .restore ?DB? FILE\n\x00Error: source database is busy\n\x00scanstats\x00Warning: .scanstats not available in this build.\n\x00Usage: .scanstats on|off\n\x00schema\x00sqlite_master\x00CREATE TABLE sqlite_master (\n  type text,\n  name text,\n  tbl_name text,\n  rootpage integer,\n  sql text\n)\x00sql\x00sqlite_temp_master\x00CREATE TEMP TABLE sqlite_temp_master (\n  type text,\n  name text,\n  tbl_name text,\n  rootpage integer,\n  sql text\n)\x00(\x00Usage: .schema ?--indent? ?LIKE-PATTERN?\n\x00SELECT name FROM pragma_database_list\x00SELECT sql FROM\x00%d\x00 UNION ALL \x00SELECT shell_add_schema(sql,\x00) AS sql, type, tbl_name, name, rowid,\x00 AS snum, \x00 AS sname FROM \x00.sqlite_master\x00SELECT sql, type, tbl_name, name, rowid, \x00 AS snum, 'main' AS sname FROM sqlite_master\x00) WHERE \x00%Q\x00lower(printf('%s.%s',sname,tbl_name))\x00lower(tbl_name)\x00 GLOB \x00 LIKE \x00 AND \x00type!='meta' AND sql IS NOT NULL ORDER BY snum, rowid\x00Error: querying schema information\n\x00selftest\x00-v\x00Unknown option \"%s\" on \"%s\"\n\x00Should be one of: --init -v\n\x00x\x00SELECT tno,op,cmd,ans FROM selftest ORDER BY tno\x00VALUES(0,'memo','Missing SELFTEST table - default checks only',''),      (1,'run','PRAGMA integrity_check','ok')\x00Error querying the selftest table\n\x00%q\x00%d: %s %s\n\x00memo\x00%s\n\x00run\x00Result: %s\n\x00%d: error-code-%d: %s\n\x00%d: Expected: [%s]\n\x00%d:      Got: [%s]\n\x00Unknown operation \"%s\" on selftest line %d\n\x00%d errors out of %d tests\n\x00separator\x00Usage: .separator COL ?ROW?\n\x00sha3sum\x00sha3-224\x00sha3-256\x00sha3-384\x00sha3-512\x00debug\x00Should be one of: --schema --sha3-224 --sha3-255 --sha3-384 --sha3-512\n\x00Usage: .sha3sum ?OPTIONS? ?LIKE-PATTERN?\n\x00sqlite_%\x00SELECT lower(name) FROM sqlite_master WHERE type='table' AND coalesce(rootpage,0)>1 UNION ALL SELECT 'sqlite_master' ORDER BY 1 collate nocase\x00SELECT lower(name) FROM sqlite_master WHERE type='table' AND coalesce(rootpage,0)>1 AND name NOT LIKE 'sqlite_%' ORDER BY 1 collate nocase\x00WITH [sha3sum$query](a,b) AS(\x00VALUES(\x00sqlite_\x00SELECT * FROM \x00 NOT INDEXED;\x00SELECT type,name,tbl_name,sql FROM sqlite_master ORDER BY name;\x00sqlite_sequence\x00SELECT name,seq FROM sqlite_sequence ORDER BY name;\x00SELECT tbl,idx,stat FROM sqlite_stat1 ORDER BY tbl,idx;\x00 ORDER BY tbl, idx, rowid;\n\x00),(\x00%s)) SELECT lower(hex(sha3_query(a,%d))) AS hash, b AS label   FROM [sha3sum$query]\x00%s)) SELECT lower(hex(sha3_query(group_concat(a,''),%d))) AS hash   FROM [sha3sum$query]\x00shell\x00system\x00Usage: .system COMMAND\n\x00\"%s\"\x00%z %s\x00%z \"%s\"\x00System command returns %d\n\x00show\x00Usage: .show\n\x00%12.12s: %s\n\x00on\x00%12.12s: \x00colseparator\x00rowseparator\x00stats\x00width\x00%d \x00filename\x00Usage: .stats ?on|off?\n\x00tables\x00indices\x00indexes\x00PRAGMA database_list\x00Usage: .indexes ?LIKE-PATTERN?\n\x00SELECT name FROM \x00SELECT \x00||'.'||name FROM \x00.sqlite_master \x00 WHERE type IN ('table','view')   AND name NOT LIKE 'sqlite_%'   AND name LIKE ?1\x00 WHERE type='index'   AND tbl_name LIKE ?1\x00 ORDER BY 1\x00%\x00  \x00%s%-*s\x00testcase\x00Error: cannot open 'testcase-out.txt'\n\x00?\x00testctrl\x00ambiguous option name: \"%s\"\n\x00Error: invalid testctrl option: %s\n\x00%d (0x%08x)\n\x00Error: testctrl %s takes a single int option\n\x00Error: testctrl %s takes no options\n\x00Error: testctrl %s takes a single unsigned int option\n\x00Usage: .testctrl imposter dbName onoff tnum\n\x00Error: CLI support for testctrl %s not implemented\n\x00timeout\x00timer\x00Usage: .timer on|off\n\x00trace\x00Usage: .trace FILE|off\n\x00version\x00SQLite %s %s\n\x00vfsinfo\x00vfs.zName      = \"%s\"\n\x00vfs.iVersion   = %d\n\x00vfs.szOsFile   = %d\n\x00vfs.mxPathname = %d\n\x00vfslist\x00vfs.zName      = \"%s\"%s\n\x00  <--- CURRENT\x00-----------------------------------\n\x00vfsname\x00nArg<=(int)(sizeof(azArg)/sizeof(azArg[0]))\x00Error: unknown command or invalid arguments:  \"%s\". Enter \".help\" for help\n\x00EXPLAIN%\x00EXPLAIN QUERY PLAN %s\x00--EQP-- %d,\x00%d,\x00EXPLAIN %s\x00%*s = %s%s\x00%-*.*s%s\x00--------------------------------------------------------------------------------------------------------------------\x00%*.s\x00;\n\x00nArg==1\x00CREATE VIEW%\x00CREATE TRIG%\x00\n  \x00%s%s\x00<TR>\x00<TH>\x00</TH>\n\x00</TR>\n\x00<TD>\x00</TD>\n\x00INSERT INTO %s\x00)\x00 VALUES(\x00NULL\x00%!.20g\x00);\n\x00\x1b[1m%s\x1b[0m\x00HOME\x00;\x00nAlloc>0 && zSql!=0\x00(%d) %s\n\x00KiB\x00MiB\x00GiB\x00KB\x00MB\x00GB\x00K\x00M\x00G\x00misuse\x00readfile\x00writefile\x00sha3\x00sha3_query\x00nVal==2\x00CREATE \x00%.*s \"%w\".%s\x00%.*s %s.%s\x00length\x00sql_length\x00column\x00expr_depth\x00compound_select\x00vdbe_op\x00function_arg\x00attached\x00like_pattern_length\x00variable_number\x00trigger_depth\x00worker_threads\x00unk\x00prng_save\x00prng_restore\x00prng_reset\x00bitvec_test\x00fault_install\x00benign_malloc_hooks\x00pending_byte\x00assert\x00always\x00reserve\x00optimizations\x00iskeyword\x00byteorder\x00never_corrupt\x00yes\x00no\x00ERROR: Not a boolean value: \"%s\". Assuming \"no\".\n\x00authorizer: %s\x00source and destination must be distinct\x00File \"%s\" already exists.\n\x00Cannot create output database: %s\n\x00PRAGMA writable_schema=ON;\x00BEGIN EXCLUSIVE;\x00type='table'\x00type!='table'\x00COMMIT;\x00SELECT data FROM sqlite_dbpage(?1) WHERE pgno=1\x00unable to read database header\n\x00%-20s %d\n\x00database page size:\x00write format:\x00read format:\x00reserved bytes:\x00%-20s %u\x00 (utf8)\x00 (utf16le)\x00 (utf16be)\x00main.sqlite_master\x00temp\x00\"%w\".sqlite_master\x00/****** CORRUPTION ERROR *******/\n\x00/****** %s ******/\n\x00%s ORDER BY rowid DESC\x00/****** ERROR: %s ******/\n\x00/**** ERROR: (%d) %s *****/\n\x00,%s\x00\n;\n\x00%s:%d: unescaped %c character\n\x00%s:%d: unterminated %c-quoted field\n\x00fkey-indexes\x00Usage %s sub-command ?switches...?\n\x00Where sub-commands are:\n\x00    fkey-indexes\n\x00stderr\x00wb\x00line\x00semi\x00prettyprint\x00INTEGER\x00no such table column: %s.%s\x00SAVEPOINT selftest_init;\nCREATE TABLE IF NOT EXISTS selftest(\n  tno INTEGER PRIMARY KEY,\n  op TEXT,\n  cmd TEXT,\n  ans TEXT\n);CREATE TEMP TABLE [_shell$self](op,cmd,ans);\nINSERT INTO [_shell$self](rowid,op,cmd)\n  VALUES(coalesce((SELECT (max(tno)+100)/10 FROM selftest),10),\n         'memo','Tests generated by --init');\nINSERT INTO [_shell$self]\n  SELECT 'run',\n    'SELECT hex(sha3_query(''SELECT type,name,tbl_name,sql FROM sqlite_master ORDER BY 2'',224))',\n    hex(sha3_query('SELECT type,name,tbl_name,sql FROM sqlite_master ORDER BY 2',224));\nINSERT INTO [_shell$self]\n  SELECT 'run',    'SELECT hex(sha3_query(''SELECT * FROM \"' ||        printf('%w',name) || '\" NOT INDEXED'',224))',\n    hex(sha3_query(printf('SELECT * FROM \"%w\" NOT INDEXED',name),224))\n  FROM (\n    SELECT name FROM sqlite_master\n     WHERE type='table'\n       AND name<>'selftest'\n       AND coalesce(rootpage,0)>0\n  )\n ORDER BY name;\nINSERT INTO [_shell$self]\n  VALUES('run','PRAGMA integrity_check','ok');\nINSERT INTO selftest(tno,op,cmd,ans)  SELECT rowid*10,op,cmd,ans FROM [_shell$self];\nDROP TABLE [_shell$self];\x00SELFTEST initialization failure: %s\n\x00RELEASE selftest_init\x00\\%03o\x00Memory Used:\x00%lld (max %lld) bytes\x00Number of Outstanding Allocations:\x00%lld (max %lld)\x00Number of Pcache Pages Used:\x00%lld (max %lld) pages\x00Number of Pcache Overflow Bytes:\x00Largest Allocation:\x00%lld bytes\x00Largest Pcache Allocation:\x00Lookaside Slots Used:                %d (max %d)\n\x00Successful lookaside attempts:       %d\n\x00Lookaside failures due to size:      %d\n\x00Lookaside failures due to OOM:       %d\n\x00Pager Heap Usage:                    %d bytes\n\x00Page cache hits:                     %d\n\x00Page cache misses:                   %d\n\x00Page cache writes:                   %d\n\x00Schema Heap Usage:                   %d bytes\n\x00Statement Heap/Lookaside Usage:      %d bytes\n\x00Fullscan Steps:                      %d\n\x00Sort Operations:                     %d\n\x00Autoindex Inserts:                   %d\n\x00Virtual Machine Steps:               %d\n\x00%.*s;\n\x00Next\x00Prev\x00VPrev\x00VNext\x00SorterNext\x00NextIfOpen\x00PrevIfOpen\x00Yield\x00SeekLT\x00SeekGT\x00RowSetRead\x00Rewind\x00Goto\x00%*s%s\x00%s%*s\x00CREATE TABLE ['\"]*\x00CREATE TABLE IF NOT EXISTS %s%s\x00&lt;\x00&amp;\x00&gt;\x00&quot;\x00&#39;\x00'%s'\x00'\x00replace(\x00\\n\x00\\012\x00\\r\x00\\015\x00,'%s',char(13))\x00,'%s',char(10))\x00X'\x00%02x\x00create\x00trigger\x00temporary\x00end\x00Error: near line %d:\x00Error:\x00changes: %3d   total_changes: %d\n\x00unable to close due to unfinalized statements or unfinished backups\x00%s at line %d of [%.10s]\x00NOCASE\x00RTRIM\x00invalid\x00unknown error\x00abort due to ROLLBACK\x00SHA3 size should be one of: 224 256 384 512\x00error SQL statement [%s]: %s\x00non-query: [%s]\x00S%d:\x00R\x00N\x00T%d:\x00B%d:\x00completion\x00TABLE\x00INDEX\x00UNIQUE INDEX\x00VIEW\x00TRIGGER\x00VIRTUAL TABLE\x00NaN\x00Inf\x00(NULL)\x00.\x00CREATE_INDEX\x00CREATE_TABLE\x00CREATE_TEMP_INDEX\x00CREATE_TEMP_TABLE\x00CREATE_TEMP_TRIGGER\x00CREATE_TEMP_VIEW\x00CREATE_TRIGGER\x00CREATE_VIEW\x00DELETE\x00DROP_INDEX\x00DROP_TABLE\x00DROP_TEMP_INDEX\x00DROP_TEMP_TABLE\x00DROP_TEMP_TRIGGER\x00DROP_TEMP_VIEW\x00DROP_TRIGGER\x00DROP_VIEW\x00INSERT\x00PRAGMA\x00READ\x00SELECT\x00TRANSACTION\x00UPDATE\x00ATTACH\x00DETACH\x00ALTER_TABLE\x00REINDEX\x00ANALYZE\x00CREATE_VTABLE\x00DROP_VTABLE\x00FUNCTION\x00SAVEPOINT\x00RECURSIVE\x00unknown database %s\x00destination database is in use\x00SELECT name, sql FROM sqlite_master WHERE %s\x00Error: (%d) %s on [%s]\n\x00%s... \x00Error: %s\nSQL: [%s]\n\x00done\n\x00SELECT name, sql FROM sqlite_master WHERE %s ORDER BY rowid DESC\x00SELECT * FROM \"%w\"\x00Error %d: %s on [%s]\n\x00INSERT OR IGNORE INTO \"%s\" VALUES(?\x00,?\x00);\x00Error %d: %s\n\x00%c\b\x00|/-\\\x00SELECT * FROM \"%w\" ORDER BY rowid DESC;\x00Warning: cannot step \"%s\" backwards\x00unopened\x00file change counter:\x00database page count:\x00freelist page count:\x00schema cookie:\x00schema format:\x00default cache size:\x00autovacuum top root:\x00incremental vacuum:\x00text encoding:\x00user version:\x00application id:\x00software version:\x00number of tables:\x00SELECT count(*) FROM %s WHERE type='table'\x00number of indexes:\x00SELECT count(*) FROM %s WHERE type='index'\x00number of triggers:\x00SELECT count(*) FROM %s WHERE type='trigger'\x00number of views:\x00SELECT count(*) FROM %s WHERE type='view'\x00schema size:\x00SELECT total(length(sql)) FROM %s\x00DELETE FROM sqlite_sequence;\n\x00sqlite_stat?\x00CREATE VIRTUAL TABLE\x00PRAGMA writable_schema=ON;\n\x00INSERT INTO sqlite_master(type,name,tbl_name,rootpage,sql)VALUES('table','%q','%q',0,'%q');\x00 FROM \x00API called with NULL prepared statement\x00API called with finalized prepared statement\x00bind on a busy prepared statement: [%s]\x00SELECT      'EXPLAIN QUERY PLAN SELECT rowid FROM ' || quote(s.name) || ' WHERE '  || group_concat(quote(s.name) || '.' || quote(f.[from]) || '=?'   || fkey_collate_clause(       f.[table], COALESCE(f.[to], p.[name]), s.name, f.[from]),' AND '),      'SEARCH TABLE ' || s.name || ' USING COVERING INDEX*('  || group_concat('*=?', ' AND ') || ')',      s.name  || '(' || group_concat(f.[from],  ', ') || ')',      f.[table] || '(' || group_concat(COALESCE(f.[to], p.[name])) || ')',      'CREATE INDEX ' || quote(s.name ||'_'|| group_concat(f.[from], '_'))  || ' ON ' || quote(s.name) || '('  || group_concat(quote(f.[from]) ||        fkey_collate_clause(          f.[table], COALESCE(f.[to], p.[name]), s.name, f.[from]), ', ')  || ');',      f.[table] FROM sqlite_master AS s, pragma_foreign_key_list(s.name) AS f LEFT JOIN pragma_table_info AS p ON (pk-1=seq AND p.arg=f.[table]) GROUP BY s.name, f.id ORDER BY (CASE WHEN ? THEN f.[table] ELSE s.name END)\x00SEARCH TABLE * USING INTEGER PRIMARY KEY (rowid=?)\x00-verbose\x00-groupbyparent\x00    \x00Usage: %s %s ?-verbose? ?-groupbyparent?\n\x00fkey_collate_clause\x00Error: internal error\x00-- Parent table %s\n\x00%s%s --> %s\n\x00%s/* no extra indexes required for %s -> %s */\n\x00not authorized\x00sqlite3_extension_init\x00%s.%s\x00unable to open shared library [%s]\x00sqlite3_\x00lib\x00_init\x00no entry point [%s] in shared library [%s]\x00error during initialization: %s\x00ROWID\x00OID\x00%-36s %s\n\x00/proc/%d/io\x00%-36s %s\x00addr\x00opcode\x00p1\x00p2\x00p3\x00p4\x00p5\x00comment\x00ABORT\x00ACTION\x00ADD\x00AFTER\x00ALL\x00ALTER\x00AND\x00AS\x00ASC\x00AUTOINCREMENT\x00BEFORE\x00BETWEEN\x00BY\x00CASCADE\x00CASE\x00CAST\x00CHECK\x00COLLATE\x00COLUMN\x00CONFLICT\x00CONSTRAINT\x00CREATE\x00CROSS\x00CURRENT_DATE\x00CURRENT_TIME\x00CURRENT_TIMESTAMP\x00DATABASE\x00DEFAULT\x00DEFERRABLE\x00DEFERRED\x00DESC\x00DISTINCT\x00DROP\x00EACH\x00ELSE\x00END\x00ESCAPE\x00EXCEPT\x00EXCLUSIVE\x00EXISTS\x00EXPLAIN\x00FAIL\x00FOR\x00FOREIGN\x00FROM\x00FULL\x00GLOB\x00GROUP\x00HAVING\x00IF\x00IGNORE\x00IMMEDIATE\x00IN\x00INDEXED\x00INITIALLY\x00INNER\x00INSTEAD\x00INTERSECT\x00INTO\x00IS\x00ISNULL\x00JOIN\x00KEY\x00LEFT\x00LIKE\x00LIMIT\x00MATCH\x00NATURAL\x00NO\x00NOT\x00NOTNULL\x00OF\x00OFFSET\x00ON\x00OR\x00ORDER\x00OUTER\x00PLAN\x00PRIMARY\x00QUERY\x00RAISE\x00REFERENCES\x00REGEXP\x00RELEASE\x00RENAME\x00REPLACE\x00RESTRICT\x00RIGHT\x00ROLLBACK\x00ROW\x00SET\x00TEMP\x00TEMPORARY\x00THEN\x00TO\x00UNION\x00UNIQUE\x00USING\x00VACUUM\x00VALUES\x00VIRTUAL\x00WHEN\x00WHERE\x00WITH\x00WITHOUT\x00(%s%u)\x00Run Time: real %.3f user %f sys %f\n\x00failed to allocate %u bytes of memory\x00failed memory resize %u to %u bytes\x00load_extension\x00sqlite_compileoption_used\x00sqlite_compileoption_get\x00unlikely\x00likelihood\x00likely\x00ltrim\x00rtrim\x00trim\x00min\x00max\x00typeof\x00instr\x00printf\x00unicode\x00char\x00abs\x00round\x00upper\x00lower\x00hex\x00ifnull\x00random\x00randomblob\x00nullif\x00sqlite_version\x00sqlite_source_id\x00sqlite_log\x00last_insert_rowid\x00total_changes\x00replace\x00zeroblob\x00substr\x00sum\x00total\x00avg\x00count\x00group_concat\x00glob\x00like\x00coalesce\x00unable to delete/modify collation sequence due to active statements\x00file:\x00localhost\x00invalid uri authority: %.*s\x00vfs\x00cache\x00access\x00no such %s mode: %s\x00%s mode not allowed: %s\x00no such vfs: %s\x00automatic extension loading failed: %s\x00API call with %s database connection pointer\x00not an error\x00SQL logic error\x00access permission denied\x00query aborted\x00database is locked\x00database table is locked\x00out of memory\x00attempt to write a readonly database\x00interrupted\x00disk I/O error\x00database disk image is malformed\x00unknown operation\x00database or disk is full\x00unable to open database file\x00locking protocol\x00database schema has changed\x00string or blob too big\x00constraint failed\x00datatype mismatch\x00bad parameter or other API misuse\x00authorization denied\x00column index out of range\x00file is not a database\x00unable to delete/modify user-function due to active statements\x00unable to open a temporary database file for storing temporary tables\x00@  \x00PRAGMA table_info=%Q\x00SELECT 1 FROM pragma_index_list(%Q) WHERE origin='pk'\x00PRAGMA reverse_unordered_selects\x00PRAGMA reverse_unordered_selects(%d)\x00database schema is locked: %s\x00statement too long\x00%.2x\x00%s constraint failed\x00%z: %s\x00abort at %d in [%s]: %s\x00cannot open savepoint - SQL statements in progress\x00no such savepoint: %s\x00cannot release savepoint - SQL statements in progress\x00cannot commit transaction - SQL statements in progress\x00cannot start a transaction within a transaction\x00cannot rollback - no transaction is active\x00cannot commit - no transaction is active\x00SELECT name, rootpage, sql FROM '%q'.%s WHERE %s ORDER BY rowid\x00too many levels of trigger recursion\x00cannot change %s wal mode from within a transaction\x00into\x00out of\x00database table is locked: %s\x00-- %s\x00statement aborts at %d: [%s] %s\x00nVal==4\x00 COLLATE %s\x00so\x001\x00CREATE TABLE x(type text,name text,tbl_name text,rootpage int,sql text)\x00attached databases must use the same text encoding as main database\x00unsupported file format\x00SELECT name, rootpage, sql FROM \"%w\".%s ORDER BY rowid\x00rchar: \x00Bytes received by read():\x00wchar: \x00Bytes sent to write():\x00syscr: \x00Read() system calls:\x00syscw: \x00Write() system calls:\x00read_bytes: \x00Bytes read from storage:\x00write_bytes: \x00Bytes written to storage:\x00cancelled_write_bytes: \x00Cancelled write bytes:\x00integer overflow\x00%.*f\x00%!.15g\x00%!.20e\x00LIKE or GLOB pattern too complex\x00ESCAPE expression must be a single character\x00sqlite_rename_table\x00sqlite_rename_trigger\x00sqlite_rename_parent\x00julianday\x00date\x00time\x00datetime\x00strftime\x00current_time\x00current_timestamp\x00current_date\x00unix\x00unix-none\x00unix-dotfile\x00unix-excl\x00shared\x00private\x00ro\x00rw\x00rwc\x00memory\x00-journal\x00\x00-wal\x00\x00nolock\x00immutable\x00CREATE TABLE x(  candidate TEXT,  prefix TEXT HIDDEN,  wholeline TEXT HIDDEN,  phase INT HIDDEN)\x00%z%sSELECT name FROM \"%w\".sqlite_master WHERE type='table'\x00 UNION \x00%z%sSELECT pti.name FROM \"%w\".sqlite_master AS sm JOIN pragma_table_info(sm.name,%Q) AS pti WHERE sm.type='table'\x00database corruption\x00recovered %d pages from %s\x00rowid\x00_rowid_\x00oid\x00selectid\x00order\x00from\x00detail\x00unrecognized token: \"%.*s\"\x00k(%d\x00BINARY\x00B\x00,%s%s\x00-\x00(%.20s)\x00%s(%d)\x00%lld\x00%.16g\x00(blob)\x00vtab:%p\x00,%d\x00]\x00program\x00NOT NULL\x00FOREIGN KEY\x00FOREIGN KEY constraint failed\x00create \x00invalid rootpage\x00SELECT tbl,idx,stat FROM %Q.sqlite_stat1\x00Main freelist: \x00Page %d is never used\x00Pointer map page %d is referenced\x00cannot VACUUM from within a transaction\x00cannot VACUUM - SQL statements in progress\x00ATTACH''AS vacuum_db\x00SELECT sql FROM \"%w\".sqlite_master WHERE type='table'AND name<>'sqlite_sequence' AND coalesce(rootpage,1)>0\x00SELECT sql FROM \"%w\".sqlite_master WHERE type='index' AND length(sql)>10\x00SELECT'INSERT INTO vacuum_db.'||quote(name)||' SELECT*FROM\"%w\".'||quote(name)FROM vacuum_db.sqlite_master WHERE type='table'AND coalesce(rootpage,1)>0\x00INSERT INTO vacuum_db.sqlite_master SELECT*FROM \"%w\".sqlite_master WHERE type IN('view','trigger') OR(type='table'AND rootpage=0)\x00no such module: %s\x00-- \x00'%.*q'\x00zeroblob(%d)\x00x'\x00%s-mjXXXXXX9XXz\x00MJ delete: %s\x00MJ collide: %s\x00-mj%06X9%02X\x00\x00\x00\x00cannot open virtual table: %s\x00cannot open table without rowid: %s\x00cannot open view: %s\x00no such column: \"%s\"\x00foreign key\x00indexed\x00cannot open %s column for writing\x00SQLITE_\x00unknown database: %s\x00integer\x00real\x00text\x00blob\x00null\x00%.*s\"%w\"%s\x00%s%.*s\"%w\"\x00%04d-%02d-%02d\x00%02d:%02d:%02d\x00%04d-%02d-%02d %02d:%02d:%02d\x00%02d\x00%06.3f\x00%03d\x00%04d\x00unlink\x00fsync\x00lstat\x00readlink\x00/dev/urandom\x00cannot open file\x00unable to use function %s in the requested context\x00cannot limit WAL size: %s\x00Savepoint\x00AutoCommit\x00Transaction\x00Checkpoint\x00JournalMode\x00Vacuum\x00VFilter\x00VUpdate\x00Gosub\x00InitCoroutine\x00MustBeInt\x00Jump\x00Not\x00Once\x00If\x00IfNot\x00IfNullRow\x00SeekLE\x00SeekGE\x00NoConflict\x00NotFound\x00Found\x00SeekRowid\x00NotExists\x00Last\x00IfSmaller\x00SorterSort\x00Sort\x00IdxLE\x00IdxGT\x00IdxLT\x00IdxGE\x00Or\x00And\x00RowSetTest\x00Program\x00FkIfZero\x00IfPos\x00IfNotZero\x00IsNull\x00NotNull\x00Ne\x00Eq\x00Gt\x00Le\x00Lt\x00Ge\x00ElseNotEq\x00DecrJumpZero\x00IncrVacuum\x00Init\x00Return\x00EndCoroutine\x00HaltIfNull\x00Halt\x00Integer\x00Int64\x00String\x00Null\x00SoftNull\x00Blob\x00Variable\x00Move\x00Copy\x00SCopy\x00IntCopy\x00ResultRow\x00CollSeq\x00AddImm\x00RealAffinity\x00Cast\x00Permutation\x00BitAnd\x00BitOr\x00ShiftLeft\x00ShiftRight\x00Add\x00Subtract\x00Multiply\x00Divide\x00Remainder\x00Concat\x00Compare\x00BitNot\x00Column\x00String8\x00Affinity\x00MakeRecord\x00Count\x00ReadCookie\x00SetCookie\x00ReopenIdx\x00OpenRead\x00OpenWrite\x00OpenDup\x00OpenAutoindex\x00OpenEphemeral\x00SorterOpen\x00SequenceTest\x00OpenPseudo\x00Close\x00ColumnsUsed\x00Sequence\x00NewRowid\x00Insert\x00InsertInt\x00Delete\x00ResetCount\x00SorterCompare\x00SorterData\x00RowData\x00Rowid\x00NullRow\x00SeekEnd\x00SorterInsert\x00IdxInsert\x00IdxDelete\x00DeferredSeek\x00IdxRowid\x00Destroy\x00Real\x00Clear\x00ResetSorter\x00CreateBtree\x00SqlExec\x00ParseSchema\x00LoadAnalysis\x00DropTable\x00DropIndex\x00DropTrigger\x00IntegrityCk\x00RowSetAdd\x00Param\x00FkCounter\x00MemMax\x00OffsetLimit\x00AggStep0\x00AggStep\x00AggFinal\x00Expire\x00TableLock\x00VBegin\x00VCreate\x00VDestroy\x00VOpen\x00VColumn\x00VRename\x00Pagecount\x00MaxPgcnt\x00PureFunc0\x00Function0\x00PureFunc\x00Function\x00CursorHint\x00Noop\x00Explain\x00malformed database schema (%s)\x00%z - %s\x00!\x00 \x00\x1e\x00\x1c\x00\x1a\x00\x00%d of %d pages missing from overflow list starting at %d\x00failed to get page %d\x00freelist leaf count too big on page %d\x00free-page count in header is too small\x00Failed to read ptrmap key=%d\x00Bad ptr map entry key=%d expected=(%d,%d) got=(%d,%d)\x00Page %d: \x00unable to get the page. error code=%d\x00btreeInitPage() returns error code %d\x00On tree page %d cell %d: \x00On page %d at right child: \x00Offset %d out of range %d..%d\x00Extends off end of page\x00Rowid %lld out of order\x00Child page depth differs\x00Multiple uses for byte %u of page %d\x00Fragmentation of %d bytes reported as %d on page %d\x00delete\x00persist\x00truncate\x00wal\x00vtable constructor called recursively: %s\x00vtable constructor failed: %s\x00vtable constructor did not declare schema: %s\x00hidden\x00sqlite3_get_table() called with two or more incompatible queries\x00no such view\x00no such table\x00pragma_\x00%s: %s.%s\x00%s: %s\x00cannot open value of type %s\x00no such rowid: %lld\x00%s/etilqs_%llx%c\x00modeof\x00attempt to open \"%s\" as file descriptor %d\x00/dev/null\x00os_unix.c:%d: (%d) %s(%s) - %s\x00close\x00getcwd\x00stat\x00fstat\x00ftruncate\x00fcntl\x00pread\x00pread64\x00write\x00pwrite\x00pwrite64\x00fchmod\x00fallocate\x00openDirectory\x00mkdir\x00rmdir\x00fchown\x00geteuid\x00mmap\x00munmap\x00mremap\x00getpagesize\x00ioctl\x00psow\x00%s.lock\x00unknown table option: %.*s\x00\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00set list\x00near \"%T\": syntax error\x00too many arguments on function %T\x00qualified table names are not allowed on INSERT, UPDATE, and DELETE statements within triggers\x00the INDEXED BY clause is not allowed on UPDATE or DELETE statements within triggers\x00the NOT INDEXED clause is not allowed on UPDATE or DELETE statements within triggers\x00922337203685477580\x00unordered*\x00sz=[0-9]*\x00noskipscan*\x00invalid page number %d\x002nd reference to page %d\x00HAVE_ISNAN\x00THREADSAFE=1\x00now\x00localtime\x00unixepoch\x00utc\x00weekday \x00start of \x00month\x00year\x00day\x00SQLITE_TMPDIR\x00TMPDIR\x00cannot fstat db file %s\x00file unlinked while open: %s\x00multiple links to file: %s\x00file renamed while open: %s\x00parser stack overflow\x00temporary table name must be unqualified\x00table %T already exists\x00there is already an index named %s\x00AUTOINCREMENT not allowed on WITHOUT ROWID tables\x00PRIMARY KEY missing on table %s\x00view\x00CREATE %s %.*s\x00UPDATE %Q.%s SET type='%s', name=%Q, tbl_name=%Q, rootpage=#%d, sql=%Q WHERE rowid=#%d\x00CREATE TABLE %Q.sqlite_sequence(name,seq)\x00tbl_name='%q' AND type!='trigger'\x00too many columns on %s\x00duplicate column name: %s\x00default value of column [%s] is not constant\x00table \"%s\" has more than one primary key\x00AUTOINCREMENT is only allowed on an INTEGER PRIMARY KEY\x00index\x00cannot create a TEMP index on non-TEMP table \"%s\"\x00altertab_\x00table %s may not be indexed\x00views may not be indexed\x00virtual tables may not be indexed\x00there is already a table named %s\x00index %s already exists\x00sqlite_autoindex_%s_%d\x00expressions prohibited in PRIMARY KEY and UNIQUE constraints\x00conflicting ON CONFLICT clauses specified\x00CREATE%s INDEX %.*s\x00 UNIQUE\x00INSERT INTO %Q.%s VALUES('index',%Q,%Q,#%d,%Q);\x00name='%q' AND type='index'\x00foreign key on %s should reference only one column of table %T\x00number of columns in foreign key does not match the number of columns in the referenced table\x00unknown column \"%s\" in foreign key definition\x00sqlite_stat\x00table %s may not be dropped\x00use DROP TABLE to delete table %s\x00use DROP VIEW to delete view %s\x00tbl\x00parameters are not allowed in views\x00expected %d columns for '%s' but got %d\x00GROUP BY\x00RIGHT PART OF ORDER BY\x00ORDER BY\x00too many terms in compound SELECT\x00a JOIN clause is required before %s\x00unknown or unsupported join type: %T %T%s%T\x00RIGHT and FULL OUTER JOINs are not currently supported\x00rows deleted\x00too many columns in %s\x00no such column: %s\x00rows updated\x00%d columns assigned %d values\x00table %S has no column named %s\x00table %S has %d columns but %d values were supplied\x00%d values for %d columns\x00rows inserted\x00variable number must be between ?1 and ?%d\x00too many SQL variables\x000\x00syntax error after column name \"%.*s\"\x00no such index: %S\x00index associated with UNIQUE or PRIMARY KEY constraint cannot be dropped\x00DELETE FROM %Q.%s WHERE name=%Q AND type='index'\x00idx\x00-%T\x00fast\x00normal\x00exclusive\x00not a writable directory\x00Safety level may not be changed inside a transaction\x00issisi\x00iisX\x00isiX\x00c\x00u\x00pk\x00isisi\x00iss\x00is\x00iissssss\x00NONE\x00siX\x00*** in database %s ***\n\x00NULL value in %s.%s\x00CHECK constraint failed in %s\x00row \x00 missing from index \x00non-unique entry in index \x00wrong # of entries in index \x00ok\x00unsupported encoding: %s\x00restart\x00ANALYZE \"%w\".\"%w\"\x00INSERT INTO %Q.%s VALUES('trigger',%Q,%Q,0,'CREATE TRIGGER %q')\x00type='trigger' AND name='%q'\x00temporary trigger may not have qualified name\x00cannot create triggers on virtual tables\x00trigger %T already exists\x00cannot create trigger on system table\x00cannot create %s trigger on view: %S\x00cannot create INSTEAD OF trigger on table: %S\x00no such trigger: %S\x00unable to identify the object to be reindexed\x00there is already another table or index with this name: %s\x00view %s may not be altered\x00UPDATE \"%w\".%s SET sql = sqlite_rename_parent(sql, %Q, %Q) WHERE %s;\x00UPDATE %Q.%s SET sql = CASE WHEN type = 'trigger' THEN sqlite_rename_trigger(sql, %Q)ELSE sqlite_rename_table(sql, %Q) END, tbl_name = %Q, name = CASE WHEN type='table' THEN %Q WHEN name LIKE 'sqlite_autoindex%%' AND type='index' THEN 'sqlite_autoindex_' || %Q || substr(name,%d+18) ELSE name END WHERE tbl_name=%Q COLLATE nocase AND (type='table' OR type='index' OR type='trigger');\x00UPDATE \"%w\".sqlite_sequence set name = %Q WHERE name = %Q\x00UPDATE sqlite_temp_master SET sql = sqlite_rename_trigger(sql, %Q), tbl_name = %Q WHERE %s;\x00Cannot add a PRIMARY KEY column\x00Cannot add a UNIQUE column\x00Cannot add a REFERENCES column with non-NULL default value\x00Cannot add a NOT NULL column with default value NULL\x00Cannot add a column with non-constant default\x00UPDATE \"%w\".%s SET sql = substr(sql,1,%d) || ', ' || %Q || substr(sql,%d) WHERE type = 'table' AND name = %Q\x00virtual tables may not be altered\x00Cannot add a column to a view\x00sqlite_altertab_%s\x00CREATE VIRTUAL TABLE %T\x00UPDATE %Q.%s SET type='table', name=%Q, tbl_name=%Q, rootpage=0, sql=%Q WHERE rowid=#%d\x00name='%q' AND type='table'\x00duplicate WITH table name: %s\x0040f-21a-21d\x0020c:20e\x0020e\x00non-deterministic function in index expression or CHECK constraint\x00local time unavailable\x00second\x00minute\x00hour\x00full_fsync\x00/var/tmp\x00/usr/tmp\x00/tmp\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00recovered %d frames from WAL file %s\x00corrupt database\x00unknown database %T\x00object name reserved for internal use: %s\x00,\n  \x00\n)\x00CREATE TABLE \x00Expression tree is too large (maximum depth %d)\x00%s %T cannot reference objects in database %s\x00view %s is circularly defined\x00sqlite_stat%d\x00DELETE FROM %Q.%s WHERE %s=%Q\x00DELETE FROM %Q.sqlite_sequence WHERE name=%Q\x00DELETE FROM %Q.%s WHERE tbl_name=%Q and type!='trigger'\x00column%d\x00%s clause should come after %s not before\x00at most %d tables in a join\x00USE TEMP B-TREE FOR %s\x00DISTINCT aggregates must have exactly one argument\x00SCAN TABLE %s%s%s\x00 USING COVERING INDEX \x00table %s may not be modified\x00cannot modify %s because it is a view\x00UPDATE %Q.%s SET rootpage=%d WHERE #%d AND rootpage=#%d\x00UTF8\x00UTF-8\x00UTF-16le\x00UTF-16be\x00UTF16le\x00UTF16be\x00UTF-16\x00UTF16\x00none\x00incremental\x00temporary storage cannot be changed from within a transaction\x00SET NULL\x00SET DEFAULT\x00NO ACTION\x00foreign key mismatch - \"%w\" referencing \"%w\"\x00%s cannot use variables\x00DELETE FROM %Q.%s WHERE name=%Q AND type='trigger'\x00sqlite_attach\x00sqlite_detach\x00table %s may not be altered\x00type='trigger' AND (%s)\x00tbl_name=%Q\x00application_id\x00auto_vacuum\x00automatic_index\x00busy_timeout\x00cache_size\x00cache_spill\x00case_sensitive_like\x00cell_size_check\x00checkpoint_fullfsync\x00collation_list\x00compile_options\x00count_changes\x00data_version\x00database_list\x00default_cache_size\x00defer_foreign_keys\x00empty_result_callbacks\x00encoding\x00foreign_key_check\x00foreign_key_list\x00foreign_keys\x00freelist_count\x00full_column_names\x00fullfsync\x00ignore_check_constraints\x00incremental_vacuum\x00index_info\x00index_list\x00index_xinfo\x00integrity_check\x00journal_mode\x00journal_size_limit\x00legacy_file_format\x00locking_mode\x00max_page_count\x00mmap_size\x00optimize\x00page_count\x00page_size\x00query_only\x00quick_check\x00read_uncommitted\x00recursive_triggers\x00reverse_unordered_selects\x00schema_version\x00secure_delete\x00short_column_names\x00shrink_memory\x00soft_heap_limit\x00synchronous\x00table_info\x00temp_store\x00temp_store_directory\x00threads\x00user_version\x00wal_autocheckpoint\x00wal_checkpoint\x00writable_schema\x00CREATE TABLE x\x00%c\"%s\"\x00(\"%s\"\x00,arg HIDDEN\x00,schema HIDDEN\x00PRAGMA \x00%Q.\x00=%Q\x0020b:20e\x00%s-shm\x00readonly_shm\x00misuse of aggregate: %s()\x00unknown function: %s()\x00row value misused\x00RAISE() may only be used within a trigger-program\x00authorizer malfunction\x00%.*z:%u\x00 TEXT\x00 NUM\x00 INT\x00 REAL\x00no such index: %s\x00no such collation sequence: %s\x00index '%q'\x00, \x00UNION ALL\x00recursive aggregate queries not supported\x00COMPOUND SUBQUERIES %d AND %d %s(%s)\x00USING TEMP B-TREE \x00too many arguments on %s() - max %d\x00no query solution\x00automatic index on %s(%s)\x00auto-index\x00SEARCH\x00SCAN\x00 SUBQUERY %d\x00 TABLE %s\x00 AS %s\x00PRIMARY KEY\x00AUTOMATIC PARTIAL COVERING INDEX\x00AUTOMATIC COVERING INDEX\x00COVERING INDEX %s\x00INDEX %s\x00 USING \x00=\x00>? AND rowid<\x00>\x00<\x00 USING INTEGER PRIMARY KEY (rowid%s?)\x00 VIRTUAL TABLE INDEX %d:%s\x00\x1b\x19\x18\x1a\x00the \".\" operator\x00second argument to likelihood() must be a constant between 0.0 and 1.0\x00not authorized to use function: %s\x00non-deterministic functions\x00misuse of aggregate function %.*s()\x00no such function: %.*s\x00wrong number of arguments to function %.*s()\x00subqueries\x00parameters\x00a GROUP BY clause is required before HAVING\x00aggregate functions are not allowed in the GROUP BY clause\x00%s.rowid\x00%s.%z\x00access to %z is prohibited\x00old\x00cid\x00name\x00type\x00notnull\x00dflt_value\x00wdth\x00hght\x00flgs\x00seqno\x00desc\x00coll\x00key\x00seq\x00unique\x00origin\x00partial\x00file\x00builtin\x00id\x00to\x00on_update\x00on_delete\x00match\x00parent\x00fkid\x00busy\x00checkpointed\x00database\x00status\x00too many attached databases - max %d\x00database %s is already in use\x00database is already attached\x00unable to open database: %s\x00no such database: %s\x00cannot detach database %s\x00database %s is locked\x00CREATE TABLE %Q.%s(%s)\x00BBB\x00name=%Q\x00%s OR name=%Q\x000x\x00hex literal too big: %s%s\x00sub-select returns %d columns - expected %d\x00EXECUTE %s%s SUBQUERY %d\x00CORRELATED \x00LIST\x00SCALAR\x00subquery_%p\x00too many references to \"%s\": max 65535\x00*\x00%s.%s.%s\x00no such table: %s\x00no tables specified\x00too many columns in result set\x00too many terms in %s BY clause\x00ON clause references tables to its right\x00 (\x00%s=?\x00ANY(%s)\x00USING INDEX %s FOR IN-OPERATOR\x00partial index WHERE clauses\x00index expressions\x00CHECK constraints\x00%s prohibited in %s\x00misuse of aliased aggregate %s\x00no such column\x00ambiguous column name\x00%s: %s.%s.%s\x00all VALUES must have the same number of terms\x00SELECTs to the left and right of %s do not have the same number of result columns\x00too many terms in ORDER BY clause\x00%r ORDER BY term does not match any column in the result set\x00-- TRIGGER %s\x00tbl,idx,stat\x00stat_init\x00stat_push\x00multiple references to recursive table: %s\x00circular reference: %s\x00table %s has %d values for %d columns\x00multiple recursive references: %s\x00recursive reference in a subquery: %s\x00'%s' is not a function\x00a NATURAL join may not have an ON or USING clause\x00cannot have both ON and USING clauses in the same join\x00cannot join using column %s - column not present in both tables\x00%r %s BY term out of range - should be between 1 and %d\x00%s.xBestIndex malfunction\x00<expr>\x00stat_get\x00regexp\x00%llu\x00 %llu\x00")
)

func bool2int(b bool) int32 {
	if b {
		return 1
	}

	return 0
}
